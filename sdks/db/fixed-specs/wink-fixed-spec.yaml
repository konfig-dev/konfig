openapi: 3.0.1
info:
  title: Wink API
  description: >-
    ## APIs

    Not every integrator needs every APIs. For that reason, we have separated
    APIs into context.


    - [Affiliate](https://api.wink.travel): All APIs related to selling travel
    inventory as an affiliate.

    - [Analytics](https://api.wink.travel): All APIs related to tracking metrics
    across a wide variety of data source segments including, more entertaining,
    leaderboard metrics.

    - [Booking](https://api.wink.travel): All APIs related to creating platform
    bookings.

    - [Channel Manager](https://api.wink.travel): All APIs related to channel
    managers who want to integrate with our platform.

    - [Extranet](https://api.wink.travel): All APIs related to managing travel
    inventory and suppliers.

    - [Inventory](https://api.wink.travel): All APIs related to retrieve known
    travel inventory as it was found using the Lookup API..

    - [Lookup](https://api.wink.travel): All APIs related to locating inventory
    by region, locale and property flags.

    - [Reference](https://api.wink.travel): All APIs related to retrieving
    platform-supported taxonomies.

    - [TripPay](https://api.wink.travel): All APIs related to TripPay account
    management, booking, mapping and integration features.


    ## SDKs

    We are actively working on supporting the most used languages out there. If
    you don't see your language here, reach out to us with a request to
    officially add your language. In the meantime, if you want to roll your own
    SDK, you can do so by downloading the OpenAPI spec and using one of the many
    available OpenAPI generators available:
    [https://openapi-generator.tech/docs/generators](https://openapi-generator.tech/docs/generators).


    - Java SDK
    [https://github.com/wink-travel/wink-sdk-java](https://github.com/wink-travel/wink-sdk-java)


    ## Usage

    These features are made available to you via a [REST
    API](https://en.wikipedia.org/wiki/Representational_state_transfer). This
    API is language agnostic.


    ## Versioning

    We chose to version our endpoints in a way that we hope affects your
    integration with us the least. You request the version of our API you wish
    to work with via the `Wink-Version` header. When it's time for you to
    upgrade, you only have to change the version number to get access to our
    updated endpoints.


    ## Release history

    - 2022-10-15: v2.0 - Removed HATEOAS and added Wink-Version header

    - 2022-05-08: v1 - Exposed channel manager API

    - 2021-07-01: v1 - Initial release


    # Affiliate API

    Welcome to the Affiliate API - A programmer-friendly way to search for and
    display bespoke travel inventory for your audience. Use this API to help you
    prepare travel inventory for sale.


    # Intended Audience

    Programmers are a requirement to start integrating with wink. You will
    benefit from an API integration if you are new or existing travel related
    company that want easy access to great inventory.## Examples:

    - Hotel brands / chains that want to make their own booking engine

    - Travel tech companies that want to create the next hot mobile travel app

    - Destination sites that want to make their own booking engine

    - Bloggers and influencers who want to sell travel inventory to their
    audience

    - OTAs that want access direct relationships with suppliers and better
    quality hotel inventory
  version: 29.54.1
  contact:
    name: Bjorn Harvold
    email: bjorn@wink.travel
  x-logo:
    backgroundColor: '#FFFFFF'
    altText: wink
    url: >-
      https://res.cloudinary.com/traveliko/image/upload/c_scale,h_129/v1653285543/wink/logo_text_white.svg
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - description: Production endpoint
    url: https://api.wink.travel
  - description: Sandbox endpoint
    url: https://staging-api.wink.travel
  - description: Developer endpoint
    url: https://dev-api.wink.travel
tags:
  - description: >-
      Grids are made up of 3 categories of lists: 


      - Cured lists

      - Saved searches

      - Ranked lists


      The way to display these lists through our Web Components is by creating
      and configuring lists.
    name: Inventory Grids
  - description: Manage curated list entries and categories for your various Wink accounts.
    name: Syndication Entry Publisher
  - description: >-
      Before you can sell travel inventory, you need to find it. Discover travel
      inventory that fits your niche and your audience.
    name: Discover
  - description: >-
      Configure and manage maps, map data and overlays that you wish to display
      to your users.
    name: Maps
  - description: Manage companies.
    name: Company
  - description: >-
      Card inventory is a single travel inventory record a seller has configured
      and made available for sale.
    name: Inventory Cards
  - description: >-
      Links are the simplest form of travel inventory and can be shared
      everywhere and contains OpenGraph metadata. The same links can also be
      used with our ad banner Web Component.
    name: Shareable Links
  - description: >-
      Use the Application API to create applications to interface with the
      TripPay API.
    name: Application
  - description: >-
      Manage configuration templates you can assign to our Web Components such
      as look-and-feel, integrations with 3rd parties and more.
    name: Customization
  - description: >-
      Supplier links are a direct link to supplier homepage that also includes
      OpenGraph friendly metadata.
    name: Supplier Links
  - description: Track bookings for a company.
    name: Bookings
  - description: Allows suppliers to browse for suppliers to connect with
    name: Supplier
  - description: >-
      Account relationships are initiated by either affiliate or company and
      allows for companys to give sales channel specific pricing to affiliates
      on an individual basis.
    name: Hotel Relationship Requests
  - description: Notifications API
    name: Notification
  - description: Retrieve past and upcoming invoices for company.
    name: Invoice
  - description: Displays relationships between affiliates and suppliers.
    name: Sales channel
  - description: Simple GET request to show that your configuration works.
    name: Test
  - description: Suppliers and inventory by category.
    name: Search Categories
  - description: >-
      Affiliates can connect with suppliers that are not yet in the system by
      creating leads. We will reach out to those suppliers and ask them to join
      and make it easy for them by pre-creating their profile.
    name: Affiliate Lead
  - description: Campaign API
    name: Campaign
paths:
  /api/company/{companyIdentifier}/supplier-url/{supplierUrlIdentifier}:
    get:
      tags:
        - Supplier Links
      summary: Show Link
      operationId: SupplierLinks_getShareableUrl
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a specific shareable url for this seller
      parameters:
        - description: Show link owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Show link with this identifier.
          name: supplierUrlIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierUrlView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetShareableUrlResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierLinksGetShareableUrl400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetShareableUrl415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetShareableUrl415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetShareableUrl415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetShareableUrl415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierLinksGetShareableUrl503Response'
    put:
      tags:
        - Supplier Links
      summary: Update link
      operationId: SupplierLinks_modifyUrlLink
      security:
        - oauth2ClientCredentials: []
      description: Modify a shareable link
      parameters:
        - description: Update link owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Update url with this identifier.
          name: supplierUrlIdentifier
          in: path
          required: true
          schema:
            type: string
          example: seller-url-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSupplierUrlRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierUrlView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksModifyUrlLinkResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierLinksModifyUrlLink400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksModifyUrlLink415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SupplierLinksModifyUrlLink415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SupplierLinksModifyUrlLink415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SupplierLinksModifyUrlLink415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierLinksModifyUrlLink503Response'
    delete:
      tags:
        - Supplier Links
      summary: Delete Link
      operationId: SupplierLinks_deleteLink
      security:
        - oauth2ClientCredentials: []
      description: Delete a shareable link
      parameters:
        - description: Remove link owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Remove url with this identifier.
          name: supplierUrlIdentifier
          in: path
          required: true
          schema:
            type: string
          example: seller-url-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksDeleteLinkResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierLinksDeleteLink400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksDeleteLink415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SupplierLinksDeleteLink415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SupplierLinksDeleteLink415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SupplierLinksDeleteLink415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierLinksDeleteLink503Response'
  /api/company/{companyIdentifier}/static/list/{listIdentifier}:
    put:
      tags:
        - Inventory Grids
      summary: Update Curated List
      operationId: InventoryGrids_updateCuratedListByIdentifier
      security:
        - oauth2ClientCredentials: []
      description: Update curated list by its unique identifier
      parameters:
        - description: Update curated list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: List identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticSellerList_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticSellerListWrapper_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedListByIdentifierResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedListByIdentifier400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedListByIdentifier415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedListByIdentifier415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedListByIdentifier415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedListByIdentifier415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedListByIdentifier503Response
    delete:
      tags:
        - Inventory Grids
      summary: Remove Curated List
      operationId: InventoryGrids_removeCuratedList
      security:
        - oauth2ClientCredentials: []
      description: Remove curated list by list identifier
      parameters:
        - description: Remove curated list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: List identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsRemoveCuratedListResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList503Response
  /api/company/{companyIdentifier}/static/list/{listIdentifier}/item/{itemIdentifier}:
    put:
      tags:
        - Inventory Grids
      summary: Move List Item
      operationId: InventoryGrids_moveListItem
      security:
        - oauth2ClientCredentials: []
      description: Move an existing list item from one list to another.
      parameters:
        - description: Move inventory to curated list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: List identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - description: Item identifier.
          name: itemIdentifier
          in: path
          required: true
          schema:
            type: string
          example: item-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CopyMoveStaticSellerListItemRequest_Affiliate
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsMoveListItemResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsMoveListItem400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsMoveListItem415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsMoveListItem415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsMoveListItem415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryGridsMoveListItem415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsMoveListItem503Response'
    post:
      tags:
        - Inventory Grids
      summary: Copy Item to List
      operationId: InventoryGrids_copyItemToList
      security:
        - oauth2ClientCredentials: []
      description: Copy an existing list item from one list to another.
      parameters:
        - description: Copy inventory to curated list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: List identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - description: Item identifier.
          name: itemIdentifier
          in: path
          required: true
          schema:
            type: string
          example: item-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CopyMoveStaticSellerListItemRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsCopyItemToListResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsCopyItemToList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsCopyItemToList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsCopyItemToList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsCopyItemToList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryGridsCopyItemToList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsCopyItemToList503Response'
    delete:
      tags:
        - Inventory Grids
      summary: Delete List Item
      operationId: InventoryGrids_deleteListItemByIdentifier
      security:
        - oauth2ClientCredentials: []
      description: Delete a list item from a curated list by its unique identifier
      parameters:
        - description: Remove inventory from curated list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: List identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - description: Item identifier.
          name: itemIdentifier
          in: path
          required: true
          schema:
            type: string
          example: item-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsDeleteListItemByIdentifierResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsDeleteListItemByIdentifier400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsDeleteListItemByIdentifier415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsDeleteListItemByIdentifier415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsDeleteListItemByIdentifier415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsDeleteListItemByIdentifier415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsDeleteListItemByIdentifier503Response
  /api/company/{companyIdentifier}/seller-url/{sellerUrlIdentifier}:
    get:
      tags:
        - Shareable Links
      summary: Show Link
      operationId: ShareableLinks_getSpecificUrl
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a specific shareable url for this seller
      parameters:
        - description: Show link owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Show link with this identifier.
          name: sellerUrlIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerUrlView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSpecificUrlResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSpecificUrl400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSpecificUrl415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSpecificUrl415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSpecificUrl415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSpecificUrl415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSpecificUrl503Response'
    put:
      tags:
        - Shareable Links
      summary: Update link
      operationId: ShareableLinks_modifyLink
      security:
        - oauth2ClientCredentials: []
      description: Modify a shareable link
      parameters:
        - description: Update link owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Update url with this identifier.
          name: sellerUrlIdentifier
          in: path
          required: true
          schema:
            type: string
          example: seller-url-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSellerUrlRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerUrlView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksModifyLinkResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksModifyLink400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksModifyLink415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksModifyLink415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksModifyLink415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ShareableLinksModifyLink415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksModifyLink503Response'
    delete:
      tags:
        - Shareable Links
      summary: Delete Link
      operationId: ShareableLinks_deleteLink
      security:
        - oauth2ClientCredentials: []
      description: Delete a shareable link
      parameters:
        - description: Remove link owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Remove url with this identifier.
          name: sellerUrlIdentifier
          in: path
          required: true
          schema:
            type: string
          example: seller-url-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksDeleteLinkResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksDeleteLink400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksDeleteLink415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksDeleteLink415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksDeleteLink415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ShareableLinksDeleteLink415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksDeleteLink503Response'
  /api/company/{companyIdentifier}/map/{mapIdentifier}:
    get:
      tags:
        - Maps
      summary: Show Map
      operationId: Maps_getRecord
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a specific map record
      parameters:
        - description: Show map record owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Show map record with this identifier.
          name: mapIdentifier
          in: path
          required: true
          schema:
            type: string
          example: map-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsGetRecordResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsGetRecord400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsGetRecord415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/MapsGetRecord415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/MapsGetRecord415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/MapsGetRecord415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsGetRecord503Response'
    put:
      tags:
        - Maps
      summary: Update Map
      operationId: Maps_updateAdvancedConfiguration
      security:
        - oauth2ClientCredentials: []
      description: Update an advanced map configuration
      parameters:
        - description: Update map owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: update map record with this identifier.
          name: mapIdentifier
          in: path
          required: true
          schema:
            type: string
          example: map-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpsertAdvancedMapConfigurationRequest_Affiliate
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsUpdateAdvancedConfigurationResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/MapsUpdateAdvancedConfiguration400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MapsUpdateAdvancedConfiguration415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/MapsUpdateAdvancedConfiguration415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/MapsUpdateAdvancedConfiguration415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/MapsUpdateAdvancedConfiguration415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/MapsUpdateAdvancedConfiguration503Response
    delete:
      tags:
        - Maps
      summary: Delete Map
      operationId: Maps_deleteMapConfiguration
      security:
        - oauth2ClientCredentials: []
      description: Remove an advanced map configuration
      parameters:
        - description: Remove map owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Remove map record with this identifier.
          name: mapIdentifier
          in: path
          required: true
          schema:
            type: string
          example: map-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsDeleteMapConfigurationResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsDeleteMapConfiguration400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsDeleteMapConfiguration415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/MapsDeleteMapConfiguration415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/MapsDeleteMapConfiguration415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/MapsDeleteMapConfiguration415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsDeleteMapConfiguration503Response'
  /api/company/{companyIdentifier}/inventory/ranked/list/{listIdentifier}:
    get:
      tags:
        - Inventory Grids
      summary: Show Ranked Grid
      operationId: InventoryGrids_getSpecificRankedGrid
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a specific ranked grid.
      parameters:
        - description: Retrieve grid for owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Retrieve grid with this identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: ranked-grid-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryRankedListView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificRankedGridResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificRankedGrid400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificRankedGrid415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificRankedGrid415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificRankedGrid415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificRankedGrid415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificRankedGrid503Response
    put:
      tags:
        - Inventory Grids
      summary: Update Ranked Grid
      operationId: InventoryGrids_updateRankedGrid
      security:
        - oauth2ClientCredentials: []
      description: Update existing ranked grid
      parameters:
        - description: Update list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Update list with this identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpsertSellerInventoryRankedListRequest_Affiliate
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryRankedListView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsUpdateRankedGridResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateRankedGrid400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsUpdateRankedGrid415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsUpdateRankedGrid415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsUpdateRankedGrid415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryGridsUpdateRankedGrid415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsUpdateRankedGrid503Response'
    delete:
      tags:
        - Inventory Grids
      summary: Delete Ranked Grid
      operationId: InventoryGrids_deleteRankedGrid
      security:
        - oauth2ClientCredentials: []
      description: Delete a ranked grid
      parameters:
        - description: Remove grid owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Delete grid with this identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: ranked-grid-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsDeleteRankedGridResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsDeleteRankedGrid400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsDeleteRankedGrid415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsDeleteRankedGrid415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsDeleteRankedGrid415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryGridsDeleteRankedGrid415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsDeleteRankedGrid503Response'
  /api/company/{companyIdentifier}/inventory/list/{listIdentifier}:
    get:
      tags:
        - Inventory Grids
      summary: Show Grid
      operationId: InventoryGrids_getSpecificCuratedList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a specific curated / saved search list.
      parameters:
        - description: Show seller inventory lists owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Retrieve list with this identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryListView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificCuratedListResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificCuratedList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificCuratedList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificCuratedList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificCuratedList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificCuratedList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSpecificCuratedList503Response
    put:
      tags:
        - Inventory Grids
      summary: Update Grid
      operationId: InventoryGrids_updateCuratedList
      security:
        - oauth2ClientCredentials: []
      description: Update an existing curated / saved search list.
      parameters:
        - description: Update list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Update list with this identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSellerInventoryListRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryListView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsUpdateCuratedListResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsUpdateCuratedList503Response
    delete:
      tags:
        - Inventory Grids
      summary: Delete Grid
      operationId: InventoryGrids_removeCuratedList
      security:
        - oauth2ClientCredentials: []
      description: Remove a curated / saved search list
      parameters:
        - description: Update list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Delete curated list with this identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList400Response2
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsRemoveCuratedList503Response
  /api/company/{companyIdentifier}/inventory/item/{inventoryIdentifier}:
    get:
      tags:
        - Inventory Cards
      summary: Show Card
      operationId: InventoryCards_getSingleCard
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a single inventory card.
      parameters:
        - description: Company identifier to retrieve item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - description: Retrieve inventory with this identifier.
          name: inventoryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: card-inventory-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetSingleCardResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsGetSingleCard400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetSingleCard415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetSingleCard415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetSingleCard415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetSingleCard415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsGetSingleCard503Response'
    put:
      tags:
        - Inventory Cards
      summary: Update Card
      operationId: InventoryCards_updateCard
      security:
        - oauth2ClientCredentials: []
      description: Update an existing card
      parameters:
        - description: Company identifier to update item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - description: Update inventory with this identifier.
          name: inventoryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: card-inventory-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSellerInventoryItemRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsUpdateCardResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsUpdateCard400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsUpdateCard415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsUpdateCard415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsUpdateCard415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryCardsUpdateCard415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsUpdateCard503Response'
    delete:
      tags:
        - Inventory Cards
      summary: Delete Card
      operationId: InventoryCards_removeItem
      security:
        - oauth2ClientCredentials: []
      description: Remove a unique inventory item
      parameters:
        - description: Company identifier to delete item from
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - description: Delete inventory with this identifier.
          name: inventoryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: card-inventory-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsRemoveItemResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsRemoveItem400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsRemoveItem415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsRemoveItem415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsRemoveItem415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryCardsRemoveItem415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsRemoveItem503Response'
  /api/company/{companyIdentifier}/configuration/{engineConfigurationIdentifier}:
    get:
      tags:
        - Customization
      summary: Show Customization
      operationId: Customization_getPrimaryCustomization
      security:
        - oauth2ClientCredentials: []
      description: Retrieve the primary customization for an application.
      parameters:
        - description: Show customization for this company
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - description: Load customization with this identifier
          name: engineConfigurationIdentifier
          in: path
          required: true
          schema:
            type: string
          example: customization-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetPrimaryCustomizationResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetPrimaryCustomization400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetPrimaryCustomization415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetPrimaryCustomization415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetPrimaryCustomization415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetPrimaryCustomization415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetPrimaryCustomization503Response
    put:
      tags:
        - Customization
      summary: Update Customization
      operationId: Customization_updateExisting
      security:
        - oauth2ClientCredentials: []
      description: Update an existing customization.
      parameters:
        - description: Update customization for this company
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - description: Update customization with this application
          name: engineConfigurationIdentifier
          in: path
          required: true
          schema:
            type: string
          example: customization-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertEngineConfigurationRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizationUpdateExistingResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomizationUpdateExisting400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizationUpdateExisting415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomizationUpdateExisting415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomizationUpdateExisting415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomizationUpdateExisting415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomizationUpdateExisting503Response'
    delete:
      tags:
        - Customization
      summary: Remove Customization
      operationId: Customization_removeExisting
      security:
        - oauth2ClientCredentials: []
      description: Remove an existing customization.
      parameters:
        - description: Remove customization for this company
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - description: Remove customization with this identifier
          name: engineConfigurationIdentifier
          in: path
          required: true
          schema:
            type: string
          example: customization-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizationRemoveExistingResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomizationRemoveExisting400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizationRemoveExisting415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomizationRemoveExisting415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomizationRemoveExisting415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomizationRemoveExisting415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomizationRemoveExisting503Response'
  /api/company/{companyIdentifier}/syndication/settings:
    get:
      tags:
        - Syndication Entry Publisher
      summary: Show WinkLinks settings
      operationId: SyndicationEntryPublisher_getWinkLinksSettings
      security:
        - oauth2ClientCredentials: []
      description: Load WinkLinks settings.
      parameters:
        - description: List syndication entries owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationSettings_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetWinkLinksSettingsResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetWinkLinksSettings400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetWinkLinksSettings415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetWinkLinksSettings415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetWinkLinksSettings415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetWinkLinksSettings415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetWinkLinksSettings503Response
    put:
      tags:
        - Syndication Entry Publisher
      summary: Upsert syndication settings
      operationId: SyndicationEntryPublisher_upsertSettings
      security:
        - oauth2ClientCredentials: []
      description: Upsert a new syndication settings.
      parameters:
        - description: Update settings for this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSyndicationSettings_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationSettings_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpsertSettingsResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpsertSettings400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpsertSettings415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpsertSettings415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpsertSettings415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpsertSettings415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpsertSettings503Response
  /api/company/{companyIdentifier}/syndication/entry/{syndicationEntryIdentifier}:
    get:
      tags:
        - Syndication Entry Publisher
      summary: Show WinkLinks entry
      operationId: SyndicationEntryPublisher_showEntry
      security:
        - oauth2ClientCredentials: []
      description: Retrieve syndication entry.
      parameters:
        - description: Syndication entry owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Syndication entry identifier.
          name: syndicationEntryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: syndication-entry-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationEntry_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowEntryResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowEntry400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowEntry415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowEntry415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowEntry415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowEntry415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowEntry503Response
    put:
      tags:
        - Syndication Entry Publisher
      summary: Update syndication entry
      operationId: SyndicationEntryPublisher_updateSyndicationEntry
      security:
        - oauth2ClientCredentials: []
      description: Updates an existing syndication entry.
      parameters:
        - description: Create entry for this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Syndication entry identifier.
          name: syndicationEntryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: syndication-entry-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSyndicationEntry_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationEntry_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateSyndicationEntryResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateSyndicationEntry400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateSyndicationEntry415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateSyndicationEntry415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateSyndicationEntry415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateSyndicationEntry415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateSyndicationEntry503Response
    delete:
      tags:
        - Syndication Entry Publisher
      summary: Delete WinkLinks entry
      operationId: SyndicationEntryPublisher_deleteEntry
      security:
        - oauth2ClientCredentials: []
      description: Deletes a syndication entry.
      parameters:
        - description: Syndication entry owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Syndication entry identifier.
          name: syndicationEntryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: syndication-entry-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteEntryResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteEntry400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteEntry415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteEntry415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteEntry415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteEntry415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteEntry503Response
  /api/company/{companyIdentifier}/syndication/category/{syndicationCategoryIdentifier}:
    get:
      tags:
        - Syndication Entry Publisher
      summary: Show WinkLinks category
      operationId: SyndicationEntryPublisher_getCategory
      security:
        - oauth2ClientCredentials: []
      description: Retrieve syndication category.
      parameters:
        - description: Syndication category owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Syndication category identifier.
          name: syndicationCategoryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: syndication-category-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationCategory_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetCategoryResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetCategory400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetCategory415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetCategory415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetCategory415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetCategory415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherGetCategory503Response
    put:
      tags:
        - Syndication Entry Publisher
      summary: Update syndication category
      operationId: SyndicationEntryPublisher_updateCategory
      security:
        - oauth2ClientCredentials: []
      description: Updates an existing syndication category.
      parameters:
        - description: Create category for this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Syndication category identifier.
          name: syndicationCategoryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: syndication-category-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSyndicationCategory_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationCategory_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateCategoryResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateCategory400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateCategory415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateCategory415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateCategory415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateCategory415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherUpdateCategory503Response
    delete:
      tags:
        - Syndication Entry Publisher
      summary: Delete WinkLinks category
      operationId: SyndicationEntryPublisher_deleteCategory
      security:
        - oauth2ClientCredentials: []
      description: Deletes a syndication category.
      parameters:
        - description: Syndication category owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Syndication category identifier.
          name: syndicationCategoryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: syndication-category-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteCategoryResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteCategory400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteCategory415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteCategory415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteCategory415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteCategory415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherDeleteCategory503Response
  /api/company:
    post:
      tags:
        - Company
      summary: Create company
      operationId: Company_createNewCompany
      security:
        - oauth2ClientCredentials: []
      description: Create a new company
      parameters:
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyRequest_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCreateNewCompanyResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyCreateNewCompany400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCreateNewCompany415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCreateNewCompany415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCreateNewCompany415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCreateNewCompany415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyCreateNewCompany503Response'
  /api/company/{companyIdentifier}/supplier-url:
    post:
      tags:
        - Supplier Links
      summary: Create Link
      operationId: SupplierLinks_createShareableLink
      security:
        - oauth2ClientCredentials: []
      description: Create a new shareable link
      parameters:
        - description: Create link owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSupplierUrlRequest_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierUrlView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksCreateShareableLinkResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateShareableLink400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateShareableLink415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateShareableLink415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateShareableLink415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateShareableLink415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateShareableLink503Response
  /api/company/{companyIdentifier}/supplier-url/syndication/entry:
    post:
      tags:
        - Supplier Links
      summary: Create Supplier URL SyndicationCard
      operationId: SupplierLinks_createSyndicationCard
      security:
        - oauth2ClientCredentials: []
      description: Creates a new WinkLinks card.
      parameters:
        - description: Company identifier to create item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateSupplierUrlSyndicationEntryRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateSyndicationCardResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateSyndicationCard400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateSyndicationCard415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateSyndicationCard415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateSyndicationCard415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateSyndicationCard415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SupplierLinksCreateSyndicationCard503Response
  /api/company/{companyIdentifier}/static/list:
    get:
      tags:
        - Inventory Grids
      summary: Show Curated Lists
      operationId: InventoryGrids_showCuratedLists
      security:
        - oauth2ClientCredentials: []
      description: Retrieve lists optionally with content.
      parameters:
        - description: Show curated lists owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Indicate whether to include all the list items in the result
          name: withItems
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: false
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsShowCuratedListsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsShowCuratedLists400Response'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsShowCuratedLists400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsShowCuratedLists415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsShowCuratedLists415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsShowCuratedLists415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryGridsShowCuratedLists415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsShowCuratedLists503Response'
    post:
      tags:
        - Inventory Grids
      summary: Create Curated List
      operationId: InventoryGrids_createCuratedList
      security:
        - oauth2ClientCredentials: []
      description: Create a new curated list
      parameters:
        - description: Create curated list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateStaticSellerListAndAddItemRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticSellerListWrapper_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsCreateCuratedListResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList503Response
  /api/company/{companyIdentifier}/static/list/{listIdentifier}/item:
    post:
      tags:
        - Inventory Grids
      summary: Add Item to List
      operationId: InventoryGrids_addTravelInventoryToListItem
      security:
        - oauth2ClientCredentials: []
      description: Add some travel inventory to your existing curated list
      parameters:
        - description: Add inventory to curated list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: List identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStaticSellerListItemRequest_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddTravelInventoryToListItemResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddTravelInventoryToListItem400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddTravelInventoryToListItem415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddTravelInventoryToListItem415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddTravelInventoryToListItem415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddTravelInventoryToListItem415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddTravelInventoryToListItem503Response
  /api/company/{companyIdentifier}/static/list/{listIdentifier}/item/supplier:
    post:
      tags:
        - Inventory Grids
      summary: Add Supplier to List
      operationId: InventoryGrids_addSupplierToListItem
      security:
        - oauth2ClientCredentials: []
      description: Adds a new list item for a supplier showing the best priced room..
      parameters:
        - description: Add inventory to curated list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: List identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AddStaticSellerListSupplierRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddSupplierToListItemResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddSupplierToListItem400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddSupplierToListItem415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddSupplierToListItem415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddSupplierToListItem415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddSupplierToListItem415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsAddSupplierToListItem503Response
  /api/company/{companyIdentifier}/seller-url:
    post:
      tags:
        - Shareable Links
      summary: Create Link
      operationId: ShareableLinks_generateNewLink
      security:
        - oauth2ClientCredentials: []
      description: Create a new shareable link
      parameters:
        - description: Create link owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSellerUrlRequest_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerUrlView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksGenerateNewLinkResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksGenerateNewLink400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksGenerateNewLink415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksGenerateNewLink415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksGenerateNewLink415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ShareableLinksGenerateNewLink415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksGenerateNewLink503Response'
  /api/company/{companyIdentifier}/seller-url/syndication/entry:
    post:
      tags:
        - Shareable Links
      summary: Create Seller URL SyndicationCard
      operationId: ShareableLinks_createSyndicationCard
      security:
        - oauth2ClientCredentials: []
      description: Creates a new WinkLinks card.
      parameters:
        - description: Company identifier to create item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateSellerUrlSyndicationEntryRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksCreateSyndicationCardResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksCreateSyndicationCard400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksCreateSyndicationCard415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksCreateSyndicationCard415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksCreateSyndicationCard415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksCreateSyndicationCard415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksCreateSyndicationCard503Response
  /api/company/{companyIdentifier}/sales/supplier/grid:
    post:
      tags:
        - Supplier
      summary: Show suppliers
      operationId: Supplier_getPageOfSuppliers
      security:
        - oauth2ClientCredentials: []
      description: Retrieve page of suppliers.
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageHotelOnMapView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierGetPageOfSuppliersResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierGetPageOfSuppliers400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierGetPageOfSuppliers415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SupplierGetPageOfSuppliers415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SupplierGetPageOfSuppliers415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SupplierGetPageOfSuppliers415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierGetPageOfSuppliers503Response'
  /api/company/{companyIdentifier}/sales/request:
    post:
      tags:
        - Hotel Relationship Requests
      summary: Create hotel request
      operationId: HotelRelationshipRequests_createRequest
      security:
        - oauth2ClientCredentials: []
      description: Create a new hotel request.
      parameters:
        - description: Create hotel request and associate it with this company identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpsertSalesChannelRelationshipRequestRequest
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesChannelRelationshipRequestView'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsCreateRequestResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsCreateRequest400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsCreateRequest415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsCreateRequest415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsCreateRequest415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsCreateRequest415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsCreateRequest503Response
  /api/company/{companyIdentifier}/sales/channel/grid:
    post:
      tags:
        - Sales channel
      summary: Show sales channels
      operationId: SalesChannel_getPageOfSalesChannels
      security:
        - oauth2ClientCredentials: []
      description: Retrieve page of sales channels.
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSalesChannelView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SalesChannelGetPageOfSalesChannelsResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SalesChannelGetPageOfSalesChannels400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SalesChannelGetPageOfSalesChannels415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SalesChannelGetPageOfSalesChannels415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SalesChannelGetPageOfSalesChannels415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SalesChannelGetPageOfSalesChannels415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SalesChannelGetPageOfSalesChannels503Response
  /api/company/{companyIdentifier}/map:
    get:
      tags:
        - Maps
      summary: Show Maps
      operationId: Maps_listMaps
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of existing maps.
      parameters:
        - description: List maps owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsListMapsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsListMaps400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsListMaps400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsListMaps415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/MapsListMaps415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/MapsListMaps415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/MapsListMaps415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsListMaps503Response'
    post:
      tags:
        - Maps
      summary: Create Map
      operationId: Maps_createAdvancedMap
      security:
        - oauth2ClientCredentials: []
      description: Create a new advanced map configuration
      parameters:
        - description: Create map owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpsertAdvancedMapConfigurationRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsCreateAdvancedMapResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsCreateAdvancedMap400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsCreateAdvancedMap415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/MapsCreateAdvancedMap415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/MapsCreateAdvancedMap415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/MapsCreateAdvancedMap415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsCreateAdvancedMap503Response'
  /api/company/{companyIdentifier}/map/syndication/entry:
    post:
      tags:
        - Maps
      summary: Create Map Card
      operationId: Maps_createWinkLinksMap
      security:
        - oauth2ClientCredentials: []
      description: Creates a new WinkLinks map.
      parameters:
        - description: Company identifier to create item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateAdvancedMapConfigurationSyndicationEntryRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsCreateWinkLinksMapResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsCreateWinkLinksMap400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsCreateWinkLinksMap415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/MapsCreateWinkLinksMap415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/MapsCreateWinkLinksMap415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/MapsCreateWinkLinksMap415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsCreateWinkLinksMap503Response'
  /api/company/{companyIdentifier}/map/supplier:
    post:
      tags:
        - Maps
      summary: Create Supplier Map
      operationId: Maps_createSupplierMap
      security:
        - oauth2ClientCredentials: []
      description: >-
        Creates a new advanced map configuration with a single marker for a
        supplier showing the best priced room.
      parameters:
        - description: Create supplier map owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpsertSupplierAdvancedMapConfigurationRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsCreateSupplierMapResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsCreateSupplierMap400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsCreateSupplierMap415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/MapsCreateSupplierMap415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/MapsCreateSupplierMap415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/MapsCreateSupplierMap415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsCreateSupplierMap503Response'
  /api/company/{companyIdentifier}/lead:
    post:
      tags:
        - Affiliate Lead
      summary: Create lead
      operationId: AffiliateLead_createLeadFromGoogle
      security:
        - oauth2ClientCredentials: []
      description: >-
        Creates a new supplier lead based on information retrieved from Google
        Places
      parameters:
        - description: Create lead by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GooglePlaceDetailRequest_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLead_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateLeadCreateLeadFromGoogleResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/AffiliateLeadCreateLeadFromGoogle400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AffiliateLeadCreateLeadFromGoogle415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/AffiliateLeadCreateLeadFromGoogle415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/AffiliateLeadCreateLeadFromGoogle415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/AffiliateLeadCreateLeadFromGoogle415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/AffiliateLeadCreateLeadFromGoogle503Response
  /api/company/{companyIdentifier}/inventory/supplier/grid:
    post:
      tags:
        - Discover
      summary: Inventory Supplier Search
      operationId: Discover_supplierGridPost
      security:
        - oauth2ClientCredentials: []
      description: >-
        Retrieves a paginated result set of suppliers of inventory based on the
        search criteria of the caller.
      parameters:
        - description: >-
            Browse inventory supplier suppliers on behalf of this owner
            identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicSellerListRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInventorySupplier_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverSupplierGridPostResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverSupplierGridPost400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverSupplierGridPost415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscoverSupplierGridPost415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DiscoverSupplierGridPost415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscoverSupplierGridPost415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverSupplierGridPost503Response'
  /api/company/{companyIdentifier}/inventory/ranked/list:
    post:
      tags:
        - Inventory Grids
      summary: Create Ranked Grid
      operationId: InventoryGrids_createRankedGrid
      security:
        - oauth2ClientCredentials: []
      description: Create a new ranked grid
      parameters:
        - description: Create list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpsertSellerInventoryRankedListRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryRankedListView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsCreateRankedGridResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateRankedGrid400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsCreateRankedGrid415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsCreateRankedGrid415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsCreateRankedGrid415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryGridsCreateRankedGrid415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsCreateRankedGrid503Response'
  /api/company/{companyIdentifier}/inventory/ranked/list/syndication/entry:
    post:
      tags:
        - Inventory Grids
      summary: Create Ranked Grid Card
      operationId: InventoryGrids_createNewWinkLinksGrid
      security:
        - oauth2ClientCredentials: []
      description: Creates a new WinkLinks grid.
      parameters:
        - description: Company identifier to create item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateSellerInventoryRankedListSyndicationEntryRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateNewWinkLinksGridResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateNewWinkLinksGrid400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateNewWinkLinksGrid415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateNewWinkLinksGrid415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateNewWinkLinksGrid415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateNewWinkLinksGrid415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateNewWinkLinksGrid503Response
  /api/company/{companyIdentifier}/inventory/list:
    get:
      tags:
        - Discover
      summary: Latest Inventory
      operationId: Discover_latestInventoryList
      security:
        - oauth2ClientCredentials: []
      description: Retrieves a list of latest available inventory.
      parameters:
        - description: Browse inventory on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Skip to page.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - description: Skip to page.
          name: size
          in: query
          required: false
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 20
          example: 20
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverLatestInventoryListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverLatestInventoryList400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverLatestInventoryList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverLatestInventoryList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscoverLatestInventoryList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DiscoverLatestInventoryList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscoverLatestInventoryList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverLatestInventoryList503Response'
    post:
      tags:
        - Inventory Grids
      summary: Create Grid
      operationId: InventoryGrids_createCuratedList
      security:
        - oauth2ClientCredentials: []
      description: Create a new curated / saved search list
      parameters:
        - description: Create list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSellerInventoryListRequest_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryListView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList400Response2
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateCuratedList503Response
  /api/company/{companyIdentifier}/inventory/list/syndication/entry:
    post:
      tags:
        - Inventory Grids
      summary: Create Grid Card
      operationId: InventoryGrids_createWinkLinksGrid
      security:
        - oauth2ClientCredentials: []
      description: Creates a new WinkLinks grid.
      parameters:
        - description: Company identifier to create item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateStaticSellerListSyndicationEntryRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsCreateWinkLinksGridResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateWinkLinksGrid400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateWinkLinksGrid415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateWinkLinksGrid415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateWinkLinksGrid415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateWinkLinksGrid415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsCreateWinkLinksGrid503Response
  /api/company/{companyIdentifier}/inventory/item:
    post:
      tags:
        - Inventory Cards
      summary: Create Card
      operationId: InventoryCards_createNewCard
      security:
        - oauth2ClientCredentials: []
      description: Create a new inventory card
      parameters:
        - description: Company identifier to create item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSellerInventoryItemRequest_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsCreateNewCardResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsCreateNewCard400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsCreateNewCard415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsCreateNewCard415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsCreateNewCard415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryCardsCreateNewCard415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsCreateNewCard503Response'
  /api/company/{companyIdentifier}/inventory/item/syndication/entry:
    post:
      tags:
        - Inventory Cards
      summary: Create Inventory Syndication Card
      operationId: InventoryCards_createSyndicationEntry
      security:
        - oauth2ClientCredentials: []
      description: Creates a new WinkLinks card.
      parameters:
        - description: Company identifier to create item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateSellerInventoryItemSyndicationEntryRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSyndicationEntryResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSyndicationEntry400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSyndicationEntry415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSyndicationEntry415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSyndicationEntry415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSyndicationEntry415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSyndicationEntry503Response
  /api/company/{companyIdentifier}/inventory/item/supplier:
    post:
      tags:
        - Inventory Cards
      summary: Create Supplier Card
      operationId: InventoryCards_createSupplierCard
      security:
        - oauth2ClientCredentials: []
      description: >-
        Creates a new inventory card for a supplier showing the best priced
        room.
      parameters:
        - description: Company identifier to create item for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpsertSupplierSellerInventoryItemRequest_Affiliate
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsCreateSupplierCardResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSupplierCard400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSupplierCard415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSupplierCard415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSupplierCard415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSupplierCard415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryCardsCreateSupplierCard503Response
  /api/company/{companyIdentifier}/inventory/grid:
    post:
      tags:
        - Discover
      summary: Inventory Search
      operationId: Discover_inventorySearch
      security:
        - oauth2ClientCredentials: []
      description: >-
        Retrieves a paginated result set of inventory based on the search
        criteria of the caller.
      parameters:
        - description: Browse inventory on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicSellerListRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInventoryView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearchResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearch400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearch415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearch415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearch415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearch415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearch503Response'
  /api/company/{companyIdentifier}/configuration:
    get:
      tags:
        - Customization
      summary: Show Primary Customization
      operationId: Customization_showPrimaryCustomization
      security:
        - oauth2ClientCredentials: []
      description: Retrieve the primary customization for an application.
      parameters:
        - description: Show customization for this company
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationShowPrimaryCustomizationResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CustomizationShowPrimaryCustomization400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationShowPrimaryCustomization415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationShowPrimaryCustomization415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationShowPrimaryCustomization415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationShowPrimaryCustomization415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CustomizationShowPrimaryCustomization503Response
    post:
      tags:
        - Customization
      summary: Create Customization
      operationId: Customization_createNewCustomization
      security:
        - oauth2ClientCredentials: []
      description: >-
        Create a new customization and associate it with the specified
        application.
      parameters:
        - description: Create customization for this company
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertEngineConfigurationRequest_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationCreateNewCustomizationResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CustomizationCreateNewCustomization400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationCreateNewCustomization415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationCreateNewCustomization415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationCreateNewCustomization415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationCreateNewCustomization415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CustomizationCreateNewCustomization503Response
  /api/company/{companyIdentifier}/booking/grid:
    post:
      tags:
        - Bookings
      summary: Show Bookings
      operationId: Bookings_getGrid
      security:
        - oauth2ClientCredentials: []
      description: >-
        Show bookings for the affiliate company that helped create those
        booking.
      parameters:
        - description: Show bookings for company identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBookingView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsGetGridResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingsGetGrid400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsGetGrid415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookingsGetGrid415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/BookingsGetGrid415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookingsGetGrid415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingsGetGrid503Response'
  /api/company/{companyIdentifier}/syndication/entry:
    post:
      tags:
        - Syndication Entry Publisher
      summary: Create syndication entry
      operationId: SyndicationEntryPublisher_createNewEntry
      security:
        - oauth2ClientCredentials: []
      description: Creates a new syndication entry.
      parameters:
        - description: Create entry for this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSyndicationEntry_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationEntry_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateNewEntryResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateNewEntry400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateNewEntry415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateNewEntry415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateNewEntry415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateNewEntry415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateNewEntry503Response
  /api/company/{companyIdentifier}/syndication/entry/consume-url:
    post:
      tags:
        - Syndication Entry Publisher
      summary: Consume external URL
      operationId: SyndicationEntryPublisher_consumeUrl
      security:
        - oauth2ClientCredentials: []
      description: Utility method for reading Open Graph data from an external URL.
      parameters:
        - description: Consume URL for this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        description: Body payload filtering and sorting preferences
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumeExternalUrlRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSyndicationEntry_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherConsumeUrlResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherConsumeUrl400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherConsumeUrl415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherConsumeUrl415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherConsumeUrl415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherConsumeUrl415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherConsumeUrl503Response
  /api/company/{companyIdentifier}/syndication/category:
    post:
      tags:
        - Syndication Entry Publisher
      summary: Create syndication category
      operationId: SyndicationEntryPublisher_createCategory
      security:
        - oauth2ClientCredentials: []
      description: Creates a new syndication category.
      parameters:
        - description: Create category for this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSyndicationCategory_Affiliate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationCategory_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateCategoryResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateCategory400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateCategory415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateCategory415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateCategory415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateCategory415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherCreateCategory503Response
  /api/company/unique:
    post:
      tags:
        - Company
      summary: Verify company name
      operationId: Company_checkUniqueness
      security:
        - oauth2ClientCredentials: []
      description: Check if company name is unique
      parameters:
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniqueRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniqueResult_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCheckUniquenessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyCheckUniqueness400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCheckUniqueness415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCheckUniqueness415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCheckUniqueness415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCheckUniqueness415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyCheckUniqueness503Response'
  /api/application:
    post:
      tags:
        - Application
      summary: Create Application
      operationId: Application_createNewApplication
      security:
        - oauth2ClientCredentials: []
      description: Create a new application
      parameters:
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertApplicationRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCreateNewApplicationResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/ApplicationCreateNewApplication400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationCreateNewApplication415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationCreateNewApplication415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationCreateNewApplication415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationCreateNewApplication415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/ApplicationCreateNewApplication503Response
  /api/company/{companyIdentifier}:
    get:
      tags:
        - Company
      summary: Show Company
      operationId: Company_getByIdentifier
      security:
        - oauth2ClientCredentials: []
      description: Retrieve company by identifier
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyGetByIdentifierResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyGetByIdentifier400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyGetByIdentifier415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyGetByIdentifier415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyGetByIdentifier415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyGetByIdentifier415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyGetByIdentifier503Response'
    delete:
      tags:
        - Company
      summary: Delete Company
      operationId: Company_deleteCompanyByIdentifier
      security:
        - oauth2ClientCredentials: []
      description: Delete a company by identifier
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDeleteCompanyByIdentifierResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CompanyDeleteCompanyByIdentifier400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDeleteCompanyByIdentifier415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDeleteCompanyByIdentifier415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDeleteCompanyByIdentifier415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDeleteCompanyByIdentifier415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CompanyDeleteCompanyByIdentifier503Response
    patch:
      tags:
        - Company
      summary: Update Company
      operationId: Company_updateExistingCompany
      security:
        - oauth2ClientCredentials: []
      description: Update an existing company
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertCompanyRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUpdateExistingCompanyResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyUpdateExistingCompany400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUpdateExistingCompany415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUpdateExistingCompany415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUpdateExistingCompany415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUpdateExistingCompany415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyUpdateExistingCompany503Response'
  /api/company/{companyIdentifier}/status:
    patch:
      tags:
        - Company
      summary: Toggle Company Status
      operationId: Company_toggleStatus
      security:
        - oauth2ClientCredentials: []
      description: Update company status
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertCompanyStatusRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyToggleStatusResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyToggleStatus400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyToggleStatus415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyToggleStatus415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyToggleStatus415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyToggleStatus415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyToggleStatus503Response'
  /api/company/{companyIdentifier}/static/list/{listIdentifier}/sort:
    patch:
      tags:
        - Inventory Grids
      summary: Re-Order List Items
      operationId: InventoryGrids_reorderListItems
      security:
        - oauth2ClientCredentials: []
      description: Re-order list items with an existing list
      parameters:
        - description: Sort curated list items owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: List identifier.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SortStaticSellerListItemsRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsReorderListItemsResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsReorderListItems400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsReorderListItems415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsReorderListItems415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsReorderListItems415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryGridsReorderListItems415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsReorderListItems503Response'
  /api/company/{companyIdentifier}/message/{identifier}:
    get:
      tags:
        - Notification
      summary: Show notification
      operationId: Notification_getMessagesByCompany
      security:
        - oauth2ClientCredentials: []
      description: Retrieve messages for a specific company by id
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGetMessagesByCompanyResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/NotificationGetMessagesByCompany400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationGetMessagesByCompany415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/NotificationGetMessagesByCompany415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/NotificationGetMessagesByCompany415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/NotificationGetMessagesByCompany415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/NotificationGetMessagesByCompany503Response
    delete:
      tags:
        - Notification
      summary: Delete notification
      operationId: Notification_deleteByIdentifier
      security:
        - oauth2ClientCredentials: []
      description: Remove notification specified by its identifier.
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationDeleteByIdentifierResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/NotificationDeleteByIdentifier400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationDeleteByIdentifier415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotificationDeleteByIdentifier415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationDeleteByIdentifier415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/NotificationDeleteByIdentifier415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationDeleteByIdentifier503Response'
    patch:
      tags:
        - Notification
      summary: Mark as read
      operationId: Notification_markAsRead
      security:
        - oauth2ClientCredentials: []
      description: Mark notification as read.
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationMarkAsReadResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationMarkAsRead400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationMarkAsRead415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotificationMarkAsRead415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationMarkAsRead415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/NotificationMarkAsRead415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationMarkAsRead503Response'
  /api/company/{companyIdentifier}/manager/invite:
    patch:
      tags:
        - Company
      summary: Invite Manager
      operationId: Company_inviteManager
      security:
        - oauth2ClientCredentials: []
      description: Invite user to be a manager for this company.
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteManagerRequest_Affiliate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInviteManagerResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyInviteManager400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInviteManager415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyInviteManager415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyInviteManager415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyInviteManager415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyInviteManager503Response'
  /api/company/{companyIdentifier}/syndication/entry/list/sort:
    patch:
      tags:
        - Syndication Entry Publisher
      summary: Sort entire list
      operationId: SyndicationEntryPublisher_sortList
      security:
        - oauth2ClientCredentials: []
      description: Re-sorts all list entries.
      parameters:
        - description: Consume URL for this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        description: List if ids and their new sort slot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyndicationEntryPublisherSortListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationEntryPublisherSortListResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherSortList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherSortList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherSortList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherSortList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherSortList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherSortList503Response
  /api/application/{id}:
    get:
      tags:
        - Application
      summary: Show Application
      operationId: Application_showSpecific
      security:
        - oauth2ClientCredentials: []
      description: Show a specific application
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationShowSpecificResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationShowSpecific400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationShowSpecific415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationShowSpecific415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationShowSpecific415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationShowSpecific415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationShowSpecific503Response'
    delete:
      tags:
        - Application
      summary: Delete Application
      operationId: Application_remove
      security:
        - oauth2ClientCredentials: []
      description: Remove a specific application
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRemoveResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationRemove400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRemove415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationRemove415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationRemove415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationRemove415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationRemove503Response'
    patch:
      tags:
        - Application
      summary: Update Application
      operationId: Application_updateExisting
      security:
        - oauth2ClientCredentials: []
      description: Update an existing application
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertApplicationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUpdateExistingResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationUpdateExisting400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUpdateExisting415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationUpdateExisting415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationUpdateExisting415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationUpdateExisting415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationUpdateExisting503Response'
  /api/hello:
    get:
      tags:
        - Test
      summary: Ping
      operationId: Test_pingEndpoint
      security:
        - oauth2ClientCredentials: []
      description: Simple ping endpoint to test your credentials.
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TestPingEndpointResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPingEndpoint400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/TestPingEndpoint400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPingEndpoint415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestPingEndpoint415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/TestPingEndpoint415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/TestPingEndpoint415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TestPingEndpoint503Response'
  /api/company/{companyIdentifier}/supplier-url/list:
    get:
      tags:
        - Supplier Links
      summary: Show Links
      operationId: SupplierLinks_getUrlList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of shareable urls for this seller
      parameters:
        - description: Show links list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetUrlListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetUrlList400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierLinksGetUrlList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetUrlList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetUrlList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetUrlList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SupplierLinksGetUrlList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierLinksGetUrlList503Response'
  /api/company/{companyIdentifier}/seller-url/list:
    get:
      tags:
        - Shareable Links
      summary: Show Links
      operationId: ShareableLinks_getSellerUrls
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of shareable urls for this seller
      parameters:
        - description: Show links list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSellerUrlsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSellerUrls400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSellerUrls400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSellerUrls415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSellerUrls415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSellerUrls415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSellerUrls415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShareableLinksGetSellerUrls503Response'
  /api/company/{companyIdentifier}/seller-url/inventory/{channelInventoryIdentifier}/media/list:
    get:
      tags:
        - Shareable Links
      summary: Show Inventory Media
      operationId: ShareableLinks_getInventoryMediaList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a list of media for this channel inventory identifier
      parameters:
        - description: Owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Channel inventory identifier.
          name: channelInventoryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: channel-inventory-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksGetInventoryMediaListResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksGetInventoryMediaList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksGetInventoryMediaList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksGetInventoryMediaList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksGetInventoryMediaList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksGetInventoryMediaList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksGetInventoryMediaList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/ShareableLinksGetInventoryMediaList503Response
  /api/company/{companyIdentifier}/search/category/list:
    get:
      tags:
        - Search Categories
      summary: Show categories
      operationId: SearchCategories_getList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a list of all active supplier and inventory categories.
      parameters:
        - description: List search categories on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCategoriesGetListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCategoriesGetList400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchCategoriesGetList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCategoriesGetList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchCategoriesGetList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchCategoriesGetList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchCategoriesGetList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchCategoriesGetList503Response'
  /api/company/{companyIdentifier}/sales/supplier/{supplierIdentifier}:
    get:
      tags:
        - Supplier
      summary: Show supplier
      operationId: Supplier_getInformation
      security:
        - oauth2ClientCredentials: []
      description: Retrieve supplier information specified by identifier
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: supplierIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelOnMapView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierGetInformationResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierGetInformation400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierGetInformation415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SupplierGetInformation415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SupplierGetInformation415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SupplierGetInformation415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierGetInformation503Response'
  /api/company/{companyIdentifier}/sales/supplier/list:
    get:
      tags:
        - Supplier
      summary: Latest Inventory
      operationId: Supplier_getLatestInventory
      security:
        - oauth2ClientCredentials: []
      description: Retrieves a list of latest available inventory.
      parameters:
        - description: Browse suppliers on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Skip to page.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - description: Skip to page.
          name: size
          in: query
          required: false
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 20
          example: 20
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierGetLatestInventoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierGetLatestInventory400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierGetLatestInventory400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierGetLatestInventory415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SupplierGetLatestInventory415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SupplierGetLatestInventory415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SupplierGetLatestInventory415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierGetLatestInventory503Response'
  /api/company/{companyIdentifier}/sales/supplier/country/list:
    get:
      tags:
        - Supplier
      summary: Show unique supplier countries
      operationId: Supplier_listSupplierCountries
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a list of unique countries where suppliers live
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierListSupplierCountriesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierListSupplierCountries400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierListSupplierCountries400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierListSupplierCountries415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SupplierListSupplierCountries415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SupplierListSupplierCountries415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SupplierListSupplierCountries415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierListSupplierCountries503Response'
  /api/company/{companyIdentifier}/sales/supplier/city/list:
    get:
      tags:
        - Supplier
      summary: Show unique supplier cities
      operationId: Supplier_showSupplierCitiesList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a list of unique cities where suppliers live
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierShowSupplierCitiesListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierShowSupplierCitiesList400Response'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SupplierShowSupplierCitiesList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierShowSupplierCitiesList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SupplierShowSupplierCitiesList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SupplierShowSupplierCitiesList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SupplierShowSupplierCitiesList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierShowSupplierCitiesList503Response'
  /api/company/{companyIdentifier}/sales/request/{salesChannelRequestIdentifier}/re-apply:
    get:
      tags:
        - Hotel Relationship Requests
      summary: Re-apply hotel request
      operationId: HotelRelationshipRequests_reapplySalesChannelRequest
      security:
        - oauth2ClientCredentials: []
      description: >-
        Allows the affiliate to re-apply a previously rejected hotel request
        after 90 days.
      parameters:
        - description: Re-apply relationship request owned by this company identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - description: Re-apply relationship request with this identifier
          name: salesChannelRequestIdentifier
          in: path
          required: true
          schema:
            type: string
          example: sales-channel-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesChannelRelationshipRequestView'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsReapplySalesChannelRequestResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsReapplySalesChannelRequest400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsReapplySalesChannelRequest415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsReapplySalesChannelRequest415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsReapplySalesChannelRequest415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsReapplySalesChannelRequest415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsReapplySalesChannelRequest503Response
  /api/company/{companyIdentifier}/sales/request/supplier/{supplierIdentifier}:
    get:
      tags:
        - Hotel Relationship Requests
      summary: Show hotel request
      operationId: HotelRelationshipRequests_getSpecific
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a specific hotel request based on a companyId and a supplierId.
      parameters:
        - description: Show hotel request for this company identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - description: Show hotel request for this supplier identifier
          name: supplierIdentifier
          in: path
          required: true
          schema:
            type: string
          example: supplier-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesChannelRelationshipRequestView'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetSpecificResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetSpecific400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetSpecific415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetSpecific415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetSpecific415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetSpecific415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetSpecific503Response
  /api/company/{companyIdentifier}/sales/request/list:
    get:
      tags:
        - Hotel Relationship Requests
      summary: Show hotel requests
      operationId: HotelRelationshipRequests_getList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of all hotel requests for this company.
      parameters:
        - description: Show all hotel requests for this company identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelRelationshipRequestsGetListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsGetList503Response
  /api/company/{companyIdentifier}/sales/channel/supplier/{supplierIdentifier}:
    get:
      tags:
        - Sales channel
      summary: Show sales channel
      operationId: SalesChannel_getById
      security:
        - oauth2ClientCredentials: []
      description: Retrieve sales channel specified by the company ID and the supplier ID.
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: supplierIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesChannelView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesChannelGetByIdResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/SalesChannelGetById400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesChannelGetById415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/SalesChannelGetById415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SalesChannelGetById415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SalesChannelGetById415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SalesChannelGetById503Response'
  /api/company/{companyIdentifier}/message/list:
    get:
      tags:
        - Notification
      summary: Show notifications
      operationId: Notification_getMessages
      security:
        - oauth2ClientCredentials: []
      description: Retrieve all the messages for this company
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGetMessagesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGetMessages400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationGetMessages400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGetMessages415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotificationGetMessages415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationGetMessages415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/NotificationGetMessages415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationGetMessages503Response'
  /api/company/{companyIdentifier}/message/count:
    get:
      tags:
        - Notification
      summary: Show unread message count
      operationId: Notification_showUnreadMessageCount
      security:
        - oauth2ClientCredentials: []
      description: Retrieve count of unread messages
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountResponse_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationShowUnreadMessageCountResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/NotificationShowUnreadMessageCount400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationShowUnreadMessageCount415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/NotificationShowUnreadMessageCount415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/NotificationShowUnreadMessageCount415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/NotificationShowUnreadMessageCount415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/NotificationShowUnreadMessageCount503Response
  /api/company/{companyIdentifier}/marketplace/customer/invoice/upcoming:
    get:
      tags:
        - Invoice
      summary: Show Upcoming Invoice
      operationId: Invoice_getUpcoming
      security:
        - oauth2ClientCredentials: []
      description: >-
        Retrieve upcoming invoice. A company might want to know how many API
        calls have been done for the current month.
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcomingResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcoming400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcoming415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcoming415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcoming415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcoming415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcoming503Response'
  /api/company/{companyIdentifier}/marketplace/customer/invoice/upcoming/items:
    get:
      tags:
        - Invoice
      summary: Show Upcoming Invoices
      operationId: Invoice_getUpcomingItems
      security:
        - oauth2ClientCredentials: []
      description: Retrieve all upcoming invoice for a company.
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceLineItemCollection_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcomingItemsResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcomingItems400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcomingItems415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcomingItems415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcomingItems415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcomingItems415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceGetUpcomingItems503Response'
  /api/company/{companyIdentifier}/marketplace/customer/invoice/list:
    get:
      tags:
        - Invoice
      summary: Show Invoices
      operationId: Invoice_getCompanyInvoices
      security:
        - oauth2ClientCredentials: []
      description: Retrieve all invoices for a specific company
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceCollection_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceGetCompanyInvoicesResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceGetCompanyInvoices400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceGetCompanyInvoices415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InvoiceGetCompanyInvoices415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InvoiceGetCompanyInvoices415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceGetCompanyInvoices415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceGetCompanyInvoices503Response'
  /api/company/{companyIdentifier}/map/markers/{listType}/{listIdentifier}:
    get:
      tags:
        - Maps
      summary: Show Map Markers
      operationId: Maps_getMarkersByType
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a list of advanced map configuration inventory markers by type
      parameters:
        - description: Show map markers for list owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Show map markers for list.
          name: listIdentifier
          in: path
          required: true
          schema:
            type: string
          example: list-1
        - description: Indicate whether this list is a curated or dynamic list.
          name: listType
          in: path
          required: true
          schema:
            type: string
            enum:
              - LIST
              - SEARCH
          example: LIST
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsGetMarkersByTypeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsGetMarkersByType400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsGetMarkersByType400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsGetMarkersByType415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/MapsGetMarkersByType415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/MapsGetMarkersByType415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/MapsGetMarkersByType415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapsGetMarkersByType503Response'
  /api/company/{companyIdentifier}/map/marker/{channelInventoryIdentifier}:
    get:
      tags:
        - Maps
      summary: Show Map Marker
      operationId: Maps_showMarkerForChannelInventory
      security:
        - oauth2ClientCredentials: []
      description: Retrieve map marker for individual channel inventory.
      parameters:
        - description: Show map markers for map owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Show map marker for specific inventory.
          name: channelInventoryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: channel-inventory-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryMapMarker_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsShowMarkerForChannelInventoryResponse'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/MapsShowMarkerForChannelInventory400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MapsShowMarkerForChannelInventory415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/MapsShowMarkerForChannelInventory415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/MapsShowMarkerForChannelInventory415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/MapsShowMarkerForChannelInventory415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/MapsShowMarkerForChannelInventory503Response
  /api/company/{companyIdentifier}/inventory/supplier/{supplierIdentifier}/sales-channel/{salesChannelIdentifier}:
    get:
      tags:
        - Discover
      summary: Show Inventory Supplier
      operationId: Discover_inventorySupplierList
      security:
        - oauth2ClientCredentials: []
      description: Retrieves a list of latest available inventory.
      parameters:
        - description: Browse inventory supplier on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Browse inventory supplier on behalf of this supplier identifier.
          name: supplierIdentifier
          in: path
          required: true
          schema:
            type: string
          example: supplier-1
        - description: >-
            Browse inventory supplier on behalf of this sales channel
            identifier.
          name: salesChannelIdentifier
          in: path
          required: true
          schema:
            type: string
          example: sales-channel-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventorySupplier_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySupplierListResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventorySupplierList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySupplierList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySupplierList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySupplierList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySupplierList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventorySupplierList503Response'
  /api/company/{companyIdentifier}/inventory/supplier/list:
    get:
      tags:
        - Discover
      summary: Latest Inventory Suppliers
      operationId: Discover_latestInventorySuppliersList
      security:
        - oauth2ClientCredentials: []
      description: Retrieves a list of latest available inventory suppliers.
      parameters:
        - description: Browse inventory supplier on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Skip to page.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - description: Skip to page.
          name: size
          in: query
          required: false
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 20
          example: 20
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverLatestInventorySuppliersListResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverLatestInventorySuppliersList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/DiscoverLatestInventorySuppliersList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverLatestInventorySuppliersList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverLatestInventorySuppliersList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverLatestInventorySuppliersList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverLatestInventorySuppliersList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/DiscoverLatestInventorySuppliersList503Response
  /api/company/{companyIdentifier}/inventory/supplier/grid/{dynamicListIdentifier}:
    get:
      tags:
        - Discover
      summary: Inventory Search by List
      operationId: Discover_inventoryListSearch
      security:
        - oauth2ClientCredentials: []
      description: Retrieves a paginated result set based on the given list identifier.
      parameters:
        - description: Browse inventory supplier on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Browse inventory supplier on behalf of this dynamic list identifier.
          name: dynamicListIdentifier
          in: path
          required: true
          schema:
            type: string
          example: dynamic-list-1
        - description: Skip to page.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - description: Skip to page.
          name: size
          in: query
          required: false
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 20
          example: 20
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInventorySupplier_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryListSearchResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventoryListSearch400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryListSearch415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryListSearch415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryListSearch415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryListSearch415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventoryListSearch503Response'
  /api/company/{companyIdentifier}/inventory/supplier/country/list:
    get:
      tags:
        - Discover
      summary: Show Inventory Supplier Countries
      operationId: Discover_inventorySupplierCountriesList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of countries affiliate has access to.
      parameters:
        - description: List countries for inventory on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCountriesListResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCountriesList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCountriesList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCountriesList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCountriesList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCountriesList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCountriesList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCountriesList503Response
  /api/company/{companyIdentifier}/inventory/supplier/city/list:
    get:
      tags:
        - Discover
      summary: Show Inventory Supplier Cities
      operationId: Discover_inventorySupplierCitiesList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of cities affiliate has access to.
      parameters:
        - description: List cities for inventory on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCitiesListResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCitiesList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCitiesList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCitiesList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCitiesList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCitiesList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCitiesList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/DiscoverInventorySupplierCitiesList503Response
  /api/company/{companyIdentifier}/inventory/ranked/list/list:
    get:
      tags:
        - Inventory Grids
      summary: Show Ranked Grids
      operationId: InventoryGrids_showRankedGridsList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of ranked grids.
      parameters:
        - description: Retrieve list for owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsShowRankedGridsListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsShowRankedGridsList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsShowRankedGridsList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsShowRankedGridsList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsShowRankedGridsList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsShowRankedGridsList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsShowRankedGridsList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsShowRankedGridsList503Response
  /api/company/{companyIdentifier}/inventory/list/list:
    get:
      tags:
        - Inventory Grids
      summary: Show Grids
      operationId: InventoryGrids_getCuratedSearches
      security:
        - oauth2ClientCredentials: []
      description: Retrieve curated / saved search list lists.
      parameters:
        - description: Show seller inventory lists owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsGetCuratedSearchesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetCuratedSearches400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetCuratedSearches400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetCuratedSearches415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetCuratedSearches415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetCuratedSearches415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetCuratedSearches415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetCuratedSearches503Response
  /api/company/{companyIdentifier}/inventory/item/list:
    get:
      tags:
        - Inventory Cards
      summary: Show Inventory Cards
      operationId: InventoryCards_getAllCards
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a list of all inventory cards for company.
      parameters:
        - description: Company identifier to retrieve items for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetAllCardsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetAllCards400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsGetAllCards400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetAllCards415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetAllCards415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetAllCards415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryCardsGetAllCards415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsGetAllCards503Response'
  /api/company/{companyIdentifier}/inventory/item/inventory/{channelInventoryIdentifier}/media/list:
    get:
      tags:
        - Inventory Cards
      summary: Show Card Media
      operationId: InventoryCards_showMediaList
      security:
        - oauth2ClientCredentials: []
      description: >-
        Retrieve list of all media associated with this channel inventory
        identifier.
      parameters:
        - description: Company identifier to retrieve items for
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - description: Retrieve media for this channel inventory identifier.
          name: channelInventoryIdentifier
          in: path
          required: true
          schema:
            type: string
          example: channel-inventory-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsShowMediaListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsShowMediaList400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsShowMediaList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCardsShowMediaList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsShowMediaList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryCardsShowMediaList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryCardsShowMediaList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCardsShowMediaList503Response'
  /api/company/{companyIdentifier}/inventory/grid/{dynamicListIdentifier}:
    get:
      tags:
        - Discover
      summary: Inventory Search by List
      operationId: Discover_inventorySearchByList
      security:
        - oauth2ClientCredentials: []
      description: Retrieves a paginated result set based on the given list identifier.
      parameters:
        - description: Browse inventory on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - description: Browse inventory on behalf of this dynamic list identifier.
          name: dynamicListIdentifier
          in: path
          required: true
          schema:
            type: string
          example: dynamic-list-1
        - description: Skip to page.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - description: Skip to page.
          name: size
          in: query
          required: false
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 20
          example: 20
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInventoryView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearchByListResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearchByList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearchByList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearchByList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearchByList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearchByList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventorySearchByList503Response'
  /api/company/{companyIdentifier}/inventory/country/list:
    get:
      tags:
        - Discover
      summary: Show Inventory Countries
      operationId: Discover_inventoryCountryList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of countries affiliate has access to.
      parameters:
        - description: List countries for inventory on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCountryListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCountryList400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCountryList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCountryList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCountryList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCountryList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCountryList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCountryList503Response'
  /api/company/{companyIdentifier}/inventory/city/list:
    get:
      tags:
        - Discover
      summary: Show Inventory Cities
      operationId: Discover_inventoryCityList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of cities affiliate has access to.
      parameters:
        - description: List cities for inventory on behalf of this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCityListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCityList400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCityList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCityList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCityList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCityList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCityList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscoverInventoryCityList503Response'
  /api/company/{companyIdentifier}/inventory/campaign/list:
    get:
      tags:
        - Campaign
      summary: Show campaign inventory
      operationId: Campaign_showInventoryList
      security:
        - oauth2ClientCredentials: []
      description: Show array of campaign inventory
      parameters:
        - description: Show campaigns for this company
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignShowInventoryListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignShowInventoryList400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/CampaignShowInventoryList400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignShowInventoryList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CampaignShowInventoryList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CampaignShowInventoryList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CampaignShowInventoryList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CampaignShowInventoryList503Response'
  /api/company/{companyIdentifier}/dynamic/list:
    get:
      tags:
        - Inventory Grids
      summary: Show Saved Searches
      operationId: InventoryGrids_getSavedSearches
      security:
        - oauth2ClientCredentials: []
      description: Retrieve all saved searches for owner
      parameters:
        - description: List searches owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsGetSavedSearchesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsGetSavedSearches400Response'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/InventoryGridsGetSavedSearches400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGridsGetSavedSearches415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsGetSavedSearches415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryGridsGetSavedSearches415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InventoryGridsGetSavedSearches415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryGridsGetSavedSearches503Response'
  /api/company/{companyIdentifier}/configuration/list:
    get:
      tags:
        - Customization
      summary: Show Customizations
      operationId: Customization_getCompanyCustomizations
      security:
        - oauth2ClientCredentials: []
      description: Retrieve a list of customizations for specified company.
      parameters:
        - description: Show customizations for this company
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetCompanyCustomizationsResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetCompanyCustomizations400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetCompanyCustomizations400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetCompanyCustomizations415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetCompanyCustomizations415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetCompanyCustomizations415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetCompanyCustomizations415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CustomizationGetCompanyCustomizations503Response
  /api/company/{companyIdentifier}/booking/{bookingIdentifier}:
    get:
      tags:
        - Bookings
      summary: Show Booking
      operationId: Bookings_showByIdentifier
      security:
        - oauth2ClientCredentials: []
      description: Show a booking record by its identifier.
      parameters:
        - description: Show booking for company identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - description: Show booking with booking identifier
          name: bookingIdentifier
          in: path
          required: true
          schema:
            type: string
          example: booking-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowByIdentifierResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingsShowByIdentifier400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowByIdentifier415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookingsShowByIdentifier415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/BookingsShowByIdentifier415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookingsShowByIdentifier415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingsShowByIdentifier503Response'
  /api/company/{companyIdentifier}/booking/roomrate/list:
    get:
      tags:
        - Bookings
      summary: Show Booked Master Rates
      operationId: Bookings_showMasterRates
      security:
        - oauth2ClientCredentials: []
      description: Show a list of unique master rates that created a booking.
      parameters:
        - description: >-
            Show unique master rates for booking made with the help of company
            identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowMasterRatesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowMasterRates400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingsShowMasterRates400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowMasterRates415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookingsShowMasterRates415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/BookingsShowMasterRates415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookingsShowMasterRates415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingsShowMasterRates503Response'
  /api/company/{companyIdentifier}/booking/hotel/list:
    get:
      tags:
        - Bookings
      summary: Show Booked Hotels
      operationId: Bookings_showBookedHotels
      security:
        - oauth2ClientCredentials: []
      description: >-
        Show a list of unique hotels that were responsible for creating bookings
        through this affiliate sales channel.
      parameters:
        - description: >-
            Show unique hotels for booking made with the help of company
            identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowBookedHotelsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowBookedHotels400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingsShowBookedHotels400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowBookedHotels415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookingsShowBookedHotels415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/BookingsShowBookedHotels415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookingsShowBookedHotels415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingsShowBookedHotels503Response'
  /api/company/{companyIdentifier}/booking/engine/list:
    get:
      tags:
        - Bookings
      summary: Show Booked Applications
      operationId: Bookings_showBookedApplicationsList
      security:
        - oauth2ClientCredentials: []
      description: >-
        Show a list of unique applications that were responsible for creating
        bookings through this affiliate sales channel.
      parameters:
        - description: >-
            Show unique applications for booking made with the help of company
            identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BookingsShowBookedApplicationsListResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BookingsShowBookedApplicationsList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/BookingsShowBookedApplicationsList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BookingsShowBookedApplicationsList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/BookingsShowBookedApplicationsList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/BookingsShowBookedApplicationsList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/BookingsShowBookedApplicationsList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/BookingsShowBookedApplicationsList503Response
  /api/company/{companyIdentifier}/booking/engine/configuration/list:
    get:
      tags:
        - Bookings
      summary: Show Booked Customizations
      operationId: Bookings_showCustomizationsList
      security:
        - oauth2ClientCredentials: []
      description: >-
        Show a list of unique customizations that were responsible for creating
        bookings through this affiliate sales channel.
      parameters:
        - description: >-
            Show unique customizations for booking made with the help of company
            identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowCustomizationsListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowCustomizationsList400Response'
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/BookingsShowCustomizationsList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsShowCustomizationsList415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookingsShowCustomizationsList415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/BookingsShowCustomizationsList415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookingsShowCustomizationsList415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingsShowCustomizationsList503Response'
  /api/company/{companyIdentifier}/syndication/entry/list:
    get:
      tags:
        - Syndication Entry Publisher
      summary: Show WinkLinks list
      operationId: SyndicationEntryPublisher_showList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of syndication entries.
      parameters:
        - description: List syndication entries owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicationEntryPublisherShowListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowList503Response
  /api/company/{companyIdentifier}/syndication/category/list:
    get:
      tags:
        - Syndication Entry Publisher
      summary: Show WinkLinks list
      operationId: SyndicationEntryPublisher_showCategoryList
      security:
        - oauth2ClientCredentials: []
      description: Retrieve list of syndication categories.
      parameters:
        - description: List syndication categories owned by this owner identifier.
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: owner-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowCategoryListResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowCategoryList400Response
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowCategoryList400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowCategoryList415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowCategoryList415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowCategoryList415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowCategoryList415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/SyndicationEntryPublisherShowCategoryList503Response
  /api/company/list:
    get:
      tags:
        - Company
      summary: Show Companies
      operationId: Company_listOwnedCompanies
      security:
        - oauth2ClientCredentials: []
      description: List all companies owned by caller
      parameters:
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListOwnedCompaniesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListOwnedCompanies400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyListOwnedCompanies400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListOwnedCompanies415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyListOwnedCompanies415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyListOwnedCompanies415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyListOwnedCompanies415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyListOwnedCompanies503Response'
  /api/application/{id}/revoke:
    get:
      tags:
        - Application
      summary: Revoke Application Credentials
      operationId: Application_refreshCredentials
      security:
        - oauth2ClientCredentials: []
      description: Refreshes the clientId and secretKey properties.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeClientIdResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRefreshCredentialsResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationRefreshCredentials400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRefreshCredentials415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationRefreshCredentials415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationRefreshCredentials415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationRefreshCredentials415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationRefreshCredentials503Response'
  /api/application/list:
    get:
      tags:
        - Application
      summary: Show Applications
      operationId: Application_listApplications
      security:
        - oauth2ClientCredentials: []
      description: List all applications owned by creating entity
      parameters:
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListApplicationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListApplications400Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationListApplications400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListApplications415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationListApplications415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplicationListApplications415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationListApplications415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationListApplications503Response'
  /api/company/{companyIdentifier}/sales/request/{salesChannelRequestIdentifier}:
    delete:
      tags:
        - Hotel Relationship Requests
      summary: Delete request
      operationId: HotelRelationshipRequests_deleteRequest
      security:
        - oauth2ClientCredentials: []
      description: Delete a relationship request
      parameters:
        - description: Remove hotel request owned by this company identifier
          name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
          example: company-1
        - description: Remove hotel request with this identifier
          name: salesChannelRequestIdentifier
          in: path
          required: true
          schema:
            type: string
          example: sales-channel-1
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEntryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsDeleteRequestResponse
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsDeleteRequest400Response1
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsDeleteRequest415Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsDeleteRequest415Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsDeleteRequest415Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsDeleteRequest415Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/HotelRelationshipRequestsDeleteRequest503Response
  /api/company/{companyIdentifier}/manager/{email}:
    delete:
      tags:
        - Company
      summary: Remove Manager
      operationId: Company_removeManager
      security:
        - oauth2ClientCredentials: []
      description: Disassociate user from this company.
      parameters:
        - name: companyIdentifier
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: Wink-Version
          in: header
          schema:
            type: string
            enum:
              - '2.0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyView_Affiliate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyRemoveManagerResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyRemoveManager400Response1'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyRemoveManager415Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyRemoveManager415Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyRemoveManager415Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyRemoveManager415Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyRemoveManager503Response'
components:
  schemas:
    GenericErrorMessage:
      description: Generic error message
      type: object
      properties:
        timestamp:
          type: string
          xml:
            attribute: true
        status:
          type: integer
          format: int32
          xml:
            attribute: true
        error:
          type: string
        message:
          type: string
        path:
          type: string
      xml:
        name: ErrorMessage
    SimpleDescription_Affiliate:
      description: Localized link descriptions
      required:
        - description
        - language
      type: object
      properties:
        description:
          description: Longer text description
          maxLength: 2147483647
          minLength: 1
          type: string
          example: >-
            This is a longer description that explains its relationship to
            parent nicely.
        name:
          description: Use as title or short text description
          type: string
          example: An example title
        language:
          description: Indicate which language this description is written in.
          maxLength: 2
          minLength: 2
          type: string
          example: en
          default: en
    UpsertSupplierUrlRequest_Affiliate:
      description: Upserts a SupplierUrl entity
      required:
        - descriptions
        - engineConfigurationIdentifier
        - keywords
        - multimediaIdentifiers
        - supplierIdentifier
        - supplierUrlName
      type: object
      properties:
        supplierUrlName:
          description: Descriptive supplierUrlName of this url for seller use only
          type: string
          example: My Bali Villa
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        descriptions:
          description: Localized link descriptions
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            description: Keywords
            type: string
            example: bali
        twitterAccount:
          description: Twitter account is used with OpenGraph data
          type: string
          example: '@travelikoworld'
        facebookAppId:
          description: Facebook APP ID is used with OpenGraph data
          type: string
          example: '19827398721938798237'
        theme:
          description: Url theme controls the look and feel of the ad banner.
          type: string
          example: THEME_1
          enum:
            - THEME_1
        supplierIdentifier:
          description: The entity supplying the inventory. Usually a hotel.
          type: string
          example: hotel-1
        multimediaIdentifiers:
          description: Cloudinary identifiers
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - cloudinary-image-1
          items:
            description: Cloudinary identifiers
            type: string
            example: '["cloudinary-image-1"]'
        animate:
          description: Create an animated gif instead of a list of images
          type: boolean
          example: true
          default: false
        animateDelay:
          description: Animation delay in milliseconds
          type: integer
          format: int32
          example: 1000
          default: -1
    SupplierUrlView_Affiliate:
      required:
        - supplierUrl
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        supplierUrl:
          $ref: '#/components/schemas/SupplierUrl_Affiliate'
    SupplierUrl_Affiliate:
      description: Supplier URL
      required:
        - descriptions
        - engineConfigurationIdentifier
        - identifier
        - keywords
        - multimediaIdentifiers
        - sellerIdentifier
        - status
        - supplierIdentifier
        - supplierUrlName
        - uniqueId
      type: object
      properties:
        identifier:
          description: Unique identifier
          type: string
          format: uuid
        sellerIdentifier:
          description: Company identifier
          type: string
          format: uuid
        supplierUrlName:
          description: Descriptive supplierUrlName of this url for seller use only
          type: string
          example: My Bali Villa
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        descriptions:
          description: Localized link descriptions
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            description: Keywords
            type: string
            example: bali
        uniqueId:
          description: Unique link id
          type: string
          example: HBDG87f2
        twitterAccount:
          description: Twitter account is used with OpenGraph data
          type: string
          example: '@travelikoworld'
        facebookAppId:
          description: Facebook APP ID is used with OpenGraph data
          type: string
          example: '19827398721938798237'
        theme:
          description: Url theme controls the look and feel of the ad banner.
          type: string
          example: THEME_1
          enum:
            - THEME_1
        status:
          description: Url sell status
          type: string
          example: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
            - REMOVED
        supplierIdentifier:
          description: The entity supplying the inventory. Usually a hotel.
          type: string
          example: hotel-1
        multimediaIdentifiers:
          description: Cloudinary identifiers
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - cloudinary-image-1
          items:
            description: Cloudinary identifiers
            type: string
            example: '["cloudinary-image-1"]'
        animate:
          description: Create an animated gif instead of a list of images
          type: boolean
          example: true
          default: false
        animateDelay:
          description: Animation delay in milliseconds
          type: integer
          format: int32
          example: 1000
          default: -1
    StaticSellerList_Affiliate:
      description: A curated list is a bucket that holds any type of travel inventory.
      required:
        - name
      type: object
      properties:
        identifier:
          description: Unique record identifier
          type: string
          format: uuid
        ownerIdentifier:
          description: List creator
          type: string
          format: uuid
        name:
          description: Name of curated list
          type: string
          example: Top 3 hotels in Chiang Mai
        type:
          description: Static seller list type
          type: string
          example: NORMAL
          enum:
            - FAVORITE
            - NORMAL
    Address_Affiliate:
      description: Address information
      required:
        - address1
        - city
      type: object
      properties:
        address1:
          description: Address line 1
          type: string
          example: 234 Near da beach
        address2:
          description: Address line 2
          type: string
          example: 'Pebble #5001'
        state:
          description: State
          type: string
          example: CA
        postalCode:
          description: Postal / zip code
          type: string
          example: '90210'
        county:
          description: County
          type: string
          example: Alameda county
        city:
          $ref: '#/components/schemas/GeoName_Affiliate'
        valid:
          type: boolean
        fullAddress:
          type: string
    AdvanceBookingRateQualifier_Affiliate:
      description: Restrict promotion to users who want to book in advance.
      type: object
    ArrivalDaysOfWeekRateQualifier_Affiliate:
      description: Restrict promotion to specific days of the week the guest is arriving.
      type: object
    AvailableDaysOfWeekRateQualifier_Affiliate:
      description: >-
        Restrict promotion to specific days of the week the promotion is
        available.
      type: object
    BlackoutDate_Affiliate:
      description: Exclude this promotion from specific date ranges.
      type: object
    CityRateQualifier_Affiliate:
      description: >-
        Restrict promotion to specific cities. See [Geo-IP city geoname
        data](https://api.wink.travel)
      type: object
    Contact_Affiliate:
      description: Contact details for reservations desk
      type: object
      properties:
        summary:
          description: Summary
          type: string
          example: |-
            John Smith
            0123456768
            johnsmith@email.com
        firstName:
          description: Contact first name
          type: string
          example: John
        lastName:
          description: Contact last name
          type: string
          example: Smith
        email:
          description: Contact E-mail
          type: string
          example: johnsmith@email.com
        secondaryEmail:
          description: Contact secondary Email
          type: string
          example: johnsmith2@email.com
        phoneNumber:
          description: Contact phone number
          type: string
          example: '+12125551212'
        fullName:
          description: First and last name
          type: string
          example: John Smith
    ContinentRateQualifier_Affiliate:
      description: >-
        Restrict promotion to specific continents. See [Geo-IP continent geoname
        data](https://api.wink.travel)
      type: object
    CountryRateQualifier_Affiliate:
      description: >-
        Restrict promotion to specific countries. See [Geo-IP country geoname
        data](https://api.wink.travel)
      type: object
    Country_Affiliate:
      description: Country
      type: object
      properties:
        iso:
          description: ISO code
          type: string
          example: US
        name:
          description: Country name
          type: string
          example: United States
        capital:
          description: Country capital
          type: string
          example: Washington
        continent:
          description: Continent code
          type: string
          example: NA
        currencyCode:
          description: Currency code
          type: string
          example: USD
        currencyName:
          description: Currency name
          type: string
          example: Dollar
        geoNameId:
          description: Country GeoNames identifier
          type: string
          example: '6252001'
    DepartureDaysOfWeekRateQualifier_Affiliate:
      description: Restrict promotion to specific days of the week the guest is departing.
      type: object
    GeoJsonPoint_Affiliate:
      type: object
      properties:
        x:
          type: number
          format: double
        'y':
          type: number
          format: double
        type:
          type: string
        coordinates:
          type: array
          items:
            type: number
            format: double
    GeoName_Affiliate:
      description: >-
        GeoNames have been created at
        [https://geonames.org](https://geonames.org) and contain geographical
        destinations we use as geoname data to associate travel inventory with a
        location.
      type: object
      properties:
        geoNameId:
          description: GeoName identifier
          type: string
          example: '5128581'
        type:
          description: GeoName type
          type: string
          enum:
            - CITY
            - ISLAND
            - OTHER
        name:
          description: Name of city
          type: string
          example: New York City
        urlName:
          description: Url name
          type: string
          example: new-york-city-united-states
        asciiName:
          description: Ascii name of city
          type: string
          example: New York City
        location:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        featureCode:
          type: string
        countryCode:
          type: string
        timezone:
          description: Timezone
          type: string
          example: America/New_York
        country:
          $ref: '#/components/schemas/Country_Affiliate'
        subCountry:
          $ref: '#/components/schemas/SubCountry_Affiliate'
        subSubCountry:
          $ref: '#/components/schemas/SubSubCountry_Affiliate'
    HotelOnMap_Affiliate:
      description: Combined property data.
      type: object
      properties:
        identifier:
          description: >-
            Unique record identifier. This is NOT the same as the unique hotel
            record identifier.
          type: string
          example: document-1
        hotelIdentifier:
          description: Unique hotel record identifier.
          type: string
          format: uuid
        name:
          description: Hotel trade name
          type: string
          example: The Loveliest Hotel
        localName:
          description: >-
            Hotel local name if different from the trade name or if it is the
            local language.
          type: string
          example: Det Beste Hotellet
        chain:
          description: Name of hotel chain if applicable.
          type: string
          example: Hotel chain
        brand:
          description: Name of hotel brand
          type: string
          example: Hotel brand
        urlName:
          description: Unique URL-friendly name slug of hotel
          type: string
          example: the-loveliest-hotel-new-york-united-states
        starRating:
          description: >-
            Official or self-designated property star rating. Note that in some
            regions there are 6-star hotels. They are the same as 5-star hotels
            everywhere else.
          maximum: 6
          minimum: 0
          type: integer
          format: int32
          example: 4
        bookings:
          description: Number of bookings for this property on the wink.travel payment.
          type: integer
          format: int64
          example: 6054
          default: 0
        aggregateReviewRating:
          description: Aggregate score based on all current user reviews.
          type: number
          format: float
          example: 7.8
          default: 0
        location:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        shortDescriptions:
          description: A localized list of short property descriptions
          type: array
          items:
            $ref: '#/components/schemas/LocalizedDescription_Affiliate'
        longDescriptions:
          description: A localized list of longer property descriptions
          type: array
          items:
            $ref: '#/components/schemas/LocalizedDescription_Affiliate'
        aggregateGreendexRating:
          description: >-
            Aggregate Green Index score if the property has answered our
            questionnaire available in the Extranet.
          type: number
          format: float
          example: 7
          default: 0
        lifestyleTypes:
          type: array
          items:
            description: A list of lifestyles the property associates with.
            type: string
            example: LIFESTYLE_HEALTH_FITNESS
            enum:
              - LIFESTYLE_HEALTH_FITNESS
              - LIFESTYLE_RELAX
              - LIFESTYLE_ADULT_ONLY
              - LIFESTYLE_ADVENTURE
              - LIFESTYLE_BUSINESS
              - LIFESTYLE_LGBT
              - LIFESTYLE_SINGLE_PARENT
              - LIFESTYLE_SOLO_FEMALE
              - LIFESTYLE_BEAUTY
              - LIFESTYLE_FOODIE
              - LIFESTYLE_FAMILY
              - LIFESTYLE_ROMANCE
              - LIFESTYLE_COUPLE
              - LIFESTYLE_SOLO
              - LIFESTYLE_BACKPACKER
              - LIFESTYLE_SHOPPING
              - LIFESTYLE_SPORTS
              - LIFESTYLE_MOUNTAIN
              - LIFESTYLE_BEACH
              - LIFESTYLE_CITY
              - LIFESTYLE_COUNTRY
              - LIFESTYLE_CULTURE
              - LIFESTYLE_ECO
        totalReviews:
          description: Count of total reviews left by users at this property.
          type: integer
          format: int32
          example: 989
          default: 0
        available:
          description: >-
            Flag indicating whether the payment has made this property available
            for sale.
          type: boolean
          example: true
          default: false
        hotelAvailable:
          description: >-
            Flag indicating whether the property has made this property
            available for sale.
          type: boolean
          example: true
          default: false
        reservations:
          $ref: '#/components/schemas/Contact_Affiliate'
        socials:
          description: Property's social network accounts
          type: array
          items:
            $ref: '#/components/schemas/Social_Affiliate'
        images:
          description: Property images.
          type: array
          items:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
        videos:
          description: Property videos.
          type: array
          items:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
        policy:
          $ref: '#/components/schemas/PropertyPolicy_Affiliate'
        thirdPartyReviews:
          description: >-
            Array of awards and third party reviews given to property by
            certified / non-certified providers.
          type: array
          items:
            $ref: '#/components/schemas/Recognition_Affiliate'
        attractions:
          description: Number of attractions property has listed on its profile.
          type: integer
          format: int32
          example: 5
          default: 0
        recreations:
          description: Number of activites property has listed on its profile.
          type: integer
          format: int32
          example: 3
          default: 0
        pois:
          description: Number of places property has listed on its profile.
          type: integer
          format: int32
          example: 9
          default: 0
        restaurants:
          description: Number of restaurants property has on its profile.
          type: integer
          format: int32
          example: 2
          default: 0
        meetingRooms:
          description: Number of meeting rooms property has on its profile.
          type: integer
          format: int32
          example: 2
          default: 0
        spas:
          description: Number of spas property has on its profile.
          type: integer
          format: int32
          example: 1
          default: 0
        addOns:
          description: Number of add-ons property has on its profile.
          type: integer
          format: int32
          example: 5
          default: 0
        fullNameOfGeneralManager:
          description: Full name of the property's current and active general manager.
          type: string
          example: John Smith
        profilePictureIdentifierGeneralManager:
          description: Cloudinary identifier referencing image of general manager.
          type: string
          example: cloudinary-identifier-1
        messagesOfGeneralManager:
          description: >-
            A list of localized welcome messages created by the property's
            general manager.
          type: array
          example: >-
            We are excited to see you on our premises sooner than you can say
            lickedy split!
          items:
            $ref: '#/components/schemas/LocalizedDescription_Affiliate'
        locationCategory:
          description: >-
            Supported OTA specification `LOC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: string
          example: '34'
        segmentCategory:
          description: >-
            Supported OTA specification `SEG` code. See [OTA geoname
            data](https://api.wink.travel)
          type: string
          example: '7'
        hotelCategory:
          description: >-
            Supported OTA specification `PCT` code. See [OTA geoname
            data](https://api.wink.travel)
          type: string
          example: '45'
        architecturalStyle:
          description: >-
            Supported OTA specification `ARC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: string
          example: '7'
        whenBuilt:
          description: Year the property was constructed.
          type: string
          example: '1927'
        multimediaIdentifier:
          description: Featured image identifier for this property.
          type: string
          example: media-1
        imageIdentifier:
          description: Featured Cloudinary image identifier for this property.
          type: string
        imageAngle:
          description: >-
            Meta data information about image angle that gives integrators a
            chance to crop this image properly.
          type: string
          example: '-90'
        videoIdentifier:
          description: Featured Cloudinary video identifier for this property.
          type: string
        currencyCode:
          description: Currency code for property.
          type: string
          example: USD
        membershipRateDiscount:
          description: >-
            A property's price score is based on calculating historical pricing
            data. Each property receives a unique score. There is no max score;
            it's there to compare it against other properties.
          type: number
          format: float
          example: 9
          default: 0
        priceScore:
          description: >-
            A property's price score is based on calculating historical pricing
            data. Each property receives a unique score. There is no max score;
            it's there to compare it against other properties.
          type: integer
          format: int32
          example: 9
          default: 0
        perkScore:
          description: >-
            A property's perk score is based on the type of perks that is
            offered to the guests across all master rates. There is no max
            score; it's there to compare it against other properties.
          type: integer
          format: int32
          example: 4
          default: 0
        packageScore:
          description: >-
            A property's package score is based on general availability and
            price for all packages and add-ons offered by the property. There is
            no max score; it's there to compare it against other properties.
          type: integer
          format: int32
          example: 4
          default: 0
        loyaltyScore:
          description: >-
            A property's loyalty score is based on calculating how many
            available rate plans honor loyalty points. There is no max score;
            it's there to compare it against other properties.
          type: integer
          format: int32
          example: 5
          default: 0
        popularScore:
          description: >-
            A property's popular score is based on calculating number of
            bookings across room types. There is no max score; it's there to
            compare it against other properties.
          type: integer
          format: int32
          example: 45
          default: 0
        experienceScore:
          description: >-
            A property's experience score is based on how calculating how many
            types of experiences are available and at what price ranges. There
            is no max score; it's there to compare it against other properties.
          type: integer
          format: int32
          example: 5
          default: 0
        availabilityScore:
          description: >-
            A property's availability score is based on general availability of
            all room types. If most room types are always unavailable, the
            attractiveness of this property goes down. We use this as our
            primary benchmark to decide how and when to feature properties.
            There is no max score; it's there to compare it against other
            properties.
          type: integer
          format: int32
          example: 5
          default: 0
        views:
          description: Total number of user views of this property.
          type: integer
          format: int64
          example: 10432
          default: 0
        hotelAmenityCodes:
          description: >-
            Supported OTA specification `HAC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example:
            - '1'
            - '7'
          items:
            description: >-
              Supported OTA specification `HAC` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '["1","7"]'
        propertyAccessibilityCodes:
          description: >-
            Supported OTA specification `PHY` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example:
            - '1'
            - '7'
          items:
            description: >-
              Supported OTA specification `PHY` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '["1","7"]'
        propertySecurityCodes:
          description: >-
            Supported OTA specification `SEC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example:
            - '1'
            - '7'
          items:
            description: >-
              Supported OTA specification `SEC` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '["1","7"]'
        numberOfRooms:
          description: Number of rooms / keys for this property.
          type: integer
          format: int32
          example: 32
          default: 0
        address:
          $ref: '#/components/schemas/Address_Affiliate'
        active:
          description: >-
            A property is considered active when both available and
            hotelAvailable flags are true.
          type: boolean
          example: true
        urlParameters:
          description: >-
            Convenience data point that creates url friendly query parameters of
            property.
          type: string
    IPRangeRateQualifier_Affiliate:
      description: Restrict promotion to specific IP ranges.
      type: object
    ImageAttribution_Affiliate:
      description: Whether image has attribution properties
      required:
        - name
      type: object
      properties:
        url:
          description: URL to contributor
          type: string
          example: https://maps.google.com/maps/contrib/111628493169070103594
        name:
          description: Name of contributor
          type: string
          example: Samuel Adams
    Inventory_Affiliate:
      description: Channel inventory
      required:
        - address
        - bookable
        - commissionable
        - enabled
        - hotel
        - identifier
        - imageIdentifier
        - inventoryIdentifier
        - inventoryName
        - inventoryNameInEnglish
        - inventoryType
        - location
        - pricePoint
        - quantity
        - salesChannel
      type: object
      properties:
        identifier:
          description: Inventory identifier
          type: string
          format: uuid
        salesChannel:
          $ref: '#/components/schemas/SalesChannel_Affiliate'
        inventoryType:
          description: Inventory type
          type: string
          enum:
            - GUEST_ROOM
            - ADD_ON
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ATTRACTION
            - PLACE
            - ACTIVITY
        inventoryIdentifier:
          description: Inventory type identifier
          type: string
          format: uuid
        inventoryName:
          description: Name of inventory as hotel is seeing it
          type: string
        inventoryNameInEnglish:
          description: Name of inventory as traveler is seeing it
          type: string
        enabled:
          description: Whether this inventory is enabled or not
          type: boolean
          example: true
          default: true
        imageIdentifier:
          description: Main image of inventory
          type: string
        pricePoint:
          description: Level of expensiveness.
          type: string
          example: THREE
          default: THREE
          enum:
            - HALF
            - ONE
            - ONE_HALF
            - TWO
            - TWO_HALF
            - THREE
            - THREE_HALF
            - FOUR
            - FOUR_HALF
            - FIVE
        location:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        address:
          $ref: '#/components/schemas/Address_Affiliate'
        quantity:
          description: quantity
          type: integer
          format: int32
          example: 100
          default: 0
        commissionable:
          description: Whether this is commissionable or not
          type: boolean
          example: true
          default: false
        bookable:
          description: Whether inventory can be booked
          type: boolean
          example: true
          default: true
        hotel:
          $ref: '#/components/schemas/HotelOnMap_Affiliate'
    LengthOfStayRateQualifier_Affiliate:
      description: Restrict promotion to users who want to stay a certain number of days.
      type: object
    LocalizedDescription_Affiliate:
      description: >-
        A list of localized welcome messages created by the property's general
        manager.
      required:
        - description
        - language
      type: object
      properties:
        description:
          description: Longer text description
          maxLength: 2147483647
          minLength: 1
          type: string
          example: >-
            This is a longer description that explains its relationship to
            parent nicely.
        language:
          description: Indicate which language this description is written in.
          maxLength: 2
          minLength: 2
          type: string
          example: en
          default: en
      example: >-
        We are excited to see you on our premises sooner than you can say
        lickedy split!
    MinutesBeforeBookingStartDateRateQualifier_Affiliate:
      description: Restrict promotion to users who want to book a room close to the date.
      type: object
    PrepayRateQualifier_Affiliate:
      description: Restrict promotion to either prepaid / non-prepaid rates.
      type: object
    PromotionRateQualifier_Affiliate:
      description: Restrict promotion by requiring users to enter a promo code.
      type: object
    PropertyPolicy_Affiliate:
      description: Outlines basic policies for the property.
      required:
        - checkInTime
        - checkOutTime
        - childrenAllowed
        - internetAvailability
        - internetConnectionLocation
        - internetConnectionType
        - parkingAccess
        - parkingAvailability
        - petsAllowed
      type: object
      properties:
        childrenAllowed:
          description: Indicates whether property allows children
          type: boolean
          example: true
          default: false
        childrenMinimumAge:
          description: >-
            When a property allows children, it can also indicate what the
            minimum age is for children to be allowed.
          type: integer
          format: int32
          example: 6
        internetAvailability:
          description: Indicates the availability of internet on the property.
          type: string
          example: 'YES'
          enum:
            - 'YES'
            - 'NO'
            - YES_PAID
        internetConnectionType:
          description: Indicates how guests can access the Internet on the property.
          type: string
          example: WIFI
          enum:
            - WIFI
            - CABLE
        internetConnectionLocation:
          description: Indicates where internet is available in and around the property.
          type: string
          example: ENTIRE_PROPERTY
          enum:
            - ENTIRE_PROPERTY
            - PUBLIC_AREAS
            - ALL_ROOMS
            - SOME_ROOMS
            - BUSINESS_CENTER
        parkingAvailability:
          description: Indicates whether parking is available at the property.
          type: string
          example: 'YES'
          enum:
            - 'YES'
            - 'NO'
            - YES_PAID
        parkingAccess:
          description: Indicates what type of parking is available at the property.
          type: string
          example: PRIVATE
          enum:
            - PRIVATE
            - PUBLIC
        petsAllowed:
          description: >-
            Indicates whether pets are allowed on the property. Note: There are
            thousand different kinds of pets. Just because the property allows
            small dogs does not mean the guest can bring a python. Always best
            to check with property.
          type: boolean
          example: true
          default: false
        checkOutTime:
          description: When the guest has to check out.
          type: string
          example: '10:00'
        checkInTime:
          description: When the guest can check in.
          type: string
          example: '14:00'
    RateModifierBundle_Affiliate:
      description: Promotion bundles for this channel
      required:
        - enabled
        - hotelIdentifier
        - identifier
        - items
        - name
      type: object
      properties:
        description:
          type: array
          items:
            $ref: '#/components/schemas/LocalizedDescription_Affiliate'
        identifier:
          description: Unique record identifier
          type: string
          format: uuid
        hotelIdentifier:
          description: Hotel identifier.
          type: string
          format: uuid
        name:
          description: Internal name of promotion ancillary.
          type: string
          example: Early bird - Long Term
        enabled:
          description: Whether this promotion ancillary is enabled or not.
          type: boolean
          example: true
          default: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/RateModifier_Affiliate'
        modifierOverride:
          $ref: '#/components/schemas/VariableCharge_Affiliate'
        type:
          description: Required if manual override modifier is not null
          type: string
          example: DISCOUNT
          enum:
            - PREMIUM
            - DISCOUNT
        pricingType:
          description: >-
            Determines whether this discount should be applied per night, per
            stay or per person - per night; Required if amount override is not
            null
          type: string
          enum:
            - PER_STAY
            - PER_DAY
            - PER_NIGHT
            - PER_USE
            - PER_HOUR
            - PER_PERSON
            - PER_PERSON_PER_NIGHT
            - PER_PERSON_PER_HOUR
            - PER_ADULT
            - PER_ADULT_PER_NIGHT
            - PER_ADULT_PER_HOUR
            - PER_CHILD
            - PER_CHILD_PER_NIGHT
            - PER_CHILD_PER_HOUR
        hasFixedDiscountModifier:
          type: boolean
        hasPercentDiscountModifier:
          type: boolean
        isValid:
          type: boolean
          writeOnly: true
    RateModifier_Affiliate:
      description: Promotions that go together to make up this ancillary.
      required:
        - descriptions
        - enabled
        - hotelIdentifier
        - identifier
        - modifier
        - name
        - pricingType
        - type
      type: object
      properties:
        identifier:
          description: Unique record identifier
          type: string
          format: uuid
        hotelIdentifier:
          description: Hotel identifier.
          type: string
          format: uuid
        name:
          description: Internal name of promotion.
          type: string
          example: Early bird
        type:
          description: >-
            Set whether you want the price to go up or down when the rules of
            this promotion have been satisfied.
          type: string
          example: DISCOUNT
          enum:
            - PREMIUM
            - DISCOUNT
        modifier:
          $ref: '#/components/schemas/VariableCharge_Affiliate'
        enabled:
          description: Whether this promotion is enabled or not.
          type: boolean
          example: true
          default: true
        pricingType:
          description: >-
            This determines whether this discount should be applied per night,
            per stay or per person - per night
          type: string
          example: PER_PERSON_PER_NIGHT
          enum:
            - PER_STAY
            - PER_DAY
            - PER_NIGHT
            - PER_USE
            - PER_HOUR
            - PER_PERSON
            - PER_PERSON_PER_NIGHT
            - PER_PERSON_PER_HOUR
            - PER_ADULT
            - PER_ADULT_PER_NIGHT
            - PER_ADULT_PER_HOUR
            - PER_CHILD
            - PER_CHILD_PER_NIGHT
            - PER_CHILD_PER_HOUR
        descriptions:
          description: >-
            Localized descriptions describing promotion. At least one English
            entry is required.
          type: array
          items:
            $ref: '#/components/schemas/LocalizedDescription_Affiliate'
        cityRateQualifiers:
          description: >-
            Restrict promotion to specific cities. See [Geo-IP city geoname
            data](https://api.wink.travel)
          type: array
          items:
            $ref: '#/components/schemas/CityRateQualifier_Affiliate'
        continentRateQualifiers:
          description: >-
            Restrict promotion to specific continents. See [Geo-IP continent
            geoname data](https://api.wink.travel)
          type: array
          items:
            $ref: '#/components/schemas/ContinentRateQualifier_Affiliate'
        countryRateQualifiers:
          description: >-
            Restrict promotion to specific countries. See [Geo-IP country
            geoname data](https://api.wink.travel)
          type: array
          items:
            $ref: '#/components/schemas/CountryRateQualifier_Affiliate'
        promotionRateQualifiers:
          description: Restrict promotion by requiring users to enter a promo code.
          type: array
          items:
            $ref: '#/components/schemas/PromotionRateQualifier_Affiliate'
        ipRangeRateQualifiers:
          description: Restrict promotion to specific IP ranges.
          type: array
          items:
            $ref: '#/components/schemas/IPRangeRateQualifier_Affiliate'
        roomRangeRateQualifier:
          $ref: '#/components/schemas/RoomRangeRateQualifier_Affiliate'
        prepayRateQualifier:
          $ref: '#/components/schemas/PrepayRateQualifier_Affiliate'
        refundableRateQualifier:
          $ref: '#/components/schemas/RefundableRateQualifier_Affiliate'
        timezoneRateQualifiers:
          description: >-
            Restrict promotion to specific time zones. See [Geo-IP timezone
            geoname data](https://api.wink.travel)
          type: array
          items:
            $ref: '#/components/schemas/TimezoneRateQualifier_Affiliate'
        lastMinuteRateQualifier:
          $ref: >-
            #/components/schemas/MinutesBeforeBookingStartDateRateQualifier_Affiliate
        lengthOfStayRateQualifier:
          $ref: '#/components/schemas/LengthOfStayRateQualifier_Affiliate'
        advanceBookingRateQualifier:
          $ref: '#/components/schemas/AdvanceBookingRateQualifier_Affiliate'
        stayDateRateQualifiers:
          description: Restrict promotion to specific stay dates the user wants to arrive.
          type: array
          items:
            $ref: '#/components/schemas/StayDateRateQualifier_Affiliate'
        sellDateRateQualifiers:
          description: Restrict promotion to specific dates the booking is made.
          type: array
          items:
            $ref: '#/components/schemas/SellDateRateQualifier_Affiliate'
        availableDaysOfWeekRateQualifier:
          $ref: '#/components/schemas/AvailableDaysOfWeekRateQualifier_Affiliate'
        arrivalDaysOfWeekRateQualifier:
          $ref: '#/components/schemas/ArrivalDaysOfWeekRateQualifier_Affiliate'
        departureDaysOfWeekRateQualifier:
          $ref: '#/components/schemas/DepartureDaysOfWeekRateQualifier_Affiliate'
        requiredDaysOfWeekRateQualifier:
          $ref: '#/components/schemas/RequiredDaysOfWeekRateQualifier_Affiliate'
        masterRateIdentifiers:
          description: Restrict on specific master rates.
          type: array
          example:
            - master-rate-1
            - master-rate-2
          items:
            description: Restrict on specific master rates.
            type: string
            example: '["master-rate-1","master-rate-2"]'
        addOnIdentifiers:
          description: Restrict on specific add-ons.
          type: array
          example:
            - add-on-1
            - add-on-2
          items:
            description: Restrict on specific add-ons.
            type: string
            example: '["add-on-1","add-on-2"]'
        ratePlanIdentifiers:
          description: Restrict on specific rate plans.
          type: array
          example:
            - rate-plan-1
            - rate-plan-2
          items:
            description: Restrict on specific rate plans.
            type: string
            example: '["rate-plan-1","rate-plan-2"]'
        blackoutDates:
          description: Exclude this promotion from specific date ranges.
          type: array
          items:
            $ref: '#/components/schemas/BlackoutDate_Affiliate'
    Recognition_Affiliate:
      description: >-
        Array of awards and third party reviews given to property by certified /
        non-certified providers.
      required:
        - category
        - hotelIdentifier
        - identifier
        - provider
        - rating
        - type
      type: object
      properties:
        identifier:
          description: Recognition identifier.
          type: string
          format: uuid
        hotelIdentifier:
          description: Unique hotel identifier.
          type: string
          format: uuid
        type:
          description: >-
            Type of rating system the recognition operated on. This allows us to
            display the score properly.
          type: string
          example: PERCENT_RATING
          enum:
            - STAR_RATING
            - NUMERIC_RATING
            - PERCENT_RATING
        category:
          description: Recognition category.
          type: string
          example: AWARD
          enum:
            - THIRD_PARTY_REVIEW
            - PUBLICATION
            - AWARD
        provider:
          description: The name of the entity that administers this recognition.
          type: string
          example: Michelin
        rating:
          description: The actual award or rating received by the hotel facility.
          minimum: 0
          exclusiveMinimum: false
          type: number
          format: float
          example: 8.5
        maxRating:
          description: >-
            Use this to let hotels indicate what the total score for this award
            is.
          type: number
          format: float
          example: 10
        date:
          description: The date the award was received
          type: string
          format: date
          example: '2020-10-24'
        officialAppointmentInd:
          description: >-
            When true, this indicates the property has received official
            permission from the award provider to use the rating in publications
            and marketing materials; when false this permission has not been
            granted.
          type: boolean
          example: true
        ratingSymbol:
          description: >-
            Provides the symbol used in the rating. Used in conjunction with the
            Rating.
          type: string
          example: '*'
    RefundableRateQualifier_Affiliate:
      description: Restrict promotion to either refundable / non-refundable rates.
      type: object
    RequiredDaysOfWeekRateQualifier_Affiliate:
      description: Restrict promotion to specific days of the week the guest has to stay.
      type: object
    RoomRangeRateQualifier_Affiliate:
      description: Restrict promotion by restricting to how many rooms the user wants.
      type: object
    SalesChannel_Affiliate:
      description: Parent sales channel
      required:
        - blacklisted
        - identifier
        - ownerIdentifier
        - ownerName
        - subType
        - supplierIdentifier
        - supplierName
      type: object
      properties:
        identifier:
          description: Unique record identifier of this segment / account
          type: string
          format: uuid
        supplierIdentifier:
          description: Channel is owned by this supplier identifier.
          type: string
          format: uuid
        supplierName:
          description: Name of property / supplier that owns this channel
          type: string
          example: Hotel 1
        supplierAvailable:
          description: Flag when supplier not available. E.g. Hotel disables property
          type: boolean
          example: true
          default: true
        subType:
          description: What type of segment of channel is this.
          type: string
          example: DIRECT
          enum:
            - DIRECT
            - APPLICATION
            - HOTEL
            - TRAVELIKO
            - CORPORATE
            - TRAVEL_AGENT
            - INFLUENCER
            - BLOGGER
            - DESTINATION
            - CHANNEL_MANAGER
            - PROPERTY_MANAGEMENT_SYSTEM
            - CENTRAL_RESERVATION_SYSTEM
            - GOOGLE_HOTEL_API
            - MANAGEMENT_COMPANY
            - CHAIN
            - BRAND
            - EVENT_ORGANIZER
        ownerIdentifier:
          description: >-
            A specific identifier for the company / corporation / travel agency
            that is retrieving the rates
          type: string
          format: uuid
        ownerName:
          description: >-
            Name of the owner / affiliate. `Hotel booking engine` when it's the
            booking engine.
          type: string
          example: Owner 1
        enabled:
          description: Flag the supplier can use to enable / disable this channel
          type: boolean
          example: true
          default: true
        channelDisabled:
          description: >-
            System override by payment to disable. E.g. Platform disables
            supplier.
          type: boolean
        blacklisted:
          description: >-
            A way to blacklist a specific channel a property doesn't want to
            send inventory to.
          type: boolean
        percentDiscount:
          description: >-
            Percent discount on this channel and all its children [unless
            configured at the child level].
          maximum: 1
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
          format: float
          example: 0.15
        commission:
          description: >-
            Amount of sales commission earned through this channel and all its
            children [unless configured at the child level].
          maximum: 1
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
          format: float
          example: 0.2
        rateModifiers:
          description: Promotions for this channel
          type: array
          items:
            $ref: '#/components/schemas/RateModifier_Affiliate'
        rateModifierBundles:
          description: Promotion bundles for this channel
          type: array
          items:
            $ref: '#/components/schemas/RateModifierBundle_Affiliate'
    SellDateRateQualifier_Affiliate:
      description: Restrict promotion to specific dates the booking is made.
      type: object
    SimpleMultimedia_Affiliate:
      description: Multimedia that contains less information than Multimedia object
      required:
        - height
        - identifier
        - multimediaIdentifier
        - source
        - type
        - width
      type: object
      properties:
        multimediaIdentifier:
          description: Document identifier
          type: string
          format: uuid
        identifier:
          description: Use this identifier to communicate with Cloudinary.
          type: string
          example: cloudinary-image-1
        type:
          description: Whether Cloudinary media is a VIDEO or IMAGE.
          type: string
          example: IMAGE
          enum:
            - IMAGE
            - VIDEO
            - AUDIO
            - RAW
        source:
          description: Currently ONLY using Cloudinary to store all image / video assets.
          type: string
          example: CLOUDINARY
          default: CLOUDINARY
          enum:
            - YOUTUBE
            - CLOUDINARY
        sort:
          description: >-
            Sort allows you to control how you want to sort this record in a
            list of media records.
          type: integer
          format: int32
          example: 10
          default: 999
        angle:
          description: Media angle
          type: string
          example: '-90'
        width:
          description: Media width in pixels.
          type: integer
          format: int32
          example: 2560
        height:
          description: Media height in pixels.
          type: integer
          format: int32
          example: 1600
        published:
          description: >-
            Instead of deleting the media, choose to un-publish it instead for
            later re-use. Could be you keep seasonal images of the property.
          type: boolean
          example: true
          default: false
        category:
          description: >-
            Supported OTA specification `PIC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: string
          example: '1'
        descriptions:
          description: >-
            Localized media captions to give user some context about where this
            media was taken.
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        lifestyleType:
          description: >-
            Associate this media with a specific lifestyle type. A user
            searching and filtering inventory based on lifestyles can be shown
            relevant media first.
          type: string
          example: LIFESTYLE_HEALTH_FITNESS
          enum:
            - LIFESTYLE_HEALTH_FITNESS
            - LIFESTYLE_RELAX
            - LIFESTYLE_ADULT_ONLY
            - LIFESTYLE_ADVENTURE
            - LIFESTYLE_BUSINESS
            - LIFESTYLE_LGBT
            - LIFESTYLE_SINGLE_PARENT
            - LIFESTYLE_SOLO_FEMALE
            - LIFESTYLE_BEAUTY
            - LIFESTYLE_FOODIE
            - LIFESTYLE_FAMILY
            - LIFESTYLE_ROMANCE
            - LIFESTYLE_COUPLE
            - LIFESTYLE_SOLO
            - LIFESTYLE_BACKPACKER
            - LIFESTYLE_SHOPPING
            - LIFESTYLE_SPORTS
            - LIFESTYLE_MOUNTAIN
            - LIFESTYLE_BEACH
            - LIFESTYLE_CITY
            - LIFESTYLE_COUNTRY
            - LIFESTYLE_CULTURE
            - LIFESTYLE_ECO
        attribution:
          description: Whether image has attribution properties
          type: array
          items:
            $ref: '#/components/schemas/ImageAttribution_Affiliate'
        isLandscape:
          description: True if media width is greater or equal to height
          type: boolean
          example: true
    Social_Affiliate:
      description: Social network
      type: object
      properties:
        type:
          description: Type of social network.
          type: string
          enum:
            - FACEBOOK
            - INSTAGRAM
            - SKYPE
            - TRIP_ADVISOR
            - TWITTER
            - GOOGLE_PLUS
            - WHATSAPP
            - LINE
            - WECHAT
            - VIBER
            - SNAPCHAT
            - WEIBO
            - RENREN
            - WEBSITE
            - QQ
            - TIKTOK
        location:
          description: URL or social network identifier to social network profile
          type: string
        enabled:
          description: Whether social network is available for use.
          type: boolean
    StaticSellerListItemView_Affiliate:
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          readOnly: true
          example: 12
        id:
          description: Unique document identifier
          type: string
          format: uuid
          readOnly: true
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
          readOnly: true
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
          readOnly: true
        staticSellerListItem:
          $ref: '#/components/schemas/StaticSellerListItem_Affiliate'
    StaticSellerListItem_Affiliate:
      type: object
      properties:
        identifier:
          description: Identifier
          type: string
        parent:
          $ref: '#/components/schemas/StaticSellerList_Affiliate'
        inventory:
          $ref: '#/components/schemas/Inventory_Affiliate'
        hotel:
          $ref: '#/components/schemas/HotelOnMap_Affiliate'
        sort:
          description: Sort key
          type: integer
          format: int32
    StaticSellerListView_Affiliate:
      description: Curated list object
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          readOnly: true
          example: 12
        id:
          description: Unique document identifier
          type: string
          format: uuid
          readOnly: true
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
          readOnly: true
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
          readOnly: true
        staticSellerList:
          $ref: '#/components/schemas/StaticSellerList_Affiliate'
    StaticSellerListWrapper_Affiliate:
      description: Contains both the curated list and all its items.
      type: object
      properties:
        list:
          $ref: '#/components/schemas/StaticSellerListView_Affiliate'
        items:
          description: Travel inventory items contained in list
          type: array
          items:
            $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
    StayDateRateQualifier_Affiliate:
      description: Restrict promotion to specific stay dates the user wants to arrive.
      type: object
    SubCountry_Affiliate:
      description: Country subdivision such as a state or province
      type: object
      properties:
        name:
          description: Sub-country name
          type: string
          example: New York
        asciiName:
          description: Sub-country ascii name
          type: string
          example: New York
        geoNameId:
          description: Sub-country GeoNames identifier
          type: string
          example: '5128638'
    SubSubCountry_Affiliate:
      description: Country sub sub division
      type: object
      properties:
        name:
          type: string
        asciiName:
          type: string
        geoNameId:
          type: string
    TimezoneRateQualifier_Affiliate:
      description: >-
        Restrict promotion to specific time zones. See [Geo-IP timezone geoname
        data](https://api.wink.travel)
      type: object
    VariableCharge_Affiliate:
      type: object
    CopyMoveStaticSellerListItemRequest_Affiliate:
      required:
        - targetListIdentifier
      type: object
      properties:
        targetListIdentifier:
          type: string
    UpsertSellerUrlRequest_Affiliate:
      description: Upserts a SellerUrl entity
      required:
        - channelInventoryIdentifier
        - descriptions
        - engineConfigurationIdentifier
        - inventoryType
        - keywords
        - multimediaIdentifiers
        - sellerUrlName
        - supplierIdentifier
        - theme
        - transactionalItemIdentifier
      type: object
      properties:
        sellerUrlName:
          description: Descriptive name of this url for seller use only
          type: string
          example: My Bali Villa
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        descriptions:
          description: Localized link descriptions
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          description: Keywords
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - bali
          items:
            description: Keywords
            type: string
            example: '["bali"]'
        twitterAccount:
          description: Twitter account is used with OpenGraph data
          type: string
          example: '@travelikoworld'
        facebookAppId:
          description: Facebook APP ID is used with OpenGraph data
          type: string
          example: '19827398721938798237'
        theme:
          description: Url theme controls the look and feel of the ad banner.
          type: string
          example: THEME_1
          enum:
            - THEME_1
        inventoryType:
          description: Inventory type
          type: string
          example: GUEST_ROOM
          enum:
            - HOTEL
            - GUEST_ROOM
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ADD_ON
            - ATTRACTION
            - ACTIVITY
            - PLACE
        supplierIdentifier:
          description: The entity supplying the inventory. Usually a hotel.
          type: string
          example: hotel-1
        channelInventoryIdentifier:
          description: Selected inventory record
          type: string
          example: channel-inventory-1
        transactionalItemIdentifier:
          description: >-
            The transactional item to retrieve pricing for. If left empty, will
            find the cheapest priced item.
          type: string
          example: transactional-item-1
        multimediaIdentifiers:
          description: Cloudinary identifiers
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - cloudinary-image-1
          items:
            description: Cloudinary identifiers
            type: string
            example: '["cloudinary-image-1"]'
        animate:
          description: Create an animated gif instead of a list of images
          type: boolean
          example: true
          default: false
        animateDelay:
          description: Animation delay in milliseconds
          type: integer
          format: int32
          example: 1000
          default: -1
    SellerUrlView_Affiliate:
      required:
        - sellerUrl
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        sellerUrl:
          $ref: '#/components/schemas/SellerUrl_Affiliate'
    SellerUrl_Affiliate:
      description: Seller URL
      required:
        - channelInventoryIdentifier
        - channelInventoryType
        - descriptions
        - engineConfigurationIdentifier
        - identifier
        - inventoryType
        - keywords
        - multimediaIdentifiers
        - sellerIdentifier
        - sellerUrlName
        - status
        - supplierIdentifier
        - theme
        - transactionalItemIdentifier
        - uniqueId
      type: object
      properties:
        identifier:
          description: Unique identifier
          type: string
          format: uuid
        sellerIdentifier:
          description: Company identifier
          type: string
          format: uuid
        sellerUrlName:
          description: Descriptive name of this url for seller use only
          type: string
          example: My Bali Villa
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        descriptions:
          description: Localized link descriptions
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          description: Keywords
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - bali
          items:
            description: Keywords
            type: string
            example: '["bali"]'
        uniqueId:
          description: Unique link id
          type: string
          example: HBDG87f2
        twitterAccount:
          description: Twitter account is used with OpenGraph data
          type: string
          example: '@travelikoworld'
        facebookAppId:
          description: Facebook APP ID is used with OpenGraph data
          type: string
          example: '19827398721938798237'
        theme:
          description: Url theme controls the look and feel of the ad banner.
          type: string
          example: THEME_1
          enum:
            - THEME_1
        status:
          description: Url sell status
          type: string
          example: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
            - REMOVED
        inventoryType:
          description: Inventory type
          type: string
          example: GUEST_ROOM
          enum:
            - HOTEL
            - GUEST_ROOM
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ADD_ON
            - ATTRACTION
            - ACTIVITY
            - PLACE
        channelInventoryType:
          description: >-
            Channel inventory type is a subset of inventory type in that it does
            not include the `HOTEL` type. THe way it works is, as a seller you
            might want to sell a guest room but instead of showing the price of
            that guest room, you would like to display the best room type price
            for the property.
          type: string
          example: GUEST_ROOM
          enum:
            - GUEST_ROOM
            - ADD_ON
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ATTRACTION
            - PLACE
            - ACTIVITY
        supplierIdentifier:
          description: The entity supplying the inventory. Usually a hotel.
          type: string
          example: hotel-1
        channelInventoryIdentifier:
          description: Selected inventory record
          type: string
          example: channel-inventory-1
        transactionalItemIdentifier:
          description: >-
            The transactional item to retrieve pricing for. If left empty, will
            find the cheapest priced item.
          type: string
          example: transactional-item-1
        multimediaIdentifiers:
          description: Cloudinary identifiers
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - cloudinary-image-1
          items:
            description: Cloudinary identifiers
            type: string
            example: '["cloudinary-image-1"]'
        animate:
          description: Create an animated gif instead of a list of images
          type: boolean
          example: true
          default: false
        animateDelay:
          description: Animation delay in milliseconds
          type: integer
          format: int32
          example: 1000
          default: -1
    ConfigurableGeoJsonCircle_Affiliate:
      description: A way to persist a GeoJSON circle
      required:
        - point
        - radius
      type: object
      properties:
        radius:
          description: Circle radius from center
          type: number
          format: double
          example: 2.5
        point:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
    ConfigurableGeoJsonPoint_Affiliate:
      description: A way to persist a GeoJSON map point
      required:
        - point
      type: object
      properties:
        point:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
    ConfigurableGeoJsonPolygon_Affiliate:
      description: A way to persist a GeoJSON polygon
      required:
        - polygon
      type: object
      properties:
        polygon:
          $ref: '#/components/schemas/GeoJsonPolygon_Affiliate'
    ConfigurableGeoJsonRectangle_Affiliate:
      description: A way to persist a GeoJSON rectangle
      required:
        - rectangle
      type: object
      properties:
        rectangle:
          $ref: '#/components/schemas/GeoJsonRectangle_Affiliate'
    GeoJsonLineString_Affiliate:
      type: object
      properties:
        type:
          type: string
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Point_Affiliate'
    GeoJsonPolygon_Affiliate:
      description: A GeoJSON polygon
      type: object
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/Point_Affiliate'
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/GeoJsonLineString_Affiliate'
        type:
          type: string
    GeoJsonRectangle_Affiliate:
      description: A GeoJSON rectangle
      required:
        - northEast
        - southWest
      type: object
      properties:
        southWest:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        northEast:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
    Point_Affiliate:
      type: object
      properties:
        x:
          type: number
          format: double
        'y':
          type: number
          format: double
    UpsertAdvancedMapConfigurationRequest_Affiliate:
      description: Object to save AdvancedMapConfiguration
      required:
        - center
        - displayType
        - draggable
        - engineConfigurationIdentifier
        - initialZoomLevel
        - mapHeight
        - mapMarkerColor
        - mapStyle
        - name
        - type
        - typeIdentifier
        - zoomable
      type: object
      properties:
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        name:
          description: Name of map
          type: string
          example: My lovely map
        typeIdentifier:
          description: >-
            Inventory type identifier. Either a single channel inventory
            identifier, a list identifier or a dynamic search identifier.
          type: string
          format: uuid
        type:
          description: Type of inventory
          type: string
          example: LIST
          enum:
            - SINGLE
            - LIST
            - SEARCH
        center:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        draggable:
          description: User can move around / pan the map
          type: boolean
          example: true
          default: true
        zoomable:
          description: User can zoom in/out of the map
          type: boolean
          example: true
          default: true
        initialZoomLevel:
          description: Valid Google maps zoom level
          maximum: 21
          minimum: 0
          type: integer
          format: int32
          example: 15
        mapStyle:
          description: Map style
          type: string
          example: normal
          enum:
            - normal
            - clean
            - bluish
        mapMarkerColor:
          description: Map marker color
          type: string
          example: cc2138
          enum:
            - cc2138
        mapHeight:
          description: Map height in pixels
          minimum: 1
          type: integer
          format: int32
          example: 500
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
        circles:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonCircle_Affiliate'
        rectangles:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonRectangle_Affiliate'
        markers:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonPoint_Affiliate'
        polygons:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonPolygon_Affiliate'
    AdvancedMapConfigurationView_Affiliate:
      required:
        - advancedMapConfiguration
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        advancedMapConfiguration:
          $ref: '#/components/schemas/AdvancedMapConfiguration_Affiliate'
    AdvancedMapConfiguration_Affiliate:
      description: Advanced map configuration
      required:
        - center
        - displayType
        - draggable
        - engineConfigurationIdentifier
        - identifier
        - initialZoomLevel
        - mapHeight
        - mapMarkerColor
        - mapStyle
        - name
        - ownerIdentifier
        - type
        - typeIdentifier
        - zoomable
      type: object
      properties:
        identifier:
          description: Unique map identifier
          type: string
          format: uuid
        ownerIdentifier:
          description: Map owner identifier
          type: string
          format: uuid
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        name:
          description: Name of map
          type: string
          example: My lovely map
        typeIdentifier:
          description: >-
            Inventory type identifier. Either a single channel inventory
            identifier, a list identifier or a dynamic search identifier.
          type: string
          format: uuid
        type:
          description: Type of inventory
          type: string
          example: LIST
          enum:
            - SINGLE
            - LIST
            - SEARCH
        center:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        draggable:
          description: User can move around / pan the map
          type: boolean
          example: true
          default: true
        zoomable:
          description: User can zoom in/out of the map
          type: boolean
          example: true
          default: true
        initialZoomLevel:
          description: Valid Google maps zoom level
          maximum: 21
          minimum: 0
          type: integer
          format: int32
          example: 15
        mapStyle:
          description: Map style
          type: string
          example: normal
          enum:
            - normal
            - clean
            - bluish
        mapMarkerColor:
          description: Map marker color
          type: string
          example: cc2138
          enum:
            - cc2138
        mapHeight:
          description: Map height in pixels
          minimum: 1
          type: integer
          format: int32
          example: 500
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
        circles:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonCircle_Affiliate'
        rectangles:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonRectangle_Affiliate'
        markers:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonPoint_Affiliate'
        polygons:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonPolygon_Affiliate'
    Lookup_Affiliate:
      description: The destination to display ranked inventory from.
      required:
        - location
      type: object
      properties:
        identifier:
          description: Unique lookup identifier
          type: string
          format: uuid
        type:
          description: Type of lookup
          type: string
          example: CITY
          enum:
            - CITY
            - ISLAND
            - HOTEL
            - SPA
            - MEETING_ROOM
            - RESTAURANT
            - ATTRACTION
            - ACTIVITY
            - PLACE
            - COUNTRY
        typeIdentifier:
          description: Unique lookup type identifier
          type: string
          format: uuid
        name:
          description: Name of lookup
          type: string
          example: Archery on horseback
        urlName:
          description: Url-friendly slug that uniquely identifies this lookup
          type: string
          example: archery-on-horseback
        ownerIdentifier:
          description: Lookup that is supplier inventory includes the supplier identifier
          type: string
          format: uuid
        ownerName:
          description: Lookup that is supplier inventory includes the supplier name
          type: string
          example: My Chic Hotel
        cityName:
          description: Closest city where lookup entry is located
          type: string
          example: Los Angeles
        countryName:
          description: Country where lookup entry is located
          type: string
          example: United States
        subCountryName:
          description: State where lookup entry is located
          type: string
          example: California
        subSubCountryName:
          description: County where lookup entry is located
          type: string
          example: Orange County
        countryCode:
          description: Country code
          type: string
          example: US
        ownerType:
          description: The type of owner that created this lookup
          type: string
          example: HOTEL
          enum:
            - TRAVELIKO
            - HOTEL
        languageCode:
          description: The language the lookup code was written in
          type: string
          example: en-US
        sort:
          description: Platform-specific sort
          type: integer
          format: int32
          example: 2
        origin:
          description: If this lookup is the origin lookup.
          type: boolean
          example: true
        lowercaseName:
          description: Name in lower case
          type: string
          example: archery on horseback
        location:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
    UpsertSellerInventoryRankedListRequest_Affiliate:
      required:
        - descriptions
        - engineConfigurationIdentifier
        - keywords
        - lookup
        - sellerInventoryRankedListName
      type: object
      properties:
        sellerInventoryRankedListName:
          description: Descriptive name of this list for seller use only
          type: string
          example: My ranked list
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        descriptions:
          description: Contains custom title and description of grid
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            description: >-
              Keywords is meta data for the grid you created that can be used
              for SEO purposes.
            type: string
            example: bali
        lookup:
          $ref: '#/components/schemas/Lookup_Affiliate'
        animate:
          description: Create an animated gif instead of a list of images
          type: boolean
          example: false
          default: false
        animateDelay:
          description: Controls animation delay in milliseconds. -1 is disabled
          type: integer
          format: int32
          default: -1
        sort:
          description: >-
            Determines which badge to show on the Web Component. Is also used to
            sort properties for search grids.
          type: string
          example: MEMBER
          enum:
            - MEMBER
            - PRICE_LOW_TO_HIGH
            - PRICE_HIGH_TO_LOW
            - PRICE
            - POPULARITY
            - ECO
            - EXPERIENCE
            - PERK
            - LOYALTY
            - PACKAGE
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
    SellerInventoryRankedListView_Affiliate:
      required:
        - sellerInventoryRankedList
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          readOnly: true
          example: 12
        id:
          description: Unique document identifier
          type: string
          format: uuid
          readOnly: true
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
          readOnly: true
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
          readOnly: true
        sellerInventoryRankedList:
          $ref: '#/components/schemas/SellerInventoryRankedList_Affiliate'
    SellerInventoryRankedList_Affiliate:
      description: SellerInventoryRankedList  object
      required:
        - descriptions
        - engineConfigurationIdentifier
        - identifier
        - keywords
        - lookup
        - sellerIdentifier
        - sellerInventoryRankedListName
        - status
      type: object
      properties:
        identifier:
          description: Unique identifier
          type: string
          format: uuid
        sellerIdentifier:
          description: Company identifier
          type: string
          format: uuid
        sellerInventoryRankedListName:
          description: Descriptive name of this list for seller use only
          type: string
          example: My ranked list
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        descriptions:
          description: Contains custom title and description of grid
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            description: >-
              Keywords is meta data for the grid you created that can be used
              for SEO purposes.
            type: string
            example: bali
        status:
          description: Status
          type: string
          example: ACTIVE
          default: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
            - REMOVED
        lookup:
          $ref: '#/components/schemas/Lookup_Affiliate'
        animate:
          description: Create an animated gif instead of a list of images
          type: boolean
          example: false
          default: false
        animateDelay:
          description: Controls animation delay in milliseconds. -1 is disabled
          type: integer
          format: int32
          default: -1
        sort:
          description: >-
            Determines which badge to show on the Web Component. Is also used to
            sort properties for search grids.
          type: string
          example: MEMBER
          enum:
            - MEMBER
            - PRICE_LOW_TO_HIGH
            - PRICE_HIGH_TO_LOW
            - PRICE
            - POPULARITY
            - ECO
            - EXPERIENCE
            - PERK
            - LOYALTY
            - PACKAGE
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
    UpsertSellerInventoryListRequest_Affiliate:
      required:
        - descriptions
        - displayType
        - engineConfigurationIdentifier
        - keywords
        - listIdentifier
        - listType
        - sellerInventoryListName
      type: object
      properties:
        sellerInventoryListName:
          description: Descriptive name of this list for seller use only
          type: string
          example: My list
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        descriptions:
          description: Contains custom title and description of grid
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          description: >-
            Keywords is meta data for the grid you created that can be used for
            SEO purposes.
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - bali
          items:
            description: >-
              Keywords is meta data for the grid you created that can be used
              for SEO purposes.
            type: string
            example: '["bali"]'
        listType:
          description: List type
          type: string
          example: LIST
          enum:
            - SINGLE
            - LIST
            - SEARCH
        listIdentifier:
          description: >-
            Depending on the `listType`, this is either the list / search /
            channel inventory identifier.
          type: string
          format: uuid
        animate:
          description: Create an animated gif instead of a list of images
          type: boolean
          example: false
          default: false
        animateDelay:
          description: Controls animation delay in milliseconds. -1 is disabled
          type: integer
          format: int32
          default: -1
        sort:
          description: >-
            Determines which badge to show on the Web Component. Is also used to
            sort properties for search grids.
          type: string
          example: MEMBER
          enum:
            - MEMBER
            - PRICE_LOW_TO_HIGH
            - PRICE_HIGH_TO_LOW
            - PRICE
            - POPULARITY
            - ECO
            - EXPERIENCE
            - PERK
            - LOYALTY
            - PACKAGE
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
    SellerInventoryListView_Affiliate:
      required:
        - sellerInventoryList
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        sellerInventoryList:
          $ref: '#/components/schemas/SellerInventoryList_Affiliate'
    SellerInventoryList_Affiliate:
      description: SellerInventoryList  object
      required:
        - descriptions
        - displayType
        - engineConfigurationIdentifier
        - identifier
        - keywords
        - listIdentifier
        - listType
        - sellerIdentifier
        - sellerInventoryListName
        - status
      type: object
      properties:
        identifier:
          description: Unique identifier
          type: string
          format: uuid
        sellerIdentifier:
          description: Company identifier
          type: string
          format: uuid
        sellerInventoryListName:
          description: Descriptive name of this list for seller use only
          type: string
          example: My list
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        descriptions:
          description: Contains custom title and description of grid
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          description: >-
            Keywords is meta data for the grid you created that can be used for
            SEO purposes.
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - bali
          items:
            description: >-
              Keywords is meta data for the grid you created that can be used
              for SEO purposes.
            type: string
            example: '["bali"]'
        status:
          description: Status
          type: string
          example: ACTIVE
          default: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
            - REMOVED
        listType:
          description: List type
          type: string
          example: LIST
          enum:
            - SINGLE
            - LIST
            - SEARCH
        listIdentifier:
          description: >-
            Depending on the `listType`, this is either the list / search /
            channel inventory identifier.
          type: string
          format: uuid
        animate:
          description: Create an animated gif instead of a list of images
          type: boolean
          example: false
          default: false
        animateDelay:
          description: Controls animation delay in milliseconds. -1 is disabled
          type: integer
          format: int32
          default: -1
        sort:
          description: >-
            Determines which badge to show on the Web Component. Is also used to
            sort properties for search grids.
          type: string
          example: MEMBER
          enum:
            - MEMBER
            - PRICE_LOW_TO_HIGH
            - PRICE_HIGH_TO_LOW
            - PRICE
            - POPULARITY
            - ECO
            - EXPERIENCE
            - PERK
            - LOYALTY
            - PACKAGE
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
    UpsertSellerInventoryItemRequest_Affiliate:
      required:
        - channelInventoryIdentifier
        - channelInventoryType
        - descriptions
        - displayType
        - engineConfigurationIdentifier
        - inventoryType
        - keywords
        - multimediaIdentifiers
        - sellerInventoryItemName
        - supplierIdentifier
      type: object
      properties:
        sellerInventoryItemName:
          description: Descriptive name of this item for seller use
          type: string
          example: My fave travel inventory
        engineConfigurationIdentifier:
          description: Which configuration to use with this item
          type: string
          format: uuid
        descriptions:
          description: Title and description of inventory.
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            description: Keywords
            type: string
            example: keyword-1
        inventoryType:
          description: The type of inventory being offer up for sale
          type: string
          example: HOTEL
          enum:
            - HOTEL
            - GUEST_ROOM
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ADD_ON
            - ATTRACTION
            - ACTIVITY
            - PLACE
        channelInventoryType:
          description: >-
            Channel inventory type is a subset of inventory type in that it does
            not include the `HOTEL` type. THe way it works is, as a seller you
            might want to sell a guest room but instead of showing the price of
            that guest room, you would like to display the best room type price
            for the property.
          type: string
          example: GUEST_ROOM
          enum:
            - GUEST_ROOM
            - ADD_ON
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ATTRACTION
            - PLACE
            - ACTIVITY
        supplierIdentifier:
          description: Supplier / Hotel identifier that owns this inventory.
          type: string
          format: uuid
        channelInventoryIdentifier:
          description: >-
            The channel inventory record identifier describing the relationship
            between supplier and seller.
          type: string
          format: uuid
        multimediaIdentifiers:
          description: Reference identifiers to Cloudinary media assets
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - cloudinary-image-1
            - cloudinary-image-2
          items:
            description: Reference identifiers to Cloudinary media assets
            type: string
            example: '["cloudinary-image-1","cloudinary-image-2"]'
        animate:
          description: >-
            Create an animated gif instead of a list of images. Feature
            currently not available. Feel free to enable and it will become
            available at a later date.
          type: boolean
          example: false
          default: false
        animateDelay:
          description: Controls animation delay in milliseconds.
          type: integer
          format: int32
          example: 500
        sort:
          description: The specific badge to display over the image on the Web Component.
          type: string
          example: POPULARITY
          enum:
            - MEMBER
            - PRICE_LOW_TO_HIGH
            - PRICE_HIGH_TO_LOW
            - PRICE
            - POPULARITY
            - ECO
            - EXPERIENCE
            - PERK
            - LOYALTY
            - PACKAGE
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
    SellerInventoryItemView_Affiliate:
      required:
        - sellerInventoryItem
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        sellerInventoryItem:
          $ref: '#/components/schemas/SellerInventoryItem_Affiliate'
    SellerInventoryItem_Affiliate:
      description: SellerInventoryItem data
      required:
        - channelInventoryIdentifier
        - channelInventoryType
        - descriptions
        - displayType
        - engineConfigurationIdentifier
        - identifier
        - inventoryType
        - keywords
        - multimediaIdentifiers
        - sellerIdentifier
        - sellerInventoryItemName
        - status
        - supplierIdentifier
      type: object
      properties:
        identifier:
          description: Unique identifier
          type: string
          format: uuid
        sellerIdentifier:
          description: Company / Owner identifier
          type: string
          format: uuid
        sellerInventoryItemName:
          description: Descriptive name of this item for seller use
          type: string
          example: My fave travel inventory
        engineConfigurationIdentifier:
          description: Which configuration to use with this item
          type: string
          format: uuid
        descriptions:
          description: Title and description of inventory.
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            description: Keywords
            type: string
            example: keyword-1
        status:
          description: Availability status
          type: string
          example: ACTIVE
          default: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
            - REMOVED
        inventoryType:
          description: The type of inventory being offer up for sale
          type: string
          example: HOTEL
          enum:
            - HOTEL
            - GUEST_ROOM
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ADD_ON
            - ATTRACTION
            - ACTIVITY
            - PLACE
        channelInventoryType:
          description: >-
            Channel inventory type is a subset of inventory type in that it does
            not include the `HOTEL` type. THe way it works is, as a seller you
            might want to sell a guest room but instead of showing the price of
            that guest room, you would like to display the best room type price
            for the property.
          type: string
          example: GUEST_ROOM
          enum:
            - GUEST_ROOM
            - ADD_ON
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ATTRACTION
            - PLACE
            - ACTIVITY
        supplierIdentifier:
          description: Supplier / Hotel identifier that owns this inventory.
          type: string
          format: uuid
        channelInventoryIdentifier:
          description: >-
            The channel inventory record identifier describing the relationship
            between supplier and seller.
          type: string
          format: uuid
        multimediaIdentifiers:
          description: Reference identifiers to Cloudinary media assets
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - cloudinary-image-1
            - cloudinary-image-2
          items:
            description: Reference identifiers to Cloudinary media assets
            type: string
            example: '["cloudinary-image-1","cloudinary-image-2"]'
        animate:
          description: >-
            Create an animated gif instead of a list of images. Feature
            currently not available. Feel free to enable and it will become
            available at a later date.
          type: boolean
          example: false
          default: false
        animateDelay:
          description: Controls animation delay in milliseconds.
          type: integer
          format: int32
          example: 500
        sort:
          description: The specific badge to display over the image on the Web Component.
          type: string
          example: POPULARITY
          enum:
            - MEMBER
            - PRICE_LOW_TO_HIGH
            - PRICE_HIGH_TO_LOW
            - PRICE
            - POPULARITY
            - ECO
            - EXPERIENCE
            - PERK
            - LOYALTY
            - PACKAGE
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
    Child_Affiliate:
      description: Child configuration
      required:
        - age
        - quantity
      type: object
      properties:
        quantity:
          description: Number of children
          minimum: 1
          type: integer
          format: int32
        age:
          description: Age of children
          minimum: 0
          type: integer
          format: int32
    EngineConfigurationTheme_Affiliate:
      description: >-
        Choose how you want our web components to look and more closely match
        with your own site style.
      type: object
      properties:
        info:
          description: Info color
          type: string
          example: '#17a2b8'
          default: '#17a2b8'
        primary:
          description: Primary color
          type: string
          example: '#dc3545'
          default: '#dc3545'
        secondary:
          description: Secondary color
          type: string
          example: '#6c757d'
          default: '#6c757d'
        success:
          description: Success color
          type: string
          example: '#28a745'
          default: '#28a745'
        danger:
          description: Danger color
          type: string
          example: '#dc3545'
          default: '#dc3545'
        warning:
          description: Warning color
          type: string
          example: '#ffc107'
          default: '#ffc107'
        light:
          description: Light color
          type: string
          example: '#f8f9fa'
          default: '#f8f9fa'
        dark:
          description: Dark color
          type: string
          example: '#343a40'
          default: '#343a40'
        body:
          description: Body color
          type: string
          example: '#212529'
          default: '#212529'
        muted:
          description: Muted color
          type: string
          example: '#6c757d'
          default: '#6c757d'
        white:
          description: White color
          type: string
          example: '#ffffff'
          default: '#ffffff'
    RoomConfiguration_Affiliate:
      description: Room Configuration
      required:
        - adults
      type: object
      properties:
        adults:
          description: Number of adults
          minimum: 1
          type: integer
          format: int32
          example: 2
          default: 1
        children:
          description: Children configurations
          type: array
          items:
            $ref: '#/components/schemas/Child_Affiliate'
        getNumberOfAdultsDeterminedByHotelPolicy:
          type: integer
          format: int32
          writeOnly: true
        getNumberOfChildrenDeterminedByHotelPolicy:
          type: integer
          format: int32
          writeOnly: true
    UpsertEngineConfigurationRequest_Affiliate:
      required:
        - name
      type: object
      properties:
        name:
          description: Engine configuration name
          type: string
          example: Engine Configuration 1
        appendToPageTitle:
          description: Whether to append text to the existing booking engine page title.
          type: string
        googleAnalyticsMeasurementId:
          description: >-
            If you want to track analytics with Google Analytics and GTM for
            your self-hosted booking engine, you need to import our [GTM
            profile](https://www.dropbox.com/s/o6rwluclvsgydma/gtm-template-2020-2.json?dl=0)
            into your GTM container and link it with your Google Analytics
            account. [More about that
            here](https://bearchoke.atlassian.net/wiki/spaces/TC/pages/2941648897/Linking+your+Google+Tag+Manager+account) 
          type: string
        googleMapsAPIKey:
          description: >-
            If you want your users to see Google Maps in your hosted booking
            engine, go to [Google
            Maps](https://console.developers.google.com/projectselector2/apis/credentials?supportedpurview=project)
            and create an API key for your site.
          type: string
          example: google-maps-api-123
        tawkToKey:
          description: >-
            If you want your users to be able to chat with you on your hosted
            booking engine, set yourself up with a [tawk.to
            account](https://dashboard.tawk.to/signup) and add your API key
            here.
          type: string
          example: tawk-to-1
        defaultCurrency:
          description: Control which currency your users see prices in initially.
          type: string
          example: USD
          default: USD
        defaultLanguage:
          description: Control which language your users see text in initially.
          type: string
          example: en
          default: en
        logos:
          description: >-
            Customize booking confirmation emails by adding a custom logo to
            your configuration.
          type: array
          items:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
        hostedBookingEngineUrl:
          description: >-
            If you are self-hosting our booking engine, let us know where it is
            hosted. Note: This url needs to be secured with SSL.
          type: string
          example: https://my.customtravelsite.com/book
          default: https://ota.wink.travel
        selfHosted:
          description: >-
            Flag to indicate you are self-hosting our booking engine and not
            using our default booking engine url.
          type: boolean
          example: true
          default: false
        themeColors:
          $ref: '#/components/schemas/EngineConfigurationTheme_Affiliate'
        numberOfAdvanceDays:
          description: >-
            You can control the initial itinerary date used to retrieve travel
            inventory prices. You can do it in one of two ways: 1. Dynamically
            set the date by indicating how long and how many days in advance
            (this field), of today's date, you want to display prices for. 2.
            Set a fixed date to display prices for. Option 1 is the most shared.
            Option 2 is for when you want to create a new customization and
            apply it to a specific event that occurs on a specific date. If you
            don't use either of these options, the itinerary will default to
            today's date with one night stay. ONLY populate this field if you
            want to control the itinerary date. Also, leave `startDate` and
            `endDate` empty.
          type: integer
          format: int32
          example: 10
        numberOfStayDays:
          description: >-
            You can control the initial itinerary date used to retrieve travel
            inventory prices. You can do it in one of two ways: 1. Dynamically
            set the date by indicating how long (this field) and how many days
            in advance, of today's date, you want to display prices for. 2. Set
            a fixed date to display prices for. Option 1 is the most shared.
            Option 2 is for when you want to create a new customization and
            apply it to a specific event that occurs on a specific date. If you
            don't use either of these options, the itinerary will default to
            today's date with one night stay. ONLY populate this field if you
            want to control the itinerary date. Also, leave `startDate` and
            `endDate` empty.
          type: integer
          format: int32
          example: 2
        startDate:
          description: >-
            Set a fixed itinerary start date. ONLY populate this field if you
            want to fix the itinerary date. Also, leave `numberOfAdvanceDays`
            and `numberOfStayDays` empty.
          type: string
          format: date
          example: '2021-12-24'
        endDate:
          description: >-
            Set a fixed itinerary end date ONLY populate this field if you want
            to fix the itinerary date. Also, leave `numberOfAdvanceDays` and
            `numberOfStayDays` empty.
          type: string
          format: date
          example: '2021-12-31'
        roomConfigurations:
          description: >-
            Control how many adults / children will be staying and how many
            rooms. Defaults to: One room, two adults.
          type: array
          items:
            $ref: '#/components/schemas/RoomConfiguration_Affiliate'
        useDays:
          description: >-
            if true, we use numberOfAdvanceDays / numberOfStayDays properties -
            false, we use startDate / endDate
          type: boolean
          example: true
        promotionalCodes:
          description: >-
            If you've received special promotional codes from suppliers to give
            to your audience, you can choose to bake these code directly into
            the price by entering them here.
          type: array
          example:
            - promo-1
          items:
            description: >-
              If you've received special promotional codes from suppliers to
              give to your audience, you can choose to bake these code directly
              into the price by entering them here.
            type: string
            example: '["promo-1"]'
        sendBookingNotificationEmailsToProperty:
          description: >-
            An integrator can choose to disable outgoing emails to properties
            because they want to do that themselves.
          type: boolean
          example: true
          default: true
        sendBookingNotificationEmailsToBooker:
          description: >-
            An integrator can choose to disable outgoing emails to users because
            they want to do that themselves.
          type: boolean
          example: true
          default: true
        sendBookingNotificationEmailsToChannelManager:
          description: >-
            An integrator can choose to disable notifying the property's channel
            manager. Note: This should ONLY be done for testing.
          type: boolean
          example: true
          default: true
        wcBookClickAction:
          description: >-
            Action to complete once a user clicks on the CTA button on
            inventory.
          type: string
          example: IBE_MODAL
          enum:
            - FORWARD_TO_IBE
            - IBE_MODAL
        showUnavailableCard:
          description: >-
            Show unavailable inventory card when inventory not currently for
            sale. Otherwise, it displays a normal card but without the price.
          type: boolean
        showRankings:
          description: >-
            Whether to display rankings (lifestyle, eco score and reviews) on
            hotel landing page.
          type: boolean
    EngineConfigurationView_Affiliate:
      required:
        - engineConfiguration
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        engineConfiguration:
          $ref: '#/components/schemas/EngineConfiguration_Affiliate'
    EngineConfiguration_Affiliate:
      required:
        - identifier
        - name
        - ownerIdentifier
        - ownerName
        - subType
        - userIdentifier
      type: object
      properties:
        identifier:
          description: Unique engine configuration identifier
          type: string
          format: uuid
        name:
          description: Engine configuration name
          type: string
          example: Engine Configuration 1
        appendToPageTitle:
          description: Whether to append text to the existing booking engine page title.
          type: string
        userIdentifier:
          description: Authenticated user identifier
          type: string
          format: uuid
        ownerIdentifier:
          description: Engine configuration record creator identifier
          type: string
          format: uuid
        ownerName:
          description: Name of company owner.
          type: string
          example: Travel Tech 1
        subType:
          description: Sales channel sub-type.
          type: string
          example: APPLICATION
          enum:
            - DIRECT
            - APPLICATION
            - HOTEL
            - TRAVELIKO
            - CORPORATE
            - TRAVEL_AGENT
            - INFLUENCER
            - BLOGGER
            - DESTINATION
            - CHANNEL_MANAGER
            - PROPERTY_MANAGEMENT_SYSTEM
            - CENTRAL_RESERVATION_SYSTEM
            - GOOGLE_HOTEL_API
            - MANAGEMENT_COMPANY
            - CHAIN
            - BRAND
            - EVENT_ORGANIZER
        primary:
          description: >-
            Indicates whether this configuration is primary. A primary
            configuration cannot be removed.
          type: boolean
          example: true
          default: false
        googleAnalyticsMeasurementId:
          description: >-
            If you want to track analytics with Google Analytics and GTM for
            your self-hosted booking engine, you need to import our [GTM
            profile](https://www.dropbox.com/s/o6rwluclvsgydma/gtm-template-2020-2.json?dl=0)
            into your GTM container and link it with your Google Analytics
            account. [More about that
            here](https://bearchoke.atlassian.net/wiki/spaces/TC/pages/2941648897/Linking+your+Google+Tag+Manager+account) 
          type: string
        googleMapsAPIKey:
          description: >-
            If you want your users to see Google Maps in your hosted booking
            engine, go to [Google
            Maps](https://console.developers.google.com/projectselector2/apis/credentials?supportedpurview=project)
            and create an API key for your site.
          type: string
          example: google-maps-api-123
        tawkToKey:
          description: >-
            If you want your users to be able to chat with you on your hosted
            booking engine, set yourself up with a [tawk.to
            account](https://dashboard.tawk.to/signup) and add your API key
            here.
          type: string
          example: tawk-to-1
        defaultCurrency:
          description: Control which currency your users see prices in initially.
          type: string
          example: USD
          default: USD
        defaultLanguage:
          description: Control which language your users see text in initially.
          type: string
          example: en
          default: en
        logos:
          description: >-
            Customize booking confirmation emails by adding a custom logo to
            your configuration.
          type: array
          items:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
        hostedBookingEngineUrl:
          description: >-
            If you are self-hosting our booking engine, let us know where it is
            hosted. Note: This url needs to be secured with SSL.
          type: string
          example: https://my.customtravelsite.com/book
          default: https://ota.wink.travel
        selfHosted:
          description: >-
            Flag to indicate you are self-hosting our booking engine and not
            using our default booking engine url.
          type: boolean
          example: true
          default: false
        themeColors:
          $ref: '#/components/schemas/EngineConfigurationTheme_Affiliate'
        numberOfAdvanceDays:
          description: >-
            You can control the initial itinerary date used to retrieve travel
            inventory prices. You can do it in one of two ways: 1. Dynamically
            set the date by indicating how long and how many days in advance
            (this field), of today's date, you want to display prices for. 2.
            Set a fixed date to display prices for. Option 1 is the most shared.
            Option 2 is for when you want to create a new customization and
            apply it to a specific event that occurs on a specific date. If you
            don't use either of these options, the itinerary will default to
            today's date with one night stay. ONLY populate this field if you
            want to control the itinerary date. Also, leave `startDate` and
            `endDate` empty.
          type: integer
          format: int32
          example: 10
        numberOfStayDays:
          description: >-
            You can control the initial itinerary date used to retrieve travel
            inventory prices. You can do it in one of two ways: 1. Dynamically
            set the date by indicating how long (this field) and how many days
            in advance, of today's date, you want to display prices for. 2. Set
            a fixed date to display prices for. Option 1 is the most shared.
            Option 2 is for when you want to create a new customization and
            apply it to a specific event that occurs on a specific date. If you
            don't use either of these options, the itinerary will default to
            today's date with one night stay. ONLY populate this field if you
            want to control the itinerary date. Also, leave `startDate` and
            `endDate` empty.
          type: integer
          format: int32
          example: 2
        startDate:
          description: >-
            Set a fixed itinerary start date. ONLY populate this field if you
            want to fix the itinerary date. Also, leave `numberOfAdvanceDays`
            and `numberOfStayDays` empty.
          type: string
          format: date
          example: '2021-12-24'
        endDate:
          description: >-
            Set a fixed itinerary end date ONLY populate this field if you want
            to fix the itinerary date. Also, leave `numberOfAdvanceDays` and
            `numberOfStayDays` empty.
          type: string
          format: date
          example: '2021-12-31'
        roomConfigurations:
          description: >-
            Control how many adults / children will be staying and how many
            rooms. Defaults to: One room, two adults.
          type: array
          items:
            $ref: '#/components/schemas/RoomConfiguration_Affiliate'
        useDays:
          description: >-
            if true, we use numberOfAdvanceDays / numberOfStayDays properties -
            false, we use startDate / endDate
          type: boolean
          example: true
        promotionalCodes:
          description: >-
            If you've received special promotional codes from suppliers to give
            to your audience, you can choose to bake these code directly into
            the price by entering them here.
          type: array
          example:
            - promo-1
          items:
            description: >-
              If you've received special promotional codes from suppliers to
              give to your audience, you can choose to bake these code directly
              into the price by entering them here.
            type: string
            example: '["promo-1"]'
        sendBookingNotificationEmailsToProperty:
          description: >-
            An integrator can choose to disable outgoing emails to properties
            because they want to do that themselves.
          type: boolean
          example: true
          default: true
        sendBookingNotificationEmailsToBooker:
          description: >-
            An integrator can choose to disable outgoing emails to users because
            they want to do that themselves.
          type: boolean
          example: true
          default: true
        sendBookingNotificationEmailsToChannelManager:
          description: >-
            An integrator can choose to disable notifying the property's channel
            manager. Note: This should ONLY be done for testing.
          type: boolean
          example: true
          default: true
        wcBookClickAction:
          description: >-
            Action to complete once a user clicks on the CTA button on
            inventory.
          type: string
          example: IBE_MODAL
          enum:
            - FORWARD_TO_IBE
            - IBE_MODAL
        city:
          $ref: '#/components/schemas/GeoName_Affiliate'
        showUnavailableCard:
          description: >-
            Show unavailable inventory card when inventory not currently for
            sale. Otherwise, it displays a normal card but without the price.
          type: boolean
        showRankings:
          description: >-
            Whether to display rankings (lifestyle, eco score and reviews) on
            hotel landing page.
          type: boolean
    UpsertSyndicationSettings_Affiliate:
      required:
        - engineConfigurationIdentifier
        - intelligent
      type: object
      properties:
        intelligent:
          description: >-
            Whether to treat all links as flat web links or try to embed more
            advanced data.
          type: boolean
          example: false
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        initialDisplayType:
          description: Which way to display the list when WinkLinks first loads
          type: string
          example: LIST
          default: GRID_COLUMNS
          enum:
            - LIST
            - GRID_ROWS
            - GRID_COLUMNS
        profilePictureGeometry:
          description: Controls how to display profile picture
          type: string
          example: CIRCLE
          default: CIRCLE
          enum:
            - CIRCLE
            - RECTANGLE
    SyndicationSettings_Affiliate:
      required:
        - engineConfigurationIdentifier
        - intelligent
        - ownerIdentifier
        - userIdentifier
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        userIdentifier:
          description: Creator of entry
          type: string
          format: uuid
        ownerIdentifier:
          description: The user's owner company this entry associates with
          type: string
          format: uuid
        intelligent:
          description: >-
            Whether to treat all links as flat web links or try to embed more
            advanced data.
          type: boolean
          example: false
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        initialDisplayType:
          description: Which way to display the list when WinkLinks first loads
          type: string
          example: LIST
          default: GRID_COLUMNS
          enum:
            - LIST
            - GRID_ROWS
            - GRID_COLUMNS
        profilePictureGeometry:
          description: Controls how to display profile picture
          type: string
          example: CIRCLE
          default: CIRCLE
          enum:
            - CIRCLE
            - RECTANGLE
    KeyValuePair_Affiliate:
      description: Extended metadata
      required:
        - label
        - value
      type: object
      properties:
        value:
          description: The value that should be persisted.
          type: string
          example: id-1
        label:
          description: English readable text of the value.
          type: string
          example: Readable text label
    OpenGraphMedia_Affiliate:
      description: The media list
      required:
        - url
      type: object
      properties:
        url:
          description: The image url
          type: string
          example: https://www.google.com/google.png
        secureUrl:
          description: The secure url
          type: string
          example: https://secure.google.com/google.png
        type:
          description: Image content type
          type: string
          example: image/jpg
        width:
          description: Image width
          type: string
          example: '1200'
        height:
          description: Image height
          type: string
          example: '630'
        alt:
          description: Alt text
          type: string
          example: Picture of Cat
    UpsertSyndicationEntry_Affiliate:
      required:
        - contentUrl
        - ogType
        - sort
        - type
      type: object
      properties:
        tags:
          description: Optional user categories
          type: array
          items:
            description: Optional user categories
            type: string
        title:
          description: The title of this entry
          type: string
          example: MrBeast goes to town
        description:
          description: The description of this entry
          type: string
          example: And on and on he goes
        contentUrl:
          description: The url of this entry
          type: string
          example: https://www.google.com
        sort:
          description: How the author wants this entry to get sorted
          type: integer
          format: int32
          example: 0
        type:
          description: The syndication entry type
          type: string
          example: WEB_LINK
          enum:
            - WEB_LINK
            - MAP
            - GRID
            - CARD
            - FILE
        imageList:
          description: The image list
          type: array
          items:
            $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
        videoList:
          description: The video list
          type: array
          items:
            $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
        audioList:
          description: The audio list
          type: array
          items:
            $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
        metadata:
          description: Extended metadata
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair_Affiliate'
        ogType:
          description: The open graph content ogType
          type: string
          example: website
        media:
          $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
        locale:
          type: string
    SyndicationEntry_Affiliate:
      required:
        - contentUrl
        - description
        - ownerIdentifier
        - sort
        - title
        - type
        - userIdentifier
      type: object
      properties:
        tags:
          description: Optional user categories
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair_Affiliate'
        title:
          description: The title of this entry
          type: string
          example: MrBeast goes to town
        description:
          description: The description of this entry
          type: string
          example: And on and on he goes
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        userIdentifier:
          description: Creator of entry
          type: string
          format: uuid
        ownerIdentifier:
          description: The user's owner company this entry associates with
          type: string
          format: uuid
        contentUrl:
          description: The url of this entry
          type: string
          example: https://www.google.com
        sort:
          description: How the author wants this entry to get sorted
          type: integer
          format: int32
          example: 0
        type:
          description: The syndication entry type
          type: string
          example: WEB_LINK
          enum:
            - WEB_LINK
            - MAP
            - GRID
            - CARD
            - FILE
        imageList:
          description: The image list
          type: array
          items:
            $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
        videoList:
          description: The video list
          type: array
          items:
            $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
        audioList:
          description: The audio list
          type: array
          items:
            $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
        metadata:
          description: Extended metadata
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair_Affiliate'
        ogType:
          description: The open graph content type
          type: string
          example: website
        media:
          $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
    UpsertSyndicationCategory_Affiliate:
      required:
        - name
      type: object
      properties:
        name:
          description: The name of this category
          type: string
          example: Faves
    SyndicationCategory_Affiliate:
      required:
        - name
        - ownerIdentifier
        - userIdentifier
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        userIdentifier:
          description: Creator of entry
          type: string
          format: uuid
        ownerIdentifier:
          description: The user's owner company this entry associates with
          type: string
          format: uuid
        name:
          description: The name of this category
          type: string
          example: Faves
    CreateCompanyRequest_Affiliate:
      required:
        - address
        - companyType
        - name
        - type
        - url
        - vatID
      type: object
      properties:
        description:
          description: A personal message from the company.
          type: string
        name:
          description: Name of company
          type: string
          example: Company 1
        legalName:
          description: Legal name of entity if other than name
          type: string
          example: Legal Company 1
        companyType:
          description: Type of company
          type: string
          example: COMPANY
          enum:
            - COMPANY
            - INDIVIDUAL
        type:
          description: Type of company
          type: string
          example: APPLICATION
          enum:
            - DIRECT
            - APPLICATION
            - HOTEL
            - TRAVELIKO
            - CORPORATE
            - TRAVEL_AGENT
            - INFLUENCER
            - BLOGGER
            - DESTINATION
            - CHANNEL_MANAGER
            - PROPERTY_MANAGEMENT_SYSTEM
            - CENTRAL_RESERVATION_SYSTEM
            - GOOGLE_HOTEL_API
            - MANAGEMENT_COMPANY
            - CHAIN
            - BRAND
            - EVENT_ORGANIZER
        vatID:
          description: A VAT id if required
          type: string
          example: vat-1
        url:
          description: Company's main website
          type: string
          example: https://www.mymainsite.com
        address:
          $ref: '#/components/schemas/UpsertCityOnlyAddressRequest_Affiliate'
        urls:
          description: >-
            List of all active accounts that could be used for selling or seeing
            a company's reach.
          type: array
          items:
            description: >-
              List of all active accounts that could be used for selling or
              seeing a company's reach.
            type: string
    UpsertCityOnlyAddressRequest_Affiliate:
      description: This address object only requires that cityGeoNameId be present.
      required:
        - cityGeoNameId
      type: object
      properties:
        address1:
          description: Address line 1
          type: string
          example: 234 Near da beach
        address2:
          description: Address line 2
          type: string
          example: 'Pebble #5001'
        cityGeoNameId:
          description: City geo name ID
          type: string
          example: '897654'
        state:
          description: State
          type: string
          example: CA
        postalCode:
          description: Postal / zip code
          type: string
          example: '90210'
        county:
          description: County
          type: string
          example: Alameda county
        valid:
          type: boolean
      example: geo-name-1
    CompanyUser_Affiliate:
      required:
        - email
      type: object
      properties:
        email:
          description: User email
          type: string
          example: manager@me.com
        status:
          description: Contact phone number
          type: string
          example: '+12125551212'
          enum:
            - PENDING
            - ACCEPTED
            - DEACTIVATED
        userIdentifier:
          description: User identifier
          type: string
          format: uuid
        firstName:
          description: Contact first name
          type: string
          example: John
        lastName:
          description: Contact last name
          type: string
          example: Smith
        secondaryEmail:
          description: Contact secondary Email
          type: string
          example: johnsmith2@email.com
        phoneNumber:
          description: Contact phone number
          type: string
          example: '+12125551212'
        profilePictureUrl:
          description: Profile picture is available
          type: string
        name:
          type: string
    CompanyView_Affiliate:
      required:
        - company
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        company:
          $ref: '#/components/schemas/Company_Affiliate'
    Company_Affiliate:
      description: >-
        A Company is our definition of a sales channel / affiliate. A property
        also has a company record.
      required:
        - address
        - approved
        - companyType
        - enabled
        - identifier
        - name
        - owner
        - type
        - url
        - urlName
        - userIdentifier
        - vatID
      type: object
      properties:
        description:
          description: A personal message from the company.
          type: string
        identifier:
          description: Unique identifier
          type: string
          format: uuid
        userIdentifier:
          description: User or Registered client owner identifier that created this record
          type: string
          format: uuid
        owner:
          $ref: '#/components/schemas/CompanyUser_Affiliate'
        name:
          description: Name of company
          type: string
          example: Company 1
        urlName:
          description: Url slug of company name
          type: string
          example: company-1
        legalName:
          description: Legal name of entity if other than name
          type: string
          example: Legal Company 1
        enabled:
          description: Whether this company is enabled by payment.
          type: boolean
          example: true
        approved:
          description: Whether this company has been approved by KYC.
          type: boolean
          example: true
          default: false
        companyType:
          description: Type of company
          type: string
          example: COMPANY
          enum:
            - COMPANY
            - INDIVIDUAL
        type:
          description: Type of sales channel
          type: string
          example: APPLICATION
          enum:
            - DIRECT
            - APPLICATION
            - HOTEL
            - TRAVELIKO
            - CORPORATE
            - TRAVEL_AGENT
            - INFLUENCER
            - BLOGGER
            - DESTINATION
            - CHANNEL_MANAGER
            - PROPERTY_MANAGEMENT_SYSTEM
            - CENTRAL_RESERVATION_SYSTEM
            - GOOGLE_HOTEL_API
            - MANAGEMENT_COMPANY
            - CHAIN
            - BRAND
            - EVENT_ORGANIZER
        vatID:
          description: An optional VAT ID
          type: string
          example: vat-1
        url:
          description: Company's main website
          type: string
          example: https://www.mymainsite.com
        address:
          $ref: '#/components/schemas/Address_Affiliate'
        managers:
          maxItems: 30
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/CompanyUser_Affiliate'
        urls:
          description: >-
            List of all active accounts that could be used for selling or seeing
            a company's reach.
          type: array
          items:
            description: >-
              List of all active accounts that could be used for selling or
              seeing a company's reach.
            type: string
        logo:
          $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
    CreateSupplierUrlSyndicationEntryRequest_Affiliate:
      required:
        - identifier
      type: object
      properties:
        identifier:
          description: ID of supplier url to create a syndication entry from
          type: string
          format: uuid
    BooleanResponse_Affiliate:
      description: Boolean response
      type: object
      properties:
        success:
          description: Whether call to endpoint was successful or not.
          type: boolean
        message:
          description: >-
            A message indicating more textual information. Mostly used to convey
            an error message.
          type: string
    CreateStaticSellerListAndAddItemRequest_Affiliate:
      required:
        - name
      type: object
      properties:
        name:
          description: Name of curated list
          type: string
          example: Top 3 Hotels in Chiang Mai
        channelInventoryIdentifiers:
          type: array
          items:
            description: Optionally add inventory to the list upon list creation.
            type: string
            format: uuid
    AddStaticSellerListItemRequest_Affiliate:
      required:
        - channelInventoryIdentifier
      type: object
      properties:
        channelInventoryIdentifier:
          description: The inventory ID
          type: string
          format: uuid
    AddStaticSellerListSupplierRequest_Affiliate:
      required:
        - supplierIdentifier
      type: object
      properties:
        supplierIdentifier:
          type: string
    CreateSellerUrlSyndicationEntryRequest_Affiliate:
      required:
        - identifier
      type: object
      properties:
        identifier:
          description: ID of seller url to create a syndication entry from
          type: string
          format: uuid
    AggregateDescriptor_Affiliate:
      description: Primitive aggregate data points
      type: object
      properties:
        field:
          description: Field to run aggregate function on
          type: string
          example: hotel.bookings
        aggregate:
          description: Aggregate function
          type: string
          example: count
          enum:
            - count
            - sum
            - average
            - min
            - max
    CompositeFilterDescriptor_Affiliate:
      description: Descriptors used for filtering result set
      type: object
      properties:
        logic:
          description: Whether to filter inclusively or exclusively
          type: string
          example: and
          enum:
            - and
            - or
        filters:
          description: Descriptors used for filtering the result set
          type: array
          items:
            $ref: '#/components/schemas/FilterDescriptor_Affiliate'
    FilterDescriptor_Affiliate:
      description: Descriptors used for filtering the result set
      required:
        - field
        - operator
        - value
      type: object
      properties:
        field:
          description: Field name to filter on
          type: string
          example: hotel.name
        operator:
          description: Filter operator to use on field
          type: string
          example: startsWith
          enum:
            - neq
            - eq
            - contains
            - doesnotcontain
            - isnull
            - isnotnull
            - isempty
            - isnotempty
            - startsWith
            - endsWith
            - gte
            - lte
            - gt
            - lt
            - in
            - nin
        value:
          description: Value to filter dataset against
          type: object
          example: Happy Res
        ignoreCase:
          description: 'Make filter comparison case insensitive. Default: Case sensitive '
          type: boolean
          example: true
    GroupDescriptor_Affiliate:
      description: Descriptors to group result sets by.
      type: object
      properties:
        field:
          description: Field to group data set on
          type: string
          example: createdDate
        dir:
          description: Group sort direction
          type: string
          example: asc
          enum:
            - asc
            - desc
        aggregates:
          description: Primitive aggregate data points
          type: array
          items:
            $ref: '#/components/schemas/AggregateDescriptor_Affiliate'
    SortDescriptor_Affiliate:
      description: Descriptors used for sorting result set.
      type: object
      properties:
        dir:
          description: Descriptors used for sorting result set
          type: string
          example: asc
          enum:
            - asc
            - desc
        field:
          description: Data set field to sort on
          type: string
          example: hotel.name
    State_Affiliate:
      type: object
      properties:
        skip:
          description: Number of records to be skipped by the pager.
          minimum: 0
          type: integer
          format: int32
          example: 0
          default: 0
        take:
          description: Number of records to take.
          maximum: 180
          minimum: 1
          type: integer
          format: int32
          example: 10
          default: 30
        sort:
          description: Descriptors used for sorting result set.
          type: array
          items:
            $ref: '#/components/schemas/SortDescriptor_Affiliate'
        filter:
          $ref: '#/components/schemas/CompositeFilterDescriptor_Affiliate'
        group:
          description: Descriptors to group result sets by.
          type: array
          items:
            $ref: '#/components/schemas/GroupDescriptor_Affiliate'
    HotelOnMapView_Affiliate:
      required:
        - hotel
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        hotel:
          $ref: '#/components/schemas/HotelOnMap_Affiliate'
    PageHotelOnMapView_Affiliate:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/HotelOnMapView_Affiliate'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject_Affiliate'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject_Affiliate'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject_Affiliate:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject_Affiliate'
        unpaged:
          type: boolean
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    SortObject_Affiliate:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    UpsertSalesChannelRelationshipRequestRequest:
      description: A request for relationship between two parties.
      required:
        - introductoryMessage
        - requestType
        - supplierIdentifier
      type: object
      properties:
        requestType:
          description: type of relationship request
          type: string
          enum:
            - DIRECT_CONNECTION
        supplierIdentifier:
          description: >-
            Specific identifier for the company / corporation / travel agency
            that is retrieving the rates
          type: string
          format: uuid
        introductoryMessage:
          description: Owner / affiliate writes an intro to request a connection.
          type: string
          example: Hi there! Please give me a discount.
    SalesChannelRelationshipRequest:
      description: A request for relationship between two parties.
      required:
        - identifier
        - introductoryMessage
        - ownerIdentifier
        - ownerName
        - requestType
        - status
        - subType
        - supplierIdentifier
        - supplierName
      type: object
      properties:
        identifier:
          description: Unique record identifier
          type: string
          format: uuid
        status:
          description: status of relationship request
          type: string
          enum:
            - REQUESTING
            - REJECTED
        requestType:
          description: type of relationship request
          type: string
          enum:
            - DIRECT_CONNECTION
        supplierIdentifier:
          description: Request goes to this supplier identifier.
          type: string
          format: uuid
        supplierName:
          description: Request goes to this supplier name.
          type: string
          example: Hotel 1
        subType:
          description: What type of segment of channel is this.
          type: string
          example: APPLICATION
          enum:
            - DIRECT
            - APPLICATION
            - HOTEL
            - TRAVELIKO
            - CORPORATE
            - TRAVEL_AGENT
            - INFLUENCER
            - BLOGGER
            - DESTINATION
            - CHANNEL_MANAGER
            - PROPERTY_MANAGEMENT_SYSTEM
            - CENTRAL_RESERVATION_SYSTEM
            - GOOGLE_HOTEL_API
            - MANAGEMENT_COMPANY
            - CHAIN
            - BRAND
            - EVENT_ORGANIZER
        ownerIdentifier:
          description: >-
            Specific identifier for the company / corporation / travel agency
            that is retrieving the rates
          type: string
          format: uuid
        ownerName:
          description: Name of the owner / affiliate.
          type: string
          example: Owner 1
        introductoryMessage:
          description: Owner / affiliate writes an intro to request a connection.
          type: string
          example: Hi there! Please give me a discount.
    SalesChannelRelationshipRequestView:
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/SalesChannelRelationshipRequest'
        request:
          $ref: '#/components/schemas/SalesChannelRelationshipRequest'
    PageSalesChannelView_Affiliate:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SalesChannelView_Affiliate'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject_Affiliate'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject_Affiliate'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    SalesChannelView_Affiliate:
      required:
        - salesChannel
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        salesChannel:
          $ref: '#/components/schemas/SalesChannel_Affiliate'
    CreateAdvancedMapConfigurationSyndicationEntryRequest_Affiliate:
      required:
        - identifier
      type: object
      properties:
        identifier:
          description: ID of map to create a syndication entry from
          type: string
          format: uuid
    UpsertSupplierAdvancedMapConfigurationRequest_Affiliate:
      description: Object to save AdvancedMapConfiguration
      required:
        - displayType
        - draggable
        - engineConfigurationIdentifier
        - initialZoomLevel
        - mapHeight
        - mapMarkerColor
        - mapStyle
        - name
        - supplierIdentifier
        - type
        - zoomable
      type: object
      properties:
        engineConfigurationIdentifier:
          description: Customization identifier
          type: string
          format: uuid
        name:
          description: Name of map
          type: string
          example: My lovely map
        supplierIdentifier:
          description: >-
            Inventory type identifier. Either a single channel inventory
            identifier, a list identifier or a dynamic search identifier.
          type: string
          format: uuid
        type:
          description: Type of inventory
          type: string
          example: LIST
          enum:
            - GUEST_ROOM
            - ADD_ON
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ATTRACTION
            - PLACE
            - ACTIVITY
        draggable:
          description: User can move around / pan the map
          type: boolean
          example: true
          default: true
        zoomable:
          description: User can zoom in/out of the map
          type: boolean
          example: true
          default: true
        initialZoomLevel:
          description: Valid Google maps zoom level
          maximum: 21
          minimum: 0
          type: integer
          format: int32
          example: 15
        mapStyle:
          description: Map style
          type: string
          example: normal
          enum:
            - normal
            - clean
            - bluish
        mapMarkerColor:
          description: Map marker color
          type: string
          example: cc2138
          enum:
            - cc2138
        mapHeight:
          description: Map height in pixels
          minimum: 1
          type: integer
          format: int32
          example: 500
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
        circles:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonCircle_Affiliate'
        rectangles:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonRectangle_Affiliate'
        markers:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonPoint_Affiliate'
        polygons:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurableGeoJsonPolygon_Affiliate'
    GooglePlaceDetailRequest_Affiliate:
      required:
        - name
        - placeId
      type: object
      properties:
        placeId:
          description: Unique ID
          type: string
          example: place-1
        name:
          description: Name of lead
          type: string
          example: Hotel X
        messageFromUser:
          description: A personalized message from the inviter
          type: string
          example: Hi there!
    SimpleAddress_Affiliate:
      description: Address information
      required:
        - address1
        - city
        - countryCode
        - postalCode
      type: object
      properties:
        address1:
          description: Address line 1
          type: string
          example: 234 Near da beach
        address2:
          description: Address line 2
          type: string
          example: 'Pebble #5001'
        state:
          description: State
          type: string
          example: CA
        postalCode:
          description: Postal / zip code
          type: string
          example: '90210'
        county:
          description: County
          type: string
          example: Alameda county
        city:
          description: City name
          type: string
        countryCode:
          description: Country
          type: string
    SupplierLead_Affiliate:
      required:
        - googleMapsUrl
        - location
        - nameInEnglish
        - placeId
        - status
        - user
        - utcOffsetMinutes
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/KeyValuePair_Affiliate'
        owner:
          $ref: '#/components/schemas/KeyValuePair_Affiliate'
        status:
          description: Lead status
          type: string
          example: CREATED
          enum:
            - CREATED
            - IN_PROGRESS
            - INVITED
            - CLAIMED
            - REJECTED
            - INACTIVE
        placeId:
          description: Unique ID
          type: string
          example: place-1
        nameInEnglish:
          description: Name of lead
          type: string
          example: Hotel X
        nameInLocalLanguage:
          description: Name of lead in local language
          type: string
          example: Hotel X
        googleMapsUrl:
          description: Google Maps URL of the place
          type: string
        phone:
          description: Telephone of lead
          type: string
          example: +1 212 555 1212
        address:
          $ref: '#/components/schemas/Address_Affiliate'
        addressLocal:
          $ref: '#/components/schemas/SimpleAddress_Affiliate'
        formattedAddress:
          description: Formatted address in English
          type: string
        formattedAddressLocal:
          description: Formatted address in local language if available
          type: string
        htmlAddress:
          description: Html address in English
          type: string
        htmlAddressLocal:
          description: Html address in local language if available
          type: string
        location:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        photos:
          description: Photos for property
          type: array
          items:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
        rating:
          description: Hotel rating
          type: number
          format: float
          example: 4.5
        userRatingTotal:
          description: Total umber of user ratings
          type: integer
          format: int32
          example: 8768
        utcOffsetMinutes:
          description: UTC offset minutes
          type: integer
          format: int32
          example: 420
        website:
          description: Website
          type: string
          example: https://www.hotel-x.com
        messageFromUser:
          description: A personalized message from the inviter
          type: string
          example: Hi there!
        cityOptions:
          type: array
          items:
            $ref: '#/components/schemas/GeoName_Affiliate'
    DynamicSellerListRequest_Affiliate:
      description: Paginated search for travel inventory.
      required:
        - list
        - page
        - size
      type: object
      properties:
        list:
          $ref: '#/components/schemas/UpsertDynamicSellerListRequest_Affiliate'
        page:
          description: Which page to view out of total search results.
          minimum: 0
          type: integer
          format: int32
          example: 0
          default: 0
        size:
          description: How many result set to return at the time.
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          example: 24
          default: 24
    UpsertDynamicSellerListRequest_Affiliate:
      description: Contains the caller's search criteria.
      type: object
      properties:
        name:
          description: Name of dynamic list for when user want to persist it
          type: string
        propertyName:
          description: Regex expression filter matching on property name.
          type: string
          example: Shera
        locationCategories:
          description: >-
            Supported OTA specification `LOC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example: 34
          items:
            description: >-
              Supported OTA specification `LOC` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '34'
        segmentCategories:
          description: >-
            Supported OTA specification `SEG` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example: 7
          items:
            description: >-
              Supported OTA specification `SEG` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '7'
        hotelCategories:
          description: >-
            Supported OTA specification `PCT` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example: 45
          items:
            description: >-
              Supported OTA specification `PCT` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '45'
        architecturalStyles:
          description: >-
            Supported OTA specification `ARC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example: 7
          items:
            description: >-
              Supported OTA specification `ARC` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '7'
        inventoryName:
          description: Regex expression filter matching on inventory name
          type: string
          example: Badmint
        continents:
          description: Continent filter
          type: array
          items:
            description: Filter on standardized continent codes
            type: string
            example: NA
        countries:
          description: Country filter
          type: array
          items:
            description: Filter on GeoNameId of country
            type: string
            example: '985678'
        cities:
          description: City filter
          type: array
          items:
            description: Filter on GeoNameId of city
            type: string
            example: '985678'
        showEcoFriendly:
          description: Filter on eco-friendly hotels
          type: boolean
          example: false
          default: false
        showPetFriendly:
          description: Filter on pet-friendly hotels
          type: boolean
          example: false
          default: false
        showChildFriendly:
          description: Filter on child-friendly hotels
          type: boolean
          example: false
          default: false
        showPopular:
          description: Filter on hotel that has had a certain amount of bookings
          type: boolean
          example: false
          default: false
        showDirectOnly:
          description: Filter on direct inventory
          type: boolean
          example: false
          default: false
        lifestyles:
          description: Filter on lifestyles
          type: array
          example: LIFESTYLE_RELAX
          items:
            type: string
            enum:
              - LIFESTYLE_HEALTH_FITNESS
              - LIFESTYLE_RELAX
              - LIFESTYLE_ADULT_ONLY
              - LIFESTYLE_ADVENTURE
              - LIFESTYLE_BUSINESS
              - LIFESTYLE_LGBT
              - LIFESTYLE_SINGLE_PARENT
              - LIFESTYLE_SOLO_FEMALE
              - LIFESTYLE_BEAUTY
              - LIFESTYLE_FOODIE
              - LIFESTYLE_FAMILY
              - LIFESTYLE_ROMANCE
              - LIFESTYLE_COUPLE
              - LIFESTYLE_SOLO
              - LIFESTYLE_BACKPACKER
              - LIFESTYLE_SHOPPING
              - LIFESTYLE_SPORTS
              - LIFESTYLE_MOUNTAIN
              - LIFESTYLE_BEACH
              - LIFESTYLE_CITY
              - LIFESTYLE_COUNTRY
              - LIFESTYLE_CULTURE
              - LIFESTYLE_ECO
        hotelStars:
          description: Filter on number of stars the hotel has.
          type: integer
          format: int32
          example: 4
        aggregateReviewRating:
          description: Filter on aggregate review score the hotel has
          type: integer
          format: int32
          example: 7
        nearPoint:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        radiusInMeters:
          description: >-
            Use this in conjunction with `nearPoint`. Control the distance from
            point we are searching for.
          type: integer
          format: int64
        inventoryTypes:
          description: Filter on inventory types
          type: array
          example: GUEST_ROOM
          items:
            type: string
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
        primaryOrderBy:
          description: |
            Control how you want the search results sorted. Options are: 

            - 1: Inventory name
            - 2: Price: High to low
            - 3: Price: Low to high
            - 4: Commission: High to low
            - 5: Commission: Low to high
            - 6: Discount: High to low
            - 7: Discount: Low to high
          type: string
          example: '4'
    InventorySupplier_Affiliate:
      required:
        - hotel
        - salesChannel
      type: object
      properties:
        salesChannel:
          $ref: '#/components/schemas/SalesChannel_Affiliate'
        hotel:
          $ref: '#/components/schemas/HotelOnMap_Affiliate'
    PageInventorySupplier_Affiliate:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/InventorySupplier_Affiliate'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject_Affiliate'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject_Affiliate'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    CreateSellerInventoryRankedListSyndicationEntryRequest_Affiliate:
      required:
        - identifier
      type: object
      properties:
        identifier:
          description: >-
            ID of seller inventory ranked list to create a syndication entry
            from
          type: string
          format: uuid
    CreateStaticSellerListSyndicationEntryRequest_Affiliate:
      required:
        - identifier
      type: object
      properties:
        identifier:
          description: ID of seller inventory item to create a syndication entry from
          type: string
          format: uuid
    CreateSellerInventoryItemSyndicationEntryRequest_Affiliate:
      required:
        - identifier
      type: object
      properties:
        identifier:
          description: ID of seller inventory item to create a syndication entry from
          type: string
          format: uuid
    UpsertSupplierSellerInventoryItemRequest_Affiliate:
      required:
        - channelInventoryType
        - descriptions
        - displayType
        - engineConfigurationIdentifier
        - inventoryType
        - keywords
        - multimediaIdentifiers
        - sellerInventoryItemName
        - supplierIdentifier
      type: object
      properties:
        sellerInventoryItemName:
          description: Descriptive name of this item for seller use
          type: string
          example: My fave travel inventory
        engineConfigurationIdentifier:
          description: Which configuration to use with this item
          type: string
          format: uuid
        descriptions:
          description: Title and description of inventory.
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        keywords:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            description: Keywords
            type: string
            example: keyword-1
        inventoryType:
          description: The type of inventory being offer up for sale
          type: string
          example: HOTEL
          enum:
            - HOTEL
            - GUEST_ROOM
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ADD_ON
            - ATTRACTION
            - ACTIVITY
            - PLACE
        channelInventoryType:
          description: >-
            Channel inventory type is a subset of inventory type in that it does
            not include the `HOTEL` type. THe way it works is, as a seller you
            might want to sell a guest room but instead of showing the price of
            that guest room, you would like to display the best room type price
            for the property.
          type: string
          example: GUEST_ROOM
          enum:
            - GUEST_ROOM
            - ADD_ON
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ATTRACTION
            - PLACE
            - ACTIVITY
        supplierIdentifier:
          description: Supplier / Hotel identifier that owns this inventory.
          type: string
          format: uuid
        multimediaIdentifiers:
          description: Reference identifiers to Cloudinary media assets
          maxItems: 2147483647
          minItems: 1
          type: array
          example:
            - cloudinary-image-1
            - cloudinary-image-2
          items:
            description: Reference identifiers to Cloudinary media assets
            type: string
            example: '["cloudinary-image-1","cloudinary-image-2"]'
        animate:
          description: >-
            Create an animated gif instead of a list of images. Feature
            currently not available. Feel free to enable and it will become
            available at a later date.
          type: boolean
          example: false
          default: false
        animateDelay:
          description: Controls animation delay in milliseconds.
          type: integer
          format: int32
          example: 500
        sort:
          description: The specific badge to display over the image on the Web Component.
          type: string
          example: POPULARITY
          enum:
            - MEMBER
            - PRICE_LOW_TO_HIGH
            - PRICE_HIGH_TO_LOW
            - PRICE
            - POPULARITY
            - ECO
            - EXPERIENCE
            - PERK
            - LOYALTY
            - PACKAGE
        displayType:
          description: >-
            Indicate which initial values to display first on the front-facing
            card
          type: string
          example: NATIVE
          default: NATIVE
          enum:
            - NATIVE
            - HOTEL
            - ROOM
    InventoryView_Affiliate:
      required:
        - inventory
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        inventory:
          $ref: '#/components/schemas/Inventory_Affiliate'
    PageInventoryView_Affiliate:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/InventoryView_Affiliate'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject_Affiliate'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject_Affiliate'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    AuthenticatedUser_Affiliate:
      description: The authenticated user ID that made the payment request
      required:
        - email
        - firstName
        - lastName
      type: object
      properties:
        userIdentifier:
          description: User identifier
          type: string
          format: uuid
        firstName:
          description: First name
          type: string
          example: John
        lastName:
          description: Last name
          type: string
          example: Smith
        email:
          description: Email
          type: string
          format: email
          example: john.smith@email.com
        fullName:
          description: Full name
          type: string
          readOnly: true
          example: John Smith
      example: user-1
    Bed_Affiliate:
      required:
        - bedTypeCode
        - quantity
      type: object
      properties:
        bedTypeCode:
          description: >-
            Indicates the type of bed(s) found in the room. Typical values would
            be Double, Twin, Queen, or King. Supported OTA specification `BED`
            code. See [OTA geoname data](https://api.wink.travel).
          type: string
          example: '1'
        quantity:
          description: Number of beds for this bed type.
          minimum: 1
          type: integer
          format: int32
          example: 10
    BedroomConfiguration_Affiliate:
      description: Desired bedroom layout
      required:
        - bedroomList
        - identifier
        - name
      type: object
      properties:
        identifier:
          description: Unique identifier
          type: string
          format: uuid
        name:
          description: Name of layout
          type: string
        bedroomList:
          description: A room type can have more than one bedroom configuration.
          type: array
          items:
            $ref: '#/components/schemas/Bedroom_Affiliate'
    Bedroom_Affiliate:
      required:
        - bedList
        - type
      type: object
      properties:
        type:
          description: Type of bedroom
          type: string
          enum:
            - MASTER
            - QUEEN
            - JUNIOR
            - DORMITORY
            - BEDROOM_1
            - BEDROOM_2
            - BEDROOM_3
            - BEDROOM_4
            - BEDROOM_5
            - BEDROOM_6
            - BEDROOM_7
            - BEDROOM_8
            - BEDROOM_9
            - BEDROOM_10
        bedList:
          description: A bedroom can have more than one bed type.
          type: array
          items:
            $ref: '#/components/schemas/Bed_Affiliate'
    BeneficiaryCharge_Affiliate:
      description: A variable charge can be a fixed amount or a percentage.
      type: object
      properties:
        type:
          type: string
          enum:
            - PERCENTAGE
            - REMAINDER
        percent:
          type: number
    Beneficiary_Affiliate:
      type: object
      properties:
        accountIdentifier:
          description: accountIdentifier of beneficiary from payment
          type: string
          format: uuid
        accountName:
          description: accountName of beneficiary that can map to an account with us
          type: string
          example: Account 1
        accountEmail:
          description: accountEmail of beneficiary that can map to an account with us
          type: string
          example: account@one.com
        accountUrl:
          description: accountUrl of beneficiary that can map to an account with us
          type: string
          example: https://some.url
        type:
          description: The type of beneficiary payment.
          type: string
          enum:
            - COMMISSION
            - PLATFORM_FEE
            - SALE
            - TRIP_PAY
        amountDue:
          $ref: '#/components/schemas/BeneficiaryCharge_Affiliate'
        sourceCurrency:
          description: The source currency
          type: string
          example: USD
        displayCurrency:
          description: The display currency
          type: string
          example: USD
        supplierCurrency:
          description: The supplier currency
          type: string
          example: USD
        internalCurrency:
          description: The internal currency
          type: string
          example: USD
        captureCurrency:
          description: The capture currency
          type: string
          example: USD
        sourceAmount:
          description: The total initial price as quoted in the original TripPay contract.
          type: number
        displayAmount:
          description: The total display price.
          type: number
        supplierAmount:
          description: The total supplier price.
          type: number
        internalAmount:
          type: number
        captureAmount:
          description: The total capture price.
          type: number
        sourceAmountRefundModifier:
          description: The source amount still due after a partial refund occurs.
          type: number
        displayAmountRefundModifier:
          description: The display amount still due after a partial refund occurs.
          type: number
        supplierAmountRefundModifier:
          description: The supplier amount still due after a partial refund occurs.
          type: number
        internalAmountRefundModifier:
          description: The internal amount still due after a partial refund occurs.
          type: number
        captureAmountRefundModifier:
          description: The capture amount still due after a partial refund occurs.
          type: number
        netSourceAmount:
          description: The total initial price as quoted in the original TripPay contract.
          type: number
        netDisplayAmount:
          description: The total display price.
          type: number
        netSupplierAmount:
          description: The total supplier price.
          type: number
        netInternalAmount:
          type: number
        netCaptureAmount:
          description: The total capture price.
          type: number
        metadata:
          description: Place to add more data related to the beneficiary.
          type: object
          additionalProperties:
            description: Place to add more data related to the beneficiary.
            type: string
    BookingAncillary_Affiliate:
      description: Spa reservation records.
      required:
        - address
        - attendees
        - commission
        - commissionable
        - contact
        - endDate
        - hotelIdentifier
        - imageIdentifier
        - imageUrl
        - localizedDescription
        - localizedName
        - name
        - price
        - pricingType
        - startDate
        - transactionalTravelInventoryIdentifier
        - type
        - typeIdentifier
      type: object
      properties:
        hotelIdentifier:
          description: Hotel identifier
          type: string
          format: uuid
        typeIdentifier:
          description: Travel inventory identifier
          type: string
          format: uuid
        transactionalTravelInventoryIdentifier:
          description: Travel inventory identifier
          type: string
          format: uuid
        name:
          description: Name of inventory
          type: string
          example: Place 1
        pricingType:
          description: Pricing type
          type: string
          example: PER_USE
          enum:
            - PER_STAY
            - PER_DAY
            - PER_NIGHT
            - PER_USE
            - PER_HOUR
            - PER_PERSON
            - PER_PERSON_PER_NIGHT
            - PER_PERSON_PER_HOUR
            - PER_ADULT
            - PER_ADULT_PER_NIGHT
            - PER_ADULT_PER_HOUR
            - PER_CHILD
            - PER_CHILD_PER_NIGHT
            - PER_CHILD_PER_HOUR
        type:
          description: Inventory type
          type: string
          example: PLACE
          enum:
            - ROOM_TYPE_ANCILLARY
            - ADD_ON
            - MEETING_ROOM
            - SPA
            - RESTAURANT
            - ACTIVITY
            - ATTRACTION
            - PLACE
        price:
          $ref: '#/components/schemas/LocalizedPrice_Affiliate'
        startDate:
          description: Date start time when reservation was made for.
          type: string
          format: date-time
        endDate:
          description: Date end time when reservation was made for.
          type: string
          format: date-time
        attendees:
          description: Number of guests that are part of this reservation.
          type: integer
          format: int32
          example: 2
          default: 1
        imageIdentifier:
          description: Cloudinary image identifier
          type: string
          example: cloudinary-image-1
        imageUrl:
          description: Absolute URL to image of inventory
          type: string
          example: https://path.to.image.com/this-is-me.jpg
        localizedName:
          description: >-
            Name of travel inventory in traveler language (if available).
            Defaults to English.
          type: string
          example: Plass 1
        localizedDescription:
          description: >-
            Description of travel inventory in traveler language (if available).
            Defaults to English.
          type: string
          example: place-1
        contact:
          $ref: '#/components/schemas/Contact_Affiliate'
        address:
          $ref: '#/components/schemas/Address_Affiliate'
        commissionable:
          type: boolean
        commission:
          type: number
          format: float
    BookingContractItem_Affiliate:
      description: Returns the lodging item only.
      type: object
      properties:
        supplierItemBookingCode:
          description: Booking code identifying the supplier line item.
          type: string
          example: TP-ASDFG1234
        user:
          $ref: '#/components/schemas/GuestUser_Affiliate'
        nameInEnglish:
          description: Name of item in English included in booking.
          type: string
          example: Deluxe King
        descriptionInEnglish:
          description: Short description in English of item included in booking.
          type: string
          example: This is the best deluxe king that money can buy.
        itinerary:
          $ref: '#/components/schemas/Itinerary_Affiliate'
        pricingType:
          description: How to calculate the total amount.
          type: string
          enum:
            - PER_STAY
            - PER_DAY
            - PER_NIGHT
            - PER_USE
            - PER_HOUR
            - PER_PERSON
            - PER_PERSON_PER_NIGHT
            - PER_PERSON_PER_HOUR
            - PER_ADULT
            - PER_ADULT_PER_NIGHT
            - PER_ADULT_PER_HOUR
            - PER_CHILD
            - PER_CHILD_PER_NIGHT
            - PER_CHILD_PER_HOUR
        type:
          description: Type of item this is.
          type: string
          example: LODGING
          enum:
            - LODGING
            - RAIL
            - AIR
            - CAR
            - CRUISE
            - PACKAGE
            - ADD_ON
            - RENTAL
            - EXPERIENCE
            - ANCILLARY_BOOKING
            - ANCILLARY_FEE
        beneficiaryList:
          type: array
          items:
            $ref: '#/components/schemas/Beneficiary_Affiliate'
        payable:
          description: When to charge for this item.
          type: string
          example: PREPAY
          enum:
            - IMMEDIATE
            - ARRIVAL
            - DEPARTURE
            - AGENT
        policy:
          $ref: '#/components/schemas/SupplierContractItemPolicy_Affiliate'
        externalIdentifier:
          description: Optional geoname externalIdentifier to remote inventory.
          type: string
          example: room-type-1
        tokensEarned:
          description: Tokens earned for this item
          type: integer
          format: int64
          example: 12
        dailyRateList:
          type: array
          items:
            $ref: '#/components/schemas/DailyRate_Affiliate'
        cancelled:
          description: Optional geoname externalIdentifier to remote inventory.
          type: boolean
        sourceCurrency:
          description: The source currency
          type: string
          example: USD
        displayCurrency:
          description: The display currency
          type: string
          example: USD
        supplierCurrency:
          description: The supplier currency
          type: string
          example: USD
        internalCurrency:
          description: The internal currency
          type: string
          example: USD
        captureCurrency:
          description: The capture currency
          type: string
          example: USD
        sourceAmount:
          description: The total initial price as quoted in the original TripPay contract.
          type: number
        displayAmount:
          description: The total display price.
          type: number
        supplierAmount:
          description: The total supplier price.
          type: number
        internalAmount:
          type: number
        captureAmount:
          description: The total capture price.
          type: number
        sourceAmountRefundModifier:
          description: The source amount still due after a partial refund occurs.
          type: number
        displayAmountRefundModifier:
          description: The display amount still due after a partial refund occurs.
          type: number
        supplierAmountRefundModifier:
          description: The supplier amount still due after a partial refund occurs.
          type: number
        internalAmountRefundModifier:
          description: The internal amount still due after a partial refund occurs.
          type: number
        captureAmountRefundModifier:
          description: The capture amount still due after a partial refund occurs.
          type: number
        netSourceAmount:
          description: The total initial price as quoted in the original TripPay contract.
          type: number
        netDisplayAmount:
          description: The total display price.
          type: number
        netSupplierAmount:
          description: The total supplier price.
          type: number
        netInternalAmount:
          type: number
        netCaptureAmount:
          description: The total capture price.
          type: number
        metadata:
          description: Place to add more data related to the booking contract item.
          type: object
          additionalProperties:
            description: Place to add more data related to the booking contract item.
            type: string
        cancellableBySupplier:
          description: >-
            Whether the booking can still be cancelled by the supplier. A
            supplier cancellation overrides the refundable
          type: boolean
        isCancellableBySupplier:
          type: boolean
          writeOnly: true
        cancellableByTraveler:
          description: Whether the booking can still be cancelled by the traveller.
          type: boolean
        cancellableWithNoCharges:
          description: >-
            Whether the booking can still be cancelled and whether cancellation
            charges might still occur.
          type: boolean
        cancellableWithPotentialCharges:
          description: >-
            Whether the booking can still be cancelled and whether cancellation
            charges might still occur.
          type: boolean
    BookingContractPaymentDetails_Affiliate:
      description: Payment details the merchant provided us at the time of payment.
      required:
        - customerIdentifier
        - status
        - transactionIdentifier
        - vendor
        - vendorSpecific
      type: object
      properties:
        acquirerIdentifier:
          description: Name of acquirer
          type: string
          example: stripe-slovakia
        vendor:
          description: Name of acquiring vendor
          type: string
          example: STRIPE
          enum:
            - STRIPE
            - AGENT
            - NMI
            - WISE
        transactionIdentifier:
          description: >-
            Unique transaction id from the vendor upon a successful sale. Agent
            adds their transaction identifier.
          type: string
          example: tx-1
        customerIdentifier:
          description: >-
            Unique customer id from the vendor. Agent adds their own customer
            identifier.
          type: string
          example: customer-1
        status:
          description: >-
            Unique transaction id from the vendor upon a successful sale. Agent
            adds their transaction identifier.
          type: string
          example: INITIALIZED
          enum:
            - INITIALIZED
            - PROCESSING
            - SUCCEEDED
            - FAILED
        agentInvoicedDate:
          description: The date/time the invoice was generated
          type: string
          format: date-time
        agentInvoiceIdentifier:
          description: The specific invoice this booking was registered on
          type: string
          example: invoice-1
        redirectUrl:
          description: Where to redirect to after payment [in-]complete
          type: string
        fees:
          type: array
          items:
            $ref: '#/components/schemas/Fee_Affiliate'
        vendorSpecific:
          description: Vendor specific values that are returned in a successful response
          type: object
          additionalProperties:
            description: Vendor specific values that are returned in a successful response
            type: string
    BookingContract_Affiliate:
      description: Booking contract created by TripPay
      type: object
      properties:
        bookingContractIdentifier:
          description: Document UUID
          type: string
          format: uuid
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        federatedOrganizationIdentifier:
          description: The auth realm owner ID
          type: string
          example: owner-1
        federatedOrganizationName:
          description: The auth realm owner name
          type: string
          example: Wink
        user:
          $ref: '#/components/schemas/AuthenticatedUser_Affiliate'
        ipAddress:
          description: Caller's IP address
          type: string
          example: 111.222.333.444
        traceId:
          description: Way to track which booking contracts were made together
          type: string
          example: T-123456
        sourceUrl:
          description: Where did the booking occur
          type: string
          example: https://www.traveliko.com
        identifier:
          description: >-
            Unique identifier used to track the contract. Create a UUID for this
            purpose.
          type: string
          format: uuid
        supplierIdentifier:
          description: Supplier identifier
          type: string
          format: uuid
        supplierName:
          description: Supplier name
          type: string
          example: Supplier One
        displayPriceQuote:
          $ref: '#/components/schemas/Quote_Affiliate'
        supplierPriceQuote:
          $ref: '#/components/schemas/Quote_Affiliate'
        internalPriceQuote:
          $ref: '#/components/schemas/Quote_Affiliate'
        capturePriceQuote:
          $ref: '#/components/schemas/Quote_Affiliate'
        itemList:
          description: Holds one booking line item for a specific supplier.
          type: array
          items:
            $ref: '#/components/schemas/BookingContractItem_Affiliate'
        externalSupplierIdentifier:
          description: >-
            Contract creator can choose to geoname this record with her own
            identifier
          type: string
          example: supplier-a
        externalSupplierBookingCode:
          description: External booking code generated by the affiliate
          type: string
          example: external-booking-code-1
        payment:
          $ref: '#/components/schemas/BookingContractPaymentDetails_Affiliate'
        cancelled:
          description: Optional geoname externalIdentifier to remote inventory.
          type: boolean
          example: false
          default: false
        cancelledOn:
          description: When the booking was cancelled.
          type: string
          format: date-time
        canceller:
          description: Type of entity that cancelled the booking.
          type: string
          enum:
            - SALES_CHANNEL
            - SUPPLIER
            - TRAVELER
            - ACQUIRER
            - ADMINISTRATOR
        cancellationType:
          description: Reason type.
          type: string
          enum:
            - DUPLICATE
            - CANCELLATION
            - NO_SHOW
            - CC_INVALID
            - CC_INSUFFICIENT
            - DISCRETIONARY
        cancellerUserIdentifier:
          description: User identifier that cancelled the entity.
          type: string
        cancelReason:
          description: Reason for cancellation.
          type: string
        fundsProcessed:
          description: Whether a funds transfer request has been created for this booking.
          type: boolean
          example: false
        refunds:
          description: >-
            An optional list of refunds that occurred with this booking. If the
            refund amount(s) is the same as the total price, the booking also
            gets cancelled.
          type: array
          items:
            $ref: '#/components/schemas/Refund_Affiliate'
        payouts:
          description: >-
            An optional list of refunds that occurred with this booking. If the
            refund amount(s) is the same as the total price, the booking also
            gets cancelled.
          type: array
          items:
            $ref: '#/components/schemas/Payout_Affiliate'
        sourceCurrency:
          description: The source currency
          type: string
          example: USD
        displayCurrency:
          description: The display currency
          type: string
          example: USD
        supplierCurrency:
          description: The supplier currency
          type: string
          example: USD
        internalCurrency:
          description: The internal currency
          type: string
          example: USD
        captureCurrency:
          description: The capture currency
          type: string
          example: USD
        sourceAmount:
          description: The total initial price as quoted in the original TripPay contract.
          type: number
        displayAmount:
          description: The total display price.
          type: number
        supplierAmount:
          description: The total supplier price.
          type: number
        internalAmount:
          type: number
        captureAmount:
          description: The total capture price.
          type: number
        sourceAmountRefundModifier:
          description: The source amount still due after a partial refund occurs.
          type: number
        displayAmountRefundModifier:
          description: The display amount still due after a partial refund occurs.
          type: number
        supplierAmountRefundModifier:
          description: The supplier amount still due after a partial refund occurs.
          type: number
        internalAmountRefundModifier:
          description: The internal amount still due after a partial refund occurs.
          type: number
        captureAmountRefundModifier:
          description: The capture amount still due after a partial refund occurs.
          type: number
        netSourceAmount:
          description: The total initial price as quoted in the original TripPay contract.
          type: number
        netDisplayAmount:
          description: The total display price.
          type: number
        netSupplierAmount:
          description: The total supplier price.
          type: number
        netInternalAmount:
          type: number
        netCaptureAmount:
          description: The total capture price.
          type: number
        totalTokensEarned:
          description: Total amount of tokens minted on this contract.
          type: integer
          format: int64
        metadata:
          description: Place to add more data related to the booking contract.
          type: object
          additionalProperties:
            description: Place to add more data related to the booking contract.
            type: string
        hasRefunds:
          description: Indicates whether any refund in any state is present.
          type: boolean
        totalTripPayFeeInPercent:
          description: All amounts that are not of type SALE before a refund was applied
          type: number
          format: float
        originalCommissionsInPercent:
          description: All amounts that are not of type SALE before a refund was applied
          type: number
        originalFeesInPercent:
          description: All amounts that are not of type SALE before a refund was applied
          type: number
        totalCommissionsInPercentWithRefund:
          description: All amounts that are not of type SALE
          type: number
          format: float
        totalFeesInPercentWithRefund:
          description: All amounts that are not of type SALE
          type: number
          format: float
        totalTripPayFeeInPercentWithRefund:
          description: All amounts that are not of type SALE
          type: number
          format: float
        lodging:
          $ref: '#/components/schemas/BookingContractItem_Affiliate'
        cancellableBySupplier:
          description: >-
            Whether the booking can still be cancelled completely by the
            supplier.
          type: boolean
        cancellableByTraveler:
          description: >-
            Whether the booking can still be cancelled completely by the
            traveller.
          type: boolean
        netTotalFeesSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalTripPayFeeSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalTripPayFeeSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netCommissionableTotalSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        commissionableTotalSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalFeesAndCommissionsSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesAndCommissionsSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        cancellableWithNoCharges:
          description: Whether the cancellation comes at no cost to the traveler.
          type: boolean
        isCancellableWithPotentialCharges:
          description: >-
            Whether a cancellation comes with partial charges. I.e. Only some of
            the items in contract are not fully refundable.
          type: boolean
          writeOnly: true
        netCommissionableTotalSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netCommissionableTotalCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netCommissionableTotalDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netCommissionableTotalInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalFeesAndCommissionsSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalFeesAndCommissionsCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalFeesAndCommissionsDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalFeesAndCommissionsInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalFeesSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalFeesCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalFeesDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalFeesInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalTripPayFeeSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalTripPayFeeCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalTripPayFeeDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalTripPayFeeInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalSalesSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalSalesCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalSalesDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalSalesSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalSalesInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        commissionableTotalSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        commissionableTotalCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        commissionableTotalDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        commissionableTotalInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesAndCommissionsSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesAndCommissionsCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesAndCommissionsDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesAndCommissionsInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalFeesInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalTripPayFeeSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalTripPayFeeCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalTripPayFeeDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalTripPayFeeInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalSalesSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalSalesCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalSalesDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalSalesSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalSalesInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        fundsAvailableDate:
          description: Returns the date the funds will be released to the customer.
          type: string
          format: date
        totalFeesInPercent:
          description: All amounts that are not of type SALE before a refund was applied
          type: number
          format: float
        totalCommissionsInPercent:
          description: All amounts that are not of type SALE before a refund was applied
          type: number
          format: float
        totalFeesAndCommissionsInPercentWithRefund:
          description: All amounts that are not of type SALE
          type: number
          format: float
        totalFeesAndCommissionsInPercent:
          description: All amounts that are not of type SALE before a refund was applied
          type: number
          format: float
        netTotalCustomersSourceAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalCustomersCaptureAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalCustomersDisplayAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalCustomersSupplierAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        netTotalCustomersInternalAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        hasSuccessfulRefunds:
          description: Indicates whether a successful refund is present.
          type: boolean
        hasPendingRefunds:
          description: Indicates whether a pending refund is present.
          type: boolean
        hasFailedRefunds:
          description: Indicates whether a failed refund is present.
          type: boolean
    BookingUserAddress_Affiliate:
      description: Address entered during booking process
      required:
        - address1
        - city
        - postalCode
      type: object
      properties:
        address1:
          description: Address line 1
          type: string
          example: 234 Near da beach
        address2:
          description: Address line 2
          type: string
          example: 'Pebble #5001'
        city:
          description: City name
          type: string
          example: Los Angeles
        state:
          description: State
          type: string
          example: CA
        postalCode:
          description: Postal / zip code
          type: string
          example: '90210'
        country:
          description: Country
          type: string
          example: US
        fullAddress:
          description: Full address
          type: string
          example: '234 Near da beach, Pebble #5001, Los Angeles, CA 90210, US'
    BookingUser_Affiliate:
      description: User details for the authenticated person that made the booking.
      required:
        - email
        - firstName
        - lastName
      type: object
      properties:
        userIdentifier:
          description: User identifier
          type: string
          format: uuid
        firstName:
          description: First name
          type: string
          example: John
        lastName:
          description: Last name
          type: string
          example: Smith
        email:
          description: Email
          type: string
          format: email
          example: john.smith@email.com
        telephone:
          description: Telephone
          type: string
          example: +1 212 555 1212
        address:
          $ref: '#/components/schemas/BookingUserAddress_Affiliate'
        profile:
          $ref: '#/components/schemas/Profile_Affiliate'
        fullName:
          description: Full name
          type: string
          readOnly: true
          example: John Smith
    BookingView_Affiliate:
      required:
        - booking
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        booking:
          $ref: '#/components/schemas/Booking_Affiliate'
    Booking_Affiliate:
      description: Booking data object
      required:
        - address
        - bookingCode
        - contactInfo
        - date
        - emailHeaderLogoUrl
        - engineConfiguration
        - groupIdentifier
        - hotel
        - hotelImageUrl
        - identifier
        - roomImageUrl
        - serverUrl
        - user
        - userSession
      type: object
      properties:
        creation:
          description: >-
            Communicates whether the booking was created normally or if it
            failed or was just for testing.
          type: string
          example: TEST
          default: NORMAL
          enum:
            - NORMAL
            - TEST
            - FAILED
        date:
          description: Date and time the booking was made.
          type: string
          format: date-time
        groupIdentifier:
          description: >-
            Unique record identifier for the collection of bookings that were
            made at the same time.
          type: string
          format: uuid
        identifier:
          description: Unique record identifier
          type: string
          format: uuid
        engineConfiguration:
          $ref: '#/components/schemas/EngineConfigurationBookingReport_Affiliate'
        bookingCode:
          description: >-
            Unique user-friendly booking geoname. This code should be used when
            corresponding with travelers.
          type: string
          example: ABC1234
        user:
          $ref: '#/components/schemas/BookingUser_Affiliate'
        userSession:
          $ref: '#/components/schemas/UserSession_Affiliate'
        serverUrl:
          description: The URL the booking occurred
          type: string
        contactInfo:
          $ref: '#/components/schemas/Contact_Affiliate'
        address:
          $ref: '#/components/schemas/Address_Affiliate'
        socials:
          description: >-
            List of all social network account property has for the traveler to
            get in touch.
          type: array
          items:
            $ref: '#/components/schemas/Social_Affiliate'
        review:
          $ref: '#/components/schemas/Review_Affiliate'
        emailHeaderLogoUrl:
          description: Full url of the image logo optimized for emails
          type: string
        logoIdentifier:
          description: Logo cloudinary identifier for potential reuse
          type: string
        hotel:
          $ref: '#/components/schemas/HotelOnMap_Affiliate'
        roomStay:
          $ref: '#/components/schemas/RoomStay_Affiliate'
        specialRequests:
          description: Free text where the traveler can add a message to the property.
          type: string
        comment:
          description: >-
            Internal comment field the payment can add and make available to
            channel manager partners.
          type: string
        earlyCheckInCharge:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        lateCheckOutCharge:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        earlyCheckInChargePercent:
          description: >-
            Early check-in charge calculated in percent of first room night
            price.
          type: number
          format: float
          example: 0.05
        lateCheckOutChargePercent:
          description: >-
            Early check-in charge calculated in percent of first room night
            price.
          type: number
          format: float
          example: 0.05
        hotelImageUrl:
          description: Absolute URL of hotel image that can be used as-is
          type: string
          example: https://path.to/property-image.jpg
        roomImageUrl:
          description: Absolute URL of room image that can be used as-is
          type: string
          example: https://path.to/room-image.jpg
        commissionList:
          description: >-
            List of all travel inventory entries that are due a commission to
            the affiliate.
          type: array
          items:
            $ref: '#/components/schemas/CommissionableEntry_Affiliate'
        ancillaryList:
          type: array
          items:
            $ref: '#/components/schemas/BookingAncillary_Affiliate'
        bookingContract:
          $ref: '#/components/schemas/BookingContract_Affiliate'
        fullAddress:
          description: Convenience data point to return the full hotel address.
          type: string
          example: 204 At home lane, Singapore, Singapore 224333
        hasAddOns:
          description: >-
            Convenience data point to check if any add-on offers are in this
            booking.
          type: boolean
          example: true
        status:
          description: >-
            Convenience data point to show which status the booking currently
            has.
          type: string
          example: ACTIVE
          enum:
            - CANCELLED_BY_HOTEL
            - CANCELLED_BY_GUEST
            - CANCELLED_BY_ADMIN
            - CANCELLED_BY_SALES_CHANNEL
            - PAST
            - FUTURE
            - CANCELLED_BY_ACQUIRER
            - ACTIVE
            - FAILED
        restaurants:
          description: Restaurant reservation records.
          type: array
          items:
            $ref: '#/components/schemas/BookingAncillary_Affiliate'
        hasBreakfast:
          description: Convenience data point to get to breakfast quickly.
          type: boolean
          example: true
        hasBrunch:
          description: Convenience data point to get to brunch quickly.
          type: boolean
          example: true
        hasLunch:
          description: Convenience data point to get to lunch quickly.
          type: boolean
          example: true
        hasDinner:
          description: Convenience data point to get to dinner quickly.
          type: boolean
          example: true
        hasAllInclusive:
          description: Convenience data point to get to all-inclusive quickly.
          type: boolean
          example: true
        hasAllInclusivePlusAlcohol:
          description: Convenience data point to get to all-inclusive with alcohol quickly.
          type: boolean
          example: true
        hasRoomTypeAncillaries:
          description: >-
            Convenience data point to check if any room type ancillaries are in
            this booking.
          type: boolean
          example: true
        hasFood:
          description: >-
            Convenience data point to check if any food is included in this
            booking.
          type: boolean
          example: true
        hasRestaurants:
          description: >-
            Convenience data point to check if any restaurant reservations are
            included in this booking.
          type: boolean
          example: true
        hasMeetingRooms:
          description: >-
            Convenience data point to check if any meeting room reservations are
            included in this booking.
          type: boolean
          example: true
        hasSpas:
          description: >-
            Convenience data point to check if any spa reservations are included
            in this booking.
          type: boolean
          example: true
        hasActivities:
          description: >-
            Convenience data point to check if any activity reservations are
            included in this booking.
          type: boolean
          example: true
        hasAttractions:
          description: >-
            Convenience data point to check if any attractions reservations are
            included in this booking.
          type: boolean
          example: true
        hasPlaces:
          description: >-
            Convenience data point to check if any place reservations are
            included in this booking.
          type: boolean
          example: true
        reportingDailyRateList:
          type: array
          items:
            $ref: '#/components/schemas/ReportingDailyRate_Affiliate'
        reportingAncillaryList:
          type: array
          items:
            $ref: '#/components/schemas/ReportingAncillary_Affiliate'
        reportingExtraChargeList:
          type: array
          items:
            $ref: '#/components/schemas/ReportingExtraCharge_Affiliate'
        rateSource:
          description: Rate origin. This is usually the property channel manager.
          type: string
          example: SITEMINDER
        meetingRooms:
          description: Meeting room reservation records.
          type: array
          items:
            $ref: '#/components/schemas/BookingAncillary_Affiliate'
        activities:
          description: Activity reservation records.
          type: array
          items:
            $ref: '#/components/schemas/BookingAncillary_Affiliate'
        attractions:
          description: Attraction reservation records.
          type: array
          items:
            $ref: '#/components/schemas/BookingAncillary_Affiliate'
        places:
          description: Place reservation records.
          type: array
          items:
            $ref: '#/components/schemas/BookingAncillary_Affiliate'
        roomTypeAncillaries:
          description: Room type ancillary records.
          type: array
          items:
            $ref: '#/components/schemas/BookingAncillary_Affiliate'
        addOns:
          description: Add-on records.
          type: array
          items:
            $ref: '#/components/schemas/BookingAncillary_Affiliate'
        spas:
          description: Spa reservation records.
          type: array
          items:
            $ref: '#/components/schemas/BookingAncillary_Affiliate'
        cancellableBySupplier:
          description: >-
            Whether the booking can still be cancelled completely by the
            supplier.
          type: boolean
        cancellableByTraveler:
          description: >-
            Whether the booking can still be cancelled completely by the
            traveller.
          type: boolean
    CancellationPolicyException_Affiliate:
      required:
        - cancellationPolicy
        - cancellationPolicyIdentifier
        - endDate
        - startDate
      type: object
      properties:
        cancellationPolicyIdentifier:
          description: Cancellation policy
          type: string
          format: uuid
        cancellationPolicy:
          $ref: '#/components/schemas/CancellationPolicy_Affiliate'
        startDate:
          description: >-
            Start date for when this cancellation policy should start to
            override the default cancellation policy.
          type: string
          format: date
        endDate:
          description: >-
            End date for when this cancellation policy should end overriding the
            default cancellation policy.
          type: string
          format: date
    CancellationPolicyExceptions_Affiliate:
      description: >-
        Allows a property to dynamically use another cancellation policy for a
        specific date range
      required:
        - list
      type: object
      properties:
        list:
          description: List of cancellation policy exceptions
          type: array
          items:
            $ref: '#/components/schemas/CancellationPolicyException_Affiliate'
    CancellationPolicy_Affiliate:
      description: >-
        Based on the itinerary, the cancellation policy could be taken directly
        from the rate plan or it could be a policy exception also listed on the
        rate plan
      required:
        - hotelIdentifier
        - identifier
        - refundable
      type: object
      properties:
        identifier:
          description: Unique cancellation policy identifier
          type: string
          format: uuid
        hotelIdentifier:
          description: Property this cancellation is associated with
          type: string
          format: uuid
        refundable:
          description: Whether this cancellation policy is refundable or not
          type: boolean
          example: false
          default: false
        advanceCancellationFreeOfCharge:
          description: >-
            When the cancellation policy is refundable, this flag can be set and
            indicates there is more rules involved than just a
            no-questions-asked refundable.
          type: string
          example: UNTIL_EIGHTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
          enum:
            - UNTIL_EIGHTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
            - UNTIL_FOURTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
            - ONE_DAY_BEFORE_ARRIVAL
            - TWO_DAYS_BEFORE_ARRIVAL
            - THREE_DAYS_BEFORE_ARRIVAL
            - FIVE_DAYS_BEFORE_ARRIVAL
            - SEVEN_DAYS_BEFORE_ARRIVAL
            - FOURTEEN_DAYS_BEFORE_ARRIVAL
            - TWENTYONE_DAYS_BEFORE_ARRIVAL
            - THIRTY_DAYS_BEFORE_ARRIVAL
            - FOURTY_TWO_DAYS_BEFORE_ARRIVAL
            - SIXTY_DAYS_BEFORE_ARRIVAL
        refundableCancellationCharge:
          description: >-
            If advanceCancellationFreeOfCharge rules is not honored, this
            property explains what the guest will be charged.
          type: string
          example: FIFTY_PERCENT
          enum:
            - FIRST_NIGHT
            - THIRTY_PERCENT
            - FIFTY_PERCENT
            - SIXTY_PERCENT
            - SEVENTY_PERCENT
            - NINENTY_PERCENT
            - ONE_HUNDRED_PERCENT
        noShowCharge:
          description: >-
            In case the 'Refundable cancellation charge' is set, a different no
            show charge can be applied.
          type: string
          example: SAME_AS_CANCELLATION_FEE
          enum:
            - SAME_AS_CANCELLATION_FEE
            - ONE_HUNDRED_PERCENT_OF_TOTAL_CHARGE
        nonRefundableCancellationCharge:
          description: >-
            When the cancellation policy is non-refundable, this flag can be set
            and indicates there is more rules involved to calculate what the
            guest will owe in case of a cancellation.
          type: string
          example: SEVENTY_PERCENT
          enum:
            - FIRST_NIGHT
            - TEN_PERCENT
            - THIRTY_PERCENT
            - FIFTY_PERCENT
            - SEVENTY_PERCENT
        nonRefundableDeadline:
          description: >-
            The non-refundable charge might can have a deadline. If that
            deadline passes, the guest might be charged more.
          type: string
          example: SEVEN_DAYS_BEFORE_ARRIVAL
          enum:
            - ONE_DAY_BEFORE_ARRIVAL
            - TWO_DAYS_BEFORE_ARRIVAL
            - THREE_DAYS_BEFORE_ARRIVAL
            - FIVE_DAYS_BEFORE_ARRIVAL
            - SEVEN_DAYS_BEFORE_ARRIVAL
            - FOURTEEN_DAYS_BEFORE_ARRIVAL
            - TWENTYONE_DAYS_BEFORE_ARRIVAL
            - THIRTY_DAYS_BEFORE_ARRIVAL
            - FOURTY_TWO_DAYS_BEFORE_ARRIVAL
            - SIXTY_DAYS_BEFORE_ARRIVAL
        nonRefundableAfterDeadlineCancellationCharge:
          description: >-
            If the guest does not honor the non-refundable deadline rule, this
            charge dictates what she owes after the deadline passes.
          type: string
          example: ONE_HUNDRED_PERCENT
          enum:
            - FIRST_NIGHT
            - TEN_PERCENT
            - THIRTY_PERCENT
            - FIFTY_PERCENT
            - SEVENTY_PERCENT
            - ONE_HUNDRED_PERCENT
        policyCode:
          type: string
    CommissionableEntry_Affiliate:
      description: >-
        List of all travel inventory entries that are due a commission to the
        affiliate.
      required:
        - commissionPercent
        - identifier
        - name
        - type
      type: object
      properties:
        name:
          type: string
        identifier:
          type: string
        type:
          type: string
          enum:
            - GUEST_ROOM
            - ADD_ON
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ATTRACTION
            - PLACE
            - ACTIVITY
        commissionPercent:
          type: number
          format: float
    CustomMonetaryAmount:
      type: object
      properties:
        amount:
          type: number
        currency:
          type: string
    DailyRate_Affiliate:
      description: In case of LODGING, include daily rates
      required:
        - capturePrice
        - date
        - displayPrice
        - internalPrice
        - price
        - supplierPrice
      type: object
      properties:
        date:
          description: The date this rate is applicable for.
          type: string
          format: date
          example: '2020-08-24'
        price:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        displayPrice:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        supplierPrice:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        internalPrice:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        capturePrice:
          $ref: '#/components/schemas/CustomMonetaryAmount'
    DowPatternGroup_Affiliate:
      type: object
      properties:
        mon:
          description: Set to `true` to enable Monday.
          type: boolean
          example: true
        tue:
          description: Set to `true` to enable Tuesday.
          type: boolean
          example: true
        wed:
          description: Set to `true` to enable Wednesday.
          type: boolean
          example: true
        thu:
          description: Set to `true` to enable Thursday.
          type: boolean
          example: true
        fri:
          description: Set to `true` to enable Friday.
          type: boolean
          example: true
        sat:
          description: Set to `true` to enable Saturday.
          type: boolean
          example: true
        sun:
          description: Set to `true` to enable Sunday.
          type: boolean
          example: true
        disabled:
          description: >-
            Convenience property to quickly determine if this existing object
            has any active days enabled.
          type: boolean
          example: true
    EngineConfigurationBookingReport_Affiliate:
      description: >-
        Which engine configuration record did the entity application used to
        facilitate in making this booking happen.
      required:
        - identifier
        - name
        - ownerIdentifier
        - ownerName
        - subType
        - userIdentifier
      type: object
      properties:
        identifier:
          description: Unique engine configuration identifier
          type: string
          format: uuid
        name:
          description: Engine configuration name
          type: string
          example: Engine Configuration 1
        userIdentifier:
          description: Authenticated user identifier
          type: string
          format: uuid
        ownerIdentifier:
          description: Engine configuration record creator identifier
          type: string
          format: uuid
        ownerName:
          description: Name of company owner.
          type: string
          example: Travel Tech 1
        subType:
          description: Sales channel sub-type.
          type: string
          example: APPLICATION
          enum:
            - DIRECT
            - APPLICATION
            - HOTEL
            - TRAVELIKO
            - CORPORATE
            - TRAVEL_AGENT
            - INFLUENCER
            - BLOGGER
            - DESTINATION
            - CHANNEL_MANAGER
            - PROPERTY_MANAGEMENT_SYSTEM
            - CENTRAL_RESERVATION_SYSTEM
            - GOOGLE_HOTEL_API
            - MANAGEMENT_COMPANY
            - CHAIN
            - BRAND
            - EVENT_ORGANIZER
        defaultCurrency:
          description: Control which currency your users see prices in initially.
          type: string
          example: USD
          default: USD
        defaultLanguage:
          description: Control which language your users see text in initially.
          type: string
          example: en
          default: en
        logos:
          description: >-
            Customize booking confirmation emails by adding a custom logo to
            your configuration.
          type: array
          items:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
        hostedBookingEngineUrl:
          description: >-
            If you are self-hosting our booking engine, let us know where it is
            hosted. Note: This url needs to be secured with SSL.
          type: string
          example: https://my.customtravelsite.com/book
          default: https://ota.wink.travel
        selfHosted:
          description: >-
            Flag to indicate you are self-hosting our booking engine and not
            using our default booking engine url.
          type: boolean
          example: true
          default: false
        themeColors:
          $ref: '#/components/schemas/EngineConfigurationTheme_Affiliate'
        numberOfAdvanceDays:
          description: >-
            You can control the initial itinerary date used to retrieve travel
            inventory prices. You can do it in one of two ways: 1. Dynamically
            set the date by indicating how long and how many days in advance
            (this field), of today's date, you want to display prices for. 2.
            Set a fixed date to display prices for. Option 1 is the most shared.
            Option 2 is for when you want to create a new customization and
            apply it to a specific event that occurs on a specific date. If you
            don't use either of these options, the itinerary will default to
            today's date with one night stay. ONLY populate this field if you
            want to control the itinerary date. Also, leave `startDate` and
            `endDate` empty.
          type: integer
          format: int32
          example: 10
        numberOfStayDays:
          description: >-
            You can control the initial itinerary date used to retrieve travel
            inventory prices. You can do it in one of two ways: 1. Dynamically
            set the date by indicating how long (this field) and how many days
            in advance, of today's date, you want to display prices for. 2. Set
            a fixed date to display prices for. Option 1 is the most shared.
            Option 2 is for when you want to create a new customization and
            apply it to a specific event that occurs on a specific date. If you
            don't use either of these options, the itinerary will default to
            today's date with one night stay. ONLY populate this field if you
            want to control the itinerary date. Also, leave `startDate` and
            `endDate` empty.
          type: integer
          format: int32
          example: 2
        startDate:
          description: >-
            Set a fixed itinerary start date. ONLY populate this field if you
            want to fix the itinerary date. Also, leave `numberOfAdvanceDays`
            and `numberOfStayDays` empty.
          type: string
          format: date
          example: '2021-12-24'
        endDate:
          description: >-
            Set a fixed itinerary end date ONLY populate this field if you want
            to fix the itinerary date. Also, leave `numberOfAdvanceDays` and
            `numberOfStayDays` empty.
          type: string
          format: date
          example: '2021-12-31'
        roomConfigurations:
          description: >-
            Control how many adults / children will be staying and how many
            rooms. Defaults to: One room, two adults.
          type: array
          items:
            $ref: '#/components/schemas/RoomConfiguration_Affiliate'
        useDays:
          description: >-
            if true, we use numberOfAdvanceDays / numberOfStayDays properties -
            false, we use startDate / endDate
          type: boolean
          example: true
        promotionalCodes:
          description: >-
            If you've received special promotional codes from suppliers to give
            to your audience, you can choose to bake these code directly into
            the price by entering them here.
          type: array
          example:
            - promo-1
          items:
            description: >-
              If you've received special promotional codes from suppliers to
              give to your audience, you can choose to bake these code directly
              into the price by entering them here.
            type: string
            example: '["promo-1"]'
        sendBookingNotificationEmailsToProperty:
          description: >-
            An integrator can choose to disable outgoing emails to properties
            because they want to do that themselves.
          type: boolean
          example: true
          default: true
        sendBookingNotificationEmailsToBooker:
          description: >-
            An integrator can choose to disable outgoing emails to users because
            they want to do that themselves.
          type: boolean
          example: true
          default: true
        sendBookingNotificationEmailsToChannelManager:
          description: >-
            An integrator can choose to disable notifying the property's channel
            manager. Note: This should ONLY be done for testing.
          type: boolean
          example: true
          default: true
        wcBookClickAction:
          description: >-
            Action to complete once a user clicks on the CTA button on
            inventory.
          type: string
          example: IBE_MODAL
          enum:
            - FORWARD_TO_IBE
            - IBE_MODAL
        city:
          $ref: '#/components/schemas/GeoName_Affiliate'
        showUnavailableCard:
          description: >-
            Show unavailable inventory card when inventory not currently for
            sale. Otherwise, it displays a normal card but without the price.
          type: boolean
        showRankings:
          description: >-
            Whether to display rankings (lifestyle, eco score and reviews) on
            hotel landing page.
          type: boolean
    ExtraCharge_Affiliate:
      title: Items
      description: List of extra charges that applies to the rate plan.
      type: object
      properties:
        ratePlanLevelFee:
          $ref: '#/components/schemas/RatePlanLevelFee_Affiliate'
        unitPrice:
          $ref: '#/components/schemas/LocalizedPrice_Affiliate'
        price:
          $ref: '#/components/schemas/LocalizedPrice_Affiliate'
    ExtraCharges_Affiliate:
      description: Rate plan-level extra charges
      type: object
      properties:
        items:
          title: Items
          description: List of extra charges that applies to the rate plan.
          type: array
          items:
            $ref: '#/components/schemas/ExtraCharge_Affiliate'
        userSpecifiedCurrencyTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        sourceTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        internalTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
    Fee_Affiliate:
      description: Fees associated with this booking contract.
      required:
        - description
        - fee
        - identifier
        - type
      type: object
      properties:
        description:
          description: Withdrawal fee description
          type: string
        identifier:
          description: Unique system ID.
          type: string
          format: uuid
        fee:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        type:
          description: Type of fee
          type: string
          enum:
            - ACQUIRING
            - FX
            - TAX
    GuestRoom_Affiliate:
      description: Guest room details.
      required:
        - active
        - address
        - bathroomCount
        - bedroomConfigurationList
        - bookable
        - commissionable
        - composite
        - compositeCount
        - contact
        - descriptions
        - featuredInd
        - hotelIdentifier
        - identifier
        - includedAdultOccupancy
        - includedChildOccupancy
        - livingRoomCount
        - location
        - maxAdultOccupancy
        - maxChildOccupancy
        - maxCribs
        - maxOccupancy
        - maxRollaways
        - minOccupancy
        - multimedias
        - name
        - nonSmoking
        - pricePoint
        - proximityCode
        - quantity
        - roomArchitectureCode
        - roomCategory
        - roomClassificationCode
        - roomLocationCode
        - roomViewCode
        - sharedRoomInd
        - size
      type: object
      properties:
        identifier:
          description: Unique record identifier
          type: string
          format: uuid
        hotelIdentifier:
          description: Hotel identifier.
          type: string
          format: uuid
        featuredInd:
          description: >-
            Indicates whether this inventory is featured. Use this flag as a way
            to signify that this inventory is special.
          type: boolean
          example: false
        lifestyleType:
          description: >-
            Indicate the type of lifestyle this inventory should be associated
            with.
          type: string
          example: LIFESTYLE_HEALTH_FITNESS
          enum:
            - LIFESTYLE_HEALTH_FITNESS
            - LIFESTYLE_RELAX
            - LIFESTYLE_ADULT_ONLY
            - LIFESTYLE_ADVENTURE
            - LIFESTYLE_BUSINESS
            - LIFESTYLE_LGBT
            - LIFESTYLE_SINGLE_PARENT
            - LIFESTYLE_SOLO_FEMALE
            - LIFESTYLE_BEAUTY
            - LIFESTYLE_FOODIE
            - LIFESTYLE_FAMILY
            - LIFESTYLE_ROMANCE
            - LIFESTYLE_COUPLE
            - LIFESTYLE_SOLO
            - LIFESTYLE_BACKPACKER
            - LIFESTYLE_SHOPPING
            - LIFESTYLE_SPORTS
            - LIFESTYLE_MOUNTAIN
            - LIFESTYLE_BEACH
            - LIFESTYLE_CITY
            - LIFESTYLE_COUNTRY
            - LIFESTYLE_CULTURE
            - LIFESTYLE_ECO
        location:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        descriptions:
          description: Localized descriptions describing inventory.
          type: array
          items:
            $ref: '#/components/schemas/SimpleDescription_Affiliate'
        multimedias:
          description: List of images / videos of inventory.
          type: array
          items:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
        contact:
          $ref: '#/components/schemas/Contact_Affiliate'
        address:
          $ref: '#/components/schemas/Address_Affiliate'
        commissionable:
          description: >-
            Indicate whether sales channels receive commission for selling this
            inventory.
          type: boolean
          example: true
          default: true
        name:
          description: Internal name of inventory.
          type: string
          example: Archery lesson
        proximityCode:
          description: >-
            Supported OTA specification `PRX` code. See [OTA geoname
            data](https://api.wink.travel)
          type: string
          example: '1'
        sort:
          description: Use this property to sort an inventory in a list of activities.
          type: integer
          format: int32
          example: 1
        minAgeAppropriateCode:
          description: >-
            Supported OTA specification `AQC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: string
          example: '1'
        bookable:
          description: >-
            Indicates if this inventory can be added to a booking or if it is
            read-only marketing material only.
          type: boolean
          example: true
          default: true
        active:
          description: Modify inventory availability with this flag.
          type: boolean
          example: true
          default: true
        disabilityFeatures:
          description: >-
            Supported OTA specification `PHY` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example:
            - '1'
          items:
            type: string
        securityFeatures:
          description: >-
            Supported OTA specification `SEC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example:
            - '1'
          items:
            type: string
        socials:
          description: Social network accounts for inventory (if applicable).
          type: array
          items:
            $ref: '#/components/schemas/Social_Affiliate'
        pricePoint:
          description: Level of expensiveness.
          type: string
          example: THREE
          default: THREE
          enum:
            - HALF
            - ONE
            - ONE_HALF
            - TWO
            - TWO_HALF
            - THREE
            - THREE_HALF
            - FOUR
            - FOUR_HALF
            - FIVE
        recognitionList:
          description: Inventory-level recognition.
          type: array
          items:
            $ref: '#/components/schemas/TravelInventoryRecognition_Affiliate'
        maxOccupancy:
          description: Maximum number of guest allowed in a room type.
          minimum: 1
          type: integer
          format: int32
          example: 2
          default: 2
        minOccupancy:
          description: Minimum number of guests allowed in a room type.
          minimum: 1
          type: integer
          format: int32
          example: 1
          default: 1
        quantity:
          description: Defines the number of rooms of this type
          minimum: 1
          type: integer
          format: int32
          example: 40
        nonSmoking:
          description: Non-smoking indicator
          type: boolean
          example: true
        bedroomConfigurationList:
          description: A room type can have more than one bed configuration.
          type: array
          items:
            $ref: '#/components/schemas/BedroomConfiguration_Affiliate'
        size:
          description: Number of square meters that defines the size of this room type.
          minimum: 1
          type: number
          format: float
          example: 55
        maxAdultOccupancy:
          description: Maximum number of adults allowed in a room type.
          minimum: 1
          type: integer
          format: int32
          example: 1
          default: 2
        maxChildOccupancy:
          description: Maximum number of children allowed in a room type.
          minimum: 0
          type: integer
          format: int32
          example: 0
          default: 0
        bathroomCount:
          description: Number of bathrooms
          minimum: 0
          type: integer
          format: int32
          example: 0
          default: 1
        livingRoomCount:
          description: Number of living rooms
          minimum: 0
          type: integer
          format: int32
          example: 0
          default: 1
        maxRollaways:
          description: Maximum number of rollaway beds allowed in this room type.
          minimum: 0
          type: integer
          format: int32
          example: 0
          default: 0
        roomCategory:
          description: >-
            Indicates the category of the room. Typical values would be
            Moderate, Standard, or Deluxe. Supported OTA specification `SEG`
            code. See [OTA geoname data](https://api.wink.travel)
          type: string
          example: '1'
        floor:
          description: Floor an which a room is located
          type: string
        roomLocationCode:
          description: >-
            Indicates the location of the room within the hotel structure.
            Typical values would be "Near Exit","Close to elevator", "Low Floor"
            or "High Floor". Supported OTA specification `RLT` code. See [OTA
            geoname data](https://api.wink.travel)
          type: string
          example: '1'
        roomViewCode:
          description: >-
            Indicates the view of the room. Typical values would be "Ocean
            view", "Pool view" or "Garden View". Supported OTA specification
            `RVT` code. See [OTA geoname data](https://api.wink.travel)
          type: string
          example: '1'
        composite:
          description: Indicates that the room (suite) is a composite of smaller units.
          type: boolean
          example: false
          default: false
        compositeCount:
          description: >-
            Number of rooms of this room type that makes up a larger unit
            (composite) such as a two bedroom suite could be comprised of two
            king rooms plus other room types. A 0 means disabled.
          minimum: 0
          type: integer
          format: int32
          example: 2
          default: 0
        roomClassificationCode:
          description: >-
            Specifies the room classification (e.g., cabin, apartment).
            Supported OTA specification `GRI` code. See [OTA geoname
            data](https://api.wink.travel)
          type: string
          example: '1'
        roomArchitectureCode:
          description: >-
            Specifies the architectural style of a room. Supported OTA
            specification `ARC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: string
          example: '1'
        roomGender:
          description: >-
            Used to request or specify a gender assignment for a room. Note:
            Typically used by Hosteliers.
          type: string
          example: Female
          default: Unknown
          enum:
            - Male
            - Female
            - MaleAndFemale
            - Unknown
        sharedRoomInd:
          description: >-
            If TRUE, the room requires or has sharing available. Note: Typically
            used by Hosteliers.
          type: boolean
          example: false
          default: false
        maxCribs:
          description: Maximum number of cribs allowed in a room type.
          minimum: 0
          type: integer
          format: int32
          example: 1
          default: 0
        amenities:
          description: >-
            Collection of room amenity items available to the guest. Supported
            OTA specification `RMA` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example:
            - '1'
            - '7'
          items:
            type: string
        includedAdultOccupancy:
          description: The number of pax the room price was meant for
          minimum: 0
          type: integer
          format: int32
          example: 2
          default: 2
        includedChildOccupancy:
          description: The number of children the room price was meant for
          minimum: 0
          type: integer
          format: int32
          example: 0
          default: 0
    GuestUser_Affiliate:
      required:
        - email
        - firstName
        - lastName
      type: object
      properties:
        userIdentifier:
          description: User identifier
          type: string
          format: uuid
        firstName:
          description: First name
          type: string
          example: John
        lastName:
          description: Last name
          type: string
          example: Smith
        email:
          description: Email
          type: string
          format: email
          example: john.smith@email.com
        telephone:
          description: Telephone
          type: string
          example: +1 212 555 1212
        address:
          $ref: '#/components/schemas/BookingUserAddress_Affiliate'
        fullName:
          description: Full name
          type: string
          readOnly: true
          example: John Smith
    IPLocation_Affiliate:
      type: object
      properties:
        cityName:
          type: string
        cityGeoNameId:
          type: integer
          format: int64
        countryName:
          type: string
        countryCode:
          type: string
        countryGeoNameId:
          type: integer
          format: int64
        continentName:
          type: string
        continentCode:
          type: string
        continentGeoNameId:
          type: integer
          format: int64
        timezone:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
    Itinerary_Affiliate:
      required:
        - adults
        - children
        - endDate
        - startDate
      type: object
      properties:
        startDate:
          description: Start date
          type: string
          format: date-time
        endDate:
          description: End date
          type: string
          format: date-time
        adults:
          description: Number of adults
          minimum: 1
          type: integer
          format: int32
        children:
          description: Number of children
          minimum: 0
          type: integer
          format: int32
        guests:
          description: Total number of adults and children
          type: integer
          format: int32
        nights:
          description: Total number of room nights
          type: integer
          format: int64
        hours:
          description: >-
            Number of hours between start and end dates. Used for itineraries
            that require bookings that occur within hours and not days. E.g.
            Meeting room reservation.
          type: integer
          format: int64
    LocalizedPrice_Affiliate:
      description: Pricing information for this ancillary.
      required:
        - internalBaseTotal
        - sourceBaseTotal
        - sourceToInternalCurrencyQuote
        - sourceToUserCurrencyQuote
        - userSpecifiedCurrencyBaseTotal
      type: object
      properties:
        sourceToUserCurrencyQuote:
          $ref: '#/components/schemas/Quote_Affiliate'
        sourceToInternalCurrencyQuote:
          $ref: '#/components/schemas/Quote_Affiliate'
        userSpecifiedCurrencyBaseTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        sourceBaseTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        internalBaseTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        userSpecifiedCurrencyPromotionalModifier:
          description: Promotional modifiers in user specified currency
          type: number
          example: -40
        sourcePromotionalModifier:
          description: Promotional modifiers in hotel currency
          type: number
          example: -40
        internalPromotionalModifier:
          description: Promotional modifiers in wink currency
          type: number
          example: -40
        userSpecifiedCurrencyPremiumModifier:
          description: Premium modifiers in user specified currency
          type: number
          example: 40
        sourcePremiumModifier:
          description: Premium modifiers in hotel currency
          type: number
          example: 40
        internalPremiumModifier:
          description: Premium modifiers in wink currency
          type: number
          example: 40
        userSpecifiedCurrencyChannelModifier:
          description: Channel / Membership modifier in user specified currency
          type: number
          example: -10
        sourceChannelModifier:
          description: Channel / Membership modifier in hotel currency
          type: number
          example: -10
        internalChannelModifier:
          description: Channel / Membership modifier in wink currency
          type: number
          example: -10
        quantity:
          description: How many of this item is included in this price
          type: integer
          format: int64
          default: 1
        promotionalDiscountPercent:
          description: Promotional discount percent
          type: number
          format: float
        channelDiscountPercent:
          description: Channel discount percent
          type: number
          format: float
        premiumPercent:
          description: Premium percent
          type: number
          format: float
        sourceTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        hasPromotion:
          type: boolean
        hasPremium:
          type: boolean
        userSpecifiedCurrencyTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        internalTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalDiscountPercent:
          type: number
          format: float
        hasChannelDiscount:
          type: boolean
    PageBookingView_Affiliate:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/BookingView_Affiliate'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject_Affiliate'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject_Affiliate'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PayoutFee_Affiliate:
      description: Fees incurred when making the withdrawal.
      type: object
      properties:
        description:
          description: Withdrawal fee description
          type: string
        identifier:
          description: Unique system ID.
          type: string
          format: uuid
        fee:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        type:
          description: Type of fee
          type: string
          enum:
            - FX
            - SERVICE_CHARGE
        candidate:
          description: Who pays for this fee
          type: string
          enum:
            - PAYOR
            - PAYEE
    Payout_Affiliate:
      description: Payout keeps track of all outgoing funds for a certain account.
      type: object
      properties:
        description:
          description: Textual response from provider
          type: string
          example: Card created successfully
        vendor:
          description: Name of integration vendor
          type: string
          example: STRIPE
          enum:
            - STRIPE
            - AGENT
            - NMI
            - WISE
        vendorIdentifier:
          description: Which acquirer account we return fund from.
          type: string
        vendorName:
          description: Name of regional acquirer account.
          type: string
        vendorTokenKey:
          description: >-
            Key to help load Stripe for the correct region. Could be helpful for
            other vendors as well.
          type: string
        identifier:
          description: Unique system ID.
          type: string
          format: uuid
        beneficiaryIdentifier:
          description: Beneficiary ID.
          type: string
          format: uuid
        externalPayeeIdentifier:
          description: This would be the cardholder ID for VCCs.
          type: string
          example: stripe-cardholder-1
        type:
          description: Type of withdrawal.
          type: string
          example: BANK_TRANSFER
          enum:
            - BANK_TRANSFER
            - VCC
        entry:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        fees:
          description: Fees incurred when making the withdrawal.
          type: array
          items:
            $ref: '#/components/schemas/PayoutFee_Affiliate'
        created:
          description: When the payout record was created.
          type: string
          format: date-time
        payoutId:
          description: >-
            The identifier that was generated when scheduling the payout. This
            will come from the payout provider such as Stripe.
          type: string
          example: stripe-card-1
        referenceCode:
          description: >-
            The transaction code that was generated when the funds move out of
            TripPay's account. This will come from the payout provider such as
            Stripe. E.g. For VCCs, it will occur when an authorization takes
            place.
          type: string
          example: ABC1234
        referenceCodeDate:
          description: The time the funds were withdrawn
          type: string
          format: date-time
        status:
          description: Status of withdrawal.
          type: string
          example: SCHEDULED
          enum:
            - INITIATED
            - ACTIVE
            - INACTIVE
            - FAILED
            - CANCELLED
            - COMPLETE
    Personal_Affiliate:
      description: Detailed customer information for this profile
      type: object
      properties:
        gender:
          description: Identifier the gender of the customer.
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
        birthDate:
          description: >-
            Indicates the date of birth as indicated in the document, in ISO
            8601 prescribed format.
          type: string
          format: date
        maritalStatus:
          description: Marital status of the traveler.
          type: string
          enum:
            - ANNULLED
            - COHABITATING
            - DIVORCED
            - ENGAGED
            - MARRIED
            - SEPARATED
            - SINGLE
            - WIDOWED
            - UNKNOWN
        childQuantity:
          description: The number of children of the customer.
          type: integer
          format: int32
        citizenship:
          description: >-
            Name of the (self-professed) country that is clamided for
            citizenship.
          type: string
        address1:
          description: Address line 1
          type: string
        address2:
          description: Address line 2
          type: string
        city:
          description: City
          type: string
        state:
          description: State
          type: string
        postalCode:
          description: Postal code
          type: string
        country:
          description: Country
          type: string
        preferredCurrency:
          description: >-
            Type of funds preferred for reviewing monetary values, in ISO 4217
            codes
          type: string
          example: USD
        language:
          description: The primary language of the customer
          type: string
        contactPerson:
          type: array
          items:
            $ref: '#/components/schemas/Contact_Affiliate'
        physChallName:
          type: array
          items:
            description: Array of customer's physical challenges
            type: string
        petInfo:
          type: array
          items:
            $ref: '#/components/schemas/PetInfoDto_Affiliate'
    PetInfoDto_Affiliate:
      description: Array of customer's pets
      required:
        - name
        - type
      type: object
      properties:
        name:
          description: Pet name
          type: string
        type:
          description: Pet type
          type: string
    Preferences_Affiliate:
      description: Customer preferences
      type: object
      properties:
        propertyLocationPref:
          description: Indicates preference for hotel property locations.
          type: string
        propertyTypePref:
          description: Indicates preference for hotel property types.
          type: string
        hotelChainPref:
          description: Identifies a preferred company by name.
          type: string
        propertyAmenityPref:
          description: Indicates preferences for hotel property amenities.
          type: array
          items:
            type: string
        recreationSrvcPref:
          description: Indicates preference for the type of recreation services in a hotel
          type: array
          items:
            type: string
        businessSrvcPref:
          description: Indicates preference for type of business services in a hotel
          type: array
          items:
            type: string
        securityFeaturePref:
          description: Indicates preference of rtype of security features in a hotel
          type: array
          items:
            type: string
        physChalFeaturePref:
          description: >-
            Indicates preferences for type of features required to meet the
            needs of persons with physical challenges, disabilities, etc.
          type: array
          items:
            description: >-
              Indicates preferences for type of features required to meet the
              needs of persons with physical challenges, disabilities, etc.
            type: string
        smokingAllowed:
          description: Indicates preference for smooking allowed rooms..
          type: boolean
        roomLocationPref:
          description: Indicates preference for hotel room locations.
          type: string
        bedTypePref:
          description: Indicates preferences for the size and features of hotel bed types.
          type: string
        foodSrvcPref:
          description: >-
            Indicates preferences for type of food listener facilities in a
            hotel.
          type: string
        roomAmenityPref:
          description: Indicates preferences for hotel room amenities.
          type: array
          items:
            type: string
        guestType:
          description: Guest type
          type: string
        mealPref:
          description: Indicates meal preference.
          type: string
        cuisinePref:
          description: Indicates cuisine preference.
          type: string
        interestPref:
          description: Indicates interest preference
          type: array
          items:
            type: string
        beveragePref:
          description: Indicates beverage preference.
          type: array
          items:
            type: string
        foodPref:
          description: Indicates food preference.
          type: array
          items:
            type: string
        allergies:
          description: Indicates allergies
          type: array
          items:
            type: string
        petsPref:
          description: Indicates pet preferences
          type: array
          items:
            type: string
    ProfileUser_Affiliate:
      description: User details
      type: object
      properties:
        firstName:
          description: First name
          type: string
          example: Avid
        lastName:
          description: Last name
          type: string
          example: Travelman
        email:
          description: Email
          type: string
          format: email
          example: avid@travelman.com
        phone:
          description: Telephone
          type: string
          example: '0123456789'
        profilePictureUrl:
          description: Profile picture URL
          type: string
        fullName:
          description: Full name
          type: string
          example: John Smith
    Profile_Affiliate:
      description: >-
        A user profile accompanies this booking IF user has created and enabled
        sharing of profile
      required:
        - personal
        - preferences
        - profileIdentifier
        - share
        - user
        - userIdentifier
      type: object
      properties:
        profileIdentifier:
          description: Profile identifier
          type: string
          format: uuid
        userIdentifier:
          description: User identifier
          type: string
          format: uuid
        share:
          description: >-
            Indicates whether the user wants to share this profile of themselves
            with hotel(s)
          type: boolean
        user:
          $ref: '#/components/schemas/ProfileUser_Affiliate'
        personal:
          $ref: '#/components/schemas/Personal_Affiliate'
        preferences:
          $ref: '#/components/schemas/Preferences_Affiliate'
    Quote_Affiliate:
      description: The quote used to create totalCapturePrice.
      required:
        - exchangeRate
        - source
        - target
        - timestamp
      type: object
      properties:
        source:
          description: Source
          type: string
        target:
          description: Target
          type: string
        exchangeRate:
          description: Exchange rate
          type: number
        timestamp:
          description: Timestamp
          type: integer
          format: int64
    RatePlanLevelFee_Affiliate:
      description: What the guest is paying extra for
      required:
        - descriptions
        - fixedAmount
        - type
      type: object
      properties:
        descriptions:
          description: List of localized descriptions for this fee.
          type: array
          items:
            $ref: '#/components/schemas/LocalizedDescription_Affiliate'
        fixedAmount:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        type:
          description: Rate plan fee type
          type: string
          example: PER_DAY
          enum:
            - PER_DAY
            - PER_STAY
            - PER_PERSON_PER_DAY
            - PER_PERSON_PER_STAY
    RatePlan_Affiliate:
      description: Rate plan used for this stay
      required:
        - allInclusive
        - allInclusivePlusAlcohol
        - breakfast
        - brunch
        - cancellationPolicyIdentifier
        - dinner
        - hotelIdentifier
        - identifier
        - lunch
        - name
        - prepaid
      type: object
      properties:
        identifier:
          description: Rate plan identifier
          type: string
          format: uuid
        hotelIdentifier:
          description: Hotel Identifier
          type: string
          format: uuid
        name:
          description: Provides the name of the rate plan.
          type: string
          example: BAR 1
        prepaid:
          description: When true, indicates if the rate is a prepaid rate.
          type: boolean
          example: false
          default: false
        breakfast:
          description: When true, indicates breakfast is included.
          type: boolean
          example: false
          default: false
        brunch:
          description: When true, indicates brunch is included.
          type: boolean
          example: false
          default: false
        lunch:
          description: When true, indicates lunch is included.
          type: boolean
          example: false
          default: false
        dinner:
          description: When true, indicates dinner is included.
          type: boolean
          example: false
          default: false
        allInclusive:
          description: Everything included except alcohol
          type: boolean
          example: false
          default: false
        allInclusivePlusAlcohol:
          description: Everything included with alcohol
          type: boolean
          example: false
          default: false
        sellStartDate:
          description: >-
            Set a start date for when to start selling this rate. When
            sellStartDate and sellEndDate are set, this rate is only available
            for sale within that date range.
          type: string
          format: date
        sellEndDate:
          description: >-
            Set an end date for when to finish selling this rate. When
            sellStartDate and sellEndDate are set, this rate is only available
            for sale within that date range.
          type: string
          format: date
        stayStartDate:
          description: >-
            Set a start date for when the guest can visit. When stayStartDate
            and stayEndDate are set, this rate is only available for stay within
            that date range.
          type: string
          format: date
        stayEndDate:
          description: >-
            Set an end date for when the guest can visit. When stayStartDate and
            stayEndDate are set, this rate is only available for stay within
            that date range.
          type: string
          format: date
        loyaltyPointsAccrue:
          description: Property honors loyalty points with this rate plan.
          type: boolean
          example: false
          default: false
        maxAdvanceBookingOffset:
          description: >-
            Maximum days before the arrival date for which this rate plan may be
            booked.
          type: integer
          format: int32
          example: 10
        minAdvanceBookingOffset:
          description: >-
            Minimum days before the arrival date for which this rate plan may be
            booked.
          type: integer
          format: int32
          example: 3
        minTotalOccupancy:
          description: >-
            Defines the minimum number of total occupants required for this rate
            plan.
          type: integer
          format: int32
          example: 4
        maxTotalOccupancy:
          description: >-
            Defines the maximum number of total occupants required for this rate
            plan.
          type: integer
          format: int32
          example: 4
        minLOS:
          description: Indicates the minimum length of stay required for this rate plan.
          type: integer
          format: int32
          example: 3
        maxLOS:
          description: Indicates the maximum length of stay.
          type: integer
          format: int32
          example: 5
        minAge:
          description: The minimum age to qualify for this rate plan.
          type: integer
          format: int32
          example: 26
        maxAge:
          description: The maximum age to qualify for this rate plan.
          type: integer
          format: int32
          example: 50
        availableDaysOfWeek:
          $ref: '#/components/schemas/DowPatternGroup_Affiliate'
        arrivalDaysOfWeek:
          $ref: '#/components/schemas/DowPatternGroup_Affiliate'
        departureDaysOfWeek:
          $ref: '#/components/schemas/DowPatternGroup_Affiliate'
        requiredDaysOfWeek:
          $ref: '#/components/schemas/DowPatternGroup_Affiliate'
        earlyCheckInCharge:
          $ref: '#/components/schemas/VariableCharge_Affiliate'
        lateCheckOutCharge:
          $ref: '#/components/schemas/VariableCharge_Affiliate'
        cancellationPolicyIdentifier:
          description: The cancellation policy for this rate plan.
          type: string
          example: cancellation-policy-1
        cancellationPolicy:
          $ref: '#/components/schemas/CancellationPolicy_Affiliate'
        cancellationPolicyExceptions:
          $ref: '#/components/schemas/CancellationPolicyExceptions_Affiliate'
    Refund_Affiliate:
      description: >-
        Refund objects allow you to refund a charge that has previously been
        created but not yet refunded. Funds will be refunded to the credit or
        debit card that was originally charged.
      required:
        - cancelOnRefund
        - created
        - description
        - identifier
        - reasonType
        - refund
        - requestResponse
        - requestStatus
        - requestType
        - statusType
      type: object
      properties:
        description:
          description: A description of the refund that can be displayed to booker
          type: string
          example: Customer made a mistake
        identifier:
          description: A unique identifier
          type: string
          example: refund-1
        acquirerRefundIdentifier:
          description: >-
            The acquirer refund identifier. Will get attached once it comes in
            on the webhook.
          type: string
          example: r-123456
        requestedByIdentifier:
          description: The SSO person / entity that requested the refund.
          type: string
          example: user-1
        refund:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        created:
          description: When the amount was refunded
          type: string
          format: date-time
        reasonType:
          description: A description of the refund that can be displayed to booker
          type: string
          example: DUPLICATE
          enum:
            - DUPLICATE
            - FRAUDULENT
            - REQUESTED_BY_CUSTOMER
            - GUEST_COMPLAINT
            - GUEST_BOOKED_INCORRECT_DATE
            - GUEST_SICK
            - OVERBOOKING
            - EMERGENCY
            - FLIGHT_CANCELLED
            - DEATH_IN_FAMILY
            - OTHER
            - EXPIRED_UNCAPTURED_CHARGE
        cancelOnRefund:
          description: Whether to cancel the booking alongside requesting a refund.
          type: string
          enum:
            - NONE
            - CANCEL_ON_SUCCESSFUL_REFUND
            - CANCEL_REGARDLESS
        statusType:
          description: Status of the refund
          type: string
          example: SUCCEEDED
          enum:
            - PENDING
            - SUCCEEDED
            - CANCELED
            - REQUIRES_ACTION
            - FAILED
        requestType:
          description: The entity making the refund request
          type: string
          example: BY_ADMIN
          enum:
            - BY_SUPPLIER
            - BY_ADMIN
            - BY_STRIPE
            - BY_SYSTEM
        requestStatus:
          description: Status of the refund request
          type: string
          example: APPROVED
          enum:
            - PENDING
            - APPROVED
            - REJECTED
        requestResponse:
          description: Admin may choose to respond to the refund request made by the hotel
          type: string
          example: >-
            We have rejected your request. Your cancellation policy does not
            warrant a manual refund.
        receiptUrl:
          description: >-
            This is the receipt url that contains a friendly web confirmation
            page. Comes in on the webhook.
          type: string
          example: >-
            https://pay.stripe.com/receipts/payment/CAcaFwoVYWNjdF8xSXcxazVBQ3F2UW9nN1IxKIPqo54GMgbHKn45YQY6LBbCZ62655YzamuWDVeWAaw7uApCrxewxjSsZX4C9Lef5jY9JeYFrOVx3IaI
        retries:
          description: >-
            In case a TripPay admin has to go in and re-send the refund request
            to Stripe, we want to not to the same calculations again when a
            retry is executed so we keep track of retries here.
          type: integer
          format: int32
          example: 0
          default: 0
        allocation:
          description: >-
            The type of refund determines how the funds are deducted each
            beneficiary.
          type: string
          example: EQUAL_DISTRIBUTION
          default: EQUAL_DISTRIBUTION
          enum:
            - CUSTOMERS_ONLY
            - FROM_SALE_ONLY
            - EQUAL_DISTRIBUTION
    ReportingAncillary_Affiliate:
      description: Displays ancillary accounting details
      type: object
      properties:
        name:
          description: Full name of ancillary in English.
          type: string
        type:
          description: The type
          type: string
          enum:
            - LODGING
            - RAIL
            - AIR
            - CAR
            - CRUISE
            - PACKAGE
            - ADD_ON
            - RENTAL
            - EXPERIENCE
            - ANCILLARY_BOOKING
            - ANCILLARY_FEE
        grossAmount:
          description: The gross amount.
          type: number
        netAmount:
          description: The gross amount minus fees and commissions.
          type: number
        netAmountWithRefund:
          description: The gross amount minus fees and commissions.
          type: number
        currency:
          description: The currency for these amounts.
          type: string
    ReportingDailyRate_Affiliate:
      description: Displays rate accounting details
      type: object
      properties:
        date:
          description: The rate date.
          type: string
          format: date
        baseAmount:
          description: The rate given to us by channel manager / CRS / PMS.
          type: number
        grossAmount:
          description: >-
            The derived amount based on promotions, member discounts etc within
            our platform.
          type: number
        netAmount:
          description: The gross amount minus fees and commissions.
          type: number
        netAmountWithRefund:
          description: >-
            The net amount minus potential refund. Null if booking contains no
            refund.
          type: number
        currency:
          description: The currency for these amounts.
          type: string
    ReportingExtraCharge_Affiliate:
      description: Displays extra charge accounting details.
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        grossAmount:
          type: number
        netAmount:
          type: number
        netAmountWithRefund:
          type: number
        currency:
          type: string
    ReviewAnswer_Affiliate:
      required:
        - category
        - questionIdentifier
        - sort
        - value
      type: object
      properties:
        questionIdentifier:
          description: Question identifier
          type: string
          format: uuid
        category:
          description: Question category
          type: string
          enum:
            - COMFORT
            - CONDITION
            - SERVICE
            - ENVIRONMENT
            - FACILITIES
            - LOCATION
            - LIFESTYLE
            - VALUE
            - FOOD
        sort:
          description: Sort key
          type: integer
          format: int32
        value:
          description: Value
          type: integer
          format: int32
    ReviewUser_Affiliate:
      description: User details of creator of booking.
      type: object
      properties:
        userIdentifier:
          description: User identifier
          type: string
          format: uuid
        firstName:
          description: First name
          type: string
          example: John
        lastName:
          description: Last name
          type: string
          example: Smith
        email:
          description: Email
          type: string
          format: email
          example: john.smith@email.com
        telephone:
          description: Telephone
          type: string
          example: '0123456789'
        fullName:
          description: Full name
          type: string
          example: '0123456789'
    Review_Affiliate:
      description: User review created by the traveler after the booking completed.
      type: object
      properties:
        identifier:
          description: Unique review identifier identifying this record.
          type: string
          format: uuid
        bookingIdentifier:
          description: >-
            Booking identifier identifier booking this review is associated
            with.
          type: string
          format: uuid
        hotelIdentifier:
          description: Hotel identifier this booking is associated with.
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/ReviewUser_Affiliate'
        reviewDate:
          description: Date of review.
          type: string
          format: date-time
        averageScore:
          description: Total points divided by number of questions.
          type: number
          format: double
          example: 8.7
        answers:
          description: List of user review answers.
          type: array
          items:
            $ref: '#/components/schemas/ReviewAnswer_Affiliate'
        messageFromGuest:
          description: >-
            Private message from guest to the hotel. Is not displayed on
            property profile.
          type: string
          example: >-
            Dear GM, I would like to say thank you so much for taking the time
            to show my husband and I around the premises and the secret cave
            behind the property.
        responseFromHotel:
          description: >-
            Property can response to traveler review. Response goes on public
            review profile and can be seen by others.
          type: string
          example: >-
            It was so great to have you at our hotel. Please recommend your
            friends and come again soon.
        imageIdentifier:
          description: >-
            Reviewer can upload her best picture from the property. Cloudinary
            image identifier.
          type: string
          example: cloudinary-image-1
        text:
          description: Free text record created by traveler
          type: string
          example: Our stay was amazing! Can recommend highly to all. Felt like home.
        approvedText:
          description: >-
            Hotel allows the review text to be displayed as part of their
            profile.
          type: boolean
          example: true
        approvedImage:
          description: >-
            Hotel allows the user-generated image to be displayed as part of
            their profile.
          type: boolean
          example: false
        likes:
          description: List of member identifiers who liked the textual review
          type: array
          format: uuid
          example: user-1
          items:
            type: string
        roomNumber:
          description: Guest's room number during their stay.
          type: string
          example: '501'
        roomRating:
          description: Guest's room rating
          type: integer
          format: int32
          example: 7
        responded:
          description: >-
            Returns true if property has responded to the review given by the
            guest.
          type: boolean
          example: false
          default: false
    RoomStay_Affiliate:
      description: All information about the room that was booked.
      required:
        - activeCancellationPolicy
        - adults
        - bedroomConfiguration
        - children
        - endDate
        - extraCharges
        - policy
        - price
        - ratePlan
        - room
        - roomRateIdentifier
        - roomRateInternalName
        - rooms
        - startDate
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/PropertyPolicy_Affiliate'
        room:
          $ref: '#/components/schemas/GuestRoom_Affiliate'
        rooms:
          description: >-
            Number of rooms. Always 1 since we switched to creating one booking
            per room.
          type: integer
          format: int32
          example: 1
          default: 1
        bedroomConfiguration:
          $ref: '#/components/schemas/BedroomConfiguration_Affiliate'
        adults:
          description: The actual amount of adults as determined by the hotel's policy.
          type: integer
          format: int32
          example: 2
          default: 2
        children:
          description: The actual amount of children as determined by the hotel's policy.
          type: integer
          format: int32
          example: 0
          default: 0
        startDate:
          description: Stay start date
          type: string
          format: date
          example: '2021-12-24'
        endDate:
          description: Stay end date
          type: string
          format: date
          example: '2021-12-31'
        price:
          $ref: '#/components/schemas/StayRate_Affiliate'
        roomRateIdentifier:
          description: Master rate identifier
          type: string
          format: uuid
        roomRateInternalName:
          description: Master rate internal name
          type: string
          example: Master Rate 1
        ratePlan:
          $ref: '#/components/schemas/RatePlan_Affiliate'
        perkTypes:
          description: List of perks that came with the master rate
          type: array
          example:
            - PERK_FREE_DRINK_VOUCHER
            - PERK_EARLY_CHECKIN
          items:
            description: List of perks that came with the master rate
            type: string
            example: '["PERK_FREE_DRINK_VOUCHER","PERK_EARLY_CHECKIN"]'
            enum:
              - PERK_LOYALTY_POINTS
              - PERK_WINE
              - PERK_FREE_DRINK_VOUCHER
              - PERK_FREE_MEAL_TWO_PEOPLE
              - PERK_FREE_ONE_HOUR_MASSAGE
              - PERK_TWENTY_PERCENT_FOOD_BEVERAGE_DISCOUNT
              - PERK_TWENTY_PERCENT_SPA_DISCOUNT_VOUCHER
              - PERK_GUARANTEED_UPGRADE
              - PERK_EARLY_CHECKIN
              - PERK_ROOM_UPGRADE
              - PERK_LATE_CHECKOUT
              - PERK_AIRPORT_TRANSFER
              - PERK_AIRPORT_PICK_UP
              - PERK_BOTTLE_CHAMPAGNE_ON_ARRIVAL
              - PERK_BOTTLE_SPARKLING_WINE_ON_ARRIVAL
              - PERK_BOTTLE_WINE_ON_ARRIVAL
        extraCharges:
          $ref: '#/components/schemas/ExtraCharges_Affiliate'
        activeCancellationPolicy:
          $ref: '#/components/schemas/CancellationPolicy_Affiliate'
        cancellable:
          type: boolean
        cancellableByHotel:
          type: boolean
        cancellableWithPotentialCharge:
          type: boolean
        sourceTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        rateSource:
          type: string
        guests:
          type: integer
          format: int32
        roomNights:
          description: >-
            Total number of nights the guest stays at the hotel. -1 indicates
            there is an error.
          type: integer
          format: int64
          example: 2
        userSpecifiedCurrencyTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        internalTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
    SearchFilters_Affiliate:
      description: How user likes to have results displayed
      type: object
      properties:
        maxDistance:
          description: A user can query for hotels that are close to UserSession.location
          type: number
          format: double
          example: 10
        lifestyle:
          description: A user can filter inventory on a lifestyle
          type: string
          example: LIFESTYLE_RELAX
          enum:
            - LIFESTYLE_HEALTH_FITNESS
            - LIFESTYLE_RELAX
            - LIFESTYLE_ADULT_ONLY
            - LIFESTYLE_ADVENTURE
            - LIFESTYLE_BUSINESS
            - LIFESTYLE_LGBT
            - LIFESTYLE_SINGLE_PARENT
            - LIFESTYLE_SOLO_FEMALE
            - LIFESTYLE_BEAUTY
            - LIFESTYLE_FOODIE
            - LIFESTYLE_FAMILY
            - LIFESTYLE_ROMANCE
            - LIFESTYLE_COUPLE
            - LIFESTYLE_SOLO
            - LIFESTYLE_BACKPACKER
            - LIFESTYLE_SHOPPING
            - LIFESTYLE_SPORTS
            - LIFESTYLE_MOUNTAIN
            - LIFESTYLE_BEACH
            - LIFESTYLE_CITY
            - LIFESTYLE_COUNTRY
            - LIFESTYLE_CULTURE
            - LIFESTYLE_ECO
        starRating:
          description: A user can filter on number of hotel stars
          type: integer
          format: int32
          example: 4
        perks:
          type: array
          items:
            type: string
        displayBy:
          type: string
    StayRate_Affiliate:
      description: Price details
      type: object
      properties:
        userSpecifiedCurrencyBaseTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        sourceBaseTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        internalBaseTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        sourceExtraPaxModifier:
          description: Extra person modifier in hotel currency.
          type: number
          example: 15
        internalExtraPaxModifier:
          description: Extra person modifier in wink currency
          type: number
          example: 15
        userSpecifiedCurrencyExtraPaxModifier:
          description: Extra person modifier in user specified currency
          type: number
          example: 15
        sourceExtraChildModifier:
          description: Extra child modifier in hotel currency
          type: number
          example: 15
        internalExtraChildModifier:
          description: Extra child modifier in wink currency
          type: number
          example: 15
        userSpecifiedCurrencyExtraChildModifier:
          description: Extra child modifier in user specified currcency
          type: number
          example: 15
        sourceSingleOccupantModifier:
          description: Single occupant modifier in hotel currency
          type: number
          example: -15
        internalSingleOccupantModifier:
          description: Singe occupant modifier in wink currency
          type: number
          example: -15
        userSpecifiedCurrencySingleOccupantModifier:
          description: Single occupant modifier in user specified currency
          type: number
          example: -15
        sourcePromotionalModifier:
          description: Rate discount modifiers in hotel currency
          type: number
          example: -40
        internalPromotionalModifier:
          description: Rate discount modifiers in wink currency
          type: number
          example: -40
        userSpecifiedCurrencyPromotionalModifier:
          description: Rate discount modifiers in user specified currency
          type: number
          example: -40
        sourcePremiumModifier:
          description: Rate premiums modifiers in hotel currency
          type: number
          example: 40
        internalPremiumModifier:
          description: Rate premiums modifiers in wink currency
          type: number
          example: 40
        userSpecifiedCurrencyPremiumModifier:
          description: Rate premiums modifiers in user specified currency
          type: number
          example: 40
        sourceChannelModifier:
          description: Channel / Membership modifier in hotel currency
          type: number
          example: -10
        internalChannelModifier:
          description: Channel / Membership modifier in wink currency
          type: number
          example: -10
        userSpecifiedCurrencyChannelModifier:
          description: Channel / Membership modifier in user specified currency
          type: number
          example: -10
        quantity:
          description: Quantity
          type: integer
          format: int32
        minOccupancy:
          description: Minimum occupancy
          type: integer
          format: int32
        maxOccupancy:
          description: Maximum occupancy
          type: integer
          format: int32
        rateSource:
          description: Source
          type: string
        promotionalDiscountPercent:
          description: Promotional discount percent
          type: number
          format: float
        channelDiscountPercent:
          description: Chanel discount percent
          type: number
          format: float
        premiumPercent:
          description: Premium percent
          type: number
          format: float
        available:
          description: Available
          type: boolean
        sourceToUserCurrencyQuote:
          $ref: '#/components/schemas/Quote_Affiliate'
        sourceToInternalCurrencyQuote:
          $ref: '#/components/schemas/Quote_Affiliate'
        offerDetails:
          description: Localized text of the discount
          type: array
          items:
            $ref: '#/components/schemas/LocalizedDescription_Affiliate'
        promotionalCodes:
          description: Promotional codes
          type: array
          items:
            type: string
        userSpecifiedCurrencyTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        sourceTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        internalTotal:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        userSpecifiedCurrencyAveragePricePerNight:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        internalAveragePricePerNight:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        sourceAveragePricePerNight:
          $ref: '#/components/schemas/CustomMonetaryAmount'
        totalDiscountPercent:
          type: number
          format: float
    SupplierContractItemPolicy_Affiliate:
      required:
        - refundable
      type: object
      properties:
        refundable:
          description: Whether this booking is refundable or not.
          type: boolean
          example: true
        advanceCancellationFreeOfCharge:
          description: >-
            When the cancellation policy is refundable, this flag can be set and
            indicates there is more rules involved than just a
            no-questions-asked refundable.
          type: string
          example: UNTIL_EIGHTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
          enum:
            - UNTIL_EIGHTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
            - UNTIL_FOURTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
            - ONE_DAY_BEFORE_ARRIVAL
            - TWO_DAYS_BEFORE_ARRIVAL
            - THREE_DAYS_BEFORE_ARRIVAL
            - FIVE_DAYS_BEFORE_ARRIVAL
            - SEVEN_DAYS_BEFORE_ARRIVAL
            - FOURTEEN_DAYS_BEFORE_ARRIVAL
            - TWENTYONE_DAYS_BEFORE_ARRIVAL
            - THIRTY_DAYS_BEFORE_ARRIVAL
            - FOURTY_TWO_DAYS_BEFORE_ARRIVAL
            - SIXTY_DAYS_BEFORE_ARRIVAL
        refundableCancellationCharge:
          description: >-
            If advanceCancellationFreeOfCharge rules is not honored, this
            property explains what the guest will be charged.
          type: string
          example: FIFTY_PERCENT
          enum:
            - FIRST_NIGHT
            - THIRTY_PERCENT
            - FIFTY_PERCENT
            - SIXTY_PERCENT
            - SEVENTY_PERCENT
            - NINENTY_PERCENT
            - ONE_HUNDRED_PERCENT
        noShowCharge:
          description: >-
            In case the 'Refundable cancellation charge' is set, a different no
            show charge can be applied.
          type: string
          example: SAME_AS_CANCELLATION_FEE
          enum:
            - SAME_AS_CANCELLATION_FEE
            - ONE_HUNDRED_PERCENT_OF_TOTAL_CHARGE
        nonRefundableCancellationCharge:
          description: >-
            When the cancellation policy is non-refundable, this flag can be set
            and indicates there is more rules involved to calculate what the
            guest will owe in case of a cancellation.
          type: string
          example: SEVENTY_PERCENT
          enum:
            - FIRST_NIGHT
            - TEN_PERCENT
            - THIRTY_PERCENT
            - FIFTY_PERCENT
            - SEVENTY_PERCENT
        nonRefundableDeadline:
          description: >-
            The non-refundable charge might can have a deadline. If that
            deadline passes, the guest might be charged more.
          type: string
          example: SEVEN_DAYS_BEFORE_ARRIVAL
          enum:
            - ONE_DAY_BEFORE_ARRIVAL
            - TWO_DAYS_BEFORE_ARRIVAL
            - THREE_DAYS_BEFORE_ARRIVAL
            - FIVE_DAYS_BEFORE_ARRIVAL
            - SEVEN_DAYS_BEFORE_ARRIVAL
            - FOURTEEN_DAYS_BEFORE_ARRIVAL
            - TWENTYONE_DAYS_BEFORE_ARRIVAL
            - THIRTY_DAYS_BEFORE_ARRIVAL
            - FOURTY_TWO_DAYS_BEFORE_ARRIVAL
            - SIXTY_DAYS_BEFORE_ARRIVAL
        nonRefundableAfterDeadlineCancellationCharge:
          description: >-
            If the guest does not honor the non-refundable deadline rule, this
            charge dictates what she owes after the deadline passes.
          type: string
          example: ONE_HUNDRED_PERCENT
          enum:
            - FIRST_NIGHT
            - TEN_PERCENT
            - THIRTY_PERCENT
            - FIFTY_PERCENT
            - SEVENTY_PERCENT
            - ONE_HUNDRED_PERCENT
        externalIdentifier:
          description: Optional geoname externalIdentifier to remote policy.
          type: string
          example: policy-1
        fullyRefundable:
          type: boolean
        partiallyRefundable:
          type: boolean
    TravelInventoryRecognition_Affiliate:
      description: Recognition for the ancillary inventory.
      required:
        - category
        - identifier
        - maxRating
        - provider
        - rating
        - type
      type: object
      properties:
        identifier:
          description: Recognition identifier.
          type: string
          format: uuid
        category:
          description: Recognition category.
          type: string
          example: AWARD
          enum:
            - THIRD_PARTY_REVIEW
            - PUBLICATION
            - AWARD
        type:
          description: >-
            Type of rating system the recognition operated on. This allows us to
            display the score properly.
          type: string
          example: PERCENT_RATING
          enum:
            - STAR_RATING
            - NUMERIC_RATING
            - PERCENT_RATING
        provider:
          description: The name of the entity that administers this recognition.
          type: string
          example: Michelin
        rating:
          description: The actual award or rating received by the hotel facility.
          minimum: 0
          exclusiveMinimum: false
          type: number
          format: float
          example: 8.5
        maxRating:
          description: >-
            Use this to let hotels indicate what the total score for this award
            is.
          type: number
          format: float
          example: 10
        date:
          description: The date the award was received
          type: string
          format: date
          example: '2020-10-24'
        officialAppointmentInd:
          description: >-
            When true, this indicates the property has received official
            permission from the award provider to use the rating in publications
            and marketing materials; when false this permission has not been
            granted.
          type: boolean
          example: true
        ratingSymbol:
          description: >-
            Provides the symbol used in the rating. Used in conjunction with the
            Rating.
          type: string
          example: '*'
    UserSession_Affiliate:
      description: >-
        User session information containing itinerary and other user related
        data.
      required:
        - itinerary
      type: object
      properties:
        location:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        ipLocation:
          $ref: '#/components/schemas/IPLocation_Affiliate'
        ipNumber:
          description: User's incoming IP number
          type: string
          example: 203.543.122.021
        bounds:
          $ref: '#/components/schemas/GeoJsonPolygon_Affiliate'
        itinerary:
          $ref: '#/components/schemas/Itinerary_Affiliate'
        searchFilters:
          $ref: '#/components/schemas/SearchFilters_Affiliate'
        language:
          description: User's language preference
          type: string
          example: en
        currency:
          description: User's currency preference
          type: string
          example: USD
        redirectUrl:
          type: string
        userIdentifier:
          description: Pass along the user identifier if user is known.
          type: string
          format: uuid
        promotionalCodes:
          type: array
          items:
            description: User can pass promotional codes to system to change prices.
            type: string
            example: promo-1
        selectedRoomConfiguration:
          $ref: '#/components/schemas/RoomConfiguration_Affiliate'
    ConsumeExternalUrlRequest_Affiliate:
      required:
        - url
      type: object
      properties:
        url:
          description: The url of this entry
          type: string
          example: https://www.google.com
    UniqueRequest_Affiliate:
      required:
        - name
      type: object
      properties:
        name:
          description: The name we want to check uniqueness for
          type: string
          example: My unique name
        identifier:
          description: >-
            An optional accompanying identifier so it doesn't check itself on an
            update
          type: string
          format: uuid
    UniqueResult_Affiliate:
      type: object
      properties:
        unique:
          type: boolean
    ManagingEntity:
      description: Name of the application.
      required:
        - label
        - type
        - value
      type: object
      properties:
        value:
          description: The value that should be persisted.
          type: string
          example: company-1
        label:
          description: Text representation of the value.
          type: string
          example: Company 1
        type:
          description: Type of entity.
          type: string
          example: COMPANY
          enum:
            - USER
            - COMPANY
            - ACCOUNT
      example: App 1
    UpsertApplicationRequest:
      required:
        - entity
        - name
        - redirectUris
      type: object
      properties:
        name:
          description: Name of the application.
          type: string
          example: App 1
        entity:
          $ref: '#/components/schemas/ManagingEntity'
        redirectUris:
          type: array
          items:
            description: Where to redirect after successful OAuth2.
            type: string
            example: https://my.travel.blog
    CreateApplicationResponse:
      required:
        - clientId
        - id
        - name
        - ownerIdentifier
        - ownerName
        - ownerType
        - secretKey
      type: object
      properties:
        id:
          description: Unique identifier.
          type: string
          format: uuid
        ownerIdentifier:
          description: Unique owner record identifier
          type: string
          format: uuid
        ownerName:
          description: Name of company owner.
          type: string
          example: Travel Tech 1
        ownerType:
          description: Type of entity.
          type: string
          example: COMPANY
          enum:
            - USER
            - COMPANY
            - ACCOUNT
        name:
          description: >-
            Name of this engine application. The first engine for every
            integrator will have the same name as its company name.
          type: string
          example: Engine 1
        redirectUris:
          description: >-
            Where to redirect after web components successfully authenticate.
            For OAuth2 purposes.
          type: array
          example:
            - https://my.travel.blog
          items:
            description: >-
              Where to redirect after web components successfully authenticate.
              For OAuth2 purposes.
            type: string
            example: '["https://my.travel.blog"]'
        clientId:
          description: >-
            Client identifier used to authenticate an Oauth2 or web component
            request.
          type: string
          example: client-id-123
        secretKey:
          description: Password used to authenticate an Oauth2 request.
          type: string
    UpsertAddressRequest_Affiliate:
      description: Light-weight Address object
      required:
        - address1
        - cityGeoNameId
        - postalCode
      type: object
      properties:
        address1:
          description: Address line 1
          type: string
          example: 234 Near da beach
        address2:
          description: Address line 2
          type: string
          example: 'Pebble #5001'
        cityGeoNameId:
          description: City geo name ID
          type: string
          example: '897654'
        state:
          description: State
          type: string
          example: CA
        postalCode:
          description: Postal / zip code
          type: string
          example: '90210'
        county:
          description: County
          type: string
          example: Alameda county
        valid:
          type: boolean
      example: geo-name-1
    UpsertCompanyRequest_Affiliate:
      required:
        - address
        - companyType
        - name
        - type
        - url
        - vatID
      type: object
      properties:
        description:
          description: A personal message from the company.
          type: string
        name:
          description: Name of company
          type: string
          example: Company 1
        legalName:
          description: Legal name of entity if other than name
          type: string
          example: Legal Company 1
        companyType:
          description: Type of company
          type: string
          example: COMPANY
          enum:
            - COMPANY
            - INDIVIDUAL
        type:
          description: Type of company
          type: string
          example: APPLICATION
          enum:
            - DIRECT
            - APPLICATION
            - HOTEL
            - TRAVELIKO
            - CORPORATE
            - TRAVEL_AGENT
            - INFLUENCER
            - BLOGGER
            - DESTINATION
            - CHANNEL_MANAGER
            - PROPERTY_MANAGEMENT_SYSTEM
            - CENTRAL_RESERVATION_SYSTEM
            - GOOGLE_HOTEL_API
            - MANAGEMENT_COMPANY
            - CHAIN
            - BRAND
            - EVENT_ORGANIZER
        vatID:
          description: A VAT id if required
          type: string
          example: vat-1
        url:
          description: Company's main website
          type: string
          example: https://www.mymainsite.com
        address:
          $ref: '#/components/schemas/UpsertAddressRequest_Affiliate'
        urls:
          description: >-
            List of all active accounts that could be used for selling or seeing
            a company's reach.
          type: array
          items:
            description: >-
              List of all active accounts that could be used for selling or
              seeing a company's reach.
            type: string
        logo:
          $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
    UpsertCompanyStatusRequest_Affiliate:
      required:
        - enabled
      type: object
      properties:
        enabled:
          description: New company status
          type: boolean
          example: true
    SortStaticSellerListItemsRequest_Affiliate:
      required:
        - items
      type: object
      properties:
        items:
          type: object
          additionalProperties:
            type: integer
            format: int32
    NotificationView_Affiliate:
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          readOnly: true
          example: 12
        id:
          description: Unique document identifier
          type: string
          format: uuid
          readOnly: true
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
          readOnly: true
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
          readOnly: true
        notification:
          $ref: '#/components/schemas/Notification_Affiliate'
    Notification_Affiliate:
      required:
        - body
        - identifier
        - ownerIdentifier
        - priority
        - recipientType
        - subject
        - type
      type: object
      properties:
        identifier:
          description: Notification identifier
          type: string
          format: uuid
        ownerIdentifier:
          description: Owner identifier
          type: string
          format: uuid
        priority:
          description: Importance of message
          type: string
          enum:
            - HIGH
            - MEDIUM
            - LOW
        type:
          description: Message type
          type: string
          enum:
            - ALERT
            - MESSAGE
        recipientType:
          description: Recipient type
          type: string
          enum:
            - USER
            - COMPANY
        subject:
          description: Subject of message
          type: string
        body:
          description: Body of message
          type: string
        read:
          description: Company read notification
          type: boolean
        markedAsRemoved:
          description: Message marked as removed
          type: boolean
        notifyViaEmail:
          description: Also send email notification
          type: boolean
    InviteManagerRequest_Affiliate:
      required:
        - email
      type: object
      properties:
        email:
          description: Existing user account email to make manager
          type: string
    Sorted_Affiliate:
      description: Sorted object strictly to use for sorting of list items
      required:
        - id
        - index
      type: object
      properties:
        id:
          description: List item ID
          type: string
          example: list-item-1
        index:
          description: List item position
          type: integer
          format: int32
          example: 0
    UpdateApplicationResponse:
      required:
        - entity
        - id
      type: object
      properties:
        id:
          description: Unique identifier.
          type: string
          format: uuid
        name:
          description: Name of the application.
          type: string
          example: App 1
        entity:
          $ref: '#/components/schemas/ManagingEntity'
        redirectUris:
          type: array
          items:
            description: Where to redirect after successful OAuth2.
            type: string
            example: https://my.travel.blog
    SearchCategory_Affiliate:
      required:
        - key
        - type
        - value
      type: object
      properties:
        type:
          description: Type of search category.
          type: string
          example: HOTEL
          enum:
            - HOTEL
            - INVENTORY
        key:
          description: Usually the OTA reference code.
          type: string
          example: GRE
        value:
          description: Usually the OTA reference code value.
          type: string
          example: GRE
        count:
          description: Quantity of items in this category.
          type: integer
          format: int64
          example: 15
    SalesChannelRelationshipRequestView_Affiliate:
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          example: 12
        id:
          description: Document UUID
          type: string
          example: doc-1
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/SalesChannelRelationshipRequest_Affiliate'
        request:
          $ref: '#/components/schemas/SalesChannelRelationshipRequest_Affiliate'
    SalesChannelRelationshipRequest_Affiliate:
      description: A request for relationship between two parties.
      required:
        - identifier
        - introductoryMessage
        - ownerIdentifier
        - ownerName
        - requestType
        - status
        - subType
        - supplierIdentifier
        - supplierName
      type: object
      properties:
        identifier:
          description: Unique record identifier
          type: string
          format: uuid
        status:
          description: status of relationship request
          type: string
          enum:
            - REQUESTING
            - REJECTED
        requestType:
          description: type of relationship request
          type: string
          enum:
            - DIRECT_CONNECTION
        supplierIdentifier:
          description: Request goes to this supplier identifier.
          type: string
          format: uuid
        supplierName:
          description: Request goes to this supplier name.
          type: string
          example: Hotel 1
        subType:
          description: What type of segment of channel is this.
          type: string
          example: APPLICATION
          enum:
            - DIRECT
            - APPLICATION
            - HOTEL
            - TRAVELIKO
            - CORPORATE
            - TRAVEL_AGENT
            - INFLUENCER
            - BLOGGER
            - DESTINATION
            - CHANNEL_MANAGER
            - PROPERTY_MANAGEMENT_SYSTEM
            - CENTRAL_RESERVATION_SYSTEM
            - GOOGLE_HOTEL_API
            - MANAGEMENT_COMPANY
            - CHAIN
            - BRAND
            - EVENT_ORGANIZER
        ownerIdentifier:
          description: >-
            Specific identifier for the company / corporation / travel agency
            that is retrieving the rates
          type: string
          format: uuid
        ownerName:
          description: Name of the owner / affiliate.
          type: string
          example: Owner 1
        introductoryMessage:
          description: Owner / affiliate writes an intro to request a connection.
          type: string
          example: Hi there! Please give me a discount.
    CountResponse_Affiliate:
      required:
        - count
        - success
      type: object
      properties:
        success:
          description: True if count query worked.
          type: boolean
          example: true
        count:
          description: Number of reviews for this property.
          type: integer
          format: int64
          example: 1543
    Coupon_Affiliate:
      type: object
      properties:
        amountOff:
          type: integer
          format: int64
        created:
          type: integer
          format: int64
        currency:
          type: string
        deleted:
          type: boolean
        duration:
          type: string
        durationInMonths:
          type: integer
          format: int64
        id:
          type: string
        livemode:
          type: boolean
        maxRedemptions:
          type: integer
          format: int64
        metadata:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        object:
          type: string
        percentOff:
          type: number
        redeemBy:
          type: integer
          format: int64
        timesRedeemed:
          type: integer
          format: int64
        valid:
          type: boolean
    CustomerTaxId_Affiliate:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    Discount_Affiliate:
      type: object
      properties:
        coupon:
          $ref: '#/components/schemas/Coupon_Affiliate'
        deleted:
          type: boolean
        end:
          type: integer
          format: int64
        object:
          type: string
        start:
          type: integer
          format: int64
        subscription:
          type: string
    InvoiceLineItemCollection_Affiliate:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem_Affiliate'
    InvoiceLineItemPeriod_Affiliate:
      type: object
      properties:
        end:
          type: integer
          format: int64
        start:
          type: integer
          format: int64
    InvoiceLineItem_Affiliate:
      type: object
      properties:
        description:
          type: string
        amount:
          type: integer
          format: int64
        currency:
          type: string
        discountable:
          type: boolean
        id:
          type: string
        invoiceItem:
          type: string
        livemode:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: string
        object:
          type: string
        period:
          $ref: '#/components/schemas/InvoiceLineItemPeriod_Affiliate'
        plan:
          $ref: '#/components/schemas/Plan_Affiliate'
        price:
          $ref: '#/components/schemas/Price_Affiliate'
        proration:
          type: boolean
        quantity:
          type: integer
          format: int64
        subscription:
          type: string
        subscriptionItem:
          type: string
        taxAmounts:
          type: array
          items:
            $ref: '#/components/schemas/TaxAmount_Affiliate'
        taxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate_Affiliate'
        type:
          type: string
    Invoice_Affiliate:
      type: object
      properties:
        description:
          type: string
        accountCountry:
          type: string
        accountName:
          type: string
        amountDue:
          type: integer
          format: int64
        amountPaid:
          type: integer
          format: int64
        amountRemaining:
          type: integer
          format: int64
        applicationFeeAmount:
          type: integer
          format: int64
        attemptCount:
          type: integer
          format: int64
        attempted:
          type: boolean
        autoAdvance:
          type: boolean
        billing:
          type: string
        billingReason:
          type: string
        collectionMethod:
          type: string
        created:
          type: integer
          format: int64
        currency:
          type: string
        customerAddress:
          $ref: '#/components/schemas/Address_Affiliate'
        customerEmail:
          type: string
        customerName:
          type: string
        customerPhone:
          type: string
        customerShipping:
          $ref: '#/components/schemas/ShippingDetails_Affiliate'
        customerTaxExempt:
          type: string
        customerTaxIds:
          type: array
          items:
            $ref: '#/components/schemas/CustomerTaxId_Affiliate'
        defaultTaxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate_Affiliate'
        deleted:
          type: boolean
        discount:
          $ref: '#/components/schemas/Discount_Affiliate'
        dueDate:
          type: integer
          format: int64
        endingBalance:
          type: integer
          format: int64
        footer:
          type: string
        hostedInvoiceUrl:
          type: string
        id:
          type: string
        invoicePdf:
          type: string
        lines:
          $ref: '#/components/schemas/InvoiceLineItemCollection_Affiliate'
        livemode:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: string
        nextPaymentAttempt:
          type: integer
          format: int64
        number:
          type: string
        object:
          type: string
        paid:
          type: boolean
        periodEnd:
          type: integer
          format: int64
        periodStart:
          type: integer
          format: int64
        postPaymentCreditNotesAmount:
          type: integer
          format: int64
        prePaymentCreditNotesAmount:
          type: integer
          format: int64
        receiptNumber:
          type: string
        startingBalance:
          type: integer
          format: int64
        statementDescriptor:
          type: string
        status:
          type: string
        statusTransitions:
          $ref: '#/components/schemas/StatusTransitions_Affiliate'
        subscriptionProrationDate:
          type: integer
          format: int64
        subtotal:
          type: integer
          format: int64
        tax:
          type: integer
          format: int64
        thresholdReason:
          $ref: '#/components/schemas/ThresholdReason_Affiliate'
        total:
          type: integer
          format: int64
        totalTaxAmounts:
          type: array
          items:
            $ref: '#/components/schemas/TotalTaxAmount_Affiliate'
        transferData:
          $ref: '#/components/schemas/TransferData_Affiliate'
        webhooksDeliveredAt:
          type: integer
          format: int64
    PlanTier_Affiliate:
      type: object
      properties:
        unitAmount:
          type: integer
          format: int64
        flatAmount:
          type: integer
          format: int64
        upTo:
          type: integer
          format: int64
    Plan_Affiliate:
      type: object
      properties:
        active:
          type: boolean
        aggregateUsage:
          type: string
        amount:
          type: integer
          format: int64
        amountDecimal:
          type: number
        billingScheme:
          type: string
        created:
          type: integer
          format: int64
        currency:
          type: string
        deleted:
          type: boolean
        id:
          type: string
        interval:
          type: string
        intervalCount:
          type: integer
          format: int64
        livemode:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: string
        nickname:
          type: string
        object:
          type: string
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/PlanTier_Affiliate'
        tiersMode:
          type: string
        transformUsage:
          $ref: '#/components/schemas/TransformUsage_Affiliate'
        trialPeriodDays:
          type: integer
          format: int64
        usageType:
          type: string
        sort:
          type: integer
          format: int32
    PriceTier_Affiliate:
      type: object
      properties:
        flatAmount:
          type: integer
          format: int64
        flatAmountDecimal:
          type: number
        unitAmount:
          type: integer
          format: int64
        unitAmountDecimal:
          type: number
        upTo:
          type: integer
          format: int64
    Price_Affiliate:
      type: object
      properties:
        active:
          type: boolean
        billingScheme:
          type: string
        created:
          type: integer
          format: int64
        currency:
          type: string
        deleted:
          type: boolean
        id:
          type: string
        livemode:
          type: boolean
        lookupKey:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        nickname:
          type: string
        object:
          type: string
        recurring:
          $ref: '#/components/schemas/Recurring_Affiliate'
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/PriceTier_Affiliate'
        tiersMode:
          type: string
        transformQuantity:
          $ref: '#/components/schemas/TransformQuantity_Affiliate'
        type:
          type: string
        unitAmount:
          type: integer
          format: int64
        unitAmountDecimal:
          type: number
        sort:
          type: integer
          format: int32
        priceType:
          type: string
          enum:
            - STARTUP
            - PRO
            - AGENT
            - OTA
        metered:
          type: boolean
    Recurring_Affiliate:
      type: object
      properties:
        aggregateUsage:
          type: string
        interval:
          type: string
        intervalCount:
          type: integer
          format: int64
        trialPeriodDays:
          type: integer
          format: int64
        usageType:
          type: string
    ShippingDetails_Affiliate:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address_Affiliate'
        carrier:
          type: string
        name:
          type: string
        phone:
          type: string
        trackingNumber:
          type: string
    StatusTransitions_Affiliate:
      type: object
      properties:
        finalizedAt:
          type: integer
          format: int64
        markedUncollectibleAt:
          type: integer
          format: int64
        paidAt:
          type: integer
          format: int64
        voidedAt:
          type: integer
          format: int64
    TaxAmount_Affiliate:
      type: object
      properties:
        amount:
          type: integer
          format: int64
        inclusive:
          type: boolean
    TaxRate_Affiliate:
      type: object
      properties:
        description:
          type: string
        active:
          type: boolean
        created:
          type: integer
          format: int64
        displayName:
          type: string
        id:
          type: string
        inclusive:
          type: boolean
        jurisdiction:
          type: string
        livemode:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: string
        object:
          type: string
        percentage:
          type: number
    ThresholdItemReason_Affiliate:
      type: object
      properties:
        lineItemIds:
          type: array
          items:
            type: string
        usageGte:
          type: integer
          format: int64
    ThresholdReason_Affiliate:
      type: object
      properties:
        amountGte:
          type: integer
          format: int64
        itemReasons:
          type: array
          items:
            $ref: '#/components/schemas/ThresholdItemReason_Affiliate'
    TotalTaxAmount_Affiliate:
      type: object
      properties:
        amount:
          type: integer
          format: int64
        inclusive:
          type: boolean
    TransferData_Affiliate:
      type: object
    TransformQuantity_Affiliate:
      type: object
      properties:
        divideBy:
          type: integer
          format: int64
        round:
          type: string
    TransformUsage_Affiliate:
      type: object
      properties:
        divideBy:
          type: integer
          format: int64
        round:
          type: string
    InvoiceCollection_Affiliate:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Invoice_Affiliate'
    InventoryMapMarker_Affiliate:
      description: Inventory map marker
      type: object
      properties:
        channelInventoryIdentifier:
          description: Identifier of the list, channel inventory or search
          type: string
          example: channel-inventory-1
        point:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        supplierIdentifier:
          description: Hotel identifier
          type: string
          format: uuid
        supplierName:
          description: Hotel name
          type: string
          example: Sheraton
        supplierUrlName:
          description: Hotel url name
          type: string
          example: sheraton-hotel-bangkok
        inventoryIdentifier:
          description: Actual inventory identifier
          type: string
          format: uuid
        inventoryType:
          description: Type of inventory
          type: string
          example: GUEST_ROOM
          enum:
            - GUEST_ROOM
            - ADD_ON
            - MEETING_ROOM
            - RESTAURANT
            - SPA
            - ATTRACTION
            - PLACE
            - ACTIVITY
        inventoryName:
          description: Name of inventory
          type: string
          example: Supreme King
    CampaignInventory_Affiliate:
      type: object
      properties:
        name:
          type: string
        layout:
          type: string
          enum:
            - AD_BANNER
            - MAP
            - HOTEL
            - GUEST_ROOM
            - MEETING_ROOM
            - SPA
            - RESTAURANT
            - ACTIVITY
            - ATTRACTION
            - PLACE
            - ADD_ON
            - LIST
            - SEARCH
            - RANKED
        id:
          type: string
        placeholderImageUrl:
          type: string
    DynamicSellerListView_Affiliate:
      type: object
      properties:
        version:
          description: >-
            Version property that shows how many times this document has been
            persisted. Document will not persist if the version property is less
            than current version property in the system. Result in an optimistic
            locking exception.
          type: integer
          format: int64
          readOnly: true
          example: 12
        id:
          description: Unique document identifier
          type: string
          format: uuid
          readOnly: true
        createdDate:
          description: Datetime this record was first created
          type: string
          format: date-time
          readOnly: true
        lastUpdate:
          description: Datetime this record was last updated
          type: string
          format: date-time
          readOnly: true
        dynamicSellerList:
          $ref: '#/components/schemas/DynamicSellerList_Affiliate'
    DynamicSellerList_Affiliate:
      required:
        - identifier
        - name
        - ownerIdentifier
      type: object
      properties:
        identifier:
          description: >-
            Unique search result identifier gets populated for when you want to
            save your query.
          type: string
          format: uuid
        ownerIdentifier:
          description: Entity identifier of record creator
          type: string
          format: uuid
        name:
          description: Name of dynamic list for when user want to persist it
          type: string
        propertyName:
          description: Regex expression filter matching on property name.
          type: string
          example: Shera
        locationCategories:
          description: >-
            Supported OTA specification `LOC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example: 34
          items:
            description: >-
              Supported OTA specification `LOC` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '34'
        segmentCategories:
          description: >-
            Supported OTA specification `SEG` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example: 7
          items:
            description: >-
              Supported OTA specification `SEG` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '7'
        hotelCategories:
          description: >-
            Supported OTA specification `PCT` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example: 45
          items:
            description: >-
              Supported OTA specification `PCT` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '45'
        architecturalStyles:
          description: >-
            Supported OTA specification `ARC` code. See [OTA geoname
            data](https://api.wink.travel)
          type: array
          example: 7
          items:
            description: >-
              Supported OTA specification `ARC` code. See [OTA geoname
              data](https://api.wink.travel)
            type: string
            example: '7'
        inventoryName:
          description: Regex expression filter matching on inventory name
          type: string
          example: Badmint
        continents:
          description: Continent filter
          type: array
          items:
            description: Filter on standardized continent codes
            type: string
            example: NA
        countries:
          description: Country filter
          type: array
          items:
            description: Filter on GeoNameId of country
            type: string
            example: '985678'
        cities:
          description: City filter
          type: array
          items:
            description: Filter on GeoNameId of city
            type: string
            example: '985678'
        showEcoFriendly:
          description: Filter on eco-friendly hotels
          type: boolean
          example: false
          default: false
        showPetFriendly:
          description: Filter on pet-friendly hotels
          type: boolean
          example: false
          default: false
        showChildFriendly:
          description: Filter on child-friendly hotels
          type: boolean
          example: false
          default: false
        showPopular:
          description: Filter on hotel that has had a certain amount of bookings
          type: boolean
          example: false
          default: false
        showDirectOnly:
          description: Filter on direct inventory
          type: boolean
          example: false
          default: false
        lifestyles:
          description: Filter on lifestyles
          type: array
          example:
            - LIFESTYLE_RELAX
          items:
            description: Filter on lifestyles
            type: string
            example: '["LIFESTYLE_RELAX"]'
            enum:
              - LIFESTYLE_HEALTH_FITNESS
              - LIFESTYLE_RELAX
              - LIFESTYLE_ADULT_ONLY
              - LIFESTYLE_ADVENTURE
              - LIFESTYLE_BUSINESS
              - LIFESTYLE_LGBT
              - LIFESTYLE_SINGLE_PARENT
              - LIFESTYLE_SOLO_FEMALE
              - LIFESTYLE_BEAUTY
              - LIFESTYLE_FOODIE
              - LIFESTYLE_FAMILY
              - LIFESTYLE_ROMANCE
              - LIFESTYLE_COUPLE
              - LIFESTYLE_SOLO
              - LIFESTYLE_BACKPACKER
              - LIFESTYLE_SHOPPING
              - LIFESTYLE_SPORTS
              - LIFESTYLE_MOUNTAIN
              - LIFESTYLE_BEACH
              - LIFESTYLE_CITY
              - LIFESTYLE_COUNTRY
              - LIFESTYLE_CULTURE
              - LIFESTYLE_ECO
        hotelStars:
          description: Filter on number of stars the hotel has.
          type: integer
          format: int32
          example: 4
        aggregateReviewRating:
          description: Filter on aggregate review score the hotel has
          type: integer
          format: int32
          example: 7
        nearPoint:
          $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        radiusInMeters:
          description: >-
            Use this in conjunction with `nearPoint`. Control the distance from
            point we are searching for.
          type: integer
          format: int64
        inventoryTypes:
          description: Filter on inventory types
          type: array
          example:
            - GUEST_ROOM
          items:
            type: string
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
        primaryOrderBy:
          description: |
            Control how you want the search results sorted. Options are: 

            - 1: Inventory name
            - 2: Price: High to low
            - 3: Price: Low to high
            - 4: Commission: High to low
            - 5: Commission: Low to high
            - 6: Discount: High to low
            - 7: Discount: Low to high
          type: string
          example: '4'
    Application:
      required:
        - clientId
        - id
        - name
        - ownerIdentifier
        - ownerName
        - ownerType
      type: object
      properties:
        id:
          description: Unique identifier.
          type: string
          format: uuid
        ownerIdentifier:
          description: Unique owner record identifier
          type: string
          format: uuid
        ownerName:
          description: Name of company owner.
          type: string
          example: Travel Tech 1
        ownerType:
          description: Type of entity.
          type: string
          example: COMPANY
          enum:
            - USER
            - COMPANY
            - ACCOUNT
        name:
          description: >-
            Name of this engine application. The first engine for every
            integrator will have the same name as its company name.
          type: string
          example: Engine 1
        redirectUris:
          description: >-
            Where to redirect after web components successfully authenticate.
            For OAuth2 purposes.
          type: array
          example:
            - https://my.travel.blog
          items:
            description: >-
              Where to redirect after web components successfully authenticate.
              For OAuth2 purposes.
            type: string
            example: '["https://my.travel.blog"]'
        clientId:
          description: >-
            Client identifier used to authenticate an Oauth2 or web component
            request.
          type: string
          example: client-id-123
    RevokeClientIdResponse:
      required:
        - clientId
        - id
        - secretKey
      type: object
      properties:
        id:
          description: Unique identifier.
          type: string
          format: uuid
        clientId:
          description: >-
            Client identifier used to authenticate an Oauth2 or web component
            request.
          type: string
          example: client-id-123
        secretKey:
          description: Password used to authenticate an Oauth2 request.
          type: string
    RemoveEntryResponse_Affiliate:
      description: Response object for when a system document is removed.
      type: object
      properties:
        id:
          description: Identifier of removed document
          type: string
          example: document-1
        success:
          description: Whether the removal was successful or not.
          type: boolean
          example: true
        message:
          description: >-
            Message with additional information; mostly if the removal request
            was a failure.
          type: string
          example: Record successfully removed
    RemoveEntryResponse:
      description: Response object for when a system document is removed.
      type: object
      properties:
        id:
          description: Identifier of removed document
          type: string
          example: document-1
        success:
          description: Whether the removal was successful or not.
          type: boolean
          example: true
        message:
          description: >-
            Message with additional information; mostly if the removal request
            was a failure.
          type: string
          example: Record successfully removed
    SyndicationEntryPublisherSortListRequest:
      type: array
      items:
        $ref: '#/components/schemas/Sorted_Affiliate'
    SupplierLinksDeleteLink400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierLinksDeleteLinkResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierLinksDeleteLink415Response:
      type: object
      additionalProperties:
        type: object
    SupplierLinksDeleteLink503Response:
      type: object
    SupplierLinksGetShareableUrl400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierLinksGetShareableUrlResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierLinksGetShareableUrl415Response:
      type: object
      additionalProperties:
        type: object
    SupplierLinksGetShareableUrl503Response:
      type: object
    SupplierLinksModifyUrlLink400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierLinksModifyUrlLinkResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierLinksModifyUrlLink415Response:
      type: object
      additionalProperties:
        type: object
    SupplierLinksModifyUrlLink503Response:
      type: object
    InventoryGridsRemoveCuratedList400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsRemoveCuratedListResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsRemoveCuratedList415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsRemoveCuratedList503Response:
      type: object
    InventoryGridsUpdateCuratedListByIdentifier400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsUpdateCuratedListByIdentifierResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsUpdateCuratedListByIdentifier415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsUpdateCuratedListByIdentifier503Response:
      type: object
    InventoryGridsDeleteListItemByIdentifier400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsDeleteListItemByIdentifierResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsDeleteListItemByIdentifier415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsDeleteListItemByIdentifier503Response:
      type: object
    InventoryGridsCopyItemToList400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsCopyItemToListResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsCopyItemToList415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsCopyItemToList503Response:
      type: object
    InventoryGridsMoveListItem400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsMoveListItemResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsMoveListItem415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsMoveListItem503Response:
      type: object
    ShareableLinksDeleteLink400Response1:
      type: object
      additionalProperties:
        type: string
    ShareableLinksDeleteLinkResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ShareableLinksDeleteLink415Response:
      type: object
      additionalProperties:
        type: object
    ShareableLinksDeleteLink503Response:
      type: object
    ShareableLinksGetSpecificUrl400Response1:
      type: object
      additionalProperties:
        type: string
    ShareableLinksGetSpecificUrlResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ShareableLinksGetSpecificUrl415Response:
      type: object
      additionalProperties:
        type: object
    ShareableLinksGetSpecificUrl503Response:
      type: object
    ShareableLinksModifyLink400Response1:
      type: object
      additionalProperties:
        type: string
    ShareableLinksModifyLinkResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ShareableLinksModifyLink415Response:
      type: object
      additionalProperties:
        type: object
    ShareableLinksModifyLink503Response:
      type: object
    MapsDeleteMapConfiguration400Response1:
      type: object
      additionalProperties:
        type: string
    MapsDeleteMapConfigurationResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    MapsDeleteMapConfiguration415Response:
      type: object
      additionalProperties:
        type: object
    MapsDeleteMapConfiguration503Response:
      type: object
    MapsGetRecord400Response1:
      type: object
      additionalProperties:
        type: string
    MapsGetRecordResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    MapsGetRecord415Response:
      type: object
      additionalProperties:
        type: object
    MapsGetRecord503Response:
      type: object
    MapsUpdateAdvancedConfiguration400Response1:
      type: object
      additionalProperties:
        type: string
    MapsUpdateAdvancedConfigurationResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    MapsUpdateAdvancedConfiguration415Response:
      type: object
      additionalProperties:
        type: object
    MapsUpdateAdvancedConfiguration503Response:
      type: object
    InventoryGridsDeleteRankedGrid400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsDeleteRankedGridResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsDeleteRankedGrid415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsDeleteRankedGrid503Response:
      type: object
    InventoryGridsGetSpecificRankedGrid400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsGetSpecificRankedGridResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsGetSpecificRankedGrid415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsGetSpecificRankedGrid503Response:
      type: object
    InventoryGridsUpdateRankedGrid400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsUpdateRankedGridResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsUpdateRankedGrid415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsUpdateRankedGrid503Response:
      type: object
    InventoryGridsRemoveCuratedList400Response2:
      type: object
      additionalProperties:
        type: string
    InventoryGridsRemoveCuratedList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsGetSpecificCuratedList400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsGetSpecificCuratedListResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsGetSpecificCuratedList415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsGetSpecificCuratedList503Response:
      type: object
    InventoryGridsUpdateCuratedList400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsUpdateCuratedListResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsUpdateCuratedList415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsUpdateCuratedList503Response:
      type: object
    InventoryCardsRemoveItem400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryCardsRemoveItemResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryCardsRemoveItem415Response:
      type: object
      additionalProperties:
        type: object
    InventoryCardsRemoveItem503Response:
      type: object
    InventoryCardsGetSingleCard400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryCardsGetSingleCardResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryCardsGetSingleCard415Response:
      type: object
      additionalProperties:
        type: object
    InventoryCardsGetSingleCard503Response:
      type: object
    InventoryCardsUpdateCard400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryCardsUpdateCardResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryCardsUpdateCard415Response:
      type: object
      additionalProperties:
        type: object
    InventoryCardsUpdateCard503Response:
      type: object
    CustomizationRemoveExisting400Response1:
      type: object
      additionalProperties:
        type: string
    CustomizationRemoveExistingResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CustomizationRemoveExisting415Response:
      type: object
      additionalProperties:
        type: object
    CustomizationRemoveExisting503Response:
      type: object
    CustomizationGetPrimaryCustomization400Response1:
      type: object
      additionalProperties:
        type: string
    CustomizationGetPrimaryCustomizationResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CustomizationGetPrimaryCustomization415Response:
      type: object
      additionalProperties:
        type: object
    CustomizationGetPrimaryCustomization503Response:
      type: object
    CustomizationUpdateExisting400Response1:
      type: object
      additionalProperties:
        type: string
    CustomizationUpdateExistingResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CustomizationUpdateExisting415Response:
      type: object
      additionalProperties:
        type: object
    CustomizationUpdateExisting503Response:
      type: object
    SyndicationEntryPublisherGetWinkLinksSettings400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherGetWinkLinksSettingsResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherGetWinkLinksSettings415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherGetWinkLinksSettings503Response:
      type: object
    SyndicationEntryPublisherUpsertSettings400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherUpsertSettingsResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherUpsertSettings415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherUpsertSettings503Response:
      type: object
    SyndicationEntryPublisherDeleteEntry400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherDeleteEntryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherDeleteEntry415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherDeleteEntry503Response:
      type: object
    SyndicationEntryPublisherShowEntry400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherShowEntryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherShowEntry415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherShowEntry503Response:
      type: object
    SyndicationEntryPublisherUpdateSyndicationEntry400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherUpdateSyndicationEntryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherUpdateSyndicationEntry415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherUpdateSyndicationEntry503Response:
      type: object
    SyndicationEntryPublisherDeleteCategory400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherDeleteCategoryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherDeleteCategory415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherDeleteCategory503Response:
      type: object
    SyndicationEntryPublisherGetCategory400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherGetCategoryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherGetCategory415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherGetCategory503Response:
      type: object
    SyndicationEntryPublisherUpdateCategory400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherUpdateCategoryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherUpdateCategory415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherUpdateCategory503Response:
      type: object
    CompanyCreateNewCompany400Response1:
      type: object
      additionalProperties:
        type: string
    CompanyCreateNewCompanyResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CompanyCreateNewCompany415Response:
      type: object
      additionalProperties:
        type: object
    CompanyCreateNewCompany503Response:
      type: object
    SupplierLinksCreateShareableLink400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierLinksCreateShareableLinkResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierLinksCreateShareableLink415Response:
      type: object
      additionalProperties:
        type: object
    SupplierLinksCreateShareableLink503Response:
      type: object
    SupplierLinksCreateSyndicationCard400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierLinksCreateSyndicationCardResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierLinksCreateSyndicationCard415Response:
      type: object
      additionalProperties:
        type: object
    SupplierLinksCreateSyndicationCard503Response:
      type: object
    InventoryGridsShowCuratedListsResponse:
      type: array
      items:
        $ref: '#/components/schemas/StaticSellerListWrapper_Affiliate'
    InventoryGridsShowCuratedLists400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsShowCuratedLists400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsShowCuratedLists415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsShowCuratedLists503Response:
      type: object
    InventoryGridsCreateCuratedList400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsCreateCuratedListResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsCreateCuratedList415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsCreateCuratedList503Response:
      type: object
    InventoryGridsAddTravelInventoryToListItem400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsAddTravelInventoryToListItemResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsAddTravelInventoryToListItem415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsAddTravelInventoryToListItem503Response:
      type: object
    InventoryGridsAddSupplierToListItem400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsAddSupplierToListItemResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsAddSupplierToListItem415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsAddSupplierToListItem503Response:
      type: object
    ShareableLinksGenerateNewLink400Response1:
      type: object
      additionalProperties:
        type: string
    ShareableLinksGenerateNewLinkResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ShareableLinksGenerateNewLink415Response:
      type: object
      additionalProperties:
        type: object
    ShareableLinksGenerateNewLink503Response:
      type: object
    ShareableLinksCreateSyndicationCard400Response1:
      type: object
      additionalProperties:
        type: string
    ShareableLinksCreateSyndicationCardResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ShareableLinksCreateSyndicationCard415Response:
      type: object
      additionalProperties:
        type: object
    ShareableLinksCreateSyndicationCard503Response:
      type: object
    SupplierGetPageOfSuppliers400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierGetPageOfSuppliersResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierGetPageOfSuppliers415Response:
      type: object
      additionalProperties:
        type: object
    SupplierGetPageOfSuppliers503Response:
      type: object
    HotelRelationshipRequestsCreateRequest400Response1:
      type: object
      additionalProperties:
        type: string
    HotelRelationshipRequestsCreateRequestResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    HotelRelationshipRequestsCreateRequest415Response:
      type: object
      additionalProperties:
        type: object
    HotelRelationshipRequestsCreateRequest503Response:
      type: object
    SalesChannelGetPageOfSalesChannels400Response1:
      type: object
      additionalProperties:
        type: string
    SalesChannelGetPageOfSalesChannelsResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SalesChannelGetPageOfSalesChannels415Response:
      type: object
      additionalProperties:
        type: object
    SalesChannelGetPageOfSalesChannels503Response:
      type: object
    MapsListMapsResponse:
      type: array
      items:
        $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
    MapsListMaps400Response1:
      type: object
      additionalProperties:
        type: string
    MapsListMaps400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    MapsListMaps415Response:
      type: object
      additionalProperties:
        type: object
    MapsListMaps503Response:
      type: object
    MapsCreateAdvancedMap400Response1:
      type: object
      additionalProperties:
        type: string
    MapsCreateAdvancedMapResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    MapsCreateAdvancedMap415Response:
      type: object
      additionalProperties:
        type: object
    MapsCreateAdvancedMap503Response:
      type: object
    MapsCreateWinkLinksMap400Response1:
      type: object
      additionalProperties:
        type: string
    MapsCreateWinkLinksMapResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    MapsCreateWinkLinksMap415Response:
      type: object
      additionalProperties:
        type: object
    MapsCreateWinkLinksMap503Response:
      type: object
    MapsCreateSupplierMap400Response1:
      type: object
      additionalProperties:
        type: string
    MapsCreateSupplierMapResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    MapsCreateSupplierMap415Response:
      type: object
      additionalProperties:
        type: object
    MapsCreateSupplierMap503Response:
      type: object
    AffiliateLeadCreateLeadFromGoogle400Response1:
      type: object
      additionalProperties:
        type: string
    AffiliateLeadCreateLeadFromGoogleResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    AffiliateLeadCreateLeadFromGoogle415Response:
      type: object
      additionalProperties:
        type: object
    AffiliateLeadCreateLeadFromGoogle503Response:
      type: object
    DiscoverSupplierGridPost400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverSupplierGridPostResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverSupplierGridPost415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverSupplierGridPost503Response:
      type: object
    InventoryGridsCreateRankedGrid400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsCreateRankedGridResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsCreateRankedGrid415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsCreateRankedGrid503Response:
      type: object
    InventoryGridsCreateNewWinkLinksGrid400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsCreateNewWinkLinksGridResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsCreateNewWinkLinksGrid415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsCreateNewWinkLinksGrid503Response:
      type: object
    DiscoverLatestInventoryListResponse:
      type: array
      items:
        $ref: '#/components/schemas/InventoryView_Affiliate'
    DiscoverLatestInventoryList400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverLatestInventoryList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverLatestInventoryList415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverLatestInventoryList503Response:
      type: object
    InventoryGridsCreateCuratedList400Response2:
      type: object
      additionalProperties:
        type: string
    InventoryGridsCreateCuratedList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsCreateWinkLinksGrid400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsCreateWinkLinksGridResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsCreateWinkLinksGrid415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsCreateWinkLinksGrid503Response:
      type: object
    InventoryCardsCreateNewCard400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryCardsCreateNewCardResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryCardsCreateNewCard415Response:
      type: object
      additionalProperties:
        type: object
    InventoryCardsCreateNewCard503Response:
      type: object
    InventoryCardsCreateSyndicationEntry400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryCardsCreateSyndicationEntryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryCardsCreateSyndicationEntry415Response:
      type: object
      additionalProperties:
        type: object
    InventoryCardsCreateSyndicationEntry503Response:
      type: object
    InventoryCardsCreateSupplierCard400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryCardsCreateSupplierCardResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryCardsCreateSupplierCard415Response:
      type: object
      additionalProperties:
        type: object
    InventoryCardsCreateSupplierCard503Response:
      type: object
    DiscoverInventorySearch400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverInventorySearchResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverInventorySearch415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverInventorySearch503Response:
      type: object
    CustomizationShowPrimaryCustomization400Response1:
      type: object
      additionalProperties:
        type: string
    CustomizationShowPrimaryCustomizationResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CustomizationShowPrimaryCustomization415Response:
      type: object
      additionalProperties:
        type: object
    CustomizationShowPrimaryCustomization503Response:
      type: object
    CustomizationCreateNewCustomization400Response1:
      type: object
      additionalProperties:
        type: string
    CustomizationCreateNewCustomizationResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CustomizationCreateNewCustomization415Response:
      type: object
      additionalProperties:
        type: object
    CustomizationCreateNewCustomization503Response:
      type: object
    BookingsGetGrid400Response1:
      type: object
      additionalProperties:
        type: string
    BookingsGetGridResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    BookingsGetGrid415Response:
      type: object
      additionalProperties:
        type: object
    BookingsGetGrid503Response:
      type: object
    SyndicationEntryPublisherCreateNewEntry400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherCreateNewEntryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherCreateNewEntry415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherCreateNewEntry503Response:
      type: object
    SyndicationEntryPublisherConsumeUrl400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherConsumeUrlResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherConsumeUrl415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherConsumeUrl503Response:
      type: object
    SyndicationEntryPublisherCreateCategory400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherCreateCategoryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherCreateCategory415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherCreateCategory503Response:
      type: object
    CompanyCheckUniqueness400Response1:
      type: object
      additionalProperties:
        type: string
    CompanyCheckUniquenessResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CompanyCheckUniqueness415Response:
      type: object
      additionalProperties:
        type: object
    CompanyCheckUniqueness503Response:
      type: object
    ApplicationCreateNewApplication400Response1:
      type: object
      additionalProperties:
        type: string
    ApplicationCreateNewApplicationResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ApplicationCreateNewApplication415Response:
      type: object
      additionalProperties:
        type: object
    ApplicationCreateNewApplication503Response:
      type: object
    CompanyDeleteCompanyByIdentifier400Response1:
      type: object
      additionalProperties:
        type: string
    CompanyDeleteCompanyByIdentifierResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CompanyDeleteCompanyByIdentifier415Response:
      type: object
      additionalProperties:
        type: object
    CompanyDeleteCompanyByIdentifier503Response:
      type: object
    CompanyGetByIdentifier400Response1:
      type: object
      additionalProperties:
        type: string
    CompanyGetByIdentifierResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CompanyGetByIdentifier415Response:
      type: object
      additionalProperties:
        type: object
    CompanyGetByIdentifier503Response:
      type: object
    CompanyUpdateExistingCompany400Response1:
      type: object
      additionalProperties:
        type: string
    CompanyUpdateExistingCompanyResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CompanyUpdateExistingCompany415Response:
      type: object
      additionalProperties:
        type: object
    CompanyUpdateExistingCompany503Response:
      type: object
    CompanyToggleStatus400Response1:
      type: object
      additionalProperties:
        type: string
    CompanyToggleStatusResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CompanyToggleStatus415Response:
      type: object
      additionalProperties:
        type: object
    CompanyToggleStatus503Response:
      type: object
    InventoryGridsReorderListItems400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsReorderListItemsResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsReorderListItems415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsReorderListItems503Response:
      type: object
    NotificationDeleteByIdentifier400Response1:
      type: object
      additionalProperties:
        type: string
    NotificationDeleteByIdentifierResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    NotificationDeleteByIdentifier415Response:
      type: object
      additionalProperties:
        type: object
    NotificationDeleteByIdentifier503Response:
      type: object
    NotificationGetMessagesByCompany400Response1:
      type: object
      additionalProperties:
        type: string
    NotificationGetMessagesByCompanyResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    NotificationGetMessagesByCompany415Response:
      type: object
      additionalProperties:
        type: object
    NotificationGetMessagesByCompany503Response:
      type: object
    NotificationMarkAsRead400Response1:
      type: object
      additionalProperties:
        type: string
    NotificationMarkAsReadResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    NotificationMarkAsRead415Response:
      type: object
      additionalProperties:
        type: object
    NotificationMarkAsRead503Response:
      type: object
    CompanyInviteManager400Response1:
      type: object
      additionalProperties:
        type: string
    CompanyInviteManagerResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CompanyInviteManager415Response:
      type: object
      additionalProperties:
        type: object
    CompanyInviteManager503Response:
      type: object
    SyndicationEntryPublisherSortList400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherSortListResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherSortList415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherSortList503Response:
      type: object
    ApplicationRemove400Response1:
      type: object
      additionalProperties:
        type: string
    ApplicationRemoveResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ApplicationRemove415Response:
      type: object
      additionalProperties:
        type: object
    ApplicationRemove503Response:
      type: object
    ApplicationShowSpecific400Response1:
      type: object
      additionalProperties:
        type: string
    ApplicationShowSpecificResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ApplicationShowSpecific415Response:
      type: object
      additionalProperties:
        type: object
    ApplicationShowSpecific503Response:
      type: object
    ApplicationUpdateExisting400Response1:
      type: object
      additionalProperties:
        type: string
    ApplicationUpdateExistingResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ApplicationUpdateExisting415Response:
      type: object
      additionalProperties:
        type: object
    ApplicationUpdateExisting503Response:
      type: object
    TestPingEndpointResponse:
      type: string
    TestPingEndpoint400Response1:
      type: object
      additionalProperties:
        type: string
    TestPingEndpoint400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    TestPingEndpoint415Response:
      type: object
      additionalProperties:
        type: object
    TestPingEndpoint503Response:
      type: object
    SupplierLinksGetUrlListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SupplierUrlView_Affiliate'
    SupplierLinksGetUrlList400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierLinksGetUrlList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierLinksGetUrlList415Response:
      type: object
      additionalProperties:
        type: object
    SupplierLinksGetUrlList503Response:
      type: object
    ShareableLinksGetSellerUrlsResponse:
      type: array
      items:
        $ref: '#/components/schemas/SellerUrlView_Affiliate'
    ShareableLinksGetSellerUrls400Response1:
      type: object
      additionalProperties:
        type: string
    ShareableLinksGetSellerUrls400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ShareableLinksGetSellerUrls415Response:
      type: object
      additionalProperties:
        type: object
    ShareableLinksGetSellerUrls503Response:
      type: object
    ShareableLinksGetInventoryMediaListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
    ShareableLinksGetInventoryMediaList400Response1:
      type: object
      additionalProperties:
        type: string
    ShareableLinksGetInventoryMediaList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ShareableLinksGetInventoryMediaList415Response:
      type: object
      additionalProperties:
        type: object
    ShareableLinksGetInventoryMediaList503Response:
      type: object
    SearchCategoriesGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SearchCategory_Affiliate'
    SearchCategoriesGetList400Response1:
      type: object
      additionalProperties:
        type: string
    SearchCategoriesGetList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SearchCategoriesGetList415Response:
      type: object
      additionalProperties:
        type: object
    SearchCategoriesGetList503Response:
      type: object
    SupplierGetInformation400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierGetInformationResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierGetInformation415Response:
      type: object
      additionalProperties:
        type: object
    SupplierGetInformation503Response:
      type: object
    SupplierGetLatestInventoryResponse:
      type: array
      items:
        $ref: '#/components/schemas/HotelOnMapView_Affiliate'
    SupplierGetLatestInventory400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierGetLatestInventory400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierGetLatestInventory415Response:
      type: object
      additionalProperties:
        type: object
    SupplierGetLatestInventory503Response:
      type: object
    SupplierListSupplierCountriesResponse:
      type: array
      items:
        $ref: '#/components/schemas/KeyValuePair_Affiliate'
    SupplierListSupplierCountries400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierListSupplierCountries400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierListSupplierCountries415Response:
      type: object
      additionalProperties:
        type: object
    SupplierListSupplierCountries503Response:
      type: object
    SupplierShowSupplierCitiesListResponse:
      type: array
      items:
        $ref: '#/components/schemas/KeyValuePair_Affiliate'
    SupplierShowSupplierCitiesList400Response1:
      type: object
      additionalProperties:
        type: string
    SupplierShowSupplierCitiesList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SupplierShowSupplierCitiesList415Response:
      type: object
      additionalProperties:
        type: object
    SupplierShowSupplierCitiesList503Response:
      type: object
    HotelRelationshipRequestsReapplySalesChannelRequest400Response1:
      type: object
      additionalProperties:
        type: string
    HotelRelationshipRequestsReapplySalesChannelRequestResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    HotelRelationshipRequestsReapplySalesChannelRequest415Response:
      type: object
      additionalProperties:
        type: object
    HotelRelationshipRequestsReapplySalesChannelRequest503Response:
      type: object
    HotelRelationshipRequestsGetSpecific400Response1:
      type: object
      additionalProperties:
        type: string
    HotelRelationshipRequestsGetSpecificResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    HotelRelationshipRequestsGetSpecific415Response:
      type: object
      additionalProperties:
        type: object
    HotelRelationshipRequestsGetSpecific503Response:
      type: object
    HotelRelationshipRequestsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SalesChannelRelationshipRequestView_Affiliate'
    HotelRelationshipRequestsGetList400Response1:
      type: object
      additionalProperties:
        type: string
    HotelRelationshipRequestsGetList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    HotelRelationshipRequestsGetList415Response:
      type: object
      additionalProperties:
        type: object
    HotelRelationshipRequestsGetList503Response:
      type: object
    SalesChannelGetById400Response1:
      type: object
      additionalProperties:
        type: string
    SalesChannelGetByIdResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SalesChannelGetById415Response:
      type: object
      additionalProperties:
        type: object
    SalesChannelGetById503Response:
      type: object
    NotificationGetMessagesResponse:
      type: array
      items:
        $ref: '#/components/schemas/NotificationView_Affiliate'
    NotificationGetMessages400Response1:
      type: object
      additionalProperties:
        type: string
    NotificationGetMessages400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    NotificationGetMessages415Response:
      type: object
      additionalProperties:
        type: object
    NotificationGetMessages503Response:
      type: object
    NotificationShowUnreadMessageCount400Response1:
      type: object
      additionalProperties:
        type: string
    NotificationShowUnreadMessageCountResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    NotificationShowUnreadMessageCount415Response:
      type: object
      additionalProperties:
        type: object
    NotificationShowUnreadMessageCount503Response:
      type: object
    InvoiceGetUpcoming400Response1:
      type: object
      additionalProperties:
        type: string
    InvoiceGetUpcomingResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InvoiceGetUpcoming415Response:
      type: object
      additionalProperties:
        type: object
    InvoiceGetUpcoming503Response:
      type: object
    InvoiceGetUpcomingItems400Response1:
      type: object
      additionalProperties:
        type: string
    InvoiceGetUpcomingItemsResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InvoiceGetUpcomingItems415Response:
      type: object
      additionalProperties:
        type: object
    InvoiceGetUpcomingItems503Response:
      type: object
    InvoiceGetCompanyInvoices400Response1:
      type: object
      additionalProperties:
        type: string
    InvoiceGetCompanyInvoicesResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InvoiceGetCompanyInvoices415Response:
      type: object
      additionalProperties:
        type: object
    InvoiceGetCompanyInvoices503Response:
      type: object
    MapsGetMarkersByTypeResponse:
      type: array
      items:
        $ref: '#/components/schemas/InventoryMapMarker_Affiliate'
    MapsGetMarkersByType400Response1:
      type: object
      additionalProperties:
        type: string
    MapsGetMarkersByType400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    MapsGetMarkersByType415Response:
      type: object
      additionalProperties:
        type: object
    MapsGetMarkersByType503Response:
      type: object
    MapsShowMarkerForChannelInventory400Response1:
      type: object
      additionalProperties:
        type: string
    MapsShowMarkerForChannelInventoryResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    MapsShowMarkerForChannelInventory415Response:
      type: object
      additionalProperties:
        type: object
    MapsShowMarkerForChannelInventory503Response:
      type: object
    DiscoverInventorySupplierList400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverInventorySupplierListResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverInventorySupplierList415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverInventorySupplierList503Response:
      type: object
    DiscoverLatestInventorySuppliersListResponse:
      type: array
      items:
        $ref: '#/components/schemas/InventorySupplier_Affiliate'
    DiscoverLatestInventorySuppliersList400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverLatestInventorySuppliersList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverLatestInventorySuppliersList415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverLatestInventorySuppliersList503Response:
      type: object
    DiscoverInventoryListSearch400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverInventoryListSearchResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverInventoryListSearch415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverInventoryListSearch503Response:
      type: object
    DiscoverInventorySupplierCountriesListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Country_Affiliate'
    DiscoverInventorySupplierCountriesList400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverInventorySupplierCountriesList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverInventorySupplierCountriesList415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverInventorySupplierCountriesList503Response:
      type: object
    DiscoverInventorySupplierCitiesListResponse:
      type: array
      items:
        $ref: '#/components/schemas/GeoName_Affiliate'
    DiscoverInventorySupplierCitiesList400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverInventorySupplierCitiesList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverInventorySupplierCitiesList415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverInventorySupplierCitiesList503Response:
      type: object
    InventoryGridsShowRankedGridsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SellerInventoryRankedListView_Affiliate'
    InventoryGridsShowRankedGridsList400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsShowRankedGridsList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsShowRankedGridsList415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsShowRankedGridsList503Response:
      type: object
    InventoryGridsGetCuratedSearchesResponse:
      type: array
      items:
        $ref: '#/components/schemas/SellerInventoryListView_Affiliate'
    InventoryGridsGetCuratedSearches400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsGetCuratedSearches400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsGetCuratedSearches415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsGetCuratedSearches503Response:
      type: object
    InventoryCardsGetAllCardsResponse:
      type: array
      items:
        $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
    InventoryCardsGetAllCards400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryCardsGetAllCards400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryCardsGetAllCards415Response:
      type: object
      additionalProperties:
        type: object
    InventoryCardsGetAllCards503Response:
      type: object
    InventoryCardsShowMediaListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
    InventoryCardsShowMediaList400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryCardsShowMediaList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryCardsShowMediaList415Response:
      type: object
      additionalProperties:
        type: object
    InventoryCardsShowMediaList503Response:
      type: object
    DiscoverInventorySearchByList400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverInventorySearchByListResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverInventorySearchByList415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverInventorySearchByList503Response:
      type: object
    DiscoverInventoryCountryListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Country_Affiliate'
    DiscoverInventoryCountryList400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverInventoryCountryList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverInventoryCountryList415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverInventoryCountryList503Response:
      type: object
    DiscoverInventoryCityListResponse:
      type: array
      items:
        $ref: '#/components/schemas/GeoName_Affiliate'
    DiscoverInventoryCityList400Response1:
      type: object
      additionalProperties:
        type: string
    DiscoverInventoryCityList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    DiscoverInventoryCityList415Response:
      type: object
      additionalProperties:
        type: object
    DiscoverInventoryCityList503Response:
      type: object
    CampaignShowInventoryListResponse:
      type: array
      items:
        $ref: '#/components/schemas/CampaignInventory_Affiliate'
    CampaignShowInventoryList400Response1:
      type: object
      additionalProperties:
        type: string
    CampaignShowInventoryList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CampaignShowInventoryList415Response:
      type: object
      additionalProperties:
        type: object
    CampaignShowInventoryList503Response:
      type: object
    InventoryGridsGetSavedSearchesResponse:
      type: array
      items:
        $ref: '#/components/schemas/DynamicSellerListView_Affiliate'
    InventoryGridsGetSavedSearches400Response1:
      type: object
      additionalProperties:
        type: string
    InventoryGridsGetSavedSearches400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    InventoryGridsGetSavedSearches415Response:
      type: object
      additionalProperties:
        type: object
    InventoryGridsGetSavedSearches503Response:
      type: object
    CustomizationGetCompanyCustomizationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
    CustomizationGetCompanyCustomizations400Response1:
      type: object
      additionalProperties:
        type: string
    CustomizationGetCompanyCustomizations400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CustomizationGetCompanyCustomizations415Response:
      type: object
      additionalProperties:
        type: object
    CustomizationGetCompanyCustomizations503Response:
      type: object
    BookingsShowByIdentifier400Response1:
      type: object
      additionalProperties:
        type: string
    BookingsShowByIdentifierResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    BookingsShowByIdentifier415Response:
      type: object
      additionalProperties:
        type: object
    BookingsShowByIdentifier503Response:
      type: object
    BookingsShowMasterRatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/KeyValuePair_Affiliate'
    BookingsShowMasterRates400Response1:
      type: object
      additionalProperties:
        type: string
    BookingsShowMasterRates400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    BookingsShowMasterRates415Response:
      type: object
      additionalProperties:
        type: object
    BookingsShowMasterRates503Response:
      type: object
    BookingsShowBookedHotelsResponse:
      type: array
      items:
        $ref: '#/components/schemas/KeyValuePair_Affiliate'
    BookingsShowBookedHotels400Response1:
      type: object
      additionalProperties:
        type: string
    BookingsShowBookedHotels400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    BookingsShowBookedHotels415Response:
      type: object
      additionalProperties:
        type: object
    BookingsShowBookedHotels503Response:
      type: object
    BookingsShowBookedApplicationsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/KeyValuePair_Affiliate'
    BookingsShowBookedApplicationsList400Response1:
      type: object
      additionalProperties:
        type: string
    BookingsShowBookedApplicationsList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    BookingsShowBookedApplicationsList415Response:
      type: object
      additionalProperties:
        type: object
    BookingsShowBookedApplicationsList503Response:
      type: object
    BookingsShowCustomizationsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/KeyValuePair_Affiliate'
    BookingsShowCustomizationsList400Response1:
      type: object
      additionalProperties:
        type: string
    BookingsShowCustomizationsList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    BookingsShowCustomizationsList415Response:
      type: object
      additionalProperties:
        type: object
    BookingsShowCustomizationsList503Response:
      type: object
    SyndicationEntryPublisherShowListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SyndicationEntry_Affiliate'
    SyndicationEntryPublisherShowList400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherShowList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherShowList415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherShowList503Response:
      type: object
    SyndicationEntryPublisherShowCategoryListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SyndicationCategory_Affiliate'
    SyndicationEntryPublisherShowCategoryList400Response1:
      type: object
      additionalProperties:
        type: string
    SyndicationEntryPublisherShowCategoryList400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    SyndicationEntryPublisherShowCategoryList415Response:
      type: object
      additionalProperties:
        type: object
    SyndicationEntryPublisherShowCategoryList503Response:
      type: object
    CompanyListOwnedCompaniesResponse:
      type: array
      items:
        $ref: '#/components/schemas/CompanyView_Affiliate'
    CompanyListOwnedCompanies400Response1:
      type: object
      additionalProperties:
        type: string
    CompanyListOwnedCompanies400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CompanyListOwnedCompanies415Response:
      type: object
      additionalProperties:
        type: object
    CompanyListOwnedCompanies503Response:
      type: object
    ApplicationRefreshCredentials400Response1:
      type: object
      additionalProperties:
        type: string
    ApplicationRefreshCredentialsResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ApplicationRefreshCredentials415Response:
      type: object
      additionalProperties:
        type: object
    ApplicationRefreshCredentials503Response:
      type: object
    ApplicationListApplicationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Application'
    ApplicationListApplications400Response1:
      type: object
      additionalProperties:
        type: string
    ApplicationListApplications400Response:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    ApplicationListApplications415Response:
      type: object
      additionalProperties:
        type: object
    ApplicationListApplications503Response:
      type: object
    HotelRelationshipRequestsDeleteRequest400Response1:
      type: object
      additionalProperties:
        type: string
    HotelRelationshipRequestsDeleteRequestResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    HotelRelationshipRequestsDeleteRequest415Response:
      type: object
      additionalProperties:
        type: object
    HotelRelationshipRequestsDeleteRequest503Response:
      type: object
    CompanyRemoveManager400Response1:
      type: object
      additionalProperties:
        type: string
    CompanyRemoveManagerResponse:
      oneOf:
        - $ref: '#/components/schemas/GenericErrorMessage'
        - type: object
          additionalProperties:
            type: object
    CompanyRemoveManager415Response:
      type: object
      additionalProperties:
        type: object
    CompanyRemoveManager503Response:
      type: object
  securitySchemes:
    oauth2ClientCredentials:
      description: >-
        ## Retrieve access token

        Make a POST (`Content-Type: application/x-www-form-urlencoded`) request
        to the Token URL below. Include one POST key/value entry:
        `grant_type=client_credentials` and include your clientID / secretKey
        credentials in a Basic Auth header. E.g. `Authorization: Basic
        base64_encode($clientId + ':' + $secretKey)`.

        ## Add Bearer access token to all API requests

        Once you have the access token, you can pass that along on all API
        requests in the authentication header: `'Authorization: Bearer
        $accessToken`.

        Note: Tokens expire after 3 hours. Please make sure you refresh your
        token before that time.
      type: oauth2
      flows:
        clientCredentials:
          authorizationUrl: https://iam.wink.travel/oauth2/authorize
          tokenUrl: https://iam.wink.travel/oauth2/token
          refreshUrl: https://iam.wink.travel/oauth2/refresh
          scopes:
            inventory.read: Read wink data
            inventory.write: Create wink data
            inventory.remove: Remove wink data
externalDocs:
  description: Affiliate Documentation
  url: https://bearchoke.atlassian.net/l/c/a1buVvfr
