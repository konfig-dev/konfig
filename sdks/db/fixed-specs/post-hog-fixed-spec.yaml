openapi: 3.0.3
info:
  title: PostHog API
  description: ''
  version: null
servers:
  - description: US Cloud
    url: https://app.posthog.com
  - description: EU Cloud
    url: https://eu.posthog.com
tags:
  - name: organizations
  - name: insights
  - name: persons
  - name: batch_exports
  - name: feature_flags
  - name: users
  - name: pipeline_destinations
  - name: pipeline_frontend_apps
  - name: pipeline_import_apps
  - name: pipeline_transformations
  - name: plugins
  - name: dashboards
  - name: session_recordings
  - name: plugin_configs
  - name: projects
  - name: roles
  - name: experiments
  - name: pipeline_destination_configs
  - name: pipeline_frontend_apps_configs
  - name: pipeline_import_apps_configs
  - name: pipeline_transformation_configs
  - name: session_recording_playlists
  - name: cohorts
  - name: notebooks
  - name: domains
  - name: dashboard_templates
  - name: surveys
  - name: actions
  - name: annotations
  - name: early_access_feature
  - name: explicit_members
  - name: property_definitions
  - name: subscriptions
  - name: event_definitions
  - name: groups
  - name: invites
  - name: members
  - name: app_metrics
  - name: exports
  - name: query
  - name: activity_log
  - name: events
  - name: groups_types
  - name: funnel
  - name: trend
paths:
  /api/organizations:
    get:
      tags:
        - organizations
      operationId: Organizations_list
      security:
        - PersonalAPIKeyAuth:
            - organization:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
    post:
      tags:
        - organizations
      operationId: Organizations_createOrganization
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
  /api/organizations/{id}:
    get:
      tags:
        - organizations
      operationId: Organizations_getById
      security:
        - PersonalAPIKeyAuth:
            - organization:read
      parameters:
        - description: A UUID string identifying this organization.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    put:
      tags:
        - organizations
      operationId: Organizations_updateById
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this organization.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    patch:
      tags:
        - organizations
      operationId: partial_update
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this organization.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    delete:
      tags:
        - organizations
      operationId: Organizations_removeById
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this organization.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/batch_exports:
    get:
      tags:
        - organizations
        - batch_exports
      operationId: Organizations_batchExportsList
      security:
        - PersonalAPIKeyAuth:
            - batch_export:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchExportList'
    post:
      tags:
        - organizations
        - batch_exports
      operationId: Organizations_createBatchExport
      security:
        - PersonalAPIKeyAuth:
            - batch_export:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
  /api/organizations/{organization_id}/batch_exports/{id}:
    get:
      tags:
        - organizations
        - batch_exports
      operationId: Organizations_getBatchExportsById
      security:
        - PersonalAPIKeyAuth:
            - batch_export:read
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
    put:
      tags:
        - organizations
        - batch_exports
      operationId: Organizations_updateBatchExport
      security:
        - PersonalAPIKeyAuth:
            - batch_export:write
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
    patch:
      tags:
        - organizations
        - batch_exports
      operationId: Organizations_updateBatchExport
      security:
        - PersonalAPIKeyAuth:
            - batch_export:write
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBatchExport'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
    delete:
      tags:
        - organizations
        - batch_exports
      operationId: Organizations_deleteBatchExport
      security:
        - PersonalAPIKeyAuth:
            - batch_export:write
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/batch_exports/{id}/backfill:
    post:
      tags:
        - organizations
        - batch_exports
      operationId: Organizations_triggerBackfill
      description: Trigger a backfill for a BatchExport.
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
  /api/organizations/{organization_id}/batch_exports/{id}/pause:
    post:
      tags:
        - organizations
        - batch_exports
      operationId: Organizations_pauseBatchExport
      description: Pause a BatchExport.
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
  /api/organizations/{organization_id}/batch_exports/{id}/unpause:
    post:
      tags:
        - organizations
        - batch_exports
      operationId: Organizations_unpauseBatchExport
      description: Unpause a BatchExport.
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
  /api/organizations/{organization_id}/domains:
    get:
      tags:
        - organizations
        - domains
      operationId: domains_list
      security:
        - PersonalAPIKeyAuth:
            - organization:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationDomainList'
    post:
      tags:
        - organizations
        - domains
      operationId: domains_create
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
  /api/organizations/{organization_id}/domains/{id}:
    get:
      tags:
        - organizations
        - domains
      operationId: domains_retrieve
      security:
        - PersonalAPIKeyAuth:
            - organization:read
      parameters:
        - description: A UUID string identifying this domain.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
    put:
      tags:
        - organizations
        - domains
      operationId: domains_update
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this domain.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
    patch:
      tags:
        - organizations
        - domains
      operationId: Organizations_updateDomainById
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this domain.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationDomain'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
    delete:
      tags:
        - organizations
        - domains
      operationId: domains_destroy
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this domain.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/domains/{id}/verify:
    post:
      tags:
        - organizations
        - domains
      operationId: Organizations_verifyDomainPost
      parameters:
        - description: A UUID string identifying this domain.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
  /api/organizations/{organization_id}/invites:
    get:
      tags:
        - organizations
        - invites
      operationId: invites_list
      security:
        - PersonalAPIKeyAuth:
            - organization_member:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationInviteList'
    post:
      tags:
        - organizations
        - invites
      operationId: invites_create
      security:
        - PersonalAPIKeyAuth:
            - organization_member:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
  /api/organizations/{organization_id}/invites/{id}:
    delete:
      tags:
        - organizations
        - invites
      operationId: invites_destroy
      security:
        - PersonalAPIKeyAuth:
            - organization_member:write
      parameters:
        - description: A UUID string identifying this organization invite.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/invites/bulk:
    post:
      tags:
        - organizations
        - invites
      operationId: Organizations_bulkInviteCreate
      security:
        - PersonalAPIKeyAuth:
            - organization_member:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
  /api/organizations/{organization_id}/members:
    get:
      tags:
        - organizations
        - members
      operationId: members_list
      security:
        - PersonalAPIKeyAuth:
            - organization_member:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationMemberList'
  /api/organizations/{organization_id}/members/{user__uuid}:
    put:
      tags:
        - organizations
        - members
      operationId: members_update
      security:
        - PersonalAPIKeyAuth:
            - organization_member:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: user__uuid
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationMember'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
    patch:
      tags:
        - organizations
        - members
      operationId: Organizations_updateMemberByUuid
      security:
        - PersonalAPIKeyAuth:
            - organization_member:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: user__uuid
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMember'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
    delete:
      tags:
        - organizations
        - members
      operationId: members_destroy
      security:
        - PersonalAPIKeyAuth:
            - organization_member:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: user__uuid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/pipeline_destinations:
    get:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_listPipelineDestinations
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginList'
    post:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_createPipelineDestinations
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_destinations/{id}:
    get:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_getPipelineDestinations
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    put:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_pipelineDestinationsUpdate
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    patch:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_updatePipelineDestination
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    delete:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_removePipelineDestination
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/pipeline_destinations/{id}/check_for_updates:
    get:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_checkForUpdates
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_destinations/{id}/source:
    get:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_getPipelineDestinationsSource
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_destinations/{id}/update_source:
    patch:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_updatePipelineDestinationSourcePartialUpdate
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_destinations/{id}/upgrade:
    post:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_upgradePipelineDestination
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_destinations/activity:
    get:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_getPipelineDestinationsActivity
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_destinations/exports_unsubscribe_configs:
    get:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_getPipelineDestinationsExportsUnsubscribeConfigs
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_destinations/repository:
    get:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_getPipelineDestinationRepository
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_destinations/unused:
    get:
      tags:
        - organizations
        - pipeline_destinations
      operationId: Organizations_getPipelineDestinationsUnused
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_frontend_apps:
    get:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_listPipelineFrontendApps
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginList'
    post:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_createPipelineFrontendApps
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_frontend_apps/{id}:
    get:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_getPipelineFrontendAppsById
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    put:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_updatePipelineFrontendAppById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    patch:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_updatePipelineFrontendAppsById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    delete:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_removePipelineFrontendApps
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/pipeline_frontend_apps/{id}/check_for_updates:
    get:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_pipelineFrontendAppsCheckForUpdatesRetrieve
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_frontend_apps/{id}/source:
    get:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_getPipelineFrontendAppsSource
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_frontend_apps/{id}/update_source:
    patch:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_pipelineFrontendAppsUpdateSourcePatch
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_frontend_apps/{id}/upgrade:
    post:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_upgradePipelineFrontendApp
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_frontend_apps/activity:
    get:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_getPipelineFrontendAppsActivity
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_frontend_apps/exports_unsubscribe_configs:
    get:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_getPipelineFrontendAppExportsUnsubscribeConfigs
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_frontend_apps/repository:
    get:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_getPipelineFrontendAppsRepository
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_frontend_apps/unused:
    get:
      tags:
        - organizations
        - pipeline_frontend_apps
      operationId: Organizations_getPipelineFrontendAppsUnused
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_import_apps:
    get:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_getPipelineImportApps
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginList'
    post:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_importPipelineApps
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_import_apps/{id}:
    get:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_getPipelineImportApp
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    put:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_pipelineImportAppsUpdate
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    patch:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_updatePipelineImportAppsConfigs
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    delete:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_deletePipelineImportApp
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/pipeline_import_apps/{id}/check_for_updates:
    get:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_pipelineImportAppsCheckForUpdatesRetrieve
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_import_apps/{id}/source:
    get:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_getPipelineImportAppsSource
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_import_apps/{id}/update_source:
    patch:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_updatePipelineImportAppSource
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_import_apps/{id}/upgrade:
    post:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_upgradePipelineImportApp
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_import_apps/activity:
    get:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_getPipelineImportAppsActivity
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_import_apps/exports_unsubscribe_configs:
    get:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_pipelineImportAppsExportsUnsubscribeConfigsRetrieve
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_import_apps/repository:
    get:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_getPipelineImportAppsRepository
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_import_apps/unused:
    get:
      tags:
        - organizations
        - pipeline_import_apps
      operationId: Organizations_getUnusedPipelineImportApps
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_transformations:
    get:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_getPipelineTransformations
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginList'
    post:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_createPipelineTransformation
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_transformations/{id}:
    get:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_getPipelineTransformation
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    put:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_updatePipelineTransformationById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    patch:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_updatePipelineTransformationById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    delete:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_deletePipelineTransformation
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/pipeline_transformations/{id}/check_for_updates:
    get:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_getPipelineTransformationCheckForUpdates
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_transformations/{id}/source:
    get:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_pipelineTransformationsSourceRetrieve
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_transformations/{id}/update_source:
    patch:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_updatePipelineTransformationSourcePartialUpdate
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_transformations/{id}/upgrade:
    post:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_upgradePipelineTransformation
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_transformations/activity:
    get:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_getPipelineTransformationsActivity
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_transformations/exports_unsubscribe_configs:
    get:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_getPipelineTransformationExportsUnsubscribeConfigs
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_transformations/repository:
    get:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_getPipelineTransformationsRepository
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/pipeline_transformations/unused:
    get:
      tags:
        - organizations
        - pipeline_transformations
      operationId: Organizations_getUnusedPipelineTransformations
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/plugins:
    get:
      tags:
        - organizations
        - plugins
      operationId: plugins_list
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginList'
    post:
      tags:
        - organizations
        - plugins
      operationId: plugins_create
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/plugins/{id}:
    get:
      tags:
        - organizations
        - plugins
      operationId: plugins_retrieve
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    put:
      tags:
        - organizations
        - plugins
      operationId: plugins_update
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    patch:
      tags:
        - organizations
        - plugins
      operationId: Organizations_updatePluginById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
    delete:
      tags:
        - organizations
        - plugins
      operationId: plugins_destroy
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/plugins/{id}/check_for_updates:
    get:
      tags:
        - organizations
        - plugins
      operationId: Organizations_pluginsCheckForUpdates
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/plugins/{id}/source:
    get:
      tags:
        - organizations
        - plugins
      operationId: Organizations_pluginsSourceRetrieve
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/plugins/{id}/update_source:
    patch:
      tags:
        - organizations
        - plugins
      operationId: Organizations_updatePluginSource
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/plugins/{id}/upgrade:
    post:
      tags:
        - organizations
        - plugins
      operationId: Organizations_upgradePlugin
      parameters:
        - description: A unique integer value identifying this plugin.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/plugins/activity:
    get:
      tags:
        - organizations
        - plugins
      operationId: Organizations_getPluginsActivity
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/plugins/exports_unsubscribe_configs:
    get:
      tags:
        - organizations
        - plugins
      operationId: Organizations_getPluginsExportsUnsubscribeConfigs
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/plugins/repository:
    get:
      tags:
        - organizations
        - plugins
      operationId: Organizations_getPluginsRepository
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/plugins/unused:
    get:
      tags:
        - organizations
        - plugins
      operationId: Organizations_getPluginsUnused
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
  /api/organizations/{organization_id}/projects:
    get:
      tags:
        - organizations
        - projects
      operationId: Organizations_getProjects
      security:
        - PersonalAPIKeyAuth:
            - project:read
      description: Projects for the current organization.
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamBasicList'
    post:
      tags:
        - organizations
        - projects
      operationId: Organizations_createProject
      security:
        - PersonalAPIKeyAuth:
            - project:write
      description: Projects for the current organization.
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /api/organizations/{organization_id}/projects/{id}:
    get:
      tags:
        - organizations
        - projects
      operationId: Organizations_getProjectsById
      security:
        - PersonalAPIKeyAuth:
            - project:read
      description: Projects for the current organization.
      parameters:
        - description: A unique integer value identifying this team.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    put:
      tags:
        - organizations
        - projects
      operationId: Organizations_updateProjectById
      security:
        - PersonalAPIKeyAuth:
            - project:write
      description: Projects for the current organization.
      parameters:
        - description: A unique integer value identifying this team.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    patch:
      tags:
        - organizations
        - projects
      operationId: Organizations_updateProject
      security:
        - PersonalAPIKeyAuth:
            - project:write
      description: Projects for the current organization.
      parameters:
        - description: A unique integer value identifying this team.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      tags:
        - organizations
        - projects
      operationId: Organizations_deleteProjectById
      security:
        - PersonalAPIKeyAuth:
            - project:write
      description: Projects for the current organization.
      parameters:
        - description: A unique integer value identifying this team.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/projects/{id}/activity:
    get:
      tags:
        - organizations
        - projects
      operationId: activity_retrieve
      description: Projects for the current organization.
      parameters:
        - description: A unique integer value identifying this team.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /api/organizations/{organization_id}/projects/{id}/is_generating_demo_data:
    get:
      tags:
        - organizations
        - projects
      operationId: Organizations_getIsGeneratingDemoData
      description: Projects for the current organization.
      parameters:
        - description: A unique integer value identifying this team.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /api/organizations/{organization_id}/projects/{id}/reset_token:
    patch:
      tags:
        - organizations
        - projects
      operationId: Organizations_projectsResetTokenPartialUpdate
      description: Projects for the current organization.
      parameters:
        - description: A unique integer value identifying this team.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /api/organizations/{organization_id}/roles:
    get:
      tags:
        - organizations
        - roles
      operationId: roles_list
      security:
        - PersonalAPIKeyAuth:
            - organization:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
    post:
      tags:
        - organizations
        - roles
      operationId: roles_create
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
  /api/organizations/{organization_id}/roles/{id}:
    get:
      tags:
        - organizations
        - roles
      operationId: roles_retrieve
      security:
        - PersonalAPIKeyAuth:
            - organization:read
      parameters:
        - description: A UUID string identifying this role.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    put:
      tags:
        - organizations
        - roles
      operationId: roles_update
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this role.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    patch:
      tags:
        - organizations
        - roles
      operationId: Organizations_updateRoleById
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this role.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    delete:
      tags:
        - organizations
        - roles
      operationId: roles_destroy
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this role.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/organizations/{organization_id}/roles/{role_id}/role_memberships:
    get:
      tags:
        - organizations
        - roles
      operationId: Organizations_listRoleMemberships
      security:
        - PersonalAPIKeyAuth:
            - organization:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
        - in: path
          name: role_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleMembershipList'
    post:
      tags:
        - organizations
        - roles
      operationId: Organizations_createRoleMemberships
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
        - in: path
          name: role_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleMembership'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMembership'
  /api/organizations/{organization_id}/roles/{role_id}/role_memberships/{id}:
    delete:
      tags:
        - organizations
        - roles
      operationId: Organizations_removeRoleMembership
      security:
        - PersonalAPIKeyAuth:
            - organization:write
      parameters:
        - description: A UUID string identifying this role membership.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: organization_id
          schema:
            type: string
          required: true
        - in: path
          name: role_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/actions:
    get:
      tags:
        - actions
      operationId: actions_list
      security:
        - PersonalAPIKeyAuth:
            - action:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
    post:
      tags:
        - actions
      operationId: actions_create
      security:
        - PersonalAPIKeyAuth:
            - action:write
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
  /api/projects/{project_id}/actions/{id}:
    get:
      tags:
        - actions
      operationId: actions_retrieve
      security:
        - PersonalAPIKeyAuth:
            - action:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this action.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
    put:
      tags:
        - actions
      operationId: actions_update
      security:
        - PersonalAPIKeyAuth:
            - action:write
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this action.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
    patch:
      tags:
        - actions
      operationId: Actions_updateById
      security:
        - PersonalAPIKeyAuth:
            - action:write
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this action.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAction'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
    delete:
      tags:
        - actions
      operationId: actions_destroy
      security:
        - PersonalAPIKeyAuth:
            - action:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this action.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/activity_log:
    get:
      tags:
        - activity_log
      operationId: Activitylog_getActivityLog
      security:
        - PersonalAPIKeyAuth:
            - activity_log:read
      parameters:
        - description: The pagination cursor value.
          name: cursor
          required: false
          in: query
          schema:
            type: string
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityLogList'
  /api/projects/{project_id}/activity_log/bookmark_activity_notification:
    post:
      tags:
        - activity_log
      operationId: Activitylog_createBookmarkActivityNotification
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityLog'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLog'
  /api/projects/{project_id}/activity_log/important_changes:
    get:
      tags:
        - activity_log
      operationId: Activitylog_getImportantChanges
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLog'
  /api/projects/{project_id}/annotations:
    get:
      tags:
        - annotations
      operationId: annotations_list
      security:
        - PersonalAPIKeyAuth:
            - annotation:read
      description: >-
        Create, Read, Update and Delete annotations. [See
        docs](https://posthog.com/docs/user-guides/annotations) for more
        information on annotations.
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - description: A search term.
          name: search
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnnotationList'
    post:
      tags:
        - annotations
      operationId: annotations_create
      security:
        - PersonalAPIKeyAuth:
            - annotation:write
      description: >-
        Create, Read, Update and Delete annotations. [See
        docs](https://posthog.com/docs/user-guides/annotations) for more
        information on annotations.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
  /api/projects/{project_id}/annotations/{id}:
    get:
      tags:
        - annotations
      operationId: annotations_retrieve
      security:
        - PersonalAPIKeyAuth:
            - annotation:read
      description: >-
        Create, Read, Update and Delete annotations. [See
        docs](https://posthog.com/docs/user-guides/annotations) for more
        information on annotations.
      parameters:
        - description: A unique integer value identifying this annotation.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
    put:
      tags:
        - annotations
      operationId: annotations_update
      security:
        - PersonalAPIKeyAuth:
            - annotation:write
      description: >-
        Create, Read, Update and Delete annotations. [See
        docs](https://posthog.com/docs/user-guides/annotations) for more
        information on annotations.
      parameters:
        - description: A unique integer value identifying this annotation.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
    patch:
      tags:
        - annotations
      operationId: Annotations_crudById
      security:
        - PersonalAPIKeyAuth:
            - annotation:write
      description: >-
        Create, Read, Update and Delete annotations. [See
        docs](https://posthog.com/docs/user-guides/annotations) for more
        information on annotations.
      parameters:
        - description: A unique integer value identifying this annotation.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnnotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnnotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnnotation'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
    delete:
      tags:
        - annotations
      operationId: annotations_destroy
      security:
        - PersonalAPIKeyAuth:
            - annotation:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - description: A unique integer value identifying this annotation.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/app_metrics/{id}:
    get:
      tags:
        - app_metrics
      operationId: Appmetrics_getAppMetricsById
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/app_metrics/{id}/error_details:
    get:
      tags:
        - app_metrics
      operationId: Appmetrics_getErrorDetails
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/app_metrics/{plugin_config_id}/historical_exports:
    get:
      tags:
        - app_metrics
      operationId: Appmetrics_getHistoricalExports
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - in: path
          name: plugin_config_id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/app_metrics/{plugin_config_id}/historical_exports/{id}:
    get:
      tags:
        - app_metrics
      operationId: Appmetrics_getHistoricalExportsById
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: path
          name: plugin_config_id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/batch_exports:
    get:
      tags:
        - batch_exports
      operationId: Batchexports_getMultipleRuns
      security:
        - PersonalAPIKeyAuth:
            - batch_export:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchExportList'
    post:
      tags:
        - batch_exports
      operationId: Batchexports_createNewRun
      security:
        - PersonalAPIKeyAuth:
            - batch_export:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
  /api/projects/{project_id}/batch_exports/{batch_export_id}/logs:
    get:
      tags:
        - batch_exports
      operationId: Batchexports_getLogs
      security:
        - PersonalAPIKeyAuth:
            - batch_export:read
      parameters:
        - in: path
          name: batch_export_id
          schema:
            type: string
          required: true
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchExportLogEntryList'
  /api/projects/{project_id}/batch_exports/{batch_export_id}/runs:
    get:
      tags:
        - batch_exports
      operationId: Batchexports_getRuns
      security:
        - PersonalAPIKeyAuth:
            - batch_export:read
      description: Get all BatchExportRuns for a BatchExport.
      parameters:
        - in: path
          name: batch_export_id
          schema:
            description: The BatchExport this run belongs to.
            type: string
            format: uuid
          required: true
        - description: The pagination cursor value.
          name: cursor
          required: false
          in: query
          schema:
            type: string
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchExportRunList'
  /api/projects/{project_id}/batch_exports/{batch_export_id}/runs/{id}:
    get:
      tags:
        - batch_exports
      operationId: Batchexports_getRunsRetrieve
      security:
        - PersonalAPIKeyAuth:
            - batch_export:read
      parameters:
        - in: path
          name: batch_export_id
          schema:
            description: The BatchExport this run belongs to.
            type: string
            format: uuid
          required: true
        - description: A UUID string identifying this batch export run.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExportRun'
  /api/projects/{project_id}/batch_exports/{batch_export_id}/runs/{run_id}/logs:
    get:
      tags:
        - batch_exports
      operationId: Batchexports_getLogs
      security:
        - PersonalAPIKeyAuth:
            - batch_export:read
      parameters:
        - in: path
          name: batch_export_id
          schema:
            type: string
          required: true
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: run_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchExportLogEntryList'
  /api/projects/{project_id}/batch_exports/{id}:
    get:
      tags:
        - batch_exports
      operationId: Batchexports_getMultipleRuns
      security:
        - PersonalAPIKeyAuth:
            - batch_export:read
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
    put:
      tags:
        - batch_exports
      operationId: Batchexports_updateByIdPatch
      security:
        - PersonalAPIKeyAuth:
            - batch_export:write
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
    patch:
      tags:
        - batch_exports
      operationId: Batchexports_updateByIdPatch
      security:
        - PersonalAPIKeyAuth:
            - batch_export:write
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBatchExport'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
    delete:
      tags:
        - batch_exports
      operationId: Batchexports_deleteById
      security:
        - PersonalAPIKeyAuth:
            - batch_export:write
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/batch_exports/{id}/backfill:
    post:
      tags:
        - batch_exports
      operationId: Batchexports_triggerBackfill
      description: Trigger a backfill for a BatchExport.
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
  /api/projects/{project_id}/batch_exports/{id}/pause:
    post:
      tags:
        - batch_exports
      operationId: Batchexports_pauseAction
      description: Pause a BatchExport.
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
  /api/projects/{project_id}/batch_exports/{id}/unpause:
    post:
      tags:
        - batch_exports
      operationId: Batchexports_unpauseAction
      description: Unpause a BatchExport.
      parameters:
        - description: A UUID string identifying this batch export.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
  /api/projects/{project_id}/cohorts:
    get:
      tags:
        - cohorts
      operationId: cohorts_list
      security:
        - PersonalAPIKeyAuth:
            - cohort:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCohortList'
    post:
      tags:
        - cohorts
      operationId: cohorts_create
      security:
        - PersonalAPIKeyAuth:
            - cohort:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cohort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cohort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cohort'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
  /api/projects/{project_id}/cohorts/{id}:
    get:
      tags:
        - cohorts
      operationId: cohorts_retrieve
      security:
        - PersonalAPIKeyAuth:
            - cohort:read
      parameters:
        - description: A unique integer value identifying this cohort.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
    put:
      tags:
        - cohorts
      operationId: cohorts_update
      security:
        - PersonalAPIKeyAuth:
            - cohort:write
      parameters:
        - description: A unique integer value identifying this cohort.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cohort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cohort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cohort'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
    patch:
      tags:
        - cohorts
      operationId: Cohorts_updateDetails
      security:
        - PersonalAPIKeyAuth:
            - cohort:write
      parameters:
        - description: A unique integer value identifying this cohort.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCohort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCohort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCohort'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
    delete:
      tags:
        - cohorts
      operationId: cohorts_destroy
      security:
        - PersonalAPIKeyAuth:
            - cohort:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - description: A unique integer value identifying this cohort.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/cohorts/{id}/duplicate_as_static_cohort:
    get:
      tags:
        - cohorts
      operationId: Cohorts_duplicateAsStaticCohortRetrieve
      parameters:
        - description: A unique integer value identifying this cohort.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
  /api/projects/{project_id}/cohorts/{id}/persons:
    get:
      tags:
        - cohorts
      operationId: Cohorts_listPersons
      security:
        - PersonalAPIKeyAuth:
            - cohort:read
            - person:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this cohort.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
            text/csv:
              schema:
                $ref: '#/components/schemas/Cohort'
  /api/projects/{project_id}/dashboard_templates:
    get:
      tags:
        - dashboard_templates
      operationId: Dashboardtemplates_getList
      security:
        - PersonalAPIKeyAuth:
            - dashboard_template:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDashboardTemplateList'
    post:
      tags:
        - dashboard_templates
      operationId: Dashboardtemplates_createOrUpdate
      security:
        - PersonalAPIKeyAuth:
            - dashboard_template:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
  /api/projects/{project_id}/dashboard_templates/{id}:
    get:
      tags:
        - dashboard_templates
      operationId: Dashboardtemplates_getById
      security:
        - PersonalAPIKeyAuth:
            - dashboard_template:read
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
    put:
      tags:
        - dashboard_templates
      operationId: Dashboardtemplates_updateById
      security:
        - PersonalAPIKeyAuth:
            - dashboard_template:write
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
    patch:
      tags:
        - dashboard_templates
      operationId: Dashboardtemplates_updateByIdPatch
      security:
        - PersonalAPIKeyAuth:
            - dashboard_template:write
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDashboardTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDashboardTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDashboardTemplate'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
    delete:
      tags:
        - dashboard_templates
      operationId: Dashboardtemplates_removeById
      security:
        - PersonalAPIKeyAuth:
            - dashboard_template:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/dashboard_templates/json_schema:
    get:
      tags:
        - dashboard_templates
      operationId: Dashboardtemplates_getJsonSchema
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
  /api/projects/{project_id}/dashboards:
    get:
      tags:
        - dashboards
      operationId: dashboards_list
      security:
        - PersonalAPIKeyAuth:
            - dashboard:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDashboardBasicList'
    post:
      tags:
        - dashboards
      operationId: dashboards_create
      security:
        - PersonalAPIKeyAuth:
            - dashboard:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
  /api/projects/{project_id}/dashboards/{dashboard_id}/collaborators:
    get:
      tags:
        - dashboards
      operationId: Dashboards_listCollaborators
      security:
        - PersonalAPIKeyAuth:
            - dashboard:read
      parameters:
        - in: path
          name: dashboard_id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsListCollaboratorsResponse'
    post:
      tags:
        - dashboards
      operationId: Dashboards_addCollaborator
      security:
        - PersonalAPIKeyAuth:
            - dashboard:write
      parameters:
        - in: path
          name: dashboard_id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardCollaborator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DashboardCollaborator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DashboardCollaborator'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardCollaborator'
  /api/projects/{project_id}/dashboards/{dashboard_id}/collaborators/{user__uuid}:
    delete:
      tags:
        - dashboards
      operationId: Dashboards_deleteCollaboratorByUuid
      security:
        - PersonalAPIKeyAuth:
            - dashboard:write
      parameters:
        - in: path
          name: dashboard_id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: user__uuid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/dashboards/{dashboard_id}/sharing:
    get:
      tags:
        - dashboards
      operationId: Dashboards_sharingList
      security:
        - PersonalAPIKeyAuth:
            - sharing_configuration:read
      parameters:
        - in: path
          name: dashboard_id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsSharingListResponse'
  /api/projects/{project_id}/dashboards/{id}:
    get:
      tags:
        - dashboards
      operationId: dashboards_retrieve
      security:
        - PersonalAPIKeyAuth:
            - dashboard:read
      parameters:
        - description: A unique integer value identifying this dashboard.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
    put:
      tags:
        - dashboards
      operationId: dashboards_update
      security:
        - PersonalAPIKeyAuth:
            - dashboard:write
      parameters:
        - description: A unique integer value identifying this dashboard.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
    patch:
      tags:
        - dashboards
      operationId: Dashboards_updateById
      security:
        - PersonalAPIKeyAuth:
            - dashboard:write
      parameters:
        - description: A unique integer value identifying this dashboard.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
    delete:
      tags:
        - dashboards
      operationId: dashboards_destroy
      security:
        - PersonalAPIKeyAuth:
            - dashboard:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - description: A unique integer value identifying this dashboard.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/dashboards/{id}/move_tile:
    patch:
      tags:
        - dashboards
      operationId: Dashboards_moveTilePatch
      parameters:
        - description: A unique integer value identifying this dashboard.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
  /api/projects/{project_id}/dashboards/create_from_template_json:
    post:
      tags:
        - dashboards
      operationId: Dashboards_createFromTemplateJsonPost
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
  /api/projects/{project_id}/early_access_feature:
    get:
      tags:
        - early_access_feature
      operationId: Earlyaccessfeature_getEarlyAccessFeature
      security:
        - PersonalAPIKeyAuth:
            - early_access_feature:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEarlyAccessFeatureList'
    post:
      tags:
        - early_access_feature
      operationId: Earlyaccessfeature_createOrUpdate
      security:
        - PersonalAPIKeyAuth:
            - early_access_feature:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeatureSerializerCreateOnly'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeatureSerializerCreateOnly'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeatureSerializerCreateOnly'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyAccessFeatureSerializerCreateOnly'
  /api/projects/{project_id}/early_access_feature/{id}:
    get:
      tags:
        - early_access_feature
      operationId: Earlyaccessfeature_getData
      security:
        - PersonalAPIKeyAuth:
            - early_access_feature:read
      parameters:
        - description: A UUID string identifying this early access feature.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyAccessFeature'
    put:
      tags:
        - early_access_feature
      operationId: Earlyaccessfeature_updateContent
      security:
        - PersonalAPIKeyAuth:
            - early_access_feature:write
      parameters:
        - description: A UUID string identifying this early access feature.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeature'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyAccessFeature'
    patch:
      tags:
        - early_access_feature
      operationId: Earlyaccessfeature_updateContent
      security:
        - PersonalAPIKeyAuth:
            - early_access_feature:write
      parameters:
        - description: A UUID string identifying this early access feature.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEarlyAccessFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEarlyAccessFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEarlyAccessFeature'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyAccessFeature'
    delete:
      tags:
        - early_access_feature
      operationId: Earlyaccessfeature_deleteById
      security:
        - PersonalAPIKeyAuth:
            - early_access_feature:write
      parameters:
        - description: A UUID string identifying this early access feature.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/event_definitions:
    get:
      tags:
        - event_definitions
      operationId: Eventdefinitions_list
      security:
        - PersonalAPIKeyAuth:
            - event_definition:read
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/event_definitions/{id}:
    get:
      tags:
        - event_definitions
      operationId: Eventdefinitions_getById
      security:
        - PersonalAPIKeyAuth:
            - event_definition:read
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
    put:
      tags:
        - event_definitions
      operationId: Eventdefinitions_updateById
      security:
        - PersonalAPIKeyAuth:
            - event_definition:write
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
    patch:
      tags:
        - event_definitions
      operationId: Eventdefinitions_updateByIdPatch
      security:
        - PersonalAPIKeyAuth:
            - event_definition:write
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
    delete:
      tags:
        - event_definitions
      operationId: Eventdefinitions_deleteById
      security:
        - PersonalAPIKeyAuth:
            - event_definition:write
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/events:
    get:
      tags:
        - events
      operationId: events_list
      security:
        - PersonalAPIKeyAuth:
            - query:read
      description: |2-

                This endpoint allows you to list and filter events.
                It is effectively deprecated and is kept only for backwards compatibility.
                If you ever ask about it you will be advised to not use it...
                If you want to ad-hoc list or aggregate events, use the Query endpoint instead.
                If you want to export all events or many pages of events you should use our CDP/Batch Exports products instead.
                
      parameters:
        - description: Only return events with a timestamp after this time.
          in: query
          name: after
          schema:
            type: string
            format: date-time
        - description: Only return events with a timestamp before this time.
          in: query
          name: before
          schema:
            type: string
            format: date-time
        - description: Filter list by distinct id.
          in: query
          name: distinct_id
          schema:
            type: integer
        - description: Filter list by event. For example `user sign up` or `$pageview`.
          in: query
          name: event
          schema:
            type: string
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: The maximum number of results to return
          in: query
          name: limit
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Filter list by person id.
          in: query
          name: person_id
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - description: >-
            Filter events by event property, person property, cohort, groups and
            more.
          in: query
          name: properties
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Property'
        - description: (Experimental) JSON-serialized array of HogQL expressions to return
          in: query
          name: select
          schema:
            type: array
            items:
              type: string
        - description: >-
            (Experimental) JSON-serialized array of HogQL expressions that must
            pass
          in: query
          name: where
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClickhouseEventList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedClickhouseEventList'
  /api/projects/{project_id}/events/{id}:
    get:
      tags:
        - events
      operationId: events_retrieve
      security:
        - PersonalAPIKeyAuth:
            - query:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
  /api/projects/{project_id}/events/values:
    get:
      tags:
        - events
      operationId: Events_getValues
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
  /api/projects/{project_id}/experiments:
    get:
      tags:
        - experiments
      operationId: experiments_list
      security:
        - PersonalAPIKeyAuth:
            - experiment:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentList'
    post:
      tags:
        - experiments
      operationId: experiments_create
      security:
        - PersonalAPIKeyAuth:
            - experiment:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
  /api/projects/{project_id}/experiments/{id}:
    get:
      tags:
        - experiments
      operationId: experiments_retrieve
      security:
        - PersonalAPIKeyAuth:
            - experiment:read
      parameters:
        - description: A unique integer value identifying this experiment.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
    put:
      tags:
        - experiments
      operationId: experiments_update
      security:
        - PersonalAPIKeyAuth:
            - experiment:write
      parameters:
        - description: A unique integer value identifying this experiment.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
    patch:
      tags:
        - experiments
      operationId: Experiments_updateExperimentById
      security:
        - PersonalAPIKeyAuth:
            - experiment:write
      parameters:
        - description: A unique integer value identifying this experiment.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
    delete:
      tags:
        - experiments
      operationId: experiments_destroy
      security:
        - PersonalAPIKeyAuth:
            - experiment:write
      parameters:
        - description: A unique integer value identifying this experiment.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/experiments/{id}/results:
    get:
      tags:
        - experiments
      operationId: Experiments_getResults
      parameters:
        - description: A unique integer value identifying this experiment.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
  /api/projects/{project_id}/experiments/{id}/secondary_results:
    get:
      tags:
        - experiments
      operationId: Experiments_getSecondaryResults
      parameters:
        - description: A unique integer value identifying this experiment.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
  /api/projects/{project_id}/experiments/requires_flag_implementation:
    get:
      tags:
        - experiments
      operationId: Experiments_getRequiresFlagImplementation
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
  /api/projects/{project_id}/explicit_members:
    get:
      tags:
        - explicit_members
      operationId: Explicitmembers_getMembers
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitmembersGetMembersResponse'
    post:
      tags:
        - explicit_members
      operationId: Explicitmembers_createOrUpdateMembers
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitTeamMember'
  /api/projects/{project_id}/explicit_members/{parent_membership__user__uuid}:
    get:
      tags:
        - explicit_members
      operationId: Explicitmembers_getMembersByParentMembershipUserUuid
      parameters:
        - in: path
          name: parent_membership__user__uuid
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitTeamMember'
    put:
      tags:
        - explicit_members
      operationId: Explicitmembers_updateParentMembershipUserUuid
      parameters:
        - in: path
          name: parent_membership__user__uuid
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitTeamMember'
    patch:
      tags:
        - explicit_members
      operationId: Explicitmembers_updateParentMembershipUserUuid
      parameters:
        - in: path
          name: parent_membership__user__uuid
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExplicitTeamMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExplicitTeamMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExplicitTeamMember'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitTeamMember'
    delete:
      tags:
        - explicit_members
      operationId: Explicitmembers_deleteExplicitMembers
      parameters:
        - in: path
          name: parent_membership__user__uuid
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/exports:
    get:
      tags:
        - exports
      operationId: exports_list
      security:
        - PersonalAPIKeyAuth:
            - export:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExportedAssetList'
    post:
      tags:
        - exports
      operationId: exports_create
      security:
        - PersonalAPIKeyAuth:
            - export:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportedAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExportedAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExportedAsset'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedAsset'
  /api/projects/{project_id}/exports/{id}:
    get:
      tags:
        - exports
      operationId: exports_retrieve
      security:
        - PersonalAPIKeyAuth:
            - export:read
      parameters:
        - description: A unique integer value identifying this exported asset.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedAsset'
  /api/projects/{project_id}/exports/{id}/content:
    get:
      tags:
        - exports
      operationId: Exports_contentRetrieve
      parameters:
        - description: A unique integer value identifying this exported asset.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedAsset'
  /api/projects/{project_id}/feature_flags:
    get:
      tags:
        - feature_flags
      operationId: Featureflags_getFeatureFlags
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:read
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureFlagList'
    post:
      tags:
        - feature_flags
      operationId: Featureflags_createFeatureFlag
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:write
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/feature_flags/{feature_flag_id}/role_access:
    get:
      tags:
        - feature_flags
      operationId: Featureflags_getRoleAccess
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:read
      parameters:
        - in: path
          name: feature_flag_id
          schema:
            type: integer
          required: true
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureFlagRoleAccessList'
    post:
      tags:
        - feature_flags
      operationId: Featureflags_roleAccessCreate
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:write
      parameters:
        - in: path
          name: feature_flag_id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlagRoleAccess'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlagRoleAccess'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlagRoleAccess'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagRoleAccess'
  /api/projects/{project_id}/feature_flags/{feature_flag_id}/role_access/{id}:
    get:
      tags:
        - feature_flags
      operationId: Featureflags_getRoleAccessById
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:read
      parameters:
        - in: path
          name: feature_flag_id
          schema:
            type: integer
          required: true
        - description: A unique integer value identifying this feature flag role access.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagRoleAccess'
    delete:
      tags:
        - feature_flags
      operationId: Featureflags_deleteRoleAccess
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:write
      parameters:
        - in: path
          name: feature_flag_id
          schema:
            type: integer
          required: true
        - description: A unique integer value identifying this feature flag role access.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/feature_flags/{id}:
    get:
      tags:
        - feature_flags
      operationId: Featureflags_readFeatureFlagById
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:read
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: A unique integer value identifying this feature flag.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
    put:
      tags:
        - feature_flags
      operationId: Featureflags_createOrUpdateFlag
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:write
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: A unique integer value identifying this feature flag.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
    patch:
      tags:
        - feature_flags
      operationId: Featureflags_updateFeatureFlagById
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:write
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: A unique integer value identifying this feature flag.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeatureFlag'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
    delete:
      tags:
        - feature_flags
      operationId: Featureflags_deleteFeatureFlag
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - description: A unique integer value identifying this feature flag.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/feature_flags/{id}/activity:
    get:
      tags:
        - feature_flags
      operationId: Featureflags_getFeatureFlagActivity
      security:
        - PersonalAPIKeyAuth:
            - activity_log:read
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: A unique integer value identifying this feature flag.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/feature_flags/{id}/create_static_cohort_for_flag:
    post:
      tags:
        - feature_flags
      operationId: Featureflags_createStaticCohortForFlag
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: A unique integer value identifying this feature flag.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/feature_flags/{id}/dashboard:
    post:
      tags:
        - feature_flags
      operationId: Featureflags_createOrUpdateDashboard
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: A unique integer value identifying this feature flag.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/feature_flags/{id}/enrich_usage_dashboard:
    post:
      tags:
        - feature_flags
      operationId: Featureflags_enrichUsageDashboardCreate
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: A unique integer value identifying this feature flag.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/feature_flags/activity:
    get:
      tags:
        - feature_flags
      operationId: Featureflags_getFeatureFlagsActivity
      security:
        - PersonalAPIKeyAuth:
            - activity_log:read
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/feature_flags/evaluation_reasons:
    get:
      tags:
        - feature_flags
      operationId: Featureflags_getEvaluationReasons
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/feature_flags/local_evaluation:
    get:
      tags:
        - feature_flags
      operationId: Featureflags_localEvaluationRetrieve
      security:
        - PersonalAPIKeyAuth:
            - feature_flag:read
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/feature_flags/my_flags:
    get:
      tags:
        - feature_flags
      operationId: Featureflags_readMyFlags
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/feature_flags/user_blast_radius:
    post:
      tags:
        - feature_flags
      operationId: Featureflags_createFeatureFlagUserBlastRadius
      description: >-
        Create, read, update and delete feature flags. [See
        docs](https://posthog.com/docs/user-guides/feature-flags) for more
        information on feature flags.


        If you're looking to use feature flags on your application, you can
        either use our JavaScript Library or our dedicated endpoint to check if
        feature flags are enabled for a given user.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/projects/{project_id}/groups:
    get:
      tags:
        - groups
      operationId: groups_list
      security:
        - PersonalAPIKeyAuth:
            - group:read
      description: >-
        List all groups of a specific group type. You must pass
        ?group_type_index= in the URL. To get a list of valid group types, call
        /api/:project_id/groups_types/
      parameters:
        - description: The pagination cursor value.
          name: cursor
          required: false
          in: query
          schema:
            type: string
        - description: Specify the group type to list
          in: query
          name: group_type_index
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - description: Search the group name
          in: query
          name: search
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
  /api/projects/{project_id}/groups/find:
    get:
      tags:
        - groups
      operationId: Groups_getGroupsFind
      parameters:
        - description: Specify the key of the group to find
          in: query
          name: group_key
          schema:
            type: string
          required: true
        - description: Specify the group type to find
          in: query
          name: group_type_index
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /api/projects/{project_id}/groups/property_definitions:
    get:
      tags:
        - groups
      operationId: Groups_getPropertyDefinitions
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /api/projects/{project_id}/groups/property_values:
    get:
      tags:
        - groups
      operationId: Groups_getPropertyValues
      parameters:
        - description: Specify the group type to find property values of
          in: query
          name: group_type_index
          schema:
            type: integer
          required: true
        - description: Specify the property key to find values for
          in: query
          name: key
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /api/projects/{project_id}/groups/related:
    get:
      tags:
        - groups
      operationId: Groups_getRelatedGroups
      parameters:
        - description: Specify the group type to find
          in: query
          name: group_type_index
          schema:
            type: integer
          required: true
        - description: Specify the id of the user to find groups for
          in: query
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /api/projects/{project_id}/groups_types:
    get:
      tags:
        - groups_types
      operationId: Groupstypes_list
      security:
        - PersonalAPIKeyAuth:
            - group:read
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupstypesListResponse'
  /api/projects/{project_id}/groups_types/update_metadata:
    patch:
      tags:
        - groups_types
      operationId: Groupstypes_updateMetadataPatch
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupType'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupType'
  /api/projects/{project_id}/insights:
    get:
      tags:
        - insights
      operationId: insights_list
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: created_by
          schema:
            type: integer
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: query
          name: short_id
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInsightList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedInsightList'
    post:
      tags:
        - insights
      operationId: insights_create
      security:
        - PersonalAPIKeyAuth:
            - insight:write
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/{insight_id}/sharing:
    get:
      tags:
        - insights
      operationId: Insights_getSharing
      security:
        - PersonalAPIKeyAuth:
            - sharing_configuration:read
      parameters:
        - in: path
          name: insight_id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsGetSharingResponse'
  /api/projects/{project_id}/insights/{id}:
    get:
      tags:
        - insights
      operationId: insights_retrieve
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-

            When loading an insight for a dashboard pass a `from_dashboard`
            query parameter containing the dashboard ID


            e.g.
            `"/api/projects/{team_id}/insights/{insight_id}?from_dashboard={dashboard_id}"`


            Insights can be added to more than one dashboard, this allows the
            insight to be loaded in the correct context.


            Using the correct cache and enriching the response with dashboard
            specific config (e.g. layouts or colors)
          in: query
          name: from_dashboard
          schema:
            type: integer
        - description: A unique integer value identifying this insight.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - description: |2-

                            The client can request that an insight be refreshed by setting the `refresh=true` parameter.
                            The server will then decide if the data should or not be refreshed based on a set of heuristics
                            meant to determine the staleness of cached data. The result will contain as `is_cached` field
                            that indicates whether the insight was actually refreshed or not through the request.
          in: query
          name: refresh
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
    put:
      tags:
        - insights
      operationId: insights_update
      security:
        - PersonalAPIKeyAuth:
            - insight:write
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this insight.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
    patch:
      tags:
        - insights
      operationId: Insights_updateInsightPath
      security:
        - PersonalAPIKeyAuth:
            - insight:write
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this insight.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInsight'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
    delete:
      tags:
        - insights
      operationId: insights_destroy
      security:
        - PersonalAPIKeyAuth:
            - insight:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this insight.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/insights/{id}/activity:
    get:
      tags:
        - insights
      operationId: Insights_getActivityData
      security:
        - PersonalAPIKeyAuth:
            - activity_log:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this insight.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/{id}/viewed:
    post:
      tags:
        - insights
      operationId: Insights_markAsViewed
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this insight.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/activity:
    get:
      tags:
        - insights
      operationId: Insights_getActivityData
      security:
        - PersonalAPIKeyAuth:
            - activity_log:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/cancel:
    post:
      tags:
        - insights
      operationId: Insights_cancelCreate
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/funnel:
    get:
      tags:
        - insights
      operationId: Insights_getFunnelSummary
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
    post:
      tags:
        - funnel
        - insights
      operationId: Funnel_createOrUpdate
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Funnel'
      responses:
        '200':
          description: Note, if funnel_viz_type is set the response will be different.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunnelStepsResults'
            text/csv:
              schema:
                $ref: '#/components/schemas/FunnelStepsResults'
  /api/projects/{project_id}/insights/funnel/correlation:
    get:
      tags:
        - insights
      operationId: Insights_funnelCorrelationRetrieve
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
    post:
      tags:
        - insights
      operationId: Insights_funnelCorrelationCreate
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/my_last_viewed:
    get:
      tags:
        - insights
      operationId: Insights_listLastViewed
      description: >-
        Returns basic details about the last 5 insights viewed by this user.
        Most recently viewed first.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/path:
    get:
      tags:
        - insights
      operationId: Insights_getPath
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
    post:
      tags:
        - insights
      operationId: Insights_createOrUpdatePath
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/retention:
    get:
      tags:
        - insights
      operationId: Insights_projectRetentionGet
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
    post:
      tags:
        - insights
      operationId: Insights_createRetention
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/timing:
    post:
      tags:
        - insights
      operationId: Insights_createTimingInsight
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
  /api/projects/{project_id}/insights/trend:
    get:
      tags:
        - insights
      operationId: Insights_getTrend
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
    post:
      tags:
        - trend
        - insights
      operationId: Trend_createOrUpdatePath
      security:
        - PersonalAPIKeyAuth:
            - insight:read
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trend'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendResults'
            text/csv:
              schema:
                $ref: '#/components/schemas/TrendResults'
  /api/projects/{project_id}/notebooks:
    get:
      tags:
        - notebooks
      operationId: notebooks_list
      security:
        - PersonalAPIKeyAuth:
            - notebook:read
      description: >-
        The API for interacting with Notebooks. This feature is in early access
        and the API can have breaking changes without announcement.
      parameters:
        - description: |-
            Filter for notebooks that match a provided filter.
                            Each match pair is separated by a colon,
                            multiple match pairs can be sent separated by a space or a comma
          in: query
          name: contains
          schema:
            type: string
          examples:
            FilterForNotebooksThatHaveAnyRecording:
              summary: Filter for notebooks that have any recording
              value: recording:true
            FilterForNotebooksThatDoNotHaveAnyRecording:
              summary: Filter for notebooks that do not have any recording
              value: recording:false
            FilterForNotebooksThatHaveASpecificRecording:
              summary: Filter for notebooks that have a specific recording
              value: recording:the-session-recording-id
        - description: The UUID of the Notebook's creator
          in: query
          name: created_by
          schema:
            type: integer
        - description: Filter for notebooks created after this date & time
          in: query
          name: date_from
          schema:
            type: string
            format: date-time
        - description: Filter for notebooks created before this date & time
          in: query
          name: date_to
          schema:
            type: string
            format: date-time
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - description: >-
            If any value is provided for this parameter, return notebooks
            created by the logged in user.
          in: query
          name: user
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotebookMinimalList'
    post:
      tags:
        - notebooks
      operationId: notebooks_create
      security:
        - PersonalAPIKeyAuth:
            - notebook:write
      description: >-
        The API for interacting with Notebooks. This feature is in early access
        and the API can have breaking changes without announcement.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notebook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notebook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notebook'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notebook'
  /api/projects/{project_id}/notebooks/{short_id}:
    get:
      tags:
        - notebooks
      operationId: notebooks_retrieve
      security:
        - PersonalAPIKeyAuth:
            - notebook:read
      description: >-
        The API for interacting with Notebooks. This feature is in early access
        and the API can have breaking changes without announcement.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notebook'
    put:
      tags:
        - notebooks
      operationId: notebooks_update
      security:
        - PersonalAPIKeyAuth:
            - notebook:write
      description: >-
        The API for interacting with Notebooks. This feature is in early access
        and the API can have breaking changes without announcement.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notebook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notebook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notebook'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notebook'
    patch:
      tags:
        - notebooks
      operationId: Notebooks_updateNotebook
      security:
        - PersonalAPIKeyAuth:
            - notebook:write
      description: >-
        The API for interacting with Notebooks. This feature is in early access
        and the API can have breaking changes without announcement.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotebook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotebook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotebook'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notebook'
    delete:
      tags:
        - notebooks
      operationId: notebooks_destroy
      security:
        - PersonalAPIKeyAuth:
            - notebook:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/notebooks/{short_id}/activity:
    get:
      tags:
        - notebooks
      operationId: Notebooks_getActivityList
      security:
        - PersonalAPIKeyAuth:
            - activity_log:read
      description: >-
        The API for interacting with Notebooks. This feature is in early access
        and the API can have breaking changes without announcement.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notebook'
  /api/projects/{project_id}/notebooks/activity:
    get:
      tags:
        - notebooks
      operationId: Notebooks_getActivityList
      description: >-
        The API for interacting with Notebooks. This feature is in early access
        and the API can have breaking changes without announcement.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notebook'
  /api/projects/{project_id}/persons:
    get:
      tags:
        - persons
      operationId: persons_list
      security:
        - PersonalAPIKeyAuth:
            - person:read
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - description: Filter list by distinct id.
          in: query
          name: distinct_id
          schema:
            type: string
        - description: Filter persons by email (exact match)
          in: query
          name: email
          schema:
            type: string
          examples:
            Email:
              summary: email
              value: test@test.com
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - description: Filter Persons by person properties.
          in: query
          name: properties
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Property'
        - description: >-
            Search persons, either by email (full text search) or distinct_id
            (exact match).
          in: query
          name: search
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
  /api/projects/{project_id}/persons/{id}:
    get:
      tags:
        - persons
      operationId: persons_retrieve
      security:
        - PersonalAPIKeyAuth:
            - person:read
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this person.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
    put:
      tags:
        - persons
      operationId: persons_update
      security:
        - PersonalAPIKeyAuth:
            - person:write
      description: >-
        Only for setting properties on the person. "properties" from the request
        data will be updated via a "$set" event.

        This means that only the properties listed will be updated, but other
        properties won't be removed nor updated.

        If you would like to remove a property use the `delete_property`
        endpoint.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this person.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
    patch:
      tags:
        - persons
      operationId: Persons_updatePersonById
      security:
        - PersonalAPIKeyAuth:
            - person:write
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this person.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
    delete:
      tags:
        - persons
      operationId: persons_destroy
      security:
        - PersonalAPIKeyAuth:
            - person:write
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - description: >-
            If true, a task to delete all events associated with this person
            will be created and queued. The task does not run immediately and
            instead is batched together and at 5AM UTC every Sunday (controlled
            by environment variable CLEAR_CLICKHOUSE_REMOVED_DATA_SCHEDULE_CRON)
          in: query
          name: delete_events
          schema:
            type: boolean
            default: false
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this person.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/persons/{id}/activity:
    get:
      tags:
        - persons
      operationId: Persons_getActivity
      security:
        - PersonalAPIKeyAuth:
            - activity_log:read
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this person.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/{id}/delete_property:
    post:
      tags:
        - persons
      operationId: Persons_deletePropertyApi
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - description: Specify the property key to delete
          in: query
          name: $unset
          schema:
            type: string
          required: true
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this person.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/{id}/properties_timeline:
    get:
      tags:
        - persons
      operationId: Persons_getPropertiesTimeline
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this person.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/{id}/split:
    post:
      tags:
        - persons
      operationId: Persons_createOrUpdateSplit
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this person.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/{id}/update_property:
    post:
      tags:
        - persons
      operationId: Persons_createOrUpdateProperty
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: A unique integer value identifying this person.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: Specify the property key
          in: query
          name: key
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - description: Specify the property value
          in: query
          name: value
          schema: {}
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/activity:
    get:
      tags:
        - persons
      operationId: Persons_getActivity
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/cohorts:
    get:
      tags:
        - persons
      operationId: Persons_listCohorts
      security:
        - PersonalAPIKeyAuth:
            - person:read
            - cohort:read
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/funnel:
    get:
      tags:
        - persons
      operationId: Persons_getFunnel
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
    post:
      tags:
        - persons
      operationId: Persons_createOrUpdateFunnel
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/funnel/correlation:
    get:
      tags:
        - persons
      operationId: Persons_funnelCorrelationRetrieve
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
    post:
      tags:
        - persons
      operationId: Persons_createOrUpdateFunnelCorrelation
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/lifecycle:
    get:
      tags:
        - persons
      operationId: Persons_getLifecyclePath
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/path:
    get:
      tags:
        - persons
      operationId: Persons_getPath
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
    post:
      tags:
        - persons
      operationId: Persons_createOrUpdatePath
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/retention:
    get:
      tags:
        - persons
      operationId: Persons_retentionRetrieve
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/stickiness:
    get:
      tags:
        - persons
      operationId: Persons_getStickiness
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/trends:
    get:
      tags:
        - persons
      operationId: Persons_getTrends
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/persons/values:
    get:
      tags:
        - persons
      operationId: Persons_getValues
      description: >-
        To create or update persons, use a PostHog library of your choice and
        [use an identify call](https://app.posthog.com). This API endpoint is
        only for reading and deleting.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - json
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
  /api/projects/{project_id}/pipeline_destination_configs:
    get:
      tags:
        - pipeline_destination_configs
      operationId: Pipelinedestinationconfigs_getList
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginConfigList'
    post:
      tags:
        - pipeline_destination_configs
      operationId: Pipelinedestinationconfigs_createOrUpdate
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_destination_configs/{id}:
    get:
      tags:
        - pipeline_destination_configs
      operationId: Pipelinedestinationconfigs_get
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    put:
      tags:
        - pipeline_destination_configs
      operationId: Pipelinedestinationconfigs_updateById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    patch:
      tags:
        - pipeline_destination_configs
      operationId: Pipelinedestinationconfigs_patchById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    delete:
      tags:
        - pipeline_destination_configs
      operationId: Pipelinedestinationconfigs_deleteById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/pipeline_destination_configs/{id}/frontend:
    get:
      tags:
        - pipeline_destination_configs
      operationId: Pipelinedestinationconfigs_getFrontend
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_destination_configs/{id}/job:
    post:
      tags:
        - pipeline_destination_configs
      operationId: Pipelinedestinationconfigs_createJob
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_destination_configs/rearrange:
    patch:
      tags:
        - pipeline_destination_configs
      operationId: Pipelinedestinationconfigs_rearrangePartialUpdate
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_frontend_apps_configs:
    get:
      tags:
        - pipeline_frontend_apps_configs
      operationId: Pipelinefrontendappsconfigs_get
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginConfigList'
    post:
      tags:
        - pipeline_frontend_apps_configs
      operationId: Pipelinefrontendappsconfigs_createOrUpdate
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_frontend_apps_configs/{id}:
    get:
      tags:
        - pipeline_frontend_apps_configs
      operationId: Pipelinefrontendappsconfigs_getById
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    put:
      tags:
        - pipeline_frontend_apps_configs
      operationId: Pipelinefrontendappsconfigs_updateById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    patch:
      tags:
        - pipeline_frontend_apps_configs
      operationId: Pipelinefrontendappsconfigs_updateByIdPatch
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    delete:
      tags:
        - pipeline_frontend_apps_configs
      operationId: Pipelinefrontendappsconfigs_deleteById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/pipeline_frontend_apps_configs/{id}/frontend:
    get:
      tags:
        - pipeline_frontend_apps_configs
      operationId: Pipelinefrontendappsconfigs_getFrontend
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_frontend_apps_configs/{id}/job:
    post:
      tags:
        - pipeline_frontend_apps_configs
      operationId: Pipelinefrontendappsconfigs_createJob
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_frontend_apps_configs/rearrange:
    patch:
      tags:
        - pipeline_frontend_apps_configs
      operationId: Pipelinefrontendappsconfigs_rearrangePartialUpdate
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_import_apps_configs:
    get:
      tags:
        - pipeline_import_apps_configs
      operationId: Pipelineimportappsconfigs_getPipelineImportAppsConfigsList
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginConfigList'
    post:
      tags:
        - pipeline_import_apps_configs
      operationId: Pipelineimportappsconfigs_postPipelineImportAppsConfigs
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_import_apps_configs/{id}:
    get:
      tags:
        - pipeline_import_apps_configs
      operationId: Pipelineimportappsconfigs_getById
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    put:
      tags:
        - pipeline_import_apps_configs
      operationId: Pipelineimportappsconfigs_updatePipelineImportAppsConfigsById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    patch:
      tags:
        - pipeline_import_apps_configs
      operationId: Pipelineimportappsconfigs_patchById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    delete:
      tags:
        - pipeline_import_apps_configs
      operationId: Pipelineimportappsconfigs_deleteById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/pipeline_import_apps_configs/{id}/frontend:
    get:
      tags:
        - pipeline_import_apps_configs
      operationId: Pipelineimportappsconfigs_frontendRetrieve
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_import_apps_configs/{id}/job:
    post:
      tags:
        - pipeline_import_apps_configs
      operationId: Pipelineimportappsconfigs_createJob
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_import_apps_configs/rearrange:
    patch:
      tags:
        - pipeline_import_apps_configs
      operationId: Pipelineimportappsconfigs_rearrangePartialUpdate
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_transformation_configs:
    get:
      tags:
        - pipeline_transformation_configs
      operationId: Pipelinetransformationconfigs_list
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginConfigList'
    post:
      tags:
        - pipeline_transformation_configs
      operationId: Pipelinetransformationconfigs_createOrUpdate
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_transformation_configs/{id}:
    get:
      tags:
        - pipeline_transformation_configs
      operationId: Pipelinetransformationconfigs_getById
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    put:
      tags:
        - pipeline_transformation_configs
      operationId: Pipelinetransformationconfigs_updateById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    patch:
      tags:
        - pipeline_transformation_configs
      operationId: Pipelinetransformationconfigs_patchById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    delete:
      tags:
        - pipeline_transformation_configs
      operationId: Pipelinetransformationconfigs_deleteById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/pipeline_transformation_configs/{id}/frontend:
    get:
      tags:
        - pipeline_transformation_configs
      operationId: Pipelinetransformationconfigs_frontendRetrieve
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_transformation_configs/{id}/job:
    post:
      tags:
        - pipeline_transformation_configs
      operationId: Pipelinetransformationconfigs_createJob
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/pipeline_transformation_configs/rearrange:
    patch:
      tags:
        - pipeline_transformation_configs
      operationId: Pipelinetransformationconfigs_rearrangePartialUpdate
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/plugin_configs:
    get:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_getByProjectId
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginConfigList'
    post:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_createOrUpdate
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/plugin_configs/{id}:
    get:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_getByProjectId
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    put:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_updateByProjectId
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    patch:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_updateByIdPatch
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
    delete:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_deleteById
      security:
        - PersonalAPIKeyAuth:
            - plugin:write
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/plugin_configs/{id}/frontend:
    get:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_getFrontend
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/plugin_configs/{id}/job:
    post:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_createJob
      parameters:
        - description: A unique integer value identifying this plugin config.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/plugin_configs/{plugin_config_id}/logs:
    get:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_getLogs
      security:
        - PersonalAPIKeyAuth:
            - plugin:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - in: path
          name: plugin_config_id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginLogEntryList'
  /api/projects/{project_id}/plugin_configs/rearrange:
    patch:
      tags:
        - plugin_configs
      operationId: Pluginconfigs_rearrangePatch
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
  /api/projects/{project_id}/property_definitions:
    get:
      tags:
        - property_definitions
      operationId: Propertydefinitions_getByProjectIdPropertyDefinitions
      security:
        - PersonalAPIKeyAuth:
            - property_definition:read
      parameters:
        - description: >-
            If sent, response value will have `is_seen_on_filtered_events`
            populated. JSON-encoded
          in: query
          name: event_names
          schema:
            type: string
            minLength: 1
        - description: JSON-encoded list of excluded properties
          in: query
          name: excluded_properties
          schema:
            type: string
            minLength: 1
        - description: Whether to return only properties for events in `event_names`
          in: query
          name: filter_by_event_names
          schema:
            type: boolean
            nullable: true
        - description: >-
            What group type is the property for. Only should be set if
            `type=group`
          in: query
          name: group_type_index
          schema:
            type: integer
        - description: Whether to return only (or excluding) feature flag properties
          in: query
          name: is_feature_flag
          schema:
            type: boolean
            nullable: true
        - description: Whether to return only (or excluding) numerical property definitions
          in: query
          name: is_numerical
          schema:
            type: boolean
            nullable: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - description: Comma-separated list of properties to filter
          in: query
          name: properties
          schema:
            type: string
            minLength: 1
        - description: Searches properties by name
          in: query
          name: search
          schema:
            type: string
        - description: |-
            What property definitions to return

            * `event` - event
            * `person` - person
            * `group` - group
          in: query
          name: type
          schema:
            enum:
              - event
              - person
              - group
            type: string
            default: event
            minLength: 1
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/property_definitions/{id}:
    get:
      tags:
        - property_definitions
      operationId: Propertydefinitions_getById
      security:
        - PersonalAPIKeyAuth:
            - property_definition:read
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
    put:
      tags:
        - property_definitions
      operationId: Propertydefinitions_putByIdCamelCase
      security:
        - PersonalAPIKeyAuth:
            - property_definition:write
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
    patch:
      tags:
        - property_definitions
      operationId: Propertydefinitions_patchByIdProperty
      security:
        - PersonalAPIKeyAuth:
            - property_definition:write
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
    delete:
      tags:
        - property_definitions
      operationId: Propertydefinitions_deleteById
      security:
        - PersonalAPIKeyAuth:
            - property_definition:write
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/property_definitions/seen_together:
    get:
      tags:
        - property_definitions
      operationId: Propertydefinitions_getEventNamesSeenTogether
      security:
        - PersonalAPIKeyAuth:
            - property_definition:read
      description: >-
        Allows a caller to provide a list of event names and a single property
        name

        Returns a map of the event names to a boolean representing whether that
        property has ever been seen with that event_name
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/query:
    post:
      tags:
        - query
      operationId: query_create
      security:
        - PersonalAPIKeyAuth:
            - query:read
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QueryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QueryRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponseAlternative'
  /api/projects/{project_id}/query/{id}:
    get:
      tags:
        - query
      operationId: query_retrieve
      security:
        - PersonalAPIKeyAuth:
            - query:read
      description: (Experimental)
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query status
    delete:
      tags:
        - query
      operationId: query_destroy
      security:
        - PersonalAPIKeyAuth:
            - query:read
      description: (Experimental)
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Query cancelled
  /api/projects/{project_id}/query/draft_sql:
    get:
      tags:
        - query
      operationId: Query_draftSqlRetrieve
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/session_recording_playlists:
    get:
      tags:
        - session_recording_playlists
      operationId: Sessionrecordingplaylists_list
      security:
        - PersonalAPIKeyAuth:
            - session_recording_playlist:read
      parameters:
        - in: query
          name: created_by
          schema:
            type: integer
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: query
          name: short_id
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSessionRecordingPlaylistList'
    post:
      tags:
        - session_recording_playlists
      operationId: Sessionrecordingplaylists_createOrUpdate
      security:
        - PersonalAPIKeyAuth:
            - session_recording_playlist:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
  /api/projects/{project_id}/session_recording_playlists/{short_id}:
    get:
      tags:
        - session_recording_playlists
      operationId: Sessionrecordingplaylists_getByShortId
      security:
        - PersonalAPIKeyAuth:
            - session_recording_playlist:read
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
    put:
      tags:
        - session_recording_playlists
      operationId: Sessionrecordingplaylists_updateRecordingPlaylist
      security:
        - PersonalAPIKeyAuth:
            - session_recording_playlist:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
    patch:
      tags:
        - session_recording_playlists
      operationId: Sessionrecordingplaylists_updateShortId
      security:
        - PersonalAPIKeyAuth:
            - session_recording_playlist:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSessionRecordingPlaylist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSessionRecordingPlaylist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSessionRecordingPlaylist'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
    delete:
      tags:
        - session_recording_playlists
      operationId: Sessionrecordingplaylists_deleteById
      security:
        - PersonalAPIKeyAuth:
            - session_recording_playlist:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/session_recording_playlists/{short_id}/recordings:
    get:
      tags:
        - session_recording_playlists
      operationId: Sessionrecordingplaylists_getRecordings
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
  /api/projects/{project_id}/session_recording_playlists/{short_id}/recordings/{session_recording_id}:
    post:
      tags:
        - session_recording_playlists
      operationId: Sessionrecordingplaylists_createRecording
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: session_recording_id
          schema:
            type: string
          required: true
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
    delete:
      tags:
        - session_recording_playlists
      operationId: Sessionrecordingplaylists_deleteRecording
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: session_recording_id
          schema:
            type: string
          required: true
        - in: path
          name: short_id
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/session_recordings:
    get:
      tags:
        - session_recordings
      operationId: Sessionrecordings_getMultiple
      security:
        - PersonalAPIKeyAuth:
            - session_recording:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSessionRecordingList'
  /api/projects/{project_id}/session_recordings/{id}:
    get:
      tags:
        - session_recordings
      operationId: Sessionrecordings_getById
      security:
        - PersonalAPIKeyAuth:
            - session_recording:read
      parameters:
        - description: A UUID string identifying this session recording.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
    delete:
      tags:
        - session_recordings
      operationId: Sessionrecordings_deleteById
      security:
        - PersonalAPIKeyAuth:
            - session_recording:write
      parameters:
        - description: A UUID string identifying this session recording.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/session_recordings/{id}/persist:
    post:
      tags:
        - session_recordings
      operationId: Sessionrecordings_persistSessionRecording
      parameters:
        - description: A UUID string identifying this session recording.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRecording'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SessionRecording'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SessionRecording'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
  /api/projects/{project_id}/session_recordings/{id}/similar_sessions:
    get:
      tags:
        - session_recordings
      operationId: Sessionrecordings_getSimilarSessions
      parameters:
        - description: A UUID string identifying this session recording.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
  /api/projects/{project_id}/session_recordings/{id}/snapshots:
    get:
      tags:
        - session_recordings
      operationId: Sessionrecordings_snapshotsRetrieve
      description: >-
        Snapshots can be loaded from multiple places:

        1. From S3 if the session is older than our ingestion limit. This will
        be multiple files that can be streamed to the client

        2. or from Redis if the session is newer than our ingestion limit.


        Clients need to call this API twice.

        First without a source parameter to get a list of sources supported by
        the given session.

        And then once for each source in the returned list to get the actual
        snapshots.


        NB version 1 of this API has been deprecated and ClickHouse stored
        snapshots are no longer supported.
      parameters:
        - description: A UUID string identifying this session recording.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
  /api/projects/{project_id}/session_recordings/{id}/summarize:
    post:
      tags:
        - session_recordings
      operationId: Sessionrecordings_summarizeCreate
      parameters:
        - description: A UUID string identifying this session recording.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRecording'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SessionRecording'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SessionRecording'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
  /api/projects/{project_id}/session_recordings/{recording_id}/sharing:
    get:
      tags:
        - session_recordings
      operationId: Sessionrecordings_getSharing
      security:
        - PersonalAPIKeyAuth:
            - sharing_configuration:read
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: recording_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionrecordingsGetSharingResponse'
  /api/projects/{project_id}/session_recordings/error_clusters:
    get:
      tags:
        - session_recordings
      operationId: Sessionrecordings_getErrorClusters
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
  /api/projects/{project_id}/session_recordings/matching_events:
    get:
      tags:
        - session_recordings
      operationId: Sessionrecordings_getSessionRecordingMatchingEvents
      description: |2-

                Gets a list of event ids that match the given session recording filter.
                The filter must include a single session ID.
                And must include at least one event or action filter.
                This API is intended for internal use and might have unannounced breaking changes.
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
  /api/projects/{project_id}/session_recordings/properties:
    get:
      tags:
        - session_recordings
      operationId: Sessionrecordings_getProperties
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
  /api/projects/{project_id}/subscriptions:
    get:
      tags:
        - subscriptions
      operationId: subscriptions_list
      security:
        - PersonalAPIKeyAuth:
            - subscription:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionList'
    post:
      tags:
        - subscriptions
      operationId: subscriptions_create
      security:
        - PersonalAPIKeyAuth:
            - subscription:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /api/projects/{project_id}/subscriptions/{id}:
    get:
      tags:
        - subscriptions
      operationId: subscriptions_retrieve
      security:
        - PersonalAPIKeyAuth:
            - subscription:read
      parameters:
        - description: A unique integer value identifying this subscription.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    put:
      tags:
        - subscriptions
      operationId: subscriptions_update
      security:
        - PersonalAPIKeyAuth:
            - subscription:write
      parameters:
        - description: A unique integer value identifying this subscription.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    patch:
      tags:
        - subscriptions
      operationId: Subscriptions_updateById
      security:
        - PersonalAPIKeyAuth:
            - subscription:write
      parameters:
        - description: A unique integer value identifying this subscription.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    delete:
      tags:
        - subscriptions
      operationId: subscriptions_destroy
      security:
        - PersonalAPIKeyAuth:
            - subscription:write
      description: >-
        Hard delete of this model is not allowed. Use a patch API call to set
        "deleted" to true
      parameters:
        - description: A unique integer value identifying this subscription.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/projects/{project_id}/surveys:
    get:
      tags:
        - surveys
      operationId: surveys_list
      security:
        - PersonalAPIKeyAuth:
            - survey:read
      parameters:
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSurveyList'
    post:
      tags:
        - surveys
      operationId: surveys_create
      security:
        - PersonalAPIKeyAuth:
            - survey:write
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
  /api/projects/{project_id}/surveys/{id}:
    get:
      tags:
        - surveys
      operationId: surveys_retrieve
      security:
        - PersonalAPIKeyAuth:
            - survey:read
      parameters:
        - description: A UUID string identifying this survey.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
    put:
      tags:
        - surveys
      operationId: surveys_update
      security:
        - PersonalAPIKeyAuth:
            - survey:write
      parameters:
        - description: A UUID string identifying this survey.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
    patch:
      tags:
        - surveys
      operationId: Surveys_updateSurveyById
      security:
        - PersonalAPIKeyAuth:
            - survey:write
      parameters:
        - description: A UUID string identifying this survey.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurveySerializerCreateUpdateOnly'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurveySerializerCreateUpdateOnly'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurveySerializerCreateUpdateOnly'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
    delete:
      tags:
        - surveys
      operationId: surveys_destroy
      security:
        - PersonalAPIKeyAuth:
            - survey:write
      parameters:
        - description: A UUID string identifying this survey.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/surveys/responses_count:
    get:
      tags:
        - surveys
      operationId: Surveys_getResponsesCount
      parameters:
        - description: >-
            Project ID of the project you're trying to access. To find the ID of
            the project, make a call to /api/projects/.
          in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
  /api/users:
    get:
      tags:
        - users
      operationId: users_list
      security:
        - PersonalAPIKeyAuth:
            - user:read
      parameters:
        - in: query
          name: is_staff
          schema:
            type: boolean
        - description: Number of results to return per page.
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: The initial index from which to return the results.
          name: offset
          required: false
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
  /api/users/{uuid}:
    get:
      tags:
        - users
      operationId: users_retrieve
      security:
        - PersonalAPIKeyAuth:
            - user:read
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - users
      operationId: users_update
      security:
        - PersonalAPIKeyAuth:
            - user:write
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - users
      operationId: Users_patchUuid
      security:
        - PersonalAPIKeyAuth:
            - user:write
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{uuid}/request_email_verification:
    post:
      tags:
        - users
      operationId: Users_requestEmailVerificationCreate
      security:
        - {}
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{uuid}/scene_personalisation:
    post:
      tags:
        - users
      operationId: Users_createScenePersonalisation
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{uuid}/start_2fa_setup:
    get:
      tags:
        - users
      operationId: Users_start2faSetupRetrieve
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{uuid}/validate_2fa:
    post:
      tags:
        - users
      operationId: Users_validate2faCreate
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{uuid}/verify_email:
    post:
      tags:
        - users
      operationId: Users_verifyEmailCreate
      security:
        - {}
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    Action:
      description: >-
        Serializer mixin that resolves appropriate response for tags depending
        on license.
      type: object
      properties:
        tags:
          type: array
          items: {}
        description:
          type: string
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        post_to_slack:
          type: boolean
        slack_message_format:
          type: string
          maxLength: 600
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ActionStep'
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        deleted:
          type: boolean
        is_calculating:
          type: boolean
          readOnly: true
        last_calculated_at:
          type: string
          format: date-time
        team_id:
          type: integer
          readOnly: true
        is_action:
          type: boolean
          readOnly: true
          default: true
        bytecode_error:
          type: string
          readOnly: true
          nullable: true
      required:
        - bytecode_error
        - created_at
        - created_by
        - id
        - is_action
        - is_calculating
        - team_id
      x-konfig-properties:
        created_by:
          readOnly: true
    ActionStep:
      type: object
      properties:
        id:
          type: string
        event:
          type: string
          nullable: true
          maxLength: 400
        tag_name:
          type: string
          nullable: true
          maxLength: 400
        text:
          type: string
          nullable: true
          maxLength: 400
        text_matching:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/UrlMatchingEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        href:
          type: string
          nullable: true
          maxLength: 65535
        href_matching:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/UrlMatchingEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        selector:
          type: string
          nullable: true
          maxLength: 65535
        url:
          type: string
          nullable: true
          maxLength: 65535
        name:
          type: string
          nullable: true
          maxLength: 400
        url_matching:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/UrlMatchingEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        properties:
          nullable: true
    ActionsNode:
      title: ActionsNode
      properties:
        custom_name:
          title: Custom Name
          default: null
          type: string
          nullable: true
        fixedProperties:
          title: Fixedproperties
          description: >-
            Fixed properties in the query, can't be edited in the interface
            (e.g. scoping down by person)
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        id:
          title: Id
          type: integer
        kind:
          title: Kind
          const: ActionsNode
          default: ActionsNode
        math:
          title: Math
          anyOf:
            - $ref: '#/components/schemas/BaseMathType'
            - $ref: '#/components/schemas/PropertyMathType'
            - $ref: '#/components/schemas/CountPerActorMathType'
            - const: unique_group
            - const: hogql
          default: null
          nullable: true
        math_group_type_index:
          $ref: '#/components/schemas/MathGroupTypeIndexNullable'
        math_hogql:
          title: Math Hogql
          default: null
          type: string
          nullable: true
        math_property:
          title: Math Property
          default: null
          type: string
          nullable: true
        name:
          title: Name
          default: null
          type: string
          nullable: true
        properties:
          title: Properties
          description: Properties configurable in the interface
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        response:
          title: Response
          description: Cached query response
          default: null
          type: object
          nullable: true
      required:
        - id
      type: object
    ActivityLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          $ref: '#/components/schemas/UserBasic'
        unread:
          description: is the date of this log item newer than the user's bookmark
          type: boolean
          readOnly: true
        organization_id:
          type: string
          format: uuid
          nullable: true
        was_impersonated:
          type: boolean
          nullable: true
        is_system:
          type: boolean
          nullable: true
        activity:
          type: string
          maxLength: 79
        item_id:
          type: string
          nullable: true
          maxLength: 72
        scope:
          type: string
          maxLength: 79
        detail:
          nullable: true
        created_at:
          type: string
          format: date-time
      required:
        - activity
        - id
        - scope
        - unread
        - user
    ActorsQuery:
      title: ActorsQuery
      properties:
        fixedProperties:
          title: Fixedproperties
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        kind:
          title: Kind
          const: ActorsQuery
          default: ActorsQuery
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        orderBy:
          title: Orderby
          default: null
          items:
            type: string
          type: array
          nullable: true
        properties:
          title: Properties
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        response:
          $ref: '#/components/schemas/ActorsQueryResponseNullable'
        search:
          title: Search
          default: null
          type: string
          nullable: true
        select:
          title: Select
          default: null
          items:
            type: string
          type: array
          nullable: true
        source:
          title: Source
          anyOf:
            - $ref: '#/components/schemas/InsightActorsQuery'
            - $ref: '#/components/schemas/FunnelsActorsQuery'
            - $ref: '#/components/schemas/FunnelCorrelationActorsQuery'
            - $ref: '#/components/schemas/HogQLQuery'
          default: null
          nullable: true
      type: object
    ActorsQueryResponse:
      title: ActorsQueryResponse
      properties: &ref_0
        columns:
          title: Columns
          items: {}
          type: array
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          type: string
        limit:
          title: Limit
          type: integer
        missing_actors_count:
          title: Missing Actors Count
          default: null
          type: integer
          nullable: true
        offset:
          title: Offset
          type: integer
        results:
          title: Results
          items:
            items: {}
            type: array
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          items:
            type: string
          type: array
      required: &ref_1
        - columns
        - hogql
        - limit
        - offset
        - results
        - types
      type: object
    AggregationAxisFormat:
      title: AggregationAxisFormat
      enum:
        - numeric
        - duration
        - duration_ms
        - percentage
        - percentage_scaled
      type: string
    Annotation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
          maxLength: 400
        date_marker:
          type: string
          format: date-time
          nullable: true
        creation_type:
          $ref: '#/components/schemas/CreationTypeEnum'
        dashboard_item:
          type: integer
          nullable: true
        insight_short_id:
          type: string
          nullable: true
          readOnly: true
        insight_name:
          type: string
          nullable: true
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
        scope:
          $ref: '#/components/schemas/AnnotationScopeEnum'
      required:
        - created_at
        - created_by
        - id
        - insight_name
        - insight_short_id
        - updated_at
      x-konfig-properties:
        created_by:
          readOnly: true
    AnnotationScopeEnum:
      description: |-
        * `dashboard_item` - insight
        * `project` - project
        * `organization` - organization
      enum:
        - dashboard_item
        - project
        - organization
      type: string
    AutocompleteCompletionItem:
      title: AutocompleteCompletionItem
      properties:
        detail:
          title: Detail
          description: >-
            A human-readable string with additional information about this item,
            like type or symbol information.
          default: null
          type: string
          nullable: true
        documentation:
          title: Documentation
          description: A human-readable string that represents a doc-comment.
          default: null
          type: string
          nullable: true
        insertText:
          title: Inserttext
          description: >-
            A string or snippet that should be inserted in a document when
            selecting this completion.
          type: string
        kind:
          $ref: '#/components/schemas/Kind'
        label:
          title: Label
          description: >-
            The label of this completion item. By default this is also the text
            that is inserted when selecting this completion.
          type: string
      required:
        - insertText
        - kind
        - label
      type: object
      x-konfig-properties:
        kind:
          description: >-
            The kind of this completion item. Based on the kind an icon is
            chosen by the editor.
    BaseMathType:
      title: BaseMathType
      enum:
        - total
        - dau
        - weekly_active
        - monthly_active
        - unique_session
      type: string
    BatchExport:
      description: Serializer for a BatchExport model.
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team_id:
          description: The team this belongs to.
          type: integer
          readOnly: true
        name:
          description: A human-readable name for this BatchExport.
          type: string
        destination:
          $ref: '#/components/schemas/BatchExportDestination'
        interval:
          $ref: '#/components/schemas/IntervalEnum'
        paused:
          description: Whether this BatchExport is paused or not.
          type: boolean
        created_at:
          description: The timestamp at which this BatchExport was created.
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          description: The timestamp at which this BatchExport was last updated.
          type: string
          format: date-time
          readOnly: true
        last_paused_at:
          description: The timestamp at which this BatchExport was last paused.
          type: string
          format: date-time
          nullable: true
        start_at:
          description: Time before which any Batch Export runs won't be triggered.
          type: string
          format: date-time
          nullable: true
        end_at:
          description: Time after which any Batch Export runs won't be triggered.
          type: string
          format: date-time
          nullable: true
        latest_runs:
          type: array
          items:
            $ref: '#/components/schemas/BatchExportRun'
          readOnly: true
        hogql_query:
          type: string
        schema:
          description: A schema of custom fields to select when exporting data.
          readOnly: true
          nullable: true
      required:
        - created_at
        - destination
        - id
        - interval
        - last_updated_at
        - latest_runs
        - name
        - schema
        - team_id
    BatchExportDestination:
      description: Serializer for an BatchExportDestination model.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BatchExportDestinationTypeEnum'
        config:
          description: >-
            A JSON field to store all configuration parameters required to
            access a BatchExportDestination.
      required:
        - type
      x-konfig-properties:
        type:
          description: |-
            A choice of supported BatchExportDestination types.

            * `S3` - S3
            * `Snowflake` - Snowflake
            * `Postgres` - Postgres
            * `Redshift` - Redshift
            * `BigQuery` - Bigquery
            * `HTTP` - Http
            * `NoOp` - Noop
    BatchExportDestinationTypeEnum:
      description: |-
        * `S3` - S3
        * `Snowflake` - Snowflake
        * `Postgres` - Postgres
        * `Redshift` - Redshift
        * `BigQuery` - Bigquery
        * `HTTP` - Http
        * `NoOp` - Noop
      enum:
        - S3
        - Snowflake
        - Postgres
        - Redshift
        - BigQuery
        - HTTP
        - NoOp
      type: string
    BatchExportLogEntry:
      type: object
      properties:
        team_id:
          type: integer
        batch_export_id:
          type: string
        run_id:
          type: string
        timestamp:
          type: string
          format: date-time
        level:
          $ref: '#/components/schemas/BatchExportLogEntryLevelEnum'
        message:
          type: string
      required:
        - batch_export_id
        - level
        - message
        - run_id
        - team_id
        - timestamp
    BatchExportLogEntryLevelEnum:
      description: |-
        * `DEBUG` - DEBUG
        * `LOG` - LOG
        * `INFO` - INFO
        * `WARNING` - WARNING
        * `ERROR` - ERROR
      enum:
        - DEBUG
        - LOG
        - INFO
        - WARNING
        - ERROR
      type: string
    BatchExportRun:
      description: Serializer for a BatchExportRun model.
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        records_completed:
          description: The number of records that have been exported.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        latest_error:
          description: The latest error that occurred during this run.
          type: string
          nullable: true
        data_interval_start:
          description: The start of the data interval.
          type: string
          format: date-time
        data_interval_end:
          description: The end of the data interval.
          type: string
          format: date-time
        cursor:
          description: An opaque cursor that may be used to resume.
          type: string
          nullable: true
        created_at:
          description: The timestamp at which this BatchExportRun was created.
          type: string
          format: date-time
          readOnly: true
        finished_at:
          description: >-
            The timestamp at which this BatchExportRun finished, successfully or
            not.
          type: string
          format: date-time
          nullable: true
        last_updated_at:
          description: The timestamp at which this BatchExportRun was last updated.
          type: string
          format: date-time
          readOnly: true
        records_total_count:
          description: >-
            The total count of records that should be exported in this
            BatchExportRun.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        batch_export:
          description: The BatchExport this run belongs to.
          type: string
          format: uuid
          readOnly: true
      required:
        - batch_export
        - created_at
        - data_interval_end
        - data_interval_start
        - id
        - last_updated_at
        - status
      x-konfig-properties:
        status:
          description: |-
            The status of this run.

            * `Cancelled` - Cancelled
            * `Completed` - Completed
            * `ContinuedAsNew` - Continued As New
            * `Failed` - Failed
            * `FailedRetryable` - Failed Retryable
            * `Terminated` - Terminated
            * `TimedOut` - Timedout
            * `Running` - Running
            * `Starting` - Starting
    BlankEnum:
      enum:
        - ''
      type: string
    Breakdown:
      title: Breakdown
      properties:
        normalize_url:
          title: Normalize Url
          default: null
          type: boolean
          nullable: true
        property:
          title: Property
          anyOf:
            - type: string
            - type: number
        type:
          $ref: '#/components/schemas/BreakdownType'
      required:
        - property
        - type
      type: object
    BreakdownAttributionType:
      title: BreakdownAttributionType
      enum:
        - first_touch
        - last_touch
        - all_events
        - step
      type: string
    BreakdownFilter:
      title: BreakdownFilter
      properties: &ref_13
        breakdown:
          title: Breakdown
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
        breakdown_group_type_index:
          title: Breakdown Group Type Index
          default: null
          type: integer
          nullable: true
        breakdown_hide_other_aggregation:
          title: Breakdown Hide Other Aggregation
          default: null
          type: boolean
          nullable: true
        breakdown_histogram_bin_count:
          title: Breakdown Histogram Bin Count
          default: null
          type: integer
          nullable: true
        breakdown_limit:
          title: Breakdown Limit
          default: null
          type: integer
          nullable: true
        breakdown_normalize_url:
          title: Breakdown Normalize Url
          default: null
          type: boolean
          nullable: true
        breakdown_type:
          $ref: '#/components/schemas/BreakdownTypeNullable'
        breakdowns:
          title: Breakdowns
          default: null
          items:
            $ref: '#/components/schemas/Breakdown'
          type: array
          nullable: true
      type: object
    BreakdownItem:
      title: BreakdownItem
      properties:
        label:
          title: Label
          type: string
        value:
          title: Value
          anyOf:
            - type: string
            - type: integer
      required:
        - label
        - value
      type: object
    BreakdownType:
      title: BreakdownType
      enum:
        - cohort
        - person
        - event
        - group
        - session
        - hogql
        - data_warehouse
      type: string
    BreakdownTypeEnum:
      description: |-
        * `event` - event
        * `person` - person
        * `cohort` - cohort
        * `group` - group
        * `session` - session
        * `hogql` - hogql
      enum:
        - event
        - person
        - cohort
        - group
        - session
        - hogql
      type: string
    ByweekdayEnum:
      description: |-
        * `monday` - Monday
        * `tuesday` - Tuesday
        * `wednesday` - Wednesday
        * `thursday` - Thursday
        * `friday` - Friday
        * `saturday` - Saturday
        * `sunday` - Sunday
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      type: string
    ChartAxis:
      title: ChartAxis
      properties: &ref_2
        column:
          title: Column
          type: string
      required: &ref_3
        - column
      type: object
    ChartDisplayType:
      title: ChartDisplayType
      enum:
        - ActionsLineGraph
        - ActionsBar
        - ActionsAreaGraph
        - ActionsLineGraphCumulative
        - BoldNumber
        - ActionsPie
        - ActionsBarValue
        - ActionsTable
        - WorldMap
      type: string
    ChartSettings:
      title: ChartSettings
      properties: &ref_4
        goalLines:
          title: Goallines
          default: null
          items:
            $ref: '#/components/schemas/GoalLine'
          type: array
          nullable: true
        xAxis:
          $ref: '#/components/schemas/ChartAxisNullable'
        yAxis:
          title: Yaxis
          default: null
          items:
            $ref: '#/components/schemas/ChartAxis'
          type: array
          nullable: true
      type: object
    ClickhouseEvent:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        distinct_id:
          type: string
          readOnly: true
        properties:
          type: string
          readOnly: true
        event:
          type: string
          readOnly: true
        timestamp:
          type: string
          readOnly: true
        person:
          type: string
          readOnly: true
        elements:
          type: string
          readOnly: true
        elements_chain:
          type: string
          readOnly: true
      required:
        - distinct_id
        - elements
        - elements_chain
        - event
        - id
        - person
        - properties
        - timestamp
    Cohort:
      type: object
      properties:
        description:
          type: string
          maxLength: 1000
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        groups: {}
        deleted:
          type: boolean
        filters:
          nullable: true
        query:
          nullable: true
        is_calculating:
          type: boolean
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        last_calculation:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        errors_calculating:
          type: integer
          readOnly: true
        count:
          type: integer
          readOnly: true
          nullable: true
        is_static:
          type: boolean
      required:
        - count
        - created_at
        - created_by
        - errors_calculating
        - id
        - is_calculating
        - last_calculation
      x-konfig-properties:
        created_by:
          readOnly: true
    CohortPropertyFilter:
      title: CohortPropertyFilter
      properties:
        key:
          title: Key
          const: id
          default: id
        label:
          title: Label
          default: null
          type: string
          nullable: true
        type:
          title: Type
          const: cohort
          default: cohort
        value:
          title: Value
          type: integer
      required:
        - value
      type: object
    Compare:
      title: Compare
      enum:
        - current
        - previous
      type: string
    CompareItem:
      title: CompareItem
      properties:
        label:
          title: Label
          type: string
        value:
          title: Value
          type: string
      required:
        - label
        - value
      type: object
    CorrelationType:
      title: CorrelationType
      enum:
        - success
        - failure
      type: string
    CountPerActorMathType:
      title: CountPerActorMathType
      enum:
        - avg_count_per_actor
        - min_count_per_actor
        - max_count_per_actor
        - median_count_per_actor
        - p90_count_per_actor
        - p95_count_per_actor
        - p99_count_per_actor
      type: string
    CreationModeEnum:
      description: |-
        * `default` - Default
        * `template` - Template
        * `duplicate` - Duplicate
      enum:
        - default
        - template
        - duplicate
      type: string
    CreationTypeEnum:
      description: |-
        * `USR` - user
        * `GIT` - GitHub
      enum:
        - USR
        - GIT
      type: string
    Dashboard:
      description: >-
        Serializer mixin that resolves appropriate response for tags depending
        on license.
      type: object
      properties:
        tags:
          type: array
          items: {}
        description:
          type: string
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        pinned:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        is_shared:
          type: boolean
          readOnly: true
        deleted:
          type: boolean
        creation_mode:
          $ref: '#/components/schemas/CreationModeEnum'
        use_template:
          type: string
          writeOnly: true
        use_dashboard:
          type: integer
          writeOnly: true
          nullable: true
        delete_insights:
          type: boolean
          writeOnly: true
          default: false
        filters: {}
        tiles:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
          readOnly: true
        restriction_level:
          $ref: '#/components/schemas/RestrictionLevelEnum'
        effective_restriction_level:
          $ref: '#/components/schemas/EffectiveRestrictionLevelEnum'
        effective_privilege_level:
          $ref: '#/components/schemas/EffectivePrivilegeLevelEnum'
      required:
        - created_at
        - created_by
        - creation_mode
        - effective_privilege_level
        - effective_restriction_level
        - id
        - is_shared
        - tiles
      x-konfig-properties:
        created_by:
          readOnly: true
        creation_mode:
          readOnly: true
        restriction_level:
          minimum: 0
          maximum: 32767
        effective_restriction_level:
          readOnly: true
        effective_privilege_level:
          readOnly: true
    DashboardBasic:
      description: >-
        Serializer mixin that resolves appropriate response for tags depending
        on license.
      type: object
      properties:
        tags:
          type: array
          items: {}
        description:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        pinned:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        is_shared:
          type: boolean
          readOnly: true
        deleted:
          type: boolean
          readOnly: true
        creation_mode:
          $ref: '#/components/schemas/CreationModeEnum'
        restriction_level:
          $ref: '#/components/schemas/RestrictionLevelEnum'
        effective_restriction_level:
          $ref: '#/components/schemas/EffectiveRestrictionLevelEnum'
        effective_privilege_level:
          $ref: '#/components/schemas/EffectivePrivilegeLevelEnum'
      required:
        - created_at
        - created_by
        - creation_mode
        - deleted
        - description
        - effective_privilege_level
        - effective_restriction_level
        - id
        - is_shared
        - name
        - pinned
        - restriction_level
      x-konfig-properties:
        created_by:
          readOnly: true
        creation_mode:
          readOnly: true
        restriction_level:
          readOnly: true
        effective_restriction_level:
          readOnly: true
        effective_privilege_level:
          readOnly: true
    DashboardCollaborator:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        dashboard_id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/UserBasic'
        level:
          $ref: '#/components/schemas/LevelD7eEnum'
        added_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user_uuid:
          type: string
          format: uuid
          writeOnly: true
      required:
        - added_at
        - dashboard_id
        - id
        - level
        - updated_at
        - user
        - user_uuid
      x-konfig-properties:
        user:
          readOnly: true
        level:
          minimum: 0
          maximum: 32767
    DashboardTemplate:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
          nullable: true
        id:
          type: string
          format: uuid
          readOnly: true
        template_name:
          type: string
          nullable: true
          maxLength: 400
        dashboard_description:
          type: string
          nullable: true
          maxLength: 400
        dashboard_filters:
          nullable: true
        tiles:
          nullable: true
        variables:
          nullable: true
        deleted:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_by:
          type: integer
          nullable: true
        image_url:
          type: string
          nullable: true
          maxLength: 8201
        team_id:
          type: integer
          nullable: true
          readOnly: true
        scope:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DashboardTemplateScopeEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
      required:
        - created_at
        - id
        - team_id
    DashboardTemplateScopeEnum:
      description: |-
        * `team` - Only team
        * `global` - Global
        * `feature_flag` - Feature Flag
      enum:
        - team
        - global
        - feature_flag
      type: string
    DashboardTileBasic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dashboard_id:
          type: integer
          readOnly: true
        deleted:
          type: boolean
          nullable: true
      required:
        - dashboard_id
        - id
    DataTableNode:
      title: DataTableNode
      properties:
        allowSorting:
          title: Allowsorting
          description: >-
            Can the user click on column headers to sort the table? (default:
            true)
          default: null
          type: boolean
          nullable: true
        columns:
          title: Columns
          description: Columns shown in the table, unless the `source` provides them.
          default: null
          items:
            type: string
          type: array
          nullable: true
        embedded:
          title: Embedded
          description: Uses the embedded version of LemonTable
          default: null
          type: boolean
          nullable: true
        expandable:
          title: Expandable
          description: 'Can expand row to show raw event data (default: true)'
          default: null
          type: boolean
          nullable: true
        full:
          title: Full
          description: Show with most visual options enabled. Used in scenes.
          default: null
          type: boolean
          nullable: true
        hiddenColumns:
          title: Hiddencolumns
          description: >-
            Columns that aren't shown in the table, even if in columns or
            returned data
          default: null
          items:
            type: string
          type: array
          nullable: true
        kind:
          title: Kind
          const: DataTableNode
          default: DataTableNode
        propertiesViaUrl:
          title: Propertiesviaurl
          description: 'Link properties via the URL (default: false)'
          default: null
          type: boolean
          nullable: true
        showActions:
          title: Showactions
          description: Show the kebab menu at the end of the row
          default: null
          type: boolean
          nullable: true
        showColumnConfigurator:
          title: Showcolumnconfigurator
          description: Show a button to configure the table's columns if possible
          default: null
          type: boolean
          nullable: true
        showDateRange:
          title: Showdaterange
          description: Show date range selector
          default: null
          type: boolean
          nullable: true
        showElapsedTime:
          title: Showelapsedtime
          description: Show the time it takes to run a query
          default: null
          type: boolean
          nullable: true
        showEventFilter:
          title: Showeventfilter
          description: Include an event filter above the table (EventsNode only)
          default: null
          type: boolean
          nullable: true
        showExport:
          title: Showexport
          description: Show the export button
          default: null
          type: boolean
          nullable: true
        showHogQLEditor:
          title: Showhogqleditor
          description: Include a HogQL query editor above HogQL tables
          default: null
          type: boolean
          nullable: true
        showOpenEditorButton:
          title: Showopeneditorbutton
          description: >-
            Show a button to open the current query as a new insight. (default:
            true)
          default: null
          type: boolean
          nullable: true
        showPersistentColumnConfigurator:
          title: Showpersistentcolumnconfigurator
          description: >-
            Show a button to configure and persist the table's default columns
            if possible
          default: null
          type: boolean
          nullable: true
        showPropertyFilter:
          title: Showpropertyfilter
          description: Include a property filter above the table
          default: null
          type: boolean
          nullable: true
        showReload:
          title: Showreload
          description: Show a reload button
          default: null
          type: boolean
          nullable: true
        showResultsTable:
          title: Showresultstable
          description: Show a results table
          default: null
          type: boolean
          nullable: true
        showSavedQueries:
          title: Showsavedqueries
          description: Shows a list of saved queries
          default: null
          type: boolean
          nullable: true
        showSearch:
          title: Showsearch
          description: Include a free text search field (PersonsNode only)
          default: null
          type: boolean
          nullable: true
        showTestAccountFilters:
          title: Showtestaccountfilters
          description: Show filter to exclude test accounts
          default: null
          type: boolean
          nullable: true
        showTimings:
          title: Showtimings
          description: Show a detailed query timing breakdown
          default: null
          type: boolean
          nullable: true
        source:
          title: Source
          description: Source of the events
          anyOf:
            - $ref: '#/components/schemas/EventsNode'
            - $ref: '#/components/schemas/EventsQuery'
            - $ref: '#/components/schemas/PersonsNode'
            - $ref: '#/components/schemas/ActorsQuery'
            - $ref: '#/components/schemas/HogQLQuery'
            - $ref: '#/components/schemas/TimeToSeeDataSessionsQuery'
            - $ref: '#/components/schemas/WebOverviewQuery'
            - $ref: '#/components/schemas/WebStatsTableQuery'
            - $ref: '#/components/schemas/WebTopClicksQuery'
      required:
        - source
      type: object
    DataVisualizationNode:
      title: DataVisualizationNode
      properties:
        chartSettings:
          $ref: '#/components/schemas/ChartSettingsNullable'
        display:
          $ref: '#/components/schemas/ChartDisplayTypeNullable'
        kind:
          title: Kind
          const: DataVisualizationNode
          default: DataVisualizationNode
        source:
          $ref: '#/components/schemas/HogQLQuery'
      required:
        - source
      type: object
    DataWarehouseEventsModifier:
      title: DataWarehouseEventsModifier
      properties:
        distinct_id_field:
          title: Distinct Id Field
          type: string
        id_field:
          title: Id Field
          type: string
        table_name:
          title: Table Name
          type: string
        timestamp_field:
          title: Timestamp Field
          type: string
      required:
        - distinct_id_field
        - id_field
        - table_name
        - timestamp_field
      type: object
    DataWarehouseNode:
      title: DataWarehouseNode
      properties:
        custom_name:
          title: Custom Name
          default: null
          type: string
          nullable: true
        distinct_id_field:
          title: Distinct Id Field
          type: string
        fixedProperties:
          title: Fixedproperties
          description: >-
            Fixed properties in the query, can't be edited in the interface
            (e.g. scoping down by person)
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        id:
          title: Id
          type: string
        id_field:
          title: Id Field
          type: string
        kind:
          title: Kind
          const: DataWarehouseNode
          default: DataWarehouseNode
        math:
          title: Math
          anyOf:
            - $ref: '#/components/schemas/BaseMathType'
            - $ref: '#/components/schemas/PropertyMathType'
            - $ref: '#/components/schemas/CountPerActorMathType'
            - const: unique_group
            - const: hogql
          default: null
          nullable: true
        math_group_type_index:
          $ref: '#/components/schemas/MathGroupTypeIndexNullable'
        math_hogql:
          title: Math Hogql
          default: null
          type: string
          nullable: true
        math_property:
          title: Math Property
          default: null
          type: string
          nullable: true
        name:
          title: Name
          default: null
          type: string
          nullable: true
        properties:
          title: Properties
          description: Properties configurable in the interface
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        response:
          title: Response
          description: Cached query response
          default: null
          type: object
          nullable: true
        table_name:
          title: Table Name
          type: string
        timestamp_field:
          title: Timestamp Field
          type: string
      required:
        - distinct_id_field
        - id
        - id_field
        - table_name
        - timestamp_field
      type: object
    DataWarehousePersonPropertyFilter:
      title: DataWarehousePersonPropertyFilter
      properties:
        key:
          title: Key
          type: string
        label:
          title: Label
          default: null
          type: string
          nullable: true
        operator:
          $ref: '#/components/schemas/PropertyOperator'
        type:
          title: Type
          const: data_warehouse_person_property
          default: data_warehouse_person_property
        value:
          title: Value
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
      required:
        - key
        - operator
      type: object
    DataWarehousePropertyFilter:
      title: DataWarehousePropertyFilter
      properties:
        key:
          title: Key
          type: string
        label:
          title: Label
          default: null
          type: string
          nullable: true
        operator:
          $ref: '#/components/schemas/PropertyOperator'
        type:
          title: Type
          const: data_warehouse
          default: data_warehouse
        value:
          title: Value
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
      required:
        - key
        - operator
      type: object
    DatabaseSchemaQuery:
      title: DatabaseSchemaQuery
      properties:
        kind:
          title: Kind
          const: DatabaseSchemaQuery
          default: DatabaseSchemaQuery
        response:
          title: Response
          description: Cached query response
          default: null
          additionalProperties:
            items:
              $ref: '#/components/schemas/DatabaseSchemaQueryResponseField'
            type: array
          type: object
          nullable: true
      type: object
    DatabaseSchemaQueryResponseField:
      title: DatabaseSchemaQueryResponseField
      properties:
        chain:
          title: Chain
          default: null
          items:
            type: string
          type: array
          nullable: true
        fields:
          title: Fields
          default: null
          items:
            type: string
          type: array
          nullable: true
        key:
          title: Key
          type: string
        table:
          title: Table
          default: null
          type: string
          nullable: true
        type:
          title: Type
          type: string
      required:
        - key
        - type
      type: object
    DateRange:
      title: DateRange
      properties: &ref_14
        date_from:
          title: Date From
          default: null
          type: string
          nullable: true
        date_to:
          title: Date To
          default: null
          type: string
          nullable: true
        explicitDate:
          title: Explicitdate
          description: >-
            Whether the date_from and date_to should be used verbatim. Disables
            rounding to the start and end of period.
          default: null
          type: boolean
          nullable: true
      type: object
    DayItem:
      title: DayItem
      properties:
        label:
          title: Label
          type: string
        value:
          title: Value
          anyOf:
            - type: string
            - format: date-time
              type: string
            - type: integer
      required:
        - label
        - value
      type: object
    DisplayEnum:
      description: |-
        * `ActionsLineGraph` - ActionsLineGraph
        * `ActionsLineGraphCumulative` - ActionsLineGraphCumulative
        * `ActionsTable` - ActionsTable
        * `ActionsPie` - ActionsPie
        * `ActionsBar` - ActionsBar
        * `ActionsBarValue` - ActionsBarValue
        * `WorldMap` - WorldMap
        * `BoldNumber` - BoldNumber
      enum:
        - ActionsLineGraph
        - ActionsLineGraphCumulative
        - ActionsTable
        - ActionsPie
        - ActionsBar
        - ActionsBarValue
        - WorldMap
        - BoldNumber
      type: string
    EarlyAccessFeature:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
          readOnly: true
        feature_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        name:
          type: string
          maxLength: 200
        stage:
          $ref: '#/components/schemas/StageEnum'
        documentation_url:
          type: string
          format: uri
          maxLength: 800
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - created_at
        - feature_flag
        - id
        - name
        - stage
      x-konfig-properties:
        feature_flag:
          readOnly: true
    EarlyAccessFeatureSerializerCreateOnly:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        stage:
          $ref: '#/components/schemas/StageEnum'
        documentation_url:
          type: string
          format: uri
          maxLength: 800
        created_at:
          type: string
          format: date-time
          readOnly: true
        feature_flag_id:
          type: integer
          writeOnly: true
        feature_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
      required:
        - created_at
        - feature_flag
        - id
        - name
        - stage
      x-konfig-properties:
        feature_flag:
          readOnly: true
    EffectiveMembershipLevelEnum:
      enum:
        - 1
        - 8
        - 15
      type: integer
    EffectivePrivilegeLevelEnum:
      enum:
        - 21
        - 37
      type: integer
    EffectiveRestrictionLevelEnum:
      enum:
        - 21
        - 37
      type: integer
    ElementPropertyFilter:
      title: ElementPropertyFilter
      properties:
        key:
          $ref: '#/components/schemas/Key'
        label:
          title: Label
          default: null
          type: string
          nullable: true
        operator:
          $ref: '#/components/schemas/PropertyOperator'
        type:
          title: Type
          const: element
          default: element
        value:
          title: Value
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
      required:
        - key
        - operator
      type: object
    ElementType:
      title: ElementType
      properties:
        attr_class:
          title: Attr Class
          default: null
          items:
            type: string
          type: array
          nullable: true
        attr_id:
          title: Attr Id
          default: null
          type: string
          nullable: true
        attributes:
          title: Attributes
          additionalProperties:
            type: string
          type: object
        href:
          title: Href
          default: null
          type: string
          nullable: true
        nth_child:
          title: Nth Child
          default: null
          type: number
          nullable: true
        nth_of_type:
          title: Nth Of Type
          default: null
          type: number
          nullable: true
        order:
          title: Order
          default: null
          type: number
          nullable: true
        tag_name:
          title: Tag Name
          type: string
        text:
          title: Text
          default: null
          type: string
          nullable: true
      required:
        - attributes
        - tag_name
      type: object
    EmptyPropertyFilter:
      title: EmptyPropertyFilter
      properties: {}
      type: object
    EntityType:
      title: EntityType
      enum:
        - actions
        - events
        - data_warehouse
        - new_entity
      type: string
    EventDefinition:
      title: EventDefinition
      properties:
        elements:
          title: Elements
          items: {}
          type: array
        event:
          title: Event
          type: string
        properties:
          title: Properties
          type: object
      required:
        - elements
        - event
        - properties
      type: object
    EventOddsRatioSerialized:
      title: EventOddsRatioSerialized
      properties:
        correlation_type:
          $ref: '#/components/schemas/CorrelationType'
        event:
          $ref: '#/components/schemas/EventDefinition'
        failure_count:
          title: Failure Count
          type: integer
        odds_ratio:
          title: Odds Ratio
          type: number
        success_count:
          title: Success Count
          type: integer
      required:
        - correlation_type
        - event
        - failure_count
        - odds_ratio
        - success_count
      type: object
    EventPropertyFilter:
      title: EventPropertyFilter
      properties:
        key:
          title: Key
          type: string
        label:
          title: Label
          default: null
          type: string
          nullable: true
        operator:
          $ref: '#/components/schemas/PropertyOperator'
        type:
          title: Type
          description: Event properties
          const: event
          default: event
        value:
          title: Value
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
      required:
        - key
        - operator
      type: object
    EventType:
      title: EventType
      properties:
        distinct_id:
          title: Distinct Id
          type: string
        elements:
          title: Elements
          items:
            $ref: '#/components/schemas/ElementType'
          type: array
        elements_chain:
          title: Elements Chain
          default: null
          type: string
          nullable: true
        event:
          title: Event
          type: string
        id:
          title: Id
          type: string
        person:
          $ref: '#/components/schemas/PersonNullable'
        properties:
          title: Properties
          type: object
        timestamp:
          title: Timestamp
          type: string
        uuid:
          title: Uuid
          default: null
          type: string
          nullable: true
      required:
        - distinct_id
        - elements
        - event
        - id
        - properties
        - timestamp
      type: object
    EventsNode:
      title: EventsNode
      properties:
        custom_name:
          title: Custom Name
          default: null
          type: string
          nullable: true
        event:
          title: Event
          description: The event or `null` for all events.
          default: null
          type: string
          nullable: true
        fixedProperties:
          title: Fixedproperties
          description: >-
            Fixed properties in the query, can't be edited in the interface
            (e.g. scoping down by person)
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        kind:
          title: Kind
          const: EventsNode
          default: EventsNode
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        math:
          title: Math
          anyOf:
            - $ref: '#/components/schemas/BaseMathType'
            - $ref: '#/components/schemas/PropertyMathType'
            - $ref: '#/components/schemas/CountPerActorMathType'
            - const: unique_group
            - const: hogql
          default: null
          nullable: true
        math_group_type_index:
          $ref: '#/components/schemas/MathGroupTypeIndexNullable'
        math_hogql:
          title: Math Hogql
          default: null
          type: string
          nullable: true
        math_property:
          title: Math Property
          default: null
          type: string
          nullable: true
        name:
          title: Name
          default: null
          type: string
          nullable: true
        orderBy:
          title: Orderby
          description: Columns to order by
          default: null
          items:
            type: string
          type: array
          nullable: true
        properties:
          title: Properties
          description: Properties configurable in the interface
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        response:
          $ref: '#/components/schemas/ResponseNullable'
      type: object
    EventsQuery:
      title: EventsQuery
      properties:
        actionId:
          title: Actionid
          description: Show events matching a given action
          default: null
          type: integer
          nullable: true
        after:
          title: After
          description: Only fetch events that happened after this timestamp
          default: null
          type: string
          nullable: true
        before:
          title: Before
          description: Only fetch events that happened before this timestamp
          default: null
          type: string
          nullable: true
        event:
          title: Event
          description: Limit to events matching this string
          default: null
          type: string
          nullable: true
        filterTestAccounts:
          title: Filtertestaccounts
          description: Filter test accounts
          default: null
          type: boolean
          nullable: true
        fixedProperties:
          title: Fixedproperties
          description: >-
            Fixed properties in the query, can't be edited in the interface
            (e.g. scoping down by person)
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        kind:
          title: Kind
          const: EventsQuery
          default: EventsQuery
        limit:
          title: Limit
          description: Number of rows to return
          default: null
          type: integer
          nullable: true
        offset:
          title: Offset
          description: Number of rows to skip before returning rows
          default: null
          type: integer
          nullable: true
        orderBy:
          title: Orderby
          description: Columns to order by
          default: null
          items:
            type: string
          type: array
          nullable: true
        personId:
          title: Personid
          description: Show events for a given person
          default: null
          type: string
          nullable: true
        properties:
          title: Properties
          description: Properties configurable in the interface
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        response:
          $ref: '#/components/schemas/EventsQueryResponseNullable'
        select:
          title: Select
          description: Return a limited set of data. Required.
          items:
            type: string
          type: array
        where:
          title: Where
          description: HogQL filters to apply on returned data
          default: null
          items:
            type: string
          type: array
          nullable: true
      required:
        - select
      type: object
    EventsQueryResponse:
      title: EventsQueryResponse
      properties: &ref_9
        columns:
          title: Columns
          items: {}
          type: array
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          type: string
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        results:
          title: Results
          items:
            items: {}
            type: array
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          items:
            type: string
          type: array
      required: &ref_10
        - columns
        - hogql
        - results
        - types
      type: object
    Experiment:
      type: object
      properties:
        description:
          type: string
          nullable: true
          maxLength: 400
        parameters:
          nullable: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 400
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        feature_flag_key:
          type: string
        feature_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        secondary_metrics:
          nullable: true
        filters: {}
        archived:
          type: boolean
        created_by:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - created_at
        - created_by
        - feature_flag
        - feature_flag_key
        - id
        - name
        - updated_at
      x-konfig-properties:
        feature_flag:
          readOnly: true
        created_by:
          readOnly: true
    ExplicitTeamMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        level:
          $ref: '#/components/schemas/ExplicitTeamMemberLevelEnum'
        parent_level:
          type: integer
          readOnly: true
        parent_membership_id:
          type: string
          format: uuid
          readOnly: true
        joined_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          $ref: '#/components/schemas/UserBasic'
        user_uuid:
          type: string
          format: uuid
          writeOnly: true
        effective_level:
          $ref: '#/components/schemas/EffectiveMembershipLevelEnum'
      required:
        - effective_level
        - id
        - joined_at
        - parent_level
        - parent_membership_id
        - updated_at
        - user
        - user_uuid
      x-konfig-properties:
        level:
          minimum: 0
          maximum: 32767
        user:
          readOnly: true
        effective_level:
          description: >-
            If organization level is higher than project level, then that takes
            precedence over explicit project level.
          readOnly: true
    ExplicitTeamMemberLevelEnum:
      description: |-
        * `1` - member
        * `8` - administrator
      enum:
        - 1
        - 8
      type: integer
    ExportFormatEnum:
      description: >-
        * `image/png` - image/png

        * `application/pdf` - application/pdf

        * `text/csv` - text/csv

        * `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet` -
        application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      enum:
        - image/png
        - application/pdf
        - text/csv
        - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      type: string
    ExportedAsset:
      description: Standard ExportedAsset serializer that doesn't return content.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dashboard:
          type: integer
          nullable: true
        insight:
          type: integer
          nullable: true
        export_format:
          $ref: '#/components/schemas/ExportFormatEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        has_content:
          type: string
          readOnly: true
        export_context:
          nullable: true
        filename:
          type: string
          readOnly: true
        expires_after:
          type: string
          format: date-time
          nullable: true
      required:
        - created_at
        - export_format
        - filename
        - has_content
        - id
    FeatureFlag:
      description: >-
        Serializer mixin that resolves appropriate response for tags depending
        on license.
      type: object
      properties:
        tags:
          type: array
          items: {}
        id:
          type: integer
          readOnly: true
        name:
          description: >-
            contains the description for the flag (field name `name` is kept for
            backwards-compatibility)
          type: string
        key:
          type: string
          maxLength: 400
        filters:
          type: object
          additionalProperties: {}
        deleted:
          type: boolean
        active:
          type: boolean
        created_by:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
        is_simple_flag:
          type: boolean
          readOnly: true
        rollout_percentage:
          type: integer
          nullable: true
          readOnly: true
        ensure_experience_continuity:
          type: boolean
          nullable: true
        experiment_set:
          type: array
          items:
            type: integer
          readOnly: true
        surveys:
          type: object
          additionalProperties: {}
          readOnly: true
        features:
          type: object
          additionalProperties: {}
          readOnly: true
        rollback_conditions:
          nullable: true
        performed_rollback:
          type: boolean
          nullable: true
        can_edit:
          type: boolean
          readOnly: true
        usage_dashboard:
          type: integer
          readOnly: true
        analytics_dashboards:
          type: array
          items:
            type: integer
        has_enriched_analytics:
          type: boolean
          nullable: true
      required:
        - can_edit
        - created_by
        - experiment_set
        - features
        - id
        - is_simple_flag
        - key
        - rollout_percentage
        - surveys
        - usage_dashboard
      x-konfig-properties:
        created_by:
          readOnly: true
    FeatureFlagRoleAccess:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        feature_flag:
          $ref: '#/components/schemas/FeatureFlag'
        role:
          $ref: '#/components/schemas/Role'
        role_id:
          type: string
          format: uuid
          writeOnly: true
        added_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - added_at
        - feature_flag
        - id
        - role
        - role_id
        - updated_at
      x-konfig-properties:
        feature_flag:
          readOnly: true
        role:
          readOnly: true
    FeatureFlagsAccessLevelEnum:
      description: |-
        * `21` - Can only view
        * `37` - Can always edit
      enum:
        - 21
        - 37
      type: integer
    FeaturePropertyFilter:
      title: FeaturePropertyFilter
      properties:
        key:
          title: Key
          type: string
        label:
          title: Label
          default: null
          type: string
          nullable: true
        operator:
          $ref: '#/components/schemas/PropertyOperator'
        type:
          title: Type
          description: Event property with "$feature/" prepended
          const: feature
          default: feature
        value:
          title: Value
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
      required:
        - key
        - operator
      type: object
    FilterAction:
      type: object
      properties:
        id:
          description: ID of the action to filter on. For example `2841`.
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        math:
          $ref: '#/components/schemas/MathEnum'
      required:
        - id
      x-konfig-properties:
        math:
          description: >-
            How to aggregate results, shown as "counted by" in the interface.

            - `total` (default): no aggregation, count by events

            - `dau`: count by unique users. Despite the name, if you select the
            `interval` to be weekly or monthly, this will show weekly or monthly
            active users respectively

            - `weekly_active`: rolling average of users of the last 7 days.

            - `monthly_active`: rolling average of users of the last month.

            - `unique_group`: count by group. Requires `math_group_type_index`
            to be sent. You can get the index by hitting
            `/api/projects/@current/groups_types/`.


            All of the below are property aggregations, and require
            `math_property` to be sent with an event property.

            - `sum`: sum of a numeric property.

            - `min`: min of a numeric property.

            - `max`: max of a numeric property.

            - `median`: median of a numeric property.

            - `p90`: 90th percentile of a numeric property.

            - `p95` 95th percentile of a numeric property.

            - `p99`: 99th percentile of a numeric property.



            * `total` - total

            * `dau` - dau

            * `weekly_active` - weekly_active

            * `monthly_active` - monthly_active

            * `unique_group` - unique_group

            * `unique_session` - unique_session

            * `sum` - sum

            * `min` - min

            * `max` - max

            * `avg` - avg

            * `median` - median

            * `p90` - p90

            * `p95` - p95

            * `p99` - p99

            * `min_count_per_actor` - min_count_per_actor

            * `max_count_per_actor` - max_count_per_actor

            * `avg_count_per_actor` - avg_count_per_actor

            * `median_count_per_actor` - median_count_per_actor

            * `p90_count_per_actor` - p90_count_per_actor

            * `p95_count_per_actor` - p95_count_per_actor

            * `p99_count_per_actor` - p99_count_per_actor

            * `hogql` - hogql
          default: total
    FilterEvent:
      type: object
      properties:
        id:
          description: >-
            Name of the event to filter on. For example `$pageview` or `user
            sign up`.
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        math:
          $ref: '#/components/schemas/MathEnum'
      required:
        - id
      x-konfig-properties:
        math:
          description: >-
            How to aggregate results, shown as "counted by" in the interface.

            - `total` (default): no aggregation, count by events

            - `dau`: count by unique users. Despite the name, if you select the
            `interval` to be weekly or monthly, this will show weekly or monthly
            active users respectively

            - `weekly_active`: rolling average of users of the last 7 days.

            - `monthly_active`: rolling average of users of the last month.

            - `unique_group`: count by group. Requires `math_group_type_index`
            to be sent. You can get the index by hitting
            `/api/projects/@current/groups_types/`.


            All of the below are property aggregations, and require
            `math_property` to be sent with an event property.

            - `sum`: sum of a numeric property.

            - `min`: min of a numeric property.

            - `max`: max of a numeric property.

            - `median`: median of a numeric property.

            - `p90`: 90th percentile of a numeric property.

            - `p95` 95th percentile of a numeric property.

            - `p99`: 99th percentile of a numeric property.



            * `total` - total

            * `dau` - dau

            * `weekly_active` - weekly_active

            * `monthly_active` - monthly_active

            * `unique_group` - unique_group

            * `unique_session` - unique_session

            * `sum` - sum

            * `min` - min

            * `max` - max

            * `avg` - avg

            * `median` - median

            * `p90` - p90

            * `p95` - p95

            * `p99` - p99

            * `min_count_per_actor` - min_count_per_actor

            * `max_count_per_actor` - max_count_per_actor

            * `avg_count_per_actor` - avg_count_per_actor

            * `median_count_per_actor` - median_count_per_actor

            * `p90_count_per_actor` - p90_count_per_actor

            * `p95_count_per_actor` - p95_count_per_actor

            * `p99_count_per_actor` - p99_count_per_actor

            * `hogql` - hogql
          default: total
    FilterLogicalOperator:
      title: FilterLogicalOperator
      enum:
        - AND
        - OR
      type: string
    FrequencyEnum:
      description: |-
        * `daily` - Daily
        * `weekly` - Weekly
        * `monthly` - Monthly
        * `yearly` - Yearly
      enum:
        - daily
        - weekly
        - monthly
        - yearly
      type: string
    Funnel:
      type: object
      properties:
        events:
          description: Events to filter on. One of `events` or `actions` is required.
          type: array
          items:
            $ref: '#/components/schemas/FilterEvent'
        actions:
          description: Actions to filter on. One of `events` or `actions` is required.
          type: array
          items:
            $ref: '#/components/schemas/FilterAction'
        properties:
          $ref: '#/components/schemas/Property'
        filter_test_accounts:
          description: >-
            Whether to filter out internal and test accounts. See "project
            settings" in your PostHog account for the filters.
          type: boolean
          default: false
        date_from:
          description: >-
            What date to filter the results from. Can either be a date
            `2021-01-01`, or a relative date, like `-7d` for last seven days,
            `-1m` for last month, `mStart` for start of the month or `yStart`
            for the start of the year.
          type: string
          default: '-7d'
        date_to:
          description: >-
            What date to filter the results to. Can either be a date
            `2021-01-01`, or a relative date, like `-7d` for last seven days,
            `-1m` for last month, `mStart` for start of the month or `yStart`
            for the start of the year.
          type: string
          default: '-7d'
        breakdown:
          description: >-
            A property or cohort to break down on. You can select the type of
            the property with breakdown_type.

            - `event` (default): a property key

            - `person`: a person property key

            - `cohort`: an array of cohort IDs (ie `[9581,5812]`)
          type: string
        breakdown_type:
          $ref: '#/components/schemas/BreakdownTypeEnum'
        funnel_window_interval:
          description: >-
            Funnel window size. Set in combination with funnel_window_interval,
            so defaults to 'days'.
          type: integer
          default: 14
        funnel_window_interval_type:
          $ref: '#/components/schemas/FunnelWindowIntervalTypeEnum'
        funnel_viz_type:
          $ref: '#/components/schemas/FunnelVizTypeEnum'
        funnel_order_type:
          $ref: '#/components/schemas/FunnelOrderTypeEnum'
        exclusions:
          description: >-
            Exclude users/groups that completed the specified event between two
            specific steps. Note that these users/groups will be completely
            excluded from the entire funnel.
          type: array
          items:
            $ref: '#/components/schemas/FunnelExclusion'
        aggregation_group_type_index:
          description: >-
            Aggregate by users or by groups. `0` means user, `>0` means a group.
            See interface for the corresponding ID of the group.
          type: integer
          default: 0
        breakdown_limit:
          type: integer
          default: 10
        funnel_window_days:
          description: >-
            (DEPRECATED) Funnel window size in days. Use
            `funnel_window_interval` and `funnel_window_interval_type`
          type: integer
          default: 14
      x-konfig-properties:
        properties:
          description: >-
            Filter events by event property, person property, cohort, groups and
            more.
        breakdown_type:
          description: |-
            Type of property to break down on.

            * `event` - event
            * `person` - person
            * `cohort` - cohort
            * `group` - group
            * `session` - session
            * `hogql` - hogql
          default: event
        funnel_window_interval_type:
          description: >-
            The type of interval. Used in combination with
            `funnel_window_intervals`.


            * `DAY` - DAY

            * `SECOND` - SECOND

            * `MINUTE` - MINUTE

            * `HOUR` - HOUR

            * `WEEK` - WEEK

            * `MONTH` - MONTH
          default: days
        funnel_viz_type:
          description: >-
            The visualisation type.

            - `steps` Track instances progress between steps of the funnel

            - `trends` Track how this funnel's conversion rate is trending over
            time.

            - `time_to_convert` Track how long it takes for instances to convert


            * `trends` - trends

            * `time_to_convert` - time_to_convert

            * `steps` - steps
          default: steps
        funnel_order_type:
          description: >-
            - `ordered` - Step B must happen after Step A, but any number events
            can happen between A and B.

            - `strict` - Step B must happen directly after Step A without any
            events in between.

            - `unordered` - Steps can be completed in any sequence.


            * `strict` - strict

            * `unordered` - unordered

            * `ordered` - ordered
          default: ordered
    FunnelConversionWindowTimeUnit:
      title: FunnelConversionWindowTimeUnit
      enum:
        - second
        - minute
        - hour
        - day
        - week
        - month
      type: string
    FunnelCorrelationActorsQuery:
      title: FunnelCorrelationActorsQuery
      properties:
        funnelCorrelationPersonConverted:
          title: Funnelcorrelationpersonconverted
          default: null
          type: boolean
          nullable: true
        funnelCorrelationPersonEntity:
          title: Funnelcorrelationpersonentity
          anyOf:
            - $ref: '#/components/schemas/EventsNode'
            - $ref: '#/components/schemas/ActionsNode'
            - $ref: '#/components/schemas/DataWarehouseNode'
          default: null
          nullable: true
        funnelCorrelationPropertyValues:
          title: Funnelcorrelationpropertyvalues
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        includeRecordings:
          title: Includerecordings
          default: null
          type: boolean
          nullable: true
        kind:
          title: Kind
          const: FunnelCorrelationActorsQuery
          default: FunnelCorrelationActorsQuery
        response:
          $ref: '#/components/schemas/ActorsQueryResponseNullable'
        source:
          $ref: '#/components/schemas/FunnelCorrelationQuery'
      required:
        - source
      type: object
    FunnelCorrelationQuery:
      title: FunnelCorrelationQuery
      properties:
        funnelCorrelationEventExcludePropertyNames:
          title: Funnelcorrelationeventexcludepropertynames
          default: null
          items:
            type: string
          type: array
          nullable: true
        funnelCorrelationEventNames:
          title: Funnelcorrelationeventnames
          default: null
          items:
            type: string
          type: array
          nullable: true
        funnelCorrelationExcludeEventNames:
          title: Funnelcorrelationexcludeeventnames
          default: null
          items:
            type: string
          type: array
          nullable: true
        funnelCorrelationExcludeNames:
          title: Funnelcorrelationexcludenames
          default: null
          items:
            type: string
          type: array
          nullable: true
        funnelCorrelationNames:
          title: Funnelcorrelationnames
          default: null
          items:
            type: string
          type: array
          nullable: true
        funnelCorrelationType:
          $ref: '#/components/schemas/FunnelCorrelationResultsType'
        kind:
          title: Kind
          const: FunnelCorrelationQuery
          default: FunnelCorrelationQuery
        response:
          $ref: '#/components/schemas/FunnelCorrelationResponseNullable'
        source:
          $ref: '#/components/schemas/FunnelsActorsQuery'
      required:
        - funnelCorrelationType
        - source
      type: object
    FunnelCorrelationResponse:
      title: FunnelCorrelationResponse
      properties: &ref_11
        columns:
          title: Columns
          default: null
          items: {}
          type: array
          nullable: true
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        results:
          $ref: '#/components/schemas/FunnelCorrelationResult'
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          default: null
          items: {}
          type: array
          nullable: true
      required: &ref_12
        - results
      type: object
    FunnelCorrelationResult:
      title: FunnelCorrelationResult
      properties:
        events:
          title: Events
          items:
            $ref: '#/components/schemas/EventOddsRatioSerialized'
          type: array
        skewed:
          title: Skewed
          type: boolean
      required:
        - events
        - skewed
      type: object
    FunnelCorrelationResultsType:
      title: FunnelCorrelationResultsType
      enum:
        - events
        - properties
        - event_with_properties
      type: string
    FunnelExclusion:
      type: object
      properties:
        id:
          description: >-
            Name of the event to filter on. For example `$pageview` or `user
            sign up`.
          type: string
        properties:
          $ref: '#/components/schemas/Property'
        funnel_from_step:
          type: integer
          default: 0
        funnel_to_step:
          type: integer
          default: 1
      required:
        - id
      x-konfig-properties:
        properties:
          description: >-
            Filter events by event property, person property, cohort, groups and
            more.
    FunnelExclusionActionsNode:
      title: FunnelExclusionActionsNode
      properties:
        custom_name:
          title: Custom Name
          default: null
          type: string
          nullable: true
        fixedProperties:
          title: Fixedproperties
          description: >-
            Fixed properties in the query, can't be edited in the interface
            (e.g. scoping down by person)
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        funnelFromStep:
          title: Funnelfromstep
          type: integer
        funnelToStep:
          title: Funneltostep
          type: integer
        id:
          title: Id
          type: integer
        kind:
          title: Kind
          const: ActionsNode
          default: ActionsNode
        math:
          title: Math
          anyOf:
            - $ref: '#/components/schemas/BaseMathType'
            - $ref: '#/components/schemas/PropertyMathType'
            - $ref: '#/components/schemas/CountPerActorMathType'
            - const: unique_group
            - const: hogql
          default: null
          nullable: true
        math_group_type_index:
          $ref: '#/components/schemas/MathGroupTypeIndexNullable'
        math_hogql:
          title: Math Hogql
          default: null
          type: string
          nullable: true
        math_property:
          title: Math Property
          default: null
          type: string
          nullable: true
        name:
          title: Name
          default: null
          type: string
          nullable: true
        properties:
          title: Properties
          description: Properties configurable in the interface
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        response:
          title: Response
          description: Cached query response
          default: null
          type: object
          nullable: true
      required:
        - funnelFromStep
        - funnelToStep
        - id
      type: object
    FunnelExclusionEventsNode:
      title: FunnelExclusionEventsNode
      properties:
        custom_name:
          title: Custom Name
          default: null
          type: string
          nullable: true
        event:
          title: Event
          description: The event or `null` for all events.
          default: null
          type: string
          nullable: true
        fixedProperties:
          title: Fixedproperties
          description: >-
            Fixed properties in the query, can't be edited in the interface
            (e.g. scoping down by person)
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        funnelFromStep:
          title: Funnelfromstep
          type: integer
        funnelToStep:
          title: Funneltostep
          type: integer
        kind:
          title: Kind
          const: EventsNode
          default: EventsNode
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        math:
          title: Math
          anyOf:
            - $ref: '#/components/schemas/BaseMathType'
            - $ref: '#/components/schemas/PropertyMathType'
            - $ref: '#/components/schemas/CountPerActorMathType'
            - const: unique_group
            - const: hogql
          default: null
          nullable: true
        math_group_type_index:
          $ref: '#/components/schemas/MathGroupTypeIndexNullable'
        math_hogql:
          title: Math Hogql
          default: null
          type: string
          nullable: true
        math_property:
          title: Math Property
          default: null
          type: string
          nullable: true
        name:
          title: Name
          default: null
          type: string
          nullable: true
        orderBy:
          title: Orderby
          description: Columns to order by
          default: null
          items:
            type: string
          type: array
          nullable: true
        properties:
          title: Properties
          description: Properties configurable in the interface
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        response:
          $ref: '#/components/schemas/ResponseNullable'
      required:
        - funnelFromStep
        - funnelToStep
      type: object
    FunnelLayout:
      title: FunnelLayout
      enum:
        - horizontal
        - vertical
      type: string
    FunnelOrderTypeEnum:
      description: |-
        * `strict` - strict
        * `unordered` - unordered
        * `ordered` - ordered
      enum:
        - strict
        - unordered
        - ordered
      type: string
    FunnelPathType:
      title: FunnelPathType
      enum:
        - funnel_path_before_step
        - funnel_path_between_steps
        - funnel_path_after_step
      type: string
    FunnelPathsFilter:
      title: FunnelPathsFilter
      properties: &ref_28
        funnelPathType:
          $ref: '#/components/schemas/FunnelPathTypeNullable'
        funnelSource:
          $ref: '#/components/schemas/FunnelsQuery'
        funnelStep:
          title: Funnelstep
          default: null
          type: integer
          nullable: true
      required: &ref_29
        - funnelSource
      type: object
    FunnelStepReference:
      title: FunnelStepReference
      enum:
        - total
        - previous
      type: string
    FunnelStepsResult:
      type: object
      properties:
        count:
          description: Number of people in this step.
          type: integer
        action_id:
          description: >-
            Corresponds to the `id` of the entities passed through to `events`
            or `actions`.
          type: string
        average_conversion_time:
          description: >-
            Average conversion time of person or groups between steps. `null`
            for the first step.
          type: number
          format: double
        median_conversion_time:
          description: >-
            Median conversion time of person or groups between steps. `null` for
            the first step.
          type: number
          format: double
        converted_people_url:
          description: >-
            Path of a URL to get a list of people that converted after this
            step. In this format: `/api/person/funnel?...`
          type: string
        dropped_people_url:
          description: >-
            Path of a URL to get a list of people that dropped after this step.
            In this format: `/api/person/funnel?...`
          type: string
        order:
          description: >-
            Order of this step in the funnel. The API should return the steps in
            order anyway.
          type: string
      required:
        - action_id
        - average_conversion_time
        - converted_people_url
        - count
        - dropped_people_url
        - median_conversion_time
        - order
    FunnelStepsResults:
      type: object
      properties:
        is_cached:
          description: Whether the result is cached. To force a refresh, pass ?refresh=true
          type: boolean
        last_refresh:
          description: If the result is cached, when it was last refreshed.
          type: string
          format: date-time
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        result:
          type: array
          items:
            $ref: '#/components/schemas/FunnelStepsResult'
      required:
        - is_cached
        - last_refresh
        - result
      x-konfig-properties:
        timezone:
          description: >-
            Timezone the chart is displayed in


            * `Africa/Abidjan` - Africa/Abidjan

            * `Africa/Accra` - Africa/Accra

            * `Africa/Addis_Ababa` - Africa/Addis_Ababa

            * `Africa/Algiers` - Africa/Algiers

            * `Africa/Asmara` - Africa/Asmara

            * `Africa/Asmera` - Africa/Asmera

            * `Africa/Bamako` - Africa/Bamako

            * `Africa/Bangui` - Africa/Bangui

            * `Africa/Banjul` - Africa/Banjul

            * `Africa/Bissau` - Africa/Bissau

            * `Africa/Blantyre` - Africa/Blantyre

            * `Africa/Brazzaville` - Africa/Brazzaville

            * `Africa/Bujumbura` - Africa/Bujumbura

            * `Africa/Cairo` - Africa/Cairo

            * `Africa/Casablanca` - Africa/Casablanca

            * `Africa/Ceuta` - Africa/Ceuta

            * `Africa/Conakry` - Africa/Conakry

            * `Africa/Dakar` - Africa/Dakar

            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam

            * `Africa/Djibouti` - Africa/Djibouti

            * `Africa/Douala` - Africa/Douala

            * `Africa/El_Aaiun` - Africa/El_Aaiun

            * `Africa/Freetown` - Africa/Freetown

            * `Africa/Gaborone` - Africa/Gaborone

            * `Africa/Harare` - Africa/Harare

            * `Africa/Johannesburg` - Africa/Johannesburg

            * `Africa/Juba` - Africa/Juba

            * `Africa/Kampala` - Africa/Kampala

            * `Africa/Khartoum` - Africa/Khartoum

            * `Africa/Kigali` - Africa/Kigali

            * `Africa/Kinshasa` - Africa/Kinshasa

            * `Africa/Lagos` - Africa/Lagos

            * `Africa/Libreville` - Africa/Libreville

            * `Africa/Lome` - Africa/Lome

            * `Africa/Luanda` - Africa/Luanda

            * `Africa/Lubumbashi` - Africa/Lubumbashi

            * `Africa/Lusaka` - Africa/Lusaka

            * `Africa/Malabo` - Africa/Malabo

            * `Africa/Maputo` - Africa/Maputo

            * `Africa/Maseru` - Africa/Maseru

            * `Africa/Mbabane` - Africa/Mbabane

            * `Africa/Mogadishu` - Africa/Mogadishu

            * `Africa/Monrovia` - Africa/Monrovia

            * `Africa/Nairobi` - Africa/Nairobi

            * `Africa/Ndjamena` - Africa/Ndjamena

            * `Africa/Niamey` - Africa/Niamey

            * `Africa/Nouakchott` - Africa/Nouakchott

            * `Africa/Ouagadougou` - Africa/Ouagadougou

            * `Africa/Porto-Novo` - Africa/Porto-Novo

            * `Africa/Sao_Tome` - Africa/Sao_Tome

            * `Africa/Timbuktu` - Africa/Timbuktu

            * `Africa/Tripoli` - Africa/Tripoli

            * `Africa/Tunis` - Africa/Tunis

            * `Africa/Windhoek` - Africa/Windhoek

            * `America/Adak` - America/Adak

            * `America/Anchorage` - America/Anchorage

            * `America/Anguilla` - America/Anguilla

            * `America/Antigua` - America/Antigua

            * `America/Araguaina` - America/Araguaina

            * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires

            * `America/Argentina/Catamarca` - America/Argentina/Catamarca

            * `America/Argentina/ComodRivadavia` -
            America/Argentina/ComodRivadavia

            * `America/Argentina/Cordoba` - America/Argentina/Cordoba

            * `America/Argentina/Jujuy` - America/Argentina/Jujuy

            * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja

            * `America/Argentina/Mendoza` - America/Argentina/Mendoza

            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos

            * `America/Argentina/Salta` - America/Argentina/Salta

            * `America/Argentina/San_Juan` - America/Argentina/San_Juan

            * `America/Argentina/San_Luis` - America/Argentina/San_Luis

            * `America/Argentina/Tucuman` - America/Argentina/Tucuman

            * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia

            * `America/Aruba` - America/Aruba

            * `America/Asuncion` - America/Asuncion

            * `America/Atikokan` - America/Atikokan

            * `America/Atka` - America/Atka

            * `America/Bahia` - America/Bahia

            * `America/Bahia_Banderas` - America/Bahia_Banderas

            * `America/Barbados` - America/Barbados

            * `America/Belem` - America/Belem

            * `America/Belize` - America/Belize

            * `America/Blanc-Sablon` - America/Blanc-Sablon

            * `America/Boa_Vista` - America/Boa_Vista

            * `America/Bogota` - America/Bogota

            * `America/Boise` - America/Boise

            * `America/Buenos_Aires` - America/Buenos_Aires

            * `America/Cambridge_Bay` - America/Cambridge_Bay

            * `America/Campo_Grande` - America/Campo_Grande

            * `America/Cancun` - America/Cancun

            * `America/Caracas` - America/Caracas

            * `America/Catamarca` - America/Catamarca

            * `America/Cayenne` - America/Cayenne

            * `America/Cayman` - America/Cayman

            * `America/Chicago` - America/Chicago

            * `America/Chihuahua` - America/Chihuahua

            * `America/Ciudad_Juarez` - America/Ciudad_Juarez

            * `America/Coral_Harbour` - America/Coral_Harbour

            * `America/Cordoba` - America/Cordoba

            * `America/Costa_Rica` - America/Costa_Rica

            * `America/Creston` - America/Creston

            * `America/Cuiaba` - America/Cuiaba

            * `America/Curacao` - America/Curacao

            * `America/Danmarkshavn` - America/Danmarkshavn

            * `America/Dawson` - America/Dawson

            * `America/Dawson_Creek` - America/Dawson_Creek

            * `America/Denver` - America/Denver

            * `America/Detroit` - America/Detroit

            * `America/Dominica` - America/Dominica

            * `America/Edmonton` - America/Edmonton

            * `America/Eirunepe` - America/Eirunepe

            * `America/El_Salvador` - America/El_Salvador

            * `America/Ensenada` - America/Ensenada

            * `America/Fort_Nelson` - America/Fort_Nelson

            * `America/Fort_Wayne` - America/Fort_Wayne

            * `America/Fortaleza` - America/Fortaleza

            * `America/Glace_Bay` - America/Glace_Bay

            * `America/Godthab` - America/Godthab

            * `America/Goose_Bay` - America/Goose_Bay

            * `America/Grand_Turk` - America/Grand_Turk

            * `America/Grenada` - America/Grenada

            * `America/Guadeloupe` - America/Guadeloupe

            * `America/Guatemala` - America/Guatemala

            * `America/Guayaquil` - America/Guayaquil

            * `America/Guyana` - America/Guyana

            * `America/Halifax` - America/Halifax

            * `America/Havana` - America/Havana

            * `America/Hermosillo` - America/Hermosillo

            * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis

            * `America/Indiana/Knox` - America/Indiana/Knox

            * `America/Indiana/Marengo` - America/Indiana/Marengo

            * `America/Indiana/Petersburg` - America/Indiana/Petersburg

            * `America/Indiana/Tell_City` - America/Indiana/Tell_City

            * `America/Indiana/Vevay` - America/Indiana/Vevay

            * `America/Indiana/Vincennes` - America/Indiana/Vincennes

            * `America/Indiana/Winamac` - America/Indiana/Winamac

            * `America/Indianapolis` - America/Indianapolis

            * `America/Inuvik` - America/Inuvik

            * `America/Iqaluit` - America/Iqaluit

            * `America/Jamaica` - America/Jamaica

            * `America/Jujuy` - America/Jujuy

            * `America/Juneau` - America/Juneau

            * `America/Kentucky/Louisville` - America/Kentucky/Louisville

            * `America/Kentucky/Monticello` - America/Kentucky/Monticello

            * `America/Knox_IN` - America/Knox_IN

            * `America/Kralendijk` - America/Kralendijk

            * `America/La_Paz` - America/La_Paz

            * `America/Lima` - America/Lima

            * `America/Los_Angeles` - America/Los_Angeles

            * `America/Louisville` - America/Louisville

            * `America/Lower_Princes` - America/Lower_Princes

            * `America/Maceio` - America/Maceio

            * `America/Managua` - America/Managua

            * `America/Manaus` - America/Manaus

            * `America/Marigot` - America/Marigot

            * `America/Martinique` - America/Martinique

            * `America/Matamoros` - America/Matamoros

            * `America/Mazatlan` - America/Mazatlan

            * `America/Mendoza` - America/Mendoza

            * `America/Menominee` - America/Menominee

            * `America/Merida` - America/Merida

            * `America/Metlakatla` - America/Metlakatla

            * `America/Mexico_City` - America/Mexico_City

            * `America/Miquelon` - America/Miquelon

            * `America/Moncton` - America/Moncton

            * `America/Monterrey` - America/Monterrey

            * `America/Montevideo` - America/Montevideo

            * `America/Montreal` - America/Montreal

            * `America/Montserrat` - America/Montserrat

            * `America/Nassau` - America/Nassau

            * `America/New_York` - America/New_York

            * `America/Nipigon` - America/Nipigon

            * `America/Nome` - America/Nome

            * `America/Noronha` - America/Noronha

            * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah

            * `America/North_Dakota/Center` - America/North_Dakota/Center

            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem

            * `America/Nuuk` - America/Nuuk

            * `America/Ojinaga` - America/Ojinaga

            * `America/Panama` - America/Panama

            * `America/Pangnirtung` - America/Pangnirtung

            * `America/Paramaribo` - America/Paramaribo

            * `America/Phoenix` - America/Phoenix

            * `America/Port-au-Prince` - America/Port-au-Prince

            * `America/Port_of_Spain` - America/Port_of_Spain

            * `America/Porto_Acre` - America/Porto_Acre

            * `America/Porto_Velho` - America/Porto_Velho

            * `America/Puerto_Rico` - America/Puerto_Rico

            * `America/Punta_Arenas` - America/Punta_Arenas

            * `America/Rainy_River` - America/Rainy_River

            * `America/Rankin_Inlet` - America/Rankin_Inlet

            * `America/Recife` - America/Recife

            * `America/Regina` - America/Regina

            * `America/Resolute` - America/Resolute

            * `America/Rio_Branco` - America/Rio_Branco

            * `America/Rosario` - America/Rosario

            * `America/Santa_Isabel` - America/Santa_Isabel

            * `America/Santarem` - America/Santarem

            * `America/Santiago` - America/Santiago

            * `America/Santo_Domingo` - America/Santo_Domingo

            * `America/Sao_Paulo` - America/Sao_Paulo

            * `America/Scoresbysund` - America/Scoresbysund

            * `America/Shiprock` - America/Shiprock

            * `America/Sitka` - America/Sitka

            * `America/St_Barthelemy` - America/St_Barthelemy

            * `America/St_Johns` - America/St_Johns

            * `America/St_Kitts` - America/St_Kitts

            * `America/St_Lucia` - America/St_Lucia

            * `America/St_Thomas` - America/St_Thomas

            * `America/St_Vincent` - America/St_Vincent

            * `America/Swift_Current` - America/Swift_Current

            * `America/Tegucigalpa` - America/Tegucigalpa

            * `America/Thule` - America/Thule

            * `America/Thunder_Bay` - America/Thunder_Bay

            * `America/Tijuana` - America/Tijuana

            * `America/Toronto` - America/Toronto

            * `America/Tortola` - America/Tortola

            * `America/Vancouver` - America/Vancouver

            * `America/Virgin` - America/Virgin

            * `America/Whitehorse` - America/Whitehorse

            * `America/Winnipeg` - America/Winnipeg

            * `America/Yakutat` - America/Yakutat

            * `America/Yellowknife` - America/Yellowknife

            * `Antarctica/Casey` - Antarctica/Casey

            * `Antarctica/Davis` - Antarctica/Davis

            * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville

            * `Antarctica/Macquarie` - Antarctica/Macquarie

            * `Antarctica/Mawson` - Antarctica/Mawson

            * `Antarctica/McMurdo` - Antarctica/McMurdo

            * `Antarctica/Palmer` - Antarctica/Palmer

            * `Antarctica/Rothera` - Antarctica/Rothera

            * `Antarctica/South_Pole` - Antarctica/South_Pole

            * `Antarctica/Syowa` - Antarctica/Syowa

            * `Antarctica/Troll` - Antarctica/Troll

            * `Antarctica/Vostok` - Antarctica/Vostok

            * `Arctic/Longyearbyen` - Arctic/Longyearbyen

            * `Asia/Aden` - Asia/Aden

            * `Asia/Almaty` - Asia/Almaty

            * `Asia/Amman` - Asia/Amman

            * `Asia/Anadyr` - Asia/Anadyr

            * `Asia/Aqtau` - Asia/Aqtau

            * `Asia/Aqtobe` - Asia/Aqtobe

            * `Asia/Ashgabat` - Asia/Ashgabat

            * `Asia/Ashkhabad` - Asia/Ashkhabad

            * `Asia/Atyrau` - Asia/Atyrau

            * `Asia/Baghdad` - Asia/Baghdad

            * `Asia/Bahrain` - Asia/Bahrain

            * `Asia/Baku` - Asia/Baku

            * `Asia/Bangkok` - Asia/Bangkok

            * `Asia/Barnaul` - Asia/Barnaul

            * `Asia/Beirut` - Asia/Beirut

            * `Asia/Bishkek` - Asia/Bishkek

            * `Asia/Brunei` - Asia/Brunei

            * `Asia/Calcutta` - Asia/Calcutta

            * `Asia/Chita` - Asia/Chita

            * `Asia/Choibalsan` - Asia/Choibalsan

            * `Asia/Chongqing` - Asia/Chongqing

            * `Asia/Chungking` - Asia/Chungking

            * `Asia/Colombo` - Asia/Colombo

            * `Asia/Dacca` - Asia/Dacca

            * `Asia/Damascus` - Asia/Damascus

            * `Asia/Dhaka` - Asia/Dhaka

            * `Asia/Dili` - Asia/Dili

            * `Asia/Dubai` - Asia/Dubai

            * `Asia/Dushanbe` - Asia/Dushanbe

            * `Asia/Famagusta` - Asia/Famagusta

            * `Asia/Gaza` - Asia/Gaza

            * `Asia/Harbin` - Asia/Harbin

            * `Asia/Hebron` - Asia/Hebron

            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh

            * `Asia/Hong_Kong` - Asia/Hong_Kong

            * `Asia/Hovd` - Asia/Hovd

            * `Asia/Irkutsk` - Asia/Irkutsk

            * `Asia/Istanbul` - Asia/Istanbul

            * `Asia/Jakarta` - Asia/Jakarta

            * `Asia/Jayapura` - Asia/Jayapura

            * `Asia/Jerusalem` - Asia/Jerusalem

            * `Asia/Kabul` - Asia/Kabul

            * `Asia/Kamchatka` - Asia/Kamchatka

            * `Asia/Karachi` - Asia/Karachi

            * `Asia/Kashgar` - Asia/Kashgar

            * `Asia/Kathmandu` - Asia/Kathmandu

            * `Asia/Katmandu` - Asia/Katmandu

            * `Asia/Khandyga` - Asia/Khandyga

            * `Asia/Kolkata` - Asia/Kolkata

            * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk

            * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur

            * `Asia/Kuching` - Asia/Kuching

            * `Asia/Kuwait` - Asia/Kuwait

            * `Asia/Macao` - Asia/Macao

            * `Asia/Macau` - Asia/Macau

            * `Asia/Magadan` - Asia/Magadan

            * `Asia/Makassar` - Asia/Makassar

            * `Asia/Manila` - Asia/Manila

            * `Asia/Muscat` - Asia/Muscat

            * `Asia/Nicosia` - Asia/Nicosia

            * `Asia/Novokuznetsk` - Asia/Novokuznetsk

            * `Asia/Novosibirsk` - Asia/Novosibirsk

            * `Asia/Omsk` - Asia/Omsk

            * `Asia/Oral` - Asia/Oral

            * `Asia/Phnom_Penh` - Asia/Phnom_Penh

            * `Asia/Pontianak` - Asia/Pontianak

            * `Asia/Pyongyang` - Asia/Pyongyang

            * `Asia/Qatar` - Asia/Qatar

            * `Asia/Qostanay` - Asia/Qostanay

            * `Asia/Qyzylorda` - Asia/Qyzylorda

            * `Asia/Rangoon` - Asia/Rangoon

            * `Asia/Riyadh` - Asia/Riyadh

            * `Asia/Saigon` - Asia/Saigon

            * `Asia/Sakhalin` - Asia/Sakhalin

            * `Asia/Samarkand` - Asia/Samarkand

            * `Asia/Seoul` - Asia/Seoul

            * `Asia/Shanghai` - Asia/Shanghai

            * `Asia/Singapore` - Asia/Singapore

            * `Asia/Srednekolymsk` - Asia/Srednekolymsk

            * `Asia/Taipei` - Asia/Taipei

            * `Asia/Tashkent` - Asia/Tashkent

            * `Asia/Tbilisi` - Asia/Tbilisi

            * `Asia/Tehran` - Asia/Tehran

            * `Asia/Tel_Aviv` - Asia/Tel_Aviv

            * `Asia/Thimbu` - Asia/Thimbu

            * `Asia/Thimphu` - Asia/Thimphu

            * `Asia/Tokyo` - Asia/Tokyo

            * `Asia/Tomsk` - Asia/Tomsk

            * `Asia/Ujung_Pandang` - Asia/Ujung_Pandang

            * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar

            * `Asia/Ulan_Bator` - Asia/Ulan_Bator

            * `Asia/Urumqi` - Asia/Urumqi

            * `Asia/Ust-Nera` - Asia/Ust-Nera

            * `Asia/Vientiane` - Asia/Vientiane

            * `Asia/Vladivostok` - Asia/Vladivostok

            * `Asia/Yakutsk` - Asia/Yakutsk

            * `Asia/Yangon` - Asia/Yangon

            * `Asia/Yekaterinburg` - Asia/Yekaterinburg

            * `Asia/Yerevan` - Asia/Yerevan

            * `Atlantic/Azores` - Atlantic/Azores

            * `Atlantic/Bermuda` - Atlantic/Bermuda

            * `Atlantic/Canary` - Atlantic/Canary

            * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde

            * `Atlantic/Faeroe` - Atlantic/Faeroe

            * `Atlantic/Faroe` - Atlantic/Faroe

            * `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen

            * `Atlantic/Madeira` - Atlantic/Madeira

            * `Atlantic/Reykjavik` - Atlantic/Reykjavik

            * `Atlantic/South_Georgia` - Atlantic/South_Georgia

            * `Atlantic/St_Helena` - Atlantic/St_Helena

            * `Atlantic/Stanley` - Atlantic/Stanley

            * `Australia/ACT` - Australia/ACT

            * `Australia/Adelaide` - Australia/Adelaide

            * `Australia/Brisbane` - Australia/Brisbane

            * `Australia/Broken_Hill` - Australia/Broken_Hill

            * `Australia/Canberra` - Australia/Canberra

            * `Australia/Currie` - Australia/Currie

            * `Australia/Darwin` - Australia/Darwin

            * `Australia/Eucla` - Australia/Eucla

            * `Australia/Hobart` - Australia/Hobart

            * `Australia/LHI` - Australia/LHI

            * `Australia/Lindeman` - Australia/Lindeman

            * `Australia/Lord_Howe` - Australia/Lord_Howe

            * `Australia/Melbourne` - Australia/Melbourne

            * `Australia/NSW` - Australia/NSW

            * `Australia/North` - Australia/North

            * `Australia/Perth` - Australia/Perth

            * `Australia/Queensland` - Australia/Queensland

            * `Australia/South` - Australia/South

            * `Australia/Sydney` - Australia/Sydney

            * `Australia/Tasmania` - Australia/Tasmania

            * `Australia/Victoria` - Australia/Victoria

            * `Australia/West` - Australia/West

            * `Australia/Yancowinna` - Australia/Yancowinna

            * `Brazil/Acre` - Brazil/Acre

            * `Brazil/DeNoronha` - Brazil/DeNoronha

            * `Brazil/East` - Brazil/East

            * `Brazil/West` - Brazil/West

            * `CET` - CET

            * `CST6CDT` - CST6CDT

            * `Canada/Atlantic` - Canada/Atlantic

            * `Canada/Central` - Canada/Central

            * `Canada/Eastern` - Canada/Eastern

            * `Canada/Mountain` - Canada/Mountain

            * `Canada/Newfoundland` - Canada/Newfoundland

            * `Canada/Pacific` - Canada/Pacific

            * `Canada/Saskatchewan` - Canada/Saskatchewan

            * `Canada/Yukon` - Canada/Yukon

            * `Chile/Continental` - Chile/Continental

            * `Chile/EasterIsland` - Chile/EasterIsland

            * `Cuba` - Cuba

            * `EET` - EET

            * `EST` - EST

            * `EST5EDT` - EST5EDT

            * `Egypt` - Egypt

            * `Eire` - Eire

            * `Etc/GMT` - Etc/GMT

            * `Etc/GMT+0` - Etc/GMT+0

            * `Etc/GMT+1` - Etc/GMT+1

            * `Etc/GMT+10` - Etc/GMT+10

            * `Etc/GMT+11` - Etc/GMT+11

            * `Etc/GMT+12` - Etc/GMT+12

            * `Etc/GMT+2` - Etc/GMT+2

            * `Etc/GMT+3` - Etc/GMT+3

            * `Etc/GMT+4` - Etc/GMT+4

            * `Etc/GMT+5` - Etc/GMT+5

            * `Etc/GMT+6` - Etc/GMT+6

            * `Etc/GMT+7` - Etc/GMT+7

            * `Etc/GMT+8` - Etc/GMT+8

            * `Etc/GMT+9` - Etc/GMT+9

            * `Etc/GMT-0` - Etc/GMT-0

            * `Etc/GMT-1` - Etc/GMT-1

            * `Etc/GMT-10` - Etc/GMT-10

            * `Etc/GMT-11` - Etc/GMT-11

            * `Etc/GMT-12` - Etc/GMT-12

            * `Etc/GMT-13` - Etc/GMT-13

            * `Etc/GMT-14` - Etc/GMT-14

            * `Etc/GMT-2` - Etc/GMT-2

            * `Etc/GMT-3` - Etc/GMT-3

            * `Etc/GMT-4` - Etc/GMT-4

            * `Etc/GMT-5` - Etc/GMT-5

            * `Etc/GMT-6` - Etc/GMT-6

            * `Etc/GMT-7` - Etc/GMT-7

            * `Etc/GMT-8` - Etc/GMT-8

            * `Etc/GMT-9` - Etc/GMT-9

            * `Etc/GMT0` - Etc/GMT0

            * `Etc/Greenwich` - Etc/Greenwich

            * `Etc/UCT` - Etc/UCT

            * `Etc/UTC` - Etc/UTC

            * `Etc/Universal` - Etc/Universal

            * `Etc/Zulu` - Etc/Zulu

            * `Europe/Amsterdam` - Europe/Amsterdam

            * `Europe/Andorra` - Europe/Andorra

            * `Europe/Astrakhan` - Europe/Astrakhan

            * `Europe/Athens` - Europe/Athens

            * `Europe/Belfast` - Europe/Belfast

            * `Europe/Belgrade` - Europe/Belgrade

            * `Europe/Berlin` - Europe/Berlin

            * `Europe/Bratislava` - Europe/Bratislava

            * `Europe/Brussels` - Europe/Brussels

            * `Europe/Bucharest` - Europe/Bucharest

            * `Europe/Budapest` - Europe/Budapest

            * `Europe/Busingen` - Europe/Busingen

            * `Europe/Chisinau` - Europe/Chisinau

            * `Europe/Copenhagen` - Europe/Copenhagen

            * `Europe/Dublin` - Europe/Dublin

            * `Europe/Gibraltar` - Europe/Gibraltar

            * `Europe/Guernsey` - Europe/Guernsey

            * `Europe/Helsinki` - Europe/Helsinki

            * `Europe/Isle_of_Man` - Europe/Isle_of_Man

            * `Europe/Istanbul` - Europe/Istanbul

            * `Europe/Jersey` - Europe/Jersey

            * `Europe/Kaliningrad` - Europe/Kaliningrad

            * `Europe/Kiev` - Europe/Kiev

            * `Europe/Kirov` - Europe/Kirov

            * `Europe/Kyiv` - Europe/Kyiv

            * `Europe/Lisbon` - Europe/Lisbon

            * `Europe/Ljubljana` - Europe/Ljubljana

            * `Europe/London` - Europe/London

            * `Europe/Luxembourg` - Europe/Luxembourg

            * `Europe/Madrid` - Europe/Madrid

            * `Europe/Malta` - Europe/Malta

            * `Europe/Mariehamn` - Europe/Mariehamn

            * `Europe/Minsk` - Europe/Minsk

            * `Europe/Monaco` - Europe/Monaco

            * `Europe/Moscow` - Europe/Moscow

            * `Europe/Nicosia` - Europe/Nicosia

            * `Europe/Oslo` - Europe/Oslo

            * `Europe/Paris` - Europe/Paris

            * `Europe/Podgorica` - Europe/Podgorica

            * `Europe/Prague` - Europe/Prague

            * `Europe/Riga` - Europe/Riga

            * `Europe/Rome` - Europe/Rome

            * `Europe/Samara` - Europe/Samara

            * `Europe/San_Marino` - Europe/San_Marino

            * `Europe/Sarajevo` - Europe/Sarajevo

            * `Europe/Saratov` - Europe/Saratov

            * `Europe/Simferopol` - Europe/Simferopol

            * `Europe/Skopje` - Europe/Skopje

            * `Europe/Sofia` - Europe/Sofia

            * `Europe/Stockholm` - Europe/Stockholm

            * `Europe/Tallinn` - Europe/Tallinn

            * `Europe/Tirane` - Europe/Tirane

            * `Europe/Tiraspol` - Europe/Tiraspol

            * `Europe/Ulyanovsk` - Europe/Ulyanovsk

            * `Europe/Uzhgorod` - Europe/Uzhgorod

            * `Europe/Vaduz` - Europe/Vaduz

            * `Europe/Vatican` - Europe/Vatican

            * `Europe/Vienna` - Europe/Vienna

            * `Europe/Vilnius` - Europe/Vilnius

            * `Europe/Volgograd` - Europe/Volgograd

            * `Europe/Warsaw` - Europe/Warsaw

            * `Europe/Zagreb` - Europe/Zagreb

            * `Europe/Zaporozhye` - Europe/Zaporozhye

            * `Europe/Zurich` - Europe/Zurich

            * `GB` - GB

            * `GB-Eire` - GB-Eire

            * `GMT` - GMT

            * `GMT+0` - GMT+0

            * `GMT-0` - GMT-0

            * `GMT0` - GMT0

            * `Greenwich` - Greenwich

            * `HST` - HST

            * `Hongkong` - Hongkong

            * `Iceland` - Iceland

            * `Indian/Antananarivo` - Indian/Antananarivo

            * `Indian/Chagos` - Indian/Chagos

            * `Indian/Christmas` - Indian/Christmas

            * `Indian/Cocos` - Indian/Cocos

            * `Indian/Comoro` - Indian/Comoro

            * `Indian/Kerguelen` - Indian/Kerguelen

            * `Indian/Mahe` - Indian/Mahe

            * `Indian/Maldives` - Indian/Maldives

            * `Indian/Mauritius` - Indian/Mauritius

            * `Indian/Mayotte` - Indian/Mayotte

            * `Indian/Reunion` - Indian/Reunion

            * `Iran` - Iran

            * `Israel` - Israel

            * `Jamaica` - Jamaica

            * `Japan` - Japan

            * `Kwajalein` - Kwajalein

            * `Libya` - Libya

            * `MET` - MET

            * `MST` - MST

            * `MST7MDT` - MST7MDT

            * `Mexico/BajaNorte` - Mexico/BajaNorte

            * `Mexico/BajaSur` - Mexico/BajaSur

            * `Mexico/General` - Mexico/General

            * `NZ` - NZ

            * `NZ-CHAT` - NZ-CHAT

            * `Navajo` - Navajo

            * `PRC` - PRC

            * `PST8PDT` - PST8PDT

            * `Pacific/Apia` - Pacific/Apia

            * `Pacific/Auckland` - Pacific/Auckland

            * `Pacific/Bougainville` - Pacific/Bougainville

            * `Pacific/Chatham` - Pacific/Chatham

            * `Pacific/Chuuk` - Pacific/Chuuk

            * `Pacific/Easter` - Pacific/Easter

            * `Pacific/Efate` - Pacific/Efate

            * `Pacific/Enderbury` - Pacific/Enderbury

            * `Pacific/Fakaofo` - Pacific/Fakaofo

            * `Pacific/Fiji` - Pacific/Fiji

            * `Pacific/Funafuti` - Pacific/Funafuti

            * `Pacific/Galapagos` - Pacific/Galapagos

            * `Pacific/Gambier` - Pacific/Gambier

            * `Pacific/Guadalcanal` - Pacific/Guadalcanal

            * `Pacific/Guam` - Pacific/Guam

            * `Pacific/Honolulu` - Pacific/Honolulu

            * `Pacific/Johnston` - Pacific/Johnston

            * `Pacific/Kanton` - Pacific/Kanton

            * `Pacific/Kiritimati` - Pacific/Kiritimati

            * `Pacific/Kosrae` - Pacific/Kosrae

            * `Pacific/Kwajalein` - Pacific/Kwajalein

            * `Pacific/Majuro` - Pacific/Majuro

            * `Pacific/Marquesas` - Pacific/Marquesas

            * `Pacific/Midway` - Pacific/Midway

            * `Pacific/Nauru` - Pacific/Nauru

            * `Pacific/Niue` - Pacific/Niue

            * `Pacific/Norfolk` - Pacific/Norfolk

            * `Pacific/Noumea` - Pacific/Noumea

            * `Pacific/Pago_Pago` - Pacific/Pago_Pago

            * `Pacific/Palau` - Pacific/Palau

            * `Pacific/Pitcairn` - Pacific/Pitcairn

            * `Pacific/Pohnpei` - Pacific/Pohnpei

            * `Pacific/Ponape` - Pacific/Ponape

            * `Pacific/Port_Moresby` - Pacific/Port_Moresby

            * `Pacific/Rarotonga` - Pacific/Rarotonga

            * `Pacific/Saipan` - Pacific/Saipan

            * `Pacific/Samoa` - Pacific/Samoa

            * `Pacific/Tahiti` - Pacific/Tahiti

            * `Pacific/Tarawa` - Pacific/Tarawa

            * `Pacific/Tongatapu` - Pacific/Tongatapu

            * `Pacific/Truk` - Pacific/Truk

            * `Pacific/Wake` - Pacific/Wake

            * `Pacific/Wallis` - Pacific/Wallis

            * `Pacific/Yap` - Pacific/Yap

            * `Poland` - Poland

            * `Portugal` - Portugal

            * `ROC` - ROC

            * `ROK` - ROK

            * `Singapore` - Singapore

            * `Turkey` - Turkey

            * `UCT` - UCT

            * `US/Alaska` - US/Alaska

            * `US/Aleutian` - US/Aleutian

            * `US/Arizona` - US/Arizona

            * `US/Central` - US/Central

            * `US/East-Indiana` - US/East-Indiana

            * `US/Eastern` - US/Eastern

            * `US/Hawaii` - US/Hawaii

            * `US/Indiana-Starke` - US/Indiana-Starke

            * `US/Michigan` - US/Michigan

            * `US/Mountain` - US/Mountain

            * `US/Pacific` - US/Pacific

            * `US/Samoa` - US/Samoa

            * `UTC` - UTC

            * `Universal` - Universal

            * `W-SU` - W-SU

            * `WET` - WET

            * `Zulu` - Zulu
          default: UTC
    FunnelVizType:
      title: FunnelVizType
      enum:
        - steps
        - time_to_convert
        - trends
      type: string
    FunnelVizTypeEnum:
      description: |-
        * `trends` - trends
        * `time_to_convert` - time_to_convert
        * `steps` - steps
      enum:
        - trends
        - time_to_convert
        - steps
      type: string
    FunnelWindowIntervalTypeEnum:
      description: |-
        * `DAY` - DAY
        * `SECOND` - SECOND
        * `MINUTE` - MINUTE
        * `HOUR` - HOUR
        * `WEEK` - WEEK
        * `MONTH` - MONTH
      enum:
        - DAY
        - SECOND
        - MINUTE
        - HOUR
        - WEEK
        - MONTH
      type: string
    FunnelsActorsQuery:
      title: FunnelsActorsQuery
      properties:
        funnelCustomSteps:
          title: Funnelcustomsteps
          description: >-
            Custom step numbers to get persons for. This overrides `funnelStep`.
            Primarily for correlation use.
          default: null
          items:
            type: integer
          type: array
          nullable: true
        funnelStep:
          title: Funnelstep
          description: >-
            Index of the step for which we want to get the timestamp for, per
            person. Positive for converted persons, negative for dropped of
            persons.
          default: null
          type: integer
          nullable: true
        funnelStepBreakdown:
          title: Funnelstepbreakdown
          description: >-
            The breakdown value for which to get persons for. This is an array
            for person and event properties, a string for groups and an integer
            for cohorts.
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
        funnelTrendsDropOff:
          title: Funneltrendsdropoff
          default: null
          type: boolean
          nullable: true
        funnelTrendsEntrancePeriodStart:
          title: Funneltrendsentranceperiodstart
          description: >-
            Used together with `funnelTrendsDropOff` for funnels time conversion
            date for the persons modal.
          default: null
          type: string
          nullable: true
        includeRecordings:
          title: Includerecordings
          default: null
          type: boolean
          nullable: true
        kind:
          title: Kind
          const: FunnelsActorsQuery
          default: FunnelsActorsQuery
        response:
          $ref: '#/components/schemas/ActorsQueryResponseNullable'
        source:
          $ref: '#/components/schemas/FunnelsQuery'
      required:
        - source
      type: object
    FunnelsFilter:
      title: FunnelsFilter
      properties: &ref_15
        binCount:
          title: Bincount
          default: null
          type: integer
          nullable: true
        breakdownAttributionType:
          $ref: '#/components/schemas/BreakdownAttributionTypeNullable'
        breakdownAttributionValue:
          title: Breakdownattributionvalue
          default: null
          type: integer
          nullable: true
        exclusions:
          title: Exclusions
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/FunnelExclusionEventsNode'
              - $ref: '#/components/schemas/FunnelExclusionActionsNode'
          type: array
          nullable: true
        funnelAggregateByHogQL:
          title: Funnelaggregatebyhogql
          default: null
          type: string
          nullable: true
        funnelFromStep:
          title: Funnelfromstep
          default: null
          type: integer
          nullable: true
        funnelOrderType:
          $ref: '#/components/schemas/StepOrderValueNullable'
        funnelStepReference:
          $ref: '#/components/schemas/FunnelStepReferenceNullable'
        funnelToStep:
          title: Funneltostep
          default: null
          type: integer
          nullable: true
        funnelVizType:
          $ref: '#/components/schemas/FunnelVizTypeNullable'
        funnelWindowInterval:
          title: Funnelwindowinterval
          default: null
          type: integer
          nullable: true
        funnelWindowIntervalUnit:
          $ref: '#/components/schemas/FunnelConversionWindowTimeUnitNullable'
        hidden_legend_breakdowns:
          title: Hidden Legend Breakdowns
          default: null
          items:
            type: string
          type: array
          nullable: true
        layout:
          $ref: '#/components/schemas/FunnelLayoutNullable'
      type: object
    FunnelsQuery:
      title: FunnelsQuery
      properties:
        aggregation_group_type_index:
          title: Aggregation Group Type Index
          description: Groups aggregation
          default: null
          type: integer
          nullable: true
        breakdownFilter:
          $ref: '#/components/schemas/BreakdownFilterNullable'
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        filterTestAccounts:
          title: Filtertestaccounts
          description: Exclude internal and test users by applying the respective filters
          default: null
          type: boolean
          nullable: true
        funnelsFilter:
          $ref: '#/components/schemas/FunnelsFilterNullable'
        interval:
          $ref: '#/components/schemas/IntervalTypeNullable'
        kind:
          title: Kind
          const: FunnelsQuery
          default: FunnelsQuery
        properties:
          title: Properties
          description: Property filters for all series
          anyOf:
            - items:
                anyOf:
                  - $ref: '#/components/schemas/EventPropertyFilter'
                  - $ref: '#/components/schemas/PersonPropertyFilter'
                  - $ref: '#/components/schemas/ElementPropertyFilter'
                  - $ref: '#/components/schemas/SessionPropertyFilter'
                  - $ref: '#/components/schemas/CohortPropertyFilter'
                  - $ref: '#/components/schemas/RecordingDurationFilter'
                  - $ref: '#/components/schemas/GroupPropertyFilter'
                  - $ref: '#/components/schemas/FeaturePropertyFilter'
                  - $ref: '#/components/schemas/HogQLPropertyFilter'
                  - $ref: '#/components/schemas/EmptyPropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
              type: array
            - $ref: '#/components/schemas/PropertyGroupFilter'
          default: null
          nullable: true
        samplingFactor:
          title: Samplingfactor
          description: Sampling rate
          default: null
          type: number
          nullable: true
        series:
          title: Series
          description: Events and actions to include
          items:
            anyOf:
              - $ref: '#/components/schemas/EventsNode'
              - $ref: '#/components/schemas/ActionsNode'
              - $ref: '#/components/schemas/DataWarehouseNode'
          type: array
      required:
        - series
      type: object
    GenericInsights:
      type: object
      properties:
        events:
          description: Events to filter on. One of `events` or `actions` is required.
          type: array
          items:
            $ref: '#/components/schemas/FilterEvent'
        actions:
          description: Actions to filter on. One of `events` or `actions` is required.
          type: array
          items:
            $ref: '#/components/schemas/FilterAction'
        properties:
          $ref: '#/components/schemas/Property'
        filter_test_accounts:
          description: >-
            Whether to filter out internal and test accounts. See "project
            settings" in your PostHog account for the filters.
          type: boolean
          default: false
        date_from:
          description: >-
            What date to filter the results from. Can either be a date
            `2021-01-01`, or a relative date, like `-7d` for last seven days,
            `-1m` for last month, `mStart` for start of the month or `yStart`
            for the start of the year.
          type: string
          default: '-7d'
        date_to:
          description: >-
            What date to filter the results to. Can either be a date
            `2021-01-01`, or a relative date, like `-7d` for last seven days,
            `-1m` for last month, `mStart` for start of the month or `yStart`
            for the start of the year.
          type: string
          default: '-7d'
      x-konfig-properties:
        properties:
          description: >-
            Filter events by event property, person property, cohort, groups and
            more.
    GoalLine:
      title: GoalLine
      properties:
        label:
          title: Label
          type: string
        value:
          title: Value
          type: number
      required:
        - label
        - value
      type: object
    Group:
      type: object
      properties:
        group_type_index:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        group_key:
          type: string
          maxLength: 400
        group_properties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - created_at
        - group_key
        - group_type_index
    GroupPropertyFilter:
      title: GroupPropertyFilter
      properties:
        group_type_index:
          title: Group Type Index
          default: null
          type: number
          nullable: true
        key:
          title: Key
          type: string
        label:
          title: Label
          default: null
          type: string
          nullable: true
        operator:
          $ref: '#/components/schemas/PropertyOperator'
        type:
          title: Type
          const: group
          default: group
        value:
          title: Value
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
      required:
        - key
        - operator
      type: object
    GroupType:
      type: object
      properties:
        group_type:
          type: string
          readOnly: true
        group_type_index:
          type: integer
          readOnly: true
        name_singular:
          type: string
          nullable: true
          maxLength: 400
        name_plural:
          type: string
          nullable: true
          maxLength: 400
      required:
        - group_type
        - group_type_index
    HogQLAutocomplete:
      title: HogQLAutocomplete
      properties:
        endPosition:
          title: Endposition
          description: End position of the editor word
          type: integer
        filters:
          $ref: '#/components/schemas/HogQLFiltersNullable'
        kind:
          title: Kind
          const: HogQLAutocomplete
          default: HogQLAutocomplete
        response:
          $ref: '#/components/schemas/HogQLAutocompleteResponseNullable'
        select:
          title: Select
          description: Full select query to validate
          type: string
        startPosition:
          title: Startposition
          description: Start position of the editor word
          type: integer
      required:
        - endPosition
        - select
        - startPosition
      type: object
    HogQLAutocompleteResponse:
      title: HogQLAutocompleteResponse
      properties: &ref_17
        incomplete_list:
          title: Incomplete List
          description: Whether or not the suggestions returned are complete
          type: boolean
        suggestions:
          title: Suggestions
          items:
            $ref: '#/components/schemas/AutocompleteCompletionItem'
          type: array
        timings:
          title: Timings
          description: Measured timings for different parts of the query generation process
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required: &ref_18
        - incomplete_list
        - suggestions
      type: object
    HogQLFilters:
      title: HogQLFilters
      properties: &ref_16
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        filterTestAccounts:
          title: Filtertestaccounts
          default: null
          type: boolean
          nullable: true
        properties:
          title: Properties
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
      type: object
    HogQLMetadata:
      title: HogQLMetadata
      properties:
        debug:
          title: Debug
          description: Enable more verbose output, usually run from the /debug page
          default: null
          type: boolean
          nullable: true
        expr:
          title: Expr
          description: HogQL expression to validate (use `select` or `expr`, but not both)
          default: null
          type: string
          nullable: true
        exprSource:
          title: Exprsource
          description: >-
            Query within which "expr" is validated. Defaults to "select * from
            events"
          anyOf:
            - $ref: '#/components/schemas/EventsNode'
            - $ref: '#/components/schemas/ActionsNode'
            - $ref: '#/components/schemas/PersonsNode'
            - $ref: '#/components/schemas/TimeToSeeDataSessionsQuery'
            - $ref: '#/components/schemas/EventsQuery'
            - $ref: '#/components/schemas/ActorsQuery'
            - $ref: '#/components/schemas/InsightActorsQuery'
            - $ref: '#/components/schemas/InsightActorsQueryOptions'
            - $ref: '#/components/schemas/SessionsTimelineQuery'
            - $ref: '#/components/schemas/HogQLQuery'
            - $ref: '#/components/schemas/HogQLMetadata'
            - $ref: '#/components/schemas/HogQLAutocomplete'
            - $ref: '#/components/schemas/WebOverviewQuery'
            - $ref: '#/components/schemas/WebStatsTableQuery'
            - $ref: '#/components/schemas/WebTopClicksQuery'
          default: null
          nullable: true
        filters:
          $ref: '#/components/schemas/HogQLFiltersNullable'
        kind:
          title: Kind
          const: HogQLMetadata
          default: HogQLMetadata
        response:
          $ref: '#/components/schemas/HogQLMetadataResponseNullable'
        select:
          title: Select
          description: Full select query to validate (use `select` or `expr`, but not both)
          default: null
          type: string
          nullable: true
        table:
          title: Table
          description: Table to validate the expression against
          default: null
          type: string
          nullable: true
      type: object
    HogQLMetadataResponse:
      title: HogQLMetadataResponse
      properties: &ref_19
        errors:
          title: Errors
          items:
            $ref: '#/components/schemas/HogQLNotice'
          type: array
        inputExpr:
          title: Inputexpr
          default: null
          type: string
          nullable: true
        inputSelect:
          title: Inputselect
          default: null
          type: string
          nullable: true
        isValid:
          title: Isvalid
          default: null
          type: boolean
          nullable: true
        isValidView:
          title: Isvalidview
          default: null
          type: boolean
          nullable: true
        notices:
          title: Notices
          items:
            $ref: '#/components/schemas/HogQLNotice'
          type: array
        warnings:
          title: Warnings
          items:
            $ref: '#/components/schemas/HogQLNotice'
          type: array
      required: &ref_20
        - errors
        - notices
        - warnings
      type: object
    HogQLNotice:
      title: HogQLNotice
      properties:
        end:
          title: End
          default: null
          type: integer
          nullable: true
        fix:
          title: Fix
          default: null
          type: string
          nullable: true
        message:
          title: Message
          type: string
        start:
          title: Start
          default: null
          type: integer
          nullable: true
      required:
        - message
      type: object
    HogQLPropertyFilter:
      title: HogQLPropertyFilter
      properties:
        key:
          title: Key
          type: string
        label:
          title: Label
          default: null
          type: string
          nullable: true
        type:
          title: Type
          const: hogql
          default: hogql
        value:
          title: Value
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
      required:
        - key
      type: object
    HogQLQuery:
      title: HogQLQuery
      properties:
        explain:
          title: Explain
          default: null
          type: boolean
          nullable: true
        filters:
          $ref: '#/components/schemas/HogQLFiltersNullable'
        kind:
          title: Kind
          const: HogQLQuery
          default: HogQLQuery
        modifiers:
          $ref: '#/components/schemas/HogQLQueryModifiersNullable'
        query:
          title: Query
          type: string
        response:
          $ref: '#/components/schemas/HogQLQueryResponseNullable'
        values:
          title: Values
          description: >-
            Constant values that can be referenced with the {placeholder} syntax
            in the query
          default: null
          type: object
          nullable: true
      required:
        - query
      type: object
    HogQLQueryModifiers:
      title: HogQLQueryModifiers
      properties: &ref_21
        dataWarehouseEventsModifiers:
          title: Datawarehouseeventsmodifiers
          default: null
          items:
            $ref: '#/components/schemas/DataWarehouseEventsModifier'
          type: array
          nullable: true
        inCohortVia:
          $ref: '#/components/schemas/InCohortViaNullable'
        materializationMode:
          $ref: '#/components/schemas/MaterializationModeNullable'
        personsArgMaxVersion:
          $ref: '#/components/schemas/PersonsArgMaxVersionNullable'
        personsOnEventsMode:
          $ref: '#/components/schemas/PersonsOnEventsModeNullable'
      type: object
    HogQLQueryResponse:
      title: HogQLQueryResponse
      properties: &ref_22
        clickhouse:
          title: Clickhouse
          description: Executed ClickHouse query
          default: null
          type: string
          nullable: true
        columns:
          title: Columns
          description: Returned columns
          default: null
          items: {}
          type: array
          nullable: true
        error:
          title: Error
          description: >-
            Query error. Returned only if 'explain' is true. Throws an error
            otherwise.
          default: null
          type: string
          nullable: true
        explain:
          title: Explain
          description: Query explanation output
          default: null
          items:
            type: string
          type: array
          nullable: true
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          description: Generated HogQL query
          default: null
          type: string
          nullable: true
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        metadata:
          $ref: '#/components/schemas/HogQLMetadataResponseNullable'
        modifiers:
          $ref: '#/components/schemas/HogQLQueryModifiersNullable'
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        query:
          title: Query
          description: Input query string
          default: null
          type: string
          nullable: true
        results:
          title: Results
          description: Query results
          default: null
          items: {}
          type: array
          nullable: true
        timings:
          title: Timings
          description: Measured timings for different parts of the query generation process
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          description: Types of returned columns
          default: null
          items: {}
          type: array
          nullable: true
      type: object
    InCohortVia:
      title: InCohortVia
      enum:
        - auto
        - leftjoin
        - subquery
        - leftjoin_conjoined
      type: string
    Insight:
      description: >-
        Simplified serializer to speed response times when loading large amounts
        of objects.
      type: object
      properties:
        tags:
          type: array
          items: {}
        description:
          type: string
          nullable: true
          maxLength: 400
        id:
          type: integer
          readOnly: true
        short_id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        derived_name:
          type: string
          nullable: true
          maxLength: 400
        filters: {}
        query:
          description: Query node JSON string
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        deleted:
          type: boolean
        dashboards:
          description: |2-

                    DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.
                    A dashboard ID for each of the dashboards that this insight is displayed on.
                    
          type: array
          items:
            type: integer
        dashboard_tiles:
          description: |2-

                A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.
                
          type: array
          items:
            $ref: '#/components/schemas/DashboardTileBasic'
          readOnly: true
        last_refresh:
          description: |2-

                The datetime this insight's results were generated.
                If added to one or more dashboards the insight can be refreshed separately on each.
                Returns the appropriate last_refresh datetime for the context the insight is viewed in
                (see from_dashboard query parameter).
                
          type: string
          readOnly: true
        next_allowed_client_refresh:
          description: |2-

                The earliest possible datetime at which we'll allow the cached results for this insight to be refreshed
                by querying the database.
                
          type: string
          readOnly: true
        result:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        updated_at:
          type: string
          format: date-time
          readOnly: true
        favorited:
          type: boolean
        saved:
          type: boolean
        last_modified_at:
          type: string
          format: date-time
          readOnly: true
        last_modified_by:
          $ref: '#/components/schemas/UserBasic'
        is_sample:
          type: boolean
          readOnly: true
        effective_restriction_level:
          $ref: '#/components/schemas/EffectiveRestrictionLevelEnum'
        effective_privilege_level:
          $ref: '#/components/schemas/EffectivePrivilegeLevelEnum'
        timezone:
          description: The timezone this chart is displayed in.
          type: string
          readOnly: true
        is_cached:
          type: string
          readOnly: true
      required:
        - created_at
        - created_by
        - dashboard_tiles
        - effective_privilege_level
        - effective_restriction_level
        - id
        - is_cached
        - is_sample
        - last_modified_at
        - last_modified_by
        - last_refresh
        - next_allowed_client_refresh
        - result
        - short_id
        - timezone
        - updated_at
      x-konfig-properties:
        created_by:
          readOnly: true
        last_modified_by:
          readOnly: true
        effective_restriction_level:
          readOnly: true
        effective_privilege_level:
          readOnly: true
    InsightActorsQuery:
      title: InsightActorsQuery
      properties:
        breakdown:
          title: Breakdown
          anyOf:
            - type: string
            - type: integer
          default: null
          nullable: true
        compare:
          $ref: '#/components/schemas/CompareNullable'
        day:
          title: Day
          anyOf:
            - type: string
            - type: integer
          default: null
          nullable: true
        includeRecordings:
          title: Includerecordings
          default: null
          type: boolean
          nullable: true
        interval:
          title: Interval
          description: An interval selected out of available intervals in source query.
          default: null
          type: integer
          nullable: true
        kind:
          title: Kind
          const: InsightActorsQuery
          default: InsightActorsQuery
        response:
          $ref: '#/components/schemas/ActorsQueryResponseNullable'
        series:
          title: Series
          default: null
          type: integer
          nullable: true
        source:
          title: Source
          discriminator:
            mapping:
              FunnelsQuery: '#/components/schemas/FunnelsQuery'
              LifecycleQuery: '#/components/schemas/LifecycleQuery'
              PathsQuery: '#/components/schemas/PathsQuery'
              RetentionQuery: '#/components/schemas/RetentionQuery'
              StickinessQuery: '#/components/schemas/StickinessQuery'
              TrendsQuery: '#/components/schemas/TrendsQuery'
            propertyName: kind
          oneOf:
            - $ref: '#/components/schemas/TrendsQuery'
            - $ref: '#/components/schemas/FunnelsQuery'
            - $ref: '#/components/schemas/RetentionQuery'
            - $ref: '#/components/schemas/PathsQuery'
            - $ref: '#/components/schemas/StickinessQuery'
            - $ref: '#/components/schemas/LifecycleQuery'
        status:
          title: Status
          default: null
          type: string
          nullable: true
      required:
        - source
      type: object
    InsightActorsQueryOptions:
      title: InsightActorsQueryOptions
      properties:
        kind:
          title: Kind
          const: InsightActorsQueryOptions
          default: InsightActorsQueryOptions
        response:
          $ref: '#/components/schemas/InsightActorsQueryOptionsResponseNullable'
        source:
          title: Source
          anyOf:
            - $ref: '#/components/schemas/InsightActorsQuery'
            - $ref: '#/components/schemas/FunnelsActorsQuery'
            - $ref: '#/components/schemas/FunnelCorrelationActorsQuery'
      required:
        - source
      type: object
    InsightActorsQueryOptionsResponse:
      title: InsightActorsQueryOptionsResponse
      properties: &ref_23
        breakdown:
          title: Breakdown
          default: null
          items:
            $ref: '#/components/schemas/BreakdownItem'
          type: array
          nullable: true
        compare:
          title: Compare
          default: null
          items:
            $ref: '#/components/schemas/CompareItem'
          type: array
          nullable: true
        day:
          title: Day
          default: null
          items:
            $ref: '#/components/schemas/DayItem'
          type: array
          nullable: true
        interval:
          title: Interval
          default: null
          items:
            $ref: '#/components/schemas/IntervalItem'
          type: array
          nullable: true
        series:
          title: Series
          default: null
          items:
            $ref: '#/components/schemas/Series'
          type: array
          nullable: true
        status:
          title: Status
          default: null
          items:
            $ref: '#/components/schemas/StatusItem'
          type: array
          nullable: true
      type: object
    InsightVizNode:
      title: InsightVizNode
      properties:
        embedded:
          title: Embedded
          description: Query is embedded inside another bordered component
          default: null
          type: boolean
          nullable: true
        full:
          title: Full
          description: Show with most visual options enabled. Used in insight scene.
          default: null
          type: boolean
          nullable: true
        hidePersonsModal:
          title: Hidepersonsmodal
          default: null
          type: boolean
          nullable: true
        kind:
          title: Kind
          const: InsightVizNode
          default: InsightVizNode
        showCorrelationTable:
          title: Showcorrelationtable
          default: null
          type: boolean
          nullable: true
        showFilters:
          title: Showfilters
          default: null
          type: boolean
          nullable: true
        showHeader:
          title: Showheader
          default: null
          type: boolean
          nullable: true
        showLastComputation:
          title: Showlastcomputation
          default: null
          type: boolean
          nullable: true
        showLastComputationRefresh:
          title: Showlastcomputationrefresh
          default: null
          type: boolean
          nullable: true
        showResults:
          title: Showresults
          default: null
          type: boolean
          nullable: true
        showTable:
          title: Showtable
          default: null
          type: boolean
          nullable: true
        source:
          title: Source
          discriminator:
            mapping:
              FunnelsQuery: '#/components/schemas/FunnelsQuery'
              LifecycleQuery: '#/components/schemas/LifecycleQuery'
              PathsQuery: '#/components/schemas/PathsQuery'
              RetentionQuery: '#/components/schemas/RetentionQuery'
              StickinessQuery: '#/components/schemas/StickinessQuery'
              TrendsQuery: '#/components/schemas/TrendsQuery'
            propertyName: kind
          oneOf:
            - $ref: '#/components/schemas/TrendsQuery'
            - $ref: '#/components/schemas/FunnelsQuery'
            - $ref: '#/components/schemas/RetentionQuery'
            - $ref: '#/components/schemas/PathsQuery'
            - $ref: '#/components/schemas/StickinessQuery'
            - $ref: '#/components/schemas/LifecycleQuery'
        suppressSessionAnalysisWarning:
          title: Suppresssessionanalysiswarning
          default: null
          type: boolean
          nullable: true
        vizSpecificOptions:
          $ref: '#/components/schemas/VizSpecificOptionsNullable'
      required:
        - source
      type: object
    IntervalEnum:
      description: |-
        * `hour` - hour
        * `day` - day
        * `week` - week
        * `every 5 minutes` - every 5 minutes
      enum:
        - hour
        - day
        - week
        - every 5 minutes
      type: string
    IntervalItem:
      title: IntervalItem
      properties:
        label:
          title: Label
          type: string
        value:
          title: Value
          description: An interval selected out of available intervals in source query
          type: integer
      required:
        - label
        - value
      type: object
    IntervalType:
      title: IntervalType
      enum:
        - hour
        - day
        - week
        - month
      type: string
    Key:
      title: Key
      enum:
        - tag_name
        - text
        - href
        - selector
      type: string
    Kind:
      title: Kind
      enum:
        - Method
        - Function
        - Constructor
        - Field
        - Variable
        - Class
        - Struct
        - Interface
        - Module
        - Property
        - Event
        - Operator
        - Unit
        - Value
        - Constant
        - Enum
        - EnumMember
        - Keyword
        - Text
        - Color
        - File
        - Reference
        - Customcolor
        - Folder
        - TypeParameter
        - User
        - Issue
        - Snippet
      type: string
    Kind1:
      title: Kind1
      enum:
        - ActionsNode
        - EventsNode
      type: string
    Kind2:
      title: Kind2
      enum:
        - unit
        - duration_s
        - percentage
      type: string
    LevelD7eEnum:
      description: |-
        * `21` - Everyone in the project can edit
        * `37` - Only those invited to this dashboard can edit
      enum:
        - 21
        - 37
      type: integer
    LifecycleFilter:
      title: LifecycleFilter
      properties: &ref_25
        showValuesOnSeries:
          title: Showvaluesonseries
          default: null
          type: boolean
          nullable: true
        toggledLifecycles:
          title: Toggledlifecycles
          default: null
          items:
            $ref: '#/components/schemas/LifecycleToggle'
          type: array
          nullable: true
      type: object
    LifecycleQuery:
      title: LifecycleQuery
      properties:
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        filterTestAccounts:
          title: Filtertestaccounts
          description: Exclude internal and test users by applying the respective filters
          default: null
          type: boolean
          nullable: true
        interval:
          $ref: '#/components/schemas/IntervalTypeNullable'
        kind:
          title: Kind
          const: LifecycleQuery
          default: LifecycleQuery
        lifecycleFilter:
          $ref: '#/components/schemas/LifecycleFilterNullable'
        properties:
          title: Properties
          description: Property filters for all series
          anyOf:
            - items:
                anyOf:
                  - $ref: '#/components/schemas/EventPropertyFilter'
                  - $ref: '#/components/schemas/PersonPropertyFilter'
                  - $ref: '#/components/schemas/ElementPropertyFilter'
                  - $ref: '#/components/schemas/SessionPropertyFilter'
                  - $ref: '#/components/schemas/CohortPropertyFilter'
                  - $ref: '#/components/schemas/RecordingDurationFilter'
                  - $ref: '#/components/schemas/GroupPropertyFilter'
                  - $ref: '#/components/schemas/FeaturePropertyFilter'
                  - $ref: '#/components/schemas/HogQLPropertyFilter'
                  - $ref: '#/components/schemas/EmptyPropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
              type: array
            - $ref: '#/components/schemas/PropertyGroupFilter'
          default: null
          nullable: true
        response:
          $ref: '#/components/schemas/LifecycleQueryResponseNullable'
        samplingFactor:
          title: Samplingfactor
          description: Sampling rate
          default: null
          type: number
          nullable: true
        series:
          title: Series
          description: Events and actions to include
          items:
            anyOf:
              - $ref: '#/components/schemas/EventsNode'
              - $ref: '#/components/schemas/ActionsNode'
              - $ref: '#/components/schemas/DataWarehouseNode'
          type: array
      required:
        - series
      type: object
    LifecycleQueryResponse:
      title: LifecycleQueryResponse
      properties: &ref_26
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            type: object
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required: &ref_27
        - results
      type: object
    LifecycleToggle:
      title: LifecycleToggle
      enum:
        - new
        - resurrecting
        - returning
        - dormant
      type: string
    MaterializationMode:
      title: MaterializationMode
      enum:
        - auto
        - legacy_null_as_string
        - legacy_null_as_null
        - disabled
      type: string
    MathEnum:
      description: |-
        * `total` - total
        * `dau` - dau
        * `weekly_active` - weekly_active
        * `monthly_active` - monthly_active
        * `unique_group` - unique_group
        * `unique_session` - unique_session
        * `sum` - sum
        * `min` - min
        * `max` - max
        * `avg` - avg
        * `median` - median
        * `p90` - p90
        * `p95` - p95
        * `p99` - p99
        * `min_count_per_actor` - min_count_per_actor
        * `max_count_per_actor` - max_count_per_actor
        * `avg_count_per_actor` - avg_count_per_actor
        * `median_count_per_actor` - median_count_per_actor
        * `p90_count_per_actor` - p90_count_per_actor
        * `p95_count_per_actor` - p95_count_per_actor
        * `p99_count_per_actor` - p99_count_per_actor
        * `hogql` - hogql
      enum:
        - total
        - dau
        - weekly_active
        - monthly_active
        - unique_group
        - unique_session
        - sum
        - min
        - max
        - avg
        - median
        - p90
        - p95
        - p99
        - min_count_per_actor
        - max_count_per_actor
        - avg_count_per_actor
        - median_count_per_actor
        - p90_count_per_actor
        - p95_count_per_actor
        - p99_count_per_actor
        - hogql
      type: string
    MathGroupTypeIndex:
      title: MathGroupTypeIndex
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
    MinimalFeatureFlag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        team_id:
          type: integer
          readOnly: true
        name:
          type: string
        key:
          type: string
          maxLength: 400
        filters:
          type: object
          additionalProperties: {}
        deleted:
          type: boolean
        active:
          type: boolean
        ensure_experience_continuity:
          type: boolean
          nullable: true
      required:
        - id
        - key
        - team_id
    MinimalPerson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        distinct_ids:
          type: string
          readOnly: true
        properties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
        - created_at
        - distinct_ids
        - id
        - name
        - uuid
    Notebook:
      type: object
      properties:
        title:
          type: string
          nullable: true
          maxLength: 256
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        id:
          type: string
          format: uuid
          readOnly: true
        short_id:
          type: string
          readOnly: true
        content:
          nullable: true
        text_content:
          type: string
          nullable: true
        deleted:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        last_modified_at:
          type: string
          format: date-time
          readOnly: true
        last_modified_by:
          $ref: '#/components/schemas/UserBasic'
      required:
        - created_at
        - created_by
        - id
        - last_modified_at
        - last_modified_by
        - short_id
      x-konfig-properties:
        created_by:
          readOnly: true
        last_modified_by:
          readOnly: true
    NotebookMinimal:
      type: object
      properties:
        title:
          type: string
          readOnly: true
          nullable: true
        id:
          type: string
          format: uuid
          readOnly: true
        short_id:
          type: string
          readOnly: true
        deleted:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        last_modified_at:
          type: string
          format: date-time
          readOnly: true
        last_modified_by:
          $ref: '#/components/schemas/UserBasic'
      required:
        - created_at
        - created_by
        - deleted
        - id
        - last_modified_at
        - last_modified_by
        - short_id
        - title
      x-konfig-properties:
        created_by:
          readOnly: true
        last_modified_by:
          readOnly: true
    NullEnum:
      enum:
        - null
      type: object
    OperatorEnum:
      description: |-
        * `exact` - exact
        * `is_not` - is_not
        * `icontains` - icontains
        * `not_icontains` - not_icontains
        * `regex` - regex
        * `not_regex` - not_regex
        * `gt` - gt
        * `lt` - lt
        * `gte` - gte
        * `lte` - lte
        * `is_set` - is_set
        * `is_not_set` - is_not_set
        * `is_date_exact` - is_date_exact
        * `is_date_after` - is_date_after
        * `is_date_before` - is_date_before
      enum:
        - exact
        - is_not
        - icontains
        - not_icontains
        - regex
        - not_regex
        - gt
        - lt
        - gte
        - lte
        - is_set
        - is_not_set
        - is_date_exact
        - is_date_after
        - is_date_before
      type: string
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 64
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        membership_level:
          allOf:
            - $ref: '#/components/schemas/EffectiveMembershipLevelEnum'
          nullable: true
          readOnly: true
        plugins_access_level:
          $ref: '#/components/schemas/PluginsAccessLevelEnum'
        teams:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
        available_features:
          type: array
          items:
            type: string
            maxLength: 64
          readOnly: true
        available_product_features:
          type: array
          items: {}
          readOnly: true
          nullable: true
        is_member_join_email_enabled:
          type: boolean
        metadata:
          type: string
          readOnly: true
        customer_id:
          type: string
          readOnly: true
          nullable: true
        enforce_2fa:
          type: boolean
          nullable: true
        member_count:
          type: string
          readOnly: true
      required:
        - available_features
        - available_product_features
        - created_at
        - customer_id
        - id
        - member_count
        - membership_level
        - metadata
        - name
        - plugins_access_level
        - slug
        - teams
        - updated_at
      x-konfig-properties:
        plugins_access_level:
          readOnly: true
    OrganizationBasic:
      description: >-
        Serializer for `Organization` model with minimal attributes to speeed up
        loading and transfer times.

        Also used for nested serializers.
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 64
        slug:
          type: string
          maxLength: 48
          pattern: ^[-a-zA-Z0-9_]+$
        membership_level:
          allOf:
            - $ref: '#/components/schemas/EffectiveMembershipLevelEnum'
          nullable: true
          readOnly: true
      required:
        - id
        - membership_level
        - name
        - slug
    OrganizationDomain:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        domain:
          type: string
          maxLength: 128
        is_verified:
          description: Determines whether a domain is verified or not.
          type: boolean
          readOnly: true
        verified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        verification_challenge:
          type: string
          readOnly: true
        jit_provisioning_enabled:
          type: boolean
        sso_enforcement:
          type: string
          maxLength: 28
        has_saml:
          description: >-
            Returns whether SAML is configured for the instance. Does not
            validate the user has the required license (that check is performed
            in other places).
          type: boolean
          readOnly: true
        saml_entity_id:
          type: string
          nullable: true
          maxLength: 512
        saml_acs_url:
          type: string
          nullable: true
          maxLength: 512
        saml_x509_cert:
          type: string
          nullable: true
      required:
        - domain
        - has_saml
        - id
        - is_verified
        - verification_challenge
        - verified_at
    OrganizationInvite:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        target_email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        emailing_attempt_made:
          type: boolean
          readOnly: true
        is_expired:
          description: Check if invite is older than INVITE_DAYS_VALIDITY days.
          type: boolean
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        message:
          type: string
          nullable: true
      required:
        - created_at
        - created_by
        - emailing_attempt_made
        - id
        - is_expired
        - target_email
        - updated_at
      x-konfig-properties:
        created_by:
          readOnly: true
    OrganizationMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          $ref: '#/components/schemas/UserBasic'
        level:
          $ref: '#/components/schemas/OrganizationMemberLevelEnum'
        joined_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_2fa_enabled:
          type: boolean
          readOnly: true
        has_social_auth:
          type: boolean
          readOnly: true
      required:
        - has_social_auth
        - id
        - is_2fa_enabled
        - joined_at
        - updated_at
        - user
      x-konfig-properties:
        user:
          readOnly: true
        level:
          minimum: 0
          maximum: 32767
    OrganizationMemberLevelEnum:
      description: |-
        * `1` - member
        * `8` - administrator
        * `15` - owner
      enum:
        - 1
        - 8
        - 15
      type: integer
    PaginatedActionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    PaginatedActivityLogList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityLog'
    PaginatedAnnotationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
    PaginatedBatchExportList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BatchExport'
    PaginatedBatchExportLogEntryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BatchExportLogEntry'
    PaginatedBatchExportRunList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/BatchExportRun'
    PaginatedClickhouseEventList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseEvent'
    PaginatedCohortList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cohort'
    PaginatedDashboardBasicList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DashboardBasic'
    PaginatedDashboardTemplateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DashboardTemplate'
    PaginatedEarlyAccessFeatureList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EarlyAccessFeature'
    PaginatedExperimentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Experiment'
    PaginatedExportedAssetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExportedAsset'
    PaginatedFeatureFlagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeatureFlag'
    PaginatedFeatureFlagRoleAccessList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeatureFlagRoleAccess'
    PaginatedGroupList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedInsightList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Insight'
    PaginatedNotebookMinimalList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotebookMinimal'
    PaginatedOrganizationDomainList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationDomain'
    PaginatedOrganizationInviteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationInvite'
    PaginatedOrganizationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    PaginatedOrganizationMemberList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationMember'
    PaginatedPersonList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: >-
            https://app.posthog.com/api/projects/{project_id}/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: >-
            https://app.posthog.com/api/projects/{project_id}/accounts/?offset=400&limit=100
        count:
          type: integer
          example: 400
        results:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    PaginatedPluginConfigList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PluginConfig'
    PaginatedPluginList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Plugin'
    PaginatedPluginLogEntryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PluginLogEntry'
    PaginatedRoleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    PaginatedRoleMembershipList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoleMembership'
    PaginatedSessionRecordingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SessionRecording'
    PaginatedSessionRecordingPlaylistList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SessionRecordingPlaylist'
    PaginatedSubscriptionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    PaginatedSurveyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Survey'
    PaginatedTeamBasicList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TeamBasic'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedAction:
      description: >-
        Serializer mixin that resolves appropriate response for tags depending
        on license.
      type: object
      properties:
        tags:
          type: array
          items: {}
        description:
          type: string
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        post_to_slack:
          type: boolean
        slack_message_format:
          type: string
          maxLength: 600
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ActionStep'
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        deleted:
          type: boolean
        is_calculating:
          type: boolean
          readOnly: true
        last_calculated_at:
          type: string
          format: date-time
        team_id:
          type: integer
          readOnly: true
        is_action:
          type: boolean
          readOnly: true
          default: true
        bytecode_error:
          type: string
          readOnly: true
          nullable: true
      x-konfig-properties:
        created_by:
          readOnly: true
    PatchedAnnotation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
          maxLength: 400
        date_marker:
          type: string
          format: date-time
          nullable: true
        creation_type:
          $ref: '#/components/schemas/CreationTypeEnum'
        dashboard_item:
          type: integer
          nullable: true
        insight_short_id:
          type: string
          nullable: true
          readOnly: true
        insight_name:
          type: string
          nullable: true
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
        scope:
          $ref: '#/components/schemas/AnnotationScopeEnum'
      x-konfig-properties:
        created_by:
          readOnly: true
    PatchedBatchExport:
      description: Serializer for a BatchExport model.
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team_id:
          description: The team this belongs to.
          type: integer
          readOnly: true
        name:
          description: A human-readable name for this BatchExport.
          type: string
        destination:
          $ref: '#/components/schemas/BatchExportDestination'
        interval:
          $ref: '#/components/schemas/IntervalEnum'
        paused:
          description: Whether this BatchExport is paused or not.
          type: boolean
        created_at:
          description: The timestamp at which this BatchExport was created.
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          description: The timestamp at which this BatchExport was last updated.
          type: string
          format: date-time
          readOnly: true
        last_paused_at:
          description: The timestamp at which this BatchExport was last paused.
          type: string
          format: date-time
          nullable: true
        start_at:
          description: Time before which any Batch Export runs won't be triggered.
          type: string
          format: date-time
          nullable: true
        end_at:
          description: Time after which any Batch Export runs won't be triggered.
          type: string
          format: date-time
          nullable: true
        latest_runs:
          type: array
          items:
            $ref: '#/components/schemas/BatchExportRun'
          readOnly: true
        hogql_query:
          type: string
        schema:
          description: A schema of custom fields to select when exporting data.
          readOnly: true
          nullable: true
    PatchedCohort:
      type: object
      properties:
        description:
          type: string
          maxLength: 1000
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        groups: {}
        deleted:
          type: boolean
        filters:
          nullable: true
        query:
          nullable: true
        is_calculating:
          type: boolean
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        last_calculation:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        errors_calculating:
          type: integer
          readOnly: true
        count:
          type: integer
          readOnly: true
          nullable: true
        is_static:
          type: boolean
      x-konfig-properties:
        created_by:
          readOnly: true
    PatchedDashboard:
      description: >-
        Serializer mixin that resolves appropriate response for tags depending
        on license.
      type: object
      properties:
        tags:
          type: array
          items: {}
        description:
          type: string
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        pinned:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        is_shared:
          type: boolean
          readOnly: true
        deleted:
          type: boolean
        creation_mode:
          $ref: '#/components/schemas/CreationModeEnum'
        use_template:
          type: string
          writeOnly: true
        use_dashboard:
          type: integer
          writeOnly: true
          nullable: true
        delete_insights:
          type: boolean
          writeOnly: true
          default: false
        filters: {}
        tiles:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
          readOnly: true
        restriction_level:
          $ref: '#/components/schemas/RestrictionLevelEnum'
        effective_restriction_level:
          $ref: '#/components/schemas/EffectiveRestrictionLevelEnum'
        effective_privilege_level:
          $ref: '#/components/schemas/EffectivePrivilegeLevelEnum'
      x-konfig-properties:
        created_by:
          readOnly: true
        creation_mode:
          readOnly: true
        restriction_level:
          minimum: 0
          maximum: 32767
        effective_restriction_level:
          readOnly: true
        effective_privilege_level:
          readOnly: true
    PatchedDashboardTemplate:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
          nullable: true
        id:
          type: string
          format: uuid
          readOnly: true
        template_name:
          type: string
          nullable: true
          maxLength: 400
        dashboard_description:
          type: string
          nullable: true
          maxLength: 400
        dashboard_filters:
          nullable: true
        tiles:
          nullable: true
        variables:
          nullable: true
        deleted:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_by:
          type: integer
          nullable: true
        image_url:
          type: string
          nullable: true
          maxLength: 8201
        team_id:
          type: integer
          nullable: true
          readOnly: true
        scope:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DashboardTemplateScopeEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
    PatchedEarlyAccessFeature:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
          readOnly: true
        feature_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        name:
          type: string
          maxLength: 200
        stage:
          $ref: '#/components/schemas/StageEnum'
        documentation_url:
          type: string
          format: uri
          maxLength: 800
        created_at:
          type: string
          format: date-time
          readOnly: true
      x-konfig-properties:
        feature_flag:
          readOnly: true
    PatchedExperiment:
      type: object
      properties:
        description:
          type: string
          nullable: true
          maxLength: 400
        parameters:
          nullable: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 400
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        feature_flag_key:
          type: string
        feature_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        secondary_metrics:
          nullable: true
        filters: {}
        archived:
          type: boolean
        created_by:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      x-konfig-properties:
        feature_flag:
          readOnly: true
        created_by:
          readOnly: true
    PatchedExplicitTeamMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        level:
          $ref: '#/components/schemas/ExplicitTeamMemberLevelEnum'
        parent_level:
          type: integer
          readOnly: true
        parent_membership_id:
          type: string
          format: uuid
          readOnly: true
        joined_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          $ref: '#/components/schemas/UserBasic'
        user_uuid:
          type: string
          format: uuid
          writeOnly: true
        effective_level:
          $ref: '#/components/schemas/EffectiveMembershipLevelEnum'
      x-konfig-properties:
        level:
          minimum: 0
          maximum: 32767
        user:
          readOnly: true
        effective_level:
          description: >-
            If organization level is higher than project level, then that takes
            precedence over explicit project level.
          readOnly: true
    PatchedFeatureFlag:
      description: >-
        Serializer mixin that resolves appropriate response for tags depending
        on license.
      type: object
      properties:
        tags:
          type: array
          items: {}
        id:
          type: integer
          readOnly: true
        name:
          description: >-
            contains the description for the flag (field name `name` is kept for
            backwards-compatibility)
          type: string
        key:
          type: string
          maxLength: 400
        filters:
          type: object
          additionalProperties: {}
        deleted:
          type: boolean
        active:
          type: boolean
        created_by:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
        is_simple_flag:
          type: boolean
          readOnly: true
        rollout_percentage:
          type: integer
          nullable: true
          readOnly: true
        ensure_experience_continuity:
          type: boolean
          nullable: true
        experiment_set:
          type: array
          items:
            type: integer
          readOnly: true
        surveys:
          type: object
          additionalProperties: {}
          readOnly: true
        features:
          type: object
          additionalProperties: {}
          readOnly: true
        rollback_conditions:
          nullable: true
        performed_rollback:
          type: boolean
          nullable: true
        can_edit:
          type: boolean
          readOnly: true
        usage_dashboard:
          type: integer
          readOnly: true
        analytics_dashboards:
          type: array
          items:
            type: integer
        has_enriched_analytics:
          type: boolean
          nullable: true
      x-konfig-properties:
        created_by:
          readOnly: true
    PatchedGroupType:
      type: object
      properties:
        group_type:
          type: string
          readOnly: true
        group_type_index:
          type: integer
          readOnly: true
        name_singular:
          type: string
          nullable: true
          maxLength: 400
        name_plural:
          type: string
          nullable: true
          maxLength: 400
    PatchedInsight:
      description: >-
        Simplified serializer to speed response times when loading large amounts
        of objects.
      type: object
      properties:
        tags:
          type: array
          items: {}
        description:
          type: string
          nullable: true
          maxLength: 400
        id:
          type: integer
          readOnly: true
        short_id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        derived_name:
          type: string
          nullable: true
          maxLength: 400
        filters: {}
        query:
          description: Query node JSON string
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        deleted:
          type: boolean
        dashboards:
          description: |2-

                    DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.
                    A dashboard ID for each of the dashboards that this insight is displayed on.
                    
          type: array
          items:
            type: integer
        dashboard_tiles:
          description: |2-

                A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.
                
          type: array
          items:
            $ref: '#/components/schemas/DashboardTileBasic'
          readOnly: true
        last_refresh:
          description: |2-

                The datetime this insight's results were generated.
                If added to one or more dashboards the insight can be refreshed separately on each.
                Returns the appropriate last_refresh datetime for the context the insight is viewed in
                (see from_dashboard query parameter).
                
          type: string
          readOnly: true
        next_allowed_client_refresh:
          description: |2-

                The earliest possible datetime at which we'll allow the cached results for this insight to be refreshed
                by querying the database.
                
          type: string
          readOnly: true
        result:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        updated_at:
          type: string
          format: date-time
          readOnly: true
        favorited:
          type: boolean
        saved:
          type: boolean
        last_modified_at:
          type: string
          format: date-time
          readOnly: true
        last_modified_by:
          $ref: '#/components/schemas/UserBasic'
        is_sample:
          type: boolean
          readOnly: true
        effective_restriction_level:
          $ref: '#/components/schemas/EffectiveRestrictionLevelEnum'
        effective_privilege_level:
          $ref: '#/components/schemas/EffectivePrivilegeLevelEnum'
        timezone:
          description: The timezone this chart is displayed in.
          type: string
          readOnly: true
        is_cached:
          type: string
          readOnly: true
      x-konfig-properties:
        created_by:
          readOnly: true
        last_modified_by:
          readOnly: true
        effective_restriction_level:
          readOnly: true
        effective_privilege_level:
          readOnly: true
    PatchedNotebook:
      type: object
      properties:
        title:
          type: string
          nullable: true
          maxLength: 256
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        id:
          type: string
          format: uuid
          readOnly: true
        short_id:
          type: string
          readOnly: true
        content:
          nullable: true
        text_content:
          type: string
          nullable: true
        deleted:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        last_modified_at:
          type: string
          format: date-time
          readOnly: true
        last_modified_by:
          $ref: '#/components/schemas/UserBasic'
      x-konfig-properties:
        created_by:
          readOnly: true
        last_modified_by:
          readOnly: true
    PatchedOrganization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 64
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        membership_level:
          allOf:
            - $ref: '#/components/schemas/EffectiveMembershipLevelEnum'
          nullable: true
          readOnly: true
        plugins_access_level:
          $ref: '#/components/schemas/PluginsAccessLevelEnum'
        teams:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
        available_features:
          type: array
          items:
            type: string
            maxLength: 64
          readOnly: true
        available_product_features:
          type: array
          items: {}
          readOnly: true
          nullable: true
        is_member_join_email_enabled:
          type: boolean
        metadata:
          type: string
          readOnly: true
        customer_id:
          type: string
          readOnly: true
          nullable: true
        enforce_2fa:
          type: boolean
          nullable: true
        member_count:
          type: string
          readOnly: true
      x-konfig-properties:
        plugins_access_level:
          readOnly: true
    PatchedOrganizationDomain:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        domain:
          type: string
          maxLength: 128
        is_verified:
          description: Determines whether a domain is verified or not.
          type: boolean
          readOnly: true
        verified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        verification_challenge:
          type: string
          readOnly: true
        jit_provisioning_enabled:
          type: boolean
        sso_enforcement:
          type: string
          maxLength: 28
        has_saml:
          description: >-
            Returns whether SAML is configured for the instance. Does not
            validate the user has the required license (that check is performed
            in other places).
          type: boolean
          readOnly: true
        saml_entity_id:
          type: string
          nullable: true
          maxLength: 512
        saml_acs_url:
          type: string
          nullable: true
          maxLength: 512
        saml_x509_cert:
          type: string
          nullable: true
    PatchedOrganizationMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          $ref: '#/components/schemas/UserBasic'
        level:
          $ref: '#/components/schemas/OrganizationMemberLevelEnum'
        joined_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_2fa_enabled:
          type: boolean
          readOnly: true
        has_social_auth:
          type: boolean
          readOnly: true
      x-konfig-properties:
        user:
          readOnly: true
        level:
          minimum: 0
          maximum: 32767
    PatchedPerson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        distinct_ids:
          type: array
          items:
            type: string
          readOnly: true
        properties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedPlugin:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: integer
          readOnly: true
        plugin_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PluginTypeEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        name:
          type: string
          nullable: true
          maxLength: 200
        url:
          type: string
          nullable: true
          readOnly: true
        icon:
          type: string
          nullable: true
          maxLength: 800
        config_schema: {}
        tag:
          type: string
          nullable: true
          maxLength: 200
        latest_tag:
          type: string
          readOnly: true
          nullable: true
        is_global:
          type: boolean
        organization_id:
          type: string
          format: uuid
          readOnly: true
        organization_name:
          type: string
          readOnly: true
        capabilities: {}
        metrics:
          nullable: true
        public_jobs:
          nullable: true
    PatchedPluginConfig:
      type: object
      properties:
        description:
          type: string
          nullable: true
          maxLength: 1000
        id:
          type: integer
          readOnly: true
        plugin:
          type: integer
        enabled:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        config:
          type: string
          readOnly: true
        error:
          type: string
          readOnly: true
        team_id:
          type: integer
          nullable: true
          readOnly: true
        plugin_info:
          type: string
          readOnly: true
        delivery_rate_24h:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        deleted:
          type: boolean
          nullable: true
    PatchedRole:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        feature_flags_access_level:
          $ref: '#/components/schemas/FeatureFlagsAccessLevelEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        members:
          type: string
          readOnly: true
        associated_flags:
          type: string
          readOnly: true
      x-konfig-properties:
        feature_flags_access_level:
          minimum: 0
          maximum: 32767
        created_by:
          readOnly: true
    PatchedSessionRecordingPlaylist:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          readOnly: true
        short_id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        derived_name:
          type: string
          nullable: true
          maxLength: 400
        pinned:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        deleted:
          type: boolean
        filters: {}
        last_modified_at:
          type: string
          format: date-time
          readOnly: true
        last_modified_by:
          $ref: '#/components/schemas/UserBasic'
      x-konfig-properties:
        created_by:
          readOnly: true
        last_modified_by:
          readOnly: true
    PatchedSubscription:
      description: Standard Subscription serializer.
      type: object
      properties:
        summary:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 100
        id:
          type: integer
          readOnly: true
        dashboard:
          type: integer
          nullable: true
        insight:
          type: integer
          nullable: true
        target_type:
          $ref: '#/components/schemas/TargetTypeEnum'
        target_value:
          type: string
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        interval:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        byweekday:
          type: array
          items:
            $ref: '#/components/schemas/ByweekdayEnum'
          nullable: true
        bysetpos:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        start_date:
          type: string
          format: date-time
        until_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        deleted:
          type: boolean
        next_delivery_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        invite_message:
          type: string
          nullable: true
      x-konfig-properties:
        created_by:
          readOnly: true
    PatchedSurveySerializerCreateUpdateOnly:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 400
        type:
          $ref: '#/components/schemas/Type7baEnum'
        linked_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        linked_flag_id:
          type: integer
          writeOnly: true
          nullable: true
        targeting_flag_id:
          type: integer
          writeOnly: true
        targeting_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        targeting_flag_filters:
          writeOnly: true
          nullable: true
        remove_targeting_flag:
          type: boolean
          writeOnly: true
          nullable: true
        questions:
          nullable: true
        conditions:
          nullable: true
        appearance:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        archived:
          type: boolean
      x-konfig-properties:
        linked_flag:
          readOnly: true
        targeting_flag:
          readOnly: true
        created_by:
          readOnly: true
    PatchedTeam:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        api_token:
          type: string
          readOnly: true
        app_urls:
          type: array
          items:
            type: string
            nullable: true
            maxLength: 200
        name:
          type: string
          maxLength: 200
          minLength: 1
        slack_incoming_webhook:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        anonymize_ips:
          type: boolean
        completed_snippet_onboarding:
          type: boolean
        ingested_event:
          type: boolean
          readOnly: true
        test_account_filters: {}
        test_account_filters_default_checked:
          type: boolean
          nullable: true
        path_cleaning_filters:
          nullable: true
        is_demo:
          type: boolean
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        data_attributes: {}
        person_display_name_properties:
          type: array
          items:
            type: string
            maxLength: 400
          nullable: true
        correlation_config:
          nullable: true
        autocapture_opt_out:
          type: boolean
          nullable: true
        autocapture_exceptions_opt_in:
          type: boolean
          nullable: true
        autocapture_exceptions_errors_to_ignore:
          nullable: true
        capture_console_log_opt_in:
          type: boolean
          nullable: true
        capture_performance_opt_in:
          type: boolean
          nullable: true
        session_recording_opt_in:
          type: boolean
        session_recording_sample_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          nullable: true
        session_recording_minimum_duration_milliseconds:
          type: integer
          maximum: 15000
          minimum: 0
          nullable: true
        session_recording_linked_flag:
          nullable: true
        session_recording_network_payload_capture_config:
          nullable: true
        session_replay_config:
          nullable: true
        effective_membership_level:
          allOf:
            - $ref: '#/components/schemas/EffectiveMembershipLevelEnum'
          nullable: true
          readOnly: true
        access_control:
          type: boolean
        week_start_day:
          nullable: true
          minimum: -32768
          maximum: 32767
          oneOf:
            - $ref: '#/components/schemas/WeekStartDayEnum'
            - $ref: '#/components/schemas/NullEnum'
        has_group_types:
          type: boolean
          readOnly: true
        primary_dashboard:
          type: integer
          nullable: true
        live_events_columns:
          type: array
          items:
            type: string
          nullable: true
        recording_domains:
          type: array
          items:
            type: string
            nullable: true
            maxLength: 200
          nullable: true
        person_on_events_querying_enabled:
          type: boolean
          readOnly: true
        groups_on_events_querying_enabled:
          type: boolean
          readOnly: true
        inject_web_apps:
          type: boolean
          nullable: true
        extra_settings:
          nullable: true
        has_completed_onboarding_for:
          nullable: true
        surveys_opt_in:
          type: boolean
          nullable: true
    PatchedUser:
      type: object
      properties:
        date_joined:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        distinct_id:
          type: string
          nullable: true
          maxLength: 200
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          title: Email address
          type: string
          format: email
          maxLength: 254
        pending_email:
          title: Pending email address awaiting verification
          type: string
          format: email
          nullable: true
          maxLength: 254
        email_opt_in:
          type: boolean
          nullable: true
        is_email_verified:
          type: boolean
          nullable: true
        notification_settings:
          type: object
          additionalProperties: {}
        anonymize_data:
          type: boolean
          nullable: true
        toolbar_mode:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ToolbarModeEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        has_password:
          type: boolean
          readOnly: true
        is_staff:
          title: Staff status
          description: Designates whether the user can log into this admin site.
          type: boolean
        is_impersonated:
          type: boolean
          nullable: true
          readOnly: true
        team:
          $ref: '#/components/schemas/TeamBasic'
        organization:
          $ref: '#/components/schemas/Organization'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationBasic'
          readOnly: true
        set_current_organization:
          type: string
          writeOnly: true
        set_current_team:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
        current_password:
          type: string
          writeOnly: true
        events_column_config: {}
        is_2fa_enabled:
          type: boolean
          readOnly: true
        has_social_auth:
          type: boolean
          readOnly: true
        has_seen_product_intro_for:
          nullable: true
        scene_personalisation:
          type: array
          items:
            $ref: '#/components/schemas/ScenePersonalisationBasic'
          readOnly: true
        theme_mode:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ThemeModeEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
      x-konfig-properties:
        team:
          readOnly: true
        organization:
          readOnly: true
    PathCleaningFilter:
      title: PathCleaningFilter
      properties:
        alias:
          title: Alias
          default: null
          type: string
          nullable: true
        regex:
          title: Regex
          default: null
          type: string
          nullable: true
      type: object
    PathType:
      title: PathType
      enum:
        - $pageview
        - $screen
        - custom_event
        - hogql
      type: string
    PathsFilter:
      title: PathsFilter
      properties:
        edgeLimit:
          title: Edgelimit
          default: null
          type: integer
          nullable: true
        endPoint:
          title: Endpoint
          default: null
          type: string
          nullable: true
        excludeEvents:
          title: Excludeevents
          default: null
          items:
            type: string
          type: array
          nullable: true
        includeEventTypes:
          title: Includeeventtypes
          default: null
          items:
            $ref: '#/components/schemas/PathType'
          type: array
          nullable: true
        localPathCleaningFilters:
          title: Localpathcleaningfilters
          default: null
          items:
            $ref: '#/components/schemas/PathCleaningFilter'
          type: array
          nullable: true
        maxEdgeWeight:
          title: Maxedgeweight
          default: null
          type: integer
          nullable: true
        minEdgeWeight:
          title: Minedgeweight
          default: null
          type: integer
          nullable: true
        pathDropoffKey:
          title: Pathdropoffkey
          description: Relevant only within actors query
          default: null
          type: string
          nullable: true
        pathEndKey:
          title: Pathendkey
          description: Relevant only within actors query
          default: null
          type: string
          nullable: true
        pathGroupings:
          title: Pathgroupings
          default: null
          items:
            type: string
          type: array
          nullable: true
        pathReplacements:
          title: Pathreplacements
          default: null
          type: boolean
          nullable: true
        pathStartKey:
          title: Pathstartkey
          description: Relevant only within actors query
          default: null
          type: string
          nullable: true
        pathsHogQLExpression:
          title: Pathshogqlexpression
          default: null
          type: string
          nullable: true
        startPoint:
          title: Startpoint
          default: null
          type: string
          nullable: true
        stepLimit:
          title: Steplimit
          default: null
          type: integer
          nullable: true
      type: object
    PathsQuery:
      title: PathsQuery
      properties:
        aggregation_group_type_index:
          title: Aggregation Group Type Index
          description: Groups aggregation
          default: null
          type: integer
          nullable: true
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        filterTestAccounts:
          title: Filtertestaccounts
          description: Exclude internal and test users by applying the respective filters
          default: null
          type: boolean
          nullable: true
        funnelPathsFilter:
          $ref: '#/components/schemas/FunnelPathsFilterNullable'
        kind:
          title: Kind
          const: PathsQuery
          default: PathsQuery
        pathsFilter:
          $ref: '#/components/schemas/PathsFilter'
        properties:
          title: Properties
          description: Property filters for all series
          anyOf:
            - items:
                anyOf:
                  - $ref: '#/components/schemas/EventPropertyFilter'
                  - $ref: '#/components/schemas/PersonPropertyFilter'
                  - $ref: '#/components/schemas/ElementPropertyFilter'
                  - $ref: '#/components/schemas/SessionPropertyFilter'
                  - $ref: '#/components/schemas/CohortPropertyFilter'
                  - $ref: '#/components/schemas/RecordingDurationFilter'
                  - $ref: '#/components/schemas/GroupPropertyFilter'
                  - $ref: '#/components/schemas/FeaturePropertyFilter'
                  - $ref: '#/components/schemas/HogQLPropertyFilter'
                  - $ref: '#/components/schemas/EmptyPropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
              type: array
            - $ref: '#/components/schemas/PropertyGroupFilter'
          default: null
          nullable: true
        response:
          $ref: '#/components/schemas/PathsQueryResponseNullable'
        samplingFactor:
          title: Samplingfactor
          description: Sampling rate
          default: null
          type: number
          nullable: true
      required:
        - pathsFilter
      type: object
      x-konfig-properties:
        pathsFilter:
          description: Properties specific to the paths insight
    PathsQueryResponse:
      title: PathsQueryResponse
      properties: &ref_30
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            type: object
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required: &ref_31
        - results
      type: object
    Person:
      type: object
      properties: &ref_5
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        distinct_ids:
          type: array
          items:
            type: string
          readOnly: true
        properties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required: &ref_6
        - created_at
        - distinct_ids
        - id
        - name
        - uuid
    PersonPropertyFilter:
      title: PersonPropertyFilter
      properties:
        key:
          title: Key
          type: string
        label:
          title: Label
          default: null
          type: string
          nullable: true
        operator:
          $ref: '#/components/schemas/PropertyOperator'
        type:
          title: Type
          description: Person properties
          const: person
          default: person
        value:
          title: Value
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
      required:
        - key
        - operator
      type: object
    PersonsArgMaxVersion:
      title: PersonsArgMaxVersion
      enum:
        - auto
        - v1
        - v2
      type: string
    PersonsNode:
      title: PersonsNode
      properties:
        cohort:
          title: Cohort
          default: null
          type: integer
          nullable: true
        distinctId:
          title: Distinctid
          default: null
          type: string
          nullable: true
        fixedProperties:
          title: Fixedproperties
          description: >-
            Fixed properties in the query, can't be edited in the interface
            (e.g. scoping down by person)
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        kind:
          title: Kind
          const: PersonsNode
          default: PersonsNode
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        properties:
          title: Properties
          description: Properties configurable in the interface
          default: null
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
          nullable: true
        response:
          title: Response
          description: Cached query response
          default: null
          type: object
          nullable: true
        search:
          title: Search
          default: null
          type: string
          nullable: true
      type: object
    PersonsOnEventsMode:
      title: PersonsOnEventsMode
      enum:
        - disabled
        - person_id_no_override_properties_on_events
        - person_id_override_properties_on_events
        - person_id_override_properties_joined
      type: string
    Plugin:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: integer
          readOnly: true
        plugin_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PluginTypeEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        name:
          type: string
          nullable: true
          maxLength: 200
        url:
          type: string
          nullable: true
          readOnly: true
        icon:
          type: string
          nullable: true
          maxLength: 800
        config_schema: {}
        tag:
          type: string
          nullable: true
          maxLength: 200
        latest_tag:
          type: string
          readOnly: true
          nullable: true
        is_global:
          type: boolean
        organization_id:
          type: string
          format: uuid
          readOnly: true
        organization_name:
          type: string
          readOnly: true
        capabilities: {}
        metrics:
          nullable: true
        public_jobs:
          nullable: true
      required:
        - id
        - latest_tag
        - organization_id
        - organization_name
        - url
    PluginConfig:
      type: object
      properties:
        description:
          type: string
          nullable: true
          maxLength: 1000
        id:
          type: integer
          readOnly: true
        plugin:
          type: integer
        enabled:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        config:
          type: string
          readOnly: true
        error:
          type: string
          readOnly: true
        team_id:
          type: integer
          nullable: true
          readOnly: true
        plugin_info:
          type: string
          readOnly: true
        delivery_rate_24h:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        deleted:
          type: boolean
          nullable: true
      required:
        - config
        - created_at
        - delivery_rate_24h
        - error
        - id
        - order
        - plugin
        - plugin_info
        - team_id
        - updated_at
    PluginLogEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
        team_id:
          type: integer
        plugin_id:
          type: integer
        plugin_config_id:
          type: integer
        timestamp:
          type: string
          format: date-time
        source:
          $ref: '#/components/schemas/SourceEnum'
        type:
          $ref: '#/components/schemas/PluginLogEntryTypeEnum'
        message:
          type: string
        instance_id:
          type: string
          format: uuid
      required:
        - id
        - instance_id
        - message
        - plugin_config_id
        - plugin_id
        - source
        - team_id
        - timestamp
        - type
    PluginLogEntryTypeEnum:
      description: |-
        * `DEBUG` - DEBUG
        * `LOG` - LOG
        * `INFO` - INFO
        * `WARN` - WARN
        * `ERROR` - ERROR
      enum:
        - DEBUG
        - LOG
        - INFO
        - WARN
        - ERROR
      type: string
    PluginTypeEnum:
      description: |-
        * `local` - local
        * `custom` - custom
        * `repository` - repository
        * `source` - source
      enum:
        - local
        - custom
        - repository
        - source
      type: string
    PluginsAccessLevelEnum:
      description: |-
        * `0` - none
        * `3` - config
        * `6` - install
        * `9` - root
      enum:
        - 0
        - 3
        - 6
        - 9
      type: integer
    Property:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PropertyTypeEnum'
        values:
          type: array
          items:
            $ref: '#/components/schemas/PropertyItem'
      required:
        - values
      x-konfig-properties:
        type:
          description: |2-

             You can use a simplified version:
            ```json
            {
                "properties": [
                    {
                        "key": "email",
                        "value": "x@y.com",
                        "operator": "exact",
                        "type": "event"
                    }
                ]
            }
            ```

            Or you can create more complicated queries with AND and OR:
            ```json
            {
                "properties": {
                    "type": "AND",
                    "values": [
                        {
                            "type": "OR",
                            "values": [
                                {"key": "email", ...},
                                {"key": "email", ...}
                            ]
                        },
                        {
                            "type": "AND",
                            "values": [
                                {"key": "email", ...},
                                {"key": "email", ...}
                            ]
                        }
                    ]
                ]
            }
            ```


            * `AND` - AND
            * `OR` - OR
          default: AND
    PropertyGroupFilter:
      title: PropertyGroupFilter
      properties:
        type:
          $ref: '#/components/schemas/FilterLogicalOperator'
        values:
          title: Values
          items:
            $ref: '#/components/schemas/PropertyGroupFilterValue'
          type: array
      required:
        - type
        - values
      type: object
    PropertyGroupFilterValue:
      title: PropertyGroupFilterValue
      properties:
        type:
          $ref: '#/components/schemas/FilterLogicalOperator'
        values:
          title: Values
          items:
            anyOf:
              - $ref: '#/components/schemas/PropertyGroupFilterValue'
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
              - $ref: '#/components/schemas/ElementPropertyFilter'
              - $ref: '#/components/schemas/SessionPropertyFilter'
              - $ref: '#/components/schemas/CohortPropertyFilter'
              - $ref: '#/components/schemas/RecordingDurationFilter'
              - $ref: '#/components/schemas/GroupPropertyFilter'
              - $ref: '#/components/schemas/FeaturePropertyFilter'
              - $ref: '#/components/schemas/HogQLPropertyFilter'
              - $ref: '#/components/schemas/EmptyPropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePropertyFilter'
              - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
          type: array
      required:
        - type
        - values
      type: object
    PropertyItem:
      type: object
      properties:
        key:
          description: >-
            Key of the property you're filtering on. For example `email` or
            `$current_url`
          type: string
        value:
          description: >-
            Value of your filter. For example `test@example.com` or
            `https://example.com/test/`. Can be an array for an OR query, like
            `["test@example.com","ok@example.com"]`
          type: string
        operator:
          nullable: true
          default: exact
          oneOf:
            - $ref: '#/components/schemas/OperatorEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        type:
          default: event
          oneOf:
            - $ref: '#/components/schemas/PropertyItemTypeEnum'
            - $ref: '#/components/schemas/BlankEnum'
      required:
        - key
        - value
    PropertyItemTypeEnum:
      description: |-
        * `event` - event
        * `feature` - feature
        * `person` - person
        * `cohort` - cohort
        * `element` - element
        * `static-cohort` - static-cohort
        * `precalculated-cohort` - precalculated-cohort
        * `group` - group
        * `recording` - recording
        * `behavioral` - behavioral
        * `session` - session
        * `hogql` - hogql
        * `data_warehouse` - data_warehouse
        * `data_warehouse_person_property` - data_warehouse_person_property
      enum:
        - event
        - feature
        - person
        - cohort
        - element
        - static-cohort
        - precalculated-cohort
        - group
        - recording
        - behavioral
        - session
        - hogql
        - data_warehouse
        - data_warehouse_person_property
      type: string
    PropertyMathType:
      title: PropertyMathType
      enum:
        - avg
        - sum
        - min
        - max
        - median
        - p90
        - p95
        - p99
      type: string
    PropertyOperator:
      title: PropertyOperator
      enum:
        - exact
        - is_not
        - icontains
        - not_icontains
        - regex
        - not_regex
        - gt
        - gte
        - lt
        - lte
        - is_set
        - is_not_set
        - is_date_exact
        - is_date_before
        - is_date_after
        - between
        - not_between
        - min
        - max
      type: string
    PropertyTypeEnum:
      description: |-
        * `AND` - AND
        * `OR` - OR
      enum:
        - AND
        - OR
      type: string
    QueryRequest:
      title: QueryRequest
      properties:
        async:
          title: Async
          description: >-
            (Experimental) Whether to run the query asynchronously. Defaults to
            False. If True, the `id` of the query can be used to check the
            status and to cancel it.
          default: null
          type: boolean
          nullable: true
          example: true
          x-examples:
            - true
        client_query_id:
          title: Client Query Id
          description: >-
            Client provided query ID. Can be used to retrieve the status or
            cancel the query.
          default: null
          type: string
          nullable: true
        query:
          title: Query
          description: >-
            Submit a JSON string representing a query for PostHog data analysis,
            for example a HogQL query.


            Example payload:


            ```


            {"query": {"kind": "HogQLQuery", "query": "select * from events
            limit 100"}}


            ```


            For more details on HogQL queries, see the [PostHog HogQL
            documentation](/docs/hogql#api-access).
          discriminator:
            mapping:
              ActionsNode: '#/components/schemas/ActionsNode'
              ActorsQuery: '#/components/schemas/ActorsQuery'
              DataTableNode: '#/components/schemas/DataTableNode'
              DataVisualizationNode: '#/components/schemas/DataVisualizationNode'
              DataWarehouseNode: '#/components/schemas/DataWarehouseNode'
              DatabaseSchemaQuery: '#/components/schemas/DatabaseSchemaQuery'
              EventsNode: '#/components/schemas/EventsNode'
              EventsQuery: '#/components/schemas/EventsQuery'
              FunnelCorrelationQuery: '#/components/schemas/FunnelCorrelationQuery'
              FunnelsQuery: '#/components/schemas/FunnelsQuery'
              HogQLAutocomplete: '#/components/schemas/HogQLAutocomplete'
              HogQLMetadata: '#/components/schemas/HogQLMetadata'
              HogQLQuery: '#/components/schemas/HogQLQuery'
              InsightActorsQuery: '#/components/schemas/InsightActorsQuery'
              InsightActorsQueryOptions: '#/components/schemas/InsightActorsQueryOptions'
              InsightVizNode: '#/components/schemas/InsightVizNode'
              LifecycleQuery: '#/components/schemas/LifecycleQuery'
              PathsQuery: '#/components/schemas/PathsQuery'
              PersonsNode: '#/components/schemas/PersonsNode'
              RetentionQuery: '#/components/schemas/RetentionQuery'
              SavedInsightNode: '#/components/schemas/SavedInsightNode'
              SessionsTimelineQuery: '#/components/schemas/SessionsTimelineQuery'
              StickinessQuery: '#/components/schemas/StickinessQuery'
              TimeToSeeDataSessionsQuery: '#/components/schemas/TimeToSeeDataSessionsQuery'
              TrendsQuery: '#/components/schemas/TrendsQuery'
              WebOverviewQuery: '#/components/schemas/WebOverviewQuery'
              WebStatsTableQuery: '#/components/schemas/WebStatsTableQuery'
              WebTopClicksQuery: '#/components/schemas/WebTopClicksQuery'
            propertyName: kind
          oneOf:
            - $ref: '#/components/schemas/EventsNode'
            - $ref: '#/components/schemas/ActionsNode'
            - $ref: '#/components/schemas/PersonsNode'
            - $ref: '#/components/schemas/DataWarehouseNode'
            - $ref: '#/components/schemas/TimeToSeeDataSessionsQuery'
            - $ref: '#/components/schemas/EventsQuery'
            - $ref: '#/components/schemas/ActorsQuery'
            - $ref: '#/components/schemas/InsightActorsQuery'
            - $ref: '#/components/schemas/InsightActorsQueryOptions'
            - $ref: '#/components/schemas/SessionsTimelineQuery'
            - $ref: '#/components/schemas/HogQLQuery'
            - $ref: '#/components/schemas/HogQLMetadata'
            - $ref: '#/components/schemas/HogQLAutocomplete'
            - $ref: '#/components/schemas/WebOverviewQuery'
            - $ref: '#/components/schemas/WebStatsTableQuery'
            - $ref: '#/components/schemas/WebTopClicksQuery'
            - $ref: '#/components/schemas/DataVisualizationNode'
            - $ref: '#/components/schemas/DataTableNode'
            - $ref: '#/components/schemas/SavedInsightNode'
            - $ref: '#/components/schemas/InsightVizNode'
            - $ref: '#/components/schemas/TrendsQuery'
            - $ref: '#/components/schemas/FunnelsQuery'
            - $ref: '#/components/schemas/RetentionQuery'
            - $ref: '#/components/schemas/PathsQuery'
            - $ref: '#/components/schemas/StickinessQuery'
            - $ref: '#/components/schemas/LifecycleQuery'
            - $ref: '#/components/schemas/FunnelCorrelationQuery'
            - $ref: '#/components/schemas/DatabaseSchemaQuery'
        refresh:
          title: Refresh
          default: null
          type: boolean
          nullable: true
      required:
        - query
      type: object
    QueryResponseAlternative:
      title: QueryResponseAlternative
      anyOf:
        - $ref: '#/components/schemas/QueryResponseAlternative1'
        - type: object
        - $ref: '#/components/schemas/QueryResponseAlternative2'
        - $ref: '#/components/schemas/QueryResponseAlternative3'
        - $ref: '#/components/schemas/QueryResponseAlternative4'
        - $ref: '#/components/schemas/QueryResponseAlternative5'
        - $ref: '#/components/schemas/QueryResponseAlternative6'
        - $ref: '#/components/schemas/QueryResponseAlternative7'
        - $ref: '#/components/schemas/QueryResponseAlternative8'
        - $ref: '#/components/schemas/QueryResponseAlternative9'
        - $ref: '#/components/schemas/QueryResponseAlternative10'
        - $ref: '#/components/schemas/QueryResponseAlternative11'
        - $ref: '#/components/schemas/QueryResponseAlternative12'
        - $ref: '#/components/schemas/QueryResponseAlternative13'
        - $ref: '#/components/schemas/QueryResponseAlternative14'
        - $ref: '#/components/schemas/QueryResponseAlternative17'
        - additionalProperties:
            items:
              $ref: '#/components/schemas/DatabaseSchemaQueryResponseField'
            type: array
          type: object
    QueryResponseAlternative1:
      title: QueryResponseAlternative1
      properties:
        next:
          title: Next
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            $ref: '#/components/schemas/EventType'
          type: array
      required:
        - results
      type: object
    QueryResponseAlternative10:
      title: QueryResponseAlternative10
      properties:
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            $ref: '#/components/schemas/WebOverviewItem'
          type: array
        samplingRate:
          $ref: '#/components/schemas/SamplingRateNullable'
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required:
        - results
      type: object
    QueryResponseAlternative11:
      title: QueryResponseAlternative11
      properties:
        columns:
          title: Columns
          default: null
          items: {}
          type: array
          nullable: true
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        results:
          title: Results
          items: {}
          type: array
        samplingRate:
          $ref: '#/components/schemas/SamplingRateNullable'
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          default: null
          items: {}
          type: array
          nullable: true
      required:
        - results
      type: object
    QueryResponseAlternative12:
      title: QueryResponseAlternative12
      properties:
        columns:
          title: Columns
          default: null
          items: {}
          type: array
          nullable: true
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items: {}
          type: array
        samplingRate:
          $ref: '#/components/schemas/SamplingRateNullable'
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          default: null
          items: {}
          type: array
          nullable: true
      required:
        - results
      type: object
    QueryResponseAlternative13:
      title: QueryResponseAlternative13
      properties:
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            type: object
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required:
        - results
      type: object
    QueryResponseAlternative14:
      title: QueryResponseAlternative14
      properties:
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            $ref: '#/components/schemas/RetentionResult'
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required:
        - results
      type: object
    QueryResponseAlternative17:
      title: QueryResponseAlternative17
      properties:
        columns:
          title: Columns
          default: null
          items: {}
          type: array
          nullable: true
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        results:
          $ref: '#/components/schemas/FunnelCorrelationResult'
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          default: null
          items: {}
          type: array
          nullable: true
      required:
        - results
      type: object
    QueryResponseAlternative2:
      title: QueryResponseAlternative2
      properties:
        results:
          title: Results
          items:
            type: object
          type: array
      required:
        - results
      type: object
    QueryResponseAlternative3:
      title: QueryResponseAlternative3
      properties:
        columns:
          title: Columns
          items: {}
          type: array
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          type: string
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        results:
          title: Results
          items:
            items: {}
            type: array
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          items:
            type: string
          type: array
      required:
        - columns
        - hogql
        - results
        - types
      type: object
    QueryResponseAlternative4:
      title: QueryResponseAlternative4
      properties:
        columns:
          title: Columns
          items: {}
          type: array
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          type: string
        limit:
          title: Limit
          type: integer
        missing_actors_count:
          title: Missing Actors Count
          default: null
          type: integer
          nullable: true
        offset:
          title: Offset
          type: integer
        results:
          title: Results
          items:
            items: {}
            type: array
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          items:
            type: string
          type: array
      required:
        - columns
        - hogql
        - limit
        - offset
        - results
        - types
      type: object
    QueryResponseAlternative5:
      title: QueryResponseAlternative5
      properties:
        breakdown:
          title: Breakdown
          default: null
          items:
            $ref: '#/components/schemas/BreakdownItem'
          type: array
          nullable: true
        compare:
          title: Compare
          default: null
          items:
            $ref: '#/components/schemas/CompareItem'
          type: array
          nullable: true
        day:
          title: Day
          default: null
          items:
            $ref: '#/components/schemas/DayItem'
          type: array
          nullable: true
        interval:
          title: Interval
          default: null
          items:
            $ref: '#/components/schemas/IntervalItem'
          type: array
          nullable: true
        series:
          title: Series
          default: null
          items:
            $ref: '#/components/schemas/Series'
          type: array
          nullable: true
        status:
          title: Status
          default: null
          items:
            $ref: '#/components/schemas/StatusItem'
          type: array
          nullable: true
      type: object
    QueryResponseAlternative6:
      title: QueryResponseAlternative6
      properties:
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            $ref: '#/components/schemas/TimelineEntry'
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required:
        - results
      type: object
    QueryResponseAlternative7:
      title: QueryResponseAlternative7
      properties:
        clickhouse:
          title: Clickhouse
          description: Executed ClickHouse query
          default: null
          type: string
          nullable: true
        columns:
          title: Columns
          description: Returned columns
          default: null
          items: {}
          type: array
          nullable: true
        error:
          title: Error
          description: >-
            Query error. Returned only if 'explain' is true. Throws an error
            otherwise.
          default: null
          type: string
          nullable: true
        explain:
          title: Explain
          description: Query explanation output
          default: null
          items:
            type: string
          type: array
          nullable: true
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          description: Generated HogQL query
          default: null
          type: string
          nullable: true
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        metadata:
          $ref: '#/components/schemas/HogQLMetadataResponseNullable'
        modifiers:
          $ref: '#/components/schemas/HogQLQueryModifiersNullable'
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        query:
          title: Query
          description: Input query string
          default: null
          type: string
          nullable: true
        results:
          title: Results
          description: Query results
          default: null
          items: {}
          type: array
          nullable: true
        timings:
          title: Timings
          description: Measured timings for different parts of the query generation process
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          description: Types of returned columns
          default: null
          items: {}
          type: array
          nullable: true
      type: object
    QueryResponseAlternative8:
      title: QueryResponseAlternative8
      properties:
        errors:
          title: Errors
          items:
            $ref: '#/components/schemas/HogQLNotice'
          type: array
        inputExpr:
          title: Inputexpr
          default: null
          type: string
          nullable: true
        inputSelect:
          title: Inputselect
          default: null
          type: string
          nullable: true
        isValid:
          title: Isvalid
          default: null
          type: boolean
          nullable: true
        isValidView:
          title: Isvalidview
          default: null
          type: boolean
          nullable: true
        notices:
          title: Notices
          items:
            $ref: '#/components/schemas/HogQLNotice'
          type: array
        warnings:
          title: Warnings
          items:
            $ref: '#/components/schemas/HogQLNotice'
          type: array
      required:
        - errors
        - notices
        - warnings
      type: object
    QueryResponseAlternative9:
      title: QueryResponseAlternative9
      properties:
        incomplete_list:
          title: Incomplete List
          description: Whether or not the suggestions returned are complete
          type: boolean
        suggestions:
          title: Suggestions
          items:
            $ref: '#/components/schemas/AutocompleteCompletionItem'
          type: array
        timings:
          title: Timings
          description: Measured timings for different parts of the query generation process
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required:
        - incomplete_list
        - suggestions
      type: object
    QueryTiming:
      title: QueryTiming
      properties:
        k:
          title: K
          description: Key. Shortened to 'k' to save on data.
          type: string
        t:
          title: T
          description: Time in seconds. Shortened to 't' to save on data.
          type: number
      required:
        - k
        - t
      type: object
    RecordingDurationFilter:
      title: RecordingDurationFilter
      properties:
        key:
          title: Key
          const: duration
          default: duration
        label:
          title: Label
          default: null
          type: string
          nullable: true
        operator:
          $ref: '#/components/schemas/PropertyOperator'
        type:
          title: Type
          const: recording
          default: recording
        value:
          title: Value
          type: number
      required:
        - operator
        - value
      type: object
    Response:
      title: Response
      properties: &ref_7
        next:
          title: Next
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            $ref: '#/components/schemas/EventType'
          type: array
      required: &ref_8
        - results
      type: object
    RestrictionLevelEnum:
      description: |-
        * `21` - Everyone in the project can edit
        * `37` - Only those invited to this dashboard can edit
      enum:
        - 21
        - 37
      type: integer
    RetentionEntity:
      title: RetentionEntity
      properties: &ref_34
        custom_name:
          title: Custom Name
          default: null
          type: string
          nullable: true
        id:
          title: Id
          anyOf:
            - type: string
            - type: number
          default: null
          nullable: true
        kind:
          $ref: '#/components/schemas/Kind1Nullable'
        name:
          title: Name
          default: null
          type: string
          nullable: true
        order:
          title: Order
          default: null
          type: integer
          nullable: true
        type:
          $ref: '#/components/schemas/EntityTypeNullable'
        uuid:
          title: Uuid
          default: null
          type: string
          nullable: true
      type: object
    RetentionFilter:
      title: RetentionFilter
      properties:
        period:
          $ref: '#/components/schemas/RetentionPeriodNullable'
        retentionReference:
          $ref: '#/components/schemas/RetentionReferenceNullable'
        retentionType:
          $ref: '#/components/schemas/RetentionTypeNullable'
        returningEntity:
          $ref: '#/components/schemas/RetentionEntityNullable'
        targetEntity:
          $ref: '#/components/schemas/RetentionEntityNullable'
        totalIntervals:
          title: Totalintervals
          default: null
          type: integer
          nullable: true
      type: object
    RetentionPeriod:
      title: RetentionPeriod
      enum:
        - Hour
        - Day
        - Week
        - Month
      type: string
    RetentionQuery:
      title: RetentionQuery
      properties:
        aggregation_group_type_index:
          title: Aggregation Group Type Index
          description: Groups aggregation
          default: null
          type: integer
          nullable: true
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        filterTestAccounts:
          title: Filtertestaccounts
          description: Exclude internal and test users by applying the respective filters
          default: null
          type: boolean
          nullable: true
        kind:
          title: Kind
          const: RetentionQuery
          default: RetentionQuery
        properties:
          title: Properties
          description: Property filters for all series
          anyOf:
            - items:
                anyOf:
                  - $ref: '#/components/schemas/EventPropertyFilter'
                  - $ref: '#/components/schemas/PersonPropertyFilter'
                  - $ref: '#/components/schemas/ElementPropertyFilter'
                  - $ref: '#/components/schemas/SessionPropertyFilter'
                  - $ref: '#/components/schemas/CohortPropertyFilter'
                  - $ref: '#/components/schemas/RecordingDurationFilter'
                  - $ref: '#/components/schemas/GroupPropertyFilter'
                  - $ref: '#/components/schemas/FeaturePropertyFilter'
                  - $ref: '#/components/schemas/HogQLPropertyFilter'
                  - $ref: '#/components/schemas/EmptyPropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
              type: array
            - $ref: '#/components/schemas/PropertyGroupFilter'
          default: null
          nullable: true
        response:
          $ref: '#/components/schemas/RetentionQueryResponseNullable'
        retentionFilter:
          $ref: '#/components/schemas/RetentionFilter'
        samplingFactor:
          title: Samplingfactor
          description: Sampling rate
          default: null
          type: number
          nullable: true
      required:
        - retentionFilter
      type: object
      x-konfig-properties:
        retentionFilter:
          description: Properties specific to the retention insight
    RetentionQueryResponse:
      title: RetentionQueryResponse
      properties: &ref_35
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            $ref: '#/components/schemas/RetentionResult'
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required: &ref_36
        - results
      type: object
    RetentionReference:
      title: RetentionReference
      enum:
        - total
        - previous
      type: string
    RetentionResult:
      title: RetentionResult
      properties:
        date:
          title: Date
          format: date-time
          type: string
        label:
          title: Label
          type: string
        values:
          title: Values
          items:
            $ref: '#/components/schemas/RetentionValue'
          type: array
      required:
        - date
        - label
        - values
      type: object
    RetentionType:
      title: RetentionType
      enum:
        - retention_recurring
        - retention_first_time
      type: string
    RetentionValue:
      title: RetentionValue
      properties:
        count:
          title: Count
          type: integer
      required:
        - count
      type: object
    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        feature_flags_access_level:
          $ref: '#/components/schemas/FeatureFlagsAccessLevelEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        members:
          type: string
          readOnly: true
        associated_flags:
          type: string
          readOnly: true
      required:
        - associated_flags
        - created_at
        - created_by
        - id
        - members
        - name
      x-konfig-properties:
        feature_flags_access_level:
          minimum: 0
          maximum: 32767
        created_by:
          readOnly: true
    RoleMembership:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        role_id:
          type: string
          format: uuid
          readOnly: true
        organization_member:
          $ref: '#/components/schemas/OrganizationMember'
        user:
          $ref: '#/components/schemas/UserBasic'
        joined_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user_uuid:
          type: string
          format: uuid
          writeOnly: true
      required:
        - id
        - joined_at
        - organization_member
        - role_id
        - updated_at
        - user
        - user_uuid
      x-konfig-properties:
        organization_member:
          readOnly: true
        user:
          readOnly: true
    Sampling:
      title: Sampling
      properties: &ref_47
        enabled:
          title: Enabled
          default: null
          type: boolean
          nullable: true
        forceSamplingRate:
          $ref: '#/components/schemas/SamplingRateNullable'
      type: object
    SamplingRate:
      title: SamplingRate
      properties: &ref_32
        denominator:
          title: Denominator
          default: null
          type: number
          nullable: true
        numerator:
          title: Numerator
          type: number
      required: &ref_33
        - numerator
      type: object
    SavedInsightNode:
      title: SavedInsightNode
      properties:
        allowSorting:
          title: Allowsorting
          description: >-
            Can the user click on column headers to sort the table? (default:
            true)
          default: null
          type: boolean
          nullable: true
        embedded:
          title: Embedded
          description: Query is embedded inside another bordered component
          default: null
          type: boolean
          nullable: true
        expandable:
          title: Expandable
          description: 'Can expand row to show raw event data (default: true)'
          default: null
          type: boolean
          nullable: true
        full:
          title: Full
          description: Show with most visual options enabled. Used in insight scene.
          default: null
          type: boolean
          nullable: true
        hidePersonsModal:
          title: Hidepersonsmodal
          default: null
          type: boolean
          nullable: true
        kind:
          title: Kind
          const: SavedInsightNode
          default: SavedInsightNode
        propertiesViaUrl:
          title: Propertiesviaurl
          description: 'Link properties via the URL (default: false)'
          default: null
          type: boolean
          nullable: true
        shortId:
          title: Shortid
          type: string
        showActions:
          title: Showactions
          description: Show the kebab menu at the end of the row
          default: null
          type: boolean
          nullable: true
        showColumnConfigurator:
          title: Showcolumnconfigurator
          description: Show a button to configure the table's columns if possible
          default: null
          type: boolean
          nullable: true
        showCorrelationTable:
          title: Showcorrelationtable
          default: null
          type: boolean
          nullable: true
        showDateRange:
          title: Showdaterange
          description: Show date range selector
          default: null
          type: boolean
          nullable: true
        showElapsedTime:
          title: Showelapsedtime
          description: Show the time it takes to run a query
          default: null
          type: boolean
          nullable: true
        showEventFilter:
          title: Showeventfilter
          description: Include an event filter above the table (EventsNode only)
          default: null
          type: boolean
          nullable: true
        showExport:
          title: Showexport
          description: Show the export button
          default: null
          type: boolean
          nullable: true
        showFilters:
          title: Showfilters
          default: null
          type: boolean
          nullable: true
        showHeader:
          title: Showheader
          default: null
          type: boolean
          nullable: true
        showHogQLEditor:
          title: Showhogqleditor
          description: Include a HogQL query editor above HogQL tables
          default: null
          type: boolean
          nullable: true
        showLastComputation:
          title: Showlastcomputation
          default: null
          type: boolean
          nullable: true
        showLastComputationRefresh:
          title: Showlastcomputationrefresh
          default: null
          type: boolean
          nullable: true
        showOpenEditorButton:
          title: Showopeneditorbutton
          description: >-
            Show a button to open the current query as a new insight. (default:
            true)
          default: null
          type: boolean
          nullable: true
        showPersistentColumnConfigurator:
          title: Showpersistentcolumnconfigurator
          description: >-
            Show a button to configure and persist the table's default columns
            if possible
          default: null
          type: boolean
          nullable: true
        showPropertyFilter:
          title: Showpropertyfilter
          description: Include a property filter above the table
          default: null
          type: boolean
          nullable: true
        showReload:
          title: Showreload
          description: Show a reload button
          default: null
          type: boolean
          nullable: true
        showResults:
          title: Showresults
          default: null
          type: boolean
          nullable: true
        showResultsTable:
          title: Showresultstable
          description: Show a results table
          default: null
          type: boolean
          nullable: true
        showSavedQueries:
          title: Showsavedqueries
          description: Shows a list of saved queries
          default: null
          type: boolean
          nullable: true
        showSearch:
          title: Showsearch
          description: Include a free text search field (PersonsNode only)
          default: null
          type: boolean
          nullable: true
        showTable:
          title: Showtable
          default: null
          type: boolean
          nullable: true
        showTestAccountFilters:
          title: Showtestaccountfilters
          description: Show filter to exclude test accounts
          default: null
          type: boolean
          nullable: true
        showTimings:
          title: Showtimings
          description: Show a detailed query timing breakdown
          default: null
          type: boolean
          nullable: true
        suppressSessionAnalysisWarning:
          title: Suppresssessionanalysiswarning
          default: null
          type: boolean
          nullable: true
        vizSpecificOptions:
          $ref: '#/components/schemas/VizSpecificOptionsNullable'
      required:
        - shortId
      type: object
    ScenePersonalisationBasic:
      type: object
      properties:
        scene:
          type: string
          maxLength: 200
        dashboard:
          type: integer
          nullable: true
      required:
        - scene
    Series:
      title: Series
      properties:
        label:
          title: Label
          type: string
        value:
          title: Value
          type: integer
      required:
        - label
        - value
      type: object
    SessionPropertyFilter:
      title: SessionPropertyFilter
      properties:
        key:
          title: Key
          type: string
        label:
          title: Label
          default: null
          type: string
          nullable: true
        operator:
          $ref: '#/components/schemas/PropertyOperator'
        type:
          title: Type
          const: session
          default: session
        value:
          title: Value
          anyOf:
            - type: string
            - type: number
            - items:
                anyOf:
                  - type: string
                  - type: number
              type: array
          default: null
          nullable: true
      required:
        - key
        - operator
      type: object
    SessionRecording:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        distinct_id:
          type: string
          readOnly: true
          nullable: true
        viewed:
          type: string
          readOnly: true
        recording_duration:
          type: integer
          readOnly: true
        active_seconds:
          type: integer
          readOnly: true
          nullable: true
        inactive_seconds:
          type: integer
          readOnly: true
          nullable: true
        start_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        end_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        click_count:
          type: integer
          readOnly: true
          nullable: true
        keypress_count:
          type: integer
          readOnly: true
          nullable: true
        mouse_activity_count:
          type: integer
          readOnly: true
          nullable: true
        console_log_count:
          type: integer
          readOnly: true
          nullable: true
        console_warn_count:
          type: integer
          readOnly: true
          nullable: true
        console_error_count:
          type: integer
          readOnly: true
          nullable: true
        start_url:
          type: string
          readOnly: true
          nullable: true
        person:
          $ref: '#/components/schemas/MinimalPerson'
        storage:
          type: string
          readOnly: true
      required:
        - active_seconds
        - click_count
        - console_error_count
        - console_log_count
        - console_warn_count
        - distinct_id
        - end_time
        - id
        - inactive_seconds
        - keypress_count
        - mouse_activity_count
        - recording_duration
        - start_time
        - start_url
        - storage
        - viewed
    SessionRecordingPlaylist:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          readOnly: true
        short_id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        derived_name:
          type: string
          nullable: true
          maxLength: 400
        pinned:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        deleted:
          type: boolean
        filters: {}
        last_modified_at:
          type: string
          format: date-time
          readOnly: true
        last_modified_by:
          $ref: '#/components/schemas/UserBasic'
      required:
        - created_at
        - created_by
        - id
        - last_modified_at
        - last_modified_by
        - short_id
      x-konfig-properties:
        created_by:
          readOnly: true
        last_modified_by:
          readOnly: true
    SessionsTimelineQuery:
      title: SessionsTimelineQuery
      properties:
        after:
          title: After
          description: >-
            Only fetch sessions that started after this timestamp (default:
            '-24h')
          default: null
          type: string
          nullable: true
        before:
          title: Before
          description: >-
            Only fetch sessions that started before this timestamp (default:
            '+5s')
          default: null
          type: string
          nullable: true
        kind:
          title: Kind
          const: SessionsTimelineQuery
          default: SessionsTimelineQuery
        personId:
          title: Personid
          description: Fetch sessions only for a given person
          default: null
          type: string
          nullable: true
        response:
          $ref: '#/components/schemas/SessionsTimelineQueryResponseNullable'
      type: object
    SessionsTimelineQueryResponse:
      title: SessionsTimelineQueryResponse
      properties: &ref_37
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            $ref: '#/components/schemas/TimelineEntry'
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required: &ref_38
        - results
      type: object
    SharingConfiguration:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        enabled:
          type: boolean
        access_token:
          type: string
          readOnly: true
          nullable: true
      required:
        - access_token
        - created_at
    SourceEnum:
      description: |-
        * `SYSTEM` - SYSTEM
        * `PLUGIN` - PLUGIN
        * `CONSOLE` - CONSOLE
      enum:
        - SYSTEM
        - PLUGIN
        - CONSOLE
      type: string
    StageEnum:
      description: |-
        * `draft` - draft
        * `concept` - concept
        * `alpha` - alpha
        * `beta` - beta
        * `general-availability` - general availability
        * `archived` - archived
      enum:
        - draft
        - concept
        - alpha
        - beta
        - general-availability
        - archived
      type: string
    StatusEnum:
      description: |-
        * `Cancelled` - Cancelled
        * `Completed` - Completed
        * `ContinuedAsNew` - Continued As New
        * `Failed` - Failed
        * `FailedRetryable` - Failed Retryable
        * `Terminated` - Terminated
        * `TimedOut` - Timedout
        * `Running` - Running
        * `Starting` - Starting
      enum:
        - Cancelled
        - Completed
        - ContinuedAsNew
        - Failed
        - FailedRetryable
        - Terminated
        - TimedOut
        - Running
        - Starting
      type: string
    StatusItem:
      title: StatusItem
      properties:
        label:
          title: Label
          type: string
        value:
          title: Value
          type: string
      required:
        - label
        - value
      type: object
    StepOrderValue:
      title: StepOrderValue
      enum:
        - strict
        - unordered
        - ordered
      type: string
    StickinessFilter:
      title: StickinessFilter
      properties: &ref_39
        compare:
          title: Compare
          default: null
          type: boolean
          nullable: true
        display:
          $ref: '#/components/schemas/ChartDisplayTypeNullable'
        hidden_legend_indexes:
          title: Hidden Legend Indexes
          default: null
          items:
            type: number
          type: array
          nullable: true
        showLegend:
          title: Showlegend
          default: null
          type: boolean
          nullable: true
        showValuesOnSeries:
          title: Showvaluesonseries
          default: null
          type: boolean
          nullable: true
      type: object
    StickinessQuery:
      title: StickinessQuery
      properties:
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        filterTestAccounts:
          title: Filtertestaccounts
          description: Exclude internal and test users by applying the respective filters
          default: null
          type: boolean
          nullable: true
        interval:
          $ref: '#/components/schemas/IntervalTypeNullable'
        kind:
          title: Kind
          const: StickinessQuery
          default: StickinessQuery
        properties:
          title: Properties
          description: Property filters for all series
          anyOf:
            - items:
                anyOf:
                  - $ref: '#/components/schemas/EventPropertyFilter'
                  - $ref: '#/components/schemas/PersonPropertyFilter'
                  - $ref: '#/components/schemas/ElementPropertyFilter'
                  - $ref: '#/components/schemas/SessionPropertyFilter'
                  - $ref: '#/components/schemas/CohortPropertyFilter'
                  - $ref: '#/components/schemas/RecordingDurationFilter'
                  - $ref: '#/components/schemas/GroupPropertyFilter'
                  - $ref: '#/components/schemas/FeaturePropertyFilter'
                  - $ref: '#/components/schemas/HogQLPropertyFilter'
                  - $ref: '#/components/schemas/EmptyPropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
              type: array
            - $ref: '#/components/schemas/PropertyGroupFilter'
          default: null
          nullable: true
        samplingFactor:
          title: Samplingfactor
          description: Sampling rate
          default: null
          type: number
          nullable: true
        series:
          title: Series
          description: Events and actions to include
          items:
            anyOf:
              - $ref: '#/components/schemas/EventsNode'
              - $ref: '#/components/schemas/ActionsNode'
              - $ref: '#/components/schemas/DataWarehouseNode'
          type: array
        stickinessFilter:
          $ref: '#/components/schemas/StickinessFilterNullable'
      required:
        - series
      type: object
    Subscription:
      description: Standard Subscription serializer.
      type: object
      properties:
        summary:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 100
        id:
          type: integer
          readOnly: true
        dashboard:
          type: integer
          nullable: true
        insight:
          type: integer
          nullable: true
        target_type:
          $ref: '#/components/schemas/TargetTypeEnum'
        target_value:
          type: string
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        interval:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        byweekday:
          type: array
          items:
            $ref: '#/components/schemas/ByweekdayEnum'
          nullable: true
        bysetpos:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        start_date:
          type: string
          format: date-time
        until_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        deleted:
          type: boolean
        next_delivery_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        invite_message:
          type: string
          nullable: true
      required:
        - created_at
        - created_by
        - frequency
        - id
        - next_delivery_date
        - start_date
        - summary
        - target_type
        - target_value
      x-konfig-properties:
        created_by:
          readOnly: true
    Survey:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 400
        type:
          $ref: '#/components/schemas/Type7baEnum'
        linked_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        linked_flag_id:
          type: integer
          nullable: true
        targeting_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        questions:
          nullable: true
        conditions:
          nullable: true
        appearance:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        archived:
          type: boolean
      required:
        - created_at
        - created_by
        - id
        - linked_flag
        - name
        - targeting_flag
        - type
      x-konfig-properties:
        linked_flag:
          readOnly: true
        targeting_flag:
          readOnly: true
        created_by:
          readOnly: true
    SurveySerializerCreateUpdateOnly:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 400
        type:
          $ref: '#/components/schemas/Type7baEnum'
        linked_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        linked_flag_id:
          type: integer
          writeOnly: true
          nullable: true
        targeting_flag_id:
          type: integer
          writeOnly: true
        targeting_flag:
          $ref: '#/components/schemas/MinimalFeatureFlag'
        targeting_flag_filters:
          writeOnly: true
          nullable: true
        remove_targeting_flag:
          type: boolean
          writeOnly: true
          nullable: true
        questions:
          nullable: true
        conditions:
          nullable: true
        appearance:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserBasic'
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        archived:
          type: boolean
      required:
        - created_at
        - created_by
        - id
        - linked_flag
        - name
        - targeting_flag
        - type
      x-konfig-properties:
        linked_flag:
          readOnly: true
        targeting_flag:
          readOnly: true
        created_by:
          readOnly: true
    TargetTypeEnum:
      description: |-
        * `email` - Email
        * `slack` - Slack
        * `webhook` - Webhook
      enum:
        - email
        - slack
        - webhook
      type: string
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        api_token:
          type: string
          readOnly: true
        app_urls:
          type: array
          items:
            type: string
            nullable: true
            maxLength: 200
        name:
          type: string
          maxLength: 200
          minLength: 1
        slack_incoming_webhook:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        anonymize_ips:
          type: boolean
        completed_snippet_onboarding:
          type: boolean
        ingested_event:
          type: boolean
          readOnly: true
        test_account_filters: {}
        test_account_filters_default_checked:
          type: boolean
          nullable: true
        path_cleaning_filters:
          nullable: true
        is_demo:
          type: boolean
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        data_attributes: {}
        person_display_name_properties:
          type: array
          items:
            type: string
            maxLength: 400
          nullable: true
        correlation_config:
          nullable: true
        autocapture_opt_out:
          type: boolean
          nullable: true
        autocapture_exceptions_opt_in:
          type: boolean
          nullable: true
        autocapture_exceptions_errors_to_ignore:
          nullable: true
        capture_console_log_opt_in:
          type: boolean
          nullable: true
        capture_performance_opt_in:
          type: boolean
          nullable: true
        session_recording_opt_in:
          type: boolean
        session_recording_sample_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          nullable: true
        session_recording_minimum_duration_milliseconds:
          type: integer
          maximum: 15000
          minimum: 0
          nullable: true
        session_recording_linked_flag:
          nullable: true
        session_recording_network_payload_capture_config:
          nullable: true
        session_replay_config:
          nullable: true
        effective_membership_level:
          allOf:
            - $ref: '#/components/schemas/EffectiveMembershipLevelEnum'
          nullable: true
          readOnly: true
        access_control:
          type: boolean
        week_start_day:
          nullable: true
          minimum: -32768
          maximum: 32767
          oneOf:
            - $ref: '#/components/schemas/WeekStartDayEnum'
            - $ref: '#/components/schemas/NullEnum'
        has_group_types:
          type: boolean
          readOnly: true
        primary_dashboard:
          type: integer
          nullable: true
        live_events_columns:
          type: array
          items:
            type: string
          nullable: true
        recording_domains:
          type: array
          items:
            type: string
            nullable: true
            maxLength: 200
          nullable: true
        person_on_events_querying_enabled:
          type: boolean
          readOnly: true
        groups_on_events_querying_enabled:
          type: boolean
          readOnly: true
        inject_web_apps:
          type: boolean
          nullable: true
        extra_settings:
          nullable: true
        has_completed_onboarding_for:
          nullable: true
        surveys_opt_in:
          type: boolean
          nullable: true
      required:
        - api_token
        - created_at
        - effective_membership_level
        - groups_on_events_querying_enabled
        - has_group_types
        - id
        - ingested_event
        - organization
        - person_on_events_querying_enabled
        - updated_at
        - uuid
    TeamBasic:
      description: >-
        Serializer for `Team` model with minimal attributes to speeed up loading
        and transfer times.

        Also used for nested serializers.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        api_token:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        completed_snippet_onboarding:
          type: boolean
          readOnly: true
        has_completed_onboarding_for:
          readOnly: true
          nullable: true
        ingested_event:
          type: boolean
          readOnly: true
        is_demo:
          type: boolean
          readOnly: true
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        access_control:
          type: boolean
          readOnly: true
      required:
        - access_control
        - api_token
        - completed_snippet_onboarding
        - has_completed_onboarding_for
        - id
        - ingested_event
        - is_demo
        - name
        - organization
        - timezone
        - uuid
      x-konfig-properties:
        timezone:
          readOnly: true
    ThemeModeEnum:
      description: |-
        * `light` - Light
        * `dark` - Dark
        * `system` - System
      enum:
        - light
        - dark
        - system
      type: string
    TimeToSeeDataSessionsQuery:
      title: TimeToSeeDataSessionsQuery
      properties:
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        kind:
          title: Kind
          const: TimeToSeeDataSessionsQuery
          default: TimeToSeeDataSessionsQuery
        response:
          $ref: '#/components/schemas/TimeToSeeDataSessionsQueryResponseNullable'
        teamId:
          title: Teamid
          description: Project to filter on. Defaults to current project
          default: null
          type: integer
          nullable: true
      type: object
    TimeToSeeDataSessionsQueryResponse:
      title: TimeToSeeDataSessionsQueryResponse
      properties: &ref_40
        results:
          title: Results
          items:
            type: object
          type: array
      required: &ref_41
        - results
      type: object
    TimelineEntry:
      title: TimelineEntry
      properties:
        events:
          title: Events
          items:
            $ref: '#/components/schemas/EventType'
          type: array
        recording_duration_s:
          title: Recording Duration S
          description: Duration of the recording in seconds.
          default: null
          type: number
          nullable: true
        sessionId:
          title: Sessionid
          description: Session ID. None means out-of-session events
          default: null
          type: string
          nullable: true
      required:
        - events
      type: object
    TimezoneEnum:
      description: |-
        * `Africa/Abidjan` - Africa/Abidjan
        * `Africa/Accra` - Africa/Accra
        * `Africa/Addis_Ababa` - Africa/Addis_Ababa
        * `Africa/Algiers` - Africa/Algiers
        * `Africa/Asmara` - Africa/Asmara
        * `Africa/Asmera` - Africa/Asmera
        * `Africa/Bamako` - Africa/Bamako
        * `Africa/Bangui` - Africa/Bangui
        * `Africa/Banjul` - Africa/Banjul
        * `Africa/Bissau` - Africa/Bissau
        * `Africa/Blantyre` - Africa/Blantyre
        * `Africa/Brazzaville` - Africa/Brazzaville
        * `Africa/Bujumbura` - Africa/Bujumbura
        * `Africa/Cairo` - Africa/Cairo
        * `Africa/Casablanca` - Africa/Casablanca
        * `Africa/Ceuta` - Africa/Ceuta
        * `Africa/Conakry` - Africa/Conakry
        * `Africa/Dakar` - Africa/Dakar
        * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
        * `Africa/Djibouti` - Africa/Djibouti
        * `Africa/Douala` - Africa/Douala
        * `Africa/El_Aaiun` - Africa/El_Aaiun
        * `Africa/Freetown` - Africa/Freetown
        * `Africa/Gaborone` - Africa/Gaborone
        * `Africa/Harare` - Africa/Harare
        * `Africa/Johannesburg` - Africa/Johannesburg
        * `Africa/Juba` - Africa/Juba
        * `Africa/Kampala` - Africa/Kampala
        * `Africa/Khartoum` - Africa/Khartoum
        * `Africa/Kigali` - Africa/Kigali
        * `Africa/Kinshasa` - Africa/Kinshasa
        * `Africa/Lagos` - Africa/Lagos
        * `Africa/Libreville` - Africa/Libreville
        * `Africa/Lome` - Africa/Lome
        * `Africa/Luanda` - Africa/Luanda
        * `Africa/Lubumbashi` - Africa/Lubumbashi
        * `Africa/Lusaka` - Africa/Lusaka
        * `Africa/Malabo` - Africa/Malabo
        * `Africa/Maputo` - Africa/Maputo
        * `Africa/Maseru` - Africa/Maseru
        * `Africa/Mbabane` - Africa/Mbabane
        * `Africa/Mogadishu` - Africa/Mogadishu
        * `Africa/Monrovia` - Africa/Monrovia
        * `Africa/Nairobi` - Africa/Nairobi
        * `Africa/Ndjamena` - Africa/Ndjamena
        * `Africa/Niamey` - Africa/Niamey
        * `Africa/Nouakchott` - Africa/Nouakchott
        * `Africa/Ouagadougou` - Africa/Ouagadougou
        * `Africa/Porto-Novo` - Africa/Porto-Novo
        * `Africa/Sao_Tome` - Africa/Sao_Tome
        * `Africa/Timbuktu` - Africa/Timbuktu
        * `Africa/Tripoli` - Africa/Tripoli
        * `Africa/Tunis` - Africa/Tunis
        * `Africa/Windhoek` - Africa/Windhoek
        * `America/Adak` - America/Adak
        * `America/Anchorage` - America/Anchorage
        * `America/Anguilla` - America/Anguilla
        * `America/Antigua` - America/Antigua
        * `America/Araguaina` - America/Araguaina
        * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
        * `America/Argentina/Catamarca` - America/Argentina/Catamarca
        * `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia
        * `America/Argentina/Cordoba` - America/Argentina/Cordoba
        * `America/Argentina/Jujuy` - America/Argentina/Jujuy
        * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
        * `America/Argentina/Mendoza` - America/Argentina/Mendoza
        * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
        * `America/Argentina/Salta` - America/Argentina/Salta
        * `America/Argentina/San_Juan` - America/Argentina/San_Juan
        * `America/Argentina/San_Luis` - America/Argentina/San_Luis
        * `America/Argentina/Tucuman` - America/Argentina/Tucuman
        * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
        * `America/Aruba` - America/Aruba
        * `America/Asuncion` - America/Asuncion
        * `America/Atikokan` - America/Atikokan
        * `America/Atka` - America/Atka
        * `America/Bahia` - America/Bahia
        * `America/Bahia_Banderas` - America/Bahia_Banderas
        * `America/Barbados` - America/Barbados
        * `America/Belem` - America/Belem
        * `America/Belize` - America/Belize
        * `America/Blanc-Sablon` - America/Blanc-Sablon
        * `America/Boa_Vista` - America/Boa_Vista
        * `America/Bogota` - America/Bogota
        * `America/Boise` - America/Boise
        * `America/Buenos_Aires` - America/Buenos_Aires
        * `America/Cambridge_Bay` - America/Cambridge_Bay
        * `America/Campo_Grande` - America/Campo_Grande
        * `America/Cancun` - America/Cancun
        * `America/Caracas` - America/Caracas
        * `America/Catamarca` - America/Catamarca
        * `America/Cayenne` - America/Cayenne
        * `America/Cayman` - America/Cayman
        * `America/Chicago` - America/Chicago
        * `America/Chihuahua` - America/Chihuahua
        * `America/Ciudad_Juarez` - America/Ciudad_Juarez
        * `America/Coral_Harbour` - America/Coral_Harbour
        * `America/Cordoba` - America/Cordoba
        * `America/Costa_Rica` - America/Costa_Rica
        * `America/Creston` - America/Creston
        * `America/Cuiaba` - America/Cuiaba
        * `America/Curacao` - America/Curacao
        * `America/Danmarkshavn` - America/Danmarkshavn
        * `America/Dawson` - America/Dawson
        * `America/Dawson_Creek` - America/Dawson_Creek
        * `America/Denver` - America/Denver
        * `America/Detroit` - America/Detroit
        * `America/Dominica` - America/Dominica
        * `America/Edmonton` - America/Edmonton
        * `America/Eirunepe` - America/Eirunepe
        * `America/El_Salvador` - America/El_Salvador
        * `America/Ensenada` - America/Ensenada
        * `America/Fort_Nelson` - America/Fort_Nelson
        * `America/Fort_Wayne` - America/Fort_Wayne
        * `America/Fortaleza` - America/Fortaleza
        * `America/Glace_Bay` - America/Glace_Bay
        * `America/Godthab` - America/Godthab
        * `America/Goose_Bay` - America/Goose_Bay
        * `America/Grand_Turk` - America/Grand_Turk
        * `America/Grenada` - America/Grenada
        * `America/Guadeloupe` - America/Guadeloupe
        * `America/Guatemala` - America/Guatemala
        * `America/Guayaquil` - America/Guayaquil
        * `America/Guyana` - America/Guyana
        * `America/Halifax` - America/Halifax
        * `America/Havana` - America/Havana
        * `America/Hermosillo` - America/Hermosillo
        * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
        * `America/Indiana/Knox` - America/Indiana/Knox
        * `America/Indiana/Marengo` - America/Indiana/Marengo
        * `America/Indiana/Petersburg` - America/Indiana/Petersburg
        * `America/Indiana/Tell_City` - America/Indiana/Tell_City
        * `America/Indiana/Vevay` - America/Indiana/Vevay
        * `America/Indiana/Vincennes` - America/Indiana/Vincennes
        * `America/Indiana/Winamac` - America/Indiana/Winamac
        * `America/Indianapolis` - America/Indianapolis
        * `America/Inuvik` - America/Inuvik
        * `America/Iqaluit` - America/Iqaluit
        * `America/Jamaica` - America/Jamaica
        * `America/Jujuy` - America/Jujuy
        * `America/Juneau` - America/Juneau
        * `America/Kentucky/Louisville` - America/Kentucky/Louisville
        * `America/Kentucky/Monticello` - America/Kentucky/Monticello
        * `America/Knox_IN` - America/Knox_IN
        * `America/Kralendijk` - America/Kralendijk
        * `America/La_Paz` - America/La_Paz
        * `America/Lima` - America/Lima
        * `America/Los_Angeles` - America/Los_Angeles
        * `America/Louisville` - America/Louisville
        * `America/Lower_Princes` - America/Lower_Princes
        * `America/Maceio` - America/Maceio
        * `America/Managua` - America/Managua
        * `America/Manaus` - America/Manaus
        * `America/Marigot` - America/Marigot
        * `America/Martinique` - America/Martinique
        * `America/Matamoros` - America/Matamoros
        * `America/Mazatlan` - America/Mazatlan
        * `America/Mendoza` - America/Mendoza
        * `America/Menominee` - America/Menominee
        * `America/Merida` - America/Merida
        * `America/Metlakatla` - America/Metlakatla
        * `America/Mexico_City` - America/Mexico_City
        * `America/Miquelon` - America/Miquelon
        * `America/Moncton` - America/Moncton
        * `America/Monterrey` - America/Monterrey
        * `America/Montevideo` - America/Montevideo
        * `America/Montreal` - America/Montreal
        * `America/Montserrat` - America/Montserrat
        * `America/Nassau` - America/Nassau
        * `America/New_York` - America/New_York
        * `America/Nipigon` - America/Nipigon
        * `America/Nome` - America/Nome
        * `America/Noronha` - America/Noronha
        * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
        * `America/North_Dakota/Center` - America/North_Dakota/Center
        * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
        * `America/Nuuk` - America/Nuuk
        * `America/Ojinaga` - America/Ojinaga
        * `America/Panama` - America/Panama
        * `America/Pangnirtung` - America/Pangnirtung
        * `America/Paramaribo` - America/Paramaribo
        * `America/Phoenix` - America/Phoenix
        * `America/Port-au-Prince` - America/Port-au-Prince
        * `America/Port_of_Spain` - America/Port_of_Spain
        * `America/Porto_Acre` - America/Porto_Acre
        * `America/Porto_Velho` - America/Porto_Velho
        * `America/Puerto_Rico` - America/Puerto_Rico
        * `America/Punta_Arenas` - America/Punta_Arenas
        * `America/Rainy_River` - America/Rainy_River
        * `America/Rankin_Inlet` - America/Rankin_Inlet
        * `America/Recife` - America/Recife
        * `America/Regina` - America/Regina
        * `America/Resolute` - America/Resolute
        * `America/Rio_Branco` - America/Rio_Branco
        * `America/Rosario` - America/Rosario
        * `America/Santa_Isabel` - America/Santa_Isabel
        * `America/Santarem` - America/Santarem
        * `America/Santiago` - America/Santiago
        * `America/Santo_Domingo` - America/Santo_Domingo
        * `America/Sao_Paulo` - America/Sao_Paulo
        * `America/Scoresbysund` - America/Scoresbysund
        * `America/Shiprock` - America/Shiprock
        * `America/Sitka` - America/Sitka
        * `America/St_Barthelemy` - America/St_Barthelemy
        * `America/St_Johns` - America/St_Johns
        * `America/St_Kitts` - America/St_Kitts
        * `America/St_Lucia` - America/St_Lucia
        * `America/St_Thomas` - America/St_Thomas
        * `America/St_Vincent` - America/St_Vincent
        * `America/Swift_Current` - America/Swift_Current
        * `America/Tegucigalpa` - America/Tegucigalpa
        * `America/Thule` - America/Thule
        * `America/Thunder_Bay` - America/Thunder_Bay
        * `America/Tijuana` - America/Tijuana
        * `America/Toronto` - America/Toronto
        * `America/Tortola` - America/Tortola
        * `America/Vancouver` - America/Vancouver
        * `America/Virgin` - America/Virgin
        * `America/Whitehorse` - America/Whitehorse
        * `America/Winnipeg` - America/Winnipeg
        * `America/Yakutat` - America/Yakutat
        * `America/Yellowknife` - America/Yellowknife
        * `Antarctica/Casey` - Antarctica/Casey
        * `Antarctica/Davis` - Antarctica/Davis
        * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
        * `Antarctica/Macquarie` - Antarctica/Macquarie
        * `Antarctica/Mawson` - Antarctica/Mawson
        * `Antarctica/McMurdo` - Antarctica/McMurdo
        * `Antarctica/Palmer` - Antarctica/Palmer
        * `Antarctica/Rothera` - Antarctica/Rothera
        * `Antarctica/South_Pole` - Antarctica/South_Pole
        * `Antarctica/Syowa` - Antarctica/Syowa
        * `Antarctica/Troll` - Antarctica/Troll
        * `Antarctica/Vostok` - Antarctica/Vostok
        * `Arctic/Longyearbyen` - Arctic/Longyearbyen
        * `Asia/Aden` - Asia/Aden
        * `Asia/Almaty` - Asia/Almaty
        * `Asia/Amman` - Asia/Amman
        * `Asia/Anadyr` - Asia/Anadyr
        * `Asia/Aqtau` - Asia/Aqtau
        * `Asia/Aqtobe` - Asia/Aqtobe
        * `Asia/Ashgabat` - Asia/Ashgabat
        * `Asia/Ashkhabad` - Asia/Ashkhabad
        * `Asia/Atyrau` - Asia/Atyrau
        * `Asia/Baghdad` - Asia/Baghdad
        * `Asia/Bahrain` - Asia/Bahrain
        * `Asia/Baku` - Asia/Baku
        * `Asia/Bangkok` - Asia/Bangkok
        * `Asia/Barnaul` - Asia/Barnaul
        * `Asia/Beirut` - Asia/Beirut
        * `Asia/Bishkek` - Asia/Bishkek
        * `Asia/Brunei` - Asia/Brunei
        * `Asia/Calcutta` - Asia/Calcutta
        * `Asia/Chita` - Asia/Chita
        * `Asia/Choibalsan` - Asia/Choibalsan
        * `Asia/Chongqing` - Asia/Chongqing
        * `Asia/Chungking` - Asia/Chungking
        * `Asia/Colombo` - Asia/Colombo
        * `Asia/Dacca` - Asia/Dacca
        * `Asia/Damascus` - Asia/Damascus
        * `Asia/Dhaka` - Asia/Dhaka
        * `Asia/Dili` - Asia/Dili
        * `Asia/Dubai` - Asia/Dubai
        * `Asia/Dushanbe` - Asia/Dushanbe
        * `Asia/Famagusta` - Asia/Famagusta
        * `Asia/Gaza` - Asia/Gaza
        * `Asia/Harbin` - Asia/Harbin
        * `Asia/Hebron` - Asia/Hebron
        * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
        * `Asia/Hong_Kong` - Asia/Hong_Kong
        * `Asia/Hovd` - Asia/Hovd
        * `Asia/Irkutsk` - Asia/Irkutsk
        * `Asia/Istanbul` - Asia/Istanbul
        * `Asia/Jakarta` - Asia/Jakarta
        * `Asia/Jayapura` - Asia/Jayapura
        * `Asia/Jerusalem` - Asia/Jerusalem
        * `Asia/Kabul` - Asia/Kabul
        * `Asia/Kamchatka` - Asia/Kamchatka
        * `Asia/Karachi` - Asia/Karachi
        * `Asia/Kashgar` - Asia/Kashgar
        * `Asia/Kathmandu` - Asia/Kathmandu
        * `Asia/Katmandu` - Asia/Katmandu
        * `Asia/Khandyga` - Asia/Khandyga
        * `Asia/Kolkata` - Asia/Kolkata
        * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
        * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
        * `Asia/Kuching` - Asia/Kuching
        * `Asia/Kuwait` - Asia/Kuwait
        * `Asia/Macao` - Asia/Macao
        * `Asia/Macau` - Asia/Macau
        * `Asia/Magadan` - Asia/Magadan
        * `Asia/Makassar` - Asia/Makassar
        * `Asia/Manila` - Asia/Manila
        * `Asia/Muscat` - Asia/Muscat
        * `Asia/Nicosia` - Asia/Nicosia
        * `Asia/Novokuznetsk` - Asia/Novokuznetsk
        * `Asia/Novosibirsk` - Asia/Novosibirsk
        * `Asia/Omsk` - Asia/Omsk
        * `Asia/Oral` - Asia/Oral
        * `Asia/Phnom_Penh` - Asia/Phnom_Penh
        * `Asia/Pontianak` - Asia/Pontianak
        * `Asia/Pyongyang` - Asia/Pyongyang
        * `Asia/Qatar` - Asia/Qatar
        * `Asia/Qostanay` - Asia/Qostanay
        * `Asia/Qyzylorda` - Asia/Qyzylorda
        * `Asia/Rangoon` - Asia/Rangoon
        * `Asia/Riyadh` - Asia/Riyadh
        * `Asia/Saigon` - Asia/Saigon
        * `Asia/Sakhalin` - Asia/Sakhalin
        * `Asia/Samarkand` - Asia/Samarkand
        * `Asia/Seoul` - Asia/Seoul
        * `Asia/Shanghai` - Asia/Shanghai
        * `Asia/Singapore` - Asia/Singapore
        * `Asia/Srednekolymsk` - Asia/Srednekolymsk
        * `Asia/Taipei` - Asia/Taipei
        * `Asia/Tashkent` - Asia/Tashkent
        * `Asia/Tbilisi` - Asia/Tbilisi
        * `Asia/Tehran` - Asia/Tehran
        * `Asia/Tel_Aviv` - Asia/Tel_Aviv
        * `Asia/Thimbu` - Asia/Thimbu
        * `Asia/Thimphu` - Asia/Thimphu
        * `Asia/Tokyo` - Asia/Tokyo
        * `Asia/Tomsk` - Asia/Tomsk
        * `Asia/Ujung_Pandang` - Asia/Ujung_Pandang
        * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
        * `Asia/Ulan_Bator` - Asia/Ulan_Bator
        * `Asia/Urumqi` - Asia/Urumqi
        * `Asia/Ust-Nera` - Asia/Ust-Nera
        * `Asia/Vientiane` - Asia/Vientiane
        * `Asia/Vladivostok` - Asia/Vladivostok
        * `Asia/Yakutsk` - Asia/Yakutsk
        * `Asia/Yangon` - Asia/Yangon
        * `Asia/Yekaterinburg` - Asia/Yekaterinburg
        * `Asia/Yerevan` - Asia/Yerevan
        * `Atlantic/Azores` - Atlantic/Azores
        * `Atlantic/Bermuda` - Atlantic/Bermuda
        * `Atlantic/Canary` - Atlantic/Canary
        * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
        * `Atlantic/Faeroe` - Atlantic/Faeroe
        * `Atlantic/Faroe` - Atlantic/Faroe
        * `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen
        * `Atlantic/Madeira` - Atlantic/Madeira
        * `Atlantic/Reykjavik` - Atlantic/Reykjavik
        * `Atlantic/South_Georgia` - Atlantic/South_Georgia
        * `Atlantic/St_Helena` - Atlantic/St_Helena
        * `Atlantic/Stanley` - Atlantic/Stanley
        * `Australia/ACT` - Australia/ACT
        * `Australia/Adelaide` - Australia/Adelaide
        * `Australia/Brisbane` - Australia/Brisbane
        * `Australia/Broken_Hill` - Australia/Broken_Hill
        * `Australia/Canberra` - Australia/Canberra
        * `Australia/Currie` - Australia/Currie
        * `Australia/Darwin` - Australia/Darwin
        * `Australia/Eucla` - Australia/Eucla
        * `Australia/Hobart` - Australia/Hobart
        * `Australia/LHI` - Australia/LHI
        * `Australia/Lindeman` - Australia/Lindeman
        * `Australia/Lord_Howe` - Australia/Lord_Howe
        * `Australia/Melbourne` - Australia/Melbourne
        * `Australia/NSW` - Australia/NSW
        * `Australia/North` - Australia/North
        * `Australia/Perth` - Australia/Perth
        * `Australia/Queensland` - Australia/Queensland
        * `Australia/South` - Australia/South
        * `Australia/Sydney` - Australia/Sydney
        * `Australia/Tasmania` - Australia/Tasmania
        * `Australia/Victoria` - Australia/Victoria
        * `Australia/West` - Australia/West
        * `Australia/Yancowinna` - Australia/Yancowinna
        * `Brazil/Acre` - Brazil/Acre
        * `Brazil/DeNoronha` - Brazil/DeNoronha
        * `Brazil/East` - Brazil/East
        * `Brazil/West` - Brazil/West
        * `CET` - CET
        * `CST6CDT` - CST6CDT
        * `Canada/Atlantic` - Canada/Atlantic
        * `Canada/Central` - Canada/Central
        * `Canada/Eastern` - Canada/Eastern
        * `Canada/Mountain` - Canada/Mountain
        * `Canada/Newfoundland` - Canada/Newfoundland
        * `Canada/Pacific` - Canada/Pacific
        * `Canada/Saskatchewan` - Canada/Saskatchewan
        * `Canada/Yukon` - Canada/Yukon
        * `Chile/Continental` - Chile/Continental
        * `Chile/EasterIsland` - Chile/EasterIsland
        * `Cuba` - Cuba
        * `EET` - EET
        * `EST` - EST
        * `EST5EDT` - EST5EDT
        * `Egypt` - Egypt
        * `Eire` - Eire
        * `Etc/GMT` - Etc/GMT
        * `Etc/GMT+0` - Etc/GMT+0
        * `Etc/GMT+1` - Etc/GMT+1
        * `Etc/GMT+10` - Etc/GMT+10
        * `Etc/GMT+11` - Etc/GMT+11
        * `Etc/GMT+12` - Etc/GMT+12
        * `Etc/GMT+2` - Etc/GMT+2
        * `Etc/GMT+3` - Etc/GMT+3
        * `Etc/GMT+4` - Etc/GMT+4
        * `Etc/GMT+5` - Etc/GMT+5
        * `Etc/GMT+6` - Etc/GMT+6
        * `Etc/GMT+7` - Etc/GMT+7
        * `Etc/GMT+8` - Etc/GMT+8
        * `Etc/GMT+9` - Etc/GMT+9
        * `Etc/GMT-0` - Etc/GMT-0
        * `Etc/GMT-1` - Etc/GMT-1
        * `Etc/GMT-10` - Etc/GMT-10
        * `Etc/GMT-11` - Etc/GMT-11
        * `Etc/GMT-12` - Etc/GMT-12
        * `Etc/GMT-13` - Etc/GMT-13
        * `Etc/GMT-14` - Etc/GMT-14
        * `Etc/GMT-2` - Etc/GMT-2
        * `Etc/GMT-3` - Etc/GMT-3
        * `Etc/GMT-4` - Etc/GMT-4
        * `Etc/GMT-5` - Etc/GMT-5
        * `Etc/GMT-6` - Etc/GMT-6
        * `Etc/GMT-7` - Etc/GMT-7
        * `Etc/GMT-8` - Etc/GMT-8
        * `Etc/GMT-9` - Etc/GMT-9
        * `Etc/GMT0` - Etc/GMT0
        * `Etc/Greenwich` - Etc/Greenwich
        * `Etc/UCT` - Etc/UCT
        * `Etc/UTC` - Etc/UTC
        * `Etc/Universal` - Etc/Universal
        * `Etc/Zulu` - Etc/Zulu
        * `Europe/Amsterdam` - Europe/Amsterdam
        * `Europe/Andorra` - Europe/Andorra
        * `Europe/Astrakhan` - Europe/Astrakhan
        * `Europe/Athens` - Europe/Athens
        * `Europe/Belfast` - Europe/Belfast
        * `Europe/Belgrade` - Europe/Belgrade
        * `Europe/Berlin` - Europe/Berlin
        * `Europe/Bratislava` - Europe/Bratislava
        * `Europe/Brussels` - Europe/Brussels
        * `Europe/Bucharest` - Europe/Bucharest
        * `Europe/Budapest` - Europe/Budapest
        * `Europe/Busingen` - Europe/Busingen
        * `Europe/Chisinau` - Europe/Chisinau
        * `Europe/Copenhagen` - Europe/Copenhagen
        * `Europe/Dublin` - Europe/Dublin
        * `Europe/Gibraltar` - Europe/Gibraltar
        * `Europe/Guernsey` - Europe/Guernsey
        * `Europe/Helsinki` - Europe/Helsinki
        * `Europe/Isle_of_Man` - Europe/Isle_of_Man
        * `Europe/Istanbul` - Europe/Istanbul
        * `Europe/Jersey` - Europe/Jersey
        * `Europe/Kaliningrad` - Europe/Kaliningrad
        * `Europe/Kiev` - Europe/Kiev
        * `Europe/Kirov` - Europe/Kirov
        * `Europe/Kyiv` - Europe/Kyiv
        * `Europe/Lisbon` - Europe/Lisbon
        * `Europe/Ljubljana` - Europe/Ljubljana
        * `Europe/London` - Europe/London
        * `Europe/Luxembourg` - Europe/Luxembourg
        * `Europe/Madrid` - Europe/Madrid
        * `Europe/Malta` - Europe/Malta
        * `Europe/Mariehamn` - Europe/Mariehamn
        * `Europe/Minsk` - Europe/Minsk
        * `Europe/Monaco` - Europe/Monaco
        * `Europe/Moscow` - Europe/Moscow
        * `Europe/Nicosia` - Europe/Nicosia
        * `Europe/Oslo` - Europe/Oslo
        * `Europe/Paris` - Europe/Paris
        * `Europe/Podgorica` - Europe/Podgorica
        * `Europe/Prague` - Europe/Prague
        * `Europe/Riga` - Europe/Riga
        * `Europe/Rome` - Europe/Rome
        * `Europe/Samara` - Europe/Samara
        * `Europe/San_Marino` - Europe/San_Marino
        * `Europe/Sarajevo` - Europe/Sarajevo
        * `Europe/Saratov` - Europe/Saratov
        * `Europe/Simferopol` - Europe/Simferopol
        * `Europe/Skopje` - Europe/Skopje
        * `Europe/Sofia` - Europe/Sofia
        * `Europe/Stockholm` - Europe/Stockholm
        * `Europe/Tallinn` - Europe/Tallinn
        * `Europe/Tirane` - Europe/Tirane
        * `Europe/Tiraspol` - Europe/Tiraspol
        * `Europe/Ulyanovsk` - Europe/Ulyanovsk
        * `Europe/Uzhgorod` - Europe/Uzhgorod
        * `Europe/Vaduz` - Europe/Vaduz
        * `Europe/Vatican` - Europe/Vatican
        * `Europe/Vienna` - Europe/Vienna
        * `Europe/Vilnius` - Europe/Vilnius
        * `Europe/Volgograd` - Europe/Volgograd
        * `Europe/Warsaw` - Europe/Warsaw
        * `Europe/Zagreb` - Europe/Zagreb
        * `Europe/Zaporozhye` - Europe/Zaporozhye
        * `Europe/Zurich` - Europe/Zurich
        * `GB` - GB
        * `GB-Eire` - GB-Eire
        * `GMT` - GMT
        * `GMT+0` - GMT+0
        * `GMT-0` - GMT-0
        * `GMT0` - GMT0
        * `Greenwich` - Greenwich
        * `HST` - HST
        * `Hongkong` - Hongkong
        * `Iceland` - Iceland
        * `Indian/Antananarivo` - Indian/Antananarivo
        * `Indian/Chagos` - Indian/Chagos
        * `Indian/Christmas` - Indian/Christmas
        * `Indian/Cocos` - Indian/Cocos
        * `Indian/Comoro` - Indian/Comoro
        * `Indian/Kerguelen` - Indian/Kerguelen
        * `Indian/Mahe` - Indian/Mahe
        * `Indian/Maldives` - Indian/Maldives
        * `Indian/Mauritius` - Indian/Mauritius
        * `Indian/Mayotte` - Indian/Mayotte
        * `Indian/Reunion` - Indian/Reunion
        * `Iran` - Iran
        * `Israel` - Israel
        * `Jamaica` - Jamaica
        * `Japan` - Japan
        * `Kwajalein` - Kwajalein
        * `Libya` - Libya
        * `MET` - MET
        * `MST` - MST
        * `MST7MDT` - MST7MDT
        * `Mexico/BajaNorte` - Mexico/BajaNorte
        * `Mexico/BajaSur` - Mexico/BajaSur
        * `Mexico/General` - Mexico/General
        * `NZ` - NZ
        * `NZ-CHAT` - NZ-CHAT
        * `Navajo` - Navajo
        * `PRC` - PRC
        * `PST8PDT` - PST8PDT
        * `Pacific/Apia` - Pacific/Apia
        * `Pacific/Auckland` - Pacific/Auckland
        * `Pacific/Bougainville` - Pacific/Bougainville
        * `Pacific/Chatham` - Pacific/Chatham
        * `Pacific/Chuuk` - Pacific/Chuuk
        * `Pacific/Easter` - Pacific/Easter
        * `Pacific/Efate` - Pacific/Efate
        * `Pacific/Enderbury` - Pacific/Enderbury
        * `Pacific/Fakaofo` - Pacific/Fakaofo
        * `Pacific/Fiji` - Pacific/Fiji
        * `Pacific/Funafuti` - Pacific/Funafuti
        * `Pacific/Galapagos` - Pacific/Galapagos
        * `Pacific/Gambier` - Pacific/Gambier
        * `Pacific/Guadalcanal` - Pacific/Guadalcanal
        * `Pacific/Guam` - Pacific/Guam
        * `Pacific/Honolulu` - Pacific/Honolulu
        * `Pacific/Johnston` - Pacific/Johnston
        * `Pacific/Kanton` - Pacific/Kanton
        * `Pacific/Kiritimati` - Pacific/Kiritimati
        * `Pacific/Kosrae` - Pacific/Kosrae
        * `Pacific/Kwajalein` - Pacific/Kwajalein
        * `Pacific/Majuro` - Pacific/Majuro
        * `Pacific/Marquesas` - Pacific/Marquesas
        * `Pacific/Midway` - Pacific/Midway
        * `Pacific/Nauru` - Pacific/Nauru
        * `Pacific/Niue` - Pacific/Niue
        * `Pacific/Norfolk` - Pacific/Norfolk
        * `Pacific/Noumea` - Pacific/Noumea
        * `Pacific/Pago_Pago` - Pacific/Pago_Pago
        * `Pacific/Palau` - Pacific/Palau
        * `Pacific/Pitcairn` - Pacific/Pitcairn
        * `Pacific/Pohnpei` - Pacific/Pohnpei
        * `Pacific/Ponape` - Pacific/Ponape
        * `Pacific/Port_Moresby` - Pacific/Port_Moresby
        * `Pacific/Rarotonga` - Pacific/Rarotonga
        * `Pacific/Saipan` - Pacific/Saipan
        * `Pacific/Samoa` - Pacific/Samoa
        * `Pacific/Tahiti` - Pacific/Tahiti
        * `Pacific/Tarawa` - Pacific/Tarawa
        * `Pacific/Tongatapu` - Pacific/Tongatapu
        * `Pacific/Truk` - Pacific/Truk
        * `Pacific/Wake` - Pacific/Wake
        * `Pacific/Wallis` - Pacific/Wallis
        * `Pacific/Yap` - Pacific/Yap
        * `Poland` - Poland
        * `Portugal` - Portugal
        * `ROC` - ROC
        * `ROK` - ROK
        * `Singapore` - Singapore
        * `Turkey` - Turkey
        * `UCT` - UCT
        * `US/Alaska` - US/Alaska
        * `US/Aleutian` - US/Aleutian
        * `US/Arizona` - US/Arizona
        * `US/Central` - US/Central
        * `US/East-Indiana` - US/East-Indiana
        * `US/Eastern` - US/Eastern
        * `US/Hawaii` - US/Hawaii
        * `US/Indiana-Starke` - US/Indiana-Starke
        * `US/Michigan` - US/Michigan
        * `US/Mountain` - US/Mountain
        * `US/Pacific` - US/Pacific
        * `US/Samoa` - US/Samoa
        * `UTC` - UTC
        * `Universal` - Universal
        * `W-SU` - W-SU
        * `WET` - WET
        * `Zulu` - Zulu
      enum:
        - Africa/Abidjan
        - Africa/Accra
        - Africa/Addis_Ababa
        - Africa/Algiers
        - Africa/Asmara
        - Africa/Asmera
        - Africa/Bamako
        - Africa/Bangui
        - Africa/Banjul
        - Africa/Bissau
        - Africa/Blantyre
        - Africa/Brazzaville
        - Africa/Bujumbura
        - Africa/Cairo
        - Africa/Casablanca
        - Africa/Ceuta
        - Africa/Conakry
        - Africa/Dakar
        - Africa/Dar_es_Salaam
        - Africa/Djibouti
        - Africa/Douala
        - Africa/El_Aaiun
        - Africa/Freetown
        - Africa/Gaborone
        - Africa/Harare
        - Africa/Johannesburg
        - Africa/Juba
        - Africa/Kampala
        - Africa/Khartoum
        - Africa/Kigali
        - Africa/Kinshasa
        - Africa/Lagos
        - Africa/Libreville
        - Africa/Lome
        - Africa/Luanda
        - Africa/Lubumbashi
        - Africa/Lusaka
        - Africa/Malabo
        - Africa/Maputo
        - Africa/Maseru
        - Africa/Mbabane
        - Africa/Mogadishu
        - Africa/Monrovia
        - Africa/Nairobi
        - Africa/Ndjamena
        - Africa/Niamey
        - Africa/Nouakchott
        - Africa/Ouagadougou
        - Africa/Porto-Novo
        - Africa/Sao_Tome
        - Africa/Timbuktu
        - Africa/Tripoli
        - Africa/Tunis
        - Africa/Windhoek
        - America/Adak
        - America/Anchorage
        - America/Anguilla
        - America/Antigua
        - America/Araguaina
        - America/Argentina/Buenos_Aires
        - America/Argentina/Catamarca
        - America/Argentina/ComodRivadavia
        - America/Argentina/Cordoba
        - America/Argentina/Jujuy
        - America/Argentina/La_Rioja
        - America/Argentina/Mendoza
        - America/Argentina/Rio_Gallegos
        - America/Argentina/Salta
        - America/Argentina/San_Juan
        - America/Argentina/San_Luis
        - America/Argentina/Tucuman
        - America/Argentina/Ushuaia
        - America/Aruba
        - America/Asuncion
        - America/Atikokan
        - America/Atka
        - America/Bahia
        - America/Bahia_Banderas
        - America/Barbados
        - America/Belem
        - America/Belize
        - America/Blanc-Sablon
        - America/Boa_Vista
        - America/Bogota
        - America/Boise
        - America/Buenos_Aires
        - America/Cambridge_Bay
        - America/Campo_Grande
        - America/Cancun
        - America/Caracas
        - America/Catamarca
        - America/Cayenne
        - America/Cayman
        - America/Chicago
        - America/Chihuahua
        - America/Ciudad_Juarez
        - America/Coral_Harbour
        - America/Cordoba
        - America/Costa_Rica
        - America/Creston
        - America/Cuiaba
        - America/Curacao
        - America/Danmarkshavn
        - America/Dawson
        - America/Dawson_Creek
        - America/Denver
        - America/Detroit
        - America/Dominica
        - America/Edmonton
        - America/Eirunepe
        - America/El_Salvador
        - America/Ensenada
        - America/Fort_Nelson
        - America/Fort_Wayne
        - America/Fortaleza
        - America/Glace_Bay
        - America/Godthab
        - America/Goose_Bay
        - America/Grand_Turk
        - America/Grenada
        - America/Guadeloupe
        - America/Guatemala
        - America/Guayaquil
        - America/Guyana
        - America/Halifax
        - America/Havana
        - America/Hermosillo
        - America/Indiana/Indianapolis
        - America/Indiana/Knox
        - America/Indiana/Marengo
        - America/Indiana/Petersburg
        - America/Indiana/Tell_City
        - America/Indiana/Vevay
        - America/Indiana/Vincennes
        - America/Indiana/Winamac
        - America/Indianapolis
        - America/Inuvik
        - America/Iqaluit
        - America/Jamaica
        - America/Jujuy
        - America/Juneau
        - America/Kentucky/Louisville
        - America/Kentucky/Monticello
        - America/Knox_IN
        - America/Kralendijk
        - America/La_Paz
        - America/Lima
        - America/Los_Angeles
        - America/Louisville
        - America/Lower_Princes
        - America/Maceio
        - America/Managua
        - America/Manaus
        - America/Marigot
        - America/Martinique
        - America/Matamoros
        - America/Mazatlan
        - America/Mendoza
        - America/Menominee
        - America/Merida
        - America/Metlakatla
        - America/Mexico_City
        - America/Miquelon
        - America/Moncton
        - America/Monterrey
        - America/Montevideo
        - America/Montreal
        - America/Montserrat
        - America/Nassau
        - America/New_York
        - America/Nipigon
        - America/Nome
        - America/Noronha
        - America/North_Dakota/Beulah
        - America/North_Dakota/Center
        - America/North_Dakota/New_Salem
        - America/Nuuk
        - America/Ojinaga
        - America/Panama
        - America/Pangnirtung
        - America/Paramaribo
        - America/Phoenix
        - America/Port-au-Prince
        - America/Port_of_Spain
        - America/Porto_Acre
        - America/Porto_Velho
        - America/Puerto_Rico
        - America/Punta_Arenas
        - America/Rainy_River
        - America/Rankin_Inlet
        - America/Recife
        - America/Regina
        - America/Resolute
        - America/Rio_Branco
        - America/Rosario
        - America/Santa_Isabel
        - America/Santarem
        - America/Santiago
        - America/Santo_Domingo
        - America/Sao_Paulo
        - America/Scoresbysund
        - America/Shiprock
        - America/Sitka
        - America/St_Barthelemy
        - America/St_Johns
        - America/St_Kitts
        - America/St_Lucia
        - America/St_Thomas
        - America/St_Vincent
        - America/Swift_Current
        - America/Tegucigalpa
        - America/Thule
        - America/Thunder_Bay
        - America/Tijuana
        - America/Toronto
        - America/Tortola
        - America/Vancouver
        - America/Virgin
        - America/Whitehorse
        - America/Winnipeg
        - America/Yakutat
        - America/Yellowknife
        - Antarctica/Casey
        - Antarctica/Davis
        - Antarctica/DumontDUrville
        - Antarctica/Macquarie
        - Antarctica/Mawson
        - Antarctica/McMurdo
        - Antarctica/Palmer
        - Antarctica/Rothera
        - Antarctica/South_Pole
        - Antarctica/Syowa
        - Antarctica/Troll
        - Antarctica/Vostok
        - Arctic/Longyearbyen
        - Asia/Aden
        - Asia/Almaty
        - Asia/Amman
        - Asia/Anadyr
        - Asia/Aqtau
        - Asia/Aqtobe
        - Asia/Ashgabat
        - Asia/Ashkhabad
        - Asia/Atyrau
        - Asia/Baghdad
        - Asia/Bahrain
        - Asia/Baku
        - Asia/Bangkok
        - Asia/Barnaul
        - Asia/Beirut
        - Asia/Bishkek
        - Asia/Brunei
        - Asia/Calcutta
        - Asia/Chita
        - Asia/Choibalsan
        - Asia/Chongqing
        - Asia/Chungking
        - Asia/Colombo
        - Asia/Dacca
        - Asia/Damascus
        - Asia/Dhaka
        - Asia/Dili
        - Asia/Dubai
        - Asia/Dushanbe
        - Asia/Famagusta
        - Asia/Gaza
        - Asia/Harbin
        - Asia/Hebron
        - Asia/Ho_Chi_Minh
        - Asia/Hong_Kong
        - Asia/Hovd
        - Asia/Irkutsk
        - Asia/Istanbul
        - Asia/Jakarta
        - Asia/Jayapura
        - Asia/Jerusalem
        - Asia/Kabul
        - Asia/Kamchatka
        - Asia/Karachi
        - Asia/Kashgar
        - Asia/Kathmandu
        - Asia/Katmandu
        - Asia/Khandyga
        - Asia/Kolkata
        - Asia/Krasnoyarsk
        - Asia/Kuala_Lumpur
        - Asia/Kuching
        - Asia/Kuwait
        - Asia/Macao
        - Asia/Macau
        - Asia/Magadan
        - Asia/Makassar
        - Asia/Manila
        - Asia/Muscat
        - Asia/Nicosia
        - Asia/Novokuznetsk
        - Asia/Novosibirsk
        - Asia/Omsk
        - Asia/Oral
        - Asia/Phnom_Penh
        - Asia/Pontianak
        - Asia/Pyongyang
        - Asia/Qatar
        - Asia/Qostanay
        - Asia/Qyzylorda
        - Asia/Rangoon
        - Asia/Riyadh
        - Asia/Saigon
        - Asia/Sakhalin
        - Asia/Samarkand
        - Asia/Seoul
        - Asia/Shanghai
        - Asia/Singapore
        - Asia/Srednekolymsk
        - Asia/Taipei
        - Asia/Tashkent
        - Asia/Tbilisi
        - Asia/Tehran
        - Asia/Tel_Aviv
        - Asia/Thimbu
        - Asia/Thimphu
        - Asia/Tokyo
        - Asia/Tomsk
        - Asia/Ujung_Pandang
        - Asia/Ulaanbaatar
        - Asia/Ulan_Bator
        - Asia/Urumqi
        - Asia/Ust-Nera
        - Asia/Vientiane
        - Asia/Vladivostok
        - Asia/Yakutsk
        - Asia/Yangon
        - Asia/Yekaterinburg
        - Asia/Yerevan
        - Atlantic/Azores
        - Atlantic/Bermuda
        - Atlantic/Canary
        - Atlantic/Cape_Verde
        - Atlantic/Faeroe
        - Atlantic/Faroe
        - Atlantic/Jan_Mayen
        - Atlantic/Madeira
        - Atlantic/Reykjavik
        - Atlantic/South_Georgia
        - Atlantic/St_Helena
        - Atlantic/Stanley
        - Australia/ACT
        - Australia/Adelaide
        - Australia/Brisbane
        - Australia/Broken_Hill
        - Australia/Canberra
        - Australia/Currie
        - Australia/Darwin
        - Australia/Eucla
        - Australia/Hobart
        - Australia/LHI
        - Australia/Lindeman
        - Australia/Lord_Howe
        - Australia/Melbourne
        - Australia/NSW
        - Australia/North
        - Australia/Perth
        - Australia/Queensland
        - Australia/South
        - Australia/Sydney
        - Australia/Tasmania
        - Australia/Victoria
        - Australia/West
        - Australia/Yancowinna
        - Brazil/Acre
        - Brazil/DeNoronha
        - Brazil/East
        - Brazil/West
        - CET
        - CST6CDT
        - Canada/Atlantic
        - Canada/Central
        - Canada/Eastern
        - Canada/Mountain
        - Canada/Newfoundland
        - Canada/Pacific
        - Canada/Saskatchewan
        - Canada/Yukon
        - Chile/Continental
        - Chile/EasterIsland
        - Cuba
        - EET
        - EST
        - EST5EDT
        - Egypt
        - Eire
        - Etc/GMT
        - Etc/GMT+0
        - Etc/GMT+1
        - Etc/GMT+10
        - Etc/GMT+11
        - Etc/GMT+12
        - Etc/GMT+2
        - Etc/GMT+3
        - Etc/GMT+4
        - Etc/GMT+5
        - Etc/GMT+6
        - Etc/GMT+7
        - Etc/GMT+8
        - Etc/GMT+9
        - Etc/GMT-0
        - Etc/GMT-1
        - Etc/GMT-10
        - Etc/GMT-11
        - Etc/GMT-12
        - Etc/GMT-13
        - Etc/GMT-14
        - Etc/GMT-2
        - Etc/GMT-3
        - Etc/GMT-4
        - Etc/GMT-5
        - Etc/GMT-6
        - Etc/GMT-7
        - Etc/GMT-8
        - Etc/GMT-9
        - Etc/GMT0
        - Etc/Greenwich
        - Etc/UCT
        - Etc/UTC
        - Etc/Universal
        - Etc/Zulu
        - Europe/Amsterdam
        - Europe/Andorra
        - Europe/Astrakhan
        - Europe/Athens
        - Europe/Belfast
        - Europe/Belgrade
        - Europe/Berlin
        - Europe/Bratislava
        - Europe/Brussels
        - Europe/Bucharest
        - Europe/Budapest
        - Europe/Busingen
        - Europe/Chisinau
        - Europe/Copenhagen
        - Europe/Dublin
        - Europe/Gibraltar
        - Europe/Guernsey
        - Europe/Helsinki
        - Europe/Isle_of_Man
        - Europe/Istanbul
        - Europe/Jersey
        - Europe/Kaliningrad
        - Europe/Kiev
        - Europe/Kirov
        - Europe/Kyiv
        - Europe/Lisbon
        - Europe/Ljubljana
        - Europe/London
        - Europe/Luxembourg
        - Europe/Madrid
        - Europe/Malta
        - Europe/Mariehamn
        - Europe/Minsk
        - Europe/Monaco
        - Europe/Moscow
        - Europe/Nicosia
        - Europe/Oslo
        - Europe/Paris
        - Europe/Podgorica
        - Europe/Prague
        - Europe/Riga
        - Europe/Rome
        - Europe/Samara
        - Europe/San_Marino
        - Europe/Sarajevo
        - Europe/Saratov
        - Europe/Simferopol
        - Europe/Skopje
        - Europe/Sofia
        - Europe/Stockholm
        - Europe/Tallinn
        - Europe/Tirane
        - Europe/Tiraspol
        - Europe/Ulyanovsk
        - Europe/Uzhgorod
        - Europe/Vaduz
        - Europe/Vatican
        - Europe/Vienna
        - Europe/Vilnius
        - Europe/Volgograd
        - Europe/Warsaw
        - Europe/Zagreb
        - Europe/Zaporozhye
        - Europe/Zurich
        - GB
        - GB-Eire
        - GMT
        - GMT+0
        - GMT-0
        - GMT0
        - Greenwich
        - HST
        - Hongkong
        - Iceland
        - Indian/Antananarivo
        - Indian/Chagos
        - Indian/Christmas
        - Indian/Cocos
        - Indian/Comoro
        - Indian/Kerguelen
        - Indian/Mahe
        - Indian/Maldives
        - Indian/Mauritius
        - Indian/Mayotte
        - Indian/Reunion
        - Iran
        - Israel
        - Jamaica
        - Japan
        - Kwajalein
        - Libya
        - MET
        - MST
        - MST7MDT
        - Mexico/BajaNorte
        - Mexico/BajaSur
        - Mexico/General
        - NZ
        - NZ-CHAT
        - Navajo
        - PRC
        - PST8PDT
        - Pacific/Apia
        - Pacific/Auckland
        - Pacific/Bougainville
        - Pacific/Chatham
        - Pacific/Chuuk
        - Pacific/Easter
        - Pacific/Efate
        - Pacific/Enderbury
        - Pacific/Fakaofo
        - Pacific/Fiji
        - Pacific/Funafuti
        - Pacific/Galapagos
        - Pacific/Gambier
        - Pacific/Guadalcanal
        - Pacific/Guam
        - Pacific/Honolulu
        - Pacific/Johnston
        - Pacific/Kanton
        - Pacific/Kiritimati
        - Pacific/Kosrae
        - Pacific/Kwajalein
        - Pacific/Majuro
        - Pacific/Marquesas
        - Pacific/Midway
        - Pacific/Nauru
        - Pacific/Niue
        - Pacific/Norfolk
        - Pacific/Noumea
        - Pacific/Pago_Pago
        - Pacific/Palau
        - Pacific/Pitcairn
        - Pacific/Pohnpei
        - Pacific/Ponape
        - Pacific/Port_Moresby
        - Pacific/Rarotonga
        - Pacific/Saipan
        - Pacific/Samoa
        - Pacific/Tahiti
        - Pacific/Tarawa
        - Pacific/Tongatapu
        - Pacific/Truk
        - Pacific/Wake
        - Pacific/Wallis
        - Pacific/Yap
        - Poland
        - Portugal
        - ROC
        - ROK
        - Singapore
        - Turkey
        - UCT
        - US/Alaska
        - US/Aleutian
        - US/Arizona
        - US/Central
        - US/East-Indiana
        - US/Eastern
        - US/Hawaii
        - US/Indiana-Starke
        - US/Michigan
        - US/Mountain
        - US/Pacific
        - US/Samoa
        - UTC
        - Universal
        - W-SU
        - WET
        - Zulu
      type: string
    ToolbarModeEnum:
      description: |-
        * `disabled` - disabled
        * `toolbar` - toolbar
      enum:
        - disabled
        - toolbar
      type: string
    Trend:
      type: object
      properties:
        events:
          description: Events to filter on. One of `events` or `actions` is required.
          type: array
          items:
            $ref: '#/components/schemas/FilterEvent'
        actions:
          description: Actions to filter on. One of `events` or `actions` is required.
          type: array
          items:
            $ref: '#/components/schemas/FilterAction'
        properties:
          $ref: '#/components/schemas/Property'
        filter_test_accounts:
          description: >-
            Whether to filter out internal and test accounts. See "project
            settings" in your PostHog account for the filters.
          type: boolean
          default: false
        date_from:
          description: >-
            What date to filter the results from. Can either be a date
            `2021-01-01`, or a relative date, like `-7d` for last seven days,
            `-1m` for last month, `mStart` for start of the month or `yStart`
            for the start of the year.
          type: string
          default: '-7d'
        date_to:
          description: >-
            What date to filter the results to. Can either be a date
            `2021-01-01`, or a relative date, like `-7d` for last seven days,
            `-1m` for last month, `mStart` for start of the month or `yStart`
            for the start of the year.
          type: string
          default: '-7d'
        breakdown:
          description: >-
            A property or cohort to break down on. You can select the type of
            the property with breakdown_type.

            - `event` (default): a property key

            - `person`: a person property key

            - `cohort`: an array of cohort IDs (ie `[9581,5812]`)
          type: string
        breakdown_type:
          $ref: '#/components/schemas/BreakdownTypeEnum'
        display:
          $ref: '#/components/schemas/DisplayEnum'
        formula:
          description: >-
            Combine the result of events or actions into a single number. For
            example `A + B` or `(A-B)/B`. The letters correspond to the order of
            the `events` or `actions` lists.
          type: string
        compare:
          description: >-
            For each returned result show the current period and the previous
            period. The result will contain `compare:true` and a `compare_label`
            with either `current` or `previous`.
          type: boolean
      x-konfig-properties:
        properties:
          description: >-
            Filter events by event property, person property, cohort, groups and
            more.
        breakdown_type:
          description: |-
            Type of property to break down on.

            * `event` - event
            * `person` - person
            * `cohort` - cohort
            * `group` - group
            * `session` - session
            * `hogql` - hogql
          default: event
        display:
          description: |-
            How to display the data. Will change how the data is returned.

            * `ActionsLineGraph` - ActionsLineGraph
            * `ActionsLineGraphCumulative` - ActionsLineGraphCumulative
            * `ActionsTable` - ActionsTable
            * `ActionsPie` - ActionsPie
            * `ActionsBar` - ActionsBar
            * `ActionsBarValue` - ActionsBarValue
            * `WorldMap` - WorldMap
            * `BoldNumber` - BoldNumber
          default: ActionsLineGraph
    TrendResult:
      type: object
      properties:
        data:
          description: The requested counts.
          type: array
          items:
            type: integer
        days:
          description: The dates corresponding to the data field above.
          type: array
          items:
            type: string
            format: date
        labels:
          description: The dates corresponding to the data field above.
          type: array
          items:
            type: string
        filter:
          $ref: '#/components/schemas/GenericInsights'
        label:
          description: |-
            A label describing this result. Will include
            - The event or action
            - Breakdown value
            - If `compare:true`, whether it's `current` or `previous`
          type: string
      required:
        - data
        - days
        - filter
        - label
        - labels
      x-konfig-properties:
        filter:
          description: The insight that's being returned.
    TrendResults:
      type: object
      properties:
        is_cached:
          description: Whether the result is cached. To force a refresh, pass ?refresh=true
          type: boolean
        last_refresh:
          description: If the result is cached, when it was last refreshed.
          type: string
          format: date-time
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        result:
          type: array
          items:
            $ref: '#/components/schemas/TrendResult'
      required:
        - is_cached
        - last_refresh
        - result
      x-konfig-properties:
        timezone:
          description: >-
            Timezone the chart is displayed in


            * `Africa/Abidjan` - Africa/Abidjan

            * `Africa/Accra` - Africa/Accra

            * `Africa/Addis_Ababa` - Africa/Addis_Ababa

            * `Africa/Algiers` - Africa/Algiers

            * `Africa/Asmara` - Africa/Asmara

            * `Africa/Asmera` - Africa/Asmera

            * `Africa/Bamako` - Africa/Bamako

            * `Africa/Bangui` - Africa/Bangui

            * `Africa/Banjul` - Africa/Banjul

            * `Africa/Bissau` - Africa/Bissau

            * `Africa/Blantyre` - Africa/Blantyre

            * `Africa/Brazzaville` - Africa/Brazzaville

            * `Africa/Bujumbura` - Africa/Bujumbura

            * `Africa/Cairo` - Africa/Cairo

            * `Africa/Casablanca` - Africa/Casablanca

            * `Africa/Ceuta` - Africa/Ceuta

            * `Africa/Conakry` - Africa/Conakry

            * `Africa/Dakar` - Africa/Dakar

            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam

            * `Africa/Djibouti` - Africa/Djibouti

            * `Africa/Douala` - Africa/Douala

            * `Africa/El_Aaiun` - Africa/El_Aaiun

            * `Africa/Freetown` - Africa/Freetown

            * `Africa/Gaborone` - Africa/Gaborone

            * `Africa/Harare` - Africa/Harare

            * `Africa/Johannesburg` - Africa/Johannesburg

            * `Africa/Juba` - Africa/Juba

            * `Africa/Kampala` - Africa/Kampala

            * `Africa/Khartoum` - Africa/Khartoum

            * `Africa/Kigali` - Africa/Kigali

            * `Africa/Kinshasa` - Africa/Kinshasa

            * `Africa/Lagos` - Africa/Lagos

            * `Africa/Libreville` - Africa/Libreville

            * `Africa/Lome` - Africa/Lome

            * `Africa/Luanda` - Africa/Luanda

            * `Africa/Lubumbashi` - Africa/Lubumbashi

            * `Africa/Lusaka` - Africa/Lusaka

            * `Africa/Malabo` - Africa/Malabo

            * `Africa/Maputo` - Africa/Maputo

            * `Africa/Maseru` - Africa/Maseru

            * `Africa/Mbabane` - Africa/Mbabane

            * `Africa/Mogadishu` - Africa/Mogadishu

            * `Africa/Monrovia` - Africa/Monrovia

            * `Africa/Nairobi` - Africa/Nairobi

            * `Africa/Ndjamena` - Africa/Ndjamena

            * `Africa/Niamey` - Africa/Niamey

            * `Africa/Nouakchott` - Africa/Nouakchott

            * `Africa/Ouagadougou` - Africa/Ouagadougou

            * `Africa/Porto-Novo` - Africa/Porto-Novo

            * `Africa/Sao_Tome` - Africa/Sao_Tome

            * `Africa/Timbuktu` - Africa/Timbuktu

            * `Africa/Tripoli` - Africa/Tripoli

            * `Africa/Tunis` - Africa/Tunis

            * `Africa/Windhoek` - Africa/Windhoek

            * `America/Adak` - America/Adak

            * `America/Anchorage` - America/Anchorage

            * `America/Anguilla` - America/Anguilla

            * `America/Antigua` - America/Antigua

            * `America/Araguaina` - America/Araguaina

            * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires

            * `America/Argentina/Catamarca` - America/Argentina/Catamarca

            * `America/Argentina/ComodRivadavia` -
            America/Argentina/ComodRivadavia

            * `America/Argentina/Cordoba` - America/Argentina/Cordoba

            * `America/Argentina/Jujuy` - America/Argentina/Jujuy

            * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja

            * `America/Argentina/Mendoza` - America/Argentina/Mendoza

            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos

            * `America/Argentina/Salta` - America/Argentina/Salta

            * `America/Argentina/San_Juan` - America/Argentina/San_Juan

            * `America/Argentina/San_Luis` - America/Argentina/San_Luis

            * `America/Argentina/Tucuman` - America/Argentina/Tucuman

            * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia

            * `America/Aruba` - America/Aruba

            * `America/Asuncion` - America/Asuncion

            * `America/Atikokan` - America/Atikokan

            * `America/Atka` - America/Atka

            * `America/Bahia` - America/Bahia

            * `America/Bahia_Banderas` - America/Bahia_Banderas

            * `America/Barbados` - America/Barbados

            * `America/Belem` - America/Belem

            * `America/Belize` - America/Belize

            * `America/Blanc-Sablon` - America/Blanc-Sablon

            * `America/Boa_Vista` - America/Boa_Vista

            * `America/Bogota` - America/Bogota

            * `America/Boise` - America/Boise

            * `America/Buenos_Aires` - America/Buenos_Aires

            * `America/Cambridge_Bay` - America/Cambridge_Bay

            * `America/Campo_Grande` - America/Campo_Grande

            * `America/Cancun` - America/Cancun

            * `America/Caracas` - America/Caracas

            * `America/Catamarca` - America/Catamarca

            * `America/Cayenne` - America/Cayenne

            * `America/Cayman` - America/Cayman

            * `America/Chicago` - America/Chicago

            * `America/Chihuahua` - America/Chihuahua

            * `America/Ciudad_Juarez` - America/Ciudad_Juarez

            * `America/Coral_Harbour` - America/Coral_Harbour

            * `America/Cordoba` - America/Cordoba

            * `America/Costa_Rica` - America/Costa_Rica

            * `America/Creston` - America/Creston

            * `America/Cuiaba` - America/Cuiaba

            * `America/Curacao` - America/Curacao

            * `America/Danmarkshavn` - America/Danmarkshavn

            * `America/Dawson` - America/Dawson

            * `America/Dawson_Creek` - America/Dawson_Creek

            * `America/Denver` - America/Denver

            * `America/Detroit` - America/Detroit

            * `America/Dominica` - America/Dominica

            * `America/Edmonton` - America/Edmonton

            * `America/Eirunepe` - America/Eirunepe

            * `America/El_Salvador` - America/El_Salvador

            * `America/Ensenada` - America/Ensenada

            * `America/Fort_Nelson` - America/Fort_Nelson

            * `America/Fort_Wayne` - America/Fort_Wayne

            * `America/Fortaleza` - America/Fortaleza

            * `America/Glace_Bay` - America/Glace_Bay

            * `America/Godthab` - America/Godthab

            * `America/Goose_Bay` - America/Goose_Bay

            * `America/Grand_Turk` - America/Grand_Turk

            * `America/Grenada` - America/Grenada

            * `America/Guadeloupe` - America/Guadeloupe

            * `America/Guatemala` - America/Guatemala

            * `America/Guayaquil` - America/Guayaquil

            * `America/Guyana` - America/Guyana

            * `America/Halifax` - America/Halifax

            * `America/Havana` - America/Havana

            * `America/Hermosillo` - America/Hermosillo

            * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis

            * `America/Indiana/Knox` - America/Indiana/Knox

            * `America/Indiana/Marengo` - America/Indiana/Marengo

            * `America/Indiana/Petersburg` - America/Indiana/Petersburg

            * `America/Indiana/Tell_City` - America/Indiana/Tell_City

            * `America/Indiana/Vevay` - America/Indiana/Vevay

            * `America/Indiana/Vincennes` - America/Indiana/Vincennes

            * `America/Indiana/Winamac` - America/Indiana/Winamac

            * `America/Indianapolis` - America/Indianapolis

            * `America/Inuvik` - America/Inuvik

            * `America/Iqaluit` - America/Iqaluit

            * `America/Jamaica` - America/Jamaica

            * `America/Jujuy` - America/Jujuy

            * `America/Juneau` - America/Juneau

            * `America/Kentucky/Louisville` - America/Kentucky/Louisville

            * `America/Kentucky/Monticello` - America/Kentucky/Monticello

            * `America/Knox_IN` - America/Knox_IN

            * `America/Kralendijk` - America/Kralendijk

            * `America/La_Paz` - America/La_Paz

            * `America/Lima` - America/Lima

            * `America/Los_Angeles` - America/Los_Angeles

            * `America/Louisville` - America/Louisville

            * `America/Lower_Princes` - America/Lower_Princes

            * `America/Maceio` - America/Maceio

            * `America/Managua` - America/Managua

            * `America/Manaus` - America/Manaus

            * `America/Marigot` - America/Marigot

            * `America/Martinique` - America/Martinique

            * `America/Matamoros` - America/Matamoros

            * `America/Mazatlan` - America/Mazatlan

            * `America/Mendoza` - America/Mendoza

            * `America/Menominee` - America/Menominee

            * `America/Merida` - America/Merida

            * `America/Metlakatla` - America/Metlakatla

            * `America/Mexico_City` - America/Mexico_City

            * `America/Miquelon` - America/Miquelon

            * `America/Moncton` - America/Moncton

            * `America/Monterrey` - America/Monterrey

            * `America/Montevideo` - America/Montevideo

            * `America/Montreal` - America/Montreal

            * `America/Montserrat` - America/Montserrat

            * `America/Nassau` - America/Nassau

            * `America/New_York` - America/New_York

            * `America/Nipigon` - America/Nipigon

            * `America/Nome` - America/Nome

            * `America/Noronha` - America/Noronha

            * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah

            * `America/North_Dakota/Center` - America/North_Dakota/Center

            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem

            * `America/Nuuk` - America/Nuuk

            * `America/Ojinaga` - America/Ojinaga

            * `America/Panama` - America/Panama

            * `America/Pangnirtung` - America/Pangnirtung

            * `America/Paramaribo` - America/Paramaribo

            * `America/Phoenix` - America/Phoenix

            * `America/Port-au-Prince` - America/Port-au-Prince

            * `America/Port_of_Spain` - America/Port_of_Spain

            * `America/Porto_Acre` - America/Porto_Acre

            * `America/Porto_Velho` - America/Porto_Velho

            * `America/Puerto_Rico` - America/Puerto_Rico

            * `America/Punta_Arenas` - America/Punta_Arenas

            * `America/Rainy_River` - America/Rainy_River

            * `America/Rankin_Inlet` - America/Rankin_Inlet

            * `America/Recife` - America/Recife

            * `America/Regina` - America/Regina

            * `America/Resolute` - America/Resolute

            * `America/Rio_Branco` - America/Rio_Branco

            * `America/Rosario` - America/Rosario

            * `America/Santa_Isabel` - America/Santa_Isabel

            * `America/Santarem` - America/Santarem

            * `America/Santiago` - America/Santiago

            * `America/Santo_Domingo` - America/Santo_Domingo

            * `America/Sao_Paulo` - America/Sao_Paulo

            * `America/Scoresbysund` - America/Scoresbysund

            * `America/Shiprock` - America/Shiprock

            * `America/Sitka` - America/Sitka

            * `America/St_Barthelemy` - America/St_Barthelemy

            * `America/St_Johns` - America/St_Johns

            * `America/St_Kitts` - America/St_Kitts

            * `America/St_Lucia` - America/St_Lucia

            * `America/St_Thomas` - America/St_Thomas

            * `America/St_Vincent` - America/St_Vincent

            * `America/Swift_Current` - America/Swift_Current

            * `America/Tegucigalpa` - America/Tegucigalpa

            * `America/Thule` - America/Thule

            * `America/Thunder_Bay` - America/Thunder_Bay

            * `America/Tijuana` - America/Tijuana

            * `America/Toronto` - America/Toronto

            * `America/Tortola` - America/Tortola

            * `America/Vancouver` - America/Vancouver

            * `America/Virgin` - America/Virgin

            * `America/Whitehorse` - America/Whitehorse

            * `America/Winnipeg` - America/Winnipeg

            * `America/Yakutat` - America/Yakutat

            * `America/Yellowknife` - America/Yellowknife

            * `Antarctica/Casey` - Antarctica/Casey

            * `Antarctica/Davis` - Antarctica/Davis

            * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville

            * `Antarctica/Macquarie` - Antarctica/Macquarie

            * `Antarctica/Mawson` - Antarctica/Mawson

            * `Antarctica/McMurdo` - Antarctica/McMurdo

            * `Antarctica/Palmer` - Antarctica/Palmer

            * `Antarctica/Rothera` - Antarctica/Rothera

            * `Antarctica/South_Pole` - Antarctica/South_Pole

            * `Antarctica/Syowa` - Antarctica/Syowa

            * `Antarctica/Troll` - Antarctica/Troll

            * `Antarctica/Vostok` - Antarctica/Vostok

            * `Arctic/Longyearbyen` - Arctic/Longyearbyen

            * `Asia/Aden` - Asia/Aden

            * `Asia/Almaty` - Asia/Almaty

            * `Asia/Amman` - Asia/Amman

            * `Asia/Anadyr` - Asia/Anadyr

            * `Asia/Aqtau` - Asia/Aqtau

            * `Asia/Aqtobe` - Asia/Aqtobe

            * `Asia/Ashgabat` - Asia/Ashgabat

            * `Asia/Ashkhabad` - Asia/Ashkhabad

            * `Asia/Atyrau` - Asia/Atyrau

            * `Asia/Baghdad` - Asia/Baghdad

            * `Asia/Bahrain` - Asia/Bahrain

            * `Asia/Baku` - Asia/Baku

            * `Asia/Bangkok` - Asia/Bangkok

            * `Asia/Barnaul` - Asia/Barnaul

            * `Asia/Beirut` - Asia/Beirut

            * `Asia/Bishkek` - Asia/Bishkek

            * `Asia/Brunei` - Asia/Brunei

            * `Asia/Calcutta` - Asia/Calcutta

            * `Asia/Chita` - Asia/Chita

            * `Asia/Choibalsan` - Asia/Choibalsan

            * `Asia/Chongqing` - Asia/Chongqing

            * `Asia/Chungking` - Asia/Chungking

            * `Asia/Colombo` - Asia/Colombo

            * `Asia/Dacca` - Asia/Dacca

            * `Asia/Damascus` - Asia/Damascus

            * `Asia/Dhaka` - Asia/Dhaka

            * `Asia/Dili` - Asia/Dili

            * `Asia/Dubai` - Asia/Dubai

            * `Asia/Dushanbe` - Asia/Dushanbe

            * `Asia/Famagusta` - Asia/Famagusta

            * `Asia/Gaza` - Asia/Gaza

            * `Asia/Harbin` - Asia/Harbin

            * `Asia/Hebron` - Asia/Hebron

            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh

            * `Asia/Hong_Kong` - Asia/Hong_Kong

            * `Asia/Hovd` - Asia/Hovd

            * `Asia/Irkutsk` - Asia/Irkutsk

            * `Asia/Istanbul` - Asia/Istanbul

            * `Asia/Jakarta` - Asia/Jakarta

            * `Asia/Jayapura` - Asia/Jayapura

            * `Asia/Jerusalem` - Asia/Jerusalem

            * `Asia/Kabul` - Asia/Kabul

            * `Asia/Kamchatka` - Asia/Kamchatka

            * `Asia/Karachi` - Asia/Karachi

            * `Asia/Kashgar` - Asia/Kashgar

            * `Asia/Kathmandu` - Asia/Kathmandu

            * `Asia/Katmandu` - Asia/Katmandu

            * `Asia/Khandyga` - Asia/Khandyga

            * `Asia/Kolkata` - Asia/Kolkata

            * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk

            * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur

            * `Asia/Kuching` - Asia/Kuching

            * `Asia/Kuwait` - Asia/Kuwait

            * `Asia/Macao` - Asia/Macao

            * `Asia/Macau` - Asia/Macau

            * `Asia/Magadan` - Asia/Magadan

            * `Asia/Makassar` - Asia/Makassar

            * `Asia/Manila` - Asia/Manila

            * `Asia/Muscat` - Asia/Muscat

            * `Asia/Nicosia` - Asia/Nicosia

            * `Asia/Novokuznetsk` - Asia/Novokuznetsk

            * `Asia/Novosibirsk` - Asia/Novosibirsk

            * `Asia/Omsk` - Asia/Omsk

            * `Asia/Oral` - Asia/Oral

            * `Asia/Phnom_Penh` - Asia/Phnom_Penh

            * `Asia/Pontianak` - Asia/Pontianak

            * `Asia/Pyongyang` - Asia/Pyongyang

            * `Asia/Qatar` - Asia/Qatar

            * `Asia/Qostanay` - Asia/Qostanay

            * `Asia/Qyzylorda` - Asia/Qyzylorda

            * `Asia/Rangoon` - Asia/Rangoon

            * `Asia/Riyadh` - Asia/Riyadh

            * `Asia/Saigon` - Asia/Saigon

            * `Asia/Sakhalin` - Asia/Sakhalin

            * `Asia/Samarkand` - Asia/Samarkand

            * `Asia/Seoul` - Asia/Seoul

            * `Asia/Shanghai` - Asia/Shanghai

            * `Asia/Singapore` - Asia/Singapore

            * `Asia/Srednekolymsk` - Asia/Srednekolymsk

            * `Asia/Taipei` - Asia/Taipei

            * `Asia/Tashkent` - Asia/Tashkent

            * `Asia/Tbilisi` - Asia/Tbilisi

            * `Asia/Tehran` - Asia/Tehran

            * `Asia/Tel_Aviv` - Asia/Tel_Aviv

            * `Asia/Thimbu` - Asia/Thimbu

            * `Asia/Thimphu` - Asia/Thimphu

            * `Asia/Tokyo` - Asia/Tokyo

            * `Asia/Tomsk` - Asia/Tomsk

            * `Asia/Ujung_Pandang` - Asia/Ujung_Pandang

            * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar

            * `Asia/Ulan_Bator` - Asia/Ulan_Bator

            * `Asia/Urumqi` - Asia/Urumqi

            * `Asia/Ust-Nera` - Asia/Ust-Nera

            * `Asia/Vientiane` - Asia/Vientiane

            * `Asia/Vladivostok` - Asia/Vladivostok

            * `Asia/Yakutsk` - Asia/Yakutsk

            * `Asia/Yangon` - Asia/Yangon

            * `Asia/Yekaterinburg` - Asia/Yekaterinburg

            * `Asia/Yerevan` - Asia/Yerevan

            * `Atlantic/Azores` - Atlantic/Azores

            * `Atlantic/Bermuda` - Atlantic/Bermuda

            * `Atlantic/Canary` - Atlantic/Canary

            * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde

            * `Atlantic/Faeroe` - Atlantic/Faeroe

            * `Atlantic/Faroe` - Atlantic/Faroe

            * `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen

            * `Atlantic/Madeira` - Atlantic/Madeira

            * `Atlantic/Reykjavik` - Atlantic/Reykjavik

            * `Atlantic/South_Georgia` - Atlantic/South_Georgia

            * `Atlantic/St_Helena` - Atlantic/St_Helena

            * `Atlantic/Stanley` - Atlantic/Stanley

            * `Australia/ACT` - Australia/ACT

            * `Australia/Adelaide` - Australia/Adelaide

            * `Australia/Brisbane` - Australia/Brisbane

            * `Australia/Broken_Hill` - Australia/Broken_Hill

            * `Australia/Canberra` - Australia/Canberra

            * `Australia/Currie` - Australia/Currie

            * `Australia/Darwin` - Australia/Darwin

            * `Australia/Eucla` - Australia/Eucla

            * `Australia/Hobart` - Australia/Hobart

            * `Australia/LHI` - Australia/LHI

            * `Australia/Lindeman` - Australia/Lindeman

            * `Australia/Lord_Howe` - Australia/Lord_Howe

            * `Australia/Melbourne` - Australia/Melbourne

            * `Australia/NSW` - Australia/NSW

            * `Australia/North` - Australia/North

            * `Australia/Perth` - Australia/Perth

            * `Australia/Queensland` - Australia/Queensland

            * `Australia/South` - Australia/South

            * `Australia/Sydney` - Australia/Sydney

            * `Australia/Tasmania` - Australia/Tasmania

            * `Australia/Victoria` - Australia/Victoria

            * `Australia/West` - Australia/West

            * `Australia/Yancowinna` - Australia/Yancowinna

            * `Brazil/Acre` - Brazil/Acre

            * `Brazil/DeNoronha` - Brazil/DeNoronha

            * `Brazil/East` - Brazil/East

            * `Brazil/West` - Brazil/West

            * `CET` - CET

            * `CST6CDT` - CST6CDT

            * `Canada/Atlantic` - Canada/Atlantic

            * `Canada/Central` - Canada/Central

            * `Canada/Eastern` - Canada/Eastern

            * `Canada/Mountain` - Canada/Mountain

            * `Canada/Newfoundland` - Canada/Newfoundland

            * `Canada/Pacific` - Canada/Pacific

            * `Canada/Saskatchewan` - Canada/Saskatchewan

            * `Canada/Yukon` - Canada/Yukon

            * `Chile/Continental` - Chile/Continental

            * `Chile/EasterIsland` - Chile/EasterIsland

            * `Cuba` - Cuba

            * `EET` - EET

            * `EST` - EST

            * `EST5EDT` - EST5EDT

            * `Egypt` - Egypt

            * `Eire` - Eire

            * `Etc/GMT` - Etc/GMT

            * `Etc/GMT+0` - Etc/GMT+0

            * `Etc/GMT+1` - Etc/GMT+1

            * `Etc/GMT+10` - Etc/GMT+10

            * `Etc/GMT+11` - Etc/GMT+11

            * `Etc/GMT+12` - Etc/GMT+12

            * `Etc/GMT+2` - Etc/GMT+2

            * `Etc/GMT+3` - Etc/GMT+3

            * `Etc/GMT+4` - Etc/GMT+4

            * `Etc/GMT+5` - Etc/GMT+5

            * `Etc/GMT+6` - Etc/GMT+6

            * `Etc/GMT+7` - Etc/GMT+7

            * `Etc/GMT+8` - Etc/GMT+8

            * `Etc/GMT+9` - Etc/GMT+9

            * `Etc/GMT-0` - Etc/GMT-0

            * `Etc/GMT-1` - Etc/GMT-1

            * `Etc/GMT-10` - Etc/GMT-10

            * `Etc/GMT-11` - Etc/GMT-11

            * `Etc/GMT-12` - Etc/GMT-12

            * `Etc/GMT-13` - Etc/GMT-13

            * `Etc/GMT-14` - Etc/GMT-14

            * `Etc/GMT-2` - Etc/GMT-2

            * `Etc/GMT-3` - Etc/GMT-3

            * `Etc/GMT-4` - Etc/GMT-4

            * `Etc/GMT-5` - Etc/GMT-5

            * `Etc/GMT-6` - Etc/GMT-6

            * `Etc/GMT-7` - Etc/GMT-7

            * `Etc/GMT-8` - Etc/GMT-8

            * `Etc/GMT-9` - Etc/GMT-9

            * `Etc/GMT0` - Etc/GMT0

            * `Etc/Greenwich` - Etc/Greenwich

            * `Etc/UCT` - Etc/UCT

            * `Etc/UTC` - Etc/UTC

            * `Etc/Universal` - Etc/Universal

            * `Etc/Zulu` - Etc/Zulu

            * `Europe/Amsterdam` - Europe/Amsterdam

            * `Europe/Andorra` - Europe/Andorra

            * `Europe/Astrakhan` - Europe/Astrakhan

            * `Europe/Athens` - Europe/Athens

            * `Europe/Belfast` - Europe/Belfast

            * `Europe/Belgrade` - Europe/Belgrade

            * `Europe/Berlin` - Europe/Berlin

            * `Europe/Bratislava` - Europe/Bratislava

            * `Europe/Brussels` - Europe/Brussels

            * `Europe/Bucharest` - Europe/Bucharest

            * `Europe/Budapest` - Europe/Budapest

            * `Europe/Busingen` - Europe/Busingen

            * `Europe/Chisinau` - Europe/Chisinau

            * `Europe/Copenhagen` - Europe/Copenhagen

            * `Europe/Dublin` - Europe/Dublin

            * `Europe/Gibraltar` - Europe/Gibraltar

            * `Europe/Guernsey` - Europe/Guernsey

            * `Europe/Helsinki` - Europe/Helsinki

            * `Europe/Isle_of_Man` - Europe/Isle_of_Man

            * `Europe/Istanbul` - Europe/Istanbul

            * `Europe/Jersey` - Europe/Jersey

            * `Europe/Kaliningrad` - Europe/Kaliningrad

            * `Europe/Kiev` - Europe/Kiev

            * `Europe/Kirov` - Europe/Kirov

            * `Europe/Kyiv` - Europe/Kyiv

            * `Europe/Lisbon` - Europe/Lisbon

            * `Europe/Ljubljana` - Europe/Ljubljana

            * `Europe/London` - Europe/London

            * `Europe/Luxembourg` - Europe/Luxembourg

            * `Europe/Madrid` - Europe/Madrid

            * `Europe/Malta` - Europe/Malta

            * `Europe/Mariehamn` - Europe/Mariehamn

            * `Europe/Minsk` - Europe/Minsk

            * `Europe/Monaco` - Europe/Monaco

            * `Europe/Moscow` - Europe/Moscow

            * `Europe/Nicosia` - Europe/Nicosia

            * `Europe/Oslo` - Europe/Oslo

            * `Europe/Paris` - Europe/Paris

            * `Europe/Podgorica` - Europe/Podgorica

            * `Europe/Prague` - Europe/Prague

            * `Europe/Riga` - Europe/Riga

            * `Europe/Rome` - Europe/Rome

            * `Europe/Samara` - Europe/Samara

            * `Europe/San_Marino` - Europe/San_Marino

            * `Europe/Sarajevo` - Europe/Sarajevo

            * `Europe/Saratov` - Europe/Saratov

            * `Europe/Simferopol` - Europe/Simferopol

            * `Europe/Skopje` - Europe/Skopje

            * `Europe/Sofia` - Europe/Sofia

            * `Europe/Stockholm` - Europe/Stockholm

            * `Europe/Tallinn` - Europe/Tallinn

            * `Europe/Tirane` - Europe/Tirane

            * `Europe/Tiraspol` - Europe/Tiraspol

            * `Europe/Ulyanovsk` - Europe/Ulyanovsk

            * `Europe/Uzhgorod` - Europe/Uzhgorod

            * `Europe/Vaduz` - Europe/Vaduz

            * `Europe/Vatican` - Europe/Vatican

            * `Europe/Vienna` - Europe/Vienna

            * `Europe/Vilnius` - Europe/Vilnius

            * `Europe/Volgograd` - Europe/Volgograd

            * `Europe/Warsaw` - Europe/Warsaw

            * `Europe/Zagreb` - Europe/Zagreb

            * `Europe/Zaporozhye` - Europe/Zaporozhye

            * `Europe/Zurich` - Europe/Zurich

            * `GB` - GB

            * `GB-Eire` - GB-Eire

            * `GMT` - GMT

            * `GMT+0` - GMT+0

            * `GMT-0` - GMT-0

            * `GMT0` - GMT0

            * `Greenwich` - Greenwich

            * `HST` - HST

            * `Hongkong` - Hongkong

            * `Iceland` - Iceland

            * `Indian/Antananarivo` - Indian/Antananarivo

            * `Indian/Chagos` - Indian/Chagos

            * `Indian/Christmas` - Indian/Christmas

            * `Indian/Cocos` - Indian/Cocos

            * `Indian/Comoro` - Indian/Comoro

            * `Indian/Kerguelen` - Indian/Kerguelen

            * `Indian/Mahe` - Indian/Mahe

            * `Indian/Maldives` - Indian/Maldives

            * `Indian/Mauritius` - Indian/Mauritius

            * `Indian/Mayotte` - Indian/Mayotte

            * `Indian/Reunion` - Indian/Reunion

            * `Iran` - Iran

            * `Israel` - Israel

            * `Jamaica` - Jamaica

            * `Japan` - Japan

            * `Kwajalein` - Kwajalein

            * `Libya` - Libya

            * `MET` - MET

            * `MST` - MST

            * `MST7MDT` - MST7MDT

            * `Mexico/BajaNorte` - Mexico/BajaNorte

            * `Mexico/BajaSur` - Mexico/BajaSur

            * `Mexico/General` - Mexico/General

            * `NZ` - NZ

            * `NZ-CHAT` - NZ-CHAT

            * `Navajo` - Navajo

            * `PRC` - PRC

            * `PST8PDT` - PST8PDT

            * `Pacific/Apia` - Pacific/Apia

            * `Pacific/Auckland` - Pacific/Auckland

            * `Pacific/Bougainville` - Pacific/Bougainville

            * `Pacific/Chatham` - Pacific/Chatham

            * `Pacific/Chuuk` - Pacific/Chuuk

            * `Pacific/Easter` - Pacific/Easter

            * `Pacific/Efate` - Pacific/Efate

            * `Pacific/Enderbury` - Pacific/Enderbury

            * `Pacific/Fakaofo` - Pacific/Fakaofo

            * `Pacific/Fiji` - Pacific/Fiji

            * `Pacific/Funafuti` - Pacific/Funafuti

            * `Pacific/Galapagos` - Pacific/Galapagos

            * `Pacific/Gambier` - Pacific/Gambier

            * `Pacific/Guadalcanal` - Pacific/Guadalcanal

            * `Pacific/Guam` - Pacific/Guam

            * `Pacific/Honolulu` - Pacific/Honolulu

            * `Pacific/Johnston` - Pacific/Johnston

            * `Pacific/Kanton` - Pacific/Kanton

            * `Pacific/Kiritimati` - Pacific/Kiritimati

            * `Pacific/Kosrae` - Pacific/Kosrae

            * `Pacific/Kwajalein` - Pacific/Kwajalein

            * `Pacific/Majuro` - Pacific/Majuro

            * `Pacific/Marquesas` - Pacific/Marquesas

            * `Pacific/Midway` - Pacific/Midway

            * `Pacific/Nauru` - Pacific/Nauru

            * `Pacific/Niue` - Pacific/Niue

            * `Pacific/Norfolk` - Pacific/Norfolk

            * `Pacific/Noumea` - Pacific/Noumea

            * `Pacific/Pago_Pago` - Pacific/Pago_Pago

            * `Pacific/Palau` - Pacific/Palau

            * `Pacific/Pitcairn` - Pacific/Pitcairn

            * `Pacific/Pohnpei` - Pacific/Pohnpei

            * `Pacific/Ponape` - Pacific/Ponape

            * `Pacific/Port_Moresby` - Pacific/Port_Moresby

            * `Pacific/Rarotonga` - Pacific/Rarotonga

            * `Pacific/Saipan` - Pacific/Saipan

            * `Pacific/Samoa` - Pacific/Samoa

            * `Pacific/Tahiti` - Pacific/Tahiti

            * `Pacific/Tarawa` - Pacific/Tarawa

            * `Pacific/Tongatapu` - Pacific/Tongatapu

            * `Pacific/Truk` - Pacific/Truk

            * `Pacific/Wake` - Pacific/Wake

            * `Pacific/Wallis` - Pacific/Wallis

            * `Pacific/Yap` - Pacific/Yap

            * `Poland` - Poland

            * `Portugal` - Portugal

            * `ROC` - ROC

            * `ROK` - ROK

            * `Singapore` - Singapore

            * `Turkey` - Turkey

            * `UCT` - UCT

            * `US/Alaska` - US/Alaska

            * `US/Aleutian` - US/Aleutian

            * `US/Arizona` - US/Arizona

            * `US/Central` - US/Central

            * `US/East-Indiana` - US/East-Indiana

            * `US/Eastern` - US/Eastern

            * `US/Hawaii` - US/Hawaii

            * `US/Indiana-Starke` - US/Indiana-Starke

            * `US/Michigan` - US/Michigan

            * `US/Mountain` - US/Mountain

            * `US/Pacific` - US/Pacific

            * `US/Samoa` - US/Samoa

            * `UTC` - UTC

            * `Universal` - Universal

            * `W-SU` - W-SU

            * `WET` - WET

            * `Zulu` - Zulu
          default: UTC
    TrendsFilter:
      title: TrendsFilter
      properties: &ref_44
        aggregationAxisFormat:
          $ref: '#/components/schemas/AggregationAxisFormatNullable'
        aggregationAxisPostfix:
          title: Aggregationaxispostfix
          default: null
          type: string
          nullable: true
        aggregationAxisPrefix:
          title: Aggregationaxisprefix
          default: null
          type: string
          nullable: true
        breakdown_histogram_bin_count:
          title: Breakdown Histogram Bin Count
          default: null
          type: number
          nullable: true
        compare:
          title: Compare
          default: null
          type: boolean
          nullable: true
        decimalPlaces:
          title: Decimalplaces
          default: null
          type: number
          nullable: true
        display:
          $ref: '#/components/schemas/ChartDisplayTypeNullable'
        formula:
          title: Formula
          default: null
          type: string
          nullable: true
        hidden_legend_indexes:
          title: Hidden Legend Indexes
          default: null
          items:
            type: number
          type: array
          nullable: true
        showLabelsOnSeries:
          title: Showlabelsonseries
          default: null
          type: boolean
          nullable: true
        showLegend:
          title: Showlegend
          default: null
          type: boolean
          nullable: true
        showPercentStackView:
          title: Showpercentstackview
          default: null
          type: boolean
          nullable: true
        showValuesOnSeries:
          title: Showvaluesonseries
          default: null
          type: boolean
          nullable: true
        smoothingIntervals:
          title: Smoothingintervals
          default: null
          type: number
          nullable: true
      type: object
    TrendsQuery:
      title: TrendsQuery
      properties:
        aggregation_group_type_index:
          title: Aggregation Group Type Index
          description: Groups aggregation
          default: null
          type: integer
          nullable: true
        breakdownFilter:
          $ref: '#/components/schemas/BreakdownFilterNullable'
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        filterTestAccounts:
          title: Filtertestaccounts
          description: Exclude internal and test users by applying the respective filters
          default: null
          type: boolean
          nullable: true
        interval:
          $ref: '#/components/schemas/IntervalTypeNullable'
        kind:
          title: Kind
          const: TrendsQuery
          default: TrendsQuery
        properties:
          title: Properties
          description: Property filters for all series
          anyOf:
            - items:
                anyOf:
                  - $ref: '#/components/schemas/EventPropertyFilter'
                  - $ref: '#/components/schemas/PersonPropertyFilter'
                  - $ref: '#/components/schemas/ElementPropertyFilter'
                  - $ref: '#/components/schemas/SessionPropertyFilter'
                  - $ref: '#/components/schemas/CohortPropertyFilter'
                  - $ref: '#/components/schemas/RecordingDurationFilter'
                  - $ref: '#/components/schemas/GroupPropertyFilter'
                  - $ref: '#/components/schemas/FeaturePropertyFilter'
                  - $ref: '#/components/schemas/HogQLPropertyFilter'
                  - $ref: '#/components/schemas/EmptyPropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePropertyFilter'
                  - $ref: '#/components/schemas/DataWarehousePersonPropertyFilter'
              type: array
            - $ref: '#/components/schemas/PropertyGroupFilter'
          default: null
          nullable: true
        response:
          $ref: '#/components/schemas/TrendsQueryResponseNullable'
        samplingFactor:
          title: Samplingfactor
          description: Sampling rate
          default: null
          type: number
          nullable: true
        series:
          title: Series
          description: Events and actions to include
          items:
            anyOf:
              - $ref: '#/components/schemas/EventsNode'
              - $ref: '#/components/schemas/ActionsNode'
              - $ref: '#/components/schemas/DataWarehouseNode'
          type: array
        trendsFilter:
          $ref: '#/components/schemas/TrendsFilterNullable'
      required:
        - series
      type: object
    TrendsQueryResponse:
      title: TrendsQueryResponse
      properties: &ref_42
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            type: object
          type: array
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required: &ref_43
        - results
      type: object
    Type7baEnum:
      description: |-
        * `popover` - popover
        * `widget` - widget
        * `button` - button
        * `email` - email
        * `full_screen` - full screen
        * `api` - api
      enum:
        - popover
        - widget
        - button
        - email
        - full_screen
        - api
      type: string
    UrlMatchingEnum:
      description: |-
        * `contains` - contains
        * `regex` - regex
        * `exact` - exact
      enum:
        - contains
        - regex
        - exact
      type: string
    User:
      type: object
      properties:
        date_joined:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        distinct_id:
          type: string
          nullable: true
          maxLength: 200
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          title: Email address
          type: string
          format: email
          maxLength: 254
        pending_email:
          title: Pending email address awaiting verification
          type: string
          format: email
          nullable: true
          maxLength: 254
        email_opt_in:
          type: boolean
          nullable: true
        is_email_verified:
          type: boolean
          nullable: true
        notification_settings:
          type: object
          additionalProperties: {}
        anonymize_data:
          type: boolean
          nullable: true
        toolbar_mode:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ToolbarModeEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        has_password:
          type: boolean
          readOnly: true
        is_staff:
          title: Staff status
          description: Designates whether the user can log into this admin site.
          type: boolean
        is_impersonated:
          type: boolean
          nullable: true
          readOnly: true
        team:
          $ref: '#/components/schemas/TeamBasic'
        organization:
          $ref: '#/components/schemas/Organization'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationBasic'
          readOnly: true
        set_current_organization:
          type: string
          writeOnly: true
        set_current_team:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
        current_password:
          type: string
          writeOnly: true
        events_column_config: {}
        is_2fa_enabled:
          type: boolean
          readOnly: true
        has_social_auth:
          type: boolean
          readOnly: true
        has_seen_product_intro_for:
          nullable: true
        scene_personalisation:
          type: array
          items:
            $ref: '#/components/schemas/ScenePersonalisationBasic'
          readOnly: true
        theme_mode:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ThemeModeEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
      required:
        - date_joined
        - email
        - has_password
        - has_social_auth
        - is_2fa_enabled
        - is_impersonated
        - organization
        - organizations
        - password
        - scene_personalisation
        - team
        - uuid
      x-konfig-properties:
        team:
          readOnly: true
        organization:
          readOnly: true
    UserBasic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        distinct_id:
          type: string
          nullable: true
          maxLength: 200
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          title: Email address
          type: string
          format: email
          maxLength: 254
        is_email_verified:
          type: boolean
          nullable: true
      required:
        - email
        - id
        - uuid
    VizSpecificOptions:
      title: VizSpecificOptions
      properties: &ref_24
        ActionsPie:
          title: Actionspie
          default: null
          type: 'null'
        RETENTION:
          title: Retention
          default: null
          type: 'null'
      type: object
    WebOverviewItem:
      title: WebOverviewItem
      properties:
        changeFromPreviousPct:
          title: Changefrompreviouspct
          default: null
          type: number
          nullable: true
        isIncreaseBad:
          title: Isincreasebad
          default: null
          type: boolean
          nullable: true
        key:
          title: Key
          type: string
        kind:
          $ref: '#/components/schemas/Kind2'
        previous:
          title: Previous
          default: null
          type: number
          nullable: true
        value:
          title: Value
          default: null
          type: number
          nullable: true
      required:
        - key
        - kind
      type: object
    WebOverviewQuery:
      title: WebOverviewQuery
      properties:
        compare:
          title: Compare
          default: null
          type: boolean
          nullable: true
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        kind:
          title: Kind
          const: WebOverviewQuery
          default: WebOverviewQuery
        properties:
          title: Properties
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
        response:
          $ref: '#/components/schemas/WebOverviewQueryResponseNullable'
        sampling:
          $ref: '#/components/schemas/SamplingNullable'
        useSessionsTable:
          title: Usesessionstable
          default: null
          type: boolean
          nullable: true
      required:
        - properties
      type: object
    WebOverviewQueryResponse:
      title: WebOverviewQueryResponse
      properties: &ref_45
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items:
            $ref: '#/components/schemas/WebOverviewItem'
          type: array
        samplingRate:
          $ref: '#/components/schemas/SamplingRateNullable'
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
      required: &ref_46
        - results
      type: object
    WebStatsBreakdown:
      title: WebStatsBreakdown
      enum:
        - Page
        - InitialPage
        - InitialChannelType
        - InitialReferringDomain
        - InitialUTMSource
        - InitialUTMCampaign
        - InitialUTMMedium
        - InitialUTMTerm
        - InitialUTMContent
        - Browser
        - OS
        - DeviceType
        - Country
        - Region
        - City
      type: string
    WebStatsTableQuery:
      title: WebStatsTableQuery
      properties:
        breakdownBy:
          $ref: '#/components/schemas/WebStatsBreakdown'
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        doPathCleaning:
          title: Dopathcleaning
          default: null
          type: boolean
          nullable: true
        includeBounceRate:
          title: Includebouncerate
          default: null
          type: boolean
          nullable: true
        includeScrollDepth:
          title: Includescrolldepth
          default: null
          type: boolean
          nullable: true
        kind:
          title: Kind
          const: WebStatsTableQuery
          default: WebStatsTableQuery
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        properties:
          title: Properties
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
        response:
          $ref: '#/components/schemas/WebStatsTableQueryResponseNullable'
        sampling:
          $ref: '#/components/schemas/SamplingNullable'
        useSessionsTable:
          title: Usesessionstable
          default: null
          type: boolean
          nullable: true
      required:
        - breakdownBy
        - properties
      type: object
    WebStatsTableQueryResponse:
      title: WebStatsTableQueryResponse
      properties: &ref_48
        columns:
          title: Columns
          default: null
          items: {}
          type: array
          nullable: true
        hasMore:
          title: Hasmore
          default: null
          type: boolean
          nullable: true
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        limit:
          title: Limit
          default: null
          type: integer
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        offset:
          title: Offset
          default: null
          type: integer
          nullable: true
        results:
          title: Results
          items: {}
          type: array
        samplingRate:
          $ref: '#/components/schemas/SamplingRateNullable'
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          default: null
          items: {}
          type: array
          nullable: true
      required: &ref_49
        - results
      type: object
    WebTopClicksQuery:
      title: WebTopClicksQuery
      properties:
        dateRange:
          $ref: '#/components/schemas/DateRangeNullable'
        kind:
          title: Kind
          const: WebTopClicksQuery
          default: WebTopClicksQuery
        properties:
          title: Properties
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/EventPropertyFilter'
              - $ref: '#/components/schemas/PersonPropertyFilter'
        response:
          $ref: '#/components/schemas/WebTopClicksQueryResponseNullable'
        sampling:
          $ref: '#/components/schemas/SamplingNullable'
        useSessionsTable:
          title: Usesessionstable
          default: null
          type: boolean
          nullable: true
      required:
        - properties
      type: object
    WebTopClicksQueryResponse:
      title: WebTopClicksQueryResponse
      properties: &ref_50
        columns:
          title: Columns
          default: null
          items: {}
          type: array
          nullable: true
        hogql:
          title: Hogql
          default: null
          type: string
          nullable: true
        is_cached:
          title: Is Cached
          default: null
          type: boolean
          nullable: true
        last_refresh:
          title: Last Refresh
          default: null
          type: string
          nullable: true
        next_allowed_client_refresh:
          title: Next Allowed Client Refresh
          default: null
          type: string
          nullable: true
        results:
          title: Results
          items: {}
          type: array
        samplingRate:
          $ref: '#/components/schemas/SamplingRateNullable'
        timings:
          title: Timings
          default: null
          items:
            $ref: '#/components/schemas/QueryTiming'
          type: array
          nullable: true
        types:
          title: Types
          default: null
          items: {}
          type: array
          nullable: true
      required: &ref_51
        - results
      type: object
    WeekStartDayEnum:
      description: |-
        * `0` - Sunday
        * `1` - Monday
      enum:
        - 0
        - 1
      type: integer
    MathGroupTypeIndexNullable:
      title: MathGroupTypeIndex
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      default: null
      nullable: true
    ActorsQueryResponseNullable:
      title: ActorsQueryResponse
      properties: *ref_0
      required: *ref_1
      type: object
      default: null
      nullable: true
    BreakdownTypeNullable:
      title: BreakdownType
      enum:
        - cohort
        - person
        - event
        - group
        - session
        - hogql
        - data_warehouse
      type: string
      default: null
      nullable: true
    ChartAxisNullable:
      title: ChartAxis
      properties: *ref_2
      required: *ref_3
      type: object
      default: null
      nullable: true
    ChartSettingsNullable:
      title: ChartSettings
      properties: *ref_4
      type: object
      default: null
      nullable: true
    ChartDisplayTypeNullable:
      title: ChartDisplayType
      enum:
        - ActionsLineGraph
        - ActionsBar
        - ActionsAreaGraph
        - ActionsLineGraphCumulative
        - BoldNumber
        - ActionsPie
        - ActionsBarValue
        - ActionsTable
        - WorldMap
      type: string
      default: null
      nullable: true
    PersonNullable:
      type: object
      properties: *ref_5
      required: *ref_6
      default: null
      nullable: true
    ResponseNullable:
      title: Response
      description: Return a limited set of data
      properties: *ref_7
      required: *ref_8
      type: object
      default: null
      nullable: true
    EventsQueryResponseNullable:
      title: EventsQueryResponse
      description: Cached query response
      properties: *ref_9
      required: *ref_10
      type: object
      default: null
      nullable: true
    FunnelCorrelationResponseNullable:
      title: FunnelCorrelationResponse
      properties: *ref_11
      required: *ref_12
      type: object
      default: null
      nullable: true
    FunnelPathTypeNullable:
      title: FunnelPathType
      enum:
        - funnel_path_before_step
        - funnel_path_between_steps
        - funnel_path_after_step
      type: string
      default: null
      nullable: true
    BreakdownAttributionTypeNullable:
      title: BreakdownAttributionType
      enum:
        - first_touch
        - last_touch
        - all_events
        - step
      type: string
      default: null
      nullable: true
    StepOrderValueNullable:
      title: StepOrderValue
      enum:
        - strict
        - unordered
        - ordered
      type: string
      default: null
      nullable: true
    FunnelStepReferenceNullable:
      title: FunnelStepReference
      enum:
        - total
        - previous
      type: string
      default: null
      nullable: true
    FunnelVizTypeNullable:
      title: FunnelVizType
      enum:
        - steps
        - time_to_convert
        - trends
      type: string
      default: null
      nullable: true
    FunnelConversionWindowTimeUnitNullable:
      title: FunnelConversionWindowTimeUnit
      enum:
        - second
        - minute
        - hour
        - day
        - week
        - month
      type: string
      default: null
      nullable: true
    FunnelLayoutNullable:
      title: FunnelLayout
      enum:
        - horizontal
        - vertical
      type: string
      default: null
      nullable: true
    BreakdownFilterNullable:
      title: BreakdownFilter
      description: Breakdown of the events and actions
      properties: *ref_13
      type: object
      default: null
      nullable: true
    DateRangeNullable:
      title: DateRange
      properties: *ref_14
      type: object
      default: null
      nullable: true
    FunnelsFilterNullable:
      title: FunnelsFilter
      description: Properties specific to the funnels insight
      properties: *ref_15
      type: object
      default: null
      nullable: true
    IntervalTypeNullable:
      title: IntervalType
      description: >-
        Granularity of the response. Can be one of `hour`, `day`, `week` or
        `month`
      enum:
        - hour
        - day
        - week
        - month
      type: string
      default: null
      nullable: true
    HogQLFiltersNullable:
      title: HogQLFilters
      properties: *ref_16
      type: object
      default: null
      nullable: true
    HogQLAutocompleteResponseNullable:
      title: HogQLAutocompleteResponse
      description: Cached query response
      properties: *ref_17
      required: *ref_18
      type: object
      default: null
      nullable: true
    HogQLMetadataResponseNullable:
      title: HogQLMetadataResponse
      description: Query metadata output
      properties: *ref_19
      required: *ref_20
      type: object
      default: null
      nullable: true
    HogQLQueryModifiersNullable:
      title: HogQLQueryModifiers
      description: Modifiers used when performing the query
      properties: *ref_21
      type: object
      default: null
      nullable: true
    HogQLQueryResponseNullable:
      title: HogQLQueryResponse
      description: Cached query response
      properties: *ref_22
      type: object
      default: null
      nullable: true
    InCohortViaNullable:
      title: InCohortVia
      enum:
        - auto
        - leftjoin
        - subquery
        - leftjoin_conjoined
      type: string
      default: null
      nullable: true
    MaterializationModeNullable:
      title: MaterializationMode
      enum:
        - auto
        - legacy_null_as_string
        - legacy_null_as_null
        - disabled
      type: string
      default: null
      nullable: true
    PersonsArgMaxVersionNullable:
      title: PersonsArgMaxVersion
      enum:
        - auto
        - v1
        - v2
      type: string
      default: null
      nullable: true
    PersonsOnEventsModeNullable:
      title: PersonsOnEventsMode
      enum:
        - disabled
        - person_id_no_override_properties_on_events
        - person_id_override_properties_on_events
        - person_id_override_properties_joined
      type: string
      default: null
      nullable: true
    CompareNullable:
      title: Compare
      enum:
        - current
        - previous
      type: string
      default: null
      nullable: true
    InsightActorsQueryOptionsResponseNullable:
      title: InsightActorsQueryOptionsResponse
      properties: *ref_23
      type: object
      default: null
      nullable: true
    VizSpecificOptionsNullable:
      title: VizSpecificOptions
      properties: *ref_24
      type: object
      default: null
      nullable: true
    LifecycleFilterNullable:
      title: LifecycleFilter
      description: Properties specific to the lifecycle insight
      properties: *ref_25
      type: object
      default: null
      nullable: true
    LifecycleQueryResponseNullable:
      title: LifecycleQueryResponse
      properties: *ref_26
      required: *ref_27
      type: object
      default: null
      nullable: true
    FunnelPathsFilterNullable:
      title: FunnelPathsFilter
      description: Used for displaying paths in relation to funnel steps.
      properties: *ref_28
      required: *ref_29
      type: object
      default: null
      nullable: true
    PathsQueryResponseNullable:
      title: PathsQueryResponse
      properties: *ref_30
      required: *ref_31
      type: object
      default: null
      nullable: true
    SamplingRateNullable:
      title: SamplingRate
      properties: *ref_32
      required: *ref_33
      type: object
      default: null
      nullable: true
    Kind1Nullable:
      title: Kind1
      enum:
        - ActionsNode
        - EventsNode
      type: string
      default: null
      nullable: true
    EntityTypeNullable:
      title: EntityType
      enum:
        - actions
        - events
        - data_warehouse
        - new_entity
      type: string
      default: null
      nullable: true
    RetentionPeriodNullable:
      title: RetentionPeriod
      enum:
        - Hour
        - Day
        - Week
        - Month
      type: string
      default: null
      nullable: true
    RetentionReferenceNullable:
      title: RetentionReference
      enum:
        - total
        - previous
      type: string
      default: null
      nullable: true
    RetentionTypeNullable:
      title: RetentionType
      enum:
        - retention_recurring
        - retention_first_time
      type: string
      default: null
      nullable: true
    RetentionEntityNullable:
      title: RetentionEntity
      properties: *ref_34
      type: object
      default: null
      nullable: true
    RetentionQueryResponseNullable:
      title: RetentionQueryResponse
      properties: *ref_35
      required: *ref_36
      type: object
      default: null
      nullable: true
    SessionsTimelineQueryResponseNullable:
      title: SessionsTimelineQueryResponse
      description: Cached query response
      properties: *ref_37
      required: *ref_38
      type: object
      default: null
      nullable: true
    StickinessFilterNullable:
      title: StickinessFilter
      description: Properties specific to the stickiness insight
      properties: *ref_39
      type: object
      default: null
      nullable: true
    TimeToSeeDataSessionsQueryResponseNullable:
      title: TimeToSeeDataSessionsQueryResponse
      description: Cached query response
      properties: *ref_40
      required: *ref_41
      type: object
      default: null
      nullable: true
    AggregationAxisFormatNullable:
      title: AggregationAxisFormat
      enum:
        - numeric
        - duration
        - duration_ms
        - percentage
        - percentage_scaled
      type: string
      default: null
      nullable: true
    TrendsQueryResponseNullable:
      title: TrendsQueryResponse
      properties: *ref_42
      required: *ref_43
      type: object
      default: null
      nullable: true
    TrendsFilterNullable:
      title: TrendsFilter
      description: Properties specific to the trends insight
      properties: *ref_44
      type: object
      default: null
      nullable: true
    WebOverviewQueryResponseNullable:
      title: WebOverviewQueryResponse
      properties: *ref_45
      required: *ref_46
      type: object
      default: null
      nullable: true
    SamplingNullable:
      title: Sampling
      properties: *ref_47
      type: object
      default: null
      nullable: true
    WebStatsTableQueryResponseNullable:
      title: WebStatsTableQueryResponse
      properties: *ref_48
      required: *ref_49
      type: object
      default: null
      nullable: true
    WebTopClicksQueryResponseNullable:
      title: WebTopClicksQueryResponse
      properties: *ref_50
      required: *ref_51
      type: object
      default: null
      nullable: true
    DashboardsListCollaboratorsResponse:
      type: array
      items:
        $ref: '#/components/schemas/DashboardCollaborator'
    DashboardsSharingListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SharingConfiguration'
    ExplicitmembersGetMembersResponse:
      type: array
      items:
        $ref: '#/components/schemas/ExplicitTeamMember'
    GroupstypesListResponse:
      type: array
      items:
        $ref: '#/components/schemas/GroupType'
    InsightsGetSharingResponse:
      type: array
      items:
        $ref: '#/components/schemas/SharingConfiguration'
    SessionrecordingsGetSharingResponse:
      type: array
      items:
        $ref: '#/components/schemas/SharingConfiguration'
  securitySchemes:
    PersonalAPIKeyAuth:
      type: http
      scheme: bearer
x-tagGroups:
  - tags:
      - actions
      - activity_log
      - annotations
      - app_metrics
      - batch_exports
      - cohorts
      - dashboard_templates
      - dashboards
      - domains
      - early_access_feature
      - event_definitions
      - events
      - experiments
      - explicit_members
      - exports
      - feature_flags
      - funnel
      - groups
      - groups_types
      - insights
      - invites
      - members
      - notebooks
      - organizations
      - persons
      - pipeline_destination_configs
      - pipeline_destinations
      - pipeline_frontend_apps
      - pipeline_frontend_apps_configs
      - pipeline_import_apps
      - pipeline_import_apps_configs
      - pipeline_transformation_configs
      - pipeline_transformations
      - plugin_configs
      - plugins
      - projects
      - property_definitions
      - query
      - roles
      - session_recording_playlists
      - session_recordings
      - subscriptions
      - surveys
      - trend
      - users
    name: All endpoints
