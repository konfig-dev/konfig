openapi: 3.0.0
info:
  title: Just Eat API
  description: >-
    # Just Eat API

    Just Eat offers services for our various business partners and our consumer
    applications.

    How you interact with the API depends on the services you wish to interact
    with.

    ## Security

    ### HTTPS

    All api calls and callbacks require HTTPS. Your service will need a valid
    SSL certificate and be accessible via the standard SSL port (port 443).

    ## Making an API request

    Some API calls require an API key, to authenticate the partner calling the
    API.

    ```

    PUT https://uk-partnerapi.just-eat.io/orders/abcd1234 HTTP/1.1

    Authorization: JE-API-KEY abcd123456789

    ```

    Other calls require a user token in the form of a JWT.

    ```

    GET https://uk.api.just-eat.io/consumer/me/orders/uk HTTP/1.1

    Authorization: Bearer abcd123456789

    ```


    ## Date Formats

    ### Date and time formats

    All dates and times should use the [ISO 8601 standard for representation of
    dates and times](https://en.wikipedia.org/wiki/ISO_8601).


    #### For instance:

    * DueDateWithUtcOffset: `"2015-05-26T14:52:35.5444292+01:00"`
      - Local time: `14:52`
      - UTC time: `13:52`
      - UTC offset: `+1hr` (due to daylight time saving)
    * DueDateWithUtcOffset: `"2015-02-03T11:10:00.0000000+00:00"`
      - Local time: `11:10`
      - UTC time: `11:10`
      - UTC offset: `0` (no daylight time saving, local time is equivalent to UTC)

    Note that the offset may be for a timezone different to your own, so you
    should always convert to your own local time for display purposes (e.g. on
    receipts and terminals).


    ### Callback timestamps

    Timestamps sent to Just Eat should be recorded as the current local time
    (including any changes needed to account for daylight saving) with an
    accompanying offset that shows the difference between the recorded local
    time and the current UTC time.


    If it is not possible to record timestamps in local time, timestamps may be
    recorded in UTC time with a 00:00 offset.

    ## Async Webhooks

    Some of the webhooks on the platform are configured as being 'async'
    webhooks. These are for long-running operations, and work as follows:
      1. Your webhook is invoked with a `?callback={returnUrl}` query string parameter. The `returnUrl` is a unique URL that you will need to send the async response to.
      2. Return an immediate `202 Accepted` response from the webhook endpoint, to indicate that you have received the request.
      3. Perform the long-running operation. This can be deemed either a _success_; or a _failure_.
      4. If the result is a _**success**_, return the following:
      ```
      POST {returnUrl} HTTP/1.1

      {
            "status": "Success",
            "message": "{successMessage}",
            "data": {}   // webhook-specific response object
      }
      ```
      5. Otherwise, if the result is a _**failure**_, return the following:
      ```
      POST {returnUrl} HTTP/1.1

      {
            "status": "Failure",
            "message": "{failureMessage}",
            "data": {}   // webhook-specific response object
      }
      ```
  version: 1.0.0
  contact:
    name: Integration enquiries
    url: https://developers.just-eat.com/
    email: david.handley@justeattakeaway.com
  license:
    name: Apache 2
    url: https://www.apache.org/licenses/LICENSE-2.0.txt
  x-logo:
    url: https://restaurants.just-eat.co.uk/img/logo-justeat-light.3478215a.svg
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - description: Production URL for the UK API
    url: https://uk.api.just-eat.io
  - description: Production URL for the DK, ES, IE, IT and NO API
    url: https://i18n.api.just-eat.io
  - description: Production URL for the AU and NZ API
    url: https://aus.api.just-eat.io
tags:
  - name: publicly-accessible
  - name: API Partner Management Gateway
  - name: Manage Order Journey
  - name: Webhook
  - name: jet-connect
  - name: Logistic Management
  - name: Manage Delivery Suppliers
  - name: JET Connect for Manage Order Status
  - name: Analyze Order Delivery
  - name: Operate Order Status
  - name: Partner Management
  - name: Customer Experience
  - name: Order Delivery Webhooks
  - name: ordering-universal-connector
  - name: Analyse Partner Performance
  - name: Search Orchestrator
  - name: order-injection-status-updater
  - name: JET Connect for Manage Partner Availability
  - name: Manage Partner Devices
  - name: Order Acceptance Webhooks
  - name: restaurant-availability-api
  - name: Process Partner Onboarding
  - name: Promote Partners to Customers
  - name: Attempted Delivery Webhooks
  - name: Manage Customer Information
  - name: JET Connect for Manage Product Catalogue
  - name: Restaurant Webhooks
  - name: Order Webhooks
  - name: Restaurant Events Webhooks
  - name: Define Partner Delivery Areas
  - name: Consumer Queries Webhooks
  - name: RestaurantQueries Webhooks
  - name: Order Dispatch Webhooks
  - name: Process Customer Purchases
paths:
  /applications/orderpad-app/restaurants/{tenant}/device-tokens:
    post:
      tags:
        - Manage Order Journey
        - Manage Partner Devices
        - publicly-accessible
      summary: Link a restaurant to an Orderpad
      operationId: ManageOrderJourney_linkRestaurantToOrderpad
      description: Link a restaurant to an Orderpad
      parameters:
        - description: The identifier for the tenant
          name: tenant
          in: path
          required: true
          schema:
            type: string
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderpadAppCreateAuthTokenRequestYaml'
      responses:
        '200':
          description: Authentication token successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderpadAppCreateAuthTokenResponseYaml'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
        '401':
          description: Login code invalid
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Draft
  /applications/orderpad-app/restaurants/{tenant}/login-sessions:
    post:
      tags:
        - Manage Order Journey
        - Manage Partner Devices
        - publicly-accessible
      summary: Login session for a restaurant owner
      operationId: ManageOrderJourney_createRestaurantLoginSession
      description: >-
        Create a login session for a restaurant owner to a website to link their
        devices
      parameters:
        - description: The identifier for the tenant
          name: tenant
          in: path
          required: true
          schema:
            type: string
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderpadAppLoginSessionRequestYaml'
      responses:
        '204':
          description: Request received, no info about success or failure.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                errors:
                  - description: The restaurant owner email is required.
                    errorCode: RestaurantOwnerEmailRequired
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Draft
  /applications/orderpad-app/restaurants/{tenant}/{restaurantId}/registration-codes:
    post:
      tags:
        - Manage Order Journey
        - Manage Partner Devices
        - publicly-accessible
      summary: Create Orderpad registration code
      operationId: ManageOrderJourney_createOrderRegistrationCode
      security:
        - Bearer: []
      description: Create Orderpad registration code
      parameters:
        - description: The identifier for the tenant
          name: tenant
          in: path
          required: true
          schema:
            type: string
        - description: The restaurant Id
          name: restaurantId
          in: path
          required: true
          schema:
            type: string
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '201':
          description: >-
            Registration code successfully created. Location header set to
            registration code resource
          headers:
            Location:
              description: The URI that could be used to get the registration just created
              schema:
                example: >-
                  https://uk.api.just-eat.io/applications/orderpad-app/restaurants/uk/12345/registration-codes/c47ca85e9c2946c38ee28fd36a98b2fc
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                errors:
                  - errorCode: '400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
                errors:
                  - description: Invalid authentication token
                    errorCode: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
                errors:
                  - description: Registration code creation not allowed
                    errorCode: Forbidden
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500ErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
                errors:
                  - description: Internal Server Error
      x-status: Draft
  /attempted-delivery-query-resolved:
    put:
      tags:
        - API Partner Management Gateway
        - Attempted Delivery Webhooks
        - publicly-accessible
        - Webhook
      summary: Attempted delivery query resolved
      operationId: ApiPartnerManagementGateway_resolveDeliveryQuery
      description: >-
        This webhook will be invoked whenever an attempted delivery query has
        been resolved.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AttemptedDeliveryAttemptedDeliveryResolvedYaml
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
      x-webhook: 'Yes'
  /brands/{brand_slug}/orders:
    get:
      servers:
        - description: Production environment
          url: https://order-reporting-connector.flyt-platform.com
      tags:
        - Partner Management
        - Analyse Partner Performance
        - jet-connect
        - publicly-accessible
      summary: Get Brand Orders
      operationId: PartnerManagement_getBrandOrders
      security:
        - X-Flyt-Api-Key: []
      description: >
        Get all brand orders within the specified time frame, optionally
        filtered by status and location.


        Example of orders overview endpoint with filters:


        ```

        /brands/<brand_slug>/orders?status=failure&from=2021-06-07T12:04:38.1518005Z&to=2021-06-07T14:04:38.1518005Z&page=2

        ```
      parameters:
        - description: The brand slug to query.
          name: brand_slug
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Since when to start fetching orders. It's a timestamp in RFC3339
            format. By default it will be set to the previous 2 hours since the
            moment of the request. The maximum is 15 days ago.
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: >-
            Until when to stop fetching orders. It's a timestamp in RFC3339
            format. By default it will use the moment of the request.
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: >-
            Used to return orders by order status. By default it will return all
            orders.
          name: status
          in: query
          schema:
            type: string
            enum:
              - all
              - success
              - failure
              - pending
        - description: >-
            Location ID's to filter by. Multiple locations can be provided with
            comma separated strings. No input means we don't filter by location.
          name: locations
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Pagination is available if the brand has too many orders that can’t
            be returned in a single request. The maximum orders per request is
            50.
          name: page
          in: query
          required: false
          schema:
            type: integer
        - description: The size of the page.
          name: size
          in: query
          required: false
          schema:
            type: integer
            default: 50
            maximum: 4000
      responses:
        '200':
          $ref: >-
            #/components/responses/JetConnectOrderReportingConnectorSimpleOrdersResponseYaml
        '400':
          description: >-
            Bad Request: The request is faulty due to user error, usually
            because of invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
        '401':
          description: >-
            Unauthorized: The credentials are missing or incorrect for the
            requested action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
              examples:
                no API key:
                  value:
                    message: No API key found in request
                invalid API key:
                  value:
                    message: Invalid authentication credentials
        '403':
          description: 'Forbidden: The client is not allowed to perform this action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
        '404':
          description: 'Not Found: The object cannot be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
              examples:
                not found:
                  value:
                    message: Not Found
        '429':
          description: >-
            Too Many Requests: Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
        '500':
          description: >-
            Internal Server Error: Something went wrong internally, possibly
            because of a bug or an outage.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
      x-status: Stable
  /brands/{brand_slug}/orders/{orderID}:
    get:
      servers:
        - description: Production environment
          url: https://order-reporting-connector.flyt-platform.com
      tags:
        - Partner Management
        - Analyse Partner Performance
        - jet-connect
        - publicly-accessible
      summary: Get Full Order Details
      operationId: PartnerManagement_getOrderDetails
      security:
        - X-Flyt-Api-Key: []
      description: Get the brand order full details by order id or order reference.
      parameters:
        - $ref: '#/paths/~1brands~1%7Bbrand_slug%7D~1orders/get/parameters/0'
        - description: The order id to query.
          name: orderID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: >-
            #/components/responses/JetConnectOrderReportingConnectorSingleOrderResponseYaml
        '400':
          description: >-
            Bad Request: The request is faulty due to user error, usually
            because of invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
        '401':
          description: >-
            Unauthorized: The credentials are missing or incorrect for the
            requested action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
              examples:
                no API key:
                  value:
                    message: No API key found in request
                invalid API key:
                  value:
                    message: Invalid authentication credentials
        '403':
          description: 'Forbidden: The client is not allowed to perform this action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
        '404':
          description: 'Not Found: The object cannot be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
              examples:
                not found:
                  value:
                    message: Not Found
        '429':
          description: >-
            Too Many Requests: Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
        '500':
          description: >-
            Internal Server Error: Something went wrong internally, possibly
            because of a bug or an outage.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
      x-status: Stable
  /consumers/{tenant}/me/exclusions:
    get:
      tags:
        - Customer Experience
        - Manage Customer Information
        - publicly-accessible
      summary: Get exclusion list for consumer
      operationId: CustomerExperience_consumerExclusionsGet
      security:
        - Bearer: []
      description: Gets product types exclusions list for consumer.
      parameters:
        - description: Request tenant.
          required: true
          name: tenant
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Return consumer's exclusion list.
          headers:
            cache-control:
              description: Information about how the response can be cached.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExclusionsGetExclusionsResponseYaml'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1
                errors:
                  - description: You are unauthorized to perform this request.
                    errorCode: Unauthorized
        '403':
          description: >-
            There is no auth token supplied, or the auth token is invalid or
            expired.
          $ref: '#/components/responses/403ForbiddenResponseYaml'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1
                errors:
                  - description: Tenant could not be found.
                    errorCode: TenantNotFound
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Stable
  /consumers/{tenant}/me/exclusions/{productType}:
    put:
      tags:
        - Customer Experience
        - Manage Customer Information
        - publicly-accessible
      summary: Create or update an exclusion
      operationId: CustomerExperience_createOrUpdateExclusion
      security:
        - Bearer: []
        - api_key: []
        - basic_auth: []
        - justeat_adfs: []
        - restaurantsignup_jwt: []
        - daas_jwt: []
      description: Creates or update an exclusion for a given product type.
      parameters:
        - description: Request tenant.
          required: true
          name: tenant
          schema:
            type: string
          in: path
        - description: Product type.
          required: true
          name: productType
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExclusionsSelfExclusionRequestYaml'
      responses:
        '200':
          description: Successful operation
          headers:
            content-language:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExclusionsCreateExclusionResponseYaml'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1
                errors:
                  - description: The product type is invalid.
                    errorCode: BadRequest
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1
                errors:
                  - description: You are unauthorized to perform this request.
                    errorCode: Unauthorized
        '403':
          description: You are not allowed to perform this request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1
                errors:
                  - description: >-
                      You are not allowed to switch to a different exclusion
                      when existing exclusion is active.
                    errorCode: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1
                errors:
                  - description: Tenant could not be found.
                    errorCode: TenantNotFound
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Stable
  /delivery/pools:
    get:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Get your delivery pools
      operationId: LogisticManagement_getDeliveryPools
      description: >-
        A delivery pool is a named group of drivers which deliver food for a set
        of restaurants.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LogisticManagementGetDeliveryPoolsResponse
              examples:
                response:
                  value:
                    d5f72466a6dd49a08166d5a044c5b9e4:
                      name: Toronto - West
                      restaurants:
                        - 123
                        - 456
                    b9c6673b8e5948b98cfbd14a982de2c2:
                      name: Toronto - East
                      restaurants:
                        - 789
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            text/plain:
              examples:
                response:
                  value: Internal Server Error
      x-status: Stable
    post:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Create a new delivery pool
      operationId: LogisticManagement_createDeliveryPool
      description: >-
        A delivery pool is a named group of drivers which deliver food for a set
        of restaurants.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPoolCreateDeliveryPoolYaml'
      responses:
        '201':
          description: Pool has been created.
        '400':
          description: >-
            There was something invalid in your request - check response body
            for details
          content:
            application/json:
              examples:
                response:
                  value:
                    name:
                      - '''Name'' should not be empty'
              schema:
                $ref: >-
                  #/components/schemas/LogisticManagementCreateDeliveryPoolResponse
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            text/plain:
              examples:
                response:
                  value: Internal Server Error
      x-status: Stable
  /delivery/pools/{deliveryPoolId}/availability/relative:
    get:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Get availability for pickup
      operationId: LogisticManagement_getPickupETA
      description: >-
        Get the current amount of time it will take a driver to collect a new
        order from a restaurant in the pool.
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogisticManagementGetPickupEtaResponse'
              examples:
                request:
                  value:
                    bestGuess: '00:35:00'
        '404':
          description: The pool could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
    put:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Set availability for pickup
      operationId: LogisticManagement_setPickupETA
      description: >-
        Set the average amount of time it will take a driver to collect a new
        order from a restaurant in the pool.
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPoolEstimatedTimeYaml'
      responses:
        '202':
          description: Update will take effect shortly
        '404':
          description: The pool could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /delivery/pools/{deliveryPoolId}/change-risk:
    post:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Update delivery pool risk signal
      operationId: LogisticManagement_updateDeliveryPoolRiskSignal
      description: >-
        Define the delivery pool risk level, in order for Demand Shaping to
        generate dynamic delivery area polygons for all restaurants in the
        delivery pool
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPoolUpdateDeliveryPoolRiskYaml'
      responses:
        '202':
          description: Accepted
        '400':
          description: >-
            There was something invalid in your request - check response body
            for details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: c2FkZmFzZmFzZmhramFmams=
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                errors:
                  riskLevel:
                    - '''RiskLevel'' should not be empty'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: c2FkZmFzZmFzZmhramFmams=
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                errors:
                  - errorCode: '401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: c2FkZmFzZmFzZmhramFmams=
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                errors:
                  - errorCode: '403'
        '404':
          description: The pool could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: c2FkZmFzZmFzZmhramFmams=
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                errors:
                  - errorCode: '404'
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal server error
          content:
            application/json;v8:
              schema:
                $ref: '#/components/schemas/5XxErrorSchemaYaml'
      x-status: Stable
  /delivery/pools/{deliveryPoolId}:
    delete:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Delete a delivery pool
      operationId: LogisticManagement_removeDeliveryPool
      description: The restaurants will no longer be associated with the pool.
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Pool deleted
        '404':
          description: The pool could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            text/plain:
              examples:
                response:
                  value: Internal Server Error
      x-status: Stable
    get:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Get an individual delivery pool
      operationId: LogisticManagement_getDeliveryPool
      description: >-
        A delivery pool is a named group of drivers which deliver food for a set
        of restaurants.
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogisticManagementGetDeliveryPoolResponse'
              examples:
                response:
                  value:
                    name: Toronto - West
                    restaurants:
                      - 123
                      - 456
        '404':
          description: The pool could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            text/plain:
              examples:
                response:
                  value: Internal Server Error
      x-status: Stable
    patch:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Modify a delivery pool
      operationId: LogisticManagement_modifyDeliveryPool
      description: Modify a delivery pool, changing its name, restaurants or both
      parameters:
        - description: Identifier for the pool
          schema:
            type: string
          required: true
          in: path
          name: deliveryPoolId
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        description: >-
          Request body should contain an object with either or both of the
          properties. If a property is not specified then the existing values
          are retained.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPoolPatchDeliveryPoolYaml'
        required: true
      responses:
        '202':
          description: Pool has been updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LogisticManagementModifyDeliveryPoolResponse
              examples:
                response:
                  value:
                    restaurants:
                      - 123
                      - 456
                    name: Toronto - North
        '400':
          description: >-
            There was something invalid in your request - check response body
            for details
          content:
            application/json:
              examples:
                response:
                  value:
                    name:
                      - '''Name'' should not be empty'
              schema:
                $ref: >-
                  #/components/schemas/LogisticManagementModifyDeliveryPool400Response
        '404':
          description: The pool could not be found
        '409':
          description: A restaurant in your request already belongs to another pool
          content:
            text/plain:
              examples:
                response:
                  value: >-
                    Restaurant(s) are already assigned to pools :
                    `{RestaurantId:55474,
                    PoolId:cccebb96452349b799b71a7adc51df66}`
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            text/plain:
              examples:
                response:
                  value: Internal Server Error
      x-status: Stable
    put:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Replace an existing delivery pool
      operationId: LogisticManagement_replaceDeliveryPool
      description: Replace an existing delivery pool changing all of its properties
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPoolCreateDeliveryPoolYaml'
      responses:
        '202':
          description: Pool has been replaced
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LogisticManagementReplaceDeliveryPoolResponse
              examples:
                response:
                  value:
                    name: Toronto - West
                    restaurants:
                      - 123
                      - 456
        '400':
          description: >-
            There was something invalid in your request - check response body
            for details
          content:
            application/json:
              examples:
                response:
                  value:
                    name:
                      - '''Name'' should not be empty'
              schema:
                $ref: >-
                  #/components/schemas/LogisticManagementReplaceDeliveryPool400Response
        '404':
          description: The pool could not be found
        '409':
          description: A restaurant in your request already belongs to another pool
          content:
            text/plain:
              examples:
                response:
                  value: >-
                    Restaurant(s) are already assigned to pools :
                    `{RestaurantId:55474,
                    PoolId:cccebb96452349b799b71a7adc51df66}`
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            text/plain:
              examples:
                response:
                  value: Internal Server Error
      x-status: Stable
  /delivery/pools/{deliveryPoolId}/hours:
    put:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Set the delivery pools daily start and end times
      operationId: LogisticManagement_setDeliveryPoolHours
      description: >-
        Set the daily start and end times for a pool or set closed flag if the
        pool does not operate on that day. Start and end times for all days must
        be provided. Though the API accepts array of start and end times for
        each day, multiple start and end time for a day are not accepted. If the
        end time for a day is equal to or before start time, end time will be
        considered as time for the next day.
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPoolDeliveryPoolHoursYaml'
      responses:
        '200':
          description: Pool hours have been updated
        '404':
          description: The pool could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /delivery/pools/{deliveryPoolId}/offline-events:
    delete:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Delete offline events
      operationId: LogisticManagement_deleteOfflineEvents
      description: Delete offline events for a delivery pool
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Reason of the offline event. e.g. `?reason=manual`
          required: true
          name: reason
          schema:
            enum:
              - manual
            type: string
          in: query
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '204':
          description: Manual offline events deleted
        '400':
          description: Tenant in request doesn't correspond with pool tenant
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: The pool could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            text/plain:
              examples:
                response:
                  value: Internal Server Error
        '501':
          description: The operation has not been implemented
      x-status: Stable
    post:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Take delivery pool offline
      operationId: LogisticManagement_takePoolOffline
      description: Take delivery pool offline
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogisticManagementTakePoolOfflineRequest'
      responses:
        '202':
          description: Pool status manually changed to offline
          headers:
            location:
              description: The URI that could be used to get status of the pool
              schema:
                example: https://uk.api.just-eat.io/delivery/pools/1234/offline-events
                type: string
        '400':
          description: Tenant in request doesn't correspond with pool tenant
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: The pool could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            text/plain:
              examples:
                response:
                  value: Internal Server Error
        '501':
          description: The operation has not been implemented
      x-status: Stable
  /delivery/pools/{deliveryPoolId}/restaurants:
    delete:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Remove restaurants from a delivery pool
      operationId: LogisticManagement_removeDeliveryPoolRestaurants
      description: Remove restaurants from a delivery pool
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/LogisticManagementRemoveDeliveryPoolRestaurantsRequest
      responses:
        '200':
          description: Pool has been updated
        '400':
          description: >-
            There was something invalid in your request - check response body
            for details
        '404':
          description: The pool could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
    put:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Add restaurants to an existing delivery pool
      operationId: LogisticManagement_addRestaurantsToDeliveryPool
      description: Add additional restaurants to a delivery pool
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryApiDeliveryRestaurantslistYaml'
              examples:
                response:
                  value:
                    restaurants:
                      - 123
                      - 456
        '400':
          description: >-
            There was something invalid in your request - check response body
            for details
        '404':
          description: The pool could not be found
        '409':
          description: >-
            The restaurants could not be added to the pool. Typically this is
            because they are already assigned to another pool
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /delivery/pools/{deliveryPoolId}/status:
    get:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Get status of delivery pool
      operationId: LogisticManagement_getDeliveryPoolStatus
      description: Get delivery pool's status and list of events
      parameters:
        - description: Identifier for the pool
          required: true
          name: deliveryPoolId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            cache-control:
              description: Information about how the response can be cached
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LogisticManagementGetDeliveryPoolStatusResponse
              example:
                response:
                  status: Offline
                  events:
                    - createdUtc: '2021-08-23T01:00:00Z'
                      eventType: Offline
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: The pool could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            text/plain:
              examples:
                response:
                  value: Internal Server Error
      x-status: Stable
  /delivery-failed:
    put:
      tags:
        - API Partner Management Gateway
        - Attempted Delivery Webhooks
        - publicly-accessible
        - Webhook
      summary: Delivery Attempt Failed
      operationId: ApiPartnerManagementGateway_attemptedDeliveryPut
      description: >-
        This webhook will be invoked whenever an attempted delivery event is
        created from the device.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AttemptedDeliveryAttemptedDeliveryCreatedYaml
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /delivery-fees/{tenant}:
    get:
      tags:
        - Logistic Management
        - Define Partner Delivery Areas
        - publicly-accessible
      summary: Get restaurant delivery fees
      operationId: LogisticManagement_getRestaurantDeliveryFees
      description: >-
        Retrieve delivery fees for many restaurants. Returns fees and minimum
        order values required for delivery orders.
      parameters:
        - description: Tenant containing the restaurants.
          name: tenant
          required: true
          example: uk
          schema:
            type: string
          in: path
        - description: >-
            Restaurant IDs which fees are requested for. e.g.
            `?restaurantIds=1,2,3,4`
          required: true
          in: query
          explode: false
          example:
            - '1'
            - '2'
            - '3'
            - '4'
          name: restaurantIds
          schema:
            maxItems: 200
            items:
              type: string
            type: array
          style: form
        - description: Delivery date/time when fees are required (ISO8601 format).
          name: deliveryTime
          required: true
          example: '2019-09-05T12:43:48.431Z'
          schema:
            format: date-time
            type: string
          in: query
        - description: >-
            Postcode or other location name identifying the location to which
            delivery is required. For use when precise location is not
            available. This will be removed in future in favour of location.
          name: zone
          required: false
          example: BS1
          schema:
            type: string
          in: query
        - description: >-
            Point to which delivery is required (latitude, longitude). Supply
            this where possible as support for zone-only based lookups will be
            removed in future.
          required: false
          in: query
          explode: false
          example:
            - 51.3851513
            - -2.0841275
          name: latlong
          schema:
            maxItems: 2
            items:
              format: double
              type: number
            minItems: 2
            type: array
          style: form
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LogisticManagementGetRestaurantDeliveryFeesResponse
              examples:
                flatRateWithFreeTier:
                  summary: >-
                    Single fee with minimum order value, and free delivery
                    threshold
                  value:
                    restaurants:
                      - minimumOrderValue: 1000
                        bands:
                          - minimumAmount: 1000
                            fee: 250
                          - minimumAmount: 2000
                            fee: 0
                        restaurantId: '1234'
                threeTier:
                  summary: No minimum order value, three pricing tiers
                  value:
                    restaurants:
                      - minimumOrderValue: 0
                        bands:
                          - minimumAmount: 0
                            fee: 250
                          - minimumAmount: 10
                            fee: 100
                          - minimumAmount: 2000
                            fee: 0
                        restaurantId: '1234'
                flatRate:
                  summary: Single fee, with and without minimum order value
                  value:
                    restaurants:
                      - minimumOrderValue: 1000
                        bands:
                          - minimumAmount: 1000
                            fee: 250
                        restaurantId: '1234'
                      - minimumOrderValue: 0
                        bands:
                          - minimumAmount: 0
                            fee: 100
                        restaurantId: '5678'
        '400':
          description: Bad request
        '404':
          description: Not found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
  /discovery/{tenant}/restaurants/enriched/bypostcode/{postcode}:
    get:
      tags:
        - Search Orchestrator
        - publicly-accessible
      summary: Get enriched restaurants by postcode
      operationId: SearchOrchestrator_getEnrichedRestaurantsByPostcode
      description: >-
        Get a ranked collection of restaurants that serve the provided postcode
        area along with additional information.
      parameters:
        - description: The tenant that the request is coming from.
          name: tenant
          example: uk
          in: path
          schema:
            type: string
          required: true
        - description: The postcode of the requested area.
          name: postcode
          example: bs14dj
          in: path
          schema:
            type: string
          required: true
        - description: Whether returned ratings are out of 5 stars
          name: ratingsOutOfFive
          schema:
            type: boolean
            default: false
          in: query
        - description: |
            Retrieve restaurants based on the type of service they offer.

            - `any`: Retrieve restaurants offering any service type (default).
            - `delivery`: Retrieve restaurants that offer delivery.
            - `collection`: Retrieve restaurants that offer collection.
          name: serviceType
          schema:
            $ref: '#/components/schemas/DiscoveryServiceTypeYaml'
          in: query
          required: false
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            cache-control:
              description: Information about how the response can be cached.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoveryRestaurantsEnrichedRestaurantsResponseYaml
            application/json;v=3:
              schema:
                $ref: >-
                  #/components/schemas/DiscoveryRestaurantsV3EnrichedRestaurantsResponseYaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Draft
  /discovery/{tenant}/restaurants/enriched:
    get:
      tags:
        - Search Orchestrator
        - publicly-accessible
      summary: Get enriched restaurants by location
      operationId: SearchOrchestrator_getEnrichedRestaurants
      description: >-
        Get a ranked collection of restaurants that serve the provided latitude
        and longitude along with additional information.
      parameters:
        - description: The tenant that the request is coming from.
          name: tenant
          example: uk
          in: path
          schema:
            type: string
          required: true
        - description: The latitude of the requested area.
          name: latitude
          example: 51.451772
          in: query
          x-position: 1
          schema:
            type: number
            format: double
            minimum: -90
            maximum: 90
        - description: The longitude of the requested area.
          name: longitude
          example: -2.596847
          in: query
          x-position: 2
          schema:
            type: number
            format: double
            minimum: -180
            maximum: 180
        - description: Whether returned ratings are out of 5 stars
          name: ratingsOutOfFive
          schema:
            type: boolean
            default: false
          in: query
        - description: |
            Retrieve restaurants based on the type of service they offer.

            - `any`: Retrieve restaurants offering any service type (default).
            - `delivery`: Retrieve restaurants that offer delivery.
            - `collection`: Retrieve restaurants that offer collection.
          name: serviceType
          schema:
            $ref: '#/components/schemas/DiscoveryServiceTypeYaml'
          in: query
          required: false
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            cache-control:
              description: Information about how the response can be cached.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DiscoveryRestaurantsEnrichedRestaurantsResponseYaml
            application/json;v=3:
              schema:
                $ref: >-
                  #/components/schemas/DiscoveryRestaurantsV3EnrichedRestaurantsResponseYaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Draft
  /driver-assigned-to-delivery:
    put:
      tags:
        - API Partner Management Gateway
        - Order Delivery Webhooks
        - publicly-accessible
        - Webhook
      summary: Driver Assigned to Delivery
      operationId: ApiPartnerManagementGateway_assignDriverToDelivery
      description: Driver Assigned to Delivery
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryWebhooksDriverStatusYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /driver-at-delivery-address:
    put:
      tags:
        - API Partner Management Gateway
        - Order Delivery Webhooks
        - publicly-accessible
        - Webhook
      summary: Driver at delivery address
      operationId: ApiPartnerManagementGateway_updateDriverDeliveryAddress
      description: Driver at delivery address
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryWebhooksDriverStatusYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /driver-at-restaurant:
    put:
      tags:
        - API Partner Management Gateway
        - Order Delivery Webhooks
        - publicly-accessible
        - Webhook
      summary: Driver at restaurant
      operationId: ApiPartnerManagementGateway_confirmDriverAtRestaurant
      description: Driver at restaurant
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryWebhooksDriverStatusYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /driver-has-delivered-order:
    put:
      tags:
        - API Partner Management Gateway
        - Order Delivery Webhooks
        - publicly-accessible
        - Webhook
      summary: Driver has delivered order
      operationId: ApiPartnerManagementGateway_updateDriverDeliveryStatus
      description: Driver has delivered order
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryWebhooksDriverStatusYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /driver-location:
    put:
      tags:
        - API Partner Management Gateway
        - Order Delivery Webhooks
        - publicly-accessible
        - Webhook
      summary: Driver Location
      operationId: ApiPartnerManagementGateway_updateDriverLocation
      description: Driver Location
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryWebhooksDriverLocationYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /driver-on-their-way-to-delivery-address:
    put:
      tags:
        - API Partner Management Gateway
        - Order Delivery Webhooks
        - publicly-accessible
        - Webhook
      summary: Driver on their way to delivery address
      operationId: ApiPartnerManagementGateway_updateDriverLocationToDeliveryAddress
      description: Driver on their way to delivery address
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryWebhooksDriverStatusYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /final/{finalPickedOrder}:
    post:
      servers:
        - description: The URL that you have provided to us
          url: https://www.your-base-url.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - order-injection-status-updater
        - publicly-accessible
      summary: Final Picked Order
      operationId: JetConnectForManageOrderStatus_receiveFinalPickedOrder
      security:
        - Bearer: []
        - api_key: []
        - basic_auth: []
        - justeat_adfs: []
        - restaurantsignup_jwt: []
        - daas_jwt: []
      description: >-
        Final picked order is for brands that may make amendments to an order
        and want to receive a copy of the order in its final state i.e. after
        all amendments have applied. This can be integrated or non integrated.
        please contact your brand manager for more information. after the
        initial order injection has already taken place (e.g. due to items
        potentially being out of stock), and would like to be notified of these
        changes to the initial order.


        Once the order has been picked (currently the trigger point for this is
        the "last mile delivered" event), the platform will check for any
        amendments on the order, and send the "final picked" order back to the
        specified endpoint.


        The "final picked" order could be different from the original order, as
        items may have been marked out of stock during the order pick. As such
        the total price, or item quantities may have changed.


        In the event you would like to receive the final order, there are
        several combinations of injections you can subscribe to.


        ### Scenario 1 (receive only the initial order)


        Receive only the initial order  in the state it was originally placed,
        at the point the driver is prep time away from the store. JET Connect 
        will send the order to the "Received Order" endpoint, as a `POST`
        request. Your endpoint must be able to receive orders in the same format
        documented in the "Received Order" section.


        ### Scenario 2 (receive only the final pick order)


        When the order is picked, the JET Connect Platform will check for
        amendments, and send a request to the final picked order endpoint you
        provided with any changes, as a `POST` request. Your endpoint must be
        able to receive orders in the format documented under "request format".


        ### Scenario 3 (receive both the initial order, and the final pick
        order)


        If you would like to receive both of the requests documented above, this
        is also possible. Please contact your brand manager to have this
        configured.


        #### Request format


        As an additional security measure, orders can be sent from the same
        static IP address as the initial order. You can request this feature
        from your brand manager.
      parameters:
        - description: The endpoint you have provided to us.
          name: finalPickedOrder
          in: path
          required: true
          schema:
            type: string
          example: https://www.your-base-url.com/finalPickedOrders
        - $ref: '#/paths/~1initial~1%7BreceiveOrder%7D/post/parameters/2'
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        description: >-
          The endpoint you provide to JET Connect must be able to receive orders
          in the following format. The type property will determine fulfillment
          type.


          As an additional security measure, orders can be sent from a static IP
          address. You can request this feature from your integration team.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectForManageOrderStatusReceiveFinalPickedOrderRequest
            examples:
              Delivery by partner:
                value:
                  id: 38bbeb45-f520-4438-a44f-0fcdbb29e166
                  third_party_order_reference: '22721763'
                  type: delivery-by-delivery-partner
                  posLocationId: AKZ12
                  location:
                    id: 1296
                    timezone: Europe/London
                  menu_reference: ''
                  items:
                    - description: ''
                      name: Cheeseburger
                      plu: M2
                      price: 1700
                      notes: ''
                      children:
                        - description: ''
                          name: Extra Sauce
                          plu: R3
                          price: 100
                          unitDepositAmount: 10
                  created_at: '1606780145'
                  channel:
                    name: Just Eat
                    id: 32
                  collect_at: '1606780980'
                  collection_notes: Driver will be wearing a blue shirt
                  kitchen_notes: ''
                  payment_method: CARD
                  tender_type: Flyt
                  payment:
                    items_in_cart:
                      inc_tax: 2160
                      tax: 360
                    adjustments: []
                    final:
                      inc_tax: 2160
                      tax: 360
                    deposit: 10
                  driver:
                    first_name: John
                    last_name: Smith
                    phone_number: 555-111-3344
                  delivery:
                    first_name: '****************'
                    last_name: '****************'
                    phone_number: 55555 113 000
                    phone_masking_code: ''
                    line_one: '**********************'
                    line_two: ''
                    city: '*****'
                    postcode: '*****'
                    email: customer@email.hidden
                    coordinates:
                      latitude: 49.898498728223224
                      longitude: -97.13560152293131
                      latitude_as_string: '49.8984'
                      longitude_as_string: '-122.2966'
                  extras: {}
                  promotions:
                    - type: FREE_ITEM_MIN_BASKET
                      items:
                        - description: ''
                          name: Crispy Chicken Twist
                          plu: ''
                          price: 419
                          notes: ''
                          children: []
                      promotionId: string
                      discountValue: 419
                      offerId: string
              Delivery by restaurant:
                value:
                  id: 7494e975-4d24-4ea5-bdd6-306b444ccc51
                  third_party_order_reference: '207217603'
                  type: delivery-by-merchant
                  posLocationId: '22617'
                  location:
                    id: 2267
                    timezone: US/Mountain
                  menu_reference: ''
                  items:
                    - description: ''
                      name: Cheesy Pasta
                      plu: MMcc0
                      price: 500
                      unitDepositAmount: 10
                      notes: please make it extra cheesy
                      children: []
                  created_at: '1606780145'
                  channel:
                    name: Skip
                    id: 52
                  deliver_at: '1606780980'
                  delivery_notes: It's the blue house at the end of the block.
                  kitchen_notes: ''
                  payment_method: CARD
                  tender_type: Flyt
                  payment:
                    items_in_cart:
                      inc_tax: 600
                      tax: 100
                    adjustments:
                      - name: deliveryFee
                        price:
                          inc_tax: 240
                          tax: 40
                    final:
                      inc_tax: 840
                      tax: 140
                    deposit: 10
                  delivery:
                    first_name: John
                    last_name: Doe
                    phone_number: 555-113-0000
                    phone_masking_code: ''
                    line_one: 1234 Spicy Street
                    line_two: ''
                    city: Winnipeg
                    postcode: R3B 0P4
                    email: customer@email.hidden
                    coordinates:
                      latitude: 49.898498728223224
                      longitude: -97.13560152293131
                      latitude_as_string: '49.8984'
                      longitude_as_string: '-122.2966'
                  extras: {}
                  promotions:
                    - type: FREE_ITEM_MIN_BASKET
                      items:
                        - description: ''
                          name: Crispy Chicken Twist
                          plu: ''
                          price: 419
                          notes: ''
                          children: []
                      promotionId: string
                      discountValue: 419
                      offerId: string
              Pick-up:
                value:
                  id: 7494e975-4d24-4ea5-bdd6-306b444ccc51X
                  third_party_order_reference: '122669877'
                  type: collection-by-customer
                  posLocationId: 32c8b122-f599-441f-aa3a-5081fb89f0e8
                  location:
                    id: 12642
                    timezone: Australia/Sydney
                  menu_reference: ''
                  items:
                    - description: ''
                      name: Cheese Pizza (Large)
                      plu: b048118f-87e7-417b-b45e-b123b2b97a52
                      price: 1000
                      unitDepositAmount: 10
                      notes: ''
                      children: []
                  created_at: '1606780145'
                  channel:
                    name: Menulog
                    id: 59
                  collect_at: '1606780980'
                  collection_notes: I will be wearing a green dress
                  kitchen_notes: Please add extra cheese to the pizza
                  payment_method: CARD
                  tender_type: Flyt
                  payment:
                    items_in_cart:
                      inc_tax: 1000
                      tax: 0
                    adjustments: []
                    final:
                      inc_tax: 1000
                      tax: 0
                    deposit: 10
                  collector:
                    first_name: John
                    last_name: Doe
                    phone_number: 020 7946 0504
                    phone_masking_code: '1234567890'
                  extras: {}
                  promotions:
                    - type: FREE_ITEM_MIN_BASKET
                      items:
                        - description: ''
                          name: Crispy Chicken Twist
                          plu: C1
                          price: 419
                          notes: ''
                          children: []
                      promotionId: string
                      discountValue: 419
                      offerId: string
      responses:
        '200':
          description: >-
            To indicate that the order was successfully processed, return a
            `200` status code with an Order Number. JET Connect will notify your
            delivery partner that the order was successfully processed.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterOrderSuccessYaml
        '202':
          description: >-
            If you would like to handle the order asynchronously, return a 202
            status code. JET Connect will place the order in a pending state,
            which will fail after 3 minutes if you do not notify JET Connect
            through the Update Order Status endpoint. If this endpoint is not
            called within 3 minutes, the order will be marked as failed to
            inject.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterOrderAcceptedYaml
        '400':
          description: >-
            Any non-2xx status codes will be taken as a failure and redirected
            to the tablet to be hand-keyed into your POS.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterOrderFailedYaml
        '401':
          description: >-
            Unauthorized. Authorization failed or the HMAC validation did not
            match.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterOrderUnauthorizedYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-webhook: 'Yes'
      x-status: Stable
  /initial/{receiveOrder}:
    post:
      servers:
        - description: The URL that you have provided to us
          url: https://www.your-base-url.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - order-injection-status-updater
        - publicly-accessible
      summary: Receive Order
      operationId: JetConnectForManageOrderStatus_receiveOrderPost
      security:
        - X-Flyt-Api-Key: []
          Bearer: []
          api_key: []
          basic_auth: []
          justeat_adfs: []
          restaurantsignup_jwt: []
          daas_jwt: []
      description: >-
        When an order is received for your integrated restaurant on a delivery
        website, the JET Connect Platform will send it to the endpoint you
        provided, as a `POST` request. Your endpoint must be able to receive
        orders in the format documented below.


        As an additional security measure, orders can be sent from a static IP
        address. You can request this feature from your brand manager.
      parameters:
        - description: The endpoint you have provided to us.
          name: receiveOrder
          in: path
          required: true
          schema:
            type: string
          example: https://www.your-base-url.com/receiveOrders
        - description: >-
            The HMAC secret that you have provided to JET to sign order
            requests, this header will be omitted if no secret was provided. The
            signature is created using SHA256, Base64 to encode and UTF-8 for
            character encoding. An example is below:


            `HMAC-SHA256
            t=1673428038618,signature=gy7evLHPTUadsmEVw7h6HmOHafCLq4gLKlss1VCV8lI=`

            - `t` represents the UNIX timestamp of when the body was signed.

            - `signature` is the body of the request which has been JSON encoded
            and hashed using a shared secret.


            Given the following secret of `key` and a body of `example`, the
            following hash will be generated
            `FGwot7AqiDIthEv6TippJm35DaRpRac5NSLd/wSp9go=`
          name: X-JET-Connect-Hash
          in: header
          schema:
            type: string
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        description: >-
          The endpoint you provide to JET Connect must be able to receive orders
          in the following format. The type property will determine fulfillment
          type.


          As an additional security measure, orders can be sent from a static IP
          address. You can request this feature from your integration team.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectForManageOrderStatusReceiveOrderPostRequest
            examples:
              Delivery by partner:
                value:
                  id: 38bbeb45-f520-4438-a44f-0fcdbb29e166X
                  third_party_order_reference: '22721763'
                  type: delivery-by-delivery-partner
                  posLocationId: AKZ12
                  location:
                    id: 1296
                    timezone: Europe/London
                  menu_reference: ''
                  items:
                    - description: ''
                      name: Cheeseburger
                      plu: M2
                      price: 1700
                      notes: ''
                      children:
                        - description: ''
                          name: Extra Sauce
                          plu: R3
                          price: 100
                          unitDepositAmount: 10
                  created_at: '1606780145'
                  channel:
                    name: Just Eat
                    id: 32
                  collect_at: '1606780980'
                  collection_notes: Driver will be wearing a blue shirt
                  kitchen_notes: ''
                  payment_method: CARD
                  tender_type: Flyt
                  payment:
                    items_in_cart:
                      inc_tax: 2160
                      tax: 360
                    adjustments: []
                    final:
                      inc_tax: 2160
                      tax: 360
                    deposit: 10
                  driver:
                    first_name: John
                    last_name: Smith
                    phone_number: 555-111-3344
                  delivery:
                    first_name: '****************'
                    last_name: '****************'
                    phone_number: 55555 113 000
                    phone_masking_code: ''
                    line_one: '**********************'
                    line_two: ''
                    city: '*****'
                    postcode: '*****'
                    email: customer@email.hidden
                    coordinates:
                      latitude: 49.898498728223224
                      longitude: -97.13560152293131
                      latitude_as_string: '49.8984'
                      longitude_as_string: '-122.2966'
                  extras: {}
                  promotions:
                    - type: FREE_ITEM_MIN_BASKET
                      items:
                        - description: ''
                          name: Crispy Chicken Twist
                          plu: ''
                          price: 419
                          notes: ''
                          children: []
                      promotionId: string
                      discountValue: 419
                      offerId: string
              Delivery by restaurant:
                value:
                  id: 7494e975-4d24-4ea5-bdd6-306b444ccc51X
                  third_party_order_reference: '207217603'
                  type: delivery-by-merchant
                  posLocationId: '22617'
                  location:
                    id: 2267
                    timezone: US/Mountain
                  menu_reference: ''
                  items:
                    - description: ''
                      name: Cheesy Pasta
                      plu: MMcc0
                      price: 500
                      unitDepositAmount: 10
                      notes: please make it extra cheesy
                      children: []
                  created_at: '1606780145'
                  channel:
                    name: Skip
                    id: 52
                  deliver_at: '1606780980'
                  delivery_notes: It's the blue house at the end of the block.
                  kitchen_notes: ''
                  payment_method: CARD
                  tender_type: Flyt
                  payment:
                    items_in_cart:
                      inc_tax: 600
                      tax: 100
                    adjustments:
                      - name: deliveryFee
                        price:
                          inc_tax: 240
                          tax: 40
                    final:
                      inc_tax: 840
                      tax: 140
                    deposit: 10
                  delivery:
                    first_name: John
                    last_name: Doe
                    phone_number: 555-113-0000
                    phone_masking_code: ''
                    line_one: 1234 Spicy Street
                    line_two: ''
                    city: Winnipeg
                    postcode: R3B 0P4
                    email: customer@email.hidden
                    coordinates:
                      latitude: 49.898498728223224
                      longitude: -97.13560152293131
                      latitude_as_string: '49.8984'
                      longitude_as_string: '-122.2966'
                  extras: {}
                  promotions:
                    - type: FREE_ITEM_MIN_BASKET
                      items:
                        - description: ''
                          name: Crispy Chicken Twist
                          plu: ''
                          price: 419
                          notes: ''
                          children: []
                      promotionId: string
                      discountValue: 419
                      offerId: string
              Pick-up:
                value:
                  id: 7494e975-4d24-4ea5-bdd6-306b444ccc51X
                  third_party_order_reference: '122669877'
                  type: collection-by-customer
                  posLocationId: 32c8b122-f599-441f-aa3a-5081fb89f0e8
                  location:
                    id: 12642
                    timezone: Australia/Sydney
                  menu_reference: ''
                  items:
                    - description: ''
                      name: Cheese Pizza (Large)
                      plu: b048118f-87e7-417b-b45e-b123b2b97a52
                      price: 1000
                      unitDepositAmount: 10
                      notes: ''
                      children: []
                  created_at: '1606780145'
                  channel:
                    name: Menulog
                    id: 59
                  collect_at: '1606780980'
                  collection_notes: I will be wearing a green dress
                  kitchen_notes: Please add extra cheese to the pizza
                  payment_method: CARD
                  tender_type: Flyt
                  payment:
                    items_in_cart:
                      inc_tax: 1000
                      tax: 0
                    adjustments: []
                    final:
                      inc_tax: 1000
                      tax: 0
                    deposit: 10
                  collector:
                    first_name: John
                    last_name: Doe
                    phone_number: 020 7946 0504
                    phone_masking_code: '1234567890'
                  extras: {}
                  promotions:
                    - type: FREE_ITEM_MIN_BASKET
                      items:
                        - description: ''
                          name: Crispy Chicken Twist
                          plu: C1
                          price: 419
                          notes: ''
                          children: []
                      promotionId: string
                      discountValue: 419
                      offerId: string
      responses:
        '200':
          description: >-
            To indicate that the order was successfully processed, return a
            `200` status code with an Order Number. JET Connect will notify your
            delivery partner that the order was successfully processed.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterOrderSuccessYaml
        '202':
          description: >-
            If you would like to handle the order asynchronously, return a 202
            status code. JET Connect will place the order in a pending state,
            which will fail after 3 minutes if you do not notify JET Connect
            through the Update Order Status endpoint. If this endpoint is not
            called within 3 minutes, the order will be marked as failed to
            inject.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterOrderAcceptedYaml
        '400':
          description: >-
            Any non-2xx status codes will be taken as a failure and redirected
            to the tablet to be hand-keyed into your POS.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterOrderFailedYaml
        '401':
          description: >-
            Unauthorized. Authorization failed or the HMAC validation did not
            match.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterOrderUnauthorizedYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-webhook: 'Yes'
      x-status: Stable
  /item-availability:
    post:
      servers:
        - description: The Flyt Platform (Flyt is now JET Connect)
          url: https://api.flytplatform.com
      tags:
        - JET Connect for Manage Product Catalogue
        - jet-connect
        - publicly-accessible
      summary: Update the availability of menu items
      operationId: JetConnectForManageProductCatalogue_updateItemAvailability
      security:
        - X-Flyt-Api-Key: []
      description: >-
        The Item Availability API allows you to manage which items on a menu are
        available for ordering via your delivery partner (Just Eat, Skip The
        Dishes, Menulog or Takeaway).


        Menu items are marked as available or unavailable via requests to the
        Update Item Availability endpoint described below.


        # Features


        - Static endpoints for updating Item Availability. These endpoints do
        not include brand and location references in the endpoint URL, making it
        easier for operations teams to onboard new restaurants.

        - The ability to update multiple menu item availabilities in a single
        request.

        - Coming soon: more detailed error messages, including whether the
        operation failed when attempting to publish your update to the delivery
        partner (Just Eat, Skip The Dishes or Menulog).


        # Response


        If the menu and PLU references are valid and the request was accepted,
        you will receive a 202 Accepted response. The specified menu item should
        appear as available or unavailable on the delivery partner website (e.g.
        Just Eat, Skip The Dishes, Takeaway) automatically within less than 5
        minutes.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectMenusUtfConnectorItemAvailabilityYaml
            examples:
              Marking an item available:
                value:
                  event: AVAILABLE
                  itemReferences:
                    - 1234-3324332-23423-234
                    - 5678-5566778-87658-576
                  restaurant: '8282340'
                  happenedAt: '2018-10-11T14:56:18.234284+01:00'
              Marking an item unavailable:
                value:
                  event: UNAVAILABLE
                  itemReferences:
                    - string
                  restaurant: string
                  happenedAt: '2018-10-11T14:56:18.234284+01:00'
                  nextAvailableAt: '2018-10-11T14:56:18.234284+01:00'
      responses:
        '202':
          description: >-
            Item Availability updates accepted for processing by upstream
            services
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectMenusUtfConnectorAcceptedResponseYaml
        '400':
          $ref: >-
            #/components/responses/JetConnectMenusUtfConnectorBadRequestResponseYaml
        '403':
          $ref: >-
            #/components/responses/JetConnectMenusUtfConnectorForbiddenResponseYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: >-
            #/components/responses/JetConnectMenusUtfConnectorServerErrorResponseYaml
      x-status: Stable
  /late-order-compensation-query:
    post:
      tags:
        - API Partner Management Gateway
        - Consumer Queries Webhooks
        - publicly-accessible
        - Webhook
      summary: late order compensation query, restaurant response required
      operationId: ApiPartnerManagementGateway_queryRestaurantResponseRequired
      description: >-
        This webhook will be invoked when a late order compensation query has
        been raised and a restaurant response is required.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ConsumerqueriesWebhooksLateOrderCompensationQueryYaml
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /late-order-query:
    post:
      tags:
        - API Partner Management Gateway
        - publicly-accessible
      summary: late order query, restaurant response required
      operationId: ApiPartnerManagementGateway_restaurantResponseRequired
      description: >-
        This webhook will be invoked when a late order query has been raised and
        a restaurant response is required.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerqueriesWebhooksLateOrderQueryYaml'
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'yes'
  /locations/{locationID}/orders:
    get:
      servers:
        - description: Production environment
          url: https://order-reporting-connector.flyt-platform.com
      tags:
        - Partner Management
        - Analyse Partner Performance
        - jet-connect
        - publicly-accessible
      summary: Get Location Orders
      operationId: PartnerManagement_listLocationOrders
      security:
        - X-Flyt-Api-Key: []
      description: >-
        Get all orders from the location within the specified time frame,
        optionally filtered by status.
      parameters:
        - $ref: '#/paths/~1brands~1%7Bbrand_slug%7D~1orders/get/parameters/1'
        - $ref: '#/paths/~1brands~1%7Bbrand_slug%7D~1orders/get/parameters/2'
        - $ref: '#/paths/~1brands~1%7Bbrand_slug%7D~1orders/get/parameters/3'
        - description: The location ID to query by.
          name: locationID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: >-
            #/components/responses/JetConnectOrderReportingConnectorSimpleOrdersResponseYaml
        '400':
          description: >-
            Bad Request: The request is faulty due to user error, usually
            because of invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
        '401':
          description: >-
            Unauthorized: The credentials are missing or incorrect for the
            requested action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
              examples:
                no API key:
                  value:
                    message: No API key found in request
                invalid API key:
                  value:
                    message: Invalid authentication credentials
        '403':
          description: 'Forbidden: The client is not allowed to perform this action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
        '404':
          description: 'Not Found: The object cannot be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
              examples:
                not found:
                  value:
                    message: Not Found
        '429':
          description: >-
            Too Many Requests: Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
        '500':
          description: >-
            Internal Server Error: Something went wrong internally, possibly
            because of a bug or an outage.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoHttpErrorYaml'
      x-status: Stable
  /menu-ingestion-complete:
    post:
      tags:
        - API Partner Management Gateway
        - Restaurant Webhooks
        - publicly-accessible
        - Webhook
      summary: Menu ingestion complete
      operationId: ApiPartnerManagementGateway_confirmMenuIngestionCompletion
      description: >-
        Callback to confirm that an attempt to ingest a menu has completed
        either successfully or unsuccessfully
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/RestaurantsWebhooksMenuIngestionCompleteYaml
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /menus:
    post:
      servers:
        - description: The Flyt Platform (Flyt is now JET Connect)
          url: https://api.flytplatform.com
      tags:
        - JET Connect for Manage Product Catalogue
        - jet-connect
        - publicly-accessible
      summary: Ingest menu from POS
      operationId: JetConnectForManageProductCatalogue_ingestMenuFromPos
      security:
        - X-Flyt-Api-Key: []
      description: >-
        Use this endpoint to ingest menu(s), creating a baseline per menu
        received.


        # How it works


        The JET Connect Platform API allows anyone with a Just Eat, Skip The
        Dishes, Menulog or Takeaway account to automatically publish menus from
        their POS to the respective delivery partner. For this to work, client
        applications need to:


        1. Extract menu data from their POS

        2. Use this data to create an HTTP request in `JSON` format (see format
        details below)

        3. Send the request to the menu API endpoint:
        `https://api.flytplatform.com/menus`


        The API endpoint will validate the incoming request and, if checks are
        successful, publish the new menu to the delivery partner. We recommend
        checking the delivery partner page to see if the new menu has been
        updated as intended.


        # Features


        - Static endpoints for publishing menus. These endpoints do not include
        brand and location references in the endpoint URL, making it easier for
        operations teams to onboard new restaurants.

        - Ability to update menus for multiple restaurants using a single
        request.


        # Response Format


        If the menus are valid and the request was accepted, you will receive a
        `202 Accepted` response. The new menu should appear on the delivery
        partner website (e.g. Just Eat, Skip The Dishes, Takeaway) website
        automatically within less than 5 minutes.


        Note: currently, our platform only checks if the menu structure is
        valid. However, a valid menu may still fail to publish on the
        corresponding delivery partner platform. Currently, this endpoint does
        not indicate whether the publish operation was successful, however this
        is an item on our future roadmap


        # Asynchronous Callbacks


        If a valid callback address has been specified, shortly after the
        synchronous response indicating initial acceptance or rejection of the
        menu, a POST request will be made to the address detailing the eventual
        menu state.


        See the callback object for more details.


        ## Nutrition and Servings in menus - Under Development


        This version has initial support to provide nutritional information and
        servings in your menu data.


        *This is still **under active development** and it's currently not
        supported by any of the delivery partners. Nutritional info and servings
        in menus will be available in the **UK only** from 6th April 2022.
        Restaurants in the UK territory are able to integrate now with our
        platform API with full testing and rollout to happen from mid - end
        February 2022 onwards.* **Please note that it is mandatory in the UK to
        have nutritional information for brands/restaurant groups with over 250
        employees ([UK government
        guidance](https://www.gov.uk/government/publications/calorie-labelling-in-the-out-of-home-sector/calorie-labelling-in-the-out-of-home-sector-implementation-guidance#displaying-calorie-information)
        link).**


        Here are the additional attributes covering `nutritional_info` and
        `servings` under `items`, `options`,  or `portions`.


        See sample payload "Menu with nutrition and servings".


        ## Grocery items in menus - Under Development


        This version now has initial support for you to provide grocery items in
        your menu data.


        *This is still **under active development** and it's currently not
        supported by any of the delivery partners.*


        Here are the additional attributes to add under `items`, `options`,  or
        `portions`:


        See sample payload "Menu with grocery items".


        ## Translations - Under Development


        We will be beginning support for menu translations shortly, to any
        platform which supports it.


        This section will contain further information on supported platforms in
        the future.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JetConnectMenusUtfConnectorMenusYaml'
            examples:
              Basic menu:
                value:
                  restaurants:
                    - '11232'
                    - '99234'
                  menus:
                    - name: Burger Zone Summer Menu
                      default_language: en-US
                      translations:
                        es-ES:
                          description: Populate description name here
                          name: Populate translated name here
                      reference: burger-zone-summer-5521
                      type: DELIVERY
                      availability:
                        monday:
                          - 08:00 - 23:59
                        tuesday:
                          - 08:00 - 23:59
                        wednesday:
                          - 08:00 - 23:59
                        thursday:
                          - 08:00 - 23:59
                        friday:
                          - 08:00 - 23:59
                        saturday:
                          - 08:00 - 23:59
                        sunday:
                          - 10:00 - 20:00
                      categories:
                        - description: Classic burgers.
                          name: Burgers
                          translations:
                            es-ES:
                              description: Populate description name here
                              name: Populate translated name here
                          items:
                            - description: >-
                                A classic vegetarian hamburger with all the
                                fixings.
                              name: Veggie Burger
                              translations:
                                es-ES:
                                  description: Populate description name here
                                  name: Populate translated name here
                              plu: ABC1F
                              price: 1550
                              reference: breakfast-ABC1F
                              gallery:
                                - url: https://www.burgerzone.com/vegburger.jpg
                              is_alcoholic: false
                              spiciness: MILD
                              dietary_restrictions:
                                - VEGETARIAN
                  callback_url: https://example.com/menu-status
              Menu with modifiers:
                value:
                  restaurants:
                    - '11232'
                    - '99234'
                  menus:
                    - name: Burger Zone Winter Menu
                      reference: ''
                      type: DELIVERY
                      availability:
                        monday:
                          - 08:00 - 20:00
                        tuesday:
                          - 08:00 - 20:00
                        wednesday:
                          - 08:00 - 20:00
                        thursday:
                          - 08:00 - 20:00
                        friday:
                          - 08:00 - 20:00
                        saturday:
                          - 00:00 - 00:00
                        sunday:
                          - 00:00 - 00:00
                      categories:
                        - description: Burger Zone's Specialty.
                          name: Burgers
                          items:
                            - description: The classic burger, but with cheese added.
                              name: Cheeseburger
                              plu: XYZ123
                              reference: breakfast-ABC1F
                              modifiers:
                                - description: The type of cheese on the burger.
                                  name: Cheese
                                  pick:
                                    exactly: 1
                                    pick_same_option: false
                                  options:
                                    - description: ''
                                      name: Cheddar,
                                      plu: 2B
                                      price: 0
                                      reference: ''
                                    - description: ''
                                      name: Swiss,
                                      plu: A2
                                      price: 100
                                      reference: ''
                  callback_url: https://example.com/menu-status
              Menu with nutrition and servings:
                value:
                  restaurants:
                    - '11232'
                  menus:
                    - name: Burger Zone Winter Menu
                      reference: ''
                      type: DELIVERY
                      availability:
                        monday:
                          - 08:00 - 20:00
                        tuesday:
                          - 08:00 - 20:00
                        wednesday:
                          - 08:00 - 20:00
                        thursday:
                          - 08:00 - 20:00
                        friday:
                          - 08:00 - 20:00
                        saturday:
                          - 00:00 - 00:00
                        sunday:
                          - 00:00 - 00:00
                      categories:
                        - description: Burger Zone's Specialty.
                          name: Burgers
                          items:
                            - description: The classic burger, but with cheese added.
                              name: Cheeseburger
                              plu: XYZ123
                              reference: breakfast-ABC1F
                              modifiers:
                                - description: The type of cheese on the burger.
                                  name: Cheese
                                  pick:
                                    exactly: 1
                                    pick_same_option: false
                                  options:
                                    - description: ''
                                      name: Cheddar,
                                      plu: 2B
                                      price: 0
                                      reference: ''
                                      nutritional_info_range:
                                        kcal_range:
                                          min: -1
                                          max: 2
                                        kj_range:
                                          min: 2
                                          max: 4
                                      servings_range:
                                        min: -2
                                        max: 4
                                    - description: ''
                                      name: Swiss,
                                      plu: A2
                                      price: 100
                                      reference: ''
                              nutritional_info_range:
                                kcal_range:
                                  min: -1
                                  max: 2
                                kj_range:
                                  min: 2
                                  max: 4
                              servings_range:
                                min: -2
                                max: 4
                  callback_url: https://example.com/menu-status
              Menu with pick options:
                value:
                  restaurants:
                    - '11232'
                    - '99234'
                  menus:
                    - name: Pick Menu
                      reference: ''
                      type: DELIVERY
                      categories:
                        - description: ''
                          name: Burgers
                          items:
                            - description: ''
                              name: Hamburger
                              plu: f37b78df-16c4-4036-96c5-ed61d439ae26
                              price: 1000
                              reference: ''
                              modifiers:
                                - description: >-
                                    The customer will be able to choose exactly
                                    3 options from this group, and they will be
                                    able to pick the same option twice.
                                  name: '"Pick Exactly" Modifier'
                                  pick:
                                    exactly: 3
                                    pick_same_option: true
                                  options: null
                                - description: >-
                                    The customer will be able to choose between
                                    1 and 2 options from this group, and will be
                                    able to pick the same option twice.
                                  name: '"Pick Range" Modifier'
                                  pick:
                                    range:
                                      from: 1
                                      to: 2
                                    pick_same_option: true
                                  options: []
                                - description: >-
                                    The customer will be able to pick an
                                    unlimited amount of options, but will not be
                                    able to pick the same option twice.
                                  name: '"Pick Unlimited" Modifier'
                                  pick:
                                    pick_same_option: false
                  callback_url: https://example.com/menu-status
              Menu with portions:
                value:
                  restaurants:
                    - '11232'
                  menus:
                    - name: Portions Menu
                      reference: ''
                      type: DELIVERY
                      availability:
                        monday:
                          - 08:00 - 20:00
                        tuesday:
                          - 08:00 - 20:00
                        wednesday:
                          - 08:00 - 20:00
                        thursday:
                          - 08:00 - 20:00
                        friday:
                          - 08:00 - 20:00
                        saturday:
                          - 00:00 - 00:00
                        sunday:
                          - 00:00 - 00:00
                      categories:
                        - description: ''
                          name: Burgers
                          items:
                            - description: >-
                                Freshly diced tomatoes, Spanish onions and feta
                                on a tomato base topped with fresh basil and
                                balsamic glaze.
                              name: Chicken Pizza
                              plu: '1'
                              price: 0
                              portions:
                                - description: >-
                                    Freshly diced tomatoes, Spanish onions and
                                    feta on a tomato base topped with fresh
                                    basil and balsamic glaze.
                                  name: Small Chicken Pizza
                                  plu: '2'
                                  price: 950
                                  modifiers: []
                                - description: >-
                                    Freshly diced tomatoes, Spanish onions and
                                    feta on a tomato base topped with fresh
                                    basil and balsamic glaze.
                                  name: Large Chicken Pizza
                                  plu: '3'
                                  price: 1250
                                  modifiers:
                                    - description: Optional
                                      name: Extras
                                      pick:
                                        range:
                                          from: 0
                                          to: 5
                                        pick_same_option: true
                                      options:
                                        - name: Anchovies
                                          plu: Anchovies
                                          price: 75
                                          modifiers: []
                                          includes: []
                                          ingredients: []
                                        - name: Bacon
                                          plu: Bacon
                                          price: 75
                                          modifiers: []
                                          includes: []
                                          ingredients: []
                  callback_url: https://example.com/menu-status
              Menu with swaps:
                value:
                  restaurants:
                    - '11232'
                    - '99234'
                  menus:
                    - name: City Sandwich Shop
                      reference: ''
                      type: DELIVERY
                      categories:
                        - description: Customized Subs.
                          name: Sub Sandwiches
                          items:
                            - description: A sub sandwich with your choice of meat.
                              name: Classic Sub
                              plu: ''
                              price: 0
                              reference: ''
                              modifiers:
                                - description: Condiments for your sub.
                                  name: Condiments
                                  pick:
                                    pick_same_option: false
                                  options:
                                    - description: ''
                                      name: Mustard
                                      plu: BBB-703
                                      price: 0
                                      reference: ''
                              swap:
                                name: Choose Meat
                                options:
                                  - name: Beef Sub
                                    plu: ABC1
                                    price: 1500
                                    reference: beef-sub-ABC1
                                  - name: Smoked Chicken Sub
                                    plu: ABC2
                                    price: 1700
                                    reference: chicken-sub-ABC2
                              gallery:
                                - url: https://citysandwiches.com/sub.jpg
                  callback_url: https://example.com/menu-status
              Menu with grocery items:
                value:
                  restaurants:
                    - '11232'
                    - '99234'
                  menus:
                    - name: Burger Zone Summer Menu
                      reference: burger-zone-summer-5521
                      type: DELIVERY
                      availability:
                        monday:
                          - 08:00 - 23:59
                        tuesday:
                          - 08:00 - 23:59
                        wednesday:
                          - 08:00 - 23:59
                        thursday:
                          - 08:00 - 23:59
                        friday:
                          - 08:00 - 23:59
                        saturday:
                          - 08:00 - 23:59
                        sunday:
                          - 10:00 - 20:00
                      categories:
                        - description: Classic burgers.
                          name: Burgers
                          items:
                            - description: >-
                                A classic vegetarian hamburger with all the
                                fixings.
                              name: Veggie Burger
                              plu: ABC1F
                              price: 1550
                              reference: breakfast-ABC1F
                              gallery:
                                - url: https://www.burgerzone.com/vegburger.jpg
                              is_alcoholic: false
                              spiciness: MILD
                              dietary_restrictions:
                                - VEGETARIAN
                              tax_percentage: 8
                              caffeine:
                                unit_name: grams
                                value: 0.02
                              alcohol_percentage: 5.2
                              volume:
                                unit_name: liters
                                gross_value: 1.3
                                net_value: 1.2
                              weight:
                                unit_name: grams
                                gross_value: 1300
                                net_value: 1200
                              deposit:
                                type: single_use
                                amount: 200
                                included_in_total_price: true
                              manufacturer:
                                name: Manufacturer name
                                brand: Manufacturer brand
                                country_of_origin: England
                                additional_details: >-
                                  free text, can be manufacturer address,
                                  customer service phone number.
                              storage:
                                type: frozen
                                additional_details: free text
                              gtin: '00012345678905'
                  callback_url: https://example.com/menu-status
      responses:
        '202':
          description: Menu(s) accepted for processing by upstream services
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectMenusUtfConnectorAcceptedResponseYaml
        '400':
          $ref: >-
            #/components/responses/JetConnectMenusUtfConnectorBadRequestResponseYaml
        '403':
          $ref: >-
            #/components/responses/JetConnectMenusUtfConnectorForbiddenResponseYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: >-
            #/components/responses/JetConnectMenusUtfConnectorServerErrorResponseYaml
      x-status: Stable
      callbacks:
        myEvent:
          '{$request.body#/callback_url}':
            post:
              description: >-
                # Asynchronous Callbacks


                Note: This feature is in Beta stage, and is currently only
                available for integrations with certain delivery partners,
                please get in touch to confirm support


                If a valid callback address has been specified, shortly after
                the synchronous response indicating initial acceptance or
                rejection of the menu, a POST request will be made to the
                address detailing the eventual menu state.


                As a single address is defined for a collection of menus which
                may be associated with multiple restaurants, a separate request
                will be made to the address for each restaurant.
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - restaurant
                        - ingestion_succeeded
                      properties:
                        restaurant:
                          $ref: >-
                            #/components/schemas/JetConnectMenusUtfConnectorRestaurantIdYaml
                        error:
                          description: >-
                            Object detailing the error, will be omitted if
                            ingestion has succeeded
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              description: A categorisation of the failure
                              type: string
                              pattern: >-
                                ^(ERROR_UNKNOWN|CONNECTION_FAILED|INVALID_FORMAT|INVALID_CONFIGURATION)$
                            message:
                              description: The reason for the error
                              type: string
                        ingestion_succeeded:
                          description: >-
                            Indicates whether the menu has been successfully
                            accepted by the delivery partner
                          type: boolean
                      example:
                        restaurant: '1234'
                        error:
                          code: INVALID_FORMAT
                          message: example error message
                        ingestion_succeeded: true
              responses:
                '200':
                  description: OK
  /order/{id}/sent-to-pos-failed:
    post:
      servers:
        - description: Production environment
          url: https://order-injection-status-updater.flyt-platform.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - order-injection-status-updater
        - publicly-accessible
      summary: Update JET Connect with the unsuccessful result of an async order
      operationId: JetConnectForManageOrderStatus_markOrderInjectionFailed
      security:
        - X-Flyt-Api-Key: []
      description: >-
        Marks the order status of a pending order as failed to inject. 

        This does not mean that the order is rejected, as the order will go
        through the backup flow, if any.


        Orders are marked pending when you respond to a call to the Receive
        Order endpoint with a 202 status.


        Requests to this endpoint for an order which is no longer pending will
        fail.


        If this endpoint is not called within 3 minutes after an order is marked
        as pending, the order status will switch to "failed to inject".
      parameters:
        - description: >-
            The identifier for the order for which the status should be updated.
            Note that this is the JET Connect order ID, received as id in the
            Receive Order endpoint body.
          name: id
          in: path
          required: true
          example: xsfkfwtowkm1mswn2gmjjq
          schema:
            type: string
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectOrderInjectionStatusUpdaterAsyncOrderFailedYaml
            examples:
              example:
                value:
                  happenedAt: '2019-04-03T00:56:24+00:00'
                  errorCode: MENU_ERROR
                  errorMessage: Items out of stock
      responses:
        '204':
          description: >-
            The order was found and its status was updated. The delivery partner
            will be notified of the order status.
        '400':
          description: >-
            Any non-2xx status codes will be taken as a failure and redirected
            to the tablet to be hand-keyed into your POS.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterFailureResponseYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-webhook: 'Yes'
      x-status: Stable
  /order/{id}/sent-to-pos-success:
    post:
      servers:
        - description: Production environment
          url: https://order-injection-status-updater.flyt-platform.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - order-injection-status-updater
        - publicly-accessible
      summary: Update JET Connect with the successful result of an async order
      operationId: JetConnectForManageOrderStatus_updateOrderStatusSuccess
      security:
        - X-Flyt-Api-Key: []
      description: >-
        Marks the order status of a pending order as successful.


        Orders are marked pending when you respond from a call to the Receive
        Order endpoint with a 202 status.

        Requests to this endpoint for an order which is no longer pending will
        fail.


        If this endpoint is not called within 3 minutes after an order is marked
        as pending, the order status will switch to "failed to inject".
      parameters:
        - $ref: '#/paths/~1order~1%7Bid%7D~1sent-to-pos-failed/post/parameters/0'
        - $ref: '#/paths/~1order~1%7Bid%7D~1sent-to-pos-failed/post/parameters/1'
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectOrderInjectionStatusUpdaterAsyncOrderSuccessYaml
            examples:
              example:
                value:
                  happenedAt: '2020-01-31T11:06:11+00:00'
      responses:
        '204':
          description: >-
            The order was found and its status was updated. The delivery partner
            will be notified of the order status.
        '400':
          description: >-
            Any non-2xx status codes will be taken as a failure and redirected
            to the tablet to be hand-keyed into your POS.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderInjectionStatusUpdaterFailureResponseYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-webhook: 'Yes'
      x-status: Stable
  /order-accepted:
    post:
      tags:
        - API Partner Management Gateway
        - publicly-accessible
      summary: Order accepted
      operationId: ApiPartnerManagementGateway_orderAcceptedPost
      description: This webhook will be invoked whenever the order was accepted.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAcceptanceOrderAcceptedYaml'
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /order-cancelled:
    post:
      tags:
        - API Partner Management Gateway
        - Order Acceptance Webhooks
        - publicly-accessible
        - Webhook
      summary: Order cancelled
      operationId: ApiPartnerManagementGateway_orderCancelledPost
      description: This webhook will be invoked whenever the order was cancelled.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAcceptanceOrderCancelledYaml'
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /order-eligible-for-restaurant-compensation:
    post:
      tags:
        - API Partner Management Gateway
        - RestaurantQueries Webhooks
        - publicly-accessible
        - Webhook
      summary: Order Eligible For Restaurant Compensation
      operationId: ApiPartnerManagementGateway_checkOrderCompensationEligibility
      description: >
        This webhook will be invoked for every cancelled order and it will
        inform if the order is eligible for compensation.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/RestaurantqueriesCompensationOrderEligibleForRestaurantCompensationYaml
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /order-is-ready-for-pickup:
    put:
      tags:
        - API Partner Management Gateway
        - publicly-accessible
      summary: Order ready for pickup
      operationId: ApiPartnerManagementGateway_orderReadyForCollectionPut
      description: >-
        <p>The "Ready for pickup" event lets the delivery partner know that the
        food has been cooked and is now ready for collection up from the
        restaurant.</p><p>When this event is received, it is important that you
        let your driver know that the order should now be collected from inside
        the restaurant. For example, this driver notification could take the
        form of an in-app notification or an SMS message.</p><p>This
        communication is needed to support restaurants who are unable to
        accommodate drivers inside their premises, as it allows restaurants to
        notify drivers waiting outside that they should come inside to collect
        their order.</p><p>NB&semi; This event can be sent by the restaurant at
        any point after the order is accepted by the restaurant (for instance,
        this event may be sent before the driver has arrived at the
        restaurant).</p>
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryWebhooksReadyForPickupYaml'
      responses:
        '200':
          description: >-
            Upon successful receipt of the event, delivery partners should
            return a 200 HTTP status code indicating acknowledgement of
            transmission.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        default:
          description: >-
            In the unlikely case of unknown errors, JUST EAT will log a raw
            response. If possible, the response should have the following format
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiPartnerManagementGatewayOrderReadyForCollectionPutResponse
      x-status: Draft
      x-webhook: 'yes'
  /order-ready-for-preparation-async:
    post:
      tags:
        - API Partner Management Gateway
        - publicly-accessible
      summary: Order ready for preparation (async)
      operationId: ApiPartnerManagementGateway_recordOrderPreparation
      description: >
        This webhook will be invoked when we have determined that an order is
        ready for preparation. Upon receiving the request, you should perform
        any preparation-related activities, such as sending the order to the POS
        system / kitchen screen.

        **NOTE:** This version of the webhook is asynchronous, and we expect a
        response in two parts:
          1. We expect an immediate `202` response from this webhook to denote that you have received the request;
          2. Following that, we expect an [async callback](https://uk.api.just-eat.io/docs/) - indicating either success or failure of the operation. The body for the async callbacks are as below:
          
          **Success callback**
          ```
          {
                "status": "Success",
                "message": "Order successfully sent to POS",
                "data": {}
          }
          ```
          **Failure callback**
          ```
          {
                "status": "Failure",
                "message": "{errorMessage}",   // e.g. "The POS is currently in use"
                "data": {}
          }
          ```
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersWebhooksOrderReadyForPreparationYaml'
      responses:
        '202':
          description: >-
            Upon successful receipt of this event, a `202` status code should be
            returned, indicating the request has been accepted. You should then
            later respond with the result of processing this request, via the
            [callback URL](https://uk.api.just-eat.io/docs/) endpoint.
        '400':
          description: >-
            Should the initial validation of the order fail, return a `400`
            status code. NOTE: In this instance we do not also expect a failure
            callback via the async callback URL.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /order-ready-for-preparation-sync:
    post:
      tags:
        - API Partner Management Gateway
        - Order Webhooks
        - publicly-accessible
        - Webhook
      summary: Order ready for preparation (sync)
      operationId: ApiPartnerManagementGateway_recordOrderPreparation
      description: >
        This webhook will be invoked when we have determined that an order is
        ready for preparation. Upon receiving the request, you should perform
        any preparation-related activities, such as sending the order to the POS
        system / kitchen screen.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersWebhooksOrderReadyForPreparationYaml'
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /order-rejected:
    post:
      tags:
        - API Partner Management Gateway
        - Order Acceptance Webhooks
        - publicly-accessible
        - Webhook
      summary: Order rejected
      operationId: ApiPartnerManagementGateway_notifyOrderRejection
      description: This webhook will be invoked whenever the order was rejected.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAcceptanceOrderRejectedYaml'
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /order-requires-delivery-acceptance:
    put:
      tags:
        - API Partner Management Gateway
        - publicly-accessible
      summary: Order requires delivery acceptance
      operationId: ApiPartnerManagementGateway_scheduleOrderPickup
      description: >-
        This webhook will be invoked when we have determined that an order is
        required acceptance for delivery. Upon receiving the request, the order
        should be scheduled for pickup by a courier/driver. We expect an
        immediate `201` response from this webhook to denote that you have
        received the request.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryWebhooksConnectorderListYaml'
      responses:
        '201':
          description: >-
            In the event of successful handling of the request, a 201 status
            code should be returned, indicating acknowledgement of transmission
            success.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        default:
          description: >-
            In the case that the order cannot be accepted, an appropriate HTTP
            status code, such as 400 (Bad request) or 500 (Internal server
            error) should be returned.  In addition to the HTTP status code, a
            specific reason code and explanatory message should be provided
            within the response body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiPartnerManagementGatewayScheduleOrderPickupResponse
      x-status: Draft
      x-webhook: 'Yes'
  /order-time-updated:
    post:
      tags:
        - API Partner Management Gateway
        - Restaurant Webhooks
        - publicly-accessible
      summary: Order time updated
      operationId: ApiPartnerManagementGateway_updateOrderTime
      description: >-
        Callback to notify recipients that there has been a change to the
        restaurant order times for a given day and service type
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantsWebhooksOrderTimeUpdatedYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
  /orderdispatchwebhooks:
    post:
      tags:
        - API Partner Management Gateway
        - Order Dispatch Webhooks
        - publicly-accessible
        - Webhook
      summary: New Order For Restaurant
      operationId: ApiPartnerManagementGateway_createRestaurantOrder
      description: >-
        This webhook will be invoked whenever new order for restaurant has been
        created.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/OrderdispatchwebhooksNeworderforrestaurantYaml
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /orders/deliverystate/driverlocation:
    put:
      tags:
        - Manage Order Journey
        - Analyze Order Delivery
        - publicly-accessible
      summary: Update current driver locations (bulk upload)
      operationId: ManageOrderJourney_updateDriverLocationsBulkUpload
      description: Current driver location (bulk upload)
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryApiBulkDeliveryDetailsListYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders:
    post:
      tags:
        - Customer Experience
        - Process Customer Purchases
        - publicly-accessible
      summary: Create order
      operationId: CustomerExperience_createOrder
      description: Create order
      parameters:
        - description: The api version to use. Version 2.0 is the only available version.
          name: x-je-api-version
          required: false
          example: 2
          schema:
            default: 1
            type: number
          in: header
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersApiV2OrderRequestV2Yaml'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerExperienceCreateOrderResponse'
        '400':
          description: >-
            Bad Request - Request is for deprecated API version or has failed
            validation in some way - see response body for details
        '409':
          description: >-
            Conflict - you've already told us about an order with this
            `OrderReference`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerExperienceCreateOrder409Response'
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{brandSlug}/{orderId}/amend:
    get:
      servers:
        - description: Production environment
          url: https://ordering-universal-connector.flyt-platform.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - ordering-universal-connector
        - publicly-accessible
      summary: Get amendedment
      operationId: JetConnectForManageOrderStatus_getAmendmentProgress
      security:
        - X-Flyt-Api-Key: []
      description: Get progress about the state of an amended order.
      parameters:
        - description: >-
            The owning brand in the brand slug format e.g. `je-uk-example`
            (contact delivery manager if unsure). This field may be removed in a
            future version.
          name: brandSlug
          in: path
          required: true
          example: je-uk-example
          schema:
            type: string
        - description: The originating order ID as supplied by the ordering partner.
          name: orderId
          in: path
          required: true
          example: 00025doahk2txeo9ttd0ma
          schema:
            type: string
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            cache-control:
              description: Information about how the response can be cached
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorAmendOrderRespYaml
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
      x-status: Draft
    post:
      servers:
        - description: Production environment
          url: https://ordering-universal-connector.flyt-platform.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - ordering-universal-connector
        - publicly-accessible
      summary: Amend order
      operationId: JetConnectForManageOrderStatus_amendOrderProgress
      security:
        - X-Flyt-Api-Key: []
      description: >-
        Amends an order to mark items that were out of stock. Upon completion of
        this amendment process, any failures will reported via the
        `orderAmendmentFailurePath` webhook. This can be configured inside your
        brand config defined in `connect.flyt.io`. Contact your delivery manager
        if you are unsure how to set this.
      parameters:
        - description: >-
            The owning brand in the brand slug format e.g. `je-uk-example`
            (contact delivery manager if unsure). This field may be removed in a
            future version.
          name: brandSlug
          in: path
          required: true
          example: je-uk-example
          schema:
            type: string
        - description: The originating order ID as supplied by the ordering partner.
          name: orderId
          in: path
          required: true
          example: 00025doahk2txeo9ttd0ma
          schema:
            type: string
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectOrderingUniversalConnectorAmendOrderReqYaml
      responses:
        '202':
          description: >-
            The out of stock items request has been accepted and will be
            processed.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: >-
            An order can only be amended once so any subsequent attempt will
            return a conflict.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
      x-status: Draft
      callbacks:
        amendmentFailed:
          /your-failed-amendment-notification-endpoint:
            post:
              summary: Failure processing amendment
              description: >-
                When a failure amending an ordering occurs (could when notifying
                upstream or during any subsequent process), we will send a
                request to this path.
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: >-
                        #/components/schemas/JetConnectOrderingUniversalConnectorFailedAmendmentBodyYaml
              responses:
                '202':
                  description: >-
                    Your server implementation should return this HTTP status
                    code if the data was received successfully.
  /orders/{brandSlug}/{orderId}/cancel:
    post:
      servers:
        - description: Production environment
          url: https://ordering-universal-connector.flyt-platform.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - ordering-universal-connector
        - publicly-accessible
      summary: Cancel order
      operationId: JetConnectForManageOrderStatus_cancelOrder
      security:
        - X-Flyt-Api-Key: []
      description: >-
        Cancels an order. Must be called before the order prep-for time has
        elapsed. Note: this endpoint is not yet generally available. Please
        contact your delivery manager for more information.
      parameters:
        - description: >-
            The owning brand in the brand slug format e.g. `je-uk-example`
            (contact delivery manager if unsure). This field may be removed in a
            future version.
          name: brandSlug
          in: path
          required: true
          example: je-uk-example
          schema:
            type: string
        - description: The originating order ID as supplied by the ordering partner.
          name: orderId
          in: path
          required: true
          example: 00025doahk2txeo9ttd0ma
          schema:
            type: string
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectOrderingUniversalConnectorCancelOrderReqYaml
      responses:
        '200':
          description: The cancellation request has been accepted and will be processed.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorCancelOrderRespYaml
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorFailedCancellationBodyYaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorUnauthorizedResponseYaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorFailedCancellationBodyYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorFailedCancellationBodyYaml
      x-status: Draft
  /orders/{orderId}/accept:
    put:
      tags:
        - Manage Order Journey
        - Operate Order Status
        - publicly-accessible
      summary: Accept order
      operationId: ManageOrderJourney_acceptOrder
      security:
        - Bearer: []
      description: >-
        Call when an order has been accepted. An order can only be accepted if
        it hasn't previously been accepted, rejected, cancelled or ignored
      parameters:
        - description: The order id
          name: orderId
          schema:
            type: string
          required: true
          in: path
        - description: The value used for cross feature correlation.
          required: false
          name: x-je-conversation
          schema:
            type: string
          in: header
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAcceptanceOrderAcceptRequestYaml'
      responses:
        '200':
          description: >-
            OK - status updated successfully or it is already in the requested
            state
        '404':
          description: Order could not be found
        '409':
          description: >-
            Conflict. This order has either already been accepted, rejected or
            ignored by restaurant or cancelled by ops
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/beingprepared:
    post:
      tags:
        - Manage Order Journey
        - Operate Order Status
        - publicly-accessible
      summary: Update order to Being Prepared
      operationId: ManageOrderJourney_updateOrderBeingPrepared
      security:
        - Bearer: []
      description: Update the order state to signify that it is being prepared
      parameters:
        - description: The order id
          name: orderId
          in: path
          schema:
            type: string
          required: true
        - description: The value used for cross feature correlation.
          name: x-je-conversation
          in: header
          schema:
            type: string
          required: false
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAcceptanceBeingPreparedRequestYaml'
      responses:
        '204':
          description: >-
            No content - status updated successfully or it is already in the
            requested state
        '404':
          description: Not found - order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                faultId: 15c27f5b-5121-4c1f-bea3-34378dff2a79
                errors:
                  - description: Order could not be found
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Stable
  /orders/{orderId}/cancel:
    put:
      tags:
        - Manage Order Journey
        - Operate Order Status
        - publicly-accessible
      summary: Cancel order
      operationId: ManageOrderJourney_cancelOrder
      security:
        - Bearer: []
      description: >-
        Call when an order has been cancelled by Ops. Cancelling an order
        overrides any previous accept/reject calls. This should not be used for
        restaurant rejection but only from Ops involvement
      parameters:
        - description: The order id
          name: orderId
          schema:
            type: string
          required: true
          in: path
        - description: The value used for cross feature correlation.
          required: false
          name: x-je-conversation
          schema:
            type: string
          in: header
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAcceptanceOrderCancelRequestYaml'
      responses:
        '200':
          description: >-
            OK - status updated successfully or it is already in the requested
            state
        '404':
          description: Order could not be found
        '409':
          description: Conflict. This order has already been cancelled
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/complete:
    post:
      tags:
        - Manage Order Journey
        - Operate Order Status
        - publicly-accessible
      summary: Complete order
      operationId: ManageOrderJourney_markOrderComplete
      security:
        - Bearer: []
      description: >-
        Call when an order is complete. An order can only be marked as complete
        if it hasn't already been marked as cancelled or complete.
      parameters:
        - description: The ID of the order to mark as complete
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: The value used for cross feature correlation.
          required: false
          name: x-je-conversation
          schema:
            type: string
          in: header
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '204':
          description: >-
            No content - status updated successfully or it is already in the
            requested state
        '404':
          description: Not found - order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                faultId: b6a1d658-dda4-41b6-a9a5-dbfb7ba7b2aa
                errors:
                  - description: Order could not be found
        '409':
          description: >-
            Conflict - this order has already been marked as cancelled or
            complete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                faultId: 9c63827b-6fad-46bf-9e9a-9aafec941824
                errors:
                  - description: >-
                      Order cannot be marked as complete because it is already
                      marked as cancelled
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Stable
  /orders/{orderId}/deliverystate/atdeliveryaddress:
    put:
      tags:
        - Manage Order Journey
        - Analyze Order Delivery
        - publicly-accessible
      summary: Update order with driver at delivery address details
      operationId: ManageOrderJourney_updateDeliveredDetails
      description: >-
        <p>The _at delivery address_ callback should be sent when the driver
        thinks that they have arrived at the specified delivery
        address.</p><p>NB&semi; This callback should be distinct from the
        delivered callback, as Just Eat use this callback to understand how much
        time is spent locating the customer's address.</p>
      parameters:
        - description: Just Eat order identifier
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryApiDeliveryDetailsYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/deliverystate/atrestaurant:
    put:
      tags:
        - Manage Order Journey
        - Analyze Order Delivery
        - publicly-accessible
      summary: Update order with driver at restaurant details
      operationId: ManageOrderJourney_updateDriverAtRestaurantDetails
      description: >-
        The _at restaurant_ callback should be sent when the driver arrives at
        the restaurant and is ready to collect the order.
      parameters:
        - description: Just Eat order identifier
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryApiDeliveryDriverDetailsWithEtaYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/deliverystate/atrestauranteta:
    put:
      tags:
        - Manage Order Journey
        - Analyze Order Delivery
        - publicly-accessible
      summary: Update the driver's estimated time to arrive at the Restaurant
      operationId: ManageOrderJourney_updateDriverAtRestaurantEta
      description: >-
        <p>In the UK, this endpoint updates the estimated arrival time at the
        restaurant. This value can be overridden from other endpoints like <a
        href="https://uk.api.just-eat.io/docs#tag/Order-Delivery-API/paths/~1orders~1{orderId}~1deliverystate~1driverlocation/put">Driver
        Locations</a> </p> <p> This endpoint should be used to set initial at
        restaurant ETAs prior to driver assignment where available. The earlier
        a delivery partner is able to provide an estimate of when the driver
        will arrive at the restaurant the more likely it is that driver arrival
        and order preparation will be aligned. </p> <p> In other tenants (Not
        UK):Note that if set for a given order, this Eta will NOT be overridden
        by any other at restaurant ETAs provided in `DriverAssigned` or
        `DriverLocation` requests</p> <p>This value is significant since it
        informs when a restaurant is instructed to start preparing food. When
        the time remaining between current time and the estimated time of
        arrival becomes less than the restaurant's configured preparation time,
        food preparation is initiated</p>
      parameters:
        - description: Just Eat order identifier
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDeliveryEtaEstimateYaml'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManageOrderJourneyUpdateDriverAtRestaurantEtaResponse
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/deliverystate/delivered:
    put:
      tags:
        - Manage Order Journey
        - Analyze Order Delivery
        - publicly-accessible
      summary: Update order with delivered details
      operationId: ManageOrderJourney_updateDeliveredDetails
      description: >-
        The _delivered_ callback should be sent when the driver has handed the
        food to the customer and completed the order.
      parameters:
        - description: Just Eat order identifier
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryApiDeliveryDetailsYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/deliverystate/driverassigned:
    put:
      tags:
        - Manage Order Journey
        - Analyze Order Delivery
        - publicly-accessible
      summary: Update order with driver assigned details
      operationId: ManageOrderJourney_updateOrderDriverAssignedDetails
      description: >-
        The _driver assigned_ callback should be sent when a driver is assigned
        to the order. It should communicate important details about the driver -
        and also an estimated time for the driver to arrive at the restaurant
        and delivery address.
      parameters:
        - description: Just Eat order identifier
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/DeliveryApiDeliveryDriverAssignedDetailsYaml
      responses:
        '200':
          description: OK
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManageOrderJourneyUpdateOrderDriverAssignedDetailsResponse
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/deliverystate/driverlocation:
    put:
      tags:
        - Manage Order Journey
        - Analyze Order Delivery
        - publicly-accessible
      summary: Update the driver's current location
      operationId: ManageOrderJourney_updateDriverLocationETA
      description: >-
        <p>Just Eat requires all delivery partners to send regular driver
        location callbacks, that record the GPS location of the drivers assigned
        to each order</p><p>Partners should aim to supply this callback
        approximately every 10 seconds.</p><p>Please provide an up-to-date ETA
        for when the driver will reach the restaurant in this request - this
        value is significant since it informs when a restaurant is instructed to
        start preparing food - when the time remaining between current time and
        the estimated time of arrival becomes less than the restaurant's
        configured preparation time, food preparation is initiated</p><p>Note
        that at restaurant Eta provided in this request will NOT override any
        ETA set in the Driver At Restaurant Eta request</p>
      parameters:
        - description: Just Eat order identifier
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryApiDeliveryDriverLocationYaml'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManageOrderJourneyUpdateDriverLocationEtaResponse
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/deliverystate/driverunassigned:
    put:
      tags:
        - Manage Order Journey
        - Analyze Order Delivery
        - publicly-accessible
      summary: Update order with driver unassigned details
      operationId: ManageOrderJourney_updateDriverUnassignedDetails
      description: >-
        The _driver unassigned_ callback should be sent when a driver is
        unassigned from the order. It may details about the reason for
        cancelling the assignment, the driver details, and any newer at
        restaurant and customer estimations.
      parameters:
        - description: Just Eat order identifier
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/DeliveryApiDeliveryDriverUnassignedDetailsYaml
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensibleObjectYaml'
              example:
                partnerId:
                  - Partner id was not found or could not be parsed
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/deliverystate/onitsway:
    put:
      tags:
        - Manage Order Journey
        - Analyze Order Delivery
        - publicly-accessible
      summary: Update order with driver on its way details
      operationId: ManageOrderJourney_updateDriverOnitsWayDetails
      description: >-
        The _on its way_ callback should be sent when the driver departs the
        restaurant with the customer's order. It should contain an ETA that
        records when the driver expects to arrive at the customer's address.
      parameters:
        - description: The order id
          name: orderId
          schema:
            type: string
          required: true
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryApiOnItsWayDetailsYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/dispatchedtocustomer:
    put:
      tags:
        - Manage Order Journey
        - Operate Order Status
        - publicly-accessible
      summary: Mark order as dispatched to customer
      operationId: ManageOrderJourney_markOrderDispatchedToCustomer
      security:
        - Bearer: []
      description: >-
        Call when restaurant want to move a delivery order to dispatched to
        customer status. Accepted or ready for collection order may be moved to
        dispatched to customer status.
      parameters:
        - description: The ID of the order to mark it as dispatched to customer
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: The value used for cross feature correlation.
          required: false
          name: x-je-conversation
          schema:
            type: string
          in: header
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '204':
          description: >-
            No content - status updated successfully or it is already in the
            requested state
        '404':
          description: Not found - order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                faultId: 15c27f5b-5121-4c1f-bea3-34378dff2a79
                errors:
                  - description: Order could not be found
        '409':
          description: >-
            Conflict - this order can not be moved in dispatched to customer
            status because order is not yet Accepted or already Rejected or
            Cancelled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                faultId: 9c63827b-6fad-46bf-9e9a-9aafec941824
                errors:
                  - description: >-
                      Order is currently marked as current status, it is invalid
                      to transition to dispatched to customer status.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Stable
  /orders/{orderId}/duedate:
    put:
      tags:
        - Manage Order Journey
        - Operate Order Status
        - publicly-accessible
      summary: Update order ETA
      operationId: ManageOrderJourney_updateOrderEta
      security:
        - Bearer: []
      description: >
        Use this to update the estimated time of arrival for an order (i.e. when
        you expect the customer to receive the food). NOTE: An initial estimate
        is given [upon acceptance](https://uk.api.just-eat.io/docs/). This
        endpoint can be used to update that estimate.
      parameters:
        - description: The order id
          name: orderId
          schema:
            type: string
          required: true
          in: path
        - description: The value used for cross feature correlation.
          required: false
          name: x-je-conversation
          schema:
            type: string
          in: header
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAcceptanceOrderDueDateRequestYaml'
      responses:
        '200':
          description: OK - order due date updated successfully
        '400':
          description: >-
            The due date is missing, or out of range (either in the past, or > 7
            days in the future).
        '404':
          description: The order could not be found.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /orders/{orderId}/readyforcollection:
    post:
      tags:
        - Manage Order Journey
        - Operate Order Status
        - publicly-accessible
      summary: Mark order as ready for collection
      operationId: ManageOrderJourney_markReadyForCollection
      security:
        - Bearer: []
      description: >-
        Call when an order is ready to be collected by the customer, delivery
        partner or restaurant delivery team. An order can only be marked as
        ready for collection if it is already in accepted status.
      parameters:
        - description: The ID of the order to mark as ready for collection
          required: true
          name: orderId
          schema:
            type: string
          in: path
        - description: The value used for cross feature correlation.
          required: false
          name: x-je-conversation
          schema:
            type: string
          in: header
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '204':
          description: >-
            No content - status updated successfully or it is already in the
            requested state
        '404':
          description: Not found - order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                faultId: 15c27f5b-5121-4c1f-bea3-34378dff2a79
                errors:
                  - description: Order could not be found
        '409':
          description: >-
            Conflict - this order can not be moved to the "ready for collection"
            status because the order is not yet Accepted or already Rejected or
            Cancelled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                faultId: 9c63827b-6fad-46bf-9e9a-9aafec941824
                errors:
                  - description: >-
                      Order is currently marked as current status, it is invalid
                      to transition to ready for collection status.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Stable
  /orders/{orderId}/reject:
    put:
      tags:
        - Manage Order Journey
        - Operate Order Status
        - publicly-accessible
      summary: Reject order
      operationId: ManageOrderJourney_rejectOrder
      security:
        - Bearer: []
      description: >-
        Call when an order has been rejected. An order can only be rejected if
        it hasn't previously been accepted, rejected, cancelled or ignored
      parameters:
        - description: The order id
          name: orderId
          schema:
            type: string
          required: true
          in: path
        - description: The value used for cross feature correlation.
          required: false
          name: x-je-conversation
          schema:
            type: string
          in: header
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAcceptanceOrderRejectRequestYaml'
      responses:
        '200':
          description: >-
            OK - status updated successfully or it is already in the requested
            state
        '404':
          description: Order could not be found
        '409':
          description: >-
            Conflict. This order has either already been accepted, rejected or
            ignored by restaurant or cancelled by ops
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /redelivery-requested:
    put:
      tags:
        - API Partner Management Gateway
        - Order Acceptance Webhooks
        - publicly-accessible
        - Webhook
      summary: Customer Requested Redelivery
      operationId: ApiPartnerManagementGateway_customerResponseRedelivery
      description: >-
        This webhook will be invoked whenever the customer responds to the
        attempted delivery notification.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AttemptedDeliveryAttemptedDeliveryResponseReceivedYaml
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /restaurant-offline-status:
    put:
      tags:
        - API Partner Management Gateway
        - Restaurant Events Webhooks
        - publicly-accessible
        - Webhook
      summary: Restaurant Offline Status
      operationId: ApiPartnerManagementGateway_updateRestaurantOfflineStatus
      description: >-
        Callback to notify that a restaurant has been taken offline through an
        active Restaurant Event or there's been a change in whether the
        restaurant can override a previous offline status.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestauranteventsRestaurantOfflineStatusYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /restaurant-online-status:
    put:
      tags:
        - API Partner Management Gateway
        - Restaurant Events Webhooks
        - publicly-accessible
        - Webhook
      summary: Restaurant Online Status
      operationId: ApiPartnerManagementGateway_updateRestaurantOnlineStatus
      description: >-
        Callback to notify that a restaurant is now able to come back online as
        there are no longer any active offline Restaurant Events
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestauranteventsRestaurantOfflineStatusYaml'
      responses:
        '200':
          description: OK
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /restaurants/bylatlong:
    get:
      tags:
        - Search Orchestrator
        - publicly-accessible
      summary: Get restaurants by location
      operationId: SearchOrchestrator_getRestaurantsByLocation
      security:
        - Bearer: []
        - api_key: []
        - basic_auth: []
        - justeat_adfs: []
        - restaurantsignup_jwt: []
        - daas_jwt: []
      description: >-
        Provides details of all restaurants that deliver to the specified
        location
      parameters:
        - description: >-
            A valid country code, e.g. "uk". Filter search results to only
            include restaurants for the specified country. Required when using
            OAuth for authentication.
          schema:
            type: string
          in: header
          required: false
          name: Accept-Tenant
        - description: >-
            Filter search results to only include restaurants that deliver to
            the specified location
          schema:
            type: number
          in: query
          required: true
          x-position: 1
          name: latitude
        - description: >-
            Filter search results to only include restaurants that deliver to
            the specified location
          schema:
            type: number
          in: query
          required: true
          x-position: 2
          name: longitude
        - description: >-
            Filter search results to only include restaurants that offer the
            specified cuisine
          schema:
            type: string
          in: query
          required: false
          x-position: 3
          name: cuisine
        - description: >-
            Filter search results to only include restaurants that have a name
            that matches the specified value
          schema:
            type: string
          in: query
          required: false
          x-position: 4
          name: restaurantName
        - description: >-
            Filter search results to only include restaurants of the specified
            brand
          schema:
            type: string
          in: query
          required: false
          x-position: 5
          name: brandName
        - description: Whether returned ratings are out of 5 stars
          name: ratingsOutOfFive
          schema:
            type: boolean
            default: false
          in: query
          required: false
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            cache-control:
              description: Information about how the response can be cached.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SearchOrchestratorGetRestaurantsByLocationResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SearchOrchestratorGetRestaurantsByLocation400Response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SearchOrchestratorGetRestaurantsByLocation401Response
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SearchOrchestratorGetRestaurantsByLocation500Response
      x-status: Deprecated
  /restaurants/bypostcode/{postcode}:
    get:
      tags:
        - Search Orchestrator
        - publicly-accessible
      summary: Get restaurants by postcode
      operationId: SearchOrchestrator_getRestaurantsByPostcode
      security:
        - Bearer: []
        - api_key: []
        - basic_auth: []
        - justeat_adfs: []
        - restaurantsignup_jwt: []
        - daas_jwt: []
      description: Provides details of restaurants that deliver to the specified postcode
      parameters:
        - description: >-
            A valid country code, e.g. "uk". Filter search results to only
            include restaurants for the specified country. Required when using
            OAuth for authentication.
          schema:
            type: string
          in: header
          required: false
          name: Accept-Tenant
        - description: >-
            Filter search results to only include restaurants that deliver to
            the specified postcode
          schema:
            type: string
          in: path
          required: true
          name: postcode
        - description: >-
            Filter search results to only include restaurants that offer the
            specified cuisine
          schema:
            type: string
          in: query
          required: false
          x-position: 1
          name: cuisine
        - description: >-
            Filter search results to only include restaurants that have a name
            that matches the specified value
          schema:
            type: string
          in: query
          required: false
          x-position: 2
          name: restaurantName
        - description: >-
            Filter search results to only include restaurants of the specified
            brand
          schema:
            type: string
          in: query
          required: false
          x-position: 3
          name: brandName
        - description: Whether returned ratings are out of 5 stars
          name: ratingsOutOfFive
          schema:
            type: boolean
            default: false
          in: query
          required: false
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            cache-control:
              description: Information about how the response can be cached.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SearchOrchestratorGetRestaurantsByPostcodeResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SearchOrchestratorGetRestaurantsByPostcode400Response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SearchOrchestratorGetRestaurantsByPostcode401Response
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SearchOrchestratorGetRestaurantsByPostcode500Response
      x-status: Deprecated
  /restaurants/driver/eta:
    put:
      tags:
        - Logistic Management
        - Manage Delivery Suppliers
        - publicly-accessible
      summary: Set ETA for pickup
      operationId: LogisticManagement_setPickupETA
      description: >-
        Set the average amount of time it will take a driver to collect a new
        order from a restaurant.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantsRestaurantEtAsYaml'
      responses:
        '202':
          description: Update will take effect shortly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantsIgnoredRestaurantIdsYaml'
        '400':
          description: >-
            There was something invalid in your request - check response body
            for details
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Stable
  /restaurants/{restaurantReference}/offline:
    put:
      servers:
        - description: The Flyt Platform (Flyt is now JET Connect)
          url: https://api.flytplatform.com
      tags:
        - JET Connect for Manage Partner Availability
        - jet-connect
        - restaurant-availability-api
        - publicly-accessible
      summary: Set a restaurant offline
      operationId: JetConnectForManagePartnerAvailability_setRestaurantOffline
      security:
        - X-Flyt-Api-Key: []
      description: >-
        Marks a restaurant as offline, i.e. unable to accept new orders.


        Note: This feature is currently only available for integrations with
        Just Eat and Menulog.
      parameters:
        - $ref: >-
            #/paths/~1restaurants~1%7BrestaurantReference%7D~1online/put/parameters/0
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectRestaurantAvailabilityApiRestaurantOfflineYaml
      responses:
        '202':
          description: Offline notification accepted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectRestaurantAvailabilityApiAcceptedResponseYaml
        '400':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiBadRequestResponseYaml
        '403':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiForbiddenResponseYaml
        '404':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiNotFoundResponseYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiInternalServerErrorResponseYaml
      x-status: Stable
  /restaurants/{restaurantReference}/online:
    put:
      servers:
        - description: The Flyt Platform (Flyt is now JET Connect)
          url: https://api.flytplatform.com
      tags:
        - JET Connect for Manage Partner Availability
        - jet-connect
        - restaurant-availability-api
        - publicly-accessible
      summary: Set a restaurant online
      operationId: JetConnectForManagePartnerAvailability_setRestaurantOnline
      security:
        - X-Flyt-Api-Key: []
      description: >-
        Marks a restaurant as online, i.e. able to accept new orders.


        Note: This feature is currently only available for integrations with
        Just Eat and Menulog.
      parameters:
        - description: >-
            Unique identifier of the restaurant as provided to and configured by
            JET Connect
          name: restaurantReference
          in: path
          required: true
          schema:
            type: string
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '202':
          description: Online notification accepted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectRestaurantAvailabilityApiAcceptedResponseYaml
        '400':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiBadRequestResponseYaml
        '403':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiForbiddenResponseYaml
        '404':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiNotFoundResponseYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiInternalServerErrorResponseYaml
      x-status: Stable
  /restaurants/{restaurantReference}/servicetimes:
    put:
      servers:
        - description: The Flyt Platform (Flyt is now JET Connect)
          url: https://api.flytplatform.com
      tags:
        - JET Connect for Manage Partner Availability
        - jet-connect
        - restaurant-availability-api
        - publicly-accessible
      summary: Updates restaurant's opening times
      operationId: JetConnectForManagePartnerAvailability_updateRestaurantServiceTimes
      security:
        - X-Flyt-Api-Key: []
      description: >-
        Update the service times in your Just Eat / Menulog restaurants,
        overriding the ones currently present on the restaurant.


        Note: This feature is currently only available for integrations with
        Just Eat and Menulog.


        ## When to use it


        By availabilities on the menu, we mean what times you can order from a
        specific menu.

        By service times, we mean restaurant opening hours.


        It is possible to push the same menu to multiple locations however, this
        means that all the restaurants need to share the same availabilities on
        the menu.


        By using this endpoint you can “override” the service times for a given
        restaurant, so you will be able to push a single menu and then
        individually select the service times.


        ### Scenario 1


        You push 1 unique menu with availabilities `17:00-21:00` to ten
        locations.


        Since one of the locations closes earlier at `20:00` you can now use the
        service times endpoint to update the opening hours for this location.


        ### Scenario 2


        The breakfast menu runs from `09:00-11:00`  but the restaurant needs to
        close at `10:00` due to driver shortage. You can use the service times
        endpoint to update opening hours.


        ### Scenario 3 - Limitations


        Menu availabilities are `8:00-12:00`. The restaurant decides on the day
        they want to open earlier at `07:00`. The service times endpoint cannot
        be used to update opening hours as you won't be able to place an order
        at `07:00` since there is no menu for that time.

        Instead, you would need to re-push the menu with revised availabilities
        `07:00-12:00`.
      parameters:
        - $ref: >-
            #/paths/~1restaurants~1%7BrestaurantReference%7D~1online/put/parameters/0
        - $ref: >-
            #/paths/~1restaurants~1%7BrestaurantReference%7D~1offline/put/parameters/1
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectRestaurantAvailabilityApiServiceTimesYaml
            examples:
              example:
                value:
                  timezone: Europe/London
                  serviceTimes:
                    - serviceType: Delivery
                      openingTimes:
                        monday:
                          - openingTime: '10:00'
                            closingTime: '18:00'
                          - openingTime: '20:00'
                            closingTime: '23:00'
                        tuesday:
                          - openingTime: '10:00'
                            closingTime: '18:00'
                        wednesday:
                          - openingTime: '10:00'
                            closingTime: '18:00'
                        thursday:
                          - openingTime: '10:00'
                            closingTime: '18:00'
                        friday:
                          - openingTime: '10:00'
                            closingTime: '18:00'
                        saturday:
                          - openingTime: '10:00'
                            closingTime: '18:00'
                        sunday:
                          - openingTime: '10:00'
                            closingTime: '18:00'
                    - serviceType: Collection
                      openingTimes:
                        monday:
                          - openingTime: '10:00'
                            closingTime: '18:00'
      responses:
        '202':
          description: Service Time updates accepted for processing by upstream services
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectRestaurantAvailabilityApiAcceptedResponseYaml
        '400':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiBadRequestResponseYaml
        '403':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiForbiddenResponseYaml
        '404':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiNotFoundResponseYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: >-
            #/components/responses/JetConnectRestaurantAvailabilityApiInternalServerErrorResponseYaml
      x-status: Stable
  /restaurants/{tenant}:
    post:
      tags:
        - Partner Management
        - Process Partner Onboarding
        - publicly-accessible
      summary: Create a new Restaurant
      operationId: PartnerManagement_createRestaurant
      description: Starts a new restaurant creation process.
      parameters:
        - description: Request tenant
          required: true
          name: tenant
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantsRestaurantCreationYaml'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: URL to the started restaurant creation process
              schema:
                type: string
              example: >-
                https://uk.api.just-eat.io/restaurants/uk/creation-process/43fb87080c8549cdbae896d44e4b6a4f
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
                errors:
                  - description: The restaurant name is required.
                    errorCode: RestaurantNameRequired
        '401':
          $ref: '#/components/responses/401UnauthorizedResponseYaml'
        '403':
          $ref: '#/components/responses/403ForbiddenResponseYaml'
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Stable
  /restaurants/{tenant}/{restaurantId}/creation-status:
    get:
      tags:
        - Partner Management
        - Process Partner Onboarding
        - publicly-accessible
      summary: Get Restaurant Creation Status
      operationId: PartnerManagement_getRestaurantCreationStatus
      description: Get creation status of a given restaurant.
      parameters:
        - description: The request tenant
          required: true
          name: tenant
          schema:
            type: string
          in: path
        - description: The restaurant identifier
          required: true
          name: restaurantId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            cache-control:
              description: Information about how the response can be cached
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantsRestaurantCreationStatusYaml'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponseYaml'
        '403':
          $ref: '#/components/responses/403ForbiddenResponseYaml'
        '404':
          description: Restaurant Creation Process Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: 72d7896d-910a-4f84-9efa-ef5f40f6044b
                errors:
                  - description: Restaurant Creation Process Not Found
                    errorCode: CreationProcessNotFound
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Stable
    post:
      tags:
        - Partner Management
        - Process Partner Onboarding
        - publicly-accessible
      summary: Update Restaurant Creation Status
      operationId: PartnerManagement_updateCreationStatus
      description: Updates a restaurant's creation status.
      parameters:
        - description: The request tenant
          required: true
          name: tenant
          schema:
            type: string
          in: path
        - description: The restaurant identifier
          required: true
          name: restaurantId
          schema:
            type: string
          in: path
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/RestaurantsUpdateRestaurantCreationStatusYaml
      responses:
        '200':
          description: OK
        '400':
          description: Restaurant Status Cannot Be Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: 72d7896d-910a-4f84-9efa-ef5f40f6044b
                errors:
                  - description: Restaurant does not pass all required criteria.
                    errorCode: RestaurantNotActivatable
        '401':
          $ref: '#/components/responses/401UnauthorizedResponseYaml'
        '403':
          $ref: '#/components/responses/403ForbiddenResponseYaml'
        '404':
          description: Restaurant Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                traceId: H3TKh4QSJUSwVBCBqEtkKw==
                faultId: 72d7896d-910a-4f84-9efa-ef5f40f6044b
                errors:
                  - description: Restaurant Not Found
                    errorCode: RestaurantNotFound
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
      x-status: Stable
  /search/autocomplete/{tenant}:
    get:
      tags:
        - Customer Experience
        - Promote Partners to Customers
        - publicly-accessible
      summary: Get auto-completed search terms
      operationId: CustomerExperience_getAutoCompletedSearchTerms
      description: >-
        Provides auto-completed search terms for restaurants, cuisines and
        products available in a given location.
      parameters:
        - description: A valid country code, e.g. "uk".
          schema:
            type: string
          in: path
          required: true
          name: tenant
        - description: User's search term - at least one character required
          schema:
            type: string
            minLength: 1
            maxLength: 128
          in: query
          required: true
          name: searchTerm
        - description: >-
            The latitude and longitude coordinates of the location in which to
            search.

            Specify the coordinates as latitude,longitude.
          schema:
            minItems: 2
            items:
              format: decimal
              type: number
            type: array
            maxItems: 2
          in: query
          explode: false
          style: form
          name: latlong
          example:
            - 51.501285
            - -0.1424422
          required: true
        - description: >-
            Limit the number of auto-completed terms returned by the API.
            Defaults to 7. Valid values 1 - 10
          schema:
            format: integer
            type: number
          in: query
          required: false
          name: limit
        - description: |-
            Filter autocomplete results by service type.
            Valid values are "any", "delivery" and "collection".
            Defaults to "any".
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SearchServiceTypesYaml'
          in: query
          name: serviceType
          required: false
        - description: >-
            Filter restaurants, dishes and cuisines by provided exclusion list.

            Search filter will be applied only if this array contains the value
            `alcohol`.
          schema:
            type: array
            items:
              type: string
          in: query
          name: excluded-result-types
          required: false
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Success
          headers:
            cache-control:
              description: Information about how the response can be cached.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAutoCompleteSearchResponseYaml'
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                errors:
                  - description: Validation failed on one or more fields
                    errorCode: 400
                    fields:
                      - latlong
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
              schema:
                $ref: >-
                  #/components/schemas/CustomerExperienceGetAutoCompletedSearchTermsResponse
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                errors:
                  - errorCode: '401'
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
        '503':
          description: Service Unavailable
          content:
            application/json:
              example:
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
              schema:
                $ref: >-
                  #/components/schemas/CustomerExperienceGetAutoCompletedSearchTerms503Response
      x-status: Stable
  /search/menu/{tenant}/{restaurantId}:
    get:
      tags:
        - Customer Experience
        - Promote Partners to Customers
        - publicly-accessible
      summary: Get Products from a menu
      operationId: CustomerExperience_searchMenuProducts
      description: >-
        Provides a list of products that have matched the given search term
        against the restaurants menu
      parameters:
        - description: A valid country code, e.g. "uk".
          schema:
            type: string
          in: path
          required: true
          name: tenant
        - description: The ID for a restaurant
          schema:
            type: string
          in: path
          required: true
          name: restaurantId
        - description: User's search term - at least one character required
          schema:
            type: string
            minLength: 1
            maxLength: 128
          in: query
          required: true
          name: searchTerm
        - description: Limit the number of terms returned by the API, defaults to 100
          schema:
            format: integer
            type: number
            default: 100
            minimum: 1
            maximum: 100
          in: query
          required: false
          name: limit
        - description: |-
            Filter product results by service type.
            Valid values are "any", "delivery" and "collection".
            Defaults to "delivery".
          schema:
            type: array
            default: delivery
            items:
              $ref: '#/components/schemas/SearchServiceTypesYaml'
          in: query
          name: serviceType
          required: false
        - description: >-
            Filter dishes by provided exclusion list.

            Search filter will be applied only if this array contains the value
            `alcohol`.
          schema:
            type: array
            items:
              type: string
          in: query
          name: excluded-result-types
          required: false
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Success
          headers:
            cache-control:
              description: Information about how the response can be cached.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchMenuSearchResponseYaml'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                errors:
                  - description: Validation failed on one or more fields
                    errorCode: 400
                    fields:
                      - tenant
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  - description: The search term is an allergen phrase
                    errorCode: 422
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
              schema:
                $ref: >-
                  #/components/schemas/CustomerExperienceSearchMenuProductsResponse
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
        '503':
          description: Service Unavailable
          content:
            application/json:
              example:
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
              schema:
                $ref: >-
                  #/components/schemas/CustomerExperienceSearchMenuProducts503Response
      x-status: Stable
  /search/restaurants/{tenant}:
    get:
      tags:
        - Customer Experience
        - Promote Partners to Customers
        - publicly-accessible
      summary: Search restaurants
      operationId: CustomerExperience_searchRestaurantsByLatLong
      description: |-
        Get restaurants available in a given lat-long which match a search term.
        Matches can be found against the name, a cuisine or a product.
      parameters:
        - description: A valid country code, e.g. "uk".
          schema:
            type: string
          in: path
          required: true
          name: tenant
        - description: User's search term.
          schema:
            type: string
            minLength: 1
            maxLength: 128
          in: query
          required: true
          name: searchTerm
        - description: >-
            The latitude and longitude coordinates of the location in which to
            search.

            Specify the coordinates as latitude,longitude.
          schema:
            minItems: 2
            items:
              format: decimal
              type: number
            type: array
            maxItems: 2
          in: query
          explode: false
          style: form
          name: latlong
          example:
            - 51.501285
            - -0.1424422
          required: true
        - description: |-
            Limit the number of restaurants returned by the API.
            Valid values are numbers between 1 and 500.
            If not provided, the limit defaults to 300.
          schema:
            format: integer
            type: number
          in: query
          required: false
          name: limit
        - description: Include test partners in results. Value can be true or false.
          schema:
            type: string
          in: query
          name: include-test-partners
          required: false
        - description: |-
            Filter restaurant results by service type.
            Valid values are "any", "delivery" and "collection".
            Defaults to "any".
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SearchServiceTypesYaml'
          in: query
          name: serviceType
          required: false
        - description: >-
            Filter restaurants and dishes by provided exclusion list.

            Search filter will be applied only if this array contains the value
            `alcohol`.
          schema:
            type: array
            items:
              type: string
          in: query
          name: excluded-result-types
          required: false
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Success
          headers:
            cache-control:
              description: Information about how the response can be cached.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchRestaurantSearchResponseYaml'
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                errors:
                  - description: Validation failed on one or more fields
                    errorCode: 400
                    fields:
                      - latlong
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                errors:
                  - errorCode: '401'
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
        '422':
          description: Unprocessable Entity - search term rejected
          content:
            application/json:
              example:
                errors:
                  - errorCode: '422'
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          $ref: '#/components/responses/500ErrorResponseYaml'
        '503':
          description: Service Unavailable
          content:
            application/json:
              example:
                traceId: 0HLOCKDKQPKIU
                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
              schema:
                $ref: >-
                  #/components/schemas/CustomerExperienceSearchRestaurantsByLatLongResponse
      x-status: Stable
  /send-to-pos-failed:
    post:
      tags:
        - API Partner Management Gateway
        - Order Webhooks
        - publicly-accessible
        - Webhook
      summary: Send to POS failed
      operationId: ApiPartnerManagementGateway_handlePosFailed
      description: >-
        This webhook will be invoked if we experience an error or timeout in
        sending an order to the underlying POS / kitchen screen. When notified
        via this webhook, typically you will perform some form of alerting or
        backup flow (e.g. ask the operator to enter the order manually into the
        POS). NOTE: This message contains the `OrderId`, but not the full order.
        It is assumed that you have stored/cached the full order details earlier
        in the flow - e.g. via the
        [/order-ready-for-preparation](https://uk.api.just-eat.io/docs/)
        webhook.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersWebhooksSendToPosFailedYaml'
      responses:
        '200':
          description: >-
            Respond with a 200 status code to indicate that you have received
            the notification.
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
      x-status: Draft
      x-webhook: 'Yes'
  /your-cancel-order-notification-endpoint:
    post:
      servers:
        - description: The URL that you have provided to us
          url: https://www.your-base-url.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - publicly-accessible
      summary: Cancel Order Notification
      operationId: JetConnectForManageOrderStatus_notifyOrderCancellation
      security:
        - Bearer: []
        - api_key: []
        - basic_auth: []
        - justeat_adfs: []
        - restaurantsignup_jwt: []
        - daas_jwt: []
      description: >-
        When an order for your integrated restaurant has been cancelled, the JET
        Connect Platform will notify the endpoint you provided via a `POST`
        request. Your endpoint must be able to receive requests in the format
        documented below.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        description: >-
          The request body we will provide to your endpoint with information
          about the order.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectOrderingUniversalConnectorCancelledOrderYaml
            examples:
              Cancelled order:
                value:
                  orderID: 38bbeb45-f520-4438-a44f-0fcdbb29e166
                  reason:
                    code: custCancelledMadeMistake
                  happenedAt: '2022-08-15T10:12:56.371917Z'
      responses:
        '200':
          description: >-
            To indicate that the request was successfully received, please
            return a `200` status code and the same payload we sent you as
            acknowledgement.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorCancelledOrderYaml
              examples:
                Cancelled order success:
                  value:
                    orderID: 38bbeb45-f520-4438-a44f-0fcdbb29e166
                    reason:
                      code: custCancelledOther
                    happenedAt: '2022-08-15T10:12:56.371917Z'
        '400':
          description: >-
            Bad Request: We assume that you received the payload but are unable
            to handle it in this form.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '401':
          description: >-
            Unauthorized: The credentials are missing or incorrect in our
            configuration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '403':
          description: >-
            Forbidden: We are not allowed to perform this action, possibly due
            to a misconfiguration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: >-
            Internal Server Error: We will take this as a failure on your side
            to process the request and will retry up to 5 times.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
      x-webhook: 'Yes'
      x-status: Draft
  /your-driver-status-notification-endpoint:
    post:
      servers:
        - description: The URL that you have provided to us
          url: https://www.your-base-url.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - publicly-accessible
      summary: Driver Status Notification
      operationId: JetConnectForManageOrderStatus_receiveDriverStatusUpdate
      security:
        - Bearer: []
        - api_key: []
        - basic_auth: []
        - justeat_adfs: []
        - restaurantsignup_jwt: []
        - daas_jwt: []
      description: >-
        JET Connect Platform will notify the endpoint you provided via a `POST`
        request with updates related to the driver status. Your endpoint must be
        able to receive requests in the format documented below.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        description: >-
          The request body we will provide to your endpoint with information
          about the new driver status.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectOrderingUniversalConnectorDriverStatusUpdateYaml
            examples:
              Driver status notification success:
                value:
                  orderID: 38bbeb45-f520-4438-a44f-0fcdbb29e166
                  driverStatus:
                    code: driverAtRestaurant
                  happenedAt: '2022-08-15T10:12:56.371917Z'
      responses:
        '200':
          description: >-
            To indicate that the request was successfully received, please
            return a `200` status code and the same payload we sent you as
            acknowledgement.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorDriverStatusUpdateYaml
              examples:
                Driver status notification success:
                  value:
                    orderID: 38bbeb45-f520-4438-a44f-0fcdbb29e166
                    driverStatus:
                      code: driverAtRestaurant
                    happenedAt: '2022-08-15T10:12:56.371917Z'
        '400':
          description: >-
            Bad Request: We assume that you received the payload but are unable
            to handle it in this form.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '401':
          description: >-
            Unauthorized: The credentials are missing or incorrect in our
            configuration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '403':
          description: >-
            Forbidden: We are not allowed to perform this action, possibly due
            to a misconfiguration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: >-
            Internal Server Error: We will take this as a failure on your side
            to process the request and will retry up to 5 times.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
      x-webhook: 'Yes'
      x-status: Draft
  /your-failed-order-for-backup-flow-endpoint:
    post:
      servers:
        - description: The URL that you have provided to us
          url: https://www.your-base-url.com
      tags:
        - JET Connect for Manage Order Status
        - jet-connect
        - ordering-universal-connector
        - publicly-accessible
      summary: Failed Order For Backup Flow
      operationId: JetConnectForManageOrderStatus_notifyFailedOrderBackupFlow
      security:
        - Bearer: []
        - api_key: []
        - basic_auth: []
        - justeat_adfs: []
        - restaurantsignup_jwt: []
        - daas_jwt: []
      description: >-
        JET Connect Platform will notify the endpoint you provided via a `POST`
        request with information related to an order that failed validation on
        our end so that you can initiate a (manual) backup flow. Your endpoint
        must be able to receive requests in the format documented below.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        description: >-
          The request body we will provide to your endpoint with information
          about the order that failed validation.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectOrderingUniversalConnectorFailedOrderYaml
      responses:
        '200':
          description: >-
            To indicate that the request was successfully received, please
            return a `200` status code and the same payload we sent you as
            acknowledgement.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorFailedOrderYaml
        '400':
          description: >-
            Bad Request: We assume that you received the payload but are unable
            to handle it in this form.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '401':
          description: >-
            Unauthorized: The credentials are missing or incorrect in our
            configuration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '403':
          description: >-
            Forbidden: We are not allowed to perform this action, possibly due
            to a misconfiguration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: >-
            Internal Server Error: We will take this as a failure on your side
            to process the request and will retry up to 5 times.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
      x-webhook: 'Yes'
      x-status: Draft
  /your-restaurant-temp-offline-endpoint:
    post:
      servers:
        - description: The URL that you have provided to us
          url: https://www.your-base-url.com
      tags:
        - JET Connect for Manage Partner Availability
        - jet-connect
        - ordering-universal-connector
        - publicly-accessible
      summary: Restaurant Temporarily Offline Notification
      operationId: JetConnectForManagePartnerAvailability_notifyRestaurantTempOffline
      security:
        - Bearer: []
        - api_key: []
        - basic_auth: []
        - justeat_adfs: []
        - restaurantsignup_jwt: []
        - daas_jwt: []
      description: >-
        JET Connect Platform will notify the endpoint you provided via a `POST`
        request with updates related to restaurant service type being set
        offline temporarily or back online. Your endpoint must be able to
        receive requests in the format documented below.
      parameters:
        - description: Descriptor of client or internal application
          name: x-jet-application
          in: header
          schema:
            type: string
          required: false
      requestBody:
        description: >-
          The request body we will provide to your endpoint with information
          about the restaurant service that was set offline/online.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JetConnectOrderingUniversalConnectorRestaurantTempOfflineStatusChangedYaml
            examples:
              Restaurant Temp Offline notification success:
                value:
                  restaurantId: 38bbeb45-f520-4438-a44f-0fcdbb29e166
                  lastChangedTimeStampUtc: '2022-08-15T10:12:56.371917Z'
                  collection:
                    isOffline: true
                    allowRestaurantOverride: true
                  delivery:
                    isOffline: true
                    allowRestaurantOverride: true
                  dineIn:
                    isOffline: true
      responses:
        '200':
          description: >-
            To indicate that the request was successfully received, please
            return a `200` status code and the same payload we sent you as
            acknowledgement.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorRestaurantTempOfflineStatusChangedYaml
              examples:
                Restaurant Temp Offline notification success:
                  value:
                    restaurantId: 38bbeb45-f520-4438-a44f-0fcdbb29e166
                    lastChangedTimeStampUtc: '2022-08-15T10:12:56.371917Z'
                    collection:
                      isOffline: true
                      allowRestaurantOverride: true
                    delivery:
                      isOffline: true
                      allowRestaurantOverride: true
                    dineIn:
                      isOffline: true
        '400':
          description: >-
            Bad Request: We assume that you received the payload but are unable
            to handle it in this form.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '401':
          description: >-
            Unauthorized: The credentials are missing or incorrect in our
            configuration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '403':
          description: >-
            Forbidden: We are not allowed to perform this action, possibly due
            to a misconfiguration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
        '429':
          description: >-
            Too Many Requests : Request not completed as server has received too
            many requests in a given amount of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4XxErrorSchemaYaml'
              example:
                fault:
                  traceId: 0HLOCKDKQPKIU
                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
                  errors:
                    - description: Couldn't complete request
        '500':
          description: >-
            Internal Server Error: We will take this as a failure on your side
            to process the request and will retry up to 5 times.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JetConnectOrderingUniversalConnectorErrorYaml
      x-webhook: 'Yes'
      x-status: Draft
components:
  responses:
    400BadRequestYaml:
      description: >-
        Bad Request. The server cannot or will not process the request due to
        something that is perceived to be a client error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/4XxErrorSchemaYaml'
          example:
            traceId: H3TKh4QSJUSwVBCBqEtkKw==
            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
            errors:
              - description: >-
                  Bad Request. The server cannot or will not process the request
                  due to something that is perceived to be a client error.
                errorCode: ERR400
    401UnauthorizedResponseYaml:
      description: >-
        Unauthorized. The client did not provide an authentication token or the
        token was invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/4XxErrorSchemaYaml'
          example:
            traceId: H3TKh4QSJUSwVBCBqEtkKw==
            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
            errors:
              - description: >-
                  Unauthorized. The client did not provide an authentication
                  token or the token was invalid.
                errorCode: ERR401
    403ForbiddenResponseYaml:
      description: Forbidden. The client is not allowed to perform this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/4XxErrorSchemaYaml'
          example:
            traceId: H3TKh4QSJUSwVBCBqEtkKw==
            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
            errors:
              - description: Forbidden
    405MethodNotAllowedYaml:
      description: >-
        Method Not Allowed. The method received in the request-line is known by
        the origin server but not supported by the target resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/4XxErrorSchemaYaml'
          example:
            traceId: H3TKh4QSJUSwVBCBqEtkKw==
            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
            errors:
              - description: >-
                  Method Not Allowed. The method received in the request-line is
                  known by the origin server but not supported by the target
                  resource.
                errorCode: ERR405
    500ErrorResponseYaml:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/500ErrorSchemaYaml'
          example:
            traceId: H3TKh4QSJUSwVBCBqEtkKw==
            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
            errors:
              - description: Internal Server Error
    503ServiceUnavailableResponseYaml:
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: '#/components/headers/RetryAfterYaml'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/5XxErrorSchemaYaml'
          example:
            traceId: H3TKh4QSJUSwVBCBqEtkKw==
            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
            errors:
              - description: Service Unavailable
    JetConnectMenusUtfConnectorBadRequestResponseYaml:
      description: The request is malformed, needs adjusting
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorErrorResponseYaml'
    JetConnectMenusUtfConnectorForbiddenResponseYaml:
      description: An aspect of the request is forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorErrorResponseYaml'
    JetConnectMenusUtfConnectorServerErrorResponseYaml:
      description: The request is okay, but upstream communication failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorErrorResponseYaml'
    JetConnectOrderReportingConnectorSimpleOrdersResponseYaml:
      description: Returns information about orders.
      headers:
        cache-control:
          $ref: '#/components/headers/CacheControlYaml'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartnerManagementGetBrandOrdersResponse'
          examples:
            failures:
              value:
                - error:
                    category: Edge Validation
                    errorID: 46b5465f-33ed-4eab-aeb9-fa0d034d274b
                    errorMessage: >-
                      validation error: top level item: {name: "Double Sausage
                      and Egg McMuffin® Meal", reference:
                      "a4d7c26b-8dcd-5303-b377-d9ee7d20616c"} not present in
                      restaurant's menu
                    errorCode: UNKNOWN
                    resolution: ''
                    matchedRegex: ''
                    errorName: Edge Validation
                    level: BRAND
                  location:
                    id: '123544'
                    name: McDonald's® - Stevenage II
                    reference: '17529'
                  orderID: cltiw3ge0eo2mto9v2sirg
                  thirdPartyOrderReference: abcde12345
                  placedAt: '2021-12-10T09:24:49Z'
                  sendToPosStatus: failure
                  status: failure
                - error:
                    category: POS Authentication
                    errorCode: ''
                    errorID: 6a74daf4-7848-487d-ba88-f9003e1a955c
                    errorMessage: >-
                      The request sent to the POS is malformed, contact the Flyt
                      dev team for support. Original POS message: Response HTTP
                      Status: 406. Response error key:
                      client.unacceptable_content_type.
                    errorName: Malformed Request
                    level: BRAND
                    matchedRegex: '[Mm]alformed'
                    resolution: Not Actionable.
                  location:
                    id: '126291'
                    name: McDonald's® - Oldbury, Birchley Island
                    reference: '19650'
                  orderID: 8it0oznsbk2g52hynbgtyg
                  placedAt: '2021-12-10T09:11:22.8775321Z'
                  sendToPosStatus: failure
                  status: failure
                  thirdPartyOrderReference: '1493555166'
                - error:
                    category: POS Authentication
                    errorCode: ''
                    errorID: 6a74daf4-7848-487d-ba88-f9003e1a955c
                    errorMessage: >-
                      The request sent to the POS is malformed, contact the Flyt
                      dev team for support. Original POS message: Response HTTP
                      Status: 406. Response error key:
                      client.unacceptable_content_type.
                    errorName: Malformed Request
                    level: BRAND
                    matchedRegex: '[Mm]alformed'
                    resolution: Not Actionable.
                  location:
                    id: '125941'
                    name: McDonald's® - North Moor Road
                    reference: '19646'
                  orderID: j5jm3kcfvksb0th7zfovrg
                  placedAt: '2021-12-09T13:58:46.866209Z'
                  sendToPosStatus: failure
                  status: failure
                  thirdPartyOrderReference: '1492655491'
            successes:
              value:
                - location:
                    id: '123358'
                    name: McDonald's® - Hamilton Palace
                    reference: '17573'
                  orderID: xmvvn5xf8u2nfmmsz0sfza
                  placedAt: '2021-12-09T14:01:39.9309303Z'
                  sendToPosStatus: ''
                  status: success
                  thirdPartyOrderReference: '1492656946'
                - location:
                    id: '125209'
                    name: McDonald's® - Milngavie
                    reference: '18940'
                  orderID: gzrtpzrtqkyo6kwimnjqiq
                  placedAt: '2021-12-09T13:52:00.9318278Z'
                  sendToPosStatus: ''
                  status: success
                  thirdPartyOrderReference: '1492651998'
                - location:
                    id: '124281'
                    name: McDonald's® - Gallagher Retail Park Dt
                    reference: '17680'
                  orderID: pd716rg9ce2udg4ejv3m8w
                  placedAt: '2021-12-09T13:50:46.0250191Z'
                  sendToPosStatus: ''
                  status: success
                  thirdPartyOrderReference: '1492651279'
    JetConnectOrderReportingConnectorSingleOrderResponseYaml:
      description: Returns information about a single order.
      headers:
        cache-control:
          $ref: '#/components/headers/CacheControlYaml'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JetConnectOrderReportingConnectorOrderYaml'
          examples:
            failure:
              value:
                orderDetails:
                  error:
                    category: Edge Validation
                    errorCode: UNKNOWN
                    errorID: 46b5465f-33ed-4eab-aeb9-fa0d034d274b
                    errorMessage: >-
                      validation error: top level item: {name: "Double Sausage
                      and Egg McMuffin® Meal", reference:
                      "a4d7c26b-8dcd-5303-b377-d9ee7d20616c"} not present in
                      restaurant's menu
                    errorName: Edge Validation
                    resolution: ''
                    matchedRegex: ''
                    level: BRAND
                  location:
                    id: 123358X
                    name: McDonald's® - Hamilton Palace
                    reference: '17573'
                  orderID: cltiw3ge0eo2mto9v2sirg
                  thirdPartyOrderReference: abcde12345
                  placedAt: '2021-12-10T09:24:49Z'
                  status: failure
                  sendToPosStatus: failure
                payload: ''
                pos: int-mcdonalds
            success:
              value:
                orderDetails:
                  location:
                    id: 123358X
                    name: McDonald's® - Hamilton Palace
                    reference: '17573'
                  orderID: xmvvn5xf8u2nfmmsz0sfza
                  placedAt: '2021-12-09T14:01:39.9309303Z'
                  sendToPosStatus: ''
                  status: success
                  thirdPartyOrderReference: '1492656946'
                payload: >-
                  {"restaurant":{"key":"JE:UK:123358","tenant":"JE:UK","id":"123358"},"delivery_by_delivery_partner_order":{"id":"xmvvn5xf8u2nfmmsz0sfza","location":{"id":123358,"timezone":"Europe/London"},"driver":{"first_name":"Order","last_name":"xmvvn5xf8u2nfmmsz0sfza","phone_number":"00000000000"},"items":[{"name":"20
                  Chicken McNuggets®
                  Sharebox","plu":"1420","children":[{"name":"Ketchup
                  Dip","plu":"CHOICE|1|0;4650:10000074|1:4#Z0"},{"name":"Ketchup
                  Dip","plu":"CHOICE|1|0;4650:10000074|2:4#Z0"},{"name":"Ketchup
                  Dip","plu":"CHOICE|1|0;4650:10000074|3:4#Z0"},{"name":"Ketchup
                  Dip","plu":"CHOICE|1|0;4650:10000074|4:4#Z0"}],"price":459},{"name":"Oreo®
                  McFlurry®","plu":"6554","price":99},{"name":"Oreo®
                  McFlurry®","plu":"6554","price":99}],"created_at":"1639058499","channel":{"id":32,"name":"Just
                  Eat"},"collect_at":"1639058502","collection_notes":"Grey
                  ascensos across from main on call whne outside
                  07934209118","kitchen_notes":"Grey ascensos across from main
                  on call whne outside
                  07934209118","third_party_order_reference":"1492656946","total":657,"tender_type":"Just
                  Eat","payment":{"items_in_cart":{"inc_tax":657},"adjustments":[{"name":"deliveryFee","price":{"inc_tax":350}},{"name":"serviceCharge","price":{"inc_tax":50}},{"name":"bagfee","price":{"inc_tax":10}}],"final":{"inc_tax":1067}},"delivery":{"first_name":"******","last_name":"******","phone_number":"******","line_one":"******","line_two":"******","city":"******","postcode":"******","email":"******","coordinates":{},"phone_masking_code":"******"},"extras":{"asap":"false","justEatCustomerId":"42793273","justEatOrderReference":"xmvvn5xf8u2nfmmsz0sfza"}}}
                pos: int-mcdonalds
    JetConnectRestaurantAvailabilityApiBadRequestResponseYaml:
      description: The request is malformed, needs adjusting
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiErrorResponseYaml
    JetConnectRestaurantAvailabilityApiForbiddenResponseYaml:
      description: An aspect of the request is forbidden
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiErrorResponseYaml
    JetConnectRestaurantAvailabilityApiInternalServerErrorResponseYaml:
      description: The request is okay, but upstream communication failed
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiErrorResponseYaml
    JetConnectRestaurantAvailabilityApiNotFoundResponseYaml:
      description: The restaurant was not found
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiErrorResponseYaml
  schemas:
    4XxErrorSchemaYaml:
      description: A HTTP 4xx error response
      properties:
        fault:
          description: Details of the fault.
          required:
            - faultId
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
            errors:
              items:
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error
                    type: string
                type: object
              type: array
          type: object
      type: object
      example:
        traceId: H3TKh4QSJUSwVBCBqEtkKw==
        faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
        errors:
          - description: An error has occured because of an issue in the request
            errorCode: ERR401
    500ErrorSchemaYaml:
      description: A HTTP 500 error response
      properties:
        fault:
          description: Details of the fault.
          required:
            - faultId
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
            errors:
              items:
                properties:
                  description:
                    description: >-
                      If returned, the only value returned will be Internal
                      Server Error"
                    enum:
                      - Internal Server Error
                    type: string
                type: object
              type: array
          type: object
      type: object
    5XxErrorSchemaYaml:
      description: A HTTP 5xx error response
      properties:
        fault:
          description: An object representing the nature of the failure.
          required:
            - faultId
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
            errors:
              description: The list of errors.
              items:
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error
                    type: string
                type: object
              type: array
          type: object
      type: object
    EchoHttpErrorYaml:
      description: A standard http error.
      type: object
      properties:
        message:
          description: A message explaining the error.
          type: string
      required:
        - message
    PagingAfterCursorYaml:
      description: Consists of pagination information.
      type: object
      properties:
        cursors:
          description: Consists of cursors markers used in forward only pagination.
          properties:
            after:
              description: >-
                Cursor parameter to use in the next request to the resource to
                fetch the next page of data. Value is null when reached end of
                the set.
              nullable: true
              type: string
          type: object
      example:
        cursors:
          after: NDMyNzQyODI3OTQw
    AccountcreditAccountCreditEntryYaml:
      description: A request to retrieve account credit history
      properties:
        description:
          description: Account credit description
          type: string
        transactionDate:
          description: Transaction date
          type: string
          format: date-time
        amount:
          description: Amount
          type: number
          format: decimal
        transactionType:
          description: Transaction types - PAYCODE, ORDER, BADORDER, REFUND, CREDIT
          type: string
        refundReason:
          description: Refund reason
          type: string
        source:
          description: Source of Account credit creation
          type: string
        orderId:
          description: Order Id
          type: integer
          format: int32
        paycode:
          description: Paycode
          type: string
        refundAmount:
          description: Used when account-credit has been refunded against a bad-order
          type: number
          format: decimal
      type: object
    AccountcreditAccountCreditHistoryResponseYaml:
      description: Account credit history response
      properties:
        balance:
          description: Current balance
          type: number
          format: decimal
        entries:
          items:
            $ref: '#/components/schemas/AccountcreditAccountCreditEntryYaml'
          type: array
      example:
        balance: 20
        entries:
          - description: //when paycode redeemed - account-credit added
            transactionDate: '2016-03-01T23:20:50.520Z'
            amount: 20
            paycode: SADHJG23
            transactionType: PAYCODE
          - description: //when account-credit is consumed against order
            transactionDate: '2016-03-02T23:20:50.520Z'
            amount: -10
            orderId: 12345
            transactionType: ORDER
          - description: >-
              %BADORDER|10.0000|12345 //when account-credit has been refunded
              against a bad-order
            transactionDate: '2016-03-03T23:20:50.520Z'
            amount: 0
            orderId: 12345
            transactionType: BADORDER
            refundAmount: 10
          - description: >-
              //generic account credit type that can be used for MGM or Auto
              Account Credit
            transactionDate: '2016-03-04T23:20:50.520Z'
            amount: 10
            transactionType: CREDIT
      type: object
    AccountcreditConsumePaycodeResponseYaml:
      description: The response to consuming a Paycode
      properties:
        amount:
          description: Amount
          type: number
          format: decimal
      type: object
    AddressgeocodingAddressGeocodingRequestYaml:
      required:
        - addressLines
      properties:
        addressLines:
          description: >-
            Lines of the consumers address, a minimum of 3 is preferred but only
            1 is required.
          items:
            type: string
          minItems: 1
          type: array
      example:
        addressLines:
          - 2 Fleet Place
          - Fleet Place
          - London
          - EC4M 7RF
      type: object
    AddressgeocodingAreaYaml:
      description: Extended area information
      type: object
      properties:
        fullFriendlyName:
          description: Area friendly name for display information
          type: string
        fullCanonicalName:
          description: Canonical name for restaurant area search
          type: string
    AddressgeocodingGeometryYaml:
      description: Geometry information for consumers location
      properties:
        coordinates:
          description: first element of the array represents longitude, second latitude
          maxItems: 2
          type: array
          minItems: 2
          items:
            format: double
            type: number
        type:
          description: type of primitive
          type: string
      example:
        coordinates:
          - -0.10358
          - 51.51469
        type: Point
      type: object
    AddressgeocodingPropertiesYaml:
      description: Geometry information for consumers location
      properties:
        geocodingProvider:
          description: the geocoding provider
          type: string
        accuracyScore:
          description: Just Eat Takeaway address accuracy score
          format: integer
          type: number
          default: 80
          minimum: 1
          maximum: 100
        matchScore:
          description: Just Eat Takeaway address match score
          format: integer
          type: number
          default: 100
          minimum: 1
          maximum: 100
        formattedAddress:
          description: Address formatted according to country addressing convention
          type: string
        structuredAddress:
          description: >-
            Example key-value pairs describing address fields. These fields are
            dynamic and are returned if available from the data provider. More
            fields may be added depending on the request.
          type: object
          properties:
            streetNumberOrBuilding:
              description: Address field describing street/building number
              type: string
            street:
              description: Address field describing street address part
              type: string
            line1:
              description: >-
                Address field describing the first address line, usually a
                combination of street number and street
              type: string
            city:
              description: Address field describing city address part
              type: string
            countryCode:
              description: Address field describing country address part
              type: string
            postcode:
              description: Address field describing postcode address part
              type: string
          additionalProperties:
            description: Additional address fields that may be assigned if available
            type: object
            properties:
              adminAreaLevel1:
                description: Address field describing admin area level 1 address part
                type: string
              adminAreaLevel2:
                description: Address field describing admin area level 2 address part
                type: string
              adminAreaLevel3:
                description: Address field describing admin area level 3 address part
                type: string
              country:
                description: Address field describing country (long form) address part
                type: string
              locality:
                description: Address field describing locality address part
                type: string
              political:
                description: Address field describing political address part
                type: string
              political2:
                description: Address field describing political 2 address part
                type: string
              political3:
                description: Address field describing political 3 address part
                type: string
              premise:
                description: Address field describing premise address part
                type: string
              route:
                description: Address field describing route address part
                type: string
              streetNumber:
                description: Address field describing street number address part
                type: string
              building:
                description: Address field describing building address part
                type: string
        area:
          $ref: '#/components/schemas/AddressgeocodingAreaYaml'
      example:
        geocodingProvider: Google
        accuracyScore: 100
        matchScore: 100
        structuredAddress:
          streetNumberOrBuilding: '2'
          street: Fleet Place
          line1: 2 Fleet Place
          city: London
          postcode: EC4M 7RF
          countryCode: GB
        formattedAddress: Fleet Place House, 2 Fleet Pl, London EC4M 7RF, UK
        area:
          fullFriendlyName: Fleet Street
          fullCanonicalName: ec4-fleetstreet
      type: object
    AddressgeocodingReverseGeocodingResponseYaml:
      description: Best guess address for passed lat-long
      properties:
        geometry:
          description: Geometry information for consumers location
          properties:
            coordinates:
              description: longitude and latitude
              maxItems: 2
              type: array
              minItems: 2
              items:
                format: double
                type: number
            type:
              description: type of primitive
              type: string
          type: object
        properties:
          description: feature metadata
          properties:
            createdDate:
              description: Location context generated date
              format: date-time
              type: string
            entryMethod:
              description: Source of context
              type: object
              properties:
                referrer:
                  description: The page where context was generated
                  type: string
                method:
                  description: Source of context
                  type: string
            area:
              $ref: '#/components/schemas/AddressgeocodingAreaYaml'
            address:
              description: list of address chunks
              items:
                type: string
              type: array
            structuredAddress:
              description: Key-value pairs describing address fields
              type: object
              properties:
                streetNumber:
                  description: Address field describing street/building number
                  type: string
                street:
                  description: Address field describing street address part
                  type: string
                line1:
                  description: >-
                    Address field describing the first address line, usually a
                    combination of street number and street
                  type: string
                locality:
                  description: Address field describing locality address part
                  type: string
                city:
                  description: Address field describing city address part
                  type: string
                country:
                  description: Address field describing country address part
                  type: string
                postcode:
                  description: Address field describing postcode address part
                  type: string
            formattedAddress:
              description: Descriptive delivery address string
              type: string
            source:
              description: The origin of the location context
              type: object
              properties:
                systemId:
                  description: >-
                    Originating location provider for Location context. (Loqate,
                    Google)
                  type: string
                externalId:
                  description: Google Place Id, Loqate Id
                  type: string
            countryCode:
              description: Two digit country code (ISO-3166 alpha-2)
              type: string
          type: object
        type:
          description: type of primitive
          type: string
      example:
        geometry:
          coordinates:
            - -0.01938
            - 51.10234
          type: Point
        properties:
          createdDate: '2021-05-26T14:52:35.5444292+01:00'
          entryMethod:
            referrer: home
            method: addressgeocodingapi
          area:
            fullFriendlyName: CM1 4QQ, Essex
            fullCanonicalName: cm1-essex
          address:
            - Flat 3
            - Greystoke House
            - 127 High Street
            - Chelmsford
            - Essex
            - CM1 4QQ
          structuredAddress:
            streetNumber: 11a
            street: High Street
            line1: Flat 3, Greystoke House, 127 High Street
            locality: Chelmsford
            city: Essex
            postcode: CM14QQ
          formattedAddress: Flat 3, Greystoke House, 127 High Street, Chelmsford, Essex, CM14QQ
          source:
            systemId: Google
            externalId: ChIJJcYS5lIbdkgRDCfBhM3aYms
          countryCode: GB
        type: Feature
      type: object
    AttemptedDeliveryAttemptedDeliveryCreatedYaml:
      properties:
        Reason:
          description: The reason for creating the attempted delivery
          type: string
        OrderId:
          description: The id of the order
          type: string
        RestaurantId:
          description: The id of the restaurant
          type: number
        Tenant:
          description: The tenant associated with the order
          type: string
      type: object
      example:
        Reason: Customer did not answer the door
        OrderId: wiej234idf09i29jijgf4
        RestaurantId: 110230
        Tenant: uk
    AttemptedDeliveryAttemptedDeliveryResolvedYaml:
      type: object
      properties:
        Tenant:
          description: The tenant of the restaurant the order was placed at
          enum:
            - uk
            - dk
            - es
            - ie
            - it
            - 'no'
            - au
            - nz
          type: string
        Resolution:
          description: Details of the resolution to the query
          properties:
            Redelivery:
              description: >-
                The redelivery properties. Only required if the order is being
                redelivered, otherwise null
              properties:
                Status:
                  description: The current status of the order
                  enum:
                    - driver_at_address
                    - repreparing
                  type: string
                CustomerTimeZone:
                  description: >-
                    The IANA TZ database name of the time zone the customer that
                    placed the order is in
                  type: string
                NewDueDate:
                  description: >-
                    Updated due date for delivery of the order in ISO 8601
                    format
                  format: date-time
                  type: string
              type: object
            Cancellation:
              description: >-
                The cancellation properties. Only required if the order has been
                cancelled, otherwise null
              properties:
                Reason:
                  description: The reason for cancelling the order
                  enum:
                    - new_address_not_within_area
                    - unable_to_reprepare
                    - driver_not_available
                    - area_unsafe
                    - customer_doesnt_want_anymore
                  type: string
              type: object
            Type:
              description: >-
                The type of resolution to the query, either cancellation or
                redelivery
              enum:
                - order_cancelled
                - redeliver_order
              type: string
          type: object
        OrderId:
          description: >-
            The ID of the order for which an attempted delivery query has been
            resolved
          type: string
      example:
        Tenant: uk
        Resolution:
          Redelivery:
            Status: repreparing
            CustomerTimeZone: Europe/London
            NewDueDate: '2018-03-10T14:45:28.000Z'
          Type: redeliver_order
        OrderId: wiej234idf09i29jijgf4
    AttemptedDeliveryAttemptedDeliveryResponseReceivedYaml:
      type: object
      properties:
        Tenant:
          description: The tenant
          type: string
        Update:
          description: The update message
          type: string
        OrderId:
          description: The order Id
          type: string
        Notes:
          description: Additional delivery notes
          type: string
      example:
        Tenant: uk
        Update: Please redeliver
        OrderId: wiej234idf09i29jijgf4
        Notes: Please press 123 on the door
    AuthenticationserviceConnectAuthorizeRequestYaml:
      description: A request to initiate the Authentication Code flow
      required:
        - response_type
        - client_id
        - scope
        - redirect_uri
      properties:
        response_type:
          description: >-
            Determines the mechanism the server uses to authorize the creation
            of the tokens. The values can be combined to specify more than one
            token type.

            * `id_token` requests an identity token (only identity scopes are
            allowed)

            * `token` requests an access token (only resource scopes are
            allowed)

            * `code` requests an authorization code

            * `id_token token` token requests an identity token and an access
            token

            * `code id_token` requests an authorization code and identity token

            * `code id_token token` requests an authorization code, identity
            token and access token
          enum:
            - id_token
            - token
            - code
          type: string
        client_id:
          description: The identifier of the client.
          type: string
        scope:
          description: >-
            One or more registered scopes to return. This can be the known
            values or custom scopes. This will typically be `openid`, to request
            the OpenID Connect scopes, and additionally `profile` when you
            require an identity token.

            `offline_access` is required if you require a refresh token in the
            subsequent token request.
          type: string
          enum:
            - openid
            - profile
            - offline_access
            - mobile_access
        redirect_uri:
          description: Must exactly match one of the allowed redirect URIs for that client.
          type: string
        state:
          description: >-
            The server will echo back the state value on the token response.
            This is for round-tripping state between client and provider,
            correlating request and response for CSRF/replay protection
            (recommended).
          type: string
        code_challenge:
          description: Sends the code challenge for PKCE.
          type: string
        code_challenge_method:
          description: >-
            A method that was used to derive the code challenge for PKCE.

            * `plain` is the default if not specified. Indicates the code
            challenge is using plain text (not recommended).

            * `S256` indicates the challenge is hashed using SHA-256.
          type: string
          enum:
            - plain
            - S256
        acr_values:
          description: Allows passing in additional authentication-related information.
          type: string
        response_mode:
          description: |-
            Determines how the authorize response is returned.
            * `form_post` encodes the response as HTML form values.
            * `query` sends the response as part of the query string.
            * `fragment` encodes the response into a URL fragment.
          type: string
          enum:
            - form_post
            - query
            - fragment
        request:
          description: >-
            Instead of providing all parameters as individual query string
            parameters, you can provide a subset, or all of them, as a JWT.
          type: string
        request_uri:
          description: URL of a pre-packaged JWT containing request parameters.
          type: string
        nonce:
          description: >-
            The API will echo back the nonce value in the identity token (this
            is for replay protection). Required for identity tokens via implicit
            grant.
          type: string
        prompt:
          description: >-
            * (empty/null) - use the default behaviour of showing the login UI.

            * `none` - no UI will be shown during the request. If this is not
            possible (e.g. because the user has to sign in or consent) an error
            is returned and the login UI will be shown, even if the user is
            already signed-in and has a valid session.
          type: string
          enum:
            - 'null'
            - none
        login_hint:
          description: Can be used to pre-fill the username field on the login page.
          type: string
        ui_locales:
          description: >-
            End-User's preferred languages and scripts for the user interface,
            represented as a space-separated list of language tag values,
            ordered by preference.
          type: string
        max_age:
          description: >-
            If the user's logon session exceeds the maximum age (in seconds),
            the login UI will be shown.
          type: integer
      example:
        response_type: code
        client_id: client1
        scope: openid
        redirect_uri: https://myapp.com/signin-oidc
        state: 1234asd
        code_challenge: asdf879
        code_challenge_method: S256
        response_mode: query
        acr_values: tenant:uk
    AuthenticationserviceEndSessionBffRequestYaml:
      description: A request to the BFF logout endpoint to end a user's session
      required:
        - idTokenHint
      properties:
        idTokenHint:
          description: The identity token received from authentication
          type: string
      example:
        idTokenHint: eyJraWQiO.ewogImlzcyI6IC.rHQjEmQ
    AuthenticationserviceEndSessionBffResponseYaml:
      description: A response from the session end endpoint
      required:
        - returnUrl
      properties:
        returnUrl:
          description: A return URL used by the front-end to redirect the user
          type: string
      example:
        returnUrl: https://www.just-eat.co.uk
    AuthenticationserviceExternalProviderResponseYaml:
      description: >-
        A response providing information required for initiating a login via an
        external provider.
      required:
        - authorization_endpoint
      properties:
        authorization_endpoint:
          description: >-
            The URL to direct the user to the external provider for
            authentication.
          type: string
      example:
        authorization_endpoint: https://www.externalprovider.com/login
    AuthenticationserviceRecaptchaStatusResponseYaml:
      description: A response which defines the current requirements surrounding Recaptcha
      required:
        - recaptchaChallengeRequired
      properties:
        recaptchaChallengeRequired:
          description: If clients need to send Recaptcha challenge tokens with requests.
          type: boolean
        siteKey:
          description: >-
            The public key that clients should use when trying to render the
            Recaptcha.
          type: string
      example:
        recaptchaChallengeRequired: true
        siteKey: 6Lcl2P8nAAAAAK9rO7gLZW2Uc_HKsDwAcecd9UH1
    AuthenticationserviceValidateOtacResponseYaml:
      description: A response to validate a consumer's one time access code (OTAC)
      required:
        - validatedReturnUrl
      properties:
        validatedReturnUrl:
          description: >-
            A validated URL used by the front end to redirect the user,
            containing the OTAC.
          type: string
      example:
        validatedReturnUrl: /connect/authorize/callback?redirect_uri=client&otac=639872722
    AuthenticationserviceValidateOtpCredentialsRequestYaml:
      description: A request to validate a consumer's one time password (OTP) credentials
      required:
        - otp
        - otpToken
      properties:
        otp:
          description: The one time password sent to the consumer
          type: string
        otpToken:
          description: The one time password token
          type: string
        returnUrl:
          description: The return URL from the request parameters
          type: string
      example:
        otp: 96437B
        otpToken: J5hXQVVFsiR3vs_OQD_AxyZ
        returnUrl: https://mydomain.com?returnUrl=someinfo
    AuthenticationserviceValidateOtpCredentialsSuccessResponseYaml:
      description: A response to validate a consumer's one time password (OTP) credentials
      required:
        - validatedReturnUrl
      properties:
        validatedReturnUrl:
          description: A validated URL used by the front end to redirect the user
          type: string
      example:
        validatedReturnUrl: https://www.mydomain.com/AuthCodeFlow
    AuthenticationserviceValidatePasswordCredentialsForbiddenYaml:
      description: >-
        A response to validate a consumer's password credential when additional
        credentials are required
      required:
        - validatedReturnUrl
        - otpToken
        - emailAddress
      properties:
        validatedReturnUrl:
          description: >-
            A validated URL used by the front end to redirect the user once the
            OTP process is complete.
          type: string
        otpToken:
          description: A one time password token passed to the OTP page.
          type: string
        emailAddress:
          description: >-
            The email address the one time password email was sent to, displayed
            on the OTP Page.
          type: string
      example:
        otpToken: AA1AA1_###!!
        emailAddress: happy_consumer@je_test.com
        validatedReturnUrl: http://www.mydomain.com/AuthCodeFlow
    AuthenticationserviceValidatePasswordCredentialsRequestYaml:
      description: A request to validate a consumer's password credential
      required:
        - username
        - password
      properties:
        username:
          description: Username used to select the correct consumer credentials
          type: string
        password:
          description: Password credential
          type: string
        returnUrl:
          description: The return URL from the request parameters
          type: string
        gRecaptchaResponse:
          description: >-
            Optional token response after the user has successfully filled out a
            Google Recaptcha.
          type: string
      example:
        username: james.smith@adomain.com
        password: secretInfo
        returnUrl: https://mydomain.com?returnUrl=someinfo
        gRecaptchaResponse: >-
          03AFcWeA7FoKR5fX8LFWdT8Vs0mlIsN7ilAt0sfTKCXriZIa3KcVaQN8hnlcXhjC3YncbA5UJy6KlpfzXMJjUSHrVPMbGQ600sgxIPLXKu68u1clUbgQ8cXhccNDSFQdPt5FIjZ0i04te8KqTmmyc8PObEXlQAdoKCFxc5tAu7vS8hb5sbyNtLaNB7XGGerKZCEPkAnmCKA8Xbc9e46q4j0NxVU8UA_QQPwepx49bNmdT4xYGNl1cQVOeMSTPkF3XmmRujCrnJfZjqL9vKcUdWVpovdlXfTsjwR2DgpdHTEUyFuTuCWCsoeeF76diCwHk1_FODnEk1pNZaNDoi_tsbyYJK265jSEVMFiRzv7hsc2i10t9FdzX2Wu4tYTEg0YdbMFo7aMYVFHDglLCXyWWYIFDYXgWR4TuRVPvdwKrKfZcdS6PDrAj95KYyxwC-oT3CRdMcP5ALBMfk6V2C3nXssH8-KfD7pe0aW5SeMcL5-M0M9z2ZLjtiPky5_Wijnmkmn0JQpTOKT2VaesBGZtUn1-1gqwqEYZ-QTu_OpMVC7tB3rrZ00gqokd8AsOxKd3M9sFCmGyALeMto
    AuthenticationserviceValidatePasswordCredentialsResponseYaml:
      description: A response to validate a consumer's password credential
      required:
        - validatedReturnUrl
      properties:
        validatedReturnUrl:
          description: A validated URL used by the front end to redirect the user
          type: string
      example:
        validatedReturnUrl: http://www.mydomain.com/AuthCodeFlow
    Authorization400ConnectTokenResponseYaml:
      properties:
        error:
          description: >-
            The error code representing the error that occurred. Can also
            include custom values. More info at RFC6749#section-5.2

            - invalid_request:

            -       The request is missing a required parameter, includes an

            -       unsupported parameter value (other than grant type),

            -       repeats a parameter, includes multiple credentials,

            -       utilizes more than one mechanism for authenticating the

            -       client, or is otherwise malformed.

            - invalid_client

            -         Client authentication failed (e.g., unknown client, no

            -         client authentication included, or unsupported

            -         authentication method).  The authorization server MAY

            -         return an HTTP 401 (Unauthorized) status code to indicate

            -         which HTTP authentication schemes are supported.  If the

            -         client attempted to authenticate via the "Authorization"

            -         request header field, the authorization server MUST

            -         respond with an HTTP 401 (Unauthorized) status code and

            -         include the "WWW-Authenticate" response header field

            -         matching the authentication scheme used by the client.

            - invalid_grant

            -         The provided authorization grant (e.g., authorization

            -         code, resource owner credentials) or refresh token is

            -         invalid, expired, revoked, does not match the redirection

            -         URI used in the authorization request, or was issued to

            -         another client.

            - unauthorized_client

            -         The authenticated client is not authorized to use this

            -         authorization grant type.

            - unsupported_grant_type

            -         The authorization grant type is not supported by the

            -         authorization server.

            - invalid_scope

            -         The requested scope is invalid, unknown, malformed, or

            -         exceeds the scope granted by the resource owner.

            - mfa_required

            -         A custom response. The MFA flow has been initiated which

            -         means a one time code is required to finish the
            authentication 

            -         via the mfa_otp grant type. 
          enum:
            - invalid_request
            - invalid_client
            - invalid_grant
            - unauthorized_client
            - unsupported_grant_type
            - invalid_scope
            - mfa_required
          type: string
        error_description:
          description: OPTIONAL. A description of the error that occurred.
          type: string
        error_uri:
          description: >-
            OPTIONAL. URI identifying a human-readable web page with information
            about the error.
          type: string
      type: object
    AuthorizationConnectTokenRequestYaml:
      required:
        - client_id
        - grant_type
      properties:
        redirect_uri:
          description: Required for the `authorization_code` grant type
          type: string
        username:
          description: Resource owner username (required for `password` grant type)
          type: string
        password:
          description: Resource owner password (required for `password` grant type)
          type: string
        client_secret:
          description: >-
            The client secret - either in the post body, or as a basic
            authentication header.
          type: string
        client_id:
          description: client identifier
          type: string
        code_verifier:
          description: PKCE proof key
          type: string
        code:
          description: >-
            The authorization code (required for `authorization_code` grant
            type)
          type: string
        acr_values:
          description: >-
            Allows passing in additional authentication related information for
            the `password` grant type - the following  are special proprietary
            `acr_values`:

            - `idp:name_of_idp` bypasses the login/home realm screen and
            forwards the user directly to the selected identity provider (if
            allowed per client configuration)

            - `tenant:name_of_tenant` can be used to pass a tenant name to the
            token endpoint
          type: string
        refresh_token:
          description: The refresh token (required for `refresh_token` grant type)
          type: string
        grant_type:
          description: >-
            The grant type which determines the type of flow. A custom value is
            also allowed.
          enum:
            - authorization_code
            - client_credentials
            - password
            - refresh_token
            - mfa_otp
            - otac
            - implicit
            - urn:ietf:params:oauth:grant-type:device_code
            - urn:ietf:params:oauth:grant-type:saml2-bearer
            - urn:ietf:params:oauth:grant-type:jwt-bearer
            - urn:ietf:params:oauth:grant-type:token-exchange
            - urn:openid:params:grant-type:ciba
          type: string
        device_code:
          description: >-
            The device code (required for
            `urn:ietf:params:oauth:grant-type:device_code` grant type)
          type: string
        scope:
          description: >-
            One or more registered scopes. If not specified, a token for all
            explicitly  allowed scopes will be issued.
          type: string
    AuthorizationConnectTokenResponseYaml:
      properties:
        access_token:
          description: >-
            The access token. This is a JSON web token (JWT) encoded as Base64
            URL-encoding. This is returned if the `response_type` included
            `token`.
          type: string
        expires_in:
          description: The number of seconds until the access token expires.
          type: integer
        id_token:
          description: >-
            An ID token. This is a JSON web token (JWT) encoded as Base64
            URL-encoding. 

            This is returned if the `response_type` included `id_token`.
          type: string
        token_type:
          description: >-
            This is always `bearer`, and is returned only  when `token` is
            specified as a `response_type`.
          type: string
        scope:
          description: The original scopes you provided.
          type: string
      type: object
    AuthorizationCreateUserRequestYaml:
      properties:
        EmailAddress:
          description: User's email address
          type: string
        GivenName:
          description: User's given name
          type: string
        FamilyName:
          description: User's family name
          type: string
        Password:
          description: User's password
          type: string
        Tenant:
          description: Tenant
          type: string
        DeviceId:
          description: Device ID
          type: string
        ClientIp:
          description: Client IP
          type: string
        RecaptchaAnswer:
          description: Recaptcha answer
          type: string
        Device:
          description: Device name
          type: string
        Sdk:
          description: SDK version
          type: string
        Language:
          description: Language
          type: string
        UserAgent:
          description: User agent
          type: string
      type: object
    AutocompleteAutocompleteGetAddressDetailResponseYaml:
      properties:
        type:
          description: Root GeoJSON object
          type: string
        features:
          description: Returned address details
          type: array
          items:
            description: Best guess location for the specified geolocation.
            type: object
            properties:
              geometry:
                $ref: '#/components/schemas/AutocompleteGeometryYaml'
              properties:
                description: GeoJSON Feature metadata.
                properties:
                  createdDate:
                    description: Location context generated date
                    format: date-time
                    type: string
                  entryMethod:
                    description: Source of context
                    type: object
                    properties:
                      method:
                        description: Source of context
                        type: string
                  address:
                    description: List of address parts.
                    items:
                      type: string
                    type: array
                  countryCode:
                    description: Two digit country code (ISO-3166 alpha-2)
                    type: string
                  area:
                    description: Extended area information
                    type: object
                    properties:
                      fullFriendlyName:
                        description: Area friendly name for display information
                        type: string
                      fullCanonicalName:
                        description: Canonical name for search page
                        type: string
                  formattedAddress:
                    description: >-
                      Address formatted according to country addressing
                      convention
                    type: string
                  structuredAddress:
                    description: >-
                      Example key-value pairs describing address fields. These
                      fields are dynamic and are returned if available from the
                      data provider. More fields may be added depending on the
                      request.
                    type: object
                    properties:
                      streetNumberOrBuilding:
                        description: Address field describing street/building number
                        type: string
                      street:
                        description: Address field describing street address part
                        type: string
                      line1:
                        description: >-
                          Address field describing the first address line,
                          usually a combination of street number and street
                        type: string
                      city:
                        description: Address field describing city address part
                        type: string
                      countryCode:
                        description: Address field describing country address part
                        type: string
                      postcode:
                        description: Address field describing postcode address part
                        type: string
                    additionalProperties:
                      description: >-
                        Additional address fields that may be assigned if
                        available
                      type: object
                      properties:
                        adminAreaLevel1:
                          description: >-
                            Address field describing admin area level 1 address
                            part
                          type: string
                        adminAreaLevel2:
                          description: >-
                            Address field describing admin area level 2 address
                            part
                          type: string
                        adminAreaLevel3:
                          description: >-
                            Address field describing admin area level 3 address
                            part
                          type: string
                        country:
                          description: >-
                            Address field describing country (long form) address
                            part
                          type: string
                        locality:
                          description: Address field describing locality address part
                          type: string
                        political:
                          description: Address field describing political address part
                          type: string
                        political2:
                          description: Address field describing political 2 address part
                          type: string
                        political3:
                          description: Address field describing political 3 address part
                          type: string
                        postTown:
                          description: Address field describing post town address part
                          type: string
                        premise:
                          description: Address field describing premise address part
                          type: string
                        route:
                          description: Address field describing route address part
                          type: string
                        streetNumber:
                          description: Address field describing street number address part
                          type: string
                        building:
                          description: Address field describing building address part
                          type: string
                  source:
                    description: The origin of the location context
                    type: object
                    properties:
                      systemId:
                        description: >-
                          Originating system for Location context. (Loqate,
                          Google, Manual Input)
                        type: string
                      externalId:
                        description: Google Place Id, Loqate Id, empty if manual input
                        type: string
                  languageDetails:
                    description: Language details of the returned address detail
                    type: object
                    properties:
                      code:
                        description: Language ISO code
                        type: string
                      name:
                        description: Language friendly name
                        type: string
                  tenant:
                    description: JET tenant code of address detail
                    type: string
                type: object
              type:
                description: Type of geometry object.
                type: string
      example:
        type: FeatureCollection
        features:
          - type: Feature
            geometry:
              coordinates:
                - -0.1030613
                - 51.5164275
              type: Point
            properties:
              createdDate: '2023-08-08T08:37:17.0493163+00:00'
              entryMethod:
                method: autocompleteapi
              area:
                fullFriendlyName: Fleet Street
                fullCanonicalName: ec4-fleetstreet
              address:
                - 2 Fleet Place
                - London
                - Greater London
                - England
                - United Kingdom
                - EC4M 7RF
              structuredAddress:
                streetNumberOrBuilding: '2'
                street: Fleet Place
                line1: 2 Fleet Place
                city: London
                postcode: EC4M 7RF
                countryCode: GB
              formattedAddress: Fleet Place House, 2 Fleet Pl, London EC4M 7RF, UK
              source:
                systemId: Google
                externalId: ChIJJcYS5lIbdkgRDCfBhM3aYms
              languageDetails:
                code: en
                name: English
              countryCode: GB
              tenant: UK
      type: object
    AutocompleteAutocompleteGetAddressesResponseYaml:
      description: >-
        Location information suggestions for given input and information to
        structure request for next stage in autocomplete flow.
      properties:
        data:
          description: Location autocomplete address suggestions for given input.
          type: array
          maxItems: 50
          minItems: 1
          items:
            type: object
            properties:
              description:
                description: Location description.
                type: string
              id:
                description: >-
                  Location detail identifier retrieved from external data
                  source.
                type: string
              type:
                description: Type of returned location from provider.
                enum:
                  - address
                  - postcode
                  - street
                type: string
              next:
                description: Next type of request this location links to.
                enum:
                  - suggestion
                  - detail
                type: string
              postcode:
                description: >-
                  Postcode for given location, e.g. a postcode, ZIP or pin
                  depending on tenant (UK - EC4M7RF, IE - A65F4E2, AUS - 2599)
                  (Loqate Only)
                nullable: true
                type: string
        session:
          description: >-
            Passed to next endpoint in autocomplete flow, contains state
            information.
          type: string
        links:
          description: OpenAPI Links response for constructing next request in flow.
          properties:
            detail:
              description: >-
                Describes how to proceed to autocomplete address detail
                operation from this response.
              type: object
              properties:
                operationId:
                  description: Id of operation
                  type: string
                description:
                  description: Describes the linked fields and how to use them.
                  type: string
                parameters:
                  description: Parameters to be passed into next operation.
                  type: object
                  properties:
                    id:
                      description: Path on response object to retrieve id.
                      type: string
                    session:
                      description: Path on response object to retrieve session id.
                      type: string
          type: object
      example:
        data:
          - description: Fleet Place, London, UK
            id: >-
              EhdGbGVldCBQbGFjZSwgTG9uZG9uLCBVSyIuKiwKFAoSCXkM5tNSG3ZIEfJ6Mm2Nv50UEhQKEgnz8xe3Wxt2SBEKsgA5eS6RSQ
            type: address
            next: detail
        session: >-
          eyJCaWxsaW5nVG9rZW4iOiI3ODk4MGYwNy1kNmQ1LTQ1MzUtOTA3NC0wNjhlNGIwMzg3ZWUiLCJQcm92aWRlciI6Ikdvb2dsZSJ9
        source:
          - systemId: Google
        links:
          detail:
            operationId: getAutocompleteAddress
            description: >-
              The 'data/id' response field should be used as the 'id' path
              parameter, the 'session' response field should be used as the
              'session' query parameter in GET
              /autocomplete/address/{tenant}/{id}?session={session}
            parameters:
              session: $response.body#/session
              id: $response.body#/data/0/id
      type: object
    AutocompleteGeometryYaml:
      description: Geometry information for location.
      type: object
      properties:
        coordinates:
          description: Longitude and latitude.
          maxItems: 2
          type: array
          minItems: 2
          items:
            format: double
            type: number
        type:
          description: Type of geometry object.
          type: string
    AvailabilityScheduledUnavailabilityRequestYaml:
      description: A request to make restaurant unavailable.
      properties:
        serviceTypes:
          description: >-
            An array of Service Types to be included in the request. Excluding
            this field from the request will set the restaurant unavailable for
            all known Service Types.
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityServiceTypesYaml'
          nullable: true
        startDate:
          description: >-
            ISO 8601 format of the start datetime of the request. In addition,
            the keyword 'now' can be supplied in lieu of the current time.
          type: string
          format: date-time
          minLength: 1
        endDate:
          description: ISO 8601 format of the end datetime of the request.
          type: string
          format: date-time
          minLength: 1
          nullable: true
        name:
          description: Name of the request to be created.
          type: string
          maxLength: 150
        reason:
          description: The reason for creating the request.
          type: string
          maxLength: 5000
        allowRestaurantOverride:
          description: >-
            Whether a restaurant should be allowed to delete this request,
            regardless of who raised it.
          type: boolean
        categories:
          description: >-
            A free text category used to group multiple requests. This field is
            not intended to be used by clients.
          type: array
          items:
            type: string
            maxLength: 100
          nullable: true
      type: object
      required:
        - startDate
        - name
        - reason
        - allowRestaurantOverride
      example:
        serviceTypes:
          - dineIn
          - delivery
        startDate: '2020-01-16T09:00:00Z'
        endDate: '2020-01-16T19:00:00Z'
        name: Out of Chicken
        reason: No more chicken in stock.
        allowRestaurantOverride: true
        categories:
          - chicken-issue
    AvailabilityScheduledUnavailabilityStatusYaml:
      properties:
        delivery:
          $ref: '#/components/schemas/AvailabilityServiceTypeStatusYaml'
        collection:
          $ref: '#/components/schemas/AvailabilityServiceTypeStatusYaml'
        dineIn:
          $ref: '#/components/schemas/AvailabilityServiceTypeStatusYaml'
      type: object
      example:
        delivery:
          currentlyAvailable: true
          restaurantIsReadyForAvailability: false
          restaurantIsAbleToMakeAvailable: true
        collection:
          currentlyAvailable: true
          restaurantIsReadyForAvailability: false
          restaurantIsAbleToMakeAvailable: true
        dineIn:
          currentlyAvailable: true
          restaurantIsReadyForAvailability: false
          restaurantIsAbleToMakeAvailable: true
    AvailabilityServiceTypeStatusYaml:
      description: Provides information on a Service Type's Scheduled Unavailability state.
      properties:
        currentlyAvailable:
          description: Whether the restaurant is currently available or not.
          type: boolean
        restaurantIsReadyForAvailability:
          description: >-
            If there are events the restaurant CAN remove this will be `False`.
            Some events will be set with the `allowRestaurantOverride` flag as
            `False` meaning a Restaurant Partner cannot remove the event. This
            value being true advises the restaurant partner there are some
            events they can remove, regardless if removing those events will
            make them available or not.
          type: boolean
        restaurantIsAbleToMakeAvailable:
          description: >-
            If there are events the restaurant CAN NOT remove this will be
            `False`. There may also be events the restaurant can remove, however
            if this flag is `False` it means a call to make restaurant available
            by a Restaurant Partner will only remove events they are able to and
            not result in the restaurant becoming available.
          type: boolean
      type: object
      example:
        currentlyAvailable: true
        restaurantIsReadyForAvailability: false
        restaurantIsAbleToMakeAvailable: true
    AvailabilityServiceTypesYaml:
      type: string
      enum:
        - delivery
        - collection
        - dineIn
    BankdetailsGetAccessRolesResponseYaml:
      description: >-
        Response containing information on what rights the user has to update
        the bank details
      properties:
        canUpdateBankDetails:
          description: If the partner has all bank details filled
          type: boolean
        hasMfa:
          description: If the partner has MFA enabled
          type: boolean
        inCooldown:
          description: >-
            If the partner has inserted too many wrong verification codes and
            their profile is in cooldown
          type: boolean
      type: object
      example:
        canUpdateBankDetails: true
        hasMfa: false
        inCooldown: false
    BankdetailsGetBankDetailsResponseYaml:
      description: Response containing the bank details of the restaurant
      properties:
        bankName:
          description: Name of the bank
          type: string
        bankAccountNumber:
          description: 8 digit string containing the bank account number
          type: string
        accountHolderName:
          description: Name of the account holder
          type: string
        bankSortCode:
          description: 6 digit sort code of the bank
          type: string
      type: object
      example:
        bankName: PostBank
        bankAccountNumber: '12345678'
        accountHolderName: John Doe
        bankSortCode: '102030'
    BankdetailsUpdateBankDetailsRequestYaml:
      description: A request model to change the bank details of a partner
      properties:
        bankName:
          description: Name of the Bank
          type: string
        accountHolderName:
          description: Name of the account holder
          type: string
        bankSortCode:
          description: 6 digit sort code of the bank
          type: string
          minLength: 6
          maxLength: 6
          pattern: ^[0-9]*$
        bankAccountNumber:
          description: 8 digit bank account number
          type: string
          minLength: 8
          maxLength: 8
          pattern: ^[0-9]*$
        verificationCode:
          description: Unique verification code
          type: string
          minLength: 6
          maxLength: 6
          pattern: ^[A-Z0-9]*$
      type: object
      example:
        bankName: PostBank
        accountHolderName: John Doe
        bankSortCode: '102030'
        bankAccountNumber: '12345678'
        verificationCode: A1B2C3
    BasketAdjustmentsYaml:
      description: Adjustments related to the basket
      properties:
        Type:
          description: Type of adjustment (ServiceFee, BagFee or ItemDepositGroup)
          type: string
        Name:
          description: Name of the adjustment
          type: string
        Adjustment:
          description: Value of the adjustment
          format: decimal
          type: number
        Description:
          description: Description of the adjustment
          type: string
    BasketBasketErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        ErrorType:
          $ref: '#/components/schemas/BasketBasketErrorTypeYaml'
        InnerErrors:
          items:
            properties:
              ErrorType:
                $ref: '#/components/schemas/BasketBasketErrorTypeYaml'
              Message:
                description: The details of the inner errors
                type: string
            type: object
          type: array
        Message:
          description: The details of the error
          type: string
      type: object
    BasketBasketErrorTypeYaml:
      description: The type of basket error
      enum:
        - Unknown
        - MenuNotFound
        - BasketNotRetrieved
        - BasketNotMapped
        - BasketNotDeserialised
        - BasketErrorsNotDeserialised
        - InvalidBasketItems
        - BasketNotCreated
        - InvalidBasketUpdateRequest
        - ProductNotFound
        - ProductNotUpdated
        - ZipcodeNotUpdated
        - ServiceTypeNotUpdated
        - ProductNotAdded
        - ProductsNotAdded
        - MaximumBasketSizeReached
        - MinimumBasketSizeReached
        - OrderItemNotRemoved
        - NoAvailableMenu
        - RestaurantDoesNotDeliverToLocation
        - InvalidLocation
        - OrderItemNotFound
        - PartialProductsUpdate
        - AllProductsUpdateFailed
        - ProductsNotRemoved
        - InvalidCreateBasketRequest
        - BasketNotFound
        - InvalidUpdateUseStampCardDiscountRequest
        - UseStampCardDiscountFlagNotFound
      type: string
    BasketBasketResponseYaml:
      description: The response object for all basket endpoints.
      properties:
        BasketId:
          description: The basket id
          type: string
        CreateDate:
          description: When the basket was created
          nullable: true
          type: string
        RestaurantSeoName:
          description: >-
            A unique name per tenant for a restaurant used for external
            operations.
          nullable: true
          type: string
        RestaurantId:
          description: A unique identifier per tenant for a restaurant.
          type: string
        MenuGroupId:
          description: The menu group Id
          type: string
        ServiceType:
          description: The service type
          type: string
        IsOrderable:
          description: True if the basket is orderable
          type: boolean
        BasketMode:
          description: Mode of the current basket
          nullable: true
          type: string
          enum:
            - None
            - Group
        BasketSummary:
          $ref: '#/components/schemas/BasketBasketSummaryYaml'
        GroupSummary:
          nullable: true
          $ref: '#/components/schemas/BasketGroupSummaryYaml'
      type: object
    BasketBasketSummaryYaml:
      description: Information for displaying the basket to the user.
      properties:
        Products:
          items:
            $ref: '#/components/schemas/BasketProductYaml'
          type: array
        Deals:
          items:
            $ref: '#/components/schemas/BasketDealYaml'
          type: array
        CategoryOffers:
          items:
            $ref: '#/components/schemas/BasketCategoryOfferYaml'
          type: array
        RestaurantOffers:
          description: The list of restaurant offers
          items:
            $ref: '#/components/schemas/BasketRestaurantOfferYaml'
          example:
            - DiscountValue: 20
              OfferType: Percent
              ConsumerSegment: NewToRestaurant
              DiscountApplied: 8.37
              OfferId: ftcOfferId75
            - OfferType: StampCard
              OfferId: stampCardLoyaltyCampaignOfferId287
              DiscountValue: 0
              ConsumerSegment: All
              DiscountApplied: 28.37
              DiscountCode: mgt36rtp8VoucherCode
          type: array
        DeliveryCharge:
          description: The delivery charge
          format: decimal
          type: number
        Adjustments:
          description: List of basket adjustments
          items:
            $ref: '#/components/schemas/BasketAdjustmentsYaml'
          example:
            - Type: ServiceFee
              Name: Service charge 10% (min £0.99 max £1.99)
              Adjustment: 1.5
              Description: Service charge 10% (min £0.99 max £1.99)
            - Type: BagFee
              Name: Bag fee
              Adjustment: 0.5
              Description: A charge for bags in collection
            - Type: ItemDepositGroup
              Name: Deposit £0.25 x 2
              Adjustment: 0.5
              Description: Deposit £0.25 x 2
        BasketTotals:
          $ref: '#/components/schemas/BasketBasketTotalsYaml'
        Prompts:
          nullable: true
          $ref: '#/components/schemas/BasketPromptsYaml'
          type: object
        MaximumAdditionalOrderItems:
          description: The upper limit for additional order items
          format: integer
          type: number
        PaymentDirectives:
          description: The directives to payment component
          example:
            DisableCashPayment: true
          $ref: '#/components/schemas/BasketPaymentDirectivesYaml'
        TotalDiscount:
          description: The total discount
          format: decimal
          type: number
        TotalMultibuyDiscount:
          description: The delivery charge
          format: decimal
          type: number
        UseStampCardDiscount:
          description: A flag to indicate if the stamp card discount should be used
          nullable: true
          type: boolean
      type: object
    BasketBasketTotalsYaml:
      description: The basket total
      properties:
        Total:
          description: The total
          format: decimal
          type: number
        SubTotal:
          description: Subtotal
          format: decimal
          type: number
        AdjustmentsTotal:
          description: Total of the adjustments
          format: decimal
          type: number
      type: object
    BasketCategoryOfferYaml:
      description: Details of an offer
      properties:
        OfferId:
          description: The unique identifier of underlying consumer offers, if applicable
          nullable: true
          type: string
        DiscountValue:
          description: The discount value
          format: decimal
          type: number
        CategoryId:
          description: The category Id
          type: string
        DiscountType:
          description: The type of discount
          type: string
        ProductId:
          description: The unique identifier of product qualified for discount
          type: string
      type: object
    BasketCreateDealYaml:
      description: Create a deal
      properties:
        Date:
          description: '`YYYY-MM-DDThh:mm:ssZ (UTC)`'
          type: string
        DealGroups:
          items:
            $ref: '#/components/schemas/BasketCreateDealGroupYaml'
          type: array
        Quantity:
          description: The quantity
          format: integer
          type: number
        ProductId:
          description: The product id
          type: string
      type: object
    BasketCreateDealGroupYaml:
      description: Details of a deal group
      properties:
        DealGroupId:
          description: The deal group Id
          type: string
        Products:
          items:
            $ref: '#/components/schemas/BasketCreateProductYaml'
          type: array
      type: object
    BasketCreateGeoLocationYaml:
      description: The position on the globe
      properties:
        Longitude:
          description: The longitude
          format: decimal
          type: number
        Latitude:
          description: The latitude
          format: decimal
          type: number
      type: object
    BasketCreateLocationYaml:
      description: The zip code
      properties:
        GeoLocation:
          $ref: '#/components/schemas/BasketCreateGeoLocationYaml'
        ZipCode:
          description: The zip code
          type: string
      type: object
      x-konfig-properties:
        GeoLocation:
          description: Not available across platform yet, but applied for future proofing.
          nullable: true
    BasketCreateModifierYaml:
      description: The modifier Id
      properties:
        ModifierId:
          description: The modifier Id
          type: string
        Quantity:
          description: The quantity
          format: integer
          type: number
      type: object
    BasketCreateModifierGroupYaml:
      description: A modifier group
      properties:
        Modifiers:
          items:
            $ref: '#/components/schemas/BasketCreateModifierYaml'
          type: array
        ModifierGroupId:
          description: The modifier group Id
          type: string
      type: object
    BasketCreateOrderDetailsYaml:
      properties:
        Location:
          $ref: '#/components/schemas/BasketCreateLocationYaml'
      type: object
    BasketCreateProductYaml:
      description: Create a product
      properties:
        Date:
          description: '`YYYY-MM-DDThh:mm:ssZ (UTC)`'
          type: string
        ModifierGroups:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketCreateModifierGroupYaml'
          type: array
        Quantity:
          description: The quantity
          format: integer
          type: number
        RemovedIngredients:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketCreateRemovedIngredientYaml'
          type: array
        ProductId:
          description: The product Id
          type: string
      type: object
    BasketCreateRemovedIngredientYaml:
      description: Create a removed ingredient
      properties:
        Details:
          description: The ingredient details
          type: string
      type: object
    BasketCreateRequestYaml:
      description: The request object for creating a basket.
      properties:
        MenuGroupId:
          description: The menu group id
          type: string
        Products:
          description: All products to added to new basket.
          nullable: true
          items:
            $ref: '#/components/schemas/BasketCreateProductYaml'
          type: array
        Deals:
          description: All deals to added to new basket.
          nullable: true
          items:
            $ref: '#/components/schemas/BasketCreateDealYaml'
          type: array
        RestaurantSeoName:
          description: >-
            A unique per tenant identifier for a restaurant used for external
            operations.
          nullable: true
          type: string
        OrderDetails:
          $ref: '#/components/schemas/BasketCreateOrderDetailsYaml'
        BasketMode:
          description: Mode of the current basket
          nullable: true
          type: string
          enum:
            - None
            - Group
      type: object
      x-konfig-properties:
        OrderDetails:
          description: Information needed to allow an order to be placed on a basket.
    BasketDealYaml:
      description: Details of a deal
      properties:
        Name:
          description: Name of the deal
          type: string
        Variation:
          description: The variation
          nullable: true
          type: string
        DealGroups:
          items:
            $ref: '#/components/schemas/BasketDealGroupYaml'
          type: array
        Quantity:
          description: The quantity
          format: integer
          type: number
        BasketProductIds:
          items:
            type: string
          type: array
        CategoryId:
          description: The category id
          type: string
        ProductId:
          description: The product id
          type: string
        TotalPrice:
          description: The total price, based on the unit price and the quantity
          format: decimal
          type: number
        UnitPrice:
          description: The price of the single unit product
          format: decimal
          type: number
        Restrictions:
          description: >-
            Collection of restrictions prompts to be applied to the deal (e.g.
            the deal contains alcohol)
          items:
            $ref: '#/components/schemas/BasketRestrictionPromptYaml'
          type: array
      type: object
    BasketDealGroupYaml:
      description: A deal group Id
      properties:
        DealGroupId:
          description: The Id of a deal group
          type: string
        Products:
          items:
            $ref: '#/components/schemas/BasketDealProductYaml'
          type: array
      type: object
    BasketDealProductYaml:
      description: A deal product
      properties:
        Name:
          description: Name of the product
          type: string
        Variation:
          description: The variation
          nullable: true
          type: string
        TotalPrice:
          description: The total price
          format: decimal
          type: number
        ModifierGroups:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketModifierGroupYaml'
          type: array
        Quantity:
          description: The quantity
          format: integer
          type: number
        RemovedIngredients:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketRemovedIngredientYaml'
          type: array
        ProductId:
          description: The product id
          type: string
      type: object
    BasketDiscountYaml:
      title: Discount
      description: Discount details.
      type: object
      properties:
        discountAmount:
          description: Money discount.
          nullable: false
          type: number
          format: decimal
          minimum: 0.01
        discountPercentage:
          description: Percent discount.
          nullable: false
          format: integer
          type: number
          minimum: 1
          maximum: 100
      minProperties: 1
      maxProperties: 1
      example:
        discountAmount: 51.07
    BasketGenericErrorResponseYaml:
      description: Generic error response structure
      properties:
        ErrorCode:
          description: Detailed error code that happened
          type: string
        Description:
          description: The details of the error
          type: string
        SubErrors:
          description: The details of the inner errors
          items:
            type: string
          type: array
      type: object
    BasketGroupSummaryYaml:
      description: Group information.
      properties:
        GroupSummaryId:
          description: Unique identifier of the group
          type: string
        GroupName:
          description: Name of the group based on the Initiator name
          type: string
        Url:
          description: URL to user-facing web application to join the group
          type: string
        Status:
          description: Status of the actual group
          type: string
          enum:
            - open
            - locked
            - deleted
        Participants:
          description: Participant needed to relate products to participants of the group.
          type: array
          items:
            type: object
            properties:
              ParticipantId:
                description: Unique identifier of the participant
                type: string
              Name:
                description: Name of the participant
                type: string
              Role:
                description: Role of the participant within the group
                type: string
                enum:
                  - initiator
                  - participant
              Status:
                description: Status of the participant within the group
                type: string
                enum:
                  - ordering
                  - ready
              Products:
                description: Product selected
                type: array
                items:
                  type: object
                  properties:
                    BasketProductId:
                      description: The basket product identifier
                      type: string
                    TotalPrice:
                      description: The total price
                      format: decimal
                      type: number
                    Quantity:
                      description: The quantity
                      type: number
                      format: integer
              Deals:
                description: Deals selected
                type: array
                items:
                  type: object
                  properties:
                    BasketProductId:
                      description: The basket product identifier
                      type: string
                    TotalPrice:
                      description: The total price
                      format: decimal
                      type: number
                    Quantity:
                      description: The quantity
                      type: number
                      format: integer
      type: object
    BasketInvalidProductYaml:
      description: An invalid product
      properties:
        Name:
          description: The name
          type: string
        ProductId:
          description: The product id
          type: string
      type: object
    BasketItemDiscountYaml:
      title: ItemDiscount
      description: Details of an Item discount
      type: object
      properties:
        OfferId:
          description: The unique identifier of underlying consumer offers
          nullable: false
          type: string
        OfferType:
          description: The type of the offer
          nullable: false
          type: string
        ConsumerSegment:
          description: Consumer Segment to which offer applies
          nullable: false
          type: string
        Amount:
          description: The absolute amount of the discount
          nullable: false
          type: number
          format: decimal
          minimum: 0.01
        Discount:
          description: Discount details
          $ref: '#/components/schemas/BasketDiscountYaml'
    BasketItemDiscountPromptYaml:
      title: ItemDiscountPrompt
      description: The prompt to display for an item discount
      type: object
      properties:
        Title:
          description: The title to show in prompt for customer
          type: string
        ItemDiscounts:
          description: The array of items with discounts
          items:
            $ref: '#/components/schemas/BasketItemDiscountPromptItemYaml'
          type: array
        Description:
          description: The description of offer to show in prompt for customer
          type: string
        Header:
          description: The header to show in prompt for customer
          type: string
        OfferId:
          description: The identifier of offer causing prompt to be shown
          type: string
      example:
        ItemDiscounts:
          - ProductId: Lemonade1234
            DiscountPercentage: 100
            ModifierGroups:
              - ModifierGroupId: modifier111
                MinimumChoices: 1
                Modifiers:
                  - ModifierId: NoSugar11
                    Quantity: 1
                    TotalPrice: 0
                    MaximumAdditionalModifiers: 0
        Title: Get free lemonade
        Description: Get free lemonade with Super Burger
        Header: Free item!
        OfferId: abf1234G
    BasketItemDiscountPromptItemYaml:
      title: ItemDiscountPromptItem
      description: An Item discount prompt item
      type: object
      properties:
        DiscountPercentage:
          description: The discount percentage applied.
          format: integer
          type: number
          minimum: 1
          maximum: 100
        ProductId:
          description: The unique identifier of the discounted product item.
          type: string
        ModifierGroups:
          description: The collection of preselected modifier groups for the item.
          nullable: true
          minLength: 1
          items:
            $ref: '#/components/schemas/BasketModifierGroupYaml'
          type: array
      example:
        ProductId: Lemonade1234
        DiscountPercentage: 100
        ModifierGroups:
          - ModifierGroupId: modifier111
            MinimumChoices: 1
            Modifiers:
              - ModifierId: NoSugar11
                Quantity: 1
                TotalPrice: 0
                MaximumAdditionalModifiers: 0
    BasketJoinResponseYaml:
      description: The response object for join endpoint.
      properties:
        GroupId:
          description: The group identifier
          type: string
        GroupName:
          description: Name of the group based on the Initiator name
          type: string
        RestaurantSeoName:
          description: >-
            A unique name per tenant for a restaurant used for external
            operations.
          type: string
        MenuUrl:
          description: Restaurant menu URL with group identifier.
          type: string
      type: object
    BasketModifierYaml:
      description: Details of a basket modifier
      properties:
        Name:
          description: The name
          type: string
        MaximumAdditionalModifiers:
          description: The upper limit for additional modifiers
          format: integer
          type: number
        ModifierId:
          description: The modifier Id
          type: string
        Quantity:
          description: The Quantity
          format: integer
          type: number
        TotalPrice:
          description: The total price
          format: decimal
          type: number
        UnitPrice:
          description: The total price
          format: decimal
          type: number
      type: object
    BasketModifierGroupYaml:
      description: Details of a modifier group
      required:
        - MinimumChoices
      properties:
        MinimumChoices:
          description: The minimum number of choices
          format: integer
          type: number
        ModifierGroupId:
          description: The modifier group Id
          type: string
        Modifiers:
          items:
            $ref: '#/components/schemas/BasketModifierYaml'
          type: array
      type: object
    BasketOfferYaml:
      description: Object containing all information about an offer
      properties:
        OfferId:
          description: The id of the offer
          type: string
        OfferType:
          description: The type of offer
          type: string
        QualifyingValue:
          description: The amount required to qualify
          format: decimal
          type: number
        ToSpendValue:
          description: The amount left to spend to qualify
          format: decimal
          type: number
        ToSpendDescription:
          description: >-
            The description to show for customer in case Subtotal is less than
            offer qualifying value
          nullable: true
          type: string
        DiscountValue:
          description: The percent value of the percent offer discount
          format: decimal
          type: number
      type: object
    BasketOfflineProductYaml:
      description: The details of an offline product
      properties:
        Name:
          description: The name
          type: string
        ProductId:
          description: The product Id
          type: string
      type: object
    BasketPaymentDirectivesYaml:
      description: The directives for payment component
      properties:
        DisableCashPayment:
          description: Indicates if cash payment option should be disabled
          type: boolean
      type: object
    BasketProductYaml:
      description: The details of a product
      properties:
        Name:
          description: The name
          type: string
        Variation:
          description: The variation
          nullable: true
          type: string
        ModifierGroups:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketModifierGroupYaml'
          type: array
        Quantity:
          description: The quantity
          format: integer
          type: number
        RemovedIngredients:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketRemovedIngredientYaml'
          type: array
        BasketProductIds:
          items:
            type: string
          type: array
        CategoryId:
          description: The category Id
          type: string
        ProductId:
          description: The product Id
          type: string
        TotalPrice:
          description: The total price, based on the unit price and the quantity
          format: decimal
          type: number
        UnitPrice:
          description: The price of the single unit product
          format: decimal
          type: number
        Restrictions:
          description: >-
            Collection of restrictions prompts to be applied to the product
            (e.g. the product contains alcohol)
          items:
            $ref: '#/components/schemas/BasketRestrictionPromptYaml'
          type: array
        Discounts:
          description: >-
            Collection of discounts applied to the product (e.g. `FreeItem`,
            `Bogof`, `ItemLevelDiscount`, `BogofMixMatch` or `Bogo` etc)
          nullable: true
          items:
            $ref: '#/components/schemas/BasketItemDiscountYaml'
          type: array
      type: object
    BasketPromptsYaml:
      description: A basket prompt
      properties:
        OfflineProducts:
          description: >-
            Collection of product ids (variations, deals or both) that could not
            be added to the basket as they are currently offline. These will
            include product/deals which modifiers are also offline
          items:
            $ref: '#/components/schemas/BasketOfflineProductYaml'
          type: array
        SpendMore:
          nullable: true
          $ref: '#/components/schemas/BasketSpendMoreYaml'
        Offers:
          items:
            $ref: '#/components/schemas/BasketOfferYaml'
          type: array
        InvalidProducts:
          items:
            $ref: '#/components/schemas/BasketInvalidProductYaml'
          type: array
        ItemDiscounts:
          description: Collection of item discount prompts to be shown to the customer
          items:
            $ref: '#/components/schemas/BasketItemDiscountPromptYaml'
          type: array
        RequiresOther:
          description: >-
            True if extra products are required. An example is when you need to
            add food if your basket only contains drinks
          type: boolean
        DiscountApplied:
          description: Details of applied discounts
          nullable: true
          properties:
            Amount:
              description: The amount
              format: decimal
              type: number
          type: object
        RefreshMenu:
          description: >-
            Flag that describes the menu needs to be reloaded (e.g. items in the
            basket become invalid so the menu needs to be re-fetched)
          type: boolean
        Restrictions:
          description: >-
            Collection of restrictions prompts to be shown to the customer (e.g.
            the basket contains alcoholic items)
          items:
            $ref: '#/components/schemas/BasketRestrictionPromptYaml'
          type: array
      type: object
    BasketRemovedIngredientYaml:
      description: A removed ingredient
      properties:
        Details:
          description: The ingredient details
          type: string
      type: object
    BasketRestaurantOfferYaml:
      description: Details of a restaurant offer
      required:
        - OfferId
        - OfferType
        - ConsumerSegment
        - DiscountApplied
      properties:
        OfferType:
          description: The type of the offer
          nullable: false
          type: string
        OfferId:
          description: The unique identifier of the offer
          nullable: false
          type: string
        DiscountValue:
          description: >-
            The percentage value discount. Returned 0 when offer is not of
            Percent type
          nullable: false
          format: decimal
          type: number
        ConsumerSegment:
          description: Consumer Segment to which offer applies
          nullable: false
          example: NewToRestaurant
          type: string
        DiscountApplied:
          description: The money value discount
          nullable: false
          format: decimal
          type: number
        DiscountCode:
          description: >-
            The unique code of the discount, acts as a lock object at payment
            stage
          nullable: true
          type: string
      type: object
    BasketRestrictionPromptYaml:
      description: >-
        A restriction prompt. Represents an uncommon characteristic/type of an
        item or basket (e.g. item or basket items contain alcohol)
      properties:
        Type:
          description: The restriction type
          $ref: '#/components/schemas/BasketRestrictionPromptTypeYaml'
      type: object
    BasketRestrictionPromptTypeYaml:
      description: The restriction prompt type
      enum:
        - None
        - Alcohol
      type: string
    BasketSpendMoreYaml:
      description: >-
        Details of additional required spend to meet minimum order value (MOV).
        When null it means that MOV is reached
      properties:
        ToSpend:
          description: Amount to spend
          format: decimal
          type: number
        MinimumOrderAmount:
          description: The minimum order required
          format: decimal
          type: number
      type: object
    BasketUpdateAddedDealYaml:
      description: Update a deal
      properties:
        Date:
          description: '`YYYY-MM-DDThh:mm:ssZ (UTC)`'
          type: string
        DealGroups:
          items:
            $ref: '#/components/schemas/BasketUpdateDealGroupYaml'
          type: array
        Quantity:
          description: The quantity
          format: integer
          type: number
        ProductId:
          description: The product Id
          type: string
      type: object
    BasketUpdateAddedProductYaml:
      description: Update an added deal
      properties:
        Date:
          description: '`YYYY-MM-DDThh:mm:ssZ (UTC)`'
          type: string
        ModifierGroups:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateModifierGroupYaml'
          type: array
        Quantity:
          description: The quantity
          format: integer
          type: number
        RemovedIngredients:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateRemovedIngredientYaml'
          type: array
        ProductId:
          description: The product Id
          type: string
      type: object
    BasketUpdateDealYaml:
      description: Details of the deal to update
      properties:
        Added:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateAddedDealYaml'
          type: array
        Removed:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateRemovedYaml'
          type: array
        Updated:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateUpdatedDealYaml'
          type: array
      type: object
    BasketUpdateDealGroupYaml:
      properties:
        DealGroupId:
          description: The Id of the deal group
          type: string
        Products:
          items:
            $ref: '#/components/schemas/BasketUpdateAddedProductYaml'
          type: array
      type: object
    BasketUpdateLocationYaml:
      description: Details of a location update
      properties:
        GeoLocation:
          description: The location
          nullable: true
          properties:
            Date:
              description: The date
              type: string
            Value:
              description: >-
                Not available across platform yet, but applied for future
                proofing.
              allOf:
                - properties:
                    Longitude:
                      description: Longitude
                      format: decimal
                      type: number
                    Latitude:
                      description: Latitude
                      format: decimal
                      type: number
                  type: object
          type: object
        ZipCode:
          description: Zip code details
          nullable: true
          properties:
            Date:
              description: The date of the update
              type: string
            Value:
              description: The updated value
              type: string
          type: object
      type: object
    BasketUpdateModifierYaml:
      description: Details of an update to the modifier
      properties:
        ModifierId:
          description: The modifier Id
          type: string
        Quantity:
          description: The Quantity
          format: integer
          type: number
      type: object
    BasketUpdateModifierGroupYaml:
      description: Update to a modifier group
      properties:
        Modifiers:
          items:
            $ref: '#/components/schemas/BasketUpdateModifierYaml'
          type: array
        ModifierGroupId:
          description: The Id of the modifier group
          type: string
      type: object
    BasketUpdateOrderDetailsYaml:
      description: Order details update
      properties:
        Location:
          $ref: '#/components/schemas/BasketUpdateLocationYaml'
      type: object
      x-konfig-properties:
        Location:
          nullable: true
    BasketUpdateProductYaml:
      description: A product update
      properties:
        Added:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateAddedProductYaml'
          type: array
        Removed:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateRemovedYaml'
          type: array
        Updated:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateUpdatedProductYaml'
          type: array
      type: object
    BasketUpdateQuantityYaml:
      description: Update the quantity of an item
      properties:
        Change:
          description: Value to apply to existing quantity.
          format: integer
          type: number
        Total:
          description: Value that replaces the current quantity.
          format: integer
          type: number
      type: object
    BasketUpdateRemovedYaml:
      description: Update removed items
      properties:
        Date:
          description: '`YYYY-MM-DDThh:mm:ssZ (UTC)`'
          type: string
        BasketProductId:
          description: >-
            A unique identifier for a product in the basket. This is needed to
            support complex products to make sure remove/update is applied to
            the correct product.
          type: string
      type: object
    BasketUpdateRemovedIngredientYaml:
      description: An update to the removed ingredient
      properties:
        Details:
          description: Details of the removed ingredient
          type: string
      type: object
    BasketUpdateRequestYaml:
      description: The request object for updating a basket.
      properties:
        Product:
          $ref: '#/components/schemas/BasketUpdateProductYaml'
        BasketId:
          description: The basket id
          type: string
        SelectedServiceType:
          description: The selected service type
          nullable: true
          properties:
            Date:
              description: The timestamp
              type: string
            Value:
              description: The value of the type selected
              type: string
          type: object
        OrderDetails:
          $ref: '#/components/schemas/BasketUpdateOrderDetailsYaml'
        Deal:
          $ref: '#/components/schemas/BasketUpdateDealYaml'
      type: object
      x-konfig-properties:
        Product:
          nullable: true
        OrderDetails:
          description: Information needed to allow an order to be placed on a basket.
          nullable: true
        Deal:
          nullable: true
    BasketUpdateUpdatedDealYaml:
      description: An update to a deal
      properties:
        Date:
          description: '`YYYY-MM-DDThh:mm:ssZ (UTC)`'
          type: string
        DealGroups:
          items:
            $ref: '#/components/schemas/BasketUpdateDealGroupYaml'
          type: array
        Quantity:
          $ref: '#/components/schemas/BasketUpdateQuantityYaml'
        BasketProductId:
          description: The basket product Id
          type: string
      type: object
    BasketUpdateUpdatedProductYaml:
      description: An update to a product
      properties:
        Date:
          description: '`YYYY-MM-DDThh:mm:ssZ (UTC)`'
          type: string
        ModifierGroups:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateModifierGroupYaml'
          type: array
        Quantity:
          $ref: '#/components/schemas/BasketUpdateQuantityYaml'
        RemovedIngredients:
          nullable: true
          items:
            $ref: '#/components/schemas/BasketUpdateRemovedIngredientYaml'
          type: array
        BasketProductId:
          description: The basket product id
          type: string
      type: object
    BenderBenderErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: The error message
          type: string
        error:
          description: Error Title
          type: string
      type: object
    BenderBenderSettingsYaml:
      description: The bender settings object for all endpoints.
      properties:
        settingsFlexStates:
          $ref: '#/components/schemas/BenderSettingsFlexStatesYaml'
        protectionThreshold:
          description: Number of hours of Threshold protection
          format: integer
          type: number
        targetUsage:
          description: Minimum target Usage Percentage
          nullable: true
          format: double
          type: number
        benderStatus:
          description: Bender On/Off Status
          type: boolean
        deliveryZoneId:
          description: Bender Settings Delivery Zone Id
          type: string
      type: object
      x-konfig-properties:
        settingsFlexStates:
          description: Flex states information for given Delivery Zone Id
    BenderBenderSettingsListYaml:
      description: Bender Settings List
      properties:
        benderSettingsList:
          description: List of Bender Settings
          items:
            $ref: '#/components/schemas/BenderBenderSettingsYaml'
          type: array
      type: object
    BenderFlexStateTypeYaml:
      description: Flex State Type Options
      enum:
        - CODE_RED
        - OPEN
        - SEEKING
      type: string
    BenderSettingsFlexStatesYaml:
      properties:
        triggerUsage:
          description: Usage percentage for given state type
          format: double
          type: number
        flexStateType:
          $ref: '#/components/schemas/BenderFlexStateTypeYaml'
        averageAssignableJobLoad:
          description: Average assignable Job load for given state type
          nullable: true
          format: double
          type: number
      type: object
    BinaryObjectYaml:
      format: binary
      type: string
    BitbucketBitbucketCloudWebhookYaml:
      description: Bitbucket cloud webhook event
      properties:
        actor:
          description: The user who pushed the commits.
          type: string
        repository:
          description: The repository with the commits
          type: string
        push:
          description: The details of the push, which includes the changes property.
          properties:
            new:
              description: >-
                An object containing information about the state of the
                reference after the push.
              properties:
                type:
                  description: The type of reference with the change.
                  type: string
                name:
                  description: The name of the branch, tag, named branch, or bookmark.
                  type: string
                target:
                  description: The details of the most recent commits after the push.
                  type: string
                links:
                  description: Links to the reference in the API
                  type: string
              type: object
            old:
              description: >-
                An object containing information about the state of the
                reference before the push.
              properties:
                type:
                  description: The type of reference with the change.
                  type: string
                name:
                  description: The name of the branch, tag, named branch, or bookmark.
                  type: string
                target:
                  description: The details of the most recent commits after the push.
                  type: string
                links:
                  description: Links to the reference in the API
                  type: string
              type: object
            links:
              description: Links to the reference in the API
              type: string
            created:
              description: true or false to indicate whether the reference is new.
              type: boolean
            closed:
              description: true or false to indicate whether the reference is old.
              type: boolean
            forced:
              description: true or false to indicate whether the push was forced.
              type: boolean
            truncated:
              description: >-
                true or false to indicate whether Bitbucket truncated the
                commits array.
              type: boolean
          type: object
      type: object
    BitbucketcloudBitbucketCloudWebhookYaml:
      description: Bitbucket cloud webhook event
      properties:
        actor:
          description: The user who pushed the commits.
          type: string
        repository:
          description: The repository with the commits
          type: string
        push:
          description: The details of the push, which includes the changes property.
          properties:
            new:
              description: >-
                An object containing information about the state of the
                reference after the push.
              properties:
                type:
                  description: The type of reference with the change.
                  type: string
                name:
                  description: The name of the branch, tag, named branch, or bookmark.
                  type: string
                target:
                  description: The details of the most recent commits after the push.
                  type: string
                links:
                  description: Links to the reference in the API
                  type: string
              type: object
            old:
              description: >-
                An object containing information about the state of the
                reference before the push.
              properties:
                type:
                  description: The type of reference with the change.
                  type: string
                name:
                  description: The name of the branch, tag, named branch, or bookmark.
                  type: string
                target:
                  description: The details of the most recent commits after the push.
                  type: string
                links:
                  description: Links to the reference in the API
                  type: string
              type: object
            links:
              description: Links to the reference in the API
              type: string
            created:
              description: true or false to indicate whether the reference is new.
              type: boolean
            closed:
              description: true or false to indicate whether the reference is old.
              type: boolean
            forced:
              description: true or false to indicate whether the push was forced.
              type: boolean
            commits:
              description: An object containing the commit
              properties:
                hash:
                  description: The hash of the commit.
                  type: string
                message:
                  description: the commit message
                  type: string
                links:
                  description: The link to the commit.
                  type: string
                author:
                  description: The link to the user.
                  type: string
              type: array
            truncated:
              description: >-
                true or false to indicate whether Bitbucket truncated the
                commits array.
              type: boolean
          type: object
      type: object
    BrazeMarketingContentResponseYaml:
      properties:
        selected:
          description: >-
            The set of 'select' properties from the request that meet the
            following criteria: 
              1) The user has data for the property
              2) The data for the given user is present in the 'accepted values' specified in the request.
          items:
            type: string
          type: array
      additionalProperties: true
      example:
        selected:
          - subjectLine
          - anotherField
        subjectLine: humor
        anotherField: another value
      type: object
    CheckoutAvailableFulfilmentTimesIssueYaml:
      discriminator:
        propertyName: code
        mapping:
          RESTAURANT_NOT_TAKING_ORDERS: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueRestaurantNotTakingOrdersYaml
          SERVICE_TYPE_UNAVAILABLE: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueServiceTypeUnavailableYaml
          ITEMS_UNORDERABLE: '#/components/schemas/CheckoutIssuesCheckoutIssueItemsUnorderableYaml'
        oneOf:
          - $ref: >-
              #/components/schemas/CheckoutIssuesCheckoutIssueRestaurantNotTakingOrdersYaml
          - $ref: >-
              #/components/schemas/CheckoutIssuesCheckoutIssueServiceTypeUnavailableYaml
          - $ref: >-
              #/components/schemas/CheckoutIssuesCheckoutIssueItemsUnorderableYaml
      required:
        - code
      properties:
        code:
          description: The issue code
          nullable: false
          enum:
            - RESTAURANT_NOT_TAKING_ORDERS
            - SERVICE_TYPE_UNAVAILABLE
            - ITEMS_UNORDERABLE
          type: string
      type: object
    CheckoutCheckoutActionYaml:
      description: >-
        Action data needed to make payment for payment method in use. This data
        is dependant on the Payment Service Provider and payment method. When
        used for checkout where fraud-check is required, device-id, payer email
        and payer identifier should be provided.
      required:
        - Type
        - Data
      properties:
        Data:
          description: Action data dictionary. Key value pairs required to make payment.
          additionalProperties:
            type: string
          example:
            BraintreeDeviceData: someescapedjson
            PayerId: somepaypalpayerid12345
            PayerEmail: someemail@paypal.com
            Nonce: acbd2334
            DeviceId: somedeviceid
          type: object
        Type:
          description: >-
            Identifier for the type of action data for the payment method
            dependant on PaymentOptionType.
          type: string
      type: object
    CheckoutCheckoutGetCustomerYaml:
      description: >
        Details of the customer making the purchase.


        Details of the customer will need to be submitted to the service. No
        default values will be set.
      type: object
      nullable: false
      properties:
        lastName:
          description: >
            Customer's last name (Optional). Also known as Family Name.


            Please note, for Austria (AT) and Germany (DE), the maximum length
            is 30 characters.
          maxLength: 100
          type: string
          minLength: 0
          nullable: true
        phoneNumber:
          description: |
            Customer's phone number.

            A phone number can be represented in:
              - E.164 format e.g. +447777111111 or;
              - Local format of submitted tenant e.g. 07777111111.

            E.164 formatted phone numbers are preferred.
          maxLength: 16
          type: string
          minLength: 3
          nullable: true
        firstName:
          description: >
            Customer's first name. Also known as Given Name(s).


            Please note, for Austria (AT) and Germany (DE), the maximum length
            is 30 characters.
          maxLength: 100
          type: string
          minLength: 1
          nullable: true
    CheckoutCheckoutGetFulfilmentYaml:
      description: How and when the items will be received by the customer.
      type: object
      nullable: false
      properties:
        time:
          description: >-
            Time the customer wants to receive the order i.e. when order is
            fulfilled.
          required:
            - asap
          type: object
          properties:
            scheduled:
              description: >
                Scheduled time the customer wants the order to be fulfilled.


                If ASAP is selected and fulfillable, this will be set to the
                next available fulfilment time.
              required:
                - from
                - to
              type: object
              properties:
                from:
                  description: >-
                    Earliest time the customer wants the order to be fulfilled
                    represented in ISO 8601 UTC (Zulu Time).
                  nullable: false
                  type: string
                to:
                  description: >
                    Latest time the customer wants the order to be fulfilled
                    represented in ISO 8601 UTC (Zulu Time). 


                    This time must be greater than or equal to the from time.
                  nullable: false
                  type: string
              nullable: true
            asap:
              description: |
                If the order should be fulfilled as soon as possible (ASAP).

                ASAP may not be fulfillable.

                Default is false.
              nullable: false
              type: boolean
          nullable: true
        location:
          description: |
            The destination the customer wants to receive the order.

            This only applies to purchases with a delivery service type.
          nullable: true
          properties:
            geolocation:
              description: >-
                The coordinates of a geographical location where the customer
                wants to receive the order.
              required:
                - latitude
                - longitude
              $ref: '#/components/schemas/SharedGeopositionYaml'
            address:
              description: >-
                The postal address where the customer wants to receive the
                order.
              nullable: true
              properties:
                locality:
                  description: >
                    The locality of this address.


                    Also known as Town or City.


                    Please note, for Austria (AT) and Germany (DE), the maximum
                    length is 64 characters.
                  maxLength: 50
                  type: string
                  minLength: 1
                  nullable: true
                lines:
                  description: |
                    One or more lines representing the street address.

                    Please note:
                      * For Australia (AU) and New Zealand (NZ), the second item will represent the Level/Unit Number (optional).
                      * For Austria (AT) and Germany (DE), the maximum number of items is 1. The maximum length of an item is 64 characters.
                  maxItems: 4
                  type: array
                  minItems: 0
                  items:
                    description: Represents part of a street address.
                    maxLength: 100
                    type: string
                    minLength: 1
                    nullable: false
                  nullable: false
                postalCode:
                  description: >
                    Postal code of this address.


                    Please note, for Austria (AT) and Germany (DE), the maximum
                    length is 8 characters.
                  maxLength: 50
                  type: string
                  minLength: 1
                  nullable: true
                administrativeArea:
                  description: >
                    Geographical region of this address. 


                    Also known as County or State.


                    Required in Australia (AU) only for an order to be
                    fulfilled.
                  maxLength: 50
                  type: string
                  minLength: 1
                  nullable: true
                additionalInformation:
                  description: |
                    Additional information about the address.

                    This is only supported in the following countries:
                      - Austria (AT)
                      - Germany (DE)
                  type: object
                  nullable: true
                  properties:
                    entrance:
                      description: Entrance/access point to the building.
                      type: string
                      minLength: 1
                      maxLength: 64
                      nullable: true
                    floor:
                      description: Floor/level of the building.
                      type: string
                      minLength: 1
                      maxLength: 64
                      nullable: true
                    door:
                      description: Door to the building.
                      type: string
                      minLength: 1
                      maxLength: 64
                      nullable: true
                    companyName:
                      description: Name of the company at the address.
                      type: string
                      minLength: 1
                      maxLength: 64
                      nullable: true
              type: object
          type: object
        table:
          description: |
            The table where the customer wants to receive the order.

            This only applies to purchases with a `dinein` service type.
          required:
            - identifier
          type: object
          properties:
            identifier:
              description: >-
                The identifier of the table where the customer wants to receive
                the order.
              type: string
              nullable: false
              minLength: 1
              maxLength: 12
          nullable: true
    CheckoutCheckoutGetResponseV2Yaml:
      description: Properties apply to all supported country codes, except where specified.
      required:
        - restaurant
        - serviceType
        - customer
        - fulfilment
        - isFulfillable
        - issues
      properties:
        serviceType:
          description: How the order will be dispatched.
          nullable: false
          enum:
            - delivery
            - collection
            - dinein
          type: string
        restaurant:
          $ref: '#/components/schemas/CheckoutCheckoutGetRestaurantYaml'
        customer:
          $ref: '#/components/schemas/CheckoutCheckoutGetCustomerYaml'
        fulfilment:
          $ref: '#/components/schemas/CheckoutCheckoutGetFulfilmentYaml'
        notes:
          $ref: '#/components/schemas/CheckoutCheckoutNotesV2Yaml'
        voucher:
          $ref: '#/components/schemas/CheckoutCheckoutVoucherResponseYaml'
        tipping:
          $ref: '#/components/schemas/CheckoutCheckoutGetTippingYaml'
        currency:
          description: The currency code in ISO-4217 format e.g. GBP.
          nullable: true
          type: string
        isFulfillable:
          description: Whether the proposed order can be placed.
          nullable: false
          type: boolean
        issues:
          description: >-
            One or more issues associated the proposed order, that may impact
            whether it can be placed.
          type: array
          minItems: 0
          maxItems: 50
          items:
            description: Represents a single issue associated with the proposed order.
            nullable: false
            $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          nullable: false
      type: object
    CheckoutCheckoutGetRestaurantYaml:
      description: The restaurant selling the items to be purchased.
      required:
        - id
        - availabilityId
      type: object
      nullable: false
      properties:
        id:
          description: Unique identifier for the restaurant.
          nullable: false
          type: string
        availabilityId:
          description: >
            Unique identifier to identify when item(s) are available for
            ordering.
          nullable: false
          type: string
          deprecated: true
    CheckoutCheckoutGetTippingYaml:
      description: Details of any tips that have been applied.
      type: object
      nullable: true
      properties:
        courier:
          description: Details of any courier tip that has been applied.
          type: object
          nullable: true
          properties:
            fixedAmount:
              description: Set to indicate that a fixed amount tip has been applied.
              type: object
              nullable: true
              required:
                - amount
              properties:
                amount:
                  description: >-
                    The tip amount that has been applied in minor currency
                    units.
                  type: number
                  format: integer
                  nullable: false
                  minimum: 1
            customAmount:
              description: Set to indicate that a custom amount tip has been applied.
              type: object
              nullable: true
              required:
                - amount
              properties:
                amount:
                  description: >-
                    The tip amount that has been applied in minor currency
                    units.
                  type: number
                  format: integer
                  nullable: false
                  minimum: 1
    CheckoutCheckoutIssueV2Yaml:
      discriminator:
        propertyName: code
        mapping:
          FIRST_NAME_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueFirstNameRequiredYaml
          MINIMUM_ORDER_VALUE_NOT_MET: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueMinimumOrderValueNotMetYaml
          SERVICE_TYPE_UNAVAILABLE: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueServiceTypeUnavailableYaml
          GEOLOCATION_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueGeolocationRequiredYaml
          ADMINISTRATIVE_AREA_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueAdministrativeAreaRequiredYaml
          LOCATION_UNDELIVERABLE: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueLocationUndeliverableYaml
          ITEMS_UNORDERABLE: '#/components/schemas/CheckoutIssuesCheckoutIssueItemsUnorderableYaml'
          FULFILMENT_TIME_UNAVAILABLE: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueFulfilmentTimeUnavailableYaml
          PHONE_NUMBER_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssuePhoneNumberRequiredYaml
          ADDITIONAL_ITEMS_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueAdditionalItemsRequiredYaml
          LOCALITY_REQUIRED: '#/components/schemas/CheckoutIssuesCheckoutIssueLocalityRequiredYaml'
          POSTAL_CODE_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssuePostalCodeRequiredYaml
          ADDRESS_LINES_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueAddressLinesRequiredYaml
          DATE_OF_BIRTH_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueDateOfBirthRequiredYaml
          AGE_VERIFICATION_FAILED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueAgeVerificationFailedYaml
          FULFILMENT_TIME_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueFulfilmentTimeRequiredYaml
          RESTAURANT_NOT_TAKING_ORDERS: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueRestaurantNotTakingOrdersYaml
          TABLE_IDENTIFIER_REQUIRED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueTableIdentifierRequiredYaml
          ORDER_NOTE_NOT_ACCEPTED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueOrderNoteNotAcceptedYaml
          KITCHEN_NOTE_NOT_ACCEPTED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueKitchenNoteNotAcceptedYaml
          COURIER_NOTE_NOT_ACCEPTED: >-
            #/components/schemas/CheckoutIssuesCheckoutIssueCourierNoteNotAcceptedYaml
          TIP_INVALID: '#/components/schemas/CheckoutIssuesCheckoutIssueTipInvalidYaml'
        oneOf:
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: >-
              #/components/schemas/CheckoutIssuesCheckoutIssueMinimumOrderValueNotMetYaml
          - $ref: >-
              #/components/schemas/CheckoutIssuesCheckoutIssueServiceTypeUnavailableYaml
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: >-
              #/components/schemas/CheckoutIssuesCheckoutIssueItemsUnorderableYaml
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: >-
              #/components/schemas/CheckoutIssuesCheckoutIssueRestaurantNotTakingOrdersYaml
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
      required:
        - code
      properties:
        code:
          description: The issue code
          nullable: false
          enum:
            - RESTAURANT_NOT_TAKING_ORDERS
            - SERVICE_TYPE_UNAVAILABLE
            - ITEMS_UNORDERABLE
            - ADDITIONAL_ITEMS_REQUIRED
            - MINIMUM_ORDER_VALUE_NOT_MET
            - FULFILMENT_TIME_UNAVAILABLE
            - LOCATION_UNDELIVERABLE
            - AGE_VERIFICATION_FAILED
            - FIRST_NAME_REQUIRED
            - PHONE_NUMBER_REQUIRED
            - DATE_OF_BIRTH_REQUIRED
            - FULFILMENT_TIME_REQUIRED
            - ADDRESS_LINES_REQUIRED
            - LOCALITY_REQUIRED
            - ADMINISTRATIVE_AREA_REQUIRED
            - POSTAL_CODE_REQUIRED
            - GEOLOCATION_REQUIRED
            - TABLE_IDENTIFIER_REQUIRED
            - ORDER_NOTE_NOT_ACCEPTED
            - KITCHEN_NOTE_NOT_ACCEPTED
            - COURIER_NOTE_NOT_ACCEPTED
            - TIP_INVALID
          type: string
      type: object
    CheckoutCheckoutNotesV2Yaml:
      description: Instructions about the order that the customer wants to submit.
      type: object
      nullable: true
      properties:
        order:
          description: Instructions about the order that the customer wants to submit.
          required:
            - note
          type: object
          nullable: true
          properties:
            note:
              description: The contents of the note.
              maxLength: 200
              type: string
              minLength: 0
              nullable: false
        kitchen:
          description: >-
            Instructions for the kitchen staff about the order that the customer
            wants to submit.
          required:
            - note
          type: object
          nullable: true
          properties:
            note:
              description: The contents of the note.
              maxLength: 200
              type: string
              minLength: 0
              nullable: false
        courier:
          description: >-
            Instructions for the courier about the order that the customer wants
            to submit.
          required:
            - note
          type: object
          nullable: true
          properties:
            note:
              description: The contents of the note.
              maxLength: 200
              type: string
              minLength: 0
              nullable: false
    CheckoutCheckoutRequestYaml:
      description: Details needed to make a payment.
      required:
        - PaymentOptionType
      properties:
        Action:
          description: >-
            Action data needed to make payment for payment method in use. This
            data is dependant on the Payment Service Provider and payment
            method. When used for checkout where fraud-check is required,
            device-id, payer email and payer identifier should be provided.
          $ref: '#/components/schemas/CheckoutCheckoutActionYaml'
          type: object
        PaymentOptionType:
          description: Identifier used to determine method of payment.
          enum:
            - AccountCredit
            - AndroidPay
            - ApplePay
            - Card
            - Cash
            - GooglePay
            - PayPal
            - SavedCard
            - VCO
          type: string
        VoucherCode:
          description: Voucher code to apply to order.
          type: string
        PaymentOptionId:
          description: >-
            Token to use for saved card payment. Tokens retrieved from order
            payment options or basket payment options calls on Public API.
          type: string
      type: object
    CheckoutCheckoutResponseYaml:
      description: The result of a payment attempt.
      properties:
        Timestamp:
          description: >-
            The UTC timestamp of the date and time that the response was
            generated at.
          format: date-time
          x-api-version-from: 2019-04
          type: string
        Tenant:
          description: The tenant associated with the consumer.
          type: string
        OrderId:
          description: The Id of the order.
          type: string
        Result:
          description: >-
            The result of payment attempt. 2xxxx = successful payment. 4xxxxx =
            validation error, 5xxxx = server error
          enum:
            - '20000'
            - '40000'
            - '50000'
          type: string
      type: object
    CheckoutCheckoutUpdateCustomerYaml:
      description: Details of the customer making the purchase.
      type: object
      nullable: true
      properties:
        lastName:
          description: >
            Customer's last name (Optional). Also known as Family Name.


            Please note, for Austria (AT) and Germany (DE), the maximum length
            is 30 characters.
          maxLength: 100
          type: string
          minLength: 0
          nullable: true
        phoneNumber:
          description: |
            Customer's phone number.

            A phone number can be represented in:
              - E.164 format e.g. +447777111111 or;
              - Local format of submitted tenant e.g. 07777111111.

            E.164 formatted phone numbers are preferred.
          maxLength: 16
          type: string
          minLength: 3
          nullable: true
        dateOfBirth:
          description: >
            Customer's date of birth represented in ISO 8601 format. If a time
            is submitted, it will be ignored.


            Required in Australia (AU) and New Zealand (NZ) only for fulfilling
            an order that contain items being purchased that require age
            verification.
          nullable: true
          type: string
        firstName:
          description: >
            Customer's first name. Also known as Given Name(s).


            Please note, for Austria (AT) and Germany (DE), the maximum length
            is 30 characters.
          maxLength: 100
          type: string
          minLength: 1
          nullable: true
    CheckoutCheckoutUpdateFulfilmentYaml:
      description: How and when the items will be received by the customer.
      type: object
      nullable: true
      properties:
        time:
          description: >-
            Time the customer wants to receive the order i.e. when order is
            fulfilled.
          nullable: true
          properties:
            scheduled:
              description: |
                Scheduled time the customer wants the order to be fulfilled.

                The scheduled time will be ignored if ASAP is selected.
              required:
                - from
                - to
              type: object
              properties:
                from:
                  description: >-
                    Earliest time the customer wants the order to be fulfilled
                    represented in ISO 8601 UTC (Zulu Time).
                  nullable: false
                  type: string
                to:
                  description: >
                    Latest time the customer wants the order to be fulfilled
                    represented in ISO 8601 UTC (Zulu Time). 


                    This time must be greater than or equal to the from time.
                  nullable: false
                  type: string
              nullable: true
            asap:
              description: |
                If the order should be fulfilled as soon as possible (ASAP).

                ASAP may not be fulfillable.

                Default is false.
              nullable: false
              type: boolean
          type: object
        location:
          description: |
            The destination the customer wants to receive the order.

            This only applies to purchases with a delivery service type.
          nullable: true
          properties:
            geolocation:
              description: >-
                The coordinates of a geographical location where the customer
                wants to receive the order.
              required:
                - latitude
                - longitude
              type: object
              properties:
                longitude:
                  description: The longitude of the geographical location.
                  nullable: false
                  format: decimal
                  type: number
                latitude:
                  description: The latitude of the geographical location.
                  nullable: false
                  format: decimal
                  type: number
              nullable: true
            address:
              description: >-
                The postal address where the customer wants to receive the
                order.
              nullable: true
              properties:
                locality:
                  description: >
                    The locality of this address.


                    Also known as Town or City.


                    Please note, for Austria (AT) and Germany (DE), the maximum
                    length is 64 characters.
                  maxLength: 50
                  type: string
                  minLength: 1
                  nullable: true
                lines:
                  description: |
                    One or more lines representing the street address. 

                    Please note:
                      * For Australia (AU) and New Zealand (NZ), the second item will represent the Level/Unit Number (optional).
                      * For Austria (AT) and Germany (DE), the maximum number of items is 1. The maximum length of an item is 64 characters.
                  maxItems: 4
                  type: array
                  minItems: 1
                  items:
                    description: Represents part of a street address.
                    maxLength: 100
                    type: string
                    minLength: 1
                    nullable: false
                  nullable: true
                postalCode:
                  description: >
                    Postal code of this address.


                    Please note, for Austria (AT) and Germany (DE), the maximum
                    length is 8 characters.
                  maxLength: 50
                  type: string
                  minLength: 1
                  nullable: true
                administrativeArea:
                  description: >
                    Geographical region of this address. 


                    Also known as County or State.


                    Required in Australia (AU) only for an order to be
                    fulfilled.
                  maxLength: 50
                  type: string
                  minLength: 1
                  nullable: true
                additionalInformation:
                  description: |
                    Additional information about the address.

                    This is only supported in the following countries:
                      - Austria (AT)
                      - Germany (DE)
                  type: object
                  nullable: true
                  properties:
                    entrance:
                      description: Entrance/access point to the building.
                      type: string
                      minLength: 1
                      maxLength: 64
                      nullable: true
                    floor:
                      description: Floor/level of the building.
                      type: string
                      minLength: 1
                      maxLength: 64
                      nullable: true
                    door:
                      description: Door to the building.
                      type: string
                      minLength: 1
                      maxLength: 64
                      nullable: true
                    companyName:
                      description: Name of the company at the address.
                      type: string
                      minLength: 1
                      maxLength: 64
                      nullable: true
              type: object
          type: object
        table:
          description: |
            The table where the customer wants to receive the order.

            This only applies to purchases with a `dinein` service type.
          required:
            - identifier
          type: object
          properties:
            identifier:
              description: >-
                The identifier of the table where the customer wants to receive
                the order.
              type: string
              nullable: false
              minLength: 1
              maxLength: 12
          nullable: true
    CheckoutCheckoutUpdateRequestV2Yaml:
      description: >
        Properties apply to all supported country codes, except where specified.


        We do not support a PATCH request on the root path and a 400 status code
        will be returned.
      properties:
        customer:
          $ref: '#/components/schemas/CheckoutCheckoutUpdateCustomerYaml'
        fulfilment:
          $ref: '#/components/schemas/CheckoutCheckoutUpdateFulfilmentYaml'
        notes:
          $ref: '#/components/schemas/CheckoutCheckoutNotesV2Yaml'
        voucher:
          description: |
            Information about the voucher to apply.

            This is only supported in the following countries:
              - Austria (AT)
              - Germany (DE)
          type: object
          nullable: true
          properties:
            code:
              description: Code for the voucher to apply.
              type: string
              minLength: 1
              maxLength: 50
              nullable: false
          required:
            - code
        tipping:
          $ref: '#/components/schemas/CheckoutCheckoutUpdateTippingYaml'
      type: object
    CheckoutCheckoutUpdateResponseV2Yaml:
      required:
        - isFulfillable
        - issues
      properties:
        voucher:
          $ref: '#/components/schemas/CheckoutCheckoutVoucherResponseYaml'
        isFulfillable:
          description: Whether the proposed order can be placed.
          nullable: false
          type: boolean
        currency:
          description: The currency code in ISO-4217 format e.g. GBP.
          nullable: true
          type: string
        issues:
          description: >-
            One or more issues associated the proposed order, that may impact
            whether it can be placed.
          type: array
          minItems: 0
          maxItems: 50
          items:
            description: Represents a single issue associated with the proposed order.
            nullable: false
            $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          nullable: false
      type: object
    CheckoutCheckoutUpdateTippingYaml:
      description: >
        Details of any tips that should be applied.


        Tips should only be applied to checkouts if the Checkout Options
        endpoint indicates that tipping is enabled.


        The applied tip should be a value that the Checkout Options endpoint
        indicates is supported on this Checkout.
      type: object
      nullable: true
      properties:
        courier:
          description: Details of any courier tip that should be applied.
          type: object
          nullable: true
          properties:
            fixedAmount:
              description: Set to indicate that a fixed amount tip should be applied.
              type: object
              nullable: true
              required:
                - amount
              properties:
                amount:
                  description: >-
                    The tip amount that should be applied in minor currency
                    units.
                  type: number
                  format: integer
                  nullable: false
                  minimum: 1
            customAmount:
              description: Set to indicate that a custom amount tip should be applied.
              type: object
              nullable: true
              required:
                - amount
              properties:
                amount:
                  description: >-
                    The tip amount that should be applied in minor currency
                    units.
                  type: number
                  format: integer
                  nullable: false
                  minimum: 1
    CheckoutCheckoutVoucherResponseYaml:
      description: Details of the voucher applied.
      type: object
      nullable: true
      properties:
        code:
          description: Code for the voucher to apply.
          type: string
          minLength: 1
          maxLength: 50
          nullable: false
        status:
          description: The current status of the voucher to apply.
          $ref: '#/components/schemas/CheckoutVouchersVoucherStatusYaml'
    CheckoutErrorsAvailableFulfilmentTimes409ErrorYaml:
      description: An HTTP 409 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - FULFILMENT_TIME_BANDS_INVALID
                      - FULFILMENT_TIME_BANDS_NOT_FOUND
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutErrorsCheckout404ErrorYaml:
      description: An HTTP 404 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - TENANT_NOT_SUPPORTED
                      - CHECKOUT_NOT_FOUND
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutErrorsCheckout409ErrorYaml:
      description: An HTTP 409 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults .
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - CHECKOUT_INVALID
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutErrorsCheckoutDefaultErrorYaml:
      description: A default HTTP error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                required:
                  - description
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutErrorsCheckoutGet400ErrorYaml:
      description: An HTTP 400 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - USER_AGENT_INVALID
                      - TENANT_INVALID
                      - CHECKOUT_ID_INVALID
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutErrorsCheckoutUpdate400ErrorV2Yaml:
      description: An HTTP 400 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - USER_AGENT_INVALID
                      - TENANT_INVALID
                      - CHECKOUT_ID_INVALID
                      - INVALID_REQUEST
                      - FIRST_NAME_INVALID
                      - LAST_NAME_INVALID
                      - PHONE_NUMBER_INVALID
                      - DATE_OF_BIRTH_INVALID
                      - FULFILMENT_TIME_INVALID
                      - ADDRESS_LINES_INVALID
                      - LOCALITY_INVALID
                      - ADMINISTRATIVE_AREA_INVALID
                      - ADDRESS_ENTRANCE_INVALID
                      - ADDRESS_FLOOR_INVALID
                      - ADDRESS_DOOR_INVALID
                      - ADDRESS_COMPANY_NAME_INVALID
                      - POSTAL_CODE_INVALID
                      - GEOLOCATION_INVALID
                      - DELIVERY_NOTE_INVALID
                      - TABLE_IDENTIFIER_INVALID
                      - ORDER_NOTE_INVALID
                      - KTICHEN_NOTE_INVALID
                      - COURIER_NOTE_INVALID
                      - VOUCHER_CODE_INVALID
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutGetAvailableFulfilmentTimesResponseYaml:
      required:
        - times
        - asapAvailable
        - issues
      properties:
        asapAvailable:
          description: If the option to fulfil an order as soon as possible is available.
          nullable: false
          type: boolean
        times:
          description: Collection of time bands for when an order can be fulfilled.
          maxItems: 576
          type: array
          minItems: 0
          items:
            description: A time band for when an order can be fulfilled.
            required:
              - from
              - to
            type: object
            properties:
              from:
                description: Start time represented in ISO 8601 UTC (Zulu Time).
                nullable: false
                format: date-time
                type: string
              to:
                description: |
                  End time represented in ISO 8601 UTC (Zulu Time).

                  This time can be equal to the from time.
                nullable: false
                format: date-time
                type: string
            nullable: false
          nullable: false
        issues:
          description: >-
            One or more issues associated with the available fulfilment times
            for a proposed order.
          maxItems: 3
          type: array
          minItems: 0
          items:
            description: >-
              Represents a single issue associated with the available fulfilment
              times for a proposed order.
            nullable: false
            $ref: '#/components/schemas/CheckoutAvailableFulfilmentTimesIssueYaml'
          nullable: false
      type: object
    CheckoutIssuesCheckoutIssueItemsUnorderableYaml:
      allOf:
        - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
        - $ref: '#/components/schemas/CheckoutAvailableFulfilmentTimesIssueYaml'
      type: object
      properties:
        code:
          description: The collection of items are not orderable.
    CheckoutIssuesCheckoutIssueMinimumOrderValueNotMetYaml:
      allOf:
        - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
        - required:
            - currency
            - minimumOrderValue
            - additionalSpendRequired
      type: object
      properties:
        minimumOrderValue:
          description: >-
            The minimum order value required to complete an order. This is in
            the smallest unit of local currency e.g. pence.
          nullable: false
          format: integer
          type: number
        currency:
          description: >-
            The currency in which the value amounts are returned represented in
            ISO 4217 format.
          nullable: false
          type: string
        additionalSpendRequired:
          description: >-
            The amount the customer needs to spend to meet minimum order value.
            This is in the smallest unit of local currency e.g. pence.
          nullable: false
          format: integer
          type: number
        code:
          description: The checkout does not meet the minimum order value.
    CheckoutIssuesCheckoutIssueRestaurantNotTakingOrdersYaml:
      allOf:
        - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
        - $ref: '#/components/schemas/CheckoutAvailableFulfilmentTimesIssueYaml'
      type: object
      properties:
        code:
          description: >-
            The restaurant being ordered from is no longer taking orders. Either
            the restaurant is not offline or is no longer available on the
            platform.
    CheckoutIssuesCheckoutIssueServiceTypeUnavailableYaml:
      allOf:
        - $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
        - $ref: '#/components/schemas/CheckoutAvailableFulfilmentTimesIssueYaml'
      type: object
      properties:
        code:
          description: >-
            The selected service type is not available. The restaurant may still
            be available to order from with a different service type.
    CheckoutOptionsCheckoutCustomerNotesYaml:
      description: >
        Details of the types of customer notes that can be supplied when
        updating a checkout.
      required:
        - serviceTypes
      nullable: false
      type: object
      properties:
        serviceTypes:
          description: >
            Details of the types of customer notes that can be supplied when
            updating a checkout of each service type.
          required:
            - collection
            - delivery
            - dineIn
          nullable: false
          type: object
          properties:
            collection:
              description: >
                Details of the types of customer notes that can be supplied when
                updating a Collection checkout.
              required:
                - orderNoteAccepted
                - kitchenNoteAccepted
              nullable: false
              type: object
              properties:
                orderNoteAccepted:
                  description: >
                    Indicates whether an Order note can be supplied when
                    updating a Collection checkout.
                  nullable: false
                  type: boolean
                kitchenNoteAccepted:
                  description: >
                    Indicates whether a Kitchen note can be supplied when
                    updating a Collection checkout.
                  nullable: false
                  type: boolean
            delivery:
              description: >
                Details of the types of customer notes that can be supplied when
                updating a Delivery checkout.
              required:
                - orderNoteAccepted
                - kitchenNoteAccepted
                - courierNoteAccepted
              nullable: false
              type: object
              properties:
                orderNoteAccepted:
                  description: >
                    Indicates whether an Order note can be supplied when
                    updating a Delivery checkout.
                  nullable: false
                  type: boolean
                kitchenNoteAccepted:
                  description: >
                    Indicates whether a Kitchen note can be supplied when
                    updating a Delivery checkout.
                  nullable: false
                  type: boolean
                courierNoteAccepted:
                  description: >
                    Indicates whether a Courier note can be supplied when
                    updating a Delivery checkout.
                  nullable: false
                  type: boolean
            dineIn:
              description: >
                Details of the types of customer notes that can be supplied when
                updating a Dine In checkout.
              required:
                - orderNoteAccepted
                - kitchenNoteAccepted
              nullable: false
              type: object
              properties:
                orderNoteAccepted:
                  description: >
                    Indicates whether an Order note can be supplied when
                    updating a Dine In checkout.
                  nullable: false
                  type: boolean
                kitchenNoteAccepted:
                  description: >
                    Indicates whether a Kitchen note can be supplied when
                    updating a Dine In checkout.
                  nullable: false
                  type: boolean
    CheckoutOptionsCheckoutNoteTypesYaml:
      description: Details of note types that can be supplied when updating a checkout.
      required:
        - customerNotes
      type: object
      properties:
        customerNotes:
          $ref: '#/components/schemas/CheckoutOptionsCheckoutCustomerNotesYaml'
    CheckoutOptionsCheckoutOptionsYaml:
      description: Details of which options are available for the given checkout.
      required:
        - tipping
        - customerNotes
      type: object
      properties:
        currency:
          description: The currency code in ISO-4217 format e.g. GBP.
          type: string
          minLength: 3
          maxLength: 3
          nullable: false
        tipping:
          $ref: '#/components/schemas/CheckoutOptionsTippingYaml'
        customerNotes:
          $ref: '#/components/schemas/CheckoutOptionsCheckoutCustomerNotesYaml'
        vouchers:
          $ref: '#/components/schemas/CheckoutOptionsVouchersYaml'
    CheckoutOptionsTippingYaml:
      description: >
        Details of the types of tip that can be applied when updating a
        checkout.
      type: object
      nullable: false
      required:
        - courier
      properties:
        courier:
          description: >
            Details of the types of courier tip that can be applied when
            updating a checkout.
          type: object
          nullable: false
          required:
            - isEnabled
          properties:
            isEnabled:
              description: >-
                Indicates whether courier tipping is available for this checkout
                (true) or not (false).
              type: boolean
              nullable: false
            fixedAmount:
              description: When set, indicates that fixed tip amounts are available.
              type: object
              nullable: true
              required:
                - options
              properties:
                options:
                  description: >-
                    An array of fixed amount tipping options that should be
                    offered.
                  type: array
                  nullable: false
                  minItems: 1
                  maxItems: 10
                  items:
                    description: A fixed amount tipping option that should be offered.
                    type: object
                    nullable: false
                    required:
                      - amount
                    properties:
                      amount:
                        description: The amount that can be tipped in minor currency units.
                        type: number
                        nullable: false
                        format: integer
                        minimum: 1
            customAmount:
              description: When set, indicates that custom tip amounts are available.
              type: object
              nullable: true
              required:
                - minimum
                - maximum
              properties:
                minimum:
                  description: >-
                    The minimum custom amount that can be tipped in minor
                    currency units.
                  type: number
                  nullable: false
                  format: integer
                  minimum: 1
                maximum:
                  description: >-
                    The maximum custom amount that can be tipped in minor
                    currency units.
                  type: number
                  nullable: false
                  format: integer
                  minimum: 1
    CheckoutOptionsVouchersYaml:
      description: |
        Contains all applicable vouchers.
      type: object
      nullable: true
      required:
        - applicable
      properties:
        applicable:
          description: |
            List of all applicable voucher codes.
          type: array
          nullable: false
          minItems: 0
          items:
            type: object
            required:
              - code
            properties:
              code:
                description: Applicable voucher code.
                type: string
                nullable: false
    CheckoutPaymentsCheckoutNativePaymentsSummaryYaml:
      required:
        - label
        - amount
        - sdkAmount
      properties:
        label:
          description: >-
            The descriptive name of the price summary item such as Delivery
            Cost.
          type: string
          nullable: false
        amount:
          description: The amount of the price summary item as minor currency units.
          type: number
          format: integer
          nullable: false
        sdkAmount:
          description: The amount of the price summary item formatted for native SDK.
          type: string
          nullable: false
      type: object
    CheckoutPaymentsCheckoutPaymentsPost201ResponseYaml:
      description: The details of the payment.
      type: object
      properties:
        id:
          description: The id of the payment created.
          type: string
          nullable: false
        status:
          description: The current status of the payment.
          $ref: >-
            #/components/schemas/CheckoutPaymentsCheckoutPaymentsStatusGetResponseYaml
      required:
        - id
        - status
    CheckoutPaymentsCheckoutPaymentsPostRequestYaml:
      description: The details needed to start a payment.
      type: object
      properties:
        currency:
          description: |
            The currency code in ISO-4217 format.

            Currently, the currencies supported for each tenant are:
              - AT: `EUR`
              - DE: `EUR`
              - IE: `EUR`
          type: string
          minLength: 3
          maxLength: 3
          nullable: false
        total:
          description: >
            Total price the customer expects to pay as minor currency units in
            ISO-4217 format.


            The total price should include any fees applied for payment methods.
          type: number
          format: integer
          minimum: 0
          nullable: false
        methods:
          description: Collection of payment methods to pay for checkout.
          type: array
          minItems: 1
          maxItems: 10
          nullable: false
          items:
            $ref: '#/components/schemas/PaymentsPaymentTypeYaml'
        returnUrl:
          description: >-
            URL to return to once payment is in `rejected`, `accepted` or
            `failed` status.
          type: string
          format: uri
      required:
        - currency
        - total
        - methods
        - returnUrl
    CheckoutPaymentsCheckoutPaymentsStatusGetResponseYaml:
      description: The status details for a payment.
      discriminator:
        propertyName: code
        mapping:
          pending: '#/components/schemas/CheckoutPaymentsStatusPendingYaml'
          awaitingAction: '#/components/schemas/CheckoutPaymentsStatusAwaitingActionYaml'
          rejected: '#/components/schemas/CheckoutPaymentsStatusRejectedYaml'
          accepted: '#/components/schemas/CheckoutPaymentsStatusAcceptedYaml'
          failed: '#/components/schemas/CheckoutPaymentsStatusFailedYaml'
        oneOf:
          - $ref: >-
              #/components/schemas/CheckoutPaymentsCheckoutPaymentsStatusGetResponseYaml
          - $ref: >-
              #/components/schemas/CheckoutPaymentsCheckoutPaymentsStatusGetResponseYaml
          - $ref: '#/components/schemas/CheckoutPaymentsStatusRejectedYaml'
          - $ref: '#/components/schemas/CheckoutPaymentsStatusAcceptedYaml'
          - $ref: >-
              #/components/schemas/CheckoutPaymentsCheckoutPaymentsStatusGetResponseYaml
      type: object
      properties:
        code:
          description: The status code of the payment.
          type: string
          enum:
            - pending
            - awaitingAction
            - rejected
            - accepted
            - failed
          nullable: false
      required:
        - code
    CheckoutPaymentsErrorsCheckoutPaymentsGet404ErrorYaml:
      description: An HTTP 404 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - tenantNotSupported
                      - checkoutNotFound
                      - paymentNotFound
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutPaymentsErrorsCheckoutPaymentsPost400ErrorYaml:
      description: An HTTP 400 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - userAgentInvalid
                      - applicationIdInvalid
                      - applicationVersionInvalid
                      - tenantInvalid
                      - checkoutIdInvalid
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutPaymentsErrorsCheckoutPaymentsPost404ErrorYaml:
      description: An HTTP 404 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - tenantNotSupported
                      - checkoutNotFound
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutPaymentsErrorsCheckoutPaymentsPost422ErrorYaml:
      description: An HTTP 422 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - currencyInvalid
                      - totalInvalid
                      - paymentMethodsInvalid
                      - paymentMethodInvalid
                      - paymentMethodAmountInvalid
                      - pamentMethodFeeInvalid
                      - paymentReturnUrlInvalid
                      - currencyNotSupported
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutPaymentsErrorsCheckoutPaymentsStatusGet400ErrorYaml:
      description: An HTTP 400 error response
      properties:
        fault:
          description: >-
            An array of values that helps identify this response back to logs,
            so we can easily find faults.
          required:
            - faultId
            - traceId
            - errors
          type: object
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated.
              nullable: false
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault.
              nullable: false
              type: string
            errors:
              description: List of errors that may assist you in resolving the issues.
              nullable: false
              items:
                description: >-
                  Details about the error that may assist you in resolving the
                  issue.
                required:
                  - description
                  - errorCode
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue.
                    nullable: false
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error.
                    nullable: false
                    enum:
                      - userAgentInvalid
                      - tenantInvalid
                      - checkoutIdInvalid
                      - paymentIdInvalid
                    type: string
                nullable: false
              type: array
          nullable: true
      type: object
    CheckoutPaymentsStatusAcceptedYaml:
      allOf:
        - $ref: >-
            #/components/schemas/CheckoutPaymentsCheckoutPaymentsStatusGetResponseYaml
        - required:
            - orderId
            - orderReference
      type: object
      properties:
        code:
          description: Payment was accepted. This is an end state.
        orderId:
          description: The id of the order.
          type: string
          minLength: 1
          maxLength: 100
          nullable: false
        orderReference:
          description: The reference used by the customer to identify their order.
          type: string
          minLength: 1
          maxLength: 100
          nullable: false
    CheckoutPaymentsStatusRejectedYaml:
      allOf:
        - $ref: >-
            #/components/schemas/CheckoutPaymentsCheckoutPaymentsStatusGetResponseYaml
        - required:
            - reasons
      type: object
      properties:
        code:
          description: Payment was rejected. This is an end state.
        reasons:
          description: One or more reasons for why the payment was rejected.
          type: array
          minItems: 1
          maxItems: 6
          items:
            description: Code for why the payment was rejected.
            nullable: false
            $ref: '#/components/schemas/CheckoutPaymentsStatusRejectedCodesYaml'
          nullable: false
    CheckoutPaymentsStatusRejectedCodesYaml:
      description: Details of the `rejected` status.
      discriminator:
        propertyName: code
        mapping:
          totalsDoNotMatch: >-
            #/components/schemas/CheckoutPaymentsStatusRejectionsTotalsDoNotMatchYaml
          unfulfillable: >-
            #/components/schemas/CheckoutPaymentsStatusRejectionsUnfulfillableYaml
          duplicate: '#/components/schemas/CheckoutPaymentsStatusRejectionsDuplicateYaml'
          paymentRefused: >-
            #/components/schemas/CheckoutPaymentsStatusRejectionsPaymentRefusedYaml
          ineligible: '#/components/schemas/CheckoutPaymentsStatusRejectionsIneligibleYaml'
          unknown: '#/components/schemas/CheckoutPaymentsStatusRejectionsUnknownYaml'
        oneOf:
          - $ref: '#/components/schemas/CheckoutPaymentsStatusRejectedCodesYaml'
          - $ref: >-
              #/components/schemas/CheckoutPaymentsStatusRejectionsUnfulfillableYaml
          - $ref: '#/components/schemas/CheckoutPaymentsStatusRejectedCodesYaml'
          - $ref: '#/components/schemas/CheckoutPaymentsStatusRejectedCodesYaml'
          - $ref: '#/components/schemas/CheckoutPaymentsStatusRejectedCodesYaml'
          - $ref: '#/components/schemas/CheckoutPaymentsStatusRejectedCodesYaml'
      type: object
      properties:
        code:
          description: Code for why the payment was rejected.
          type: string
          enum:
            - totalsDoNotMatch
            - unfulfillable
            - duplicate
            - paymentRefused
            - ineligible
            - unknown
          nullable: false
      required:
        - code
    CheckoutPaymentsStatusRejectionsUnfulfillableYaml:
      allOf:
        - $ref: '#/components/schemas/CheckoutPaymentsStatusRejectedCodesYaml'
        - required:
            - issues
      type: object
      properties:
        code:
          description: Fulfilment constraints have not been met.
        issues:
          description: Issues that identify the reasons a checkout is unfulfillable.
          type: array
          minItems: 0
          maxItems: 50
          items:
            description: >-
              Represents a single issue identifying why a checkout is
              unfulfillable.
            nullable: false
            $ref: '#/components/schemas/CheckoutCheckoutIssueV2Yaml'
          nullable: false
    CheckoutVouchersVoucherStatusYaml:
      description: Details of the voucher status.
      discriminator:
        propertyName: code
        mapping:
          valid: '#/components/schemas/CheckoutVouchersVoucherStatusValidYaml'
          unavailable: '#/components/schemas/CheckoutVouchersVoucherStatusUnavailableYaml'
          expired: '#/components/schemas/CheckoutVouchersVoucherStatusExpiredYaml'
          redeemed: '#/components/schemas/CheckoutVouchersVoucherStatusRedeemedYaml'
          ineligible: '#/components/schemas/CheckoutVouchersVoucherStatusIneligibleYaml'
          inactive: '#/components/schemas/CheckoutVouchersVoucherStatusInactiveYaml'
        oneOf:
          - $ref: '#/components/schemas/CheckoutVouchersVoucherStatusValidYaml'
          - $ref: '#/components/schemas/CheckoutVouchersVoucherStatusYaml'
          - $ref: '#/components/schemas/CheckoutVouchersVoucherStatusYaml'
          - $ref: '#/components/schemas/CheckoutVouchersVoucherStatusYaml'
          - $ref: '#/components/schemas/CheckoutVouchersVoucherStatusYaml'
          - $ref: '#/components/schemas/CheckoutVouchersVoucherStatusYaml'
      required:
        - code
      properties:
        code:
          description: The voucher status code.
          nullable: false
          enum:
            - valid
            - unavailable
            - expired
            - redeemed
            - ineligible
            - inactive
          type: string
      type: object
    CheckoutVouchersVoucherStatusValidYaml:
      allOf:
        - $ref: '#/components/schemas/CheckoutVouchersVoucherStatusYaml'
        - required:
            - amount
            - details
      type: object
      properties:
        code:
          description: Voucher can be applied.
        name:
          description: >-
            The name of the voucher. This will only be set when the country is
            Austria (AT) or Germany (DE).
          type: string
          minLength: 1
          maxLength: 50
          nullable: true
        amount:
          description: >-
            The amount that will be redeemed from the voucher on completing this
            checkout as minor currency units.
          type: number
          format: integer
          nullable: false
        details:
          description: Details about the voucher.
          type: object
          nullable: false
          oneOf:
            - required:
                - balance
            - required:
                - percentage
          properties:
            balance:
              description: Details about the remaining balance available on the voucher.
              type: object
              nullable: true
              properties:
                amount:
                  description: >-
                    The amount left to redeem on the voucher before this
                    checkout is completed as minor currency units in ISO-4217
                    format.
                  type: number
                  format: integer
                  nullable: false
              required:
                - amount
            percentage:
              description: Details about the percentage applied for the voucher.
              type: object
              nullable: true
              properties:
                percent:
                  description: The percentage applied for the voucher.
                  type: number
                  format: double
                  nullable: false
              required:
                - percent
    CloudinaryMetadataChangedRequestYaml:
      type: object
      example:
        notification_type: resource_metadata_changed
        source: api
        resources:
          - large-burger-with-cheese:
              new_metadata:
                moderation_status: approved
                supplier: burgers-pizza-restaurant
          - pizza-with-cheese-and-tomato:
              new_metadata:
                moderation_status: approved
                supplier: burgers-pizza-restaurant
      properties:
        notification_type:
          description: Notification type of Cloudinary event.
          type: string
        source:
          description: 'String from where webhook originated. Example: ui, api, ... .'
          type: string
        resources:
          description: The array of changed resources.
          type: array
          items:
            type: object
      nullable: false
    CommunicationPreferencesChannelSubscriptionsYaml:
      properties:
        subscribedChannels:
          description: The list of channels that the consumer should only be subscribed to.
          items:
            $ref: >-
              #/components/schemas/CommunicationPreferencesCommunicationChannelsYaml
          type: array
      type: object
    CommunicationPreferencesChannelSubscriptionsWithDerivedFieldYaml:
      description: The marketing communication preferences.
      properties:
        subscribedChannels:
          description: The list of channels that are subscribed
          items:
            $ref: >-
              #/components/schemas/CommunicationPreferencesCommunicationChannelsYaml
          type: array
        isDefault:
          description: >-
            Are these channel subscriptions the default or have they been set
            elsewhere. This is a read-only derived field.
          type: boolean
      type: object
    CommunicationPreferencesCommunicationChannelsYaml:
      description: The communication channel type
      enum:
        - email
        - sms
        - push
        - externally-managed
      type: string
    CommunicationPreferencesCommunicationPreferencesYaml:
      properties:
        marketing:
          $ref: >-
            #/components/schemas/CommunicationPreferencesChannelSubscriptionsWithDerivedFieldYaml
      type: object
    ConfigComparableYaml:
      anyOf:
        - type: integer
        - $ref: '#/components/schemas/ConfigVersionNumberYaml'
    ConfigCompositeFeatureValueYaml:
      title: CompositeFeatureValue
      description: Composite of primitive FeatureValues
      type: object
      additionalProperties:
        anyOf:
          - type: string
          - type: boolean
          - type: integer
    ConfigConfigYaml:
      type: object
      required:
        - createdAt
        - features
      properties:
        createdAt:
          description: The time the config file was created.
          format: date-time
          type: string
        features:
          description: The features defined for the scope this config file corresponds to.
          type: array
          items:
            type: object
            required:
              - key
              - valueType
              - defaultValueRules
            properties:
              key:
                description: The unique key of the feature.
                type: string
              valueType:
                description: The type of the value held by the feature.
                type: string
                enum:
                  - string
                  - bool
                  - int
                  - composite
              defaultValueRules:
                description: Default values in case nothing matches in evaluation.
                type: array
                items:
                  type: object
                  required:
                    - restrictions
                    - value
                  properties:
                    restrictions:
                      $ref: '#/components/schemas/ConfigPredicateYaml'
                    value:
                      allOf:
                        - description: Default value.
                        - $ref: '#/components/schemas/ConfigFeatureValueYaml'
              evaluationLogic:
                description: Information required to evaluate the value.
                type: object
                required:
                  - type
                  - detail
                properties:
                  type:
                    description: The mechanism used for evaluation.
                    type: string
                    enum:
                      - IdHash
                  detail:
                    description: >-
                      The details of the logic used to execute the evaluation
                      mechanism.
                    oneOf:
                      - $ref: >-
                          #/components/schemas/ConfigIdHashEvaluationLogicDetailYaml
      example:
        createdAt: '2023-10-25T10:30:42.490Z'
        features:
          - key: ept-samples::composite_feature
            valueType: composite
            defaultValueRules:
              - restrictions:
                  property: Country
                  in:
                    - NL
                    - UK
                value:
                  beanThereDoneThat: true
                  legumeWeight: 7
                  chiliFactor: nuclear
              - restrictions: {}
                value:
                  beanThereDoneThat: false
                  legumeWeight: 10
                  chiliFactor: winter
            evaluationLogic:
              type: IdHash
              detail:
                bucketBy: AnonUserId
                prefix: some-prefix
                rules:
                  - restrictions:
                      or:
                        - property: Country
                          in:
                            - ES
                            - IT
                        - and:
                            - property: Country
                              in:
                                - UK
                                - AU
                            - property: AppVersion
                              gte: 31.9.2
                    audienceFraction: 0.5
                    variants:
                      - weight: 1
                        value: foo
                        experimentKey: WibbleExperiment
                        experimentVariant:
                          beanThereDoneThat: true
                          legumeWeight: 1
                          chiliFactor: death
                      - weight: 1
                        value: bar
                        experimentKey: WibbleExperiment
                        experimentVariant:
                          beanThereDoneThat: false
                          legumeWeight: 5
                          chiliFactor: jam
    ConfigEquatableYaml:
      anyOf:
        - type: integer
        - type: boolean
        - type: string
    ConfigFeatureValueYaml:
      anyOf:
        - type: integer
        - type: boolean
        - type: string
        - $ref: '#/components/schemas/ConfigCompositeFeatureValueYaml'
    ConfigIdHashEvaluationLogicDetailYaml:
      type: object
      required:
        - bucketBy
        - prefix
        - rules
      properties:
        bucketBy:
          description: The id to hash to evaluate the bucket.
          type: string
          enum:
            - AnonUserId
        prefix:
          description: The string to prepend to the id to evaluate the buckets.
          type: string
        rules:
          description: One or more set of variants, with different restrictions.
          type: array
          items:
            type: object
            required:
              - restrictions
              - audienceFraction
              - variants
            properties:
              restrictions:
                $ref: '#/components/schemas/ConfigPredicateYaml'
              audienceFraction:
                description: Proportion of users to be evaluated.
                minimum: 0
                maximum: 1
                type: number
              variants:
                type: array
                items:
                  type: object
                  required:
                    - weight
                    - value
                  properties:
                    weight:
                      description: >-
                        The relative weight of this variant, for traffic
                        allocation.
                      minimum: 0
                      type: integer
                    value:
                      allOf:
                        - description: Value to return.
                        - $ref: '#/components/schemas/ConfigFeatureValueYaml'
                    experimentKey:
                      description: Experiment key to track, if not null.
                      nullable: true
                      type: string
                    experimentVariant:
                      description: Experiment variant name to track, if not null.
                      nullable: true
                      type: string
    ConfigPredicateYaml:
      description: >-
        A logical statement that is affirmed or denied when a restriction is
        being evaluated.
      type: object
      properties:
        and:
          description: Everything in array must evaluate to true.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ConfigPredicateYaml'
        or:
          description: Something in array must evaluate to true.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ConfigPredicateYaml'
        eq:
          allOf:
            - description: Value must equal this.
            - $ref: '#/components/schemas/ConfigEquatableYaml'
        neq:
          allOf:
            - description: Value must not equal this.
            - $ref: '#/components/schemas/ConfigEquatableYaml'
        in:
          description: Value must be in this array.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ConfigEquatableYaml'
        nin:
          description: Value must not be in this array.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ConfigEquatableYaml'
        gt:
          allOf:
            - description: Value must be greater than this.
            - $ref: '#/components/schemas/ConfigComparableYaml'
        gte:
          allOf:
            - description: Value must be greater than or equal to this.
            - $ref: '#/components/schemas/ConfigComparableYaml'
        lt:
          allOf:
            - description: Value must be less than this.
            - $ref: '#/components/schemas/ConfigComparableYaml'
        lte:
          allOf:
            - description: Value must be less than or equal to this.
            - $ref: '#/components/schemas/ConfigComparableYaml'
        property:
          description: The property to compare against.
          type: string
          enum:
            - Country
            - AppVersion
    ConfigVersionNumberYaml:
      description: Version number
      pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))*$
      type: string
    ConsumerConsumerAddressResponseYaml:
      type: object
      properties:
        AddressId:
          description: The consumer's unique address ID.
          type: number
          nullable: true
        City:
          description: The city where the consumer lives.
          type: string
          nullable: true
        ZipCode:
          description: The zip code of the consumer's address.
          type: string
          nullable: true
        AddressName:
          description: The name of the consumer's address.
          type: string
          nullable: true
        IsDefault:
          description: Indicates whether this is the consumer's default address.
          type: boolean
          nullable: true
        Line1:
          description: First line of the consumer's address.
          type: string
          nullable: true
        Line2:
          description: Second line of the consumer's address.
          type: string
          nullable: true
        Line3:
          description: Third line of the consumer's address.
          type: string
          nullable: true
    ConsumerConsumerAddressUpdateRequestYaml:
      description: Patch update the Consumer's address
      type: object
      properties:
        Line1:
          description: The consumer's address - line 1.
          type: string
          nullable: true
        Line2:
          description: The consumer's address - line 2.
          type: string
          nullable: true
        Line3:
          description: The consumer's address - line 3.
          type: string
          nullable: true
        City:
          description: The consumer's address - City.
          type: string
          nullable: true
        ZipCode:
          description: The consumers address - Zip code.
          type: string
          nullable: true
      example:
        Line1: 4 Privet Drive
        Line2: Little Whinging
        Line3: null
        City: Surrey
        ZipCode: CR25ER
    ConsumerConsumerDetailsResponseYaml:
      type: object
      properties:
        ConsumerId:
          description: The consumer id.
          type: number
        Id:
          description: The id.
          type: string
        CreatedDate:
          description: Date consumer was created.
          type: string
          nullable: true
        EmailAddress:
          description: The consumer's email address.
          type: string
        FirstName:
          description: The consumer's first name.
          type: string
        LastName:
          description: The consumer's last name.
          type: string
        PhoneNumber:
          description: The consumer's phone number.
          type: string
          nullable: true
        DateOfBirth:
          description: The consumer's date of birth.
          type: string
          nullable: true
        TermsAndConditionsId:
          description: The ID of the consumer's terms and conditions.
          type: number
          nullable: true
        WantsNewsletter:
          description: Whether the consumer wants a new letter or not.
          type: boolean
          nullable: true
        AccountType:
          description: The type of consumer account.
          type: string
          enum:
            - Default
            - Guest
          nullable: true
        ConsumerStatus:
          description: The status of the consumer
          type: string
          enum:
            - Undefined
            - NewConsumer
            - ReturnConsumer
          nullable: true
      required:
        - ConsumerId
        - EmailAddress
        - FirstName
        - LastName
    ConsumerConsumerDetailsUpdateRequestYaml:
      description: Patch updated the Consumer's details
      type: object
      properties:
        FirstName:
          description: The consumer's first name.
          type: string
          nullable: true
        LastName:
          description: The consumer's last name.
          type: string
          nullable: true
        Address:
          description: The consumer's address.
          $ref: '#/components/schemas/ConsumerConsumerAddressUpdateRequestYaml'
          nullable: true
        PhoneNumber:
          description: The consumer's phone number.
          type: string
          nullable: true
      example:
        FirstName: harry
        LastName: Potter
        Address:
          Line1: 4 Privet Drive
          Line2: Little Whinging
          Line3: null
          City: Surrey
          ZipCode: CR25ER
        PhoneNumber: '+441234567890'
    ConsumerConsumerDetailsUpdateResponseYaml:
      type: object
    ConsumerConsumerPreferenceYaml:
      description: Consumer preferences by type.
      type: object
      properties:
        Key:
          description: The key of the preference type.
          type: string
        Push:
          description: The consumer's push preference status.
          type: boolean
        Email:
          description: The consumer's email preference status.
          type: boolean
        Sms:
          description: The consumer's sms preference status.
          type: boolean
      required:
        - Key
        - Push
        - Email
        - Sms
    ConsumerConsumerPreferencesResponseYaml:
      description: A list of consumer preferences by type.
      type: object
      properties:
        Preferences:
          description: A list of consumer preferences.
          items:
            $ref: '#/components/schemas/ConsumerDisplayConsumerPreferenceYaml'
          type: array
        PreferenceVersionViewed:
          description: Version of the consumer preferences being viewed.
          type: number
      required:
        - Preferences
        - PreferenceVersionViewed
    ConsumerConsumerPreferencesUpdateRequestYaml:
      type: object
      properties:
        Preferences:
          description: An array of consumer preferences.
          items:
            $ref: '#/components/schemas/ConsumerConsumerPreferenceYaml'
          type: array
        DeviceToken:
          description: The token for the consumer's device.
          type: string
          nullable: true
        DeviceType:
          description: The type of the consumer's device.
          type: string
          nullable: true
        EmailAddress:
          description: The consumer email address.
          type: string
          nullable: true
        PhoneNumber:
          description: The consumer phone number.
          type: string
          nullable: true
        PreferenceVersionViewed:
          description: Version of the consumer preferences being viewed.
          type: number
      required:
        - Preferences
        - PreferenceVersionViewed
      example:
        Preferences:
          - DisplayName: Newsletter
            Sort: 0
            Key: newsletter
            Push: false
            Email: true
            Sms: true
        DeviceToken: Browser
        DeviceType: Browser
        PhoneNumber: '+441234567890'
        PreferenceVersionViewed: 0
    ConsumerConsumerPreferencesUpdateResponseYaml:
      type: object
    ConsumerDisplayConsumerPreferenceYaml:
      description: How a consumer's preference should be displayed.
      type: object
      properties:
        allOf:
          $ref: '#/components/schemas/ConsumerConsumerPreferenceYaml'
        DisplayName:
          description: The consumer preference display name.
          type: string
        Sort:
          description: The sort number for the consumer preference.
          type: number
          nullable: true
      required:
        - DisplayName
    ConsumerIntConsumerAddressYaml:
      description: Details of a consumer's address
      type: object
      properties:
        City:
          description: The city where the consumer lives.
          type: string
          nullable: true
        ZipCode:
          description: The zip code of the consumer's address.
          type: string
          nullable: true
        AddressName:
          description: The name of the consumer's address.
          type: string
          nullable: true
        Line1:
          description: First line of the consumer's address.
          type: string
          nullable: true
        Line2:
          description: Second line of the consumer's address.
          type: string
          nullable: true
        Line3:
          description: Third line of the consumer's address.
          type: string
          nullable: true
        Line4:
          description: Fourth line of the consumer's address.
          type: string
          nullable: true
        AdditionalInformation:
          description: |
            Additional information about the address.
            This is only supported in the following countries:
              - Austria (AT)
              - Germany (DE)
          type: object
          nullable: true
          properties:
            entrance:
              description: Entrance/access point to the building.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            floor:
              description: Floor/level of the building.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            door:
              description: Door to the building.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            companyName:
              description: Name of the company at the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            block:
              description: Block of the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            flatNumber:
              description: Flat number of the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            intercom:
              description: Intercom to the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            apartmentName:
              description: Name of the apartment at the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            accessCode:
              description: Access code of the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
    ConsumerIntConsumerAddressCreatedResponseYaml:
      description: Details of the address that has been added
      type: object
      properties:
        AddressId:
          description: The consumer's unique address ID.
          type: number
          nullable: true
    ConsumerIntConsumerAddressNotFoundSchemaYaml:
      description: A HTTP 404 error response
      type: object
      properties:
        message:
          description: Details of what is not found.
          type: string
    ConsumerIntConsumerAddressWithIdYaml:
      description: Details of an identifiable consumer's address
      type: object
      properties:
        AddressId:
          description: The consumer's unique address ID.
          type: number
          nullable: true
        City:
          description: The city where the consumer lives.
          type: string
          nullable: true
        ZipCode:
          description: The zip code of the consumer's address.
          type: string
          nullable: true
        AddressName:
          description: The name of the consumer's address.
          type: string
          nullable: true
        Line1:
          description: First line of the consumer's address.
          type: string
          nullable: true
        Line2:
          description: Second line of the consumer's address.
          type: string
          nullable: true
        Line3:
          description: Third line of the consumer's address.
          type: string
          nullable: true
        Line4:
          description: Fourth line of the consumer's address.
          type: string
          nullable: true
        AdditionalInformation:
          description: |
            Additional information about the address.
            This is only supported in the following countries:
              - Austria (AT)
              - Germany (DE)
          type: object
          nullable: true
          properties:
            entrance:
              description: Entrance/access point to the building.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            floor:
              description: Floor/level of the building.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            door:
              description: Door to the building.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            companyName:
              description: Name of the company at the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            block:
              description: Block of the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            flatNumber:
              description: Flat number of the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            intercom:
              description: Intercom to the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            apartmentName:
              description: Name of the apartment at the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
            accessCode:
              description: Access code of the address.
              type: string
              minLength: 1
              maxLength: 50
              nullable: true
    ConsumerIntConsumerAddressesResponseYaml:
      description: Details of a consumer's address
      type: object
      properties:
        Addresses:
          description: One of the consumer's addresses.
          type: array
          minItems: 0
          items:
            description: Represents one of the consumer's addresses address.
            nullable: false
            $ref: '#/components/schemas/ConsumerIntConsumerAddressWithIdYaml'
          nullable: false
        DefaultAddress:
          description: The Address Id of the customer's default address.
          type: number
    ConsumerIntConsumerDetailsResponseYaml:
      type: object
      properties:
        Email:
          description: The consumer's email address.
          type: string
        Name:
          description: The consumer's full name.
          type: string
        PhoneNumber:
          description: The consumer's phone number.
          type: string
          nullable: true
        CanChangePhoneNumber:
          description: Whether the consumer is allowed to update their phone number.
          type: boolean
        WantsNewsletter:
          description: Whether the consumer wants the newsletter or not.
          type: boolean
          nullable: true
        PreferredLanguage:
          description: What language the consumer has selected, if applicable.
          type: string
          nullable: true
        CreatedDate:
          description: Date the consumer was created.
          type: string
          nullable: true
        ConsumerStatus:
          description: The status of the consumer.
          type: string
          enum:
            - Undefined
            - NewConsumer
            - ReturnConsumer
          nullable: true
      required:
        - Email
        - Name
        - CanChangePhoneNumber
        - ConsumerStatus
    ConsumerIntConsumerPreferencesErrorYaml:
      type: object
      properties:
        title:
          description: A consistent, human-readable summary of the problem
          type: string
        type:
          description: A URI reference that identifies the problem type
          type: string
        status:
          description: The HTTP status code
          type: number
        detail:
          description: More details about the error that occurred
          type: string
    ConsumerIntConsumerPreferencesResponseYaml:
      type: object
      properties:
        transactional:
          description: Transactional consumer preferences
          type: object
          properties:
            channel:
              description: Consumer preferences for channel of communication
              type: object
              properties:
                sms:
                  description: Through SMS
                  type: boolean
                push:
                  description: Through push notifications
                  type: boolean
                email:
                  description: Through email
                  type: boolean
            notification:
              description: Consumer preferences for notification
              type: object
              properties:
                orderOutcome:
                  description: Order outcome
                  type: boolean
                onItsWay:
                  description: Order on it's way
                  type: boolean
                anotherReason:
                  description: Order outcome - Another reason
                  type: boolean
                rateYourMeal:
                  description: Rate your meal
                  type: boolean
        marketing:
          description: Consumer marketing preferences
          type: object
          properties:
            channel:
              description: Consumer marketing preferences for channel of communication
              type: object
              properties:
                sms:
                  description: Through SMS
                  type: boolean
                push:
                  description: Through Push notification
                  type: boolean
                email:
                  description: Through email
                  type: boolean
      example:
        transactional:
          channel:
            email: true
            push: false
            sms: false
          notification:
            orderOutcome: true
            onItsWay: true
            anotherReason: true
            rateYourMeal: true
        marketing:
          channel:
            email: true
            push: false
            sms: false
    ConsumerIntUpdateConsumerDetailsRequestYaml:
      type: object
      properties:
        Email:
          description: An updated email address for the consumer.
          type: string
          nullable: true
        Name:
          description: An updated name value for the consumer.
          type: string
          nullable: true
        PhoneNumber:
          description: An updated phone number for the consumer.
          type: string
          nullable: true
        WantsNewsletter:
          description: An updated value for the "Wants Newsletter" property.
          type: boolean
          nullable: true
        PreferredLanguage:
          description: An updated preferred language for the consumer.
          type: string
          nullable: true
    ConsumerIntUpdateConsumerDetailsResponseYaml:
      type: object
      required:
        - ShouldRefreshToken
      properties:
        ShouldRefreshToken:
          description: >-
            Whether the client should refresh the consumer's access token after
            the update operation has completed.
          type: boolean
          nullable: false
        Errors:
          description: >-
            A collection of errors that occurred when attempting to update the
            consumer.
          type: array
          nullable: true
          items:
            description: >-
              Encapsulates an error that occurred when attempting to update the
              consumer property.
            type: object
            properties:
              Property:
                description: Property the error relates to.
                nullable: false
                type: string
              Status:
                description: Status code returned when attempting to update property.
                nullable: false
                type: number
              Message:
                description: Human-readable reason why property couldn't be updated.
                nullable: false
                type: string
    ConsumerUkConsumerAddressWithIdYaml:
      description: Details of an identifiable consumer's address
      type: object
      properties:
        AddressId:
          description: The consumer's unique address ID.
          type: number
          nullable: true
        City:
          description: The city where the consumer lives.
          type: string
          nullable: true
        ZipCode:
          description: The zip code of the consumer's address.
          type: string
          nullable: true
        AddressName:
          description: The name of the consumer's address.
          type: string
          nullable: true
        Line1:
          description: First line of the consumer's address.
          type: string
          nullable: true
        Line2:
          description: Second line of the consumer's address.
          type: string
          nullable: true
        Line3:
          description: Third line of the consumer's address.
          type: string
          nullable: true
        Line4:
          description: Fourth line of the consumer's address.
          type: string
          nullable: true
    ConsumerUkConsumerAddressesResponseYaml:
      description: Details of a consumer's address
      type: object
      properties:
        Addresses:
          description: Represents the collection of consumer addresses.
          type: array
          minItems: 0
          nullable: false
          items:
            description: Represents a consumer's address.
            nullable: false
            $ref: '#/components/schemas/ConsumerUkConsumerAddressWithIdYaml'
        DefaultAddress:
          description: The Id of the consumer's default address.
          type: number
    ConsumerUkConsumerDetailsResponseYaml:
      type: object
      properties:
        Email:
          description: The consumer's email address.
          type: string
        Name:
          description: The consumer's full name.
          type: string
        PhoneNumber:
          description: The consumer's phone number.
          type: string
          nullable: true
        CanChangePhoneNumber:
          description: Whether the consumer is allowed to update their phone number.
          type: boolean
        ConsumerStatus:
          description: The status of the consumer.
          type: string
          enum:
            - Undefined
            - NewConsumer
            - ReturnConsumer
          nullable: true
      required:
        - Email
        - Name
        - CanChangePhoneNumber
        - ConsumerStatus
    ConsumerUkUpdateConsumerDetailsRequestYaml:
      type: object
      properties:
        Email:
          description: An updated email address for the consumer.
          type: string
          nullable: true
        Name:
          description: An updated name for the consumer.
          type: string
          nullable: true
        PhoneNumber:
          description: An updated phone number for the consumer.
          type: string
          nullable: true
    ConsumerUkUpdateConsumerDetailsResponseYaml:
      type: object
      required:
        - ShouldRefreshToken
      properties:
        ShouldRefreshToken:
          description: >-
            Whether the client should refresh the consumer's access token after
            the update operation has completed.
          type: boolean
          nullable: false
    ConsumerhelpBadItemIssueSelectionStepYaml:
      description: >-
        Flow step used for selecting the issue (e.g. missing / cold) when
        complaining about order items
      allOf:
        - $ref: '#/components/schemas/ConsumerhelpFlowStepBaseYaml'
        - properties:
            leaveReviewAction:
              description: Action to leave a review
              $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
            actions:
              description: Array of actions (i.e. buttons)
              items:
                $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
              type: array
            header:
              description: Display header
              type: string
            foodSafetyAction:
              description: Action that opens Food Safety info
              $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
            issueOptionActions:
              description: Array of actions that select the issue
              items:
                description: Array of items to choose
                $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
              type: array
            body:
              description: Array of paragraphs for body text
              items:
                type: string
              type: array
          type: object
      type: object
    ConsumerhelpCustomisationResponseYaml:
      description: Information about initial options to show to user
      properties:
        experimentEvents:
          description: list of experiments running for this client
          items:
            $ref: '#/components/schemas/ConsumerhelpExperimentEventYaml'
          type: array
        helpSessionId:
          description: Unique id for this help session
          type: string
        personalisation:
          description: Personalisation details
          properties:
            topLevelActions:
              description: Top-level actions not necessarily pertaining to the order
              items:
                $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
              type: array
            callRestaurantAction:
              $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
            dataLayer:
              description: Key/values to be passed to analytics
              type: object
              additionalProperties: true
            orderActions:
              description: Actions pertaining to the order
              items:
                $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
              type: array
          type: object
        config:
          description: Config for the event
          properties:
            personalisedHelpEnabled:
              description: Should we show Personalised Help
              type: boolean
            liveChatEnabled:
              description: Should we enable Live Chat
              type: boolean
          type: object
      type: object
      example:
        helpSessionId: helpsessionid
        config:
          personalisedHelpEnabled: true
          liveChatEnabled: true
        personalisation:
          callRestaurantAction:
            title: Call the restaurant
            postText: []
            preText: []
            buttonType: Primary
            department: LiveChat
            notes: note
            id: CallRestaurant
            type: Call
            action: '+441234567890'
            buttonEvent:
              category: engagement
              action: click_call_restaurant
              label: call restaurant
              value: 0
            data: {}
          orderActions:
            - title: I want to cancel my order
              postText: []
              preText: []
              buttonType: Secondary
              department: LiveChat
              notes: note
              id: Cancel
              type: ChapiGet
              action: /applications/consumerhelp/flows/cancellation/uk/orderid/start
              buttonEvent:
                category: engagement
                action: click_cancel_order
                label: helpflow
                value: 0
              data: {}
            - title: I'm unhappy with my order
              postText: []
              preText: []
              buttonType: Secondary
              department: LiveChat
              notes: note
              id: BadItem
              type: ChapiGet
              action: /applications/consumerhelp/flows/baditems/uk/orderid/start
              buttonEvent:
                category: engagement
                action: click_bad_item
                label: helpflow
                value: 0
              data: {}
        dataLayer:
          helpData_helpSessionId: helpsessionid
          helpData_isPilot: 32
          helpData_features: >-
            o:cancel_order|o:bad_item|o:call_restaurant|t:open_chatbot|t:email_justeat|t:call_justeat
          transactionData_orderStatus: Accepted
          transactionData_newTransactionId: orderid
          transactionData_nTotalItems: 0
          transactionData_dateDiff: -1800
          transactionData_orderDelay: null
          trData_trId: null
          trData_menuType: collection
        topLevelActions:
          - title: Chat to us
            postText: []
            preText: []
            buttonType: Primary
            department: LiveChat
            notes: note
            id: StartChatBot
            type: Chatbot
            action: null
            buttonEvent:
              category: engagement
              action: click_open_chatbot
              label: open chatbot
              value: 0
            data: {}
          - title: Email our happy helpers
            postText: []
            preText: []
            buttonType: Secondary
            department: LiveChat
            notes: note
            id: EmailJustEat
            type: Email
            action: info@just-eat.co.uk
            buttonEvent:
              category: engagement
              action: click_email_justeat
              label: email justeat
              value: 0
            data: {}
          - title: Phone a human
            postText: []
            preText: []
            buttonType: Secondary
            department: LiveChat
            notes: note
            id: PhoneJustEat
            type: Call
            action: 0344 243 7777
            buttonEvent:
              category: engagement
              action: click_call_justeat
              label: call justeat
              value: 0
            data: {}
        experimentEvents:
          - version: '1'
            id: EX-1742
            name: bandit_exp_new_carousels_2
            parentId: '1234567890'
            platform: optimizely_fullstack
            variantName: variant_d
    ConsumerhelpCustomisationResponseWebYaml:
      description: Information about initial options to show to user
      properties:
        user:
          description: The current user
          properties:
            isLoggedIn:
              description: Is the user currently logged in?
              type: boolean
            name:
              description: The user's name
              type: string
          type: object
        config:
          description: General config / feature toggles
          properties:
            personalisedHelpEnabled:
              description: Should we show Personalised Help
              type: boolean
            liveChatEnabled:
              description: Should we enable Live Chat
              type: boolean
          type: object
        helpSessionId:
          description: Unique id for this help session
          type: string
        restaurant:
          description: The restaurant of the most recent or specified order
          properties:
            telephone:
              description: Restaurant's telephone number
              type: string
            name:
              description: Name of the restaurant
              type: string
            thumbnail:
              description: URI for the restaurant's thumbnail image
              type: string
          type: object
        personalisation:
          description: The actions that are relevant to this customer / order
          properties:
            topLevelActions:
              description: Top-level actions not necessarily pertaining to the order
              items:
                $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
              type: array
            callRestaurantAction:
              description: Action to call the restaurant, if possible at this time
              $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
            dataLayer:
              description: Key/values to be passed to analytics
              type: object
              additionalProperties: true
            orderActions:
              description: Actions pertaining to the order
              items:
                $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
              type: array
          type: object
        order:
          description: The customer's most recent or specified order
          properties:
            status:
              description: Information related to the status of the order
              properties:
                preamble:
                  description: Friendly 'preamble' text to display to the customer
                  type: string
                isFinishedWithNegativeOutcome:
                  description: Is this order in a final, unhappy (e.g. Cancelled) state?
                  type: boolean
                isActive:
                  description: Is this an active order?
                  type: boolean
                preAcceptance:
                  description: Is this order still awaiting acceptance from a restaurant?
                  type: boolean
                isFinishedWithPositiveOutcome:
                  description: Is this order in a final, happy, state?
                  type: boolean
                dateText:
                  description: The date / time to display to the customer
                  type: string
                isForDelivery:
                  description: Is this a delivery order (as opposed to collection)?
                  type: boolean
                value:
                  description: The consumer status of the order
                  type: string
                statusText:
                  description: Friendly text to display to the customer
                  type: string
              type: object
            friendlyReference:
              description: Friendly order id.  Usually numeric
              type: string
            id:
              description: Alphanumeric order id
              type: string
          type: object
      type: object
      example:
        helpSessionId: helpsessionid
        config:
          personalisedHelpEnabled: true
          liveChatEnabled: true
        personalisation:
          callRestaurantAction:
            title: Call the restaurant
            postText: []
            preText: []
            buttonType: Primary
            department: LiveChat
            notes: note
            id: CallRestaurantX
            type: Call
            action: '+441234567890'
            buttonEvent:
              category: engagement
              action: click_call_restaurant
              label: call restaurant
              value: 0
            data: {}
          orderActions:
            - title: I want to cancel my order
              postText: []
              preText: []
              buttonType: Secondary
              department: LiveChat
              notes: note
              id: CancelX
              type: ChapiGet
              action: /applications/consumerhelp/flows/cancellation/uk/orderid/start
              buttonEvent:
                category: engagement
                action: click_cancel_order
                label: helpflow
                value: 0
              data: {}
            - title: I'm unhappy with my order
              postText: []
              preText: []
              buttonType: Secondary
              department: LiveChat
              notes: note
              id: BadItemX
              type: ChapiGet
              action: /applications/consumerhelp/flows/baditems/uk/orderid/start
              buttonEvent:
                category: engagement
                action: click_bad_item
                label: helpflow
                value: 0
              data: {}
        dataLayer:
          helpData_helpSessionId: helpsessionid
          helpData_isPilot: 32
          helpData_features: >-
            o:cancel_order|o:bad_item|o:call_restaurant|t:open_chatbot|t:email_justeat|t:call_justeat
          transactionData_orderStatus: Accepted
          transactionData_newTransactionId: orderid
          transactionData_nTotalItems: 0
          transactionData_dateDiff: -1800
          transactionData_orderDelay: null
          trData_trId: null
          trData_menuType: collection
        topLevelActions:
          - title: Chat to us
            postText: []
            preText: []
            buttonType: Primary
            department: LiveChat
            notes: note
            id: StartChatBotX
            type: Chatbot
            action: Chat
            buttonEvent:
              category: engagement
              action: click_open_chatbot
              label: null
              value: null
            data: null
          - title: Email our happy helpers
            postText: []
            preText: []
            buttonType: Secondary
            department: LiveChat
            notes: note
            id: EmailJustEatX
            type: Email
            action: info@just-eat.co.uk
            buttonEvent:
              category: engagement
              action: click_email_justeat
              label: null
              value: null
            data: null
          - title: Phone a human
            postText: []
            preText: []
            buttonType: Secondary
            department: LiveChat
            notes: note
            id: PhoneJustEatX
            type: Call
            action: 0344 243 7777
            buttonEvent:
              category: engagement
              action: click_call_justeat
              label: null
              value: null
            data: null
        order:
          id: alphanumericid
          friendlyReference: '1234567890'
          status:
            value: Accepted
            statusText: >-
              The restaurant has confirmed the delivery time. The countdown to
              your first bite has begun...
            preamble: Delivering around
            dateText: '11:48'
            isActive: true
            isFinishedWithPositiveOutcome: false
            isFinishedWithNegativeOutcome: false
            preAcceptance: false
            isForDelivery: true
        restaurant:
          name: Bob's kebabs
          thumbnail: >-
            https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTRnTQ8sfP8yxicqMBoAymdKzrpjhtwSeCIXdpqhZ7Hrj8FLBfB
          telephone: +44 1234 123123
        user:
          name: John
          isLoggedIn: true
    ConsumerhelpExperimentEventYaml:
      description: >-
        Represents a possible experiment event on personalised help attached to
        customisation or to a Help Action. This will be sent from the client as
        an ExperimentV2 Google Analytics event
      properties:
        version:
          description: The version of the running experiment
          type: string
        name:
          description: A name that describes the experiment
          type: string
        platform:
          description: The platform where the experiment comes from
          type: string
        id:
          description: Unique but meaningful id for the experiment
          type: string
        parentId:
          description: The parent experiment id of the current experiment
          type: string
        variantName:
          description: The name of the variant the user is bucketed into
          type: string
      type: object
    ConsumerhelpFlowResponseYaml:
      properties:
        stepResponse:
          description: The step response
          properties:
            data:
              $ref: '#/components/schemas/ConsumerhelpFlowStepYaml'
            type:
              description: The type of the flow
              enum:
                - TextAndActions
                - ItemSelection
                - BadItemIssueSelection
                - RequestCsat
                - LateOrderUpdateReceived
              type: string
          type: object
        modals:
          description: Dictionary of strings to `FlowStepResponses`
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConsumerhelpFlowStepYaml'
      type: object
      example:
        stepResponse:
          data:
            title: Cancel order
            actions:
              - title: Cancel order - pay £5.50
                department: LiveChat
                postText: []
                id: ConfirmCancel
                type: ChapiPost
                notes: null
                buttonEvent:
                  value: 550
                  category: engagement
                  action: form_cancel_order
                  label: confirm_charged
                preText: []
                action: >-
                  /uk/flows/cancellation/1234/confirm?reasonCode=cust_cancelled_changed_mind&flowId=XXX
                buttonType: Primary
                data: null
              - title: Keep my order
                department: LiveChat
                postText: []
                id: EndFlow
                type: EndFlow
                notes: null
                buttonEvent:
                  value: 0
                  category: engagement
                  action: form_cancel_order
                  label: close
                preText: []
                action: null
                buttonType: Secondary
                data: {}
            iconType: null
            body:
              - >-
                You will need to pay for 50% of your order. This charge will
                come to £5.50.
              - >-
                We are unable to offer a full refund because the restaurant has
                already started preparing your food.
            header: Are you sure you want to cancel this order?
          closeButton:
            title: Close
            notes: note
            department: LiveChat
            buttonType: CloseButton
            type: EndFlow
            preText: []
            buttonEvent:
              value: 0
              category: engagement
              action: form_cancel_order
              label: close
            postText: []
            data: {}
            action: /uk/flows/close
            id: EndFlowX
            event:
              dataLayer:
                transactionData_dateDiff: -3600
                screenName: /cancel-order/self-cancel-charged
                transactionData_delay: -1800
          type: TextAndActions
        modals: {}
    ConsumerhelpFlowStepYaml:
      description: The possible steps that can be returned as part of flows
      oneOf:
        - $ref: '#/components/schemas/ConsumerhelpTextAndActionsStepYaml'
        - $ref: '#/components/schemas/ConsumerhelpItemSelectionStepYaml'
        - $ref: '#/components/schemas/ConsumerhelpBadItemIssueSelectionStepYaml'
        - $ref: '#/components/schemas/ConsumerhelpRequestCsatStepYaml'
        - $ref: '#/components/schemas/ConsumerhelpLateOrderUpdateReceivedStepYaml'
    ConsumerhelpFlowStepBaseYaml:
      description: Abstract base schema for flow steps.
      properties:
        title:
          description: The title
          type: string
        screenEvent:
          description: Details of the event
          properties:
            dataLayer:
              description: Additional data
              additionalProperties: true
              properties:
                screenName:
                  description: The name for the current screen
                  type: string
              type: object
          type: object
        closeButton:
          $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
        experimentEvents:
          description: list of experiments running for this client
          items:
            $ref: '#/components/schemas/ConsumerhelpExperimentEventYaml'
          type: array
      type: object
    ConsumerhelpHeaderIconYaml:
      description: The header icon for the Digital Services Act Report Form
      type: object
      properties:
        name:
          description: The icon name
          type: string
        url:
          description: The icon URL
          type: string
          format: uri
    ConsumerhelpHelpActionYaml:
      description: >-
        Represents a possible action (i.e. button) on personalised help home
        page or as part of a flow
      properties:
        title:
          description: Caption for the button
          type: string
        preText:
          description: Paragraphs to display before button
          items:
            type: string
          type: array
        data:
          description: 'Data to post back (for use with type: ChapiPost).'
          additionalProperties: true
          type: object
        id:
          description: Unique but meaningful id for the action
          type: string
        type:
          description: The type of action a button tap invokes
          enum:
            - LogIn
            - Call
            - Chatbot
            - LiveChat
            - ChapiGet
            - ChapiPost
            - Link
            - HelpArticleLink
            - EndFlow
            - Email
            - Deferred
            - OpenModal
            - CloseModal
            - NoAction
          type: string
        buttonEvent:
          description: The analytics event to send on tap
          properties:
            action:
              description: Google Analytics action
              type: string
            label:
              description: Google Analytics label (if any)
              type: string
            category:
              description: Google Analytics category
              type: string
            value:
              description: Google Analytics value (if any)
              type: number
          type: object
        buttonType:
          description: Display type of button
          enum:
            - Primary
            - Secondary
            - TextOnly
            - CloseButton
            - Option
            - OptionExtra
            - FoodSafety
          type: string
        postText:
          description: Paragraphs to display after button
          items:
            type: string
          type: array
        department:
          description: 'LiveChat department (for use with type: LiveChat)'
          type: string
        action:
          description: The specific action a button tap invokes.  Content depends on type.
          type: string
        notes:
          description: 'Notes to pass to LiveChat (for use with type: LiveChat)'
          type: string
      type: object
    ConsumerhelpHiddenInputYaml:
      description: Hidden input field
      type: object
      properties:
        name:
          description: The field name
          type: string
        type:
          description: The field type
          type: string
        label:
          description: The field label
          type: string
        value:
          description: The value of the hidden field
          type: string
    ConsumerhelpInputYaml:
      description: The form inputs to display on the page
      anyOf:
        - $ref: '#/components/schemas/ConsumerhelpTextAreaInputYaml'
        - $ref: '#/components/schemas/ConsumerhelpSelectInputYaml'
        - $ref: '#/components/schemas/ConsumerhelpHiddenInputYaml'
    ConsumerhelpItemSelectionStepYaml:
      description: Flow step used for selecting problematic items
      allOf:
        - $ref: '#/components/schemas/ConsumerhelpFlowStepBaseYaml'
        - properties:
            body:
              description: Array of paragraphs for body text
              items:
                type: string
              type: array
            items:
              description: Array of items in order to choose from
              items:
                properties:
                  price:
                    description: Formatted price of item
                    type: string
                  name:
                    description: Name of item
                    type: string
                  id:
                    description: Unique id of item
                    type: string
                type: object
              type: array
            header:
              description: Display header
              type: string
            actions:
              description: Array of actions (i.e. buttons)
              items:
                $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
              type: array
          type: object
      type: object
    ConsumerhelpLateOrderUpdateReceivedStepYaml:
      description: >-
        Flow step used to display the restaurant's response to a customer's Late
        Order update request
      allOf:
        - $ref: '#/components/schemas/ConsumerhelpFlowStepBaseYaml'
        - properties:
            newDueDate:
              description: New expected due date
              format: date-time
              type: string
            actions:
              description: Array of actions (i.e. buttons)
              items:
                $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
              type: array
            header:
              description: Display header
              type: string
            message:
              description: Message from restaurant
              type: string
            messageHeader:
              description: Header for the message from restaurant
              type: string
          type: object
      type: object
    ConsumerhelpLegalConcernRequestYaml:
      properties:
        info:
          description: Additional context about the subject of the complaint
          type: string
        topic:
          description: Topic code representing the context for the legal concern
          type: string
        reason:
          description: Reason code representing the reason for the legal concern
          type: string
        additionalContext:
          description: Details of the request
          type: string
        name:
          description: The customer name
          type: string
        email:
          description: The customer email address
          type: string
          format: email
        confirmation:
          description: Confirmation from the customer
          type: boolean
        identifier:
          description: An identifier relating to the subject of the legal concern
          type: string
        partnerId:
          description: The Id of the Partner (e.g. a restaurant)
          type: string
        partnerName:
          description: The Name of the Partner (e.g. a restaurant)
          type: string
      type: object
    ConsumerhelpReportLegalConcernResponseYaml:
      description: The page data for the Digital Services Act Report Form
      type: object
      properties:
        header:
          description: The page header
          type: string
        body:
          description: The page body
          type: string
        headerIcon:
          $ref: '#/components/schemas/ConsumerhelpHeaderIconYaml'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerhelpInputYaml'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerhelpSupportRequestHelpActionYaml'
    ConsumerhelpRequestCsatStepYaml:
      description: Flow step used for asking if customer was satisfied with flow
      allOf:
        - $ref: '#/components/schemas/ConsumerhelpFlowStepBaseYaml'
        - properties:
            quitFlowAction:
              $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
          type: object
      type: object
    ConsumerhelpSelectInputYaml:
      description: Select input field
      type: object
      properties:
        name:
          description: The field name
          type: string
        type:
          description: The field type
          type: string
        label:
          description: The field label
          type: string
        required:
          description: Whether the input must have a value on submission
          type: boolean
        requiredErrorText:
          description: The error message to display when the required field has no value
          type: string
          nullable: true
        options:
          type: array
          minItems: 3
          maxItems: 9
          items:
            $ref: '#/components/schemas/ConsumerhelpSelectInputOptionYaml'
    ConsumerhelpSelectInputOptionYaml:
      description: Select input options
      type: object
      properties:
        name:
          description: The option name
          type: string
        value:
          description: The option value
          type: string
        selected:
          description: Whether the option is selected
          type: boolean
    ConsumerhelpSupportRequestHelpActionYaml:
      description: The action button for the form
      type: object
      properties:
        title:
          description: The action title
          type: string
        name:
          description: The button name
          type: string
        type:
          description: The type of action a button tap invokes
          enum:
            - logIn
            - call
            - chatbot
            - liveChat
            - chapiGet
            - chapiPost
            - link
            - helpArticleLink
            - endFlow
            - email
            - deferred
            - openModal
            - closeModal
            - noAction
          type: string
        buttonType:
          description: Display type of button
          enum:
            - primary
            - secondary
            - textOnly
            - closeButton
            - option
            - optionExtra
            - foodSafety
          type: string
        action:
          description: The specific action a button tap invokes.  Content depends on type.
          type: string
        buttonEvent:
          description: The analytics event to send on tap
          properties:
            action:
              description: Google Analytics action
              type: string
            label:
              description: Google Analytics label (if any)
              type: string
              nullable: true
            category:
              description: Google Analytics category
              type: string
            value:
              description: Google Analytics value (if any)
              type: number
              nullable: true
          type: object
    ConsumerhelpTextAndActionsStepYaml:
      description: '''Default'' flow step, consisting of text and next-step actions'
      allOf:
        - $ref: '#/components/schemas/ConsumerhelpFlowStepBaseYaml'
        - properties:
            body:
              description: Array of paragraphs for body text
              items:
                type: string
              type: array
            header:
              description: Display header
              type: string
            actions:
              description: Array of actions (i.e. buttons)
              items:
                $ref: '#/components/schemas/ConsumerhelpHelpActionYaml'
              type: array
          type: object
      type: object
    ConsumerhelpTextAreaInputYaml:
      description: Text area input field
      type: object
      properties:
        name:
          description: The field name
          type: string
        type:
          description: The field type
          type: string
        label:
          description: The field label
          type: string
        preText:
          description: Array of paragraphs for pre text
          items:
            type: string
          type: array
        postText:
          description: Array of paragraphs for post text
          items:
            type: string
          type: array
        maxCharacterLength:
          description: The maximum number of characters to accept in the input field
          format: int32
          type: number
        maxCharacterLengthErrorText:
          description: >-
            The error message to display when maximum character length has been
            exceeded
          type: string
        minCharacterLength:
          description: The minimum number of characters to accept in the input field
          format: int32
          type: number
        minCharacterLengthErrorText:
          description: >-
            The error message to display when minimum character length has been
            met
          type: string
        placeholder:
          description: The placeholder text
          type: string
        required:
          description: Whether the text area must have values on submission
          type: boolean
        requiredErrorText:
          description: The error message to display when the required field has no value
          type: string
        typeMismatchErrorText:
          description: >-
            The error message to display when the value does not match the
            correct format
          type: string
    ConsumerhelpSupportRequestYaml:
      properties:
        subject:
          description: What is this request about?
          type: string
        body:
          description: Detail of the request
          type: string
        orderid:
          description: The id of the order this request relates to
          type: string
      type: object
    ConsumeroffersConsumerOfferYaml:
      title: ConsumerOffer
      description: Details of a consumer offer
      properties:
        priority:
          nullable: false
          $ref: '#/components/schemas/ConsumeroffersConsumerOffersPriorityYaml'
        offerType:
          nullable: false
          $ref: '#/components/schemas/ConsumeroffersConsumerOfferTypeYaml'
        offerId:
          description: The unique identifier of the offer.
          nullable: false
          type: string
        externalOfferId:
          description: >-
            The unique identifiers from a system outside of Just Eat that
            sourced this offer.
          nullable: true
          type: string
        qualifyingCriteria:
          nullable: true
          $ref: >-
            #/components/schemas/ConsumeroffersConsumerOfferQualifyingCriteriaYaml
        consumerSegment:
          nullable: false
          $ref: '#/components/schemas/ConsumeroffersConsumerSegmentYaml'
        campaignId:
          description: The unique identifier of the offer campaign.
          nullable: true
          type: string
        restaurantId:
          description: The unique identifier of the restaurant providing the offers.
          nullable: false
          type: string
      type: object
      required:
        - offerId
        - restaurantId
        - offerType
        - consumerSegment
        - priority
    ConsumeroffersConsumerOfferNotificationYaml:
      allOf:
        - $ref: '#/components/schemas/ConsumeroffersConsumerOfferYaml'
        - description: Details of a notification offer
          required:
            - description
          properties:
            description:
              description: The description of the offer.
              nullable: false
              type: string
          type: object
      example:
        description: Check out our new lunch menu
        offerId: 12345sd
        restaurantId: 1234sd
        offerType: notification
        campaignId: notifyOnNewMenu
        consumerSegment: all
    ConsumeroffersConsumerOfferNotificationDictionaryYaml:
      title: ConsumerOfferNotificationDictionary
      description: >-
        Object that holds offer localised descriptions in different formats,
        e.g., markdown format
      required:
        - markdown
      type: object
      example:
        markdown:
          short: Free item with selected orders
          long: Free **Drink** when you spend $20
      properties:
        markdown:
          description: >-
            Short and long offer descriptions in markdown format. The messages
            are localised for the requested Accept-Language.
          nullable: true
          $ref: >-
            #/components/schemas/ConsumeroffersConsumerOfferNotificationDictionaryItemYaml
    ConsumeroffersConsumerOfferNotificationDictionaryItemYaml:
      title: ConsumerOfferNotificationDictionaryItem
      description: Short and long offer descriptions
      required:
        - short
        - long
      type: object
      example:
        short: Free item with selected orders
        long: Free **Drink** when you spend $20
      properties:
        short:
          description: The description of the offer to be displayed for customers
          nullable: false
          type: string
        long:
          description: The description of the offer to be displayed for customers
          nullable: false
          type: string
    ConsumeroffersConsumerOfferNotificationV2Yaml:
      title: ConsumerOfferNotificationV2
      description: >-
        Object that holds offer descriptions in different formats along with
        additional offer settings
      required:
        - offerId
        - restaurantId
        - offerType
        - consumerSegment
      type: object
      example:
        offerId: f89c0142-cd8f-4575-885c-864661c566f7
        restaurantId: 1234567ds
        notification:
          markdown:
            short: Free item with selected orders
            long: Free **Drink** when you spend $20
        consumerSegment: all
        campaignId: freeDrinks_Oct26_sdvbdnvkNLKNV
        offerType: freeItem
        maximumRedemptions: 1
        minimumSpendValue:
          value: 2000
      properties:
        offerId:
          description: The unique identifier of the offer.
          nullable: false
          type: string
        restaurantId:
          description: The unique identifier of the restaurant providing the offers.
          nullable: false
          type: string
        notification:
          description: Offer message to be displayed for customers.
          nullable: true
          $ref: >-
            #/components/schemas/ConsumeroffersConsumerOfferNotificationDictionaryYaml
        consumerSegment:
          description: Consumer Segment to which offer applies
          nullable: false
          $ref: '#/components/schemas/ConsumeroffersConsumerSegmentYaml'
        campaignId:
          description: The unique identifier of the offer campaign.
          nullable: true
          type: string
        offerType:
          description: The type of the offer.
          nullable: false
          $ref: '#/components/schemas/ConsumeroffersConsumerOfferTypeYaml'
        offerMenuItems:
          description: Collection of menu products related to offer
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/ConsumeroffersOfferMenuItemYaml'
        maximumRedemptions:
          description: >-
            The maximum number of discounted items for this offer, null if
            unlimited
          format: integer
          type: number
          nullable: true
        minimumSpendValue:
          description: >-
            The minimum spend value required to be eligible for the offer
            discount in smallest unit of relevant currency. The value is null
            for offers without minimum spend value
          nullable: true
          $ref: '#/components/schemas/ConsumeroffersMoneyYaml'
    ConsumeroffersConsumerOfferPromptYaml:
      allOf:
        - properties:
            title:
              description: The title to show in prompt for customer
              type: string
            description:
              description: The description of offer to show in prompt for customer
              type: string
            header:
              description: The header to show in prompt for customer
              nullable: true
              type: string
          type: object
      example:
        title: Nice! You get this free with your order
        description: We�ll apply the discount at checkout
        header: Free item
    ConsumeroffersConsumerOfferQualifyingCriteriaYaml:
      title: ConsumerOfferQualifyingCriteria
      description: Conditions that must be met in order to get the offer.
      type: object
      properties:
        minimumSpendValue:
          description: >-
            The minimum spend value required to be eligible for the Offer in
            smallest unit of relevant currency.
          nullable: true
          format: integer
          type: number
        products:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ConsumeroffersConsumerOffersProductYaml'
          nullable: true
        categories:
          type: array
          minItems: 1
          items:
            $ref: >-
              #/components/schemas/ConsumeroffersConsumerOffersProductCategoryYaml
          nullable: true
      example:
        minimumSpendValue: 1000
        products:
          - id: FrenchFriesBig1
        categories:
          - id: Sides111
    ConsumeroffersConsumerOfferStampCardDiscountYaml:
      description: Details of a the stamp card discount
      required:
        - discountValue
        - discountCode
      properties:
        discountCode:
          description: >-
            The unique code of the discount, acts as a lock object at payment
            stage
          nullable: false
          type: string
        discountValue:
          description: The discount value in smallest unit of relevant currency.
          nullable: false
          format: integer
          type: number
      type: object
    ConsumeroffersConsumerOfferTypeYaml:
      description: The type of the offer.
      enum:
        - percent
        - freeItem
        - bogof
        - bogofMixMatch
        - stampCard
        - notification
        - itemLevelDiscount
      type: string
    ConsumeroffersConsumerOfferBogofYaml:
      allOf:
        - $ref: '#/components/schemas/ConsumeroffersConsumerOfferYaml'
        - description: Details of a buy one get one free offer
          required:
            - products
            - prompt
          properties:
            categories:
              description: >-
                One of the products from category needed to be included in the
                basket to make offer applicable.

                The second occurrence of such product gets discount
              type: array
              minItems: 1
              items:
                $ref: >-
                  #/components/schemas/ConsumeroffersConsumerOffersProductCategoryYaml
              nullable: true
            prompt:
              description: A prompt displayed to consumer
              nullable: false
              $ref: '#/components/schemas/ConsumeroffersConsumerOfferPromptYaml'
            discount:
              description: Discount applicable to product or product categories
              nullable: true
              $ref: '#/components/schemas/ConsumeroffersDiscountYaml'
            products:
              description: >-
                One of those products needed to be included in the basket to
                make offer applicable.

                The second occurrence of such product gets discount
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/ConsumeroffersConsumerOffersProductYaml'
              nullable: false
            maximumRedemptions:
              description: >-
                The maximum number of discounted items for this offer, unlimited
                when null
              format: integer
              type: number
              minimum: 1
              default: 1
              nullable: true
          type: object
      example:
        offerId: 12345sd
        restaurantId: 1234sd
        offerType: Bogof
        discount:
          discountAmount: 100
        prompt:
          title: Nice! You get this free with your order
          description: Ice Cream for free when you order Ice Cream
        products:
          - id: iceCreamA
          - id: iceCreamB
          - id: iceCreamC
        campaignId: freeIceCream
        maximumRedemptions: 10
        consumerSegment: all
    ConsumeroffersConsumerOfferBogofMixMatchYaml:
      allOf:
        - $ref: '#/components/schemas/ConsumeroffersConsumerOfferYaml'
        - description: Details of a buy one get one free mix and match offer
          required:
            - products
            - prompt
          properties:
            categories:
              description: >-
                One of the products from category needed to be included in the
                basket to make offer applicable.

                The second occurrence of any product from this category gets
                discount
              type: array
              minItems: 1
              items:
                $ref: >-
                  #/components/schemas/ConsumeroffersConsumerOffersProductCategoryYaml
              nullable: true
            prompt:
              description: A prompt displayed to consumer
              nullable: false
              $ref: '#/components/schemas/ConsumeroffersConsumerOfferPromptYaml'
            discount:
              description: Discount applicable to product or product categories
              nullable: true
              $ref: '#/components/schemas/ConsumeroffersDiscountYaml'
            products:
              description: >-
                One of those products needed to be included in the basket to
                make offer applicable.

                The second occurrence of any product from this list gets
                discount
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/ConsumeroffersConsumerOffersProductYaml'
              nullable: false
            maximumRedemptions:
              description: >-
                The maximum number of discounted items for this offer, unlimited
                when null
              format: integer
              type: number
              minimum: 1
              default: 1
              nullable: true
          type: object
      example:
        offerId: 12345sd
        restaurantId: 1234sd
        offerType: BogofMixMatch
        discount:
          discountAmount: 100
        prompt:
          title: Nice! You get this free with your order
          description: Ice Cream for free when you order Ice Cream
        products:
          - id: iceCreamAX
          - id: iceCreamBX
          - id: iceCreamCX
        campaignId: freeIceCream
        maximumRedemptions: 10
        consumerSegment: all
    ConsumeroffersConsumerOfferFreeItemYaml:
      allOf:
        - $ref: '#/components/schemas/ConsumeroffersConsumerOfferYaml'
        - description: Details of a free item offer
          required:
            - products
            - freeProduct
            - prompt
          properties:
            prompt:
              description: A prompt displayed to consumer
              nullable: false
              $ref: '#/components/schemas/ConsumeroffersConsumerOfferPromptYaml'
            maximumRedemptions:
              description: >-
                The maximum number of discounted items for this offer, unlimited
                when null
              format: integer
              type: number
              minimum: 1
              default: 1
              nullable: true
            discount:
              description: Discount applicable to free products
              nullable: false
              $ref: '#/components/schemas/ConsumeroffersDiscountYaml'
            freeProducts:
              description: One or more of those products gets 100% discount applied
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/ConsumeroffersConsumerOffersProductYaml'
              nullable: false
          type: object
      example:
        offerId: 12345sd
        restaurantId: 1234sd
        offerType: FreeItem
        discount:
          discountPercentage: 100
        prompt:
          title: Nice! You get this free with your order
          description: Potato for free when you order Ice Cream
        freeProducts:
          - id: PotatoId
            preferableModifierIds:
              - ketchupModifierId
        campaignId: freePotato
        consumerSegment: all
        maximumRedemptions: 1
        qualifyingCriteria:
          products:
            - id: BigMacId
            - id: DoubleBigMacId
            - id: BigMacMenuId
    ConsumeroffersConsumerOfferItemLevelDiscountYaml:
      allOf:
        - $ref: '#/components/schemas/ConsumeroffersConsumerOfferYaml'
        - description: Details of a free item offer
          required:
            - products
            - prompt
          properties:
            prompt:
              description: A prompt displayed to consumer
              nullable: false
              $ref: '#/components/schemas/ConsumeroffersConsumerOfferPromptYaml'
            maximumRedemptions:
              description: >-
                The maximum number of discounted items for this offer, unlimited
                when null
              format: integer
              type: number
              minimum: 1
              default: 1
              nullable: true
            discount:
              description: Discount applicable to selected products
              nullable: false
              $ref: '#/components/schemas/ConsumeroffersDiscountYaml'
            products:
              description: One or more of those products gets discount applied
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/ConsumeroffersConsumerOffersProductYaml'
              nullable: false
          type: object
      example:
        offerId: 12345sd
        restaurantId: 1234sd
        offerType: ItemLevelDiscount
        discount:
          discountAmount: 10
        prompt:
          title: Nice! You get this item with 10$ discount
          description: Potato with 10$ discount when you order BigMac
        products:
          - id: PotatoIdX
            preferableModifierIds:
              - ketchupModifierId
        campaignId: discountedPotato
        consumerSegment: all
        maximumRedemptions: 1
        qualifyingCriteria:
          products:
            - id: BigMacIdX
            - id: DoubleBigMacIdX
            - id: BigMacMenuIdX
    ConsumeroffersConsumerOfferPercentYaml:
      allOf:
        - $ref: '#/components/schemas/ConsumeroffersConsumerOfferYaml'
        - description: Details of a percent-based offer
          required:
            - amount
          properties:
            amount:
              description: The percentage value discount
              nullable: false
              format: decimal
              type: number
          type: object
      example:
        amount: 10
        qualifyingCriteria:
          minimumSpendValue: 1500
    ConsumeroffersConsumerOfferStampCardYaml:
      allOf:
        - $ref: '#/components/schemas/ConsumeroffersConsumerOfferYaml'
        - description: Details of a stamp card offer
          required:
            - discounts
          properties:
            discounts:
              description: The list of completed stamp card discounts
              items:
                $ref: >-
                  #/components/schemas/ConsumeroffersConsumerOfferStampCardDiscountYaml
              type: array
          type: object
    ConsumeroffersConsumerOffersBasketYaml:
      title: ConsumerOffersBasket
      description: The consumer basket content
      properties:
        basketItems:
          description: The collection of the basket items.
          nullable: true
          items:
            $ref: '#/components/schemas/ConsumeroffersConsumerOffersBasketItemYaml'
          type: array
        serviceType:
          description: Service type selected by customer
          nullable: true
          type: string
      type: object
      example:
        basketItems:
          - productId: BRGR123
            quantity: 1
        serviceType: Delivery
    ConsumeroffersConsumerOffersBasketItemYaml:
      title: ConsumerOffersBasketItem
      properties:
        productId:
          description: The `ProductId` of basket item.
          nullable: true
          type: string
        quantity:
          description: The quantity of basket item.
          nullable: true
          format: int32
          type: integer
      type: object
      example:
        productId: BRGR123
        quantity: 1
    ConsumeroffersConsumerOffersNotificationsRequestYaml:
      title: ConsumerOffersNotificationsRequest
      properties:
        restaurantIds:
          description: >-
            The identifiers of the restaurants. Allows offers to be returned for
            many restaurants.
          maxItems: 150
          type: array
          items:
            type: string
          minItems: 11
        applicableDateTimeUtc:
          description: >-
            Overrides the current time for determining whether offers are
            active.

            Enables offers to be returned that have become

            inactive after the order was added to a consumer's basket.
          type: string
          nullable: true
          example: '2021-01-20T19:35:13.643Z'
          format: date-time
      type: object
      required:
        - restaurantIds
      example:
        restaurantIds:
          - 123456cc
          - 123456aa
          - 12335bb
          - 12335dd
          - 12335ee
          - 12335ff
          - 12335gg
          - 12335hh
          - 12335ii
          - 12335jj
          - 12335kk
        applicableDateTimeUtc: '2020-04-20T16:20:00.000Z'
    ConsumeroffersConsumerOffersNotificationsResponseYaml:
      title: ConsumerOffersNotificationsResponse
      description: Holder of Consumer Offer Notifications
      properties:
        offerNotifications:
          description: >-
            Provides consumer offer notifications for given restaurants,
            containing offer description but not exact details like discount
            etc.
          items:
            title: ConsumerOfferNotification
            required:
              - offerId
              - restaurantId
              - offerType
              - consumerSegment
            type: object
            example:
              description: Get one free
              offerId: 12345c
              restaurantId: 1234567ds
              consumerSegment: all
              campaignId: CheekyTuesday
              offerType: percent
              maximumRedemptions: 1
            properties:
              description:
                description: The description of the offer.
                nullable: true
                type: string
              offerId:
                description: The unique identifier of the offer.
                nullable: false
                type: string
              restaurantId:
                description: The unique identifier of the restaurant providing the offers.
                nullable: false
                type: string
              consumerSegment:
                description: Consumer Segment to which offer applies
                nullable: false
                $ref: '#/components/schemas/ConsumeroffersConsumerSegmentYaml'
              campaignId:
                description: The unique identifier of the offer campaign.
                nullable: true
                type: string
              offerType:
                description: The type of the offer.
                nullable: false
                $ref: '#/components/schemas/ConsumeroffersConsumerOfferTypeYaml'
              offerMenuItems:
                description: Collection of menu products related to offer
                nullable: true
                type: array
                items:
                  $ref: '#/components/schemas/ConsumeroffersOfferMenuItemYaml'
              maximumRedemptions:
                description: >-
                  The maximum number of discounted items for this offer, null if
                  unlimited
                format: integer
                type: number
                nullable: true
          type: array
          maxItems: 50
      type: object
    ConsumeroffersConsumerOffersNotificationsResponseV2Yaml:
      title: ConsumerOffersNotificationsResponseV2
      description: Holder of Consumer Offer Notifications
      properties:
        offerNotifications:
          description: >-
            Provide consumer offer notifications for given restaurants,
            containing offer description and additional details for offer
            highlighting
          items:
            $ref: '#/components/schemas/ConsumeroffersConsumerOfferNotificationV2Yaml'
          type: array
          maxItems: 50
      type: object
    ConsumeroffersConsumerOffersPriorityYaml:
      title: ConsumerOffersPriority
      description: >-
        The offers priority dictates the order and combination approach when
        multiple offers are executed together.
      required:
        - value
        - type
      type: object
      properties:
        value:
          description: >-
            The offers are evaluated based on priority in descending order. The
            first triggered will return effects
          format: integer
          type: number
        type:
          description: >-
            All offers are evaluated based on type and priority value in
            descending order.

            Universal offers are always executed. Exclusive offers are evaluated
            after Universal offers, the first Exclusive offer triggered will
            return effects

            If an Exclusive offer is triggered, the Stackable offers will be
            skipped.
          enum:
            - exclusive
            - stackable
            - universal
          type: string
      example:
        value: 1
        type: stackable
    ConsumeroffersConsumerOffersProductYaml:
      title: ConsumerOffersProduct
      description: >-
        One of those products needed to be included in the basket to make offer
        applicable
      required:
        - id
      type: object
      properties:
        showModifiersSelectionDialog:
          description: >-
            Determinate if modifiers selection dialogue will be shown to
            customer.
          type: boolean
        unavailable:
          description: Determinate if product is unavailable
          type: boolean
        preferableModifierIds:
          description: The collection of preselected modifiers for the item.
          nullable: true
          items:
            type: string
          type: array
        id:
          description: The unique identifier of the product.
          type: string
      example:
        id: 6 Chicken Nuggets
        preferableModifierIds:
          - ketchupModifierId
    ConsumeroffersConsumerOffersProductCategoryYaml:
      title: ConsumerOffersProductCategory
      description: >-
        One of the products from category needed to be included in the basket to
        make offer applicable
      properties:
        name:
          description: The name of the product category.
          type: string
        id:
          description: The unique identifier of the product category.
          type: string
        preferableModifierIds:
          description: The collection of preselected modifiers for the items in category.
          nullable: true
          items:
            type: string
          type: array
      type: object
      required:
        - id
      example:
        name: Pizza
        id: Pizza1234
    ConsumeroffersConsumerOffersRequestYaml:
      title: ConsumerOffersRequest
      properties:
        consumerOffersBasket:
          $ref: '#/components/schemas/ConsumeroffersConsumerOffersBasketYaml'
        restaurantId:
          description: The identifier of the restaurant.
          type: string
          minLength: 1
        consumerId:
          description: Global Consumer Id
          nullable: true
          type: string
        applicableDateTimeUtc:
          description: >-
            Overrides the current time for determining whether offers are
            active.

            Enables offers to be returned that for the time in future (e.g.
            Pre-order)
          type: string
          format: date-time
          example: '2021-01-20T19:35:13.643Z'
      type: object
      required:
        - restaurantId
        - consumerOffersBasket
      example:
        consumerOffersBasket:
          basketItems:
            - productId: BRGR123
              quantity: 1
          serviceType: Collection
        restaurantId: asd12345
        applicableDateTimeUtc: '2020-04-20T16:20:00.000Z'
    ConsumeroffersConsumerOffersResponseYaml:
      title: ConsumerOffersResponse
      description: Holder of consumer offers
      properties:
        offers:
          description: >-
            Provide applicable consumer offers based on provided `restaurantId`
            and basket content.
          items:
            discriminator:
              mapping:
                Percent: '#/components/schemas/ConsumeroffersConsumerOfferPercentYaml'
                FreeItem: '#/components/schemas/ConsumeroffersConsumerOfferFreeItemYaml'
                ItemLevelDiscount: >-
                  #/components/schemas/ConsumeroffersConsumerOfferItemLevelDiscountYaml
                Bogof: '#/components/schemas/ConsumeroffersConsumerOfferBogofYaml'
                StampCard: '#/components/schemas/ConsumeroffersConsumerOfferStampCardYaml'
                Notification: >-
                  #/components/schemas/ConsumeroffersConsumerOfferNotificationYaml
              propertyName: offerType
            oneOf:
              - $ref: >-
                  #/components/schemas/ConsumeroffersConsumerOfferItemLevelDiscountYaml
              - $ref: '#/components/schemas/ConsumeroffersConsumerOfferFreeItemYaml'
              - $ref: '#/components/schemas/ConsumeroffersConsumerOfferPercentYaml'
              - $ref: '#/components/schemas/ConsumeroffersConsumerOfferStampCardYaml'
              - $ref: '#/components/schemas/ConsumeroffersConsumerOfferBogofYaml'
              - $ref: >-
                  #/components/schemas/ConsumeroffersConsumerOfferBogofMixMatchYaml
              - $ref: >-
                  #/components/schemas/ConsumeroffersConsumerOfferNotificationYaml
          type: array
      type: object
      example:
        offers:
          - description: Check out our new lunch menu
            offerId: 7235sd
            restaurantId: 1234sd
            offerType: notification
            campaignId: justOpenedPizzaHomeBrand
            consumerSegment: all
            priority:
              value: 1
              type: stackable
          - offerId: 12345sd
            restaurantId: 1234sd
            offerType: percent
            campaignId: CheekyTuesday
            consumerSegment: all
            priority:
              value: 1
              type: stackable
            qualifyingCriteria:
              minimumSpendValue: 1500
          - offerId: 345sd
            restaurantId: 1234sd
            offerType: freeItem
            discount:
              discountPercentage: 100
            consumerSegment: all
            priority:
              value: 1
              type: stackable
            qualifyingCriteria:
              products:
                - id: BigMacIdX
                - id: DoubleBigMacIdX
                - id: BigMacMenuIdX
            freeProducts:
              - id: 6 Chicken NuggetsX
                preferableModifierIds:
                  - ketchupModifierId
            prompt:
              title: Nice! You get this free with your order
              description: 6 Nuggets for free when you order Big Mac
          - offerId: 345itld
            restaurantId: 1234sd
            offerType: itemLevelDiscount
            discount:
              discountPercentage: 50
            consumerSegment: all
            priority:
              value: 1
              type: stackable
            qualifyingCriteria:
              products:
                - id: BigMacIdX
                - id: DoubleBigMacIdX
                - id: BigMacMenuIdX
            products:
              - id: 6 Chicken NuggetsX
                preferableModifierIds:
                  - ketchupModifierId
            prompt:
              title: Nice! You get this discount for items in your order your order
              description: 6 Nuggets with discount when you order Big Mac
          - offerId: 345345sd
            restaurantId: 1234sd
            offerType: bogof
            discount:
              discountAmount: 100
            campaignId: freeIceCream
            consumerSegment: all
            priority:
              value: 1
              type: stackable
            products:
              - id: CookieDoughId
              - id: FishFoodId
              - id: ChocFudgeBrownieId
            prompt:
              title: Nice! You get this free with your order
              description: Get 2 for 1 on Any Ice Cream Company's 465 ml
    ConsumeroffersConsumerSegmentYaml:
      description: Consumer Segment to which offer applies
      enum:
        - all
        - newToRestaurant
      type: string
    ConsumeroffersDiscountYaml:
      description: Details of item discount
      type: object
      properties:
        discountPercentage:
          description: The percentage of discount
          nullable: true
          type: integer
        discountAmount:
          description: Fixed value discount in smallest unit of relevant currency
          nullable: true
          type: integer
      minProperties: 1
      maxProperties: 1
      example:
        discountPercentage: 100
    ConsumeroffersMoneyYaml:
      title: Money
      description: Money value in the smallest unit of local currency
      type: object
      properties:
        value:
          description: >-
            Money value in the smallest unit. For example, $1.23 would be
            represented as 123.
          format: integer
          type: number
          minimum: 0
      example:
        value: 50
    ConsumeroffersOfferMenuItemYaml:
      description: Details of menu item related to offer
      type: object
      properties:
        id:
          description: The identifier of menu item
          nullable: false
          type: string
        menuItemType:
          description: The type of offer menu item
          type: string
          enum:
            - category
            - product
        roleType:
          description: Represent role of this item in offer conditions
          nullable: false
          type: string
          enum:
            - qualifyingItem
            - discountedItem
        discount:
          description: Discount applicable to item if any
          nullable: true
          $ref: '#/components/schemas/ConsumeroffersDiscountYaml'
      example:
        id: SomeProductId
        roleType: discountedItem
        menuItemType: product
        discount:
          discountAmount: 100
    ConsumerorderdeliveryrouteOrderRouteActivityYaml:
      description: An order route activity.
      properties:
        activityType:
          description: The type of the activity, either PICKUP or DELIVER.
          nullable: false
          type: string
        index:
          description: >-
            The index of the order route activity. This is a one-based index
            i.e. the index starts from 1.
          minimum: 1
          nullable: false
          type: number
        isActivityForRequestedOrder:
          description: A value indicating whether this activity is for the requested order.
          nullable: false
          type: boolean
        latitude:
          description: A value indicating the latitude of the activity.
          minimum: -90
          maximum: 90
          nullable: false
          type: number
        longitude:
          description: A value indicating the longitude of the activity.
          minimum: -180
          maximum: 180
          nullable: false
          type: number
      type: object
    ConsumerorderdeliveryrouteOrderRouteErrorResponseYaml:
      description: An error response.
      properties:
        version:
          description: The version of the API that generated the error.
          type: string
        errorId:
          description: The error Id.
          type: string
        requestId:
          description: The request Id, if available.
          type: string
        statusCode:
          description: The HTTP status code.
          format: int32
          type: integer
        errorCode:
          description: The API error code, if any.
          type: string
        message:
          description: The error message.
          type: string
        timestamp:
          description: The timestamp of the error.
          format: date-time
          type: string
      type: object
    ConsumerorderdeliveryrouteOrderRouteResponseYaml:
      description: >-
        Contains the order route activities and other relevant information for
        an order.
      properties:
        orderId:
          description: The id of the order.
          nullable: false
          type: string
        tenant:
          description: The tenant.
          nullable: false
          type: string
        isGroupedOrder:
          description: >-
            A value indicating whether an order is part of a grouped delivery or
            not.
          nullable: false
          type: boolean
        orderRouteActivities:
          description: The order route activities for the order.
          items:
            $ref: >-
              #/components/schemas/ConsumerorderdeliveryrouteOrderRouteActivityYaml
          nullable: true
          type: array
      type: object
    ConsumerordersConsumerOrderAddressYaml:
      description: A postal address.
      properties:
        addressLines:
          description: The lines of the address.
          items:
            type: string
          type: array
        postalCode:
          description: The postal code.
          type: string
        location:
          $ref: '#/components/schemas/SharedGeopositionYaml'
        city:
          description: The city or town.
          type: string
        locality:
          description: The locality, such as a district or suburb, if any.
          type: string
        region:
          description: The region, such as a county, province or state.
          type: string
        countryCode:
          description: The ISO 3166-1 alpha-2 country code.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderApplicationInfoYaml:
      description: Information about an application used to place an order.
      properties:
        version:
          description: The version of the application that placed the order.
          type: string
        name:
          description: The name of the application that placed the order.
          type: string
        clientIdentifier:
          description: >-
            The client identifier associated with the order, if any, such as a
            device Id or IP address.
          type: string
        userAgent:
          description: The User Agent of the client that placed the order.
          type: string
        feature:
          description: The name of the Just Eat feature that placed the order.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderBasketInfoYaml:
      description: Information about the items in the basket for an order.
      properties:
        summary:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderBasketSummaryYaml'
        currencyCode:
          description: The ISO-4217 currency code associated with the basket.
          type: string
        tips:
          description: The tips associated with the basket.
          additionalProperties:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderTipItemYaml'
          type: object
        offers:
          description: The offer discounts applied to the basket.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderOfferYaml'
          type: array
        subtotal:
          description: The subtotal for the basket before any discounts or fees.
          format: double
          type: number
        fees:
          description: The fees applied to the basket, if any.
          additionalProperties:
            format: double
            type: number
          type: object
        metadata:
          description: Arbitrary metadata about the basket.
          additionalProperties:
            type: string
          type: object
        discounts:
          description: The discounts applied to the basket, if any.
          additionalProperties:
            format: double
            type: number
          type: object
        total:
          description: The total value of the basket.
          format: double
          type: number
        refunds:
          description: The total value to be refunded to the customer, if any.
          format: double
          type: number
        refundDetails:
          description: >-
            All the customer's refunds for an order. This can include refunds
            for fees or offers.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderRefundYaml'
          type: array
        items:
          description: The items in the basket.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderBasketItemYaml'
          type: array
        hasUnavailableItems:
          description: A value indicating whether the order has any unavailable items.
          type: boolean
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderBasketItemYaml:
      description: An item in a basket.
      properties:
        description:
          description: The description for the item.
          type: string
        name:
          description: The name of the item.
          type: string
        unitPrice:
          description: The unit price for the item.
          format: double
          type: number
        requiredAccessories:
          description: The required meal part accessories, if any.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderMealAccessoryYaml'
          type: array
        optionalAccessories:
          description: The optional meal part accessories, if any.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderMealAccessoryYaml'
          type: array
        bulkDiscounts:
          description: The bulk discounts, if any.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderBulkDiscountYaml'
          type: array
        synonym:
          description: The synonym of the item.
          type: string
        discounts:
          description: The discounts, if any.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderDiscountYaml'
          type: array
        combinedPrice:
          description: >-
            The combined price for the item, including any accessories and/or
            discounts.
          format: double
          type: number
        parts:
          description: The parts of the meal, if any.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderMealPartYaml'
          type: array
        isUnavailable:
          description: A value indicating whether the item is unavailable or not.
          type: boolean
        productId:
          description: The product Id.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderBasketSummaryYaml:
      description: A summary of the items in the basket for an order.
      properties:
        items:
          description: The items in the basket summary.
          items:
            $ref: >-
              #/components/schemas/ConsumerordersConsumerOrderBasketSummaryItemYaml
          type: array
        unavailable:
          description: The unavailable items in the basket.
          items:
            $ref: >-
              #/components/schemas/ConsumerordersConsumerOrderBasketSummaryItemYaml
          type: array
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderBasketSummaryItemYaml:
      description: A summarised item in a basket.
      properties:
        name:
          description: The name of the item.
          type: string
        unitPrice:
          description: The unit price of the item.
          format: double
          type: number
        accessories:
          description: The accessories in the basket summary item.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderMealAccessoryYaml'
          type: array
        synonym:
          description: The synonym of the item.
          type: string
        quantity:
          description: The quantity of the item.
          format: int32
          type: integer
        price:
          description: The price of the item for the associated quantity.
          format: double
          type: number
        id:
          description: The Id of the item, such as a product Id or meal part Id.
          type: string
        items:
          description: The items in the basket summary item.
          items:
            $ref: >-
              #/components/schemas/ConsumerordersConsumerOrderBasketSummaryItemYaml
          type: array
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderBulkDiscountYaml:
      description: A bulk discount.
      properties:
        amount:
          description: The amount of the bulk discount.
          format: double
          type: number
        name:
          description: The name of the bulk discount.
          type: string
        productTypeId:
          description: The Id of the product type the discount applies to.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderConsumerInfoYaml:
      description: Information about a consumer.
      properties:
        name:
          description: The consumer's name.
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderAddressYaml'
        timeZone:
          description: The IANA time zone Id the consumer is located in.
          type: string
        contactNumber:
          description: The consumer's contact number.
          type: string
        id:
          description: The consumer Id.
          type: string
        email:
          description: The consumer's email address.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderConsumerReviewYaml:
      description: A consumer's review of an order.
      properties:
        comments:
          description: Any comments left by the consumer in the review.
          type: string
        scores:
          description: >-
            The scores given for the scored attributes of the review by the
            consumer.
          additionalProperties:
            format: double
            type: number
          type: object
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderCuisineInfoYaml:
      description: Information about a restaurant cuisine.
      properties:
        name:
          description: The name of the cuisine.
          type: string
        rank:
          description: The ranking for the cuisine.
          format: int32
          type: integer
        id:
          description: The Id of the cuisine.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderDateTimeRangeYaml:
      description: A range of date and time values.
      properties:
        start:
          description: The start of the range.
          format: date-time
          type: string
        end:
          description: The end of the range.
          format: date-time
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderDiscountYaml:
      description: A discount.
      properties:
        name:
          description: The name of the discount.
          type: string
        amount:
          description: The amount of the discount.
          format: double
          type: number
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderErrorResponseYaml:
      description: An error response.
      properties:
        version:
          description: The version of the API that generated the error.
          type: string
        statusCode:
          description: The HTTP status code.
          format: int32
          type: integer
        _links:
          description: The links information, if any.
          additionalProperties:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderLinkYaml'
          type: object
        requestId:
          description: The request Id, if available.
          type: string
        errorCode:
          description: The API error code, if any.
          type: string
        fingerprint:
          description: The error fingerprint, if available.
          type: string
        errorId:
          description: The error Id.
          type: string
        message:
          description: The error message.
          type: string
        detail:
          description: The optional error detail.
          type: object
        timestamp:
          description: The timestamp of the error.
          format: date-time
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderImageYaml:
      description: An image.
      properties:
        imageType:
          description: The type of the image, such as a logo.
          type: string
        height:
          description: The optional height of the image, in pixels.
          nullable: true
          format: int32
          type: integer
        uri:
          description: The URI of the image.
          type: string
        width:
          description: The optional width of the image, in pixels.
          nullable: true
          format: int32
          type: integer
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderLinkYaml:
      description: A link to an API resource.
      properties:
        templated:
          description: A value indicating whether the URL is templated.
          type: boolean
        href:
          description: The URL of the link.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderMealAccessoryYaml:
      description: An accessory for a meal.
      properties:
        name:
          description: The name of the accessory.
          type: string
        unitPrice:
          description: The unit price of the accessory.
          format: double
          type: number
        quantity:
          description: The quantity of the accessory.
          format: int32
          type: integer
        accessoryId:
          description: The accessory Id.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderMealPartYaml:
      description: A part of a meal.
      properties:
        synonym:
          description: The synonym of the meal part.
          type: string
        groupId:
          description: The group Id.
          type: string
        requiredAccessories:
          description: The required meal part accessories, if any.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderMealAccessoryYaml'
          type: array
        optionalAccessories:
          description: The optional meal part accessories, if any.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderMealAccessoryYaml'
          type: array
        name:
          description: The name of the meal part.
          type: string
        mealPartId:
          description: The meal part Id.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderOfferYaml:
      description: An offer applied to a basket.
      properties:
        offerType:
          description: The type of the offer.
          type: string
        qualifyingValue:
          description: The qualifying value for the offer.
          format: double
          type: number
        id:
          description: The offer Id.
          type: string
        offerAmount:
          description: The value of the offer.
          format: double
          type: number
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderOrderYaml:
      description: An order.
      properties:
        id:
          description: The Id of the order.
          type: string
        metadata:
          description: Arbitrary metadata about the order.
          additionalProperties:
            type: string
          type: object
        consumer:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderConsumerInfoYaml'
        application:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderApplicationInfoYaml'
        review:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderReviewInfoYaml'
        payment:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderPaymentInfoYaml'
        restaurant:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderRestaurantInfoYaml'
        basket:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderBasketInfoYaml'
        timestamp:
          description: >-
            The UTC timestamp of the date and time that the response was
            generated at.
          format: date-time
          x-api-version-from: 2019-04
          type: string
        _links:
          description: The links information, if any.
          additionalProperties:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderLinkYaml'
          type: object
        tenant:
          description: The tenant associated with the order.
          type: string
        information:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderOrderInfoYaml'
        friendlyId:
          description: The friendly order Id.
          type: string
        status:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderStatusInfoYaml'
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderOrderHistoryYaml:
      description: The order history of a consumer.
      properties:
        tenant:
          description: The tenant associated with the consumer.
          type: string
        consumerId:
          description: The Id of the consumer.
          type: string
        _links:
          description: The links information, if any.
          additionalProperties:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderLinkYaml'
          type: object
        _pagination:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderPaginationInfoYaml'
        timestamp:
          description: >-
            The UTC timestamp of the date and time that the response was
            generated at.
          format: date-time
          x-api-version-from: 2019-04
          type: string
        orders:
          description: The consumer's orders.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderOrderYaml'
          type: array
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderOrderInfoYaml:
      description: Additional information about an order.
      properties:
        canReorder:
          description: A value indicating whether the order can be re-ordered.
          type: boolean
        isAsap:
          description: >-
            A value indicating whether the order should be fulfilled as soon as
            possible.
          type: boolean
        createdAt:
          description: The date and time the order was created.
          format: date-time
          type: string
        notes:
          description: Any notes associated with the order given by the consumer.
          additionalProperties:
            type: string
          type: object
        isForDelivery:
          description: A value indicating whether the order is for delivery.
          type: boolean
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderOrderStatusYaml:
      description: The status of an order.
      properties:
        tenant:
          description: The tenant associated with the order.
          type: string
        consumerId:
          description: The Id of consumer associated with the order.
          type: string
        isForDelivery:
          description: A value indicating whether the order is for delivery.
          type: boolean
        timestamp:
          description: >-
            The UTC timestamp of the date and time that the response was
            generated at.
          format: date-time
          x-api-version-from: 2019-04
          type: string
        id:
          description: The Id of the order.
          type: string
        restaurantName:
          description: The name of the restaurant associated with the order.
          type: string
        status:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderStatusInfoYaml'
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderPaginationInfoYaml:
      description: Pagination information for a request.
      properties:
        links:
          description: The pagination links.
          additionalProperties:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderLinkYaml'
          type: object
        token:
          description: The pagination token for the next page of results, if any.
          type: string
        total:
          description: The total number of results, if known.
          nullable: true
          format: int64
          type: integer
        count:
          description: The current number of results.
          format: int64
          type: integer
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderPaymentInfoYaml:
      description: Information about a payment.
      properties:
        totals:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderTotalsYaml'
        currencyCode:
          description: The ISO-4217 currency code associated with the payment.
          type: string
        paidAt:
          description: The date and time the order was paid for, if known.
          nullable: true
          format: date-time
          type: string
        fees:
          description: The amount of fees applied to the order.
          additionalProperties:
            format: double
            type: number
          type: object
        payments:
          description: The individual payment(s).
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderPaymentItemYaml'
          type: array
        taxes:
          description: The taxes applied to the order.
          additionalProperties:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderTaxItemYaml'
          type: object
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderPaymentItemYaml:
      description: An individual payment.
      properties:
        transactionReference:
          description: The transaction reference, if any.
          type: string
        value:
          description: The payment value.
          format: double
          type: number
        cardType:
          description: The card type, such as VISA, if used.
          type: string
        lastCardDigits:
          description: The last digits of a payment card, if used.
          type: string
        deferredFee:
          description: The deferred fee value, if any.
          format: double
          x-api-version-from: 2019-05
          type: number
        displayName:
          description: The display name of the payment method in the customer's language
          type: string
        fee:
          description: The payment fee, if any.
          format: double
          type: number
        paymentMethod:
          description: The payment method, such as cash or card.
          enum:
            - None
            - Cash
            - Card
            - AccountCredit
            - Voucher
            - PayPal
            - Interac
            - ApplePay
          x-api-version-from: 2017-10
          type: string
        paymentType:
          description: The payment type, such as "cash" or "creditcard".
          type: string
        voucherCode:
          description: The voucher code used, if any.
          x-api-version-from: 2019-05
          type: string
        pspName:
          description: The name of the Payment Service Provider, if any.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderRefundYaml:
      description: A refund issued to the customer.
      properties:
        amount:
          description: The amount refunded.
          format: double
          type: number
        type:
          description: The type of refund issued.
          type: string
      x-api-version-from: 2019-05
      type: object
    ConsumerordersConsumerOrderReorderResponseYaml:
      description: A reorder response.
      properties:
        tenant:
          description: The tenant.
          type: string
        serviceType:
          description: The service type, such as collection or delivery.
          type: string
        menuId:
          description: The menu Id.
          type: string
        restaurantId:
          description: The restaurant Id.
          type: string
        restaurantSeoName:
          description: The restaurant SEO name.
          type: string
        basketId:
          description: The basket Id.
          type: string
        unavailableProductIds:
          description: The unavailable product Ids.
          items:
            type: string
          type: array
      type: object
      x-api-version-from: 2020-06
    ConsumerordersConsumerOrderRestaurantCapabilityYaml:
      description: A capability of a restaurant.
      properties:
        name:
          description: The name of the capability.
          type: string
        isCapable:
          description: >-
            A value indicating whether the restaurant is capable of fulfilling
            the capability.
          type: boolean
        metadata:
          description: Arbitrary metadata about the capability.
          additionalProperties:
            type: string
          type: object
      x-api-version-from: 2018-09
      type: object
    ConsumerordersConsumerOrderRestaurantInfoYaml:
      description: Information about a restaurant.
      properties:
        id:
          description: The Id of the restaurant.
          type: string
        metadata:
          description: Arbitrary metadata about the restaurant.
          additionalProperties:
            type: string
          type: object
        isOffline:
          description: A value indicating whether the restaurant is currently offline.
          type: boolean
        cuisines:
          description: The cuisines associated with the restaurant.
          items:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderCuisineInfoYaml'
          type: array
        timeZone:
          description: IANA time zone Id the restaurant is located in.
          type: string
        capabilities:
          description: The capabilities of the restaurant.
          additionalProperties:
            $ref: >-
              #/components/schemas/ConsumerordersConsumerOrderRestaurantCapabilityYaml
          x-api-version-from: 2018-09
          type: object
        seoName:
          description: The SEO name of the restaurant.
          type: string
        images:
          description: The images associated with the restaurant.
          additionalProperties:
            $ref: '#/components/schemas/ConsumerordersConsumerOrderImageYaml'
          type: object
        postalAddress:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderAddressYaml'
        nextClosesAt:
          description: The date and time the restaurant next closes, if open.
          nullable: true
          format: date-time
          type: string
        displayName:
          description: The display name of the restaurant.
          type: string
        contactNumber:
          description: The contact telephone number for the restaurant.
          type: string
        nextOpensAt:
          description: The date and time the restaurant next opens, if closed.
          nullable: true
          format: date-time
          type: string
        isClosed:
          description: A value indicating whether the restaurant is currently closed.
          type: boolean
        storefrontType:
          description: The type identifier for the store handling the order.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderReviewInfoYaml:
      description: Information about the review for an order.
      properties:
        reviewerGivenName:
          description: The given name of the customer that left the review.
          type: string
        isReviewed:
          description: A value indicating whether the order has been reviewed.
          type: boolean
        maximumScore:
          description: The maximum score that can be given to an attribute of the review.
          format: double
          type: number
        averageScore:
          description: The average score for the attributes of the review.
          nullable: true
          format: double
          type: number
        comments:
          description: Any comments left by the consumer in the review.
          type: string
        ratingCode:
          description: The rating code for the review.
          type: string
        reviewDate:
          description: The date the review was submitted.
          format: date-time
          type: string
        canReview:
          description: A value indicating whether the order can be reviewed.
          type: boolean
        scores:
          description: The scores given for the scored attributes of the review.
          additionalProperties:
            format: double
            type: number
          type: object
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderStatusHistoryItemYaml:
      description: Information about the status of an order at a specific point in time.
      properties:
        confidence:
          description: The confidence level of the status.
          type: string
        dueDate:
          description: >-
            The due date at the date and time associated with the timestamp, if
            any.
          nullable: true
          format: date-time
          type: string
        timestamp:
          description: The timestamp associated with this order status.
          format: date-time
          type: string
        reason:
          description: >-
            The reason for the order's status, if known.

            If your client does not understand this reason, assume that it has
            no value.
          x-api-version-from: 2019-05
          type: string
        value:
          description: The order status at the date and time associated with the timestamp.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderStatusInfoYaml:
      description: Information about the status of an order.
      properties:
        isDueDateDynamic:
          description: >-
            A value indicating whether the current due date was determined

            dynamically, for example from the current location of a delivery
            driver.
          x-api-version-from: 2019-04
          type: boolean
        history:
          description: The history of the order's statuses, if available.
          items:
            $ref: >-
              #/components/schemas/ConsumerordersConsumerOrderStatusHistoryItemYaml
          type: array
        currentDueDate:
          description: The current due date of the order, if any.
          nullable: true
          format: date-time
          type: string
        estimatedCompletion:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderDateTimeRangeYaml'
        isRecent:
          description: A value indicating whether the order is a recent order.
          type: boolean
        delay:
          description: How delayed the order is.
          type: string
        expectPreorderNotificationAt:
          description: >-
            The date and time the restaurant is expected to accept a preorder,
            if any.
          nullable: true
          format: date-time
          type: string
        timeZone:
          description: IANA time zone Id associated with the order.
          type: string
        tracking:
          $ref: '#/components/schemas/ConsumerordersConsumerOrderTrackingInfoYaml'
        notifications:
          $ref: >-
            #/components/schemas/ConsumerordersConsumerOrderStatusNotificationsInfoYaml
        isActive:
          description: >-
            A value indicating whether the status of the order may change
            further.
          type: boolean
        initialDueDate:
          description: The initial due date of the order, if any.
          nullable: true
          format: date-time
          type: string
        finishedAt:
          description: The date and time the order was finished, if completed successfully.
          nullable: true
          format: date-time
          type: string
        confidence:
          description: The confidence level of the order's status.
          type: string
        isDelayed:
          description: A value indicating whether the order is delayed.
          type: boolean
        value:
          description: The current status of the order.
          type: string
        statusReason:
          description: >-
            The reason for the status of the order, if known.

            If your client does not understand this status reason, assume that
            it has no value.
          x-api-version-from: 2019-05
          type: string
        upcoming:
          description: The expected upcoming order statuses for the order, if known.
          items:
            $ref: >-
              #/components/schemas/ConsumerordersConsumerOrderUpcomingStatusItemYaml
          type: array
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderStatusNotificationsInfoYaml:
      description: Status updates notification information for an order.
      properties:
        channelKey:
          description: The key for the status updates notification channel, if any.
          type: string
        providerName:
          description: >-
            The name of the status updates notification provider, such as
            PubNub.
          type: string
        channelName:
          description: The name of the status updates notification channel.
          type: string
      x-api-version-from: 2018-09
      type: object
    ConsumerordersConsumerOrderTaxItemYaml:
      description: A tax item.
      properties:
        rate:
          description: The tax rate.
          format: double
          type: number
        name:
          description: The name of the tax.
          type: string
        value:
          description: The value of the tax due.
          format: double
          type: number
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderTipItemYaml:
      description: A tip.
      properties:
        name:
          description: The name of the type of the tip.
          type: string
        amount:
          description: The cash value of the tip.
          format: double
          type: number
        value:
          description: The value of the tip relative to its type, such as the percentage.
          format: double
          type: number
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderTotalsYaml:
      description: A class containing payment totals.
      properties:
        taxes:
          description: The total amount of taxes applied to the order.
          format: double
          type: number
        totalPaid:
          description: >-
            The total paid for the order, after taking into account credit,
            vouchers etc.
          format: double
          type: number
        tips:
          description: The total amount of tips applied to the order.
          format: double
          type: number
        accountCredits:
          description: The total amount of account credit(s) applied to the order.
          format: double
          type: number
        subtotal:
          description: The subtotal for the order.
          format: double
          type: number
        totalToPay:
          description: The total to pay for the order.
          format: double
          type: number
        complimentary:
          description: The total amount of promotional credit(s) applied to the order.
          format: double
          type: number
        discounts:
          description: The total amount of discount(s) applied to the order.
          format: double
          type: number
        vouchers:
          description: The total amount of any voucher(s) applied to the order.
          format: double
          type: number
        fees:
          description: The total amount of fees applied to the order.
          format: double
          type: number
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderTrackingInfoYaml:
      description: Tracking information for an order.
      properties:
        channelKey:
          description: The key for the tracking channel, if any.
          type: string
        providerName:
          description: The name of the tracking provider, such as PubNub.
          type: string
        channelName:
          description: The name of the tracking channel.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrderUpcomingStatusItemYaml:
      description: Information about an upcoming status an order is expected to reach.
      properties:
        sortOrder:
          description: The sort order of the upcoming status.
          format: int32
          type: integer
        value:
          description: The upcoming status for the order.
          type: string
      x-api-version-from: 2017-10
      type: object
    ConsumerordersConsumerOrdersPlacementErrorResponseYaml:
      description: An error response.
      properties:
        version:
          description: The version of the API that generated the error.
          nullable: true
          type: string
        statusCode:
          description: The HTTP status code.
          format: int32
          type: integer
        _links:
          description: The links information, if any.
          nullable: false
          additionalProperties:
            $ref: '#/components/schemas/ConsumerordersConsumerOrdersPlacementLinkYaml'
          type: object
        requestId:
          description: The request Id, if available.
          nullable: true
          type: string
        errorCode:
          description: The API error code.
          nullable: false
          type: string
        fingerprint:
          description: The error fingerprint, if available.
          nullable: true
          type: string
        errorId:
          description: The API error Id.
          nullable: false
          type: string
        message:
          description: The error message.
          nullable: true
          type: string
        detail:
          description: The optional error detail.
          nullable: true
          additionalProperties: true
          type: object
        timestamp:
          description: The timestamp of the error.
          format: date-time
          type: string
      type: object
      example:
        version: 1.0.1012 (377c04c)
        statusCode: 500
        _links: {}
        requestId: 8000024c-0002-fe00-b63f-84710c7967bb
        errorCode: ErrorCode
        errorId: c9e62582-4dbe-4eac-a982-b3fa2cb04fa0
        message: An error occurred.
        timestamp: '2019-04-16T17:52:50.000Z'
      x-api-version-from: 1
    ConsumerordersConsumerOrdersPlacementLinkYaml:
      description: A link to an API resource.
      properties:
        templated:
          description: A value indicating whether the URL is templated.
          type: boolean
        href:
          description: The URL of the link.
          nullable: false
          type: string
      type: object
      x-api-version-from: 1
    ConsumerordersConsumerOrdersPlacementReferralStateYaml:
      description: Order referral source
      enum:
        - None
        - ReferredByWeb
      x-api-version-from: 1
      type: string
    ConsumerordersConsumerOrdersPlacementRequestV1Yaml:
      description: >-
        An object representing the request to place an order for a given basket
        Id.
      required:
        - basketId
        - applicationId
        - applicationVersion
        - deviceId
        - deviceName
      x-api-version-to: 1
      type: object
      example:
        deviceId: Swagger-DeviceId
        referralState: ReferredByWeb
        applicationId: 4
        applicationVersion: android-test-version
        deviceName: Swagger-DeviceName
        customerNotes:
          NoteForDriver: Call me when you get here
          NoteForRestaurant: No mayonnaise
        removedIngredientsEnabled: false
        basketId: basket_gh23i_PS4_
      properties:
        deviceId:
          description: The identifier/ip of the device that is placing the order.
          type: string
        referralState:
          $ref: >-
            #/components/schemas/ConsumerordersConsumerOrdersPlacementReferralStateYaml
        applicationId:
          description: The Id of application that is placing the order.
          format: int32
          type: integer
        applicationVersion:
          description: The version of application that is placing the order.
          nullable: false
          type: string
        deviceName:
          description: The name of the device that is placing the order.
          type: string
        customerNotes:
          description: >-
            Dictionary of the customer notes to add to the order. The keys of
            the dictionary are the notes capabilities that the restaurant has.
          nullable: true
          additionalProperties:
            type: string
          type: object
        removedIngredientsEnabled:
          description: A value indicating whether the basket contains removed ingredients.
          type: boolean
        basketId:
          description: The basket Id.
          type: string
        applicationName:
          description: The name of application that is placing the order.
          nullable: true
          type: string
      x-api-version-from: 1
      x-konfig-properties:
        referralState:
          description: Order referral source
    ConsumerordersConsumerOrdersPlacementRequestV2Yaml:
      description: >-
        An object representing the request to place an order for a given basket
        Id.
      required:
        - basketId
      type: object
      example:
        basketId: basket_gh23i_PS4_
        customerNotes:
          NoteForDriver: Call me when you get here
          NoteForRestaurant: No mayonnaise
        referralState: ReferredByWeb
      properties:
        basketId:
          description: The basket Id.
          type: string
        customerNotes:
          description: >-
            Dictionary of the customer notes to add to the order. The keys of
            the dictionary are the notes capabilities that the restaurant has.
          nullable: true
          additionalProperties:
            type: string
          type: object
        referralState:
          $ref: >-
            #/components/schemas/ConsumerordersConsumerOrdersPlacementReferralStateYaml
      x-api-version-from: 2
      x-konfig-properties:
        referralState:
          description: Order referral source
    ConsumerordersConsumerOrdersPlacementResponseYaml:
      description: An order placement response.
      properties:
        friendlyOrderId:
          description: The friendly order Id.
          nullable: false
          type: string
        orderId:
          description: The id of the order.
          nullable: false
          type: string
      type: object
      x-api-version-from: 1
    ConsumerqueriesLateOrderCompensationRestaurantResolutionYaml:
      type: object
      properties:
        acceptedAmount:
          description: >-
            The monetary amount of compensation granted, in cents/pence.
            Required when `isAccepted = true`.
          type: integer
        isAccepted:
          description: >-
            Flag to indicate whether a compensation request has been accepted or
            rejected.
          type: boolean
        orderId:
          description: >-
            The ID of the late order compensation request that this response
            relates to.
          type: string
        rejectedReasonCode:
          description: >-

            - `BadTraffic` : The driver was stuck in heavy traffic, sorry.

            - `BadWeather` : The bad weather was delaying our deliveries, sorry.

            - `BusierThanExpected` : Our restaurant was busier than we expected.

            - `CompensatedWithItem` : We gave you something from the menu free
            of charge to make up for it.

            - `NoReason` : We're really sorry your order was late. We hope you
            enjoyed your food.
          enum:
            - BadTraffic
            - BadWeather
            - BusierThanExpected
            - CompensatedWithItem
            - NoReason
          type: string
      example:
        acceptedAmount: 500
        isAccepted: true
        orderId: 69rqfxyfze2gjzf5nusdcw
    ConsumerqueriesLateOrderRestaurantResponseYaml:
      properties:
        lateOrderStatus:
          description: The updated later order query status
          enum:
            - Preparing
            - OnItsWay
            - Delivered
          type: string
        additionalDeliveryTimeToAddMinutes:
          description: >-
            The amount of time to add to the current delivery estimate in
            minutes
          type: integer
      type: object
    ConsumerqueriesWebhooksLateOrderCompensationOptionsYaml:
      items:
        $ref: '#/components/schemas/OrderpadAppLateOrderCompensationOptionYaml'
        type: object
      type: array
    ConsumerqueriesWebhooksLateOrderCompensationQueryYaml:
      type: object
      properties:
        tenant:
          description: Tenant (Country) of order restaurant.
          type: string
        compensationOptions:
          description: List of possible options for compensation
          $ref: >-
            #/components/schemas/ConsumerqueriesWebhooksLateOrderCompensationOptionsYaml
        orderId:
          description: Just Eat order identifier
          type: string
        restaurantId:
          description: Just Eat restaurant identifier
          type: string
      example:
        Tenant: uk
        CompensationOptions:
          - IsRecommended: false
            Amount: 200
          - IsRecommended: true
            Amount: 300
          - IsRecommended: false
            Amount: 400
        OrderId: wiej234idf09i29jijgf4
        RestaurantId: '110230'
    ConsumerqueriesWebhooksLateOrderQueryYaml:
      type: object
      properties:
        tenant:
          description: Tenant (Country) of order restaurant.
          type: string
        orderId:
          description: Just Eat order identifier
          type: string
        restaurantId:
          description: Just Eat restaurant identifier
          type: string
      example:
        Tenant: uk
        OrderId: wiej234idf09i29jijgf4
        RestaurantId: '110230'
    ConsumersAccountBalanceResponseYaml:
      description: Details of the account balance
      properties:
        value:
          description: The consumer's balance value
          format: int32
          type: integer
      type: object
    ConsumersConsumerCreateYaml:
      required:
        - emailAddress
        - firstName
        - lastName
      properties:
        registrationSource:
          description: >-
            The registration source of the consumer. Australia and New Zealand
            only support Guest
          default: Native
          enum:
            - Native
            - Guest
          type: string
        firstName:
          description: The consumer's first name
          maxLength: 160
          type: string
        password:
          description: The consumer's password
          minLength: 4
          maxLength: 160
          type: string
        lastName:
          description: The consumer's last name
          maxLength: 160
          type: string
        emailAddress:
          description: The consumer's email address
          maxLength: 160
          format: email
          type: string
      example:
        registrationSource: Native
        firstName: Bob
        password: Pa55word
        lastName: Smith
        emailAddress: consumer@just-eat.com
      type: object
    ConsumersConsumerCreateResponseYaml:
      required:
        - type
        - token
      properties:
        token:
          description: The One Time Access Code (OTAC)
          type: string
        type:
          description: >
            The type of token. At the moment, this will only ever be a One Time
            Access Code (OTAC)
          enum:
            - otac
          type: string
      example:
        token: SKgaDl0wZxnwjNgLxBnU646PDTquWLHOyPuyzidIZIg=
        type: otac
      type: object
    ConsumersConsumerCreateV2Yaml:
      required:
        - emailAddress
        - fullName
      properties:
        registrationSource:
          description: >-
            The registration source of the consumer. Australia and New Zealand
            only support Guest
          default: native
          enum:
            - native
            - guest
          type: string
        password:
          description: The consumer's password
          minLength: 4
          maxLength: 160
          type: string
        fullName:
          description: The consumer's full name
          maxLength: 100
          type: string
        emailAddress:
          description: The consumer's email address
          maxLength: 160
          format: email
          type: string
      example:
        registrationSource: native
        fullName: Bob Smith
        password: Pa55word
        emailAddress: consumer@just-eat.com
      type: object
    ConsumersConsumerErrorResponseYaml:
      description: Details of an error response
      properties:
        codeText:
          description: The description
          type: string
        code:
          description: The error code
          format: int32
          type: integer
      type: object
    ConsumersConsumerTakeawayPayDetailsResponseYaml:
      description: Consumer Takeaway Pay account details.
      properties:
        takeawayPayLinked:
          description: Takeaway Pay linked.
          type: boolean
      type: object
    ConsumersConsumersGetResponseYaml:
      type: object
      properties:
        firstName:
          description: The consumer's first name
          type: string
        lastName:
          description: The consumer's last name
          type: string
        displayName:
          description: The consumer's display name
          type: string
        phoneNumber:
          description: The consumer's phone number in E164 format e.g. +441514960453
          type: string
        emailAddress:
          description: The consumer's email address
          type: string
        dateOfBirth:
          description: The consumer's date of birth in ISO 8601 format e.g. YYYY-MM-DD
          type: string
      example:
        firstName: John
        lastName: Doe
        displayName: John Doe
        phoneNumber: '+441234567890'
        emailAddress: john.doe@example
        dateOfBirth: '1914-04-16T00:00:00.000Z'
    ConsumersGetCustomerStampCardStatusResponseYaml:
      title: GetCustomerStampCardStatusResponse
      description: A customer's stamp card status.
      properties:
        restaurants:
          description: >-
            A collection of restaurants where the customer has active stamps
            and/or rewards.
          items:
            $ref: >-
              #/components/schemas/ConsumersGetRestaurantCustomerStampCardStatusResponseYaml
          nullable: false
      type: object
    ConsumersGetRestaurantCustomerStampCardStatusResponseYaml:
      title: GetRestaurantCustomerStampCardStatusResponse
      description: A customer's restaurant stamp card status.
      properties:
        restaurantInfo:
          $ref: '#/components/schemas/ConsumersRestaurantInfoYaml'
        restaurantSubscriptionInfo:
          $ref: '#/components/schemas/ConsumersRestaurantSubscriptionInfoYaml'
        inProgressStampCards:
          description: Array of active and in progress stamp cards.
          items:
            title: InProgressStampCard
            properties:
              stampsCollected:
                description: >-
                  Count of stamps collected, up to the stamp card size of the
                  restaurant stamp card offer. See offer information.
                format: int32
                type: integer
              currentDiscountValue:
                description: >-
                  Accumulated discount value of stamp card in smallest unit of
                  relevant currency.
                nullable: false
                format: integer
                type: number
              expectedRewardIssueDate:
                description: >-
                  A completed stamp cards expected issue date. Only provided
                  when the customer has earned a stamp card size number of
                  stamps.
                format: date-time
                nullable: true
                type: string
            type: object
        rewards:
          description: Array of active stamp card discount offers.
          items:
            title: StampCardReward
            properties:
              rewardType:
                description: Type of the offer.
                enum:
                  - discount
                format: enum
                type: string
              issueDate:
                description: Date time the reward was issued (UTC).
                format: date-time
                type: string
              expiryDate:
                description: Date time the reward expires (UTC).
                format: date-time
                nullable: true
                type: string
              discountValue:
                description: The discount value in smallest unit of relevant currency.
                nullable: false
                format: integer
                type: number
              discountCode:
                description: The discount code of the reward.
                nullable: false
                type: string
            type: object
      type: object
    ConsumersGetRestaurantStampCardStatusResponseYaml:
      title: GetRestaurantCustomerStampCardStatusResponse
      description: A customer's restaurant stamp card status.
      properties:
        restaurantInfo:
          $ref: '#/components/schemas/ConsumersRestaurantInfoYaml'
        restaurantSubscriptionInfo:
          $ref: '#/components/schemas/ConsumersRestaurantSubscriptionInfoYaml'
      type: object
    ConsumersPasswordResetFlowResponseYaml:
      type: object
      properties:
        email:
          description: The consumer's email address.
          type: string
        globalUserId:
          description: Global identifier for consumer and tenant.
          type: string
      example:
        email: example@just-eat.com
        globalUserId: 8It2lEaJjG82nJtxO00Iab0CoF0=
    ConsumersRedeemCommandYaml:
      description: A request to redeem a pin
      properties:
        pin:
          description: The pin to redeem
          type: string
      type: object
    ConsumersRedeemCommandResponseYaml:
      description: The response for a redeem command
      properties:
        value:
          description: The value redeemed
          format: int32
          type: integer
      type: object
    ConsumersRedeemPaycodeCommandYaml:
      description: A request to redeem a pay code
      properties:
        paycode:
          description: The pay code to redeem
          type: string
      type: object
    ConsumersRedeemPaycodeResponseYaml:
      description: The response to redeeming a pay code
      properties:
        value:
          description: The value
          format: int32
          type: integer
      type: object
    ConsumersRestaurantInfoYaml:
      description: Information about the restaurant.
      properties:
        id:
          description: Identifier of the restaurant.
          type: string
        name:
          description: Name of the restaurant.
          type: string
        seoName:
          description: SEO name of the restaurant.
          type: string
        logoUrl:
          description: URL of the restaurant's logo.
          type: string
      type: object
    ConsumersRestaurantSubscriptionInfoYaml:
      description: Current restaurant stamp cards subscription.
      properties:
        timeZone:
          description: Current time zone of the restaurant in IANA format.
          type: string
          nullable: true
        optInDate:
          description: >-
            Current subscriptions opt-in date (UTC). Stamps may only be
            collected after this date. If this is in the future or null, the
            restaurant should not be considered part of the scheme.
          format: date-time
          nullable: true
          type: string
        optOutDate:
          description: >-
            Current subscriptions opt-out date (UTC). Only provided when the
            restaurant has confirmed their opt-out, see opt-out confirmation
            date. No further stamps can be earned after this date.
          format: date-time
          nullable: true
          type: string
        optOutConfirmationDate:
          description: >-
            Current subscriptions opt-out confirmation date (UTC). Only existing
            customers with an incomplete set of stamps can collect further
            stamps after this date.
          format: date-time
          nullable: true
          type: string
        offerInformation:
          description: Information about the offer.
          properties:
            offerType:
              description: Type of the offer.
              enum:
                - default
              format: enum
              type: string
            stampCardSize:
              description: Number of stamps required to complete a stamp card.
              format: int32
              type: integer
            discountPercentage:
              description: Percent of order value collected for each stamp.
              format: float
              type: number
          type: object
      type: object
    ConsumersSearchByConsumerResponseYaml:
      description: A set of search results
      properties:
        cards:
          items:
            properties:
              amount:
                description: The amount for the gift card
                format: int32
                type: integer
              pan:
                description: The pan
                type: string
            type: object
          type: array
      type: object
    ConsumersUpdatePasswordYaml:
      required:
        - tenant
        - newPassword
        - oldPassword
      properties:
        tenant:
          description: Tenant for the consumer
          type: string
        newPassword:
          description: The new password
          type: string
        oldPassword:
          description: The old password
          type: string
      example:
        tenant: ie
        newPassword: Pa55word
        oldPassword: OldPassword
      type: object
    ConsumersUpdatePasswordResetFlowResponseYaml:
      type: object
      properties:
        expiry:
          description: The expiry of the OTAC.
          format: date-time
          example: '2021-01-20T19:35:13.643Z'
          type: string
        accessCode:
          description: The One Time Access Code (OTAC).
          type: string
      example:
        expiry: '2021-01-20T19:35:13.643Z'
        accessCode: 8It2lEaJjG82nJtxO00Iab0CoF0=
    ConsumersConsumerMarketingPreferenceYaml:
      items:
        properties:
          isSubscribed:
            description: Should the channel be subscribed to?
            type: boolean
          dateUpdated:
            description: The date of the marketing preference change
            format: date-time
            type: string
          channelName:
            description: The channel name.
            enum:
              - Email
              - Push
              - Sms
            type: string
        type: object
      type: array
    ConsumersConsumerMarketingPreferencev2Yaml:
      properties:
        emailAddress:
          description: The email address of the consumer
          type: string
        updates:
          description: Collection of marketing channel subscription updates
          $ref: '#/components/schemas/ConsumersConsumerMarketingPreferenceYaml'
      type: object
      example:
        emailAddress: consumer@just-eat.com
        updates:
          - isSubscribed: true
            channelName: Email
            dateUpdated: '2020-07-20T15:07:23.000Z'
    CorewebValidateMfaTokenRequestYaml:
      required:
        - mfa_token
        - otp
      properties:
        mfa_token:
          description: The MFA token
          type: string
        otp:
          description: The One Time Password
          maxLength: 10
          type: string
      example:
        mfa_token: some_mfa_token
        otp: ABC123
      type: object
    CourierFeedbackCourierFeedbackRequestYaml:
      required:
        - isPositiveFeedback
      properties:
        additionalComment:
          description: An additional free form comment accompanying the feedback
          maxLength: 210
          nullable: true
          type: string
        isPositiveFeedback:
          description: A flag to determine if the feedback is overall positive
          type: boolean
        reasons:
          description: A list of reasons describing the feedback
          nullable: false
          items:
            type: string
          type: array
      example:
        additionalComment: Went above and beyond
        isPositiveFeedback: true
        reasons:
          - had thermal bag
          - friendly
      type: object
    Couriersync400CourierSyncErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Invalid Request
          type: string
        error:
          description: Error Title
          example: Invalid Request
          type: string
      type: object
    Couriersync401CourierSyncErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Unauthorized Request
          type: string
        error:
          description: Error Title
          example: Unauthorized Request
          type: string
      type: object
    Couriersync404CourierSyncErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Courier Sync not found
          type: string
        error:
          description: Error Title
          example: Courier Sync not found
          type: string
      type: object
    Couriersync500CourierSyncErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Internal Server Error
          type: string
        error:
          description: Error Title
          example: Internal Server Error
          type: string
      type: object
    CouriersyncAddressYaml:
      description: Address information.
      properties:
        useLatLongAddress:
          description: When enabled use latitude and longitude address.
          type: boolean
        name:
          description: Site's institution name or commercial name.
          example: Clinic Hospital
          type: string
        latitude:
          description: The address latitude coordinate.
          format: double
          example: 51.048615
          type: number
        phone:
          description: Customer's phone number
          example: +1 (222) 2222-2222
          type: string
        specialInstructions:
          description: Special instructions for delivery
          example: Contactless Delivery Please
          type: string
        city:
          description: City's name
          example: Calgary
          type: string
        address1:
          description: Site's complete street address
          example: '121 17 Ave SW #405'
          type: string
        province:
          description: Province's name
          example: Alberta
          type: string
        longitude:
          description: The address longitude coordinate.
          format: double
          example: -114.070847
          type: number
        postalCode:
          description: Postal code.
          example: T0R 0X1
          type: string
      type: object
    CouriersyncBonusSummaryYaml:
      description: The zone profile object for a given delivery zone.
      properties:
        type:
          description: Types of bonuses that may be granted to the courier.
          $ref: '#/components/schemas/CouriersyncBonusTypeYaml'
        value:
          description: Bonus value
          format: integer
          type: number
      type: object
    CouriersyncBonusTypeYaml:
      description: >-
        Types of bonuses that may be granted to the courier. <p>TOP_UP_PROMOTION
        - In order to calculate top up promotion skip has a database table
        containing required acceptance rate and top up value for each existing
        delivery zone, when the courier's order acceptance rate is greater than
        the required acceptance rate and the total value is lower than top up
        value for that given delivery zone, the courier will be granted the
        difference between the top up value and total order value, know as top
        up promotion.</p>
      enum:
        - TOP_UP_PROMOTION
      type: string
    CouriersyncCheckedInStateYaml:
      description: The state of a courier on a shift. A courier might be checked in or not.
      enum:
        - CHECKED_IN
        - NOT_CHECKED_IN
      type: string
    CouriersyncCourierStatusYaml:
      description: >-
        The courier application status. Here is a brief example of each status.
        <p>`ON-BOARDING` - Courier is progressing through the courier
        on-boarding program</p><p>`STALLED` - Courier has not proceeded with a
        step inside the courier on-boarding program for 14 days</p><p>`SURPLUS`
        - Zone has been closed for On-boarding; courier cannot
        proceed</p><p>`ACTIVE` - Courier has interacted with the app within the
        last two weeks and will be automatically scheduled based on their
        availability</p><p>`INACTIVE` - Courier has not interacted with the app
        for at least two weeks, and will not be scheduled for shifts. May
        interact with the app to convert their status to
        active</p><p>`RELIABILITY_ISSUES` - historical account was suspended due
        to frequent flakes or rejected orders</p><p>`VEHICLE_ISSUES` - Account
        suspended due to reported vehicle problems, may reactivate by contacting
        support</p><p>`INCIDENT_ISSUES` - Account suspended indefinitely due to
        significant concern (used by Incidents
        team)</p><p>`OTHER_ACCOUNT_ISSUES` - General account suspension, usually
        in connection with problems not under regular courier
        status</p><p>`EXPIRED_DOCUMENTS` - General account suspension, typically
        expired right to work documentation</p><p>`REJECTED` - Applicant did not
        meet minimum requirements</p><p>`WITHDRAWN` - Applicant decided not to
        proceed</p><p>`BANNED` - Courier’s access to the network was
        revoked</p><p>`LEFT_NETWORK` - Courier voluntarily left</p>
      enum:
        - ONBOARDING
        - STALLED
        - SURPLUS
        - ACTIVE
        - INACTIVE
        - RELIABILITY_ISSUES
        - VEHICLE_ISSUES
        - INCIDENT_ISSUES
        - OTHER_ACCOUNT_ISSUES
        - EXPIRED_DOCUMENTS
        - REJECTED
        - WITHDRAWN
        - BANNED
        - LEFT_NETWORK
      type: string
    CouriersyncCourierSyncYaml:
      description: >-
        The courier sync payload holds the updated values for deliveries,
        personal information, location and shifts associated with a particular
        courier.
      properties:
        remainingJobs:
          description: Amount of remaining jobs assignable to the courier.
          format: integer
          example: 2
          type: number
        lastName:
          description: >-
            Last name of the courier in which the updated sync payload was
            requested for.
          example: Doe
          type: string
        timestamp:
          description: Current timestamp for the courier sync updated payload.
          format: long
          example: 1593444834
          type: number
        doNotUseStatus:
          description: The courier usability status.
          $ref: '#/components/schemas/CouriersyncDoNotUseStatusYaml'
        flexStateForAssignedZones:
          description: >-
            List of flex state types for each delivery zone the courier is
            currently on a delivery process or have already delivered orders.
          maxItems: 2
          type: array
          minItems: 2
          items:
            $ref: '#/components/schemas/CouriersyncCourierZoneFlexStateYaml'
        timezone:
          description: Time zone in which the courier shift was started.
          example: GMT-6
          type: string
        topUpPromotion:
          description: Calculated top up promotion settings for the courier.
          $ref: '#/components/schemas/CouriersyncTopUpPromotionYaml'
        orderAcceptanceTimes:
          description: The acceptance times used to present the offer to the courier.
          $ref: '#/components/schemas/CouriersyncOrderAcceptanceTimesYaml'
        serverSendSeconds:
          description: >-
            Static value with the amount of seconds the application is supposed
            to send a fresh location to the server. The logic implemented
            expects the application to send a new location to the server when
            the elapsed seconds is greater equal than server send seconds.
          format: integer
          example: 60
          type: number
        firstName:
          description: >-
            First name of the courier in which the updated sync payload was
            requested for.
          example: John
          type: string
        totalDeliveries:
          description: Number of deliveries completed by the courier.
          format: integer
          example: 11
          type: number
        jobs:
          description: The list of jobs assigned to the courier.
          maxItems: 2
          type: array
          minItems: 2
          items:
            $ref: '#/components/schemas/CouriersyncJobDetailsYaml'
        earlyCheckoutAvailable:
          description: >-
            The possibility of an early checkout of the shift is available when
            true.
          type: boolean
        checkedInState:
          description: >-
            The state of a courier on a shift. A courier might be checked in or
            not.
          $ref: '#/components/schemas/CouriersyncCheckedInStateYaml'
        name:
          description: >-
            Name of the courier in which the updated sync payload was requested
            for.
          example: John Doe
          type: string
        localSaveSeconds:
          description: >-
            Static value with the amount of seconds the application is supposed
            to save a fresh courier location. The logic implemented expects the
            application to save a new location when the elapsed seconds is
            greater equal than local send seconds.
          format: integer
          example: 5
          type: number
        serverGateMeters:
          description: >-
            Static value with the distance in meters the application is supposed
            to send a fresh location to the server. The logic implemented
            expects the application to send a new location to the server when
            the distance to the previous location is greater equal than server
            gate meters.
          format: integer
          example: 0
          type: number
        shift:
          description: The shift details in which the courier is signed up for.
          $ref: '#/components/schemas/CouriersyncShiftYaml'
        isLiveFlexStatesAvailable:
          description: The live flex states are enabled when true.
          type: boolean
        status:
          $ref: '#/components/schemas/CouriersyncCourierStatusYaml'
        cancelledOrderSummaries:
          description: >-
            List with a summary of all the cancelled orders associated with the
            courier.
          maxItems: 1
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CouriersyncOrderCancelledYaml'
      type: object
    CouriersyncCourierZoneFlexStateYaml:
      description: >-
        The courier zone flex state object, contains the flex state type and the
        flex availability status for a given delivery zone.
      properties:
        deliveryZoneId:
          description: Delivery zone identifier for flex state.
          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d
          type: string
        flexAvailable:
          description: Flex states are enabled when true
          type: boolean
        deliveryZoneName:
          description: Delivery zone name for flex state.
          example: Winnipeg SW
          type: string
        flexStateType:
          description: >-
            <p>The flex state type changes according to the exponential moving
            average and is used as a reference to bring more couriers to suffice
            the demand in a given delivery zone.</p> <p>If the flex state type
            is "Off", it means no shifts will be offered for the delivery
            zone.</p> <p>If the state is "CLOSED", only scheduled shifts will be
            allowed for the delivery zone.</p> <p>If the state is "SEEKING", the
            shift offers are going to be made across the courier network in
            order to suffice the current demand.</p> <p>If the state is "OPEN",
            it means demand is high and couriers from all over the courier
            network are allowed to create shifts for themselves to suffice the
            current demand.</p> <p>If the state is "CODE_RED", it means not only
            can everyone create shifts for themselves for the delivery zone but
            also couriers from other delivery zones might reallocate to help
            suffice the demand of that particular delivery zone.</p>
          $ref: '#/components/schemas/CouriersyncSyncFlexStateTypeYaml'
      type: object
    CouriersyncDoNotUseStatusYaml:
      description: The usability status of a courier
      enum:
        - IN_USE
        - NOT_IN_USE
        - UNRESPONSIVE
        - PAUSE_ORDERS
        - CANCELLATION
      type: string
    CouriersyncFeesYaml:
      description: The calculated courier payment components.
      properties:
        tip:
          description: Tip the courier might get from customers when an order is placed
          format: integer
          example: 180
          type: number
        jobPay:
          description: >-
            Job pay is the sum of the pay components subsidy, drive score
            subsidy and delivery fee.
          format: integer
          example: 100
          type: number
        deliveryFee:
          description: Delivery fee paid by the customer
          format: integer
          example: 500
          type: number
        driveScoreSubsidy:
          description: Drive score subsidy paid to courier
          format: integer
          example: 200
          type: number
        subsidy:
          description: Skip subsidy paid to courier
          format: integer
          example: 90
          type: number
        reimbursements:
          description: >-
            Reimbursements paid to courier. This might occur in the event of an
            order cancellation, order other refundable reasons.
          format: integer
          example: 100
          type: number
        bonuses:
          description: >-
            List of bonuses that may be granted to the courier under specific
            situations.
          maxItems: 1
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CouriersyncBonusSummaryYaml'
      type: object
    CouriersyncJobDetailsYaml:
      description: The details of a job which may be assigned to a courier for delivery.
      properties:
        time:
          description: Job creation time stamp.
          type: number
          format: long
          example: 1593444834
        deliveryId:
          description: Delivery identifier for the job.
          type: string
          example: 61376a78-12e1-4f11-bba2-2097a65s2d75
        orderNumber:
          description: Incrementing number generated for each particular order.
          type: string
          example: '10113045'
        fees:
          description: The calculated components of the courier payment for the job.
          $ref: '#/components/schemas/CouriersyncFeesYaml'
        status:
          description: >-
            All the possible job status that might occur during a delivery
            process.
          $ref: '#/components/schemas/CouriersyncJobStatusYaml'
        groceryDelivery:
          description: The order contains grocery delivery when true.
          type: boolean
        destination:
          description: The job address complete information.
          $ref: '#/components/schemas/CouriersyncAddressYaml'
        distance:
          description: The distance between the courier location and the job destination.
          format: integer
          type: number
        amount:
          description: >-
            The courier's balance regarding the job. When cash orders happen
            usually the courier pays out of his pocket, that would add credit to
            him until he's paid in full.
          type: number
          format: integer
          example: 0
        jobType:
          description: >-
            The job type classifies the type of job assigned to the courier.
            When an order is placed by the customer, two jobs are created for
            the courier, a collect job and a deliver job, basically the courier
            have to complete both jobs, first the collect job, which is the one
            where the order is collected from the restaurant, finally the
            deliver job as the job of delivering the order to the customer.
          $ref: '#/components/schemas/CouriersyncJobTypeYaml'
        restaurantName:
          description: Restaurant's name.
          type: string
          example: MacDonalds
        paymentType:
          description: The order payment status associated with the job.
          $ref: '#/components/schemas/CouriersyncSyncPaymentTypeYaml'
        alcoholDelivery:
          description: The order contains alcoholic products when true.
          type: boolean
        courierId:
          description: Courier identifier for the job details
          type: string
          example: 61376a78-12e1-4f11-bba2-2097a65s2d75
      type: object
    CouriersyncJobStatusYaml:
      description: All possible job status during a delivery process.
      enum:
        - UNASSIGNED
        - ASSIGNED_PENDING_ACCEPTED
        - ASSIGNED
        - ACCEPTED
        - PARKING
        - ARRIVED
        - ENTERED
        - COMPLETED
      type: string
    CouriersyncJobTypeYaml:
      description: >-
        The job type classifies the type of job assigned to the courier. When an
        order is placed by the customer, two jobs are created for the courier, a
        collect job and a deliver job, basically the courier have to complete
        both jobs, first the collect job, which is the one where the order is
        collected from the restaurant and the deliver job as the job of
        delivering the order to the customer.
      enum:
        - COLLECT
        - DELIVER
      type: string
    CouriersyncOrderAcceptanceTimesYaml:
      description: The acceptance times used to present the offer to the courier.
      properties:
        expirationTimestamp:
          description: >-
            The time when the offer to the courier will expire. Usually the
            courier has 60 seconds to accept a new offer.
          format: integer
          example: 1593444834
          type: number
        viewedTimestamp:
          description: The time the delivery offer was viewed by the courier
          format: integer
          example: 1593444834
          type: number
        currentSystemTimestamp:
          description: The time the delivery offer was made to the courier.
          format: integer
          example: 1593444834
          type: number
      type: object
    CouriersyncOrderCancelledYaml:
      description: The order cancelled object holds the details of a cancelled order.
      properties:
        cancellationTime:
          description: Current timestamp for the cancelled order.
          type: number
          format: integer
          example: 1593444834
        deliveryId:
          description: Deliver identifier for the cancelled order.
          type: string
          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d
        restaurantName:
          description: Restaurant name for the cancelled order.
          type: string
          example: MacDonalds
        orderNumber:
          description: Order number for the cancelled order.
          type: string
          example: '10113445'
        isAlcoholDelivery:
          description: The cancelled order contains alcoholic products when true.
          type: boolean
        collectJobStatus:
          description: The collect job status for the cancelled order.
          $ref: '#/components/schemas/CouriersyncJobStatusYaml'
        isCashPayment:
          description: The cancelled order was cash payment when true.
          type: boolean
        courierId:
          description: Courier identifier for the cancelled order.
          type: string
          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d
      type: object
    CouriersyncShiftYaml:
      description: >-
        The shift object associated with a courier on a courier sync payload
        update.
      properties:
        vehicle:
          description: Type of vehicle on shift
          $ref: '#/components/schemas/CouriersyncVehicleYaml'
        shiftType:
          description: Type of shift the courier is on
          $ref: '#/components/schemas/CouriersyncShiftTypeYaml'
        startDate:
          description: Timestamp for when the shift was started.
          format: integer
          type: number
        endDate:
          description: Timestamp for when the shift was ended.
          format: integer
          type: number
        id:
          description: Shift identifier.
          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d
          type: string
        deliveryZoneId:
          description: Delivery zone id the shift was created for.
          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d
          type: string
      type: object
    CouriersyncShiftTypeYaml:
      description: The types of shifts available for the couriers.
      enum:
        - REGULAR
        - ON_CALL
        - OVERFLOW
        - ALCOHOL_ELIGIBLE
        - UNKNOWN
      type: string
    CouriersyncSyncFlexStateTypeYaml:
      description: >-
        <p>The flex state type changes according to the exponential moving
        average and is used as a reference to bring more couriers to suffice the
        demand in a given delivery zone.</p> <p>If the flex state type is "Off",
        it means no shifts will be offered for the delivery zone.</p> <p>If the
        state is "CLOSED", only scheduled shifts will be allowed for the
        delivery zone.</p> <p>If the state is "SEEKING", the shift offers are
        going to be made across the courier network in order to suffice the
        current demand.</p> <p>If the state is "OPEN", it means demand is high
        and couriers from all over the courier network are allowed to create
        shifts for themselves to suffice the current demand.</p> <p>If the state
        is "CODE_RED", it means not only can everyone create shifts for
        themselves for the delivery zone but also couriers from other delivery
        zones might reallocate to help suffice the demand of that particular
        delivery zone.</p>
      enum:
        - CODE_RED
        - OPEN
        - SEEKING
        - CLOSED
      type: string
    CouriersyncSyncPaymentTypeYaml:
      description: The order payment status.
      enum:
        - PAID
        - UNPAID
      type: string
    CouriersyncTopUpPromotionYaml:
      description: The zone profile object for a given delivery zone.
      properties:
        showAcceptanceRate:
          description: Enables showing the courier acceptance rate when true
          type: boolean
        currentAcceptanceRate:
          description: The current order acceptance rate calculated for the courier.
          format: integer
          example: 9500
          type: number
        requiredAcceptanceRate:
          description: >-
            The required acceptance rate the courier should have to be eligible
            for top up bonus subsidy.
          format: integer
          example: 8000
          type: number
      type: object
    CouriersyncVehicleYaml:
      description: All The types of vehicle available.
      enum:
        - CAR
        - BICYCLE
        - TRICYCLE
        - VAN
        - TRUCK
      type: string
    CustomerorderstatusCustomerOrderStatusYaml:
      description: The current consumer order status.
      properties:
        identifier:
          description: The identifier of a consumer order status.
          type: string
          nullable: false
        display:
          $ref: >-
            #/components/schemas/CustomerorderstatusCustomerOrderStatusDisplayYaml
      type: object
      nullable: false
    CustomerorderstatusCustomerOrderStatusDisplayYaml:
      description: The keys used to display status-related information.
      properties:
        primary:
          description: The primary order status-related information.
          type: string
          nullable: false
        secondary:
          description: The secondary order status-related information.
          type: string
          nullable: true
      type: object
    CustomerorderstatusCustomerOrderStatusResponseYaml:
      description: Contains consumer order status-related information.
      properties:
        orderId:
          description: The id of the order.
          nullable: false
          type: string
        tenant:
          description: The tenant.
          nullable: false
          type: string
        status:
          $ref: '#/components/schemas/CustomerorderstatusCustomerOrderStatusYaml'
        annotations:
          description: The additional order status-related information.
          items:
            $ref: >-
              #/components/schemas/CustomerorderstatusCustomerOrderStatusDisplayYaml
          nullable: true
          type: array
        previousStatuses:
          description: The list of previous consumer order statuses.
          items:
            $ref: >-
              #/components/schemas/CustomerorderstatusCustomerOrderStatusDisplayYaml
          nullable: true
          type: array
        upcomingStatuses:
          description: The list of upcoming consumer order statuses.
          items:
            $ref: >-
              #/components/schemas/CustomerorderstatusCustomerOrderStatusDisplayYaml
          nullable: true
          type: array
      type: object
      nullable: false
    CustomerverificationVerifyGuestQueryYaml:
      required:
        - email
        - deviceId
      properties:
        email:
          description: The customer's email address.
          format: email
          type: string
        deviceId:
          description: The customer's unique device Id.
          type: string
      example:
        email: customer@just-eat.com
        deviceId: 108D854D-FF71-#B56-8B77-B7375481BEF4
      type: object
    CustomerverificationVerifyQueryYaml:
      required:
        - email
        - token
      properties:
        email:
          description: The customer's email address.
          format: email
          type: string
        token:
          description: The customer's authentication (CityMeal) token.
          type: string
      example:
        email: customer@just-eat.com
        token: SGVsbG9Xb3JsZCE=
      type: object
    CustomerverificationVerifyResponseYaml:
      description: Response containing the customer details.
      properties:
        email:
          description: The customer's email address.
          format: email
          type: string
        fullName:
          description: The customer's full name.
          type: string
        userType:
          description: The customer's registration type.
          enum:
            - guest
            - account
          type: string
        accountStatus:
          description: The customer's account status.
          enum:
            - notApplicable
            - notActivated
            - activated
          type: string
        jetPayStatus:
          description: The customer's JET pay status.
          enum:
            - allowed
            - notAllowed
          type: string
        phoneNumber:
          description: The customer's phone number.
          type: string
      example:
        email: customer@just-eat.com
        fullName: John Doe
        userType: guest
        accountStatus: activated
        jetPayStatus: allowed
        phoneNumber: '+12345678901'
      type: object
    DaasDaaSAssistanceRequestYaml:
      description: The assistance request object.
      type: object
      properties:
        requestId:
          description: >-
            The ID of the request. This is generated from the [Estimate
            delivery](https://uk.api.just-eat.io/docs/) endpoint
          type: string
          nullable: false
        collectId:
          description: >-
            Collect point used to identify the pick-up address. Represents a
            restaurant, a grocery store, or any other collect point. The
            available collect points can be retrieved using the [Get Collect
            Points](https://uk.api.just-eat.io/docs/) endpoint.
          nullable: false
          type: string
          properties:
            id:
              description: The collect point Id.
              type: string
              nullable: false
        reason:
          description: Reason used to identify the reason for which a partner needs help.
          enum:
            - COLLECTION_TIME_UPDATE
            - REPORT_COURIER_DELAY
            - REPORT_BAD_COURIER_BEHAVIOUR
            - OTHER_CUSTOMER_CONCERNS
            - SPECIAL_INSTRUCTIONS_INQUIRY
            - OTHER_ORDER_ISSUES
          type: string
          nullable: false
      example:
        requestId: 9f84ce96-69e4-4122-8250-b17c0e92dd25
        collect:
          id: efeb46ce-53eb-44cd-afba-ba59e7b84a57
        reason: COLLECTION_TIME_UPDATE
    DaasDaaSAssistanceRequestResponseYaml:
      description: Request for help response.
      type: object
      properties:
        requestId:
          description: Unique Id used to identify the request.
          type: string
          nullable: false
        message:
          description: The message related to the processing of the assistance request.
          type: string
          nullable: false
      example:
        requestId: 9f84ce96-69e4-4122-8250-b17c0e92dd25
        message: >-
          Request for Assistance successfully processed, please expect a Skip
          Agent to reach out to you.
    DaasDaaSCancelDeliveryRequestYaml:
      description: The cancel delivery object.
      type: object
      properties:
        requestId:
          description: >-
            The ID of the request. This is generated from the [Estimate
            delivery](https://uk.api.just-eat.io/docs/) endpoint
          type: string
          nullable: false
      example:
        requestId: 9f84ce96-69e4-4122-8250-b17c0e92dd25
    DaasDaaSCancelDeliveryResponseYaml:
      description: The order cancellation response.
      type: object
      properties:
        requestId:
          description: Unique Id used to identify the request.
          type: string
          nullable: false
        message:
          description: The message related to the processing of the cancellation request.
          type: string
          nullable: false
      example:
        requestId: 9f84ce96-69e4-4122-8250-b17c0e92dd25
        message: The order cancellation request is being processed right now.
    DaasDaaSCancelJobStatusResponseYaml:
      title: CancelJobStatus
      description: The status of a cancellation request.
      type: object
      properties:
        status:
          description: The status of a cancellation request.
          enum:
            - true
            - false
          type: boolean
          nullable: false
        message:
          description: >-
            The error message associated with a failed cancellation request(only
            provided if the status is false).
          type: string
          nullable: false
        requestId:
          description: The request Id associated with the delivery.
          type: string
          nullable: false
      example:
        status: true
        message: ''
    DaasDaaSCollectPointAddressResponseYaml:
      description: The collect point address.
      type: object
      properties:
        id:
          description: The collect point Id.
          type: string
          nullable: false
        name:
          description: Name of the collect point.
          type: string
          nullable: false
        emailAddress:
          description: Email of the collect point.
          type: string
          nullable: false
        phoneNumber:
          description: |
            Phone number of the collect point.

            A phone number can be represented in:
              - E.164 format e.g. +447777111111 or;
              - Local format of submitted tenant e.g. 07777111111.

            E.164 formatted phone numbers are preferred.
          type: string
          nullable: false
          minLength: 3
          maxLength: 16
        address:
          description: Address of the collect point.
          type: string
          nullable: false
        city:
          description: City of the collect point.
          type: string
          nullable: false
        province:
          description: >-
            Province of the collect point.  This will not be returned where a
            province is not applicable, for example in some EU markets.
          type: string
          nullable: true
        postalCode:
          description: Postal code of the collect point.
          type: string
          nullable: true
        latitude:
          description: Latitude information.
          type: number
          nullable: false
          format: double
        longitude:
          description: Longitude information.
          type: number
          nullable: false
          format: double
        timeZone:
          description: Time zone of the collect point in IANA format.
          type: string
          nullable: false
        countryCode:
          description: >-
            Country of the collect point in upper case ISO 3166-1 alpha-2
            format.
          type: string
          nullable: true
        locationRemarks:
          description: >-
            Instructions from partner to the courier. These are intended to help
            the courier navigate to the partner premises.
          type: string
          nullable: true
        courierRegion:
          description: >-
            Id of the Scoober delivery region, where the collect point is
            located.  This will be returned for EU collect points.
          type: string
          nullable: true
        corporateIdentifier:
          description: Corporate identifier of the collect point, where applicable.
          type: string
          nullable: true
    DaasDaaSCollectPointResponseYaml:
      description: The list of collect points.
      type: object
      properties:
        collectPoints:
          description: List of collect points.
          type: array
          items:
            $ref: '#/components/schemas/DaasDaaSCollectPointAddressResponseYaml'
      example:
        collectPoints:
          - id: efeb46ce-53eb-44cd-afba-ba59e7b84a57X
            name: SkipTheDishes
            emailAddress: skip.the.dishes@email.com
            phoneNumber: '+12049433578'
            address: 140 Bannatyne Ave
            city: Winnipeg
            province: Manitoba
            postalCode: R3B 3C5
            latitude: 49.89747240077531
            longitude: -97.13645263021056
            timeZone: America/Winnipeg
          - id: b37b03d0-828b-4d83-8d6c-f205699dcd49
            name: Just Eat
            emailAddress: just.eat@email.com
            phoneNumber: '+14315559966'
            address: CuvryStr 23
            city: Berlin
            postalCode: '13357'
            latitude: 52.549883
            longitude: 13.377196
            timeZone: Europe/Berlin
            countryCode: DE
            locationRemarks: Use the stairs on the left of the restaurant.
            courierRegion: de:berlin
    DaasDaaSConflictExceptionYaml:
      description: A HTTP 409 error response
      properties:
        error:
          description: Type of Exception.
          type: string
        message:
          description: The reason that an error was thrown.
          type: string
      type: object
      example:
        error: RestException
        message: >-
          Unable to create a request for assistance as an action already exists
          for this delivery.
    DaasDaaSCourierCollectionTimeResponseYaml:
      title: CourierCollectionTime
      description: The Courier Collection Time ETA.
      type: object
      properties:
        courierETA:
          description: >-
            The courier's estimated time of arrival at the collection point in
            UTC.
          type: string
          format: date-time
        requestId:
          description: The request Id associated with the delivery.
          type: string
          nullable: false
      example:
        courierETA: '2021-12-20T15:25:33.339Z'
        requestId: e0d58b3a-f547-4013-a4e5-728263040f33
    DaasDaaSCourierLocationResponseYaml:
      title: CourierLocation
      description: The Courier Location.
      type: object
      properties:
        latitude:
          description: The courier's latitude.
          type: number
          format: float
        longitude:
          description: The courier's longitude.
          type: number
          format: float
        requestId:
          description: The request Id associated with the delivery.
          type: string
          nullable: false
      example:
        requestId: e0d58b3a-f547-4013-a4e5-728263040f33
        latitude: 49.8027123
        longitude: 49.8027123
    DaasDaaSCourierResponseYaml:
      title: CourierJobStatus
      description: The status of a delivery.
      type: object
      properties:
        status:
          description: The current status of a delivery.
          enum:
            - UNASSIGNED
            - ASSIGNED
            - IN_TRANSIT_TO_COLLECT
            - ARRIVED_TO_COLLECT
            - COLLECTED
            - IN_TRANSIT_TO_DELIVER
            - ARRIVED_TO_DELIVER
            - DELIVERED
            - UNKNOWN
            - CANCELLED
            - CANCELLATION_FAILURE
          type: string
          nullable: false
        orderId:
          description: The order Id associated with the delivery.
          type: string
          nullable: false
        requestId:
          description: The request Id associated with the delivery.
          type: string
          nullable: false
        orderTrackerURL:
          description: >-
            The tracking URL for the delivery.  Note -- This is only available
            for CA deliveries, otherwise the value will be `Not available`.
          type: string
          nullable: false
        courier:
          description: >-
            Details about the courier associated with the delivery.  Note --
            This is not currently available for EU deliveries.
          type: object
          properties:
            name:
              description: >-
                Name of the courier.  Note -- This is not currently available
                for EU deliveries.
              type: string
              nullable: false
      example:
        status: DELIVERED
        orderId: efeb46ce-53eb-44cd-afba-ba59e7b84a89
        requestId: e0d58b3a-f547-4013-a4e5-728263040f33
        orderTrackerURL: >-
          http://www.skipthedishes.com/order-tracker/efeb46ce-53eb-44cd-afba-ba59e7b84a89
        courier:
          name: Example Courier
    DaasDaaSDeliveryAddressYaml:
      description: Delivery Point address.
      type: object
      properties:
        name:
          description: Name of the delivery point.
          type: string
          nullable: false
          maxLength: 100
        emailAddress:
          description: Email of the delivery point.
          type: string
          nullable: false
          maxLength: 100
        phoneNumber:
          description: |
            Phone number of the delivery point.

            A phone number can be represented in:
              - E.164 format e.g. +447777111111 or;
              - Local format of submitted tenant e.g. 07777111111.

            E.164 formatted phone numbers are preferred.
          type: string
          nullable: false
          maxLength: 40
        address:
          description: Address of the delivery point.
          type: string
          nullable: false
          maxLength: 255
        city:
          description: City of the delivery point.
          type: string
          nullable: false
          maxLength: 50
        province:
          description: Province of the delivery point.
          type: string
          nullable: true
          maxLength: 50
        postalCode:
          description: Post code of the delivery point.
          type: string
          nullable: true
          maxLength: 15
        geolocation:
          $ref: '#/components/schemas/SharedGeoJsonPointYaml'
      x-konfig-properties:
        geolocation:
          description: >-
            Geolocation of the customer to be used for delivery.  Note -- this
            is required for the EU market where the maximum delivery distance is
            capped at 30 km.
          nullable: true
    DaasDaaSDeliveryCreatedResponseYaml:
      title: DeliveryCreated
      description: The Skip order number for a DaaS order.
      type: object
      properties:
        requestId:
          description: The request Id associated with the delivery.
          type: string
          nullable: false
        orderNumber:
          description: The skip order number associated with the DaaS order.
          type: integer
          nullable: false
      example:
        requestId: 8a260fb7-6555-42e9-a4cb-9b64224dfac1
        orderNumber: 100209165
    DaasDaaSDeliveryDetailsYaml:
      description: Details about the items being delivered.
      type: object
      properties:
        weightGrams:
          description: Total weight of the items being delivered, in grams.
          type: number
          format: double
          nullable: false
          minimum: 0
        preparationDuration:
          description: Number of minutes required to prepare the delivery.
          type: number
          format: int32
          nullable: false
          minimum: 0
        hasAlcohol:
          description: >-
            Whether the order contains alcohol or not. If not specified, the
            default is `false`.  For EU orders if this is `true`,
            `ageRestriction` is required.
          type: boolean
          nullable: true
        ageRestriction:
          description: >-
            Customer age required in order to hand over delivery.  Note -- this
            is required if `hasAlcohol` is `true`.
          type: number
          format: int32
          minimum: 0
          nullable: true
    DaasDaaSDeliveryRejectedResponseYaml:
      title: DeliveryRejected
      description: Delivery Rejected request.
      type: object
      properties:
        message:
          description: >-
            Rejection reason received from Scoober.   Note -- Only available in
            EU markets.
          type: string
          nullable: false
        requestId:
          description: The request Id associated with the delivery.
          type: string
          nullable: false
      example:
        requestId: 4cd98e14-9902-4b13-a3c0-78004898af32
        message: Mandatory request parameter firstName is missing
    DaasDaaSDeliveryRequestYaml:
      description: The delivery object.
      type: object
      properties:
        requestId:
          description: >-
            The ID of the request. This is generated from the [Estimate
            delivery](https://uk.api.just-eat.io/docs/) endpoint
          type: string
          nullable: false
        specialInstructions:
          description: Instructions about the delivery that the customer wants to submit.
          type: string
          nullable: true
          maxLength: 275
        targetCollectTime:
          description: >-
            Time in UTC when the partners wish to have the order collected from
            the restaurant. Required if target deliver time was not specified in
            the Estimate delivery request.
          type: string
          format: date-time
          nullable: true
        tip:
          description: Tip paid to the courier for a delivery in cents
          nullable: true
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: false
        orderValue:
          description: Total value of an order in cents.
          nullable: true
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: false
        vendorOrderId:
          description: >-
            Order ID of the order used by the vendor.  This will be mandatory in
            EU markets.  This should be a customer-friendly value as it will be
            displayed in the courier app, and is **strongly** recommended not to
            be a UUID.
          type: string
          nullable: true
      example:
        requestId: 9f84ce96-69e4-4122-8250-b17c0e92dd25
        specialInstructions: Double meat
        targetCollectTime: '2021-08-04T19:00:45.211Z'
        tip: 100
        orderValue: 2000
        vendorOrderId: '123456'
    DaasDaaSDeliveryResponseYaml:
      description: The estimated delivery.
      type: object
      properties:
        requestId:
          description: Unique Id used to identify the request.
          type: string
          nullable: false
        collect:
          description: >-
            Estimated date and time of order collection in UTC. Will only be
            returned if target deliver time was not specified.
          type: object
          nullable: false
          properties:
            id:
              description: The collect point Id.
              type: string
              nullable: false
        delivery:
          description: >-
            Delivery point used to identify the delivery address. Represents a
            customer, or any other delivery point.
          type: object
          nullable: false
        targetDeliverTime:
          description: >-
            Time in UTC when the partners wish to have the order delivered to
            the customer.
          type: string
          format: date-time
        specialInstructions:
          description: Instructions about the delivery that the customer wants to submit.
          type: string
          nullable: true
          format: string
        tip:
          description: Tip paid to the courier for a delivery in cents
          nullable: true
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: false
      example:
        requestId: 9f84ce96-69e4-4122-8250-b17c0e92dd25
        collect:
          id: efeb46ce-53eb-44cd-afba-ba59e7b84a57X
        delivery:
          name: Delivery Point
          emailAddress: delivery.point@email.com
          phoneNumber: '+12049433578'
          address: 140 Bannatyne Ave
          city: Winnipeg
          province: Manitoba
          postalCode: R3B 3C5
        targetDeliverTime: '2021-12-20T15:25:33.339Z'
        specialInstructions: Double meat
        tip: 100
    DaasDaaSDeliveryStatusResponseYaml:
      description: The status of a delivery.
      type: object
      properties:
        status:
          description: The current status of a delivery.
          enum:
            - UNASSIGNED
            - ASSIGNED
            - IN_TRANSIT_TO_COLLECT
            - ARRIVED_TO_COLLECT
            - COLLECTED
            - IN_TRANSIT_TO_DELIVER
            - ARRIVED_TO_DELIVER
            - DELIVERED
            - UNKNOWN
            - CANCELLED
            - CANCELLATION_FAILURE
          type: string
          nullable: false
        orderId:
          description: The order Id associated with the delivery.
          type: string
          nullable: false
        orderTrackerURL:
          description: >-
            The tracking URL for the delivery. Note -- This is only available
            for CA deliveries, otherwise the value will be `Not available`.
          type: string
          nullable: false
        timestamp:
          description: The timestamp in UTC.
          type: string
          format: date-time
      example:
        status: DELIVERED
        orderId: efeb46ce-53eb-44cd-afba-ba59e7b84a89
        orderTrackerURL: >-
          http://www.skipthedishes.com/order-tracker/efeb46ce-53eb-44cd-afba-ba59e7b84a89
        timestamp: '2021-12-20T15:25:33.339Z'
    DaasDaaSEstimateRequestYaml:
      description: The estimate delivery object.
      type: object
      properties:
        collect:
          description: >-
            Collect point used to identify the pick-up address. Represents a
            restaurant, a grocery store, or any other collect point. The
            available collect points can be retrieved using the [Get Collect
            Points](https://uk.api.just-eat.io/docs/) endpoint.
          nullable: false
          type: object
          properties:
            id:
              description: The collect point Id.
              type: string
              nullable: false
        delivery:
          $ref: '#/components/schemas/DaasDaaSDeliveryAddressYaml'
        deliveryDetails:
          $ref: '#/components/schemas/DaasDaaSDeliveryDetailsYaml'
        targetDeliverTime:
          description: >-
            Supply this parameter to set up an advance order. It is the time in
            UTC when the partners wish to have the order delivered to the
            customer and should be at least an hour in advance up to a maximum
            of 5 days.
          nullable: true
          type: string
          format: date-time
        hasAlcohol:
          description: >-
            This previous `hasAlcohol` flag can no longer be used.  If `true`,
            an error will be returned and the estimate will be discarded.  Use
            the `deliveryDetails.hasAlcohol` flag instead for orders with
            alcohol.
          nullable: true
          deprecated: true
          type: boolean
      example:
        collect:
          id: efeb46ce-53eb-44cd-afba-ba59e7b84a57X
        delivery:
          name: Delivery Point
          emailAddress: delivery.point@email.com
          phoneNumber: '+12049433578'
          address: 140 Bannatyne Ave
          city: Winnipeg
          province: Manitoba
          postalCode: R3B 3C5
        deliveryDetails:
          weightGrams: 100
          preparationDuration: 30
          hasAlcohol: false
          ageRestriction: 0
        targetDeliverTime: '2021-12-20T15:25:33.339Z'
      x-konfig-properties:
        delivery:
          description: >-
            Delivery point used to identify the delivery address. Represents a
            customer, or any other delivery point. Note that for EU markets, we
            support a maximum delivery range of 30 km.
          nullable: false
        deliveryDetails:
          description: >-
            Optional information about the items included in this delivery. 
            Note -- this will be required for EU markets.
          nullable: true
    DaasDaaSEstimateResponseYaml:
      description: The estimated delivery.
      type: object
      properties:
        requestId:
          description: Unique Id used to identify the request.
          type: string
          nullable: false
        dynamicDeliveryFee:
          description: The cost of the estimated delivery in minor currency units.
          type: integer
          format: int32
          nullable: false
        dynamicDeliveryFeeRule:
          description: >-
            The rule triggered based on the distance of the delivery, allowing a
            fee to be associated with the delivery.
          type: string
          nullable: false
        estimatedEarliestCollectTime:
          description: >-
            Estimated date and time of order collection in UTC. Will only be
            returned if target deliver time was not specified.
          type: string
          format: date-time
          nullable: true
        estimatedEarliestDeliverTime:
          description: >-
            Estimated date and time of order delivery in UTC. Will only be
            returned if target deliver time was not specified.
          type: string
          format: date-time
          nullable: true
        targetCollectTime:
          description: >-
            Targeted date and time of order collection in UTC if a target
            deliver time was specified.
          type: string
          format: date-time
          nullable: true
      example:
        requestId: 9f84ce96-69e4-4122-8250-b17c0e92dd25
        dynamicDeliveryFee: 350
        dynamicDeliveryFeeRule: 5MinuteDelivery
        estimatedEarliestCollectTime: '2021-12-20T15:25:33.339Z'
        estimatedEarliestDeliverTime: '2021-12-20T15:45:33.339Z'
    DaasDaaSNotificationConfigRequestYaml:
      description: The notification config object.
      type: object
      properties:
        email:
          description: >-
            Email of the partner to contact in case there are any issues with
            the notifications.
          type: string
          nullable: false
        endpoint:
          description: >-
            Partner's HTTPS endpoint to receive events and notifications. Make
            sure the endpoint is properly prefixed as we only support HTTPS
            (secure) URLs.
          type: string
          nullable: false
        secret:
          description: The token or password.
          type: string
          nullable: false
        type:
          description: Type of configuration.
          type: string
          enum:
            - BASIC
            - TOKEN
          nullable: false
        username:
          description: >-
            The username of the partner's credentials to store. Only required
            for type BASIC.
          type: string
          nullable: true
        subscriptions:
          description: >-
            List of notification events to subscribe to. The partner will be
            subscribed to all events if this parameter is not supplied. On the
            other hand, if an empty list is supplied, you will be unsubscribed
            from all events.
          type: array
          items:
            type: string
            enum:
              - ALL
              - COURIERJOBSTATUS
              - CANCELJOBSTATUS
              - COURIERCOLLECTIONTIME
              - COURIERLOCATION
              - DELIVERYREJECTED
          nullable: true
      example:
        email: email@partner.com
        endpoint: endpoint-partner.ca/webhook
        secret: partner-password
        type: BASIC
        username: partner-username
        subscriptions:
          - COURIERJOBSTATUS
          - CANCELJOBSTATUS
    DaasDaaSNotificationConfigResponseYaml:
      description: The notification config object.
      type: object
      properties:
        email:
          description: >-
            Email of the partner to contact in case there are any issues with
            the notifications.
          type: string
          nullable: false
        endpoint:
          description: Partner's endpoint for events and notifications to be sent to.
          type: string
          nullable: false
        type:
          description: Type of configuration.
          type: string
          nullable: false
        username:
          description: >-
            The username of the partner's credentials to store. Only required
            for type BASIC.
          type: string
          nullable: true
        subscriptions:
          description: List of notification events partner is subscribed to.
          type: array
          nullable: true
      example:
        email: email@partner.com
        endpoint: endpoint-partner.ca/webhook
        type: BASIC
        username: partner-username
        subscriptions:
          - CANCELJOBSTATUS
    DaasDaaSNotificationConfigWebhookRequestYaml:
      description: The webhook notification config object.
      type: object
      properties:
        id:
          description: Event UUID
          type: string
        type:
          description: Event Type
          type: string
          enum:
            - COURIERJOBSTATUS
            - CANCELJOBSTATUS
            - COURIERCOLLECTIONTIME
            - DELIVERYCREATED
            - COURIERLOCATION
            - DELIVERYREJECTED
        timestamp:
          description: The timestamp in UTC.
          type: string
          format: date-time
        data:
          description: >-
            The following data is dispatched to the partner through the webhook
            endpoint.  Please note that `CourierLocation` is not presently
            available for EU markets.
          anyOf:
            - $ref: '#/components/schemas/DaasDaaSCourierResponseYaml'
            - $ref: '#/components/schemas/DaasDaaSCancelJobStatusResponseYaml'
            - $ref: '#/components/schemas/DaasDaaSCourierCollectionTimeResponseYaml'
            - $ref: '#/components/schemas/DaasDaaSDeliveryCreatedResponseYaml'
            - $ref: '#/components/schemas/DaasDaaSCourierLocationResponseYaml'
            - $ref: '#/components/schemas/DaasDaaSDeliveryRejectedResponseYaml'
      example:
        id: ee70cb3c-d7fa-11ec-9d64-0242ac120002
        type: COURIERJOBSTATUS
        timestamp: '2021-12-20T15:25:33.339Z'
        data:
          status: DELIVERED
          requestId: e0d58b3a-f547-4013-a4e5-728263040f33
          orderId: efeb46ce-53eb-44cd-afba-ba59e7b84a89
          orderTrackerURL: >-
            http://www.skipthedishes.com/order-tracker/efeb46ce-53eb-44cd-afba-ba59e7b84a89
          courier:
            name: Example Courier
    DaasDaaSUpdateNotificationConfigRequestYaml:
      description: The update notification config object.
      type: object
      properties:
        email:
          description: >-
            Email of the partner to contact in case there are any issues with
            the notifications.
          type: string
          nullable: true
        endpoint:
          description: >-
            Partner's HTTPS endpoint to receive events and notifications. Make
            sure the endpoint is properly prefixed as we only support HTTPS
            (secure) URLs.
          type: string
          nullable: true
        secret:
          description: The token or password.
          type: string
          nullable: true
        type:
          description: Type of configuration.
          type: string
          enum:
            - BASIC
            - TOKEN
          nullable: true
        username:
          description: >-
            The username of the partner's credentials to store. Only required
            for type BASIC.
          type: string
          nullable: true
        subscriptions:
          description: List of notification events to subscribe to.
          type: array
          items:
            type: string
            enum:
              - ALL
              - COURIERJOBSTATUS
              - CANCELJOBSTATUS
              - COURIERCOLLECTIONTIME
              - COURIERLOCATION
              - DELIVERYREJECTED
          nullable: true
      example:
        subscriptions:
          - COURIERJOBSTATUS
          - CANCELJOBSTATUS
    DaasDaasConnectTokenRequestYaml:
      required:
        - grant_type
      properties:
        grant_type:
          description: The OAuth2 grant type. This must be set to "client_credentials"
          enum:
            - client_credentials
          type: string
    DaasDaasErrorExceptionYaml:
      description: A HTTP 400 error response
      properties:
        error:
          description: Type of Exception.
          type: string
        message:
          description: The reason that an error was thrown.
          type: string
        type:
          description: Type of the error
          type: string
      type: object
      example:
        error: GeocodeAddressException
        message: >-
          Delivery not available: The customer address is outside of a
          deliverable region.
        type: GEOCODING_ERROR
    DaasDaasForbiddenExceptionYaml:
      description: A HTTP 403 error response
      properties:
        message:
          description: The reason that an error was thrown.
          type: string
      type: object
      example:
        message: User is not authorized to access this resource with an explicit deny
    DaasDaasInternalServerErrorExceptionYaml:
      description: A HTTP 500 error response
      properties:
        error:
          description: Type of Exception.
          type: string
        message:
          description: The reason that an error was thrown.
          type: string
      type: object
      example:
        error: OrderTrackerException
        message: 'Order tracker: The request id was not found.'
    DaasDaasKeycloakAuthResponseYaml:
      description: The authentication response.
      type: object
      properties:
        access_token:
          description: JWT used to authenticate to DAAS endpoints.
          type: string
          nullable: false
        token_type:
          description: The type of the token returned.
          type: string
          nullable: false
        expires_in:
          description: The number of seconds the token expires in.
          type: integer
          nullable: false
      example:
        access_token: >-
          eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJwbThEQ2tGRXZlcmpZYS1JQlJUdExZSDgxdUJzaTRLbEVrMlhPZlE5VHFjIn0.eyJleHAiOjE2MzA1Mzc1MTMsImlhdCI6MTYzMDUzNzIxMywianRpIjoiNWY1ODA5M2QtNzBiYy00MmQwLTkyZmQtZDI1YTM0ZGZiZmZlIiwiaXNzIjoiaHR0cHM6Ly9hcGktc3RhZ2luZy5za2lwdGhlZGlzaGVzLmNvbS9hdXRoL3JlYWxtcy9kYWFzIiwiYXVkIjoiYWNjb3VudCIsInN1YiI6IjViMDI0YzM4LWI4OTUtNDQ0Ni1hMjQ0LTJmMDU1MDFjYWZlZiIsInR5cCI6IkJlYXJlciIsImF6cCI6InNtb290aC1hcHAiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIkRBQVMtUkVBRCIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iLCJEQUFTLVdSSVRFIiwiZGVmYXVsdC1yb2xlcy1kYWFzIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjbGllbnRJZCI6InNtb290aC1hcHAiLCJjbGllbnRIb3N0IjoiOTkuNzkuMTUwLjE1MiIsInBhcnRuZXJpZCI6IjljYzc3ODY1LWM2NGQtNGJkNi05YzQ0LTllMGJlODMyMjAzNiIsInByZWZlcnJlZF91c2VybmFtZSI6InNlcnZpY2UtYWNjb3VudC1zbW9vdGgtYXBwIiwiY2xpZW50QWRkcmVzcyI6Ijk5Ljc5LjE1MC4xNTIifQ.Fp6YL648fSfrTje-uPKjdIIqk_hYAniCMLlQqMTuUSDohQaLt1ew_ZBbN_ET35k9K_BsSN1PHI8C1M2CHqkKoQ36cK937elkzbDik_V6f9OD_w8aWQ95dyliIQFHsk2AvfACaQNoCaZhY_kexby0v7frjuIBjMTriegeSbpwDmcRpFL0pkwQDDpdUNA28iYDRws41dFUf3wkH4x3EIMMDKKGAbmqDMCrOBJ18FyFXQ1GfULc-fR7nEP_NzY6YxO-Qwct35N_4g8I-HTIXvgGBLRouKB2mui4t8G2F7E_d6lITSSMGYxO8n7W6gs8yNg5tnED3Kv6tdhwJmDuuT30JA
        token_type: Bearer
        expires_in: 300
    DaasDaasSimulateDeliveryResponseYaml:
      description: The simulated delivery response.
      type: object
      properties:
        requestId:
          description: Unique Id used to identify the request.
          type: string
          nullable: false
        message:
          description: >-
            The message related to the processing of the delivery simulation
            request.
          type: string
          nullable: false
      example:
        requestId: 9f84ce96-69e4-4122-8250-b17c0e92dd25
        message: The delivery simulation request is being processed right now.
    DaasDaasUnauthorizedExceptionYaml:
      description: A HTTP 401 error response
      properties:
        error:
          description: Type of Exception.
          type: string
        message:
          description: The reason that an error was thrown.
          type: string
      type: object
      example:
        message: Unauthorized
    DeliveryApiBulkDeliveryDetailsListYaml:
      items:
        $ref: '#/components/schemas/DeliveryApiBulkDeliveryDetailsYaml'
      type: array
    DeliveryApiBulkDeliveryDetailsYaml:
      properties:
        EtaAtDeliveryAddress:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the delivery address.
          format: date-time
          example: '2020-12-25T16:45:28.753Z'
          type: string
        TimeStampWithUtcOffset:
          description: This should represent the bulk delivery updated timestamp.
          format: date-time
          type: string
        OrderId:
          description: Just Eat order identifier
          type: string
        Location:
          $ref: '#/components/schemas/LogisticsLocationYaml'
        EtaAtRestaurant:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the restaurant.
          format: date-time
          example: '2020-12-25T16:30:28.753Z'
          type: string
      type: object
    DeliveryApiDeliveryDetailsYaml:
      type: object
      properties:
        DriverId:
          description: The driver identifier
          example: '123456'
          type: string
        Location:
          $ref: '#/components/schemas/LogisticsLocationYaml'
        TimeStampWithUtcOffset:
          description: This should represent the delivery detailed updated timestamp.
          format: date-time
          type: string
      example:
        TimeStampWithUtcOffset: '2018-03-10T14:45:28.753Z'
    DeliveryApiDeliveryDriverAssignedDetailsYaml:
      required:
        - VehicleDetails
        - DriverName
      properties:
        DriverId:
          description: The driver identifier
          example: '123456'
          type: string
        EtaAtDeliveryAddress:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the delivery address.
          format: date-time
          example: '2020-12-25T16:45:28.753Z'
          type: string
        TimeStampWithUtcOffset:
          description: This should represent the driver assigned timestamp.
          format: date-time
          example: '2020-12-25T15:45:28.753Z'
          type: string
        DriverContactNumber:
          description: This should represent the driver's contact number.
          example: '+447123456789'
          type: string
        VehicleDetails:
          $ref: '#/components/schemas/DeliveryApiVehicleDetailsYaml'
        DriverName:
          description: |-
            This should represent the driver's name.

            **(Optional)** If `VehicleDetails` provided
          example: David
          type: string
        Location:
          $ref: '#/components/schemas/LogisticsLocationYaml'
        EtaAtRestaurant:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the restaurant. In other words, it should not
            just contain the pick-up time initially requested by Just Eat.
          format: date-time
          example: '2020-12-25T15:30:28.753Z'
          type: string
      type: object
    DeliveryApiDeliveryDriverDetailsWithEtaYaml:
      type: object
      properties:
        Location:
          $ref: '#/components/schemas/LogisticsLocationYaml'
        EtaAtDeliveryAddress:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the delivery address.
          format: date-time
          type: string
        TimeStampWithUtcOffset:
          description: This should represent the Eta calculated timestamp.
          format: date-time
          type: string
      example:
        Location:
          Speed: 8.68
          Latitude: 51.51641
          Heading: 357.10382
          Accuracy: 12.814
          Longitude: -0.103198
        EtaAtDeliveryAddress: '2018-03-10T15:45:28.753Z'
        TimeStampWithUtcOffset: '2018-03-10T14:45:28.753Z'
    DeliveryApiDeliveryDriverLocationYaml:
      properties:
        EtaAtRestaurant:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the restaurant.
          format: date-time
          example: '2020-12-25T16:30:28.753Z'
          type: string
        Location:
          example:
            Speed: 8.68
            Latitude: 51.51641
            Heading: 357.10382
            Accuracy: 12.814
            Longitude: -0.103198
          $ref: '#/components/schemas/LogisticsLocationYaml'
        EtaAtDeliveryAddress:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the delivery address.
          format: date-time
          example: '2020-12-25T16:45:28.753Z'
          type: string
        TimeStampWithUtcOffset:
          description: This should represent the location updated timestamp.
          format: date-time
          example: '2020-12-25T15:45:28.753Z'
          type: string
      type: object
    DeliveryApiDeliveryDriverUnassignedDetailsYaml:
      properties:
        EtaAtDeliveryAddress:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the delivery address.
          format: date-time
          example: '2020-12-25T16:45:28.753Z'
          type: string
        'Location:':
          description: >-
            This should represent the driver's geographic location (longitude
            and latitude)
          $ref: '#/components/schemas/LogisticsLocationYaml'
        TimeStampWithUtcOffset:
          description: This should represent the driver unassigned timestamp.
          format: date-time
          example: '2020-12-25T15:30:28.753Z'
          type: string
        DriverContactNumber:
          description: This should represent the driver's contact number.
          example: '+447123456789'
          type: string
        UnassignedBy:
          description: This should represent the actor who triggered unassignment.
          example: operation
          type: string
        DriverName:
          description: This should represent the driver's name.
          example: David McDriverson
          type: string
        Reason:
          description: >-
            This should represent the delivery partner's reason for unassigning
            themselves from the order.
          example: package_not_ready
          type: string
        Comment:
          description: This should represent the comment on the unassignment.
          example: Order was not ready
          type: string
        EtaAtRestaurant:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the restaurant. In other words, it should not
            just contain the pick-up time initially requested by Just Eat.
          format: date-time
          example: '2020-12-25T16:30:28.753Z'
          type: string
      type: object
    DeliveryApiDeliveryRestaurantslistYaml:
      properties:
        restaurants:
          description: A list of Just Eat restaurant ids served by the pool.
          items:
            format: int32
            type: number
          example:
            - 10202
            - 10203
          type: array
      type: object
    DeliveryApiOnItsWayDetailsYaml:
      properties:
        DriverId:
          description: The driver identifier
          example: '123456'
          type: string
        Location:
          $ref: '#/components/schemas/LogisticsLocationYaml'
        EstimatedArrivalTime:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the customer's address. In other words, it
            should not just contain the delivery time initially requested by
            Just Eat.
          format: date-time
          example: '2020-12-25T16:45:28.753Z'
          type: string
        TimeStampWithUtcOffset:
          description: This should represent the driver on its ways timestamp.
          format: date-time
          example: '2020-12-25T15:30:28.753Z'
          type: string
      type: object
    DeliveryApiVehicleDetailsYaml:
      description: |-
        Details of a vehicle

        **(Optional)** If `DriverName` provided
      properties:
        Vehicle:
          description: Details of the vehicle
          example: Motorbike
          type: string
        VehicleRegistration:
          description: Registration details of the vehicle
          example: JU51 SAY
          type: string
      type: object
    DeliveryWebhooksConnectorderListYaml:
      items:
        $ref: '#/components/schemas/DeliveryWebhooksConnectorderYaml'
      type: array
    DeliveryWebhooksConnectorderYaml:
      properties:
        OrderId:
          description: >-
            Globally unique Identifier for the order. Please use this whenever
            sending requests related to this order. Just Eat will provide this
            same identifier on any further messages relating to this order.
          type: string
          example: ijdhpy7bdusgtc28bapspa
        CustomerInfo:
          description: Customer data
          properties:
            Name:
              description: The name of the Customer.
              type: string
              example: Just Eat
            Email:
              description: Email address for the Customer.
              type: string
              example: contact@just-eat.com
            Id:
              description: The JUST EAT Customer Id.
              type: string
              example: '123456'
            LocationAccuracyDescription:
              description: Location accuracy description
              type: string
              example: ROOFTOP
            Address:
              description: Customer Address. Note that Address is comma delimited.
              type: string
              example: Fleet Place House, 2 Fleet Place, London
            Longitude:
              description: Customer address longitude. Will be 0 if not provided.
              type: number
              format: double
              example: -0.12624
            Latitude:
              description: Customer address latitude. Will be 0 if not provided.
              type: number
              format: double
              example: 51.50015
            PreviousRestuarantOrderCount:
              description: >-
                The number of Orders the Customer has placed at this Restaurant
                via JUST EAT
              format: int32
              type: number
            TimeZone:
              description: Customer timezone, e.g. 'Central European Standard Time'.
              type: string
              example: GMT Standard Time
            Postcode:
              description: The post code where Customer is located.
              type: string
              example: EC4M 7RF
            PhoneNumber:
              description: >-
                The customer's unmasked phone number. Please don't expose this
                to drivers, instead use this number to provide your own phone
                masking number or use the JustEat masked number
                `DisplayPhoneNumber` below
              type: string
              example: '18727863'
            LocationAccuracyInMeters:
              description: Accuracy of the location data in meters.
              type: number
              format: double
              example: 0
            LocationSource:
              description: Provider of the location data.
              type: string
              example: GeodataGeocoder
            PhoneMaskingCode:
              description: >-
                Code to use when calling customer phone masked number
                (`DisplayPhoneNumber`) about this order. Null if phone masking
                not enabled
              type: string
              example: '444333222'
            DisplayPhoneNumber:
              description: The customer's masked phone number.
              type: string
              example: (01) 872 7863
            City:
              description: The name of the city where the Customer is located.
              type: string
              example: London
          type: object
        Id:
          description: >-
            The unique identifier for an order within the country. You can
            provide this ID whenever sending requests related to the order. Note
            that further messages from Just Eat relating to this order may not
            use this same identifier, use `OrderId` for a more consistent
            identifier.
          deprecated: true
          type: string
          example: '348322088'
        IsAMiniFistPumpOrder:
          description: Legacy Promotion - Ignore.
          deprecated: true
          type: boolean
        PaymentInfo:
          description: Payment data
          properties:
            PaymentLines:
              description: How the Customer has paid for the Order.
              items:
                description: Payment line data
                properties:
                  Value:
                    description: The value of the payment.
                    type: number
                    format: double
                    example: 22.05
                  CardFee:
                    description: Was there a fee for the payment mechanism.
                    type: number
                    format: double
                    example: 0.5
                  Type:
                    description: How was the order Paid.
                    enum:
                      - Card
                    type: string
                type: object
              type: array
            Total:
              description: The total order value.
              type: number
              format: double
              example: 22.55
            TotalComplementary:
              description: Order amount covered by JUST EAT.
              type: number
              format: double
              example: 0
            CashOnDelivery:
              description: Is the Customer paying on Delivery.
              type: boolean
            PaidDate:
              description: DateTime when the Order was Paid (excludes UTC offset).
              format: date-time
              type: string
            DriverTipValue:
              description: The value of the tip given to the Driver.
              type: number
              format: double
              example: 0
          type: object
        Order:
          description: Order data
          properties:
            InitialDueDate:
              description: Ignore - use `InitialDueDateWithUtcOffset`.
              deprecated: true
              format: date-time
              type: string
            PlacedDate:
              description: >-
                Date Customer placed the order. Note that JUST EAT accepts
                pre-orders therefore there may be a significant difference
                between Placed Date and Due Date This Date/Time is set as UTC
                without an offset, regardless of Country.
              format: date-time
              type: string
            DueDateWithUtcOffset:
              description: >-
                The DateTime when the Customer has been told they will receive
                the Order.
              format: date-time
              type: string
            ServiceType:
              description: Type of the Order.
              enum:
                - Collection
                - Delivery
              type: string
            RdsPickupTimeWithUtcOffset:
              description: >-
                When the Delivery Partner needs to be at the Restaurant to
                pickup the Order.
              format: date-time
              type: string
            Notes:
              properties:
                Courier:
                  properties:
                    Note:
                      description: Notes from the customer to the courier
                      type: string
                      example: Please ring the top bell
                Kitchen:
                  properties:
                    Note:
                      description: Notes from the customer to the kitchen
                      type: string
                      example: As much mayonnaise as you can fit!
                Order:
                  properties:
                    Note:
                      description: General notes from the customer
                      type: string
            NoteToRestaurant:
              description: >-
                Notes from the customer about their order. In addition to notes
                for the restaurant, this field can also delivery instructions -
                and should be displayed to the delivery driver. Ignore - use
                `Notes`.
              type: string
              example: Contact-free delivery
              deprecated: true
            DueDate:
              description: Ignore - use `DueDateWithUtcOffset`.
              deprecated: true
              format: date-time
              type: string
            PickupNoticePeriod:
              description: >-
                Desired minimum amount of notice needed before the driver
                arrives to pickup the order at the restaurant. This is to allow
                restaurant enough time to prepare the order. If less notice is
                given the driver may have to wait for the order to be prepared.
                Field is in the format "hh:mm:ss"
              type: string
              format: timespan
              example: '00:10:00'
            InitialDueDateWithUtcOffset:
              description: >-
                When the Customer was originally told the order would be
                delivered (prior to Restaurant adjustment)
              format: date-time
              type: string
            PromptAsap:
              description: Did the Customer request the Order to ready ASAP
              type: boolean
          type: object
        CustomerOrderId:
          description: >-
            This is a deprecated customer-facing ID that we maintain to support
            existing implementations.
          type: number
          deprecated: true
          example: 348322088
          format: int32
        Restrictions:
          description: This is a list of types of restricted items contained in the order.
          items:
            $ref: '#/components/schemas/DeliveryWebhooksOrderItemRestrictionYaml'
          type: array
        BasketInfo:
          description: Basket data
          properties:
            MenuId:
              description: Id of the Restaurant's menu.
              type: number
              format: int32
              example: 777890
            Discount:
              description: The discount amount, used in conjunction with `DiscountType`.
              type: number
              format: double
              example: 4.78
            BasketId:
              description: Unique Basket Id for the Order.
              type: string
              example: ABCb8DzdnUy7G481b0JN5g
            GroupedBasketItems:
              description: Grouped basket items
              items:
                description: An item in the Basket.
                properties:
                  OrderSubId:
                    description: Order `SubId`
                    type: number
                    format: int32
                    example: 0
                  MenuCardNumber:
                    description: Menu card number.
                    type: string
                    example: '1'
                  CombinedPrice:
                    description: The total price of the Basket Item (including discounts).
                    type: number
                    format: double
                    example: 3.58
                  BasketItem:
                    description: An item in the Basket.
                    properties:
                      Name:
                        description: >-
                          The Item name, e.g. Chicken Tikka Masala or Family
                          Meal Deal 3.
                        type: string
                        example: Mini Fillet Burger
                      UnitPrice:
                        description: The price of the item.
                        type: number
                        format: double
                        example: 1.79
                      OptionalAccessories:
                        description: >-
                          An option item added to the Basket Item, this may be
                          options such as Garlic Bread or a bottle of Coke.
                        items:
                          description: Optional accessory
                          properties:
                            OptionalAccessoryId:
                              description: The accessory Id.
                              type: number
                              format: int32
                              example: 56168
                            UnitPrice:
                              description: The unit price of the accessory.
                              type: number
                              format: double
                              example: 0.5
                            Name:
                              description: The name of the accessory.
                              type: string
                              example: Add Bacon
                            Quantity:
                              description: The quantity of the accessory.
                              type: number
                              format: int32
                              example: 1
                          type: object
                        type: array
                      MultiBuyDiscounts:
                        description: Any multi-purchase discounts applied to this item.
                        items:
                          description: Multi-purchase discount data
                          properties:
                            DiscountType:
                              description: Type of the discount applied
                              type: string
                              example: Percent
                            Amount:
                              description: Amount of the discount applied
                              type: number
                              format: double
                              example: 4.5
                            ProductTypeId:
                              description: >-
                                The Id of the product type the discount applies
                                to.
                              format: int32
                              type: number
                            OrderItemId:
                              description: Id of the Order item.
                              type: string
                          type: object
                        type: array
                      RequiredAccessories:
                        description: >-
                          Items required as part of the Item, for example, Pizza
                          base sauce.
                        items:
                          description: Required accessory
                          properties:
                            UnitPrice:
                              description: The unit price of the accessory.
                              type: number
                              format: double
                              example: 0.1
                            GroupId:
                              description: The group Id of the accessory.
                              type: number
                              format: int32
                              example: 3
                            Name:
                              description: The name of the accessory.
                              type: string
                              example: Large Meal
                            RequiredAccessoryId:
                              description: The accessory Id.
                              type: number
                              format: int32
                              example: 225025
                          type: object
                        type: array
                      MenuCardNumber:
                        description: Menu card number.
                        type: string
                        example: '1'
                      MealParts:
                        description: Represents sub-parts of a meal.
                        items:
                          description: Meal part data
                          properties:
                            OptionalAccessories:
                              description: Optional accessories
                              items:
                                description: Optional accessory
                                properties:
                                  OptionalAccessoryId:
                                    description: The accessory Id.
                                    type: number
                                    format: int32
                                    example: 56168
                                  UnitPrice:
                                    description: The unit price of the accessory.
                                    type: number
                                    format: double
                                    example: 0.5
                                  Name:
                                    description: The name of the accessory.
                                    type: string
                                    example: Add Bacon
                                  Quantity:
                                    description: The quantity of the accessory.
                                    type: number
                                    format: int32
                                    example: 1
                                type: object
                              type: array
                            MealPartId:
                              description: The meal part Id.
                              type: number
                              format: int32
                              example: 45822750
                            Synonym:
                              description: The synonym of the meal part.
                              type: string
                            RequiredAccessories:
                              description: Required accessories
                              items:
                                description: Required accessory
                                properties:
                                  UnitPrice:
                                    description: The unit price of the accessory.
                                    type: number
                                    format: double
                                    example: 0.16
                                  GroupId:
                                    description: The group Id of the accessory.
                                    type: number
                                    format: int32
                                    example: 3
                                  Name:
                                    description: The name of the accessory.
                                    type: string
                                    example: Coca-Cola Original Taste
                                  RequiredAccessoryId:
                                    description: The accessory Id.
                                    type: number
                                    format: int32
                                    example: 225025
                                type: object
                              type: array
                            GroupId:
                              description: The group Id.
                              type: number
                              format: int32
                              example: 1
                            Name:
                              description: The name of the meal part.
                              type: string
                              example: Any Sides?
                          type: object
                        type: array
                      ProductId:
                        description: Id of the Product.
                        type: number
                        format: int32
                        example: 45858074
                      Synonym:
                        description: Legacy - ignore.
                        type: string
                      CombinedPrice:
                        description: Unit Price plus individual Meal Part item cost.
                        type: number
                        format: double
                        example: 3.58
                      Discounts:
                        description: Any discounts applied to this specific item.
                        items:
                          description: Discount data
                          properties:
                            DiscountType:
                              description: Type of the discount applied
                              type: string
                              example: Percent
                            Amount:
                              description: Amount of the discount applied
                              type: number
                              format: double
                              example: 4.5
                          type: object
                        type: array
                      ProductTypeId:
                        description: Id of the Product.
                        type: number
                        format: int32
                        example: 428
                    type: object
                  Quantity:
                    description: The quantity of Basket Items requested.
                    type: number
                    format: int32
                    example: 2
                type: object
              type: array
            Discounts:
              description: Any Discounts applied to the Order.
              items:
                description: Discount data
                properties:
                  DiscountType:
                    description: >-
                      The type of discount, e.g. a percentage or the order or
                      fixed amount.
                    type: string
                    example: Percent
                  Discount:
                    description: >-
                      The discount amount, used in conjunction with
                      `DiscountType`.
                    type: number
                    format: int32
                    example: 10
                  QualifyingValue:
                    description: >-
                      The minimum order amount in order for this discount to be
                      applicable.
                    type: number
                    format: double
                    example: 4.78
                  Id:
                    description: Basket item id.
                    type: number
                    format: int32
                    example: 21950
                type: object
              type: array
            Total:
              description: Total price of the Order.
              type: number
              format: double
              example: 47.97
            MultiBuyDiscount:
              description: MultiBuy discount.
              type: number
              format: double
              example: 0
            DeliveryCharge:
              description: Amount of cost that comes from delivery.
              type: number
              format: double
              example: 5
            SubTotal:
              description: The Basket total cost, excluding any discounts.
              type: number
              format: double
              example: 47.75
            ToSpend:
              description: Amount to spend.
              type: number
              format: double
              example: 0
          type: object
        OrderReference:
          description: >-
            This field is used to store external references to the order. This
            is defined by either Just Eat or the partner that created the order.
          deprecated: true
          type: string
          example: 39cce3f0-0278-dd25-ae32-e8effe1ce4eb
        RestaurantInfo:
          description: Restaurant data
          properties:
            Longitude:
              description: Restaurant address longitude. Will be 0 if not provided.
              type: number
              format: double
              example: -0.12624
            City:
              description: The name of the city where the Restaurant is located
              type: string
              example: London
            EmailAddress:
              description: Email address for the Restaurant.
              type: string
              example: contact@testrestaurant.com
            Postcode:
              description: The post code where Restaurant is located
              type: string
              example: EC4M 7RF
            AddressLines:
              description: Restaurant address.
              items:
                description: Address line
                type: string
                example: Fleet Place House 2, Fleet Place, London
              type: array
            Id:
              description: Unique ID of the Restaurant.
              type: string
              example: '123456'
            PhoneNumber:
              description: The Restaurant phone number.
              type: string
              example: '7123456789'
            PickupNotes:
              description: Order pickup instructions for the Delivery Partner.
              type: string
              example: Use the back entrance
            DispatchMethod:
              description: '`DispatchMethod` to use.'
              type: string
              example: Phone
            Latitude:
              description: Restaurant address latitude. Will be 0 if not provided.
              type: number
              format: double
              example: 51.50015
            Name:
              description: The name of the Restaurant.
              type: string
              example: Test Restaurant
          type: object
        FriendlyOrderReference:
          description: >-
            The customer facing identifier for the order, which should be used
            in any UI or receipts to identify the order to the customer, driver
            or restaurant. This identifier is not guaranteed to be globally
            unique.
          type: string
          example: '348322088'
      type: object
    DeliveryWebhooksDriverLocationYaml:
      description: An update to the driver location
      properties:
        TimeStamp:
          description: Timestamp for the location
          format: date-time
          type: string
        OrderId:
          description: The Order Id
          type: string
        Location:
          $ref: '#/components/schemas/OrdersApiV2LocationV2Yaml'
      type: object
    DeliveryWebhooksDriverStatusYaml:
      description: Details of the driver's change in status
      properties:
        OrderId:
          description: The order Id
          type: string
        DriverContactNumber:
          description: The driver contact number
          type: string
        Event:
          description: The new status of the driver
          enum:
            - DriverAssigned
            - DriverAtRestaurant
            - OnItsWay
            - AtDeliveryAddress
            - Delivered
          type: string
        DriverName:
          description: The driver's name
          type: string
        TimeStamp:
          description: Timestamp for the status change
          format: date-time
          type: string
        EstimatedDeliveryTime:
          description: The estimated delivery time
          format: date-time
          type: string
        EstimatedPickupTime:
          description: The estimated pickup time from the restaurant
          format: date-time
          type: string
      type: object
    DeliveryWebhooksOrderItemRestrictionYaml:
      properties:
        Type:
          description: >-
            The type of restricted item contained in the order. The only
            supported value is 'Alcohol'.
          enum:
            - Alcohol
          type: string
      type: object
    DeliveryWebhooksReadyForPickupYaml:
      description: Details of an order being ready for pickup
      properties:
        Event:
          description: The order is ready for pickup
          enum:
            - Ready for pickup
          type: string
        Timestamp:
          description: The timestamp
          format: date-time
          type: string
      type: object
    DeliveryPoolCreateDeliveryPoolYaml:
      description: A request to create a delivery pool
      required:
        - name
      properties:
        name:
          description: The name of the pool, used by operations teams, in reports, etc.
          type: string
        restaurants:
          description: A list of Just Eat restaurant ids served by the delivery pool.
          items:
            format: int32
            type: number
          type: array
      example:
        name: Toronto - West
        restaurants:
          - 123
          - 456
      type: object
    DeliveryPoolDeliveryPoolHoursYaml:
      type: object
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        friday:
          description: The delivery pool details for Friday
          required:
            - poolTimes
          properties:
            poolTimes:
              description: pool start and end times for the day
              items:
                required:
                  - startTime
                  - endTime
                properties:
                  endTime:
                    description: pool end time for Friday (HH:mm)
                    type: string
                  startTime:
                    description: pool start time for Friday (HH:mm)
                    type: string
                type: object
              type: array
            closed:
              description: true if the pool is closed for the day
              type: boolean
          type: object
        tuesday:
          description: The delivery pool details for Tuesday
          required:
            - poolTimes
          properties:
            poolTimes:
              description: pool start and end times for the day
              items:
                required:
                  - startTime
                  - endTime
                properties:
                  endTime:
                    description: pool end time for Tuesday (HH:mm)
                    type: string
                  startTime:
                    description: pool start time for Tuesday (HH:mm)
                    type: string
                type: object
              type: array
            closed:
              description: true if the pool is closed for the day
              type: boolean
          type: object
        thursday:
          description: The delivery pool details for Thursday
          required:
            - poolTimes
          properties:
            poolTimes:
              description: pool start and end times for the day
              items:
                required:
                  - startTime
                  - endTime
                properties:
                  endTime:
                    description: pool end time for Thursday (HH:mm)
                    type: string
                  startTime:
                    description: pool start time for Thursday (HH:mm)
                    type: string
                type: object
              type: array
            closed:
              description: true if the pool is closed for the day
              type: boolean
          type: object
        sunday:
          description: The delivery pool details for Sunday
          required:
            - poolTimes
          properties:
            poolTimes:
              description: pool start and end times for the day
              items:
                required:
                  - startTime
                  - endTime
                properties:
                  endTime:
                    description: pool end time for Sunday (HH:mm)
                    type: string
                  startTime:
                    description: pool start time for Sunday (HH:mm)
                    type: string
                type: object
              type: array
            closed:
              description: true if the pool is closed for the day
              type: boolean
          type: object
        saturday:
          description: The delivery pool details for Saturday
          required:
            - poolTimes
          properties:
            poolTimes:
              description: pool start and end times for the day
              items:
                required:
                  - startTime
                  - endTime
                properties:
                  endTime:
                    description: pool end time for Saturday (HH:mm)
                    type: string
                  startTime:
                    description: pool start time for Saturday (HH:mm)
                    type: string
                type: object
              type: array
            closed:
              description: true if the pool is closed for the day
              type: boolean
          type: object
        monday:
          description: The delivery pool details for Monday
          required:
            - poolTimes
          properties:
            poolTimes:
              description: pool start and end times for the day
              items:
                required:
                  - startTime
                  - endTime
                properties:
                  endTime:
                    description: pool end time for Monday (HH:mm)
                    type: string
                  startTime:
                    description: pool start time for Monday (HH:mm)
                    type: string
                type: object
              type: array
            closed:
              description: true if the pool is closed for the day
              type: boolean
          type: object
        wednesday:
          description: The delivery pool details for Wednesday
          required:
            - poolTimes
          properties:
            poolTimes:
              description: pool start and end times for the day
              items:
                required:
                  - startTime
                  - endTime
                properties:
                  endTime:
                    description: pool end time for Wednesday (HH:mm)
                    type: string
                  startTime:
                    description: pool start time for Wednesday (HH:mm)
                    type: string
                type: object
              type: array
            closed:
              description: true if the pool is closed for the day
              type: boolean
          type: object
      example:
        monday:
          closed: false
          poolTimes:
            - startTime: '09:00'
              endTime: '21:00'
        tuesday:
          closed: true
          poolTimes:
            - startTime: '10:00'
              endTime: '19:00'
        wednesday:
          closed: false
          poolTimes:
            - startTime: '08:00'
              endTime: '18:00'
        thursday:
          closed: false
          poolTimes:
            - startTime: '12:00'
              endTime: '03:00'
        friday:
          closed: false
          poolTimes:
            - startTime: '12:00'
              endTime: '01:00'
        saturday:
          closed: false
          poolTimes:
            - startTime: '11:00'
              endTime: '23:00'
        sunday:
          closed: false
          poolTimes:
            - startTime: '13:00'
              endTime: '19:00'
    DeliveryPoolEstimatedTimeYaml:
      description: An estimated time
      type: object
      properties:
        bestGuess:
          description: Your best estimation (hh:mm:ss)
          type: string
      example:
        bestGuess: '00:35:00'
    DeliveryPoolPatchDeliveryPoolYaml:
      description: A change to a delivery pool
      type: object
      properties:
        name:
          description: The name of the pool, used by operations teams, in reports, etc.
          type: string
        restaurants:
          description: A list of Just Eat restaurant ids served by the delivery pool.
          items:
            format: int32
            type: number
          type: array
      example:
        name: Toronto - North
    DeliveryPoolUpdateDeliveryPoolRiskYaml:
      description: A change to a delivery pool risk
      required:
        - riskLevel
      type: object
      properties:
        riskLevel:
          description: >
            The risk level value between 0 and 9 where 0 being little to no
            "risk" and 9 being at maximum "risk".


            The agreed process for handling missing risk signal values:
              - If the last value < 9, remain online - BAU.
              - If the last value = 9, remain offline.

            The higher risk value, the smaller polygon will be defined.
          type: number
          format: integer
          minimum: 0
          maximum: 9
      example:
        riskLevel: 1
    DeliveryfeesRestaurantDeliveryFeesYaml:
      nullable: false
      properties:
        minimumOrderValue:
          description: >-
            The minimum order value (excluding fees) required, in the smallest
            unit of local currency (e.g. pence).
          format: integer
          type: number
        bands:
          description: Collection of delivery fee bands
          items:
            properties:
              minimumAmount:
                description: >-
                  The minimum order value (excluding fees) when this fee band
                  applies. The fee with the highest `minimumAmount` that is less
                  than or equal to order value applies. This is in the smallest
                  unit of local currency (e.g. pence).
                format: integer
                type: number
              fee:
                description: >-
                  The delivery fee, in the smallest unit of local currency (e.g.
                  pence).
                format: integer
                type: number
            type: object
          type: array
        restaurantId:
          description: The identifier of the restaurant
          type: string
      example:
        minimumOrderValue: 1000
        bands:
          - minimumAmount: 1000
            fee: 250
          - minimumAmount: 2000
            fee: 0
        restaurantId: '5678'
      type: object
    DiscoveryDiscoveryResponseYaml:
      type: object
      properties:
        searchResults:
          description: Restaurants serving the requested area
          items:
            $ref: '#/components/schemas/DiscoveryDiscoveryResponseItemYaml'
          type: array
      example:
        searchResults:
          - name: Example Restaurant
            restaurantId: '12345'
            cuisines:
              - seoName: pizza
                name: Pizza
              - seoName: Fish & Chips
                name: fish-and-chips
              - seoName: halal
                name: Halal
            availabilities:
              - serviceType: Delivery
                isOpen: true
                canPreOrder: false
                nextAvailability:
                  AvailableFrom: '2020-01-01T07:20:00Z'
                  TimeZone: Europe/London
    DiscoveryDiscoveryResponseAvailabilitiesYaml:
      properties:
        nextAvailability:
          $ref: '#/components/schemas/DiscoveryDiscoveryResponseAvailabilityYaml'
        serviceType:
          description: The type of service the restaurant availability is
          enum:
            - Unknown
            - Delivery
            - Collection
          type: string
        canPreOrder:
          description: If the restaurant is in a pre order state
          type: boolean
        isOpen:
          description: >-
            If the restaurant is in an open state. This also assumes it is
            accepting orders
          type: boolean
      type: object
    DiscoveryDiscoveryResponseAvailabilityYaml:
      description: When the restaurant is next available
      type: object
      properties:
        availableFrom:
          description: >-
            Date and time the restaurant is available from. Format -
            'yyyy-dd-MMTHH:mm:ss', local date time of restaurant
          format: date-time
          type: string
        timeZone:
          description: The timezone in which the restaurant operates in.
          type: string
    DiscoveryDiscoveryResponseCuisineYaml:
      description: A cuisine
      properties:
        name:
          description: Display name of the cuisine
          type: string
        seoName:
          description: Sanitized name of the cuisine, compatible with URLs
          type: string
      type: object
    DiscoveryDiscoveryResponseItemYaml:
      properties:
        name:
          description: Display name of the restaurant
          type: string
        availabilities:
          description: Availabilities of the restaurant
          items:
            $ref: '#/components/schemas/DiscoveryDiscoveryResponseAvailabilitiesYaml'
          type: array
        cuisines:
          description: Cuisines of the restaurant
          items:
            $ref: '#/components/schemas/DiscoveryDiscoveryResponseCuisineYaml'
          type: array
        restaurantId:
          description: Id of the restaurant
          type: string
      type: object
      example:
        name: Example Restaurant
        availabilities:
          - nextAvailability:
              AvailableFrom: '2020-01-01T07:20:00.000Z'
              TimeZone: Europe/London
            serviceType: Delivery
            canPreOrder: false
            isOpen: true
        cuisines:
          - seoName: pizza
            name: Pizza
          - seoName: Fish & Chips
            name: fish-and-chips
          - seoName: halal
            name: Halal
        restaurantId: '12345'
    DiscoveryServiceTypeYaml:
      type: string
      enum:
        - any
        - delivery
        - collection
      default: any
    DiscoveryRestaurantsAvailabilityYaml:
      description: Availability information by service type.
      type: object
      properties:
        delivery:
          $ref: '#/components/schemas/DiscoveryRestaurantsServiceAvailabilityYaml'
        collection:
          $ref: '#/components/schemas/DiscoveryRestaurantsServiceAvailabilityYaml'
    DiscoveryRestaurantsDeliveryFeesYaml:
      description: Information related to delivery fees.
      type: object
      properties:
        restaurants:
          description: A dictionary of restaurant delivery fees.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DeliveryfeesRestaurantDeliveryFeesYaml'
    DiscoveryRestaurantsEnrichedRestaurantItemYaml:
      type: object
      properties:
        tags:
          description: >-
            The tags for the restaurant, more details can be found in
            `metaData.tagDetails`.
          type: array
          items:
            type: string
        id:
          description: The id of the restaurant.
          type: string
        name:
          description: The display name of the restaurant.
          type: string
        uniqueName:
          description: The unique name of the restaurant, used to build the menu URL.
          type: string
        address:
          description: The address of the restaurant.
          type: object
          properties:
            city:
              description: The city the restaurant is in.
              type: string
            firstLine:
              description: The first line of the restaurant's address.
              type: string
            postalCode:
              description: The postal code of the restaurant.
              type: string
            location:
              $ref: '#/components/schemas/DiscoveryRestaurantsLocationYaml'
        rating:
          description: Rating details for the restaurant.
          type: object
          properties:
            count:
              description: How many ratings have been placed.
              type: number
              minimum: 0
            starRating:
              description: The rating as a star score.
              type: number
              format: double
              minimum: 0
            userRating:
              description: >-
                The user rating score for the restaurant, null if they have not
                left a review.
              type: number
              format: double
              nullable: true
        isNew:
          description: True if the restaurant was recently added.
          type: boolean
        driveDistanceMeters:
          description: >-
            The distance to drive to the restaurant in meters, null if the
            distance has not been calculated.
          type: number
          nullable: true
        openingTimeLocal:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        deliveryOpeningTimeLocal:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        deliveryEtaMinutes:
          description: Estimate for the restaurant delivery times.
          type: object
          properties:
            approximate:
              description: The approximate delivery time in minutes.
              type: number
              nullable: true
            rangeLower:
              description: The earliest delivery time in minutes.
              type: number
              nullable: true
            rangeUpper:
              description: The latest delivery time in minutes.
              type: number
              nullable: true
        isCollection:
          description: True if the restaurant offers collection.
          type: boolean
        isDelivery:
          description: True if the restaurant offers delivery.
          type: boolean
        isOpenNowForCollection:
          description: True if the restaurant is open for collection now.
          type: boolean
        isOpenNowForDelivery:
          description: True if the restaurant is open for delivery now.
          type: boolean
        isOpenNowForPreorder:
          description: True if the restaurant is open for pre-orders now.
          type: boolean
        isTemporarilyOffline:
          description: True if the restaurant is offline temporarily.
          type: boolean
        defaultDisplayRank:
          description: The default ranking of this restaurant in this specific result.
          type: number
          minimum: 0
        isTemporaryBoost:
          description: True if the restaurant rank has been temporarily improved.
          type: boolean
        isSponsored:
          description: True if the restaurant has been sponsored .
          type: boolean
        isPremier:
          description: >-
            True if the restaurant is a premier partner (otherwise known as a
            Local Legend in the UK).
          type: boolean
        logoUrl:
          description: URL of the restaurant's logo.
          type: string
        bannerUrl:
          description: >-
            URL template that can be used to access the restaurant's banner
            image. The `{transformations}` placeholder can be replaced with
            additional Cloudinary transformations (e.g. height, width). For more
            details see
            https://cloudinary.com/documentation/image_transformations
          type: string
        isTestRestaurant:
          description: True if the restaurant is for testing.
          type: boolean
        deals:
          description: The offers available for the restaurant.
          type: array
          items:
            type: object
            properties:
              description:
                description: >-
                  Description of the offer. e.g. `Cheeky Tuesday - 20% off when
                  you spend £15`
                type: string
              offerType:
                description: >-
                  The type of offer, currently supported types are: `Percent`,
                  `FreeItem`, `Bogof`, `StampCard`, `BogofMixMatch` and
                  `Notification`.
                type: string
        cuisines:
          description: The cuisines for the restaurant.
          type: array
          items:
            type: object
            properties:
              name:
                description: The display name of the cuisine.
                type: string
              uniqueName:
                description: >-
                  The unique name of the cuisine, used to look up more details
                  from `metaData.cuisineDetails`.
                type: string
        lastUpdated:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        availability:
          $ref: '#/components/schemas/DiscoveryRestaurantsAvailabilityYaml'
    DiscoveryRestaurantsEnrichedRestaurantsResponseYaml:
      type: object
      properties:
        metadata:
          description: Additional data about the search results
          type: object
          properties:
            canonicalName:
              description: >-
                The canonical name for the search location, can be used to build
                a URL for this location.
              type: string
            district:
              description: >-
                The outward code (for postcode based searches) or district (for
                latitude-longitude based searches) of the search location.
              type: string
            postalCode:
              description: >-
                The postcode (for postcode based searches) or district (for
                latitude-longitude based searches) of the search location.
              type: string
            area:
              description: >-
                The area (for postcode based searches) or district name (for
                latitude-longitude based searches) of the search location.
              type: string
            location:
              $ref: '#/components/schemas/DiscoveryRestaurantsLocationYaml'
            cuisineDetails:
              description: A collection of cuisines that are relevant for this search.
              type: array
              items:
                type: object
                properties:
                  uniqueName:
                    description: >-
                      The unique name of the cuisine, primarily used for
                      including in the URL, filtering and locating cuisine
                      images.
                    type: string
                  count:
                    description: The number of restaurants with this cuisine.
                    type: number
                    minimum: 0
                  name:
                    description: The display name of the cuisine.
                    type: string
            resultCount:
              description: The number of restaurants for this search.
              type: number
              minimum: 0
            tagDetails:
              description: A collection of tags that are relevant for this search result.
              type: array
              items:
                type: object
                properties:
                  priority:
                    description: The priority of the tag.
                    type: number
                  key:
                    description: The key of the tag.
                    type: string
                  displayName:
                    description: The display name of the tag.
                    type: string
            deliveryArea:
              description: >-
                The outward code (for postcode based searches) or district (for
                latitude-longitude based searches) of the search location.
              type: string
        restaurants:
          description: A ranked collection of restaurants.
          type: array
          items:
            $ref: >-
              #/components/schemas/DiscoveryRestaurantsEnrichedRestaurantItemYaml
        deliveryFees:
          $ref: '#/components/schemas/DiscoveryRestaurantsDeliveryFeesYaml'
        promotedPlacement:
          $ref: '#/components/schemas/DiscoveryRestaurantsPromotedPlacementYaml'
        filters:
          description: A dictionary of pre-calculated filters for this search.
          type: object
          additionalProperties:
            type: object
            properties:
              displayName:
                description: The display name for the filter.
                type: string
              imageName:
                description: >-
                  The image name of the filter, which should be used when
                  retrieving imagery for the filter.
                type: string
              group:
                description: >-
                  Used to determine how to combine multiple selected filters. OR
                  filters from the same group, AND from different groups. e.g.
                  cuisine OR cuisine AND offer
                type: string
                nullable: true
              restaurantIds:
                description: The list of restaurant ids that match this filter.
                type: array
                items:
                  type: string
        layout:
          description: >-
            A dictionary of different potential layouts that can be used to
            display the search results.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DiscoveryRestaurantsLayoutItemYaml'
        enrichedLists:
          description: >-
            A dictionary to store extra details for enriched lists used in any
            layouts.
          type: object
          additionalProperties:
            type: object
            properties:
              subtitle:
                description: The subtitle for the enriched list.
                type: string
                nullable: true
              trackingId:
                description: >-
                  The tracking id for the enriched list, used to identify what
                  generated the enriched list.
                type: string
                nullable: true
              focusedProperties:
                description: >-
                  A collection of properties that are relevant for this enriched
                  list, for example ETAs, delivery cost. Can be used to present
                  different restaurant data if required.
                type: array
                items:
                  type: string
                nullable: true
              linkId:
                description: >-
                  An identifier that can be used to link to the source of an
                  enriched list. e.g. a filter or restaurant's menu page
                type: string
                nullable: true
              linkType:
                description: >-
                  The type of link id for this enriched list. `filter` means
                  `linkId` will be the id of a filter, `restaurant` means that
                  `linkId` will be a restaurant's `uniqueName`.
                type: string
                enum:
                  - filter
                  - restaurant
                nullable: true
      example:
        metadata:
          canonicalName: ec4-london
          district: EC4M
          postalCode: EC4M5AB
          area: London
          location:
            type: Point
            coordinates:
              - -0.096928
              - 51.512687
          cuisineDetails:
            - name: Chinese
              uniqueName: chinese
              total: 171
          resultCount: 1
          tagDetails:
            - displayName: Tried and Tasted
              key: tried-and-tasted
              priority: 300
          deliveryArea: EC4M
        restaurants:
          - tags:
              - tried-and-tasted
            id: '102215'
            name: TEST_DP_1
            uniqueName: test_dp-london-london
            address:
              city: London
              firstLine: London
              postalCode: EC4M 7RF
              location:
                type: Point
                coordinates:
                  - -0.103137
                  - 51.516454
            rating:
              count: 53
              starRating: 4.5
              userRating: null
            isNew: false
            driveDistanceMeters: 965.603
            openingTimeLocal: '2019-11-19T01:00:00'
            deliveryOpeningTimeLocal: '2019-11-18T01:00:00'
            deliveryEtaMinutes:
              approximate: null
              rangeLower: 10
              rangeUpper: 25
            isCollection: false
            isDelivery: true
            isOpenNowForCollection: false
            isOpenNowForDelivery: true
            isOpenNowForPreorder: false
            isTemporarilyOffline: false
            defaultDisplayRank: 0
            isTemporaryBoost: false
            isSponsored: false
            isPremier: false
            logoUrl: >-
              http://d30v2pzvrfyzpo.cloudfront.net/uk/images/restaurants/102215.gif
            bannerUrl: >-
              https://res.cloudinary.com/tkwy-prod-eu/image/upload/{transformations}/v1676933415/static-takeaway-com/images/generic/heroes/541/541_burger_158
            isTestRestaurant: false
            deals:
              - description: 20% off when you spend £20
                offerType: Percent
            cuisines:
              - name: Chinese
                uniqueName: chinese
            availability:
              delivery:
                isOpen: false
                canPreOrder: true
                nextAvailability:
                  from: '2023-03-21T11:32:00'
                isTemporarilyOffline: false
              collection:
                isOpen: false
                canPreOrder: true
                nextAvailability:
                  from: '2023-03-21T12:00:00'
                isTemporarilyOffline: false
        deliveryFees:
          restaurants:
            '102215':
              restaurantId: '102215'
              minimumOrderValue: 1000
              bands:
                - minimumAmount: 1000
                  fee: 250
                - minimumAmount: 3000
                  fee: 0
        promotedPlacement:
          filteredSearchPromotedLimit: 5
          restaurants:
            '102215':
              restaurantId: '102215'
              defaultPromoted: true
          rankedIds:
            - 102215
        filters:
          chinese:
            displayName: Chinese
            imageName: chinese
            group: cuisine
            restaurantIds:
              - '102215'
          deals:
            displayName: Special Offers
            imageName: specials-offers
            group: offers
            restaurantIds:
              - '102215'
        layout:
          search-filters-1:
            title: Filters
            type: list
            id: search-filters-1
            contents:
              - title: Chinese
                type: filter
                id: chinese
              - title: Special Offers
                type: filter
                id: deals
          search-page:
            type: list
            id: search-page
            contents:
              - title: Check out these amazing restaurants
                type: enrichedList
                id: superCarousel
                contents:
                  - type: restaurant
                    id: 102215X
              - title: '{count} open'
                type: list
                id: open-restaurants
                contents:
                  - type: restaurant
                    id: 102215X
        enrichedLists:
          superCarousel:
            subTitle: No seriously, these are great
            trackingId: a0aca54f-24bb-4108-a2bf-d767b6ca6f2d
            focusedProperties:
              - deals
            linkId: deals
            linkType: filter
    DiscoveryRestaurantsLayoutItemYaml:
      type: object
      properties:
        title:
          description: The title of the layout item.
          type: string
          nullable: true
        type:
          description: The type of layout item.
          type: string
          enum:
            - list
            - enrichedList
            - filter
            - restaurant
        id:
          description: The id of the layout item.
          type: string
        contents:
          description: The contents of the layout item.
          type: array
          items:
            $ref: '#/components/schemas/DiscoveryRestaurantsLayoutItemYaml'
          nullable: true
    DiscoveryRestaurantsLocationYaml:
      description: Location information in GeoJSON format.
      type: object
      nullable: true
      properties:
        type:
          description: The type of geometry.
          type: string
          enum:
            - Point
        coordinates:
          description: >-
            The coordinates of the location, the first element represents the
            longitude, the second the latitude.
          type: array
          items:
            format: double
            type: number
          minItems: 2
          maxItems: 2
    DiscoveryRestaurantsPromotedPlacementYaml:
      description: Information related to promoted placement restaurants.
      type: object
      properties:
        filteredSearchPromotedLimit:
          description: How many restaurants were promoted by applying a filtered search.
          type: number
          minimum: 0
        rankedIds:
          description: Restaurants that can be promoted, in preferred order.
          type: array
          items:
            type: string
        restaurants:
          description: A dictionary of promoted restaurants.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/PromotedPlacementRestaurantPromotedPlacementInfoYaml
    DiscoveryRestaurantsServiceAvailabilityYaml:
      description: Availability information for a service.
      type: object
      required:
        - isOpen
        - canPreOrder
        - isTemporarilyOffline
      properties:
        isOpen:
          description: True if the restaurant is open.
          type: boolean
        canPreOrder:
          description: True if the restaurant is accepting pre-orders.
          type: boolean
        nextAvailability:
          description: Information about next availability.
          type: object
          properties:
            from:
              $ref: '#/components/schemas/LocalDateTimeYaml'
        isTemporarilyOffline:
          description: True if the restaurant is temporarily offline.
          type: boolean
        etaMinutes:
          description: >-
            Estimate for the restaurant service completion times when ordered
            now.
          type: object
          properties:
            approximate:
              description: The approximate service completion time in minutes.
              type: integer
            rangeLower:
              description: The lower bound for service completion time in minutes.
              type: integer
            rangeUpper:
              description: The upper bound for service completion time in minutes.
              type: integer
    DiscoveryRestaurantsV3EnrichedRestaurantItemYaml:
      title: Enriched Restaurant
      type: object
      required:
        - id
        - name
        - uniqueName
        - address
        - rating
        - isNew
        - openingTimeLocal
        - deliveryOpeningTimeLocal
        - isCollection
        - isDelivery
        - isOpenNowForCollection
        - isOpenNowForDelivery
        - isOpenNowForPreorder
        - isTemporarilyOffline
        - defaultDisplayRank
        - isTemporaryBoost
        - isPremier
        - isTestRestaurant
        - deals
        - tags
        - cuisines
        - availability
      properties:
        tags:
          description: >-
            The tags for the restaurant, more details can be found in
            `metaData.tagDetails`.
          type: array
          items:
            type: string
        id:
          description: The id of the restaurant.
          type: string
        name:
          description: The display name of the restaurant.
          type: string
        uniqueName:
          description: The unique name of the restaurant, used to build the menu URL.
          type: string
        address:
          description: The address of the restaurant.
          type: object
          properties:
            city:
              description: The city the restaurant is in.
              type: string
            firstLine:
              description: The first line of the restaurant's address.
              type: string
            postalCode:
              description: The postal code of the restaurant.
              type: string
            location:
              description: The location of the restaurant.
              $ref: '#/components/schemas/DiscoveryRestaurantsV3LocationYaml'
        rating:
          description: Rating details for the restaurant.
          type: object
          required:
            - count
            - starRating
          properties:
            count:
              description: How many ratings have been placed.
              type: number
              minimum: 0
            starRating:
              description: The rating as a star score.
              type: number
              minimum: 0
            userRating:
              description: >-
                The user rating score for the restaurant, if they have left a
                review.
              type: number
              minimum: 0
        isNew:
          description: True if the restaurant was recently added.
          type: boolean
        driveDistanceMeters:
          description: >-
            The distance to drive to the restaurant in meters, only included if
            the distance has been calculated.
          type: number
          minimum: 0
        openingTimeLocal:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        deliveryOpeningTimeLocal:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        deliveryEtaMinutes:
          description: Estimate for the restaurant delivery times.
          type: object
          properties:
            approximate:
              description: The approximate delivery time in minutes.
              type: number
            rangeLower:
              description: The earliest delivery time in minutes.
              type: number
            rangeUpper:
              description: The latest delivery time in minutes.
              type: number
        isCollection:
          description: True if the restaurant offers collection.
          type: boolean
        isDelivery:
          description: True if the restaurant offers delivery.
          type: boolean
        isOpenNowForCollection:
          description: True if the restaurant is open for collection now.
          type: boolean
        isOpenNowForDelivery:
          description: True if the restaurant is open for delivery now.
          type: boolean
        isOpenNowForPreorder:
          description: True if the restaurant is open for pre-orders now.
          type: boolean
        isTemporarilyOffline:
          description: True if the restaurant is offline temporarily.
          type: boolean
        defaultDisplayRank:
          description: The default ranking of this restaurant in this specific result.
          type: number
          minimum: 0
        isTemporaryBoost:
          description: True if the restaurant rank has been temporarily improved.
          type: boolean
        isPremier:
          description: >-
            True if the restaurant is a premier partner (otherwise known as a
            Local Legend in the UK).
          type: boolean
        logoUrl:
          description: URL of the restaurant's logo.
          type: string
        bannerUrl:
          description: >-
            URL template that can be used to access the restaurant's banner
            image. The {transformations} placeholder can be replaced with
            additional Cloudinary transformations (e.g. height, width). For more
            details see
            https://cloudinary.com/documentation/image_transformations
          type: string
        isTestRestaurant:
          description: True if the restaurant is for testing.
          type: boolean
        deals:
          description: The offers available for the restaurant.
          type: array
          items:
            type: object
            required:
              - description
              - offerType
            properties:
              description:
                description: >-
                  Description of the offer. e.g. Cheeky Tuesday - 20% off when
                  you spend £15
                type: string
              offerType:
                description: >-
                  The type of offer, currently supported types are: `Percent`,
                  `FreeItem`, `Bogof`, `StampCard`, `BogofMixMatch` and
                  `Notification`.
                type: string
        cuisines:
          description: The cuisines for the restaurant.
          type: array
          items:
            type: object
            required:
              - name
              - uniqueName
            properties:
              name:
                description: The display name of the cuisine.
                type: string
              uniqueName:
                description: >-
                  The unique name of the cuisine, used to look up more details
                  from `metaData.cuisineDetails`.
                type: string
        availability:
          $ref: '#/components/schemas/DiscoveryRestaurantsAvailabilityYaml'
    DiscoveryRestaurantsV3EnrichedRestaurantsResponseYaml:
      type: object
      required:
        - metaData
        - restaurants
        - filters
        - defaultLayout
        - enrichedLists
      properties:
        metaData:
          description: Additional data about the search results.
          type: object
          required:
            - cuisineDetails
            - resultCount
            - tagDetails
          properties:
            canonicalName:
              description: >-
                The canonical name for the search location, can be used to build
                a URL for this general location.
              type: string
            district:
              description: >-
                The outward code (for postcode based searches) or district (for
                latitude-longitude based searches) of the search location.
              type: string
            postalCode:
              description: >-
                The postcode (for postcode based searches) or district (for
                latitude-longitude based searches) of the search location.
              type: string
            area:
              description: >-
                The area (for postcode based searches) or district name (for
                latitude-longitude based searches) of the search location.
              type: string
            location:
              $ref: '#/components/schemas/DiscoveryRestaurantsV3LocationYaml'
            cuisineDetails:
              description: A collection of cuisines that are relevant for this search.
              type: array
              items:
                type: object
                properties:
                  name:
                    description: The display name of the cuisine.
                    type: string
                  uniqueName:
                    description: >-
                      The unique name of the cuisine, primarily used for
                      including in the URL, filtering and locating cuisine
                      images.
                    type: string
                  count:
                    description: The number of restaurants with this cuisine.
                    type: integer
            resultCount:
              description: The number of restaurants for this search.
              type: integer
            tagDetails:
              description: A collection of tags that are relevant for this search result.
              type: array
              items:
                type: object
                required:
                  - displayName
                  - key
                  - priority
                properties:
                  displayName:
                    description: The display name of the tag.
                    type: string
                  key:
                    description: The key of the tag.
                    type: string
                  priority:
                    description: The priority of the tag.
                    type: integer
            deliveryArea:
              description: >-
                The outward code (for postcode based searches) or district (for
                latitude-longitude based searches) of the search location.
              type: string
        restaurants:
          description: A ranked collection of restaurants.
          type: array
          items:
            $ref: >-
              #/components/schemas/DiscoveryRestaurantsV3EnrichedRestaurantItemYaml
        deliveryFees:
          description: Information related to delivery fees.
          type: object
          required:
            - restaurants
          properties:
            restaurants:
              description: A dictionary of restaurant delivery fees.
              type: object
              additionalProperties:
                x-additionalPropertiesName: restaurant id
                type: object
                properties:
                  restaurantId:
                    description: The identifier of the restaurant.
                    type: string
                  minimumOrderValue:
                    description: >-
                      The minimum order value (excluding fees) required, in the
                      smallest unit of local currency (e.g. pence).
                    type: number
                  bands:
                    description: Collection of delivery fee bands.
                    type: array
                    items:
                      type: object
                      properties:
                        minimumAmount:
                          description: >-
                            The minimum order value (excluding fees) when this
                            fee band applies. The fee with the highest
                            `minimumAmount` that is less than or equal to order
                            value applies. This is in the smallest unit of local
                            currency (e.g. pence).
                          type: number
                        fee:
                          description: >-
                            The delivery fee, in the smallest unit of local
                            currency (e.g. pence).
                          type: number
        promotedPlacement:
          description: Information related to promoted placement restaurants.
          type: object
          required:
            - filteredSearchPromotedLimit
            - rankedIds
            - restaurants
          properties:
            filteredSearchPromotedLimit:
              description: >-
                How many restaurants were promoted by applying a filtered
                search.
              type: number
              minimum: 0
            rankedIds:
              description: Restaurants that can be promoted, in preferred order.
              type: array
              items:
                type: string
            restaurants:
              description: A dictionary of promoted restaurants.
              type: object
              additionalProperties:
                x-additionalPropertiesName: restaurant id
                type: object
                required:
                  - restaurantId
                  - defaultPromoted
                properties:
                  restaurantId:
                    description: Id of the restaurant.
                    type: string
                  defaultPromoted:
                    description: Should be promoted by default.
                    type: boolean
        filters:
          description: A dictionary of pre-calculated filters for this search.
          type: object
          additionalProperties:
            x-additionalPropertiesName: filter id
            type: object
            required:
              - displayName
              - restaurantIds
              - imageName
            properties:
              displayName:
                description: The display name for the filter.
                type: string
              imageName:
                description: >-
                  The image name of the filter, which should be used when
                  retrieving imagery for the filter.
                type: string
              group:
                description: >-
                  Used to determine how to combine multiple selected filters. OR
                  filters from the same group, AND from different groups. e.g.
                  cuisine OR cuisine AND offer.
                type: string
              restaurantIds:
                description: The list of restaurant ids that match this filter.
                type: array
                items:
                  type: string
        defaultLayout:
          description: The recommended filters and verticals to display for this search.
          type: object
          required:
            - refineFilters
            - verticals
          properties:
            refineFilters:
              description: An ordered list of filter ids to be included as refine filters.
              type: array
              items:
                type: string
            verticals:
              description: An ordered list of verticals for this search.
              type: array
              items:
                type: object
                required:
                  - type
                  - id
                  - title
                  - contents
                  - applicableFilters
                properties:
                  title:
                    description: The title of the vertical.
                    type: string
                  type:
                    description: The type of layout item.
                    type: string
                    enum:
                      - vertical
                  id:
                    description: The id of the vertical.
                    type: string
                  contents:
                    description: >-
                      The initial, unfiltered, best match layout for this
                      vertical. Unknown items should be ignored.
                    type: array
                    items:
                      anyOf:
                        - $ref: >-
                            #/components/schemas/DiscoveryRestaurantsV3LayoutListItemYaml
                        - $ref: >-
                            #/components/schemas/DiscoveryRestaurantsV3LayoutEnrichedListItemYaml
                  applicableFilters:
                    description: >-
                      An ordered list of filter ids that are specific to the
                      vertical.
                    type: array
                    items:
                      type: string
        enrichedLists:
          description: >-
            A dictionary to store extra details for enriched lists used in any
            layouts.
          type: object
          additionalProperties:
            x-additionalPropertiesName: enriched list id
            type: object
            properties:
              subtitle:
                description: The subtitle for the enriched list.
                type: string
              trackingId:
                description: >-
                  The tracking id for the enriched list, used to identify what
                  generated the enriched list.
                type: string
      example:
        metaData:
          canonicalName: bs37-bristol
          district: BS37
          postalCode: BS376NG
          area: Bristol
          location:
            type: Point
            coordinates:
              - -2.358783
              - 51.530041
          cuisineDetails:
            - name: Pizza
              uniqueName: pizza
              count: 5
            - name: Collect stamps
              uniqueName: stampcard-restaurants
              count: 3
            - name: Chicken
              uniqueName: chicken
              count: 2
            - name: Burgers
              uniqueName: burgers
              count: 2
            - name: Low Delivery Fee
              uniqueName: low-delivery-fee
              count: 1
          resultCount: 9
          tagDetails:
            - displayName: Tried and Tasted
              key: tried-and-tasted
              priority: 300
          deliveryArea: BS37
        restaurants:
          - tags:
              - tried-and-tasted
            id: '112549'
            name: Tasty Burger
            uniqueName: tasty-burger-bristol
            address:
              city: Bristol
              firstLine: 137 Station Road
              postalCode: BS15 4XX
              location:
                type: Point
                coordinates:
                  - -2.492622
                  - 51.47462
            rating:
              count: 340
              starRating: 4
            isNew: false
            driveDistanceMeters: 11104
            openingTimeLocal: '2023-05-25T15:10:00'
            deliveryOpeningTimeLocal: '2023-05-24T16:10:00'
            deliveryEtaMinutes:
              rangeLower: 30
              rangeUpper: 45
            isCollection: true
            isDelivery: true
            isOpenNowForCollection: true
            isOpenNowForDelivery: true
            isOpenNowForPreorder: false
            isTemporarilyOffline: false
            defaultDisplayRank: 1
            isTemporaryBoost: false
            isPremier: false
            logoUrl: >-
              http://d30v2pzvrfyzpo.cloudfront.net/uk/images/restaurants/112549.gif
            isTestRestaurant: false
            deals:
              - description: Save with an exclusive meal deal
                offerType: Notification
            cuisines:
              - name: Burgers
                uniqueName: burgers
              - name: Chicken
                uniqueName: chicken
              - name: Collect stamps
                uniqueName: stampcard-restaurants
            availability:
              delivery:
                isOpen: false
                canPreOrder: true
                nextAvailability:
                  from: '2023-03-21T11:32:00'
                isTemporarilyOffline: false
              collection:
                isOpen: false
                canPreOrder: true
                nextAvailability:
                  from: '2023-03-21T12:00:00'
                isTemporarilyOffline: false
          - tags:
              - collection
              - free_delivery
              - with_discounts
              - fsa
              - low-delivery-fee
            id: '170205'
            name: Best Grill
            uniqueName: best-grill-bristol
            address:
              city: Bristol
              firstLine: |-
                33 Cranleigh Court Road
                Yate
              postalCode: BS37 5DQ
              location:
                type: Point
                coordinates:
                  - -2.424934
                  - 51.541969
            rating:
              count: 61
              starRating: 4.1
            isNew: false
            driveDistanceMeters: 4828
            openingTimeLocal: '2023-05-24T17:20:00'
            deliveryOpeningTimeLocal: '2023-05-24T17:45:00'
            deliveryEtaMinutes:
              rangeLower: 35
              rangeUpper: 50
            isCollection: true
            isDelivery: true
            isOpenNowForCollection: false
            isOpenNowForDelivery: false
            isOpenNowForPreorder: true
            isTemporarilyOffline: false
            defaultDisplayRank: 4
            isTemporaryBoost: false
            isPremier: false
            isTestRestaurant: false
            deals: []
            cuisines:
              - name: Pizza
                uniqueName: pizza
              - name: Burgers
                uniqueName: burgers
              - name: Low Delivery Fee
                uniqueName: low-delivery-fee
            availability:
              delivery:
                isOpen: false
                canPreOrder: true
                nextAvailability:
                  from: '2023-03-21T11:32:00'
                isTemporarilyOffline: false
              collection:
                isOpen: false
                canPreOrder: true
                nextAvailability:
                  from: '2023-03-21T12:00:00'
                isTemporarilyOffline: false
        deliveryFees:
          restaurants:
            '112549':
              restaurantId: '112549'
              minimumOrderValue: 2000
              bands:
                - minimumAmount: 2000
                  fee: 200
            '170205':
              restaurantId: '170205'
              minimumOrderValue: 1500
              bands:
                - minimumAmount: 1500
                  fee: 200
        promotedPlacement:
          filteredSearchPromotedLimit: 2
          rankedIds: []
          restaurants: {}
        filters:
          pizza:
            displayName: Pizza
            group: cuisine
            imageName: pizza
            restaurantIds:
              - '170205'
          chicken:
            displayName: Chicken
            group: cuisine
            imageName: chicken
            restaurantIds:
              - '112549'
          burgers:
            displayName: Burgers
            group: cuisine
            imageName: burgers
            restaurantIds:
              - '112549'
              - '170205'
          stampcard-restaurants:
            displayName: Collect stamps
            group: cuisine
            imageName: collect-stamps
            restaurantIds:
              - '112549'
          low-delivery-fee:
            displayName: Low Delivery Fee
            group: cuisine
            imageName: low-delivery-fee
            restaurantIds:
              - '170205'
          halal:
            displayName: Halal
            group: halal
            imageName: halal
            restaurantIds: []
          collection:
            displayName: Collection
            imageName: collection
            restaurantIds:
              - '112549'
              - '170205'
          four_star:
            displayName: 4+ stars
            imageName: 4-stars
            restaurantIds: []
          free_delivery:
            displayName: Free Delivery
            imageName: free-delivery
            restaurantIds:
              - '170205'
          with_discounts:
            displayName: Special offers
            imageName: special-offers
            restaurantIds:
              - '112549'
              - '170205'
          open_now:
            displayName: Open Now
            imageName: open-now
            restaurantIds:
              - '112549'
          fsa:
            displayName: Hygiene Rating 3+ / Pass
            imageName: hygiene-rating
            restaurantIds:
              - '112549'
              - '170205'
          open-restaurants:
            displayName: Open now
            group: restaurant-vertical
            imageName: open-restaurants
            restaurantIds:
              - '112549'
          preorder-restaurants:
            displayName: Order for later
            imageName: pre-order-restaruants
            group: restaurant-vertical
            restaurantIds:
              - '170205'
        defaultLayout:
          refineFilters:
            - with_discounts
            - free_delivery
            - four_star
            - open_now
            - collection
            - halal
            - fsa
          verticals:
            - title: Restaurants
              type: vertical
              id: restaurant-vertical
              applicableFilters:
                - burgers
                - chicken
                - stampcard-restaurants
                - low-delivery-fee
              contents:
                - title: Open now
                  type: list
                  id: open-restaurantsX
                  contents:
                    - type: restaurant
                      id: 112549X
                - title: Order for later
                  type: list
                  id: preorder-restaurants
                  contents:
                    - type: restaurant
                      id: 170205X
                  focusedProperties:
                    - preorder
            - title: Groceries
              type: vertical
              id: groceries-vertical
              applicableFilters: []
              contents: []
            - title: Shops
              type: vertical
              id: shops-vertical
              applicableFilters: []
              contents: []
        enrichedLists: {}
    DiscoveryRestaurantsV3LayoutEnrichedListItemYaml:
      title: Enriched List
      type: object
      required:
        - type
        - id
        - contents
      properties:
        title:
          description: The title of the enriched list.
          type: string
        type:
          description: The type of layout item.
          type: string
          enum:
            - enrichedList
        id:
          description: The id of the enriched list.
          type: string
        contents:
          description: The contents of the enriched list. Unknown items should be ignored.
          type: array
          items:
            anyOf:
              - $ref: >-
                  #/components/schemas/DiscoveryRestaurantsV3LayoutRestaurantItemYaml
        focusedProperties:
          description: >-
            A collection of properties that are relevant for this enriched list,
            for example ETAs, delivery cost. Can be used to present different
            restaurant data if required.
          type: array
          items:
            type: string
    DiscoveryRestaurantsV3LayoutListItemYaml:
      title: List
      type: object
      required:
        - type
        - id
        - contents
      properties:
        title:
          description: The title of the list.
          type: string
        type:
          description: The type of layout item.
          type: string
          enum:
            - list
        id:
          description: The id of the list.
          type: string
        contents:
          description: The contents of the list. Unknown items should be ignored.
          type: array
          items:
            anyOf:
              - $ref: >-
                  #/components/schemas/DiscoveryRestaurantsV3LayoutRestaurantItemYaml
              - $ref: >-
                  #/components/schemas/DiscoveryRestaurantsV3LayoutEnrichedListItemYaml
        focusedProperties:
          description: >-
            A collection of properties that are relevant for this list, for
            example pre-order, closed, groceries. Can be used to present the
            list differently or present different restaurant data if required.
          type: array
          items:
            type: string
    DiscoveryRestaurantsV3LayoutRestaurantItemYaml:
      title: Restaurant
      type: object
      required:
        - type
        - id
      properties:
        type:
          description: The type of layout item.
          type: string
          enum:
            - restaurant
        id:
          description: The id of the restaurant.
          type: string
    DiscoveryRestaurantsV3LocationYaml:
      title: Location
      description: Location information in GeoJSON format.
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          description: The type of geometry.
          type: string
          enum:
            - Point
        coordinates:
          description: >-
            The coordinates of the location, the first element represents the
            longitude, the second the latitude.
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2
    DkSmileyRatingRestaurantSmileyRatingsInspectionYaml:
      properties:
        rate:
          description: >-
            Smiley Rating of this inspection (4 - lower, 1 - higher). It can be
            nullable if no inspection was done in the restaurant.
          type: integer
          minimum: 1
          maximum: 4
          nullable: true
        inspectionDate:
          description: >-
            Date of the inspection (dd-mm-yyyy). It can be nullable if no
            inspection was done in the restaurant.
          nullable: true
          type: string
    DkSmileyRatingRestaurantSmileyRatingsResponseYaml:
      properties:
        url:
          description: >-
            URL for complete info of this restaurant at
            https://www.findsmiley.dk
          nullable: false
          type: string
        restaurantSmileyId:
          description: Restaurant Smiley Id
          nullable: false
          type: string
        isElite:
          description: Flag that ensures a restaurant is rated as Elite
          nullable: false
          type: boolean
        inspections:
          description: Object with the last four inspections from most recent to older
          properties:
            third:
              $ref: >-
                #/components/schemas/DkSmileyRatingRestaurantSmileyRatingsInspectionYaml
            second:
              $ref: >-
                #/components/schemas/DkSmileyRatingRestaurantSmileyRatingsInspectionYaml
            first:
              $ref: >-
                #/components/schemas/DkSmileyRatingRestaurantSmileyRatingsInspectionYaml
            fourth:
              $ref: >-
                #/components/schemas/DkSmileyRatingRestaurantSmileyRatingsInspectionYaml
          type: object
          x-konfig-properties:
            third:
              description: Third most recent inspection
              nullable: false
              type: object
            second:
              description: Second most recent inspection
              nullable: false
              type: object
            first:
              description: First most recent inspection
              nullable: false
              type: object
            fourth:
              description: Fourth most recent inspection
              nullable: false
              type: object
      example:
        url: https://www.findsmiley.dk/111111
        restaurantSmileyId: '111111'
        isElite: false
        inspections:
          third:
            rate: 2
            inspectionDate: 02-01-2021
          second:
            rate: 1
            inspectionDate: 02-01-2021
          first:
            rate: 1
            inspectionDate: 02-01-2021
          fourth:
            rate: null
            inspectionDate: null
      type: object
    ExclusionsCreateExclusionResponseYaml:
      title: Exclusion
      description: The exclusion created or updated
      type: object
      properties:
        type:
          description: Type of exclusion
          type: string
        state:
          $ref: '#/components/schemas/ExclusionsSelfExclusionStateYaml'
        expiryDate:
          description: Date and time the exclusion expires (UTC).
          format: date-time
          type: string
      example:
        type: alcohol
        state: temporaryExclusion
        expiryDate: '2024-06-08T01:00:00.000Z'
    ExclusionsGetExclusionsResponseYaml:
      description: Provides the list of exclusions.
      type: object
      properties:
        exclusions:
          description: List of self exclusions
          type: array
          items:
            required:
              - type
              - state
            type: object
            properties:
              type:
                description: Type of exclusion.
                type: string
              state:
                $ref: '#/components/schemas/ExclusionsSelfExclusionStateYaml'
              expiryDate:
                description: Date and time that the exclusion expires (UTC).
                format: date-time
                type: string
      example:
        exclusions:
          - type: alcohol
            state: temporaryExclusion
            expiryDate: '2024-06-08T01:00:00.000Z'
          - type: tobacco
            state: permanentExclusion
            expiryDate: '2024-06-08T01:00:00.000Z'
    ExclusionsSelfExclusionRequestYaml:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/ExclusionsSelfExclusionStateYaml'
      example:
        state: permanentExclusion
    ExclusionsSelfExclusionStateYaml:
      description: >-
        SelfExclusion states. ExclusionPeriodExpired is only supported in the
        GET endpoint
      enum:
        - temporaryExclusion
        - permanentExclusion
        - inclusionRequested
        - exclusionPeriodExpired
      type: string
    ExperimentsExperimentContextYaml:
      type: object
      properties:
        ClientVersion:
          description: The version of the experiment client.
          type: string
        IsBetaClient:
          description: Client is a beta instance.
          type: boolean
        Client:
          description: Type of client making the request.
          enum:
            - Web
            - Android
            - iOS
            - Mobile
            - All
            - Test
          type: string
        UserBucket:
          description: >-
            Representation of how the user has been partitioned into
            experiments.
          format: uuid
          type: string
        Culture:
          description: Culture of the request.
          type: string
        UserAgent:
          description: Browser user agent.
          type: string
      example:
        ClientVersion: 2.0.0.1390
        IsBetaClient: false
        Client: Web
        UserBucket: 047850da-ccb3-491f-b5a5-43f186e4344b
        Culture: en-GB
        UserAgent: >-
          Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101
          Firefox/47.0
    ExperimentsExperimentErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        Message:
          description: The error message
          type: string
      type: object
    ExperimentsExperimentResultResponseYaml:
      properties:
        AssociatedTicket:
          description: Associated jira experiment ticket.
          type: string
        Domain:
          description: The domain of the experiment e.g. 'search', 'basket' or 'menu'
          type: string
        IsTrackingDisabled:
          description: >-
            (Optional) If true, we will not send `trackExperimentV2` events to
            GA (google analytics) for this experiment
          type: boolean
        Name:
          description: The experiment name.
          type: string
        UseBackendHttpHeaders:
          description: >-
            (Optional) If true, we will propagate `x-je-exp-{name}` http headers
            to any backend API calls for this experiment.
          type: boolean
        Variant:
          description: Experiment partition.
          type: string
        Version:
          description: Version number of the experiment.
          format: int32
          type: integer
      type: object
      example:
        AssociatedTicket: EX-1234
        Domain: Home
        Name: webexperiment
        UseBackendHttpHeaders: true
        Variant: variant1
        Version: 2
    ExperimentsExperimentResultsResponseYaml:
      type: object
      properties:
        Active:
          description: The active (enabled) experiments.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ExperimentsExperimentResultResponseYaml'
          readOnly: true
      example:
        webexperiment:
          Partition: variant1
          Name: webexperiment
          Version: 2
          AssociatedTicket: EX-1234
        iosexperiment:
          Partition: variant5
          Name: iosexperiment
          Version: 3
          AssociatedTicket: EX-8888
    ExtensibleObjectYaml:
      additionalProperties: true
      type: object
    FoodSafetyAdditiveYaml:
      description: List of Additives
      type: object
      example:
        code: '10.2'
      properties:
        code:
          description: Additive code of Takeaway Standard from TMS
          nullable: false
          type: string
    FoodSafetyAllergenYaml:
      description: List of  Allergens
      type: object
      example:
        code: A
      properties:
        code:
          description: Allergen code of Takeaway Standard from TMS
          nullable: false
          type: string
    FoodSafetyIngredientsYaml:
      description: List of ingredients
      type: object
      example:
        name: wasser
      properties:
        name:
          description: Name of ingredient
          nullable: false
          type: string
    FoodSafetyManufacturerYaml:
      description: Object for manufacturer data
      type: object
      properties:
        streetAddress:
          description: Street Address
          nullable: true
          type: string
        brand:
          description: Brand name
          nullable: true
          type: string
        city:
          description: The City
          nullable: true
          type: string
        origin:
          description: Country
          nullable: true
          type: string
        manufacturer:
          description: Manufacturer name
          nullable: true
          type: string
        postalCode:
          description: Postal Code
          nullable: true
          type: string
      example:
        streetAddress: Bergense Steenweg 1424
        brand: Coca-Cola Zero
        city: Anderlecht
        origin: Deutschland
        manufacturer: Coca-Cola Erfrischungsgetränke AG, Postfach 67 01 56, 10207 Berlin
        postalCode: '1070'
    FoodSafetyNutritionalYaml:
      type: object
      properties:
        fattyAcidTotal:
          description: Fatty Acid value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        calories:
          description: Calories value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        energy:
          description: Energy value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        caffeine:
          description: Caffeine milligram value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        fat:
          description: Fat value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        sugar:
          description: Sugar value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        carbohydrate:
          description: Carbohydrate value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        alcohol:
          description: Alcohol by volume value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        sodium:
          description: Sodium value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        protein:
          description: Protein value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
        salt:
          description: Salt value for product
          properties:
            unit:
              description: Unit of the item
              nullable: false
              type: string
            value:
              description: Value of the item
              nullable: true
              type: number
      example:
        fattyAcidTotal:
          unit: mg
          value: 100
        calories:
          unit: kcal
          value: 42
        energy:
          unit: kJ
          value: 175.5
        caffeine:
          unit: mg
          value: 10
        fat:
          unit: mg
          value: 16000
        sugar:
          unit: mg
          value: 9100
        carbohydrate:
          unit: mg
          value: 22000
        alcohol:
          unit: '%'
          value: 7.5
        sodium:
          unit: mg
          value: 10
        protein:
          unit: mg
          value: 4000.01
        salt:
          unit: mg
          value: 20
    FoodSafetyPagedFoodSafetyResponseYaml:
      allOf:
        - $ref: '#/components/schemas/PagingPagedAfterOnlyCursorResponseYaml'
        - properties:
            data:
              description: List of Products with food safety data.
              maxItems: 500
              type: array
              minItems: 0
              items:
                $ref: '#/components/schemas/FoodSafetyProductFoodSafetyYaml'
          type: object
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw==
        data:
          - additives:
              - code: '10.2'
            storage:
              stgInstruction: Example
            type: product
            nutritional:
              fattyAcidTotal:
                unit: mg
                value: 100
              calories:
                unit: kcal
                value: 42
              energy:
                unit: kJ
                value: 175.5
              caffeine:
                unit: mg
                value: 10
              fat:
                unit: mg
                value: 16000
              sugar:
                unit: mg
                value: 9100
              carbohydrate:
                unit: mg
                value: 22000
              alcohol:
                unit: '%'
                value: 7.5
              sodium:
                unit: mg
                value: 10
              protein:
                unit: mg
                value: 4000.01
              salt:
                unit: mg
                value: 20
            allergens:
              - code: A
            id: RRR3PRE
            manufacturer:
              streetAddress: Bergense Steenweg 1424
              brand: Coca-Cola Zero
              city: Anderlecht
              origin: Deutschland
              manufacturer: >-
                Coca-Cola Erfrischungsgetränke AG, Postfach 67 01 56, 10207
                Berlin
              postalCode: '1070'
            ingredients:
              - wasser
    FoodSafetyProductFoodSafetyYaml:
      properties:
        additives:
          description: List of additives
          maxItems: 26
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/FoodSafetyAdditiveYaml'
          nullable: false
        storage:
          $ref: '#/components/schemas/FoodSafetyStorageYaml'
        type:
          description: Product or Addon
          nullable: false
          type: string
        nutritional:
          $ref: '#/components/schemas/FoodSafetyNutritionalYaml'
        allergens:
          description: List of allergens
          maxItems: 29
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/FoodSafetyAllergenYaml'
          nullable: false
        id:
          description: Encrypted Product/Addon Id
          nullable: false
          type: string
        manufacturer:
          $ref: '#/components/schemas/FoodSafetyManufacturerYaml'
          nullable: false
        ingredients:
          description: List of ingredients
          maxItems: 80
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/FoodSafetyIngredientsYaml'
          nullable: false
      type: object
      x-konfig-properties:
        storage:
          description: Object for storage data
          nullable: false
          type: object
        nutritional:
          description: Object for nutritional data
          nullable: false
          type: object
    FoodSafetyStorageYaml:
      type: object
      properties:
        stgInstruction:
          description: Storage/Usage instructions
          nullable: true
          type: string
      example:
        stgInstruction: Example
    GiftcardsGiftCardsErrorResponseYaml:
      description: An error response for gift cards
      properties:
        codeText:
          description: The description of the error
          type: string
        code:
          description: The error code
          format: int32
          type: integer
      type: object
    GiftcardsSearchByPanResponseYaml:
      description: A set of search results
      properties:
        amount:
          description: The amount
          format: int32
          type: integer
        pan:
          description: The pan
          type: string
        redemptionHistory:
          items:
            properties:
              statusDetails:
                description: The status
                type: string
              redeemedOn:
                description: When the gift card was redeemed
                format: date-time
                type: string
              consumerId:
                description: The consumer Id
                type: string
              transactionId:
                description: The transaction Id
                type: string
              status:
                description: The status of the gift card
                enum:
                  - Redeemed
                  - Failed
                type: string
            type: object
          type: array
      type: object
    GroceryqueriesCancellationApproveCancellationQueryYaml:
      properties:
        notes:
          description: Some notes in regards of cancellation
          type: string
      type: object
      example:
        notes: Customer called us to cancel the order
    GroceryqueriesCancellationCreateCancellationQueryYaml:
      properties:
        reasonCode:
          description: The reason why cancellation was created
          type: string
          enum:
            - rest_cancelled_customer_requested
            - rest_cancelled_customer_absent
            - rest_cancelled_out_of_stock
            - rest_cancelled_drivers_unavailable
            - rest_cancelled_fake_order
            - rest_cancelled_too_busy
            - rest_cancelled_other
        comments:
          description: Comments on why the order was cancelled
          type: string
      type: object
      example:
        reasonCode: rest_cancelled_customer_requested
        comments: There was a problem with the customer
    GroceryqueriesCancellationCreateCancellationQueryResponseYaml:
      properties:
        orderId:
          description: Id of the order to be cancelled
          type: string
        reasonCode:
          description: Reason for cancellation
          type: string
          enum:
            - rest_cancelled_customer_requested
            - rest_cancelled_customer_absent
            - rest_cancelled_out_of_stock
            - rest_cancelled_drivers_unavailable
            - rest_cancelled_fake_order
            - rest_cancelled_too_busy
            - rest_cancelled_other
        comments:
          description: Additional comments regarding cancellation
          type: string
        state:
          description: State of the cancellation query
          type: string
          enum:
            - New
            - Offered
            - Declined
            - Approved
        createdAt:
          description: Date of cancellation query creation in ISO 8601 format.
          type: string
          format: date-time
        policyResult:
          description: Result of policies evaluation
          type: object
          properties:
            outcome:
              description: Outcome of policies evaluation
              type: object
              properties:
                fee:
                  description: Fee associated with cancellation query
                  type: object
                  properties:
                    amount:
                      description: Amount
                      type: number
                decision:
                  description: Final decision
                  type: string
                  enum:
                    - Offered
                    - Declined
            eligibility:
              description: Collection of evaluated eligibility policies
              type: array
              items:
                description: Policy details
                type: object
                properties:
                  code:
                    description: Name of the policy
                    type: string
                  passed:
                    description: Flag to indicate whether the policy was successful or not
                    type: boolean
                  overridable:
                    description: >-
                      Flag to indicate whether the policy can be overridden or
                      not
                    type: boolean
        resolution:
          description: Overall result of cancellation query
          type: object
          properties:
            by:
              description: Who initiated the query (restaurant, customer etc.)
              type: string
            userName:
              description: Name of query initiator
              type: string
            at:
              description: When was the query resolved in ISO 8601 format.
              type: string
              format: date-time
            notes:
              description: Additional notes
              type: string
      example:
        orderId: 123qwe
        reasonCode: rest_cancelled_other
        comments: example comments
        state: Offered
        createdAt: '2022-09-09T12:55:56.0149188Z'
        policyResult:
          outcome:
            fee:
              amount: 0
            decision: Offered
          eligibility:
            - code: BlockCashOrders
              passed: true
              overridable: false
        resolution:
          by: person
          userName: joe bloggs
          at: '2022-09-09T12:55:56.0149188Z'
          notes: Cancelled because didn't need
    GroupOrderCreateRequestYaml:
      description: The request object for creating a group.
      properties:
        MenuGroupId:
          description: The menu group identifier
          type: string
        RestaurantSeoName:
          description: >-
            A unique per tenant identifier for a restaurant used for external
            operations.
          type: string
        OrderDetails:
          $ref: '#/components/schemas/BasketCreateOrderDetailsYaml'
        ServiceType:
          description: The service type
          type: string
      type: object
      x-konfig-properties:
        OrderDetails:
          description: Information needed to allow an order to be placed on a basket.
    GroupOrderGenericErrorResponseYaml:
      description: Generic error response structure
      properties:
        ErrorCode:
          description: Detailed error code that happened
          type: string
        Description:
          description: The details of the error
          type: string
        SubErrors:
          description: The details of the inner errors
          items:
            type: string
          type: array
      type: object
    GroupOrderGroupOrderResponseYaml:
      description: The response object for all group order endpoints.
      properties:
        BasketId:
          description: The basket identifier
          type: string
        CreateDate:
          description: When the basket was created
          nullable: true
          type: string
        RestaurantSeoName:
          description: >-
            A unique name per tenant for a restaurant used for external
            operations.
          nullable: true
          type: string
        RestaurantId:
          description: A unique identifier per tenant for a restaurant.
          type: string
        MenuGroupId:
          description: The menu group identifier
          type: string
        ServiceType:
          description: The service type
          type: string
        IsOrderable:
          description: True if the basket is orderable
          type: boolean
        BasketSummary:
          $ref: '#/components/schemas/BasketBasketSummaryYaml'
        GroupSummary:
          $ref: '#/components/schemas/GroupOrderGroupSummaryYaml'
      type: object
    GroupOrderGroupSummaryYaml:
      description: Group information.
      properties:
        GroupSummaryId:
          description: Unique identifier of the group
          type: string
        GroupName:
          description: Name of the group based on the Initiator name
          type: string
        Url:
          description: URL to user-facing web application to join the group
          type: string
        Status:
          description: Status of the actual group
          type: string
          enum:
            - open
            - locked
            - deleted
        Participants:
          description: Participant needed to relate products to participants of the group.
          type: array
          items:
            type: object
            properties:
              ParticipantId:
                description: Unique identifier of the participant
                type: string
              Name:
                description: Name of the participant
                type: string
              Role:
                description: Role of the participant within the group
                type: string
                enum:
                  - initiator
                  - participant
              Status:
                description: Status of the participant within the group
                type: string
                enum:
                  - ordering
                  - ready
              Products:
                description: Product selected
                type: array
                items:
                  type: object
                  properties:
                    BasketProductId:
                      description: The basket product identifier
                      type: string
                    TotalPrice:
                      description: The total price
                      format: decimal
                      type: number
                    Quantity:
                      description: The quantity
                      type: number
                      format: integer
              Deals:
                description: Deals selected
                type: array
                items:
                  type: object
                  properties:
                    BasketProductId:
                      description: The basket product identifier
                      type: string
                    TotalPrice:
                      description: The total price
                      format: decimal
                      type: number
                    Quantity:
                      description: The quantity
                      type: number
                      format: integer
      type: object
    GroupOrderJoinResponseYaml:
      description: The response object for join endpoint.
      properties:
        GroupId:
          description: The group identifier
          type: string
        GroupName:
          description: Name of the group based on the Initiator name
          type: string
        RestaurantSeoName:
          description: >-
            A unique name per tenant for a restaurant used for external
            operations.
          type: string
        MenuUrl:
          description: Restaurant menu URL with group identifier.
          type: string
      type: object
    GroupOrderUpdateRequestYaml:
      description: The request object for updating a group basket.
      properties:
        Product:
          $ref: '#/components/schemas/BasketUpdateProductYaml'
        BasketId:
          description: The basket identifier
          type: string
        SelectedServiceType:
          description: The selected service type
          nullable: true
          properties:
            Date:
              description: ISO 8601 format of the datetime request
              type: string
              format: date-time
            Value:
              description: The value of the type selected
              type: string
          type: object
        OrderDetails:
          $ref: '#/components/schemas/BasketUpdateOrderDetailsYaml'
        Deal:
          $ref: '#/components/schemas/BasketUpdateDealYaml'
      type: object
      x-konfig-properties:
        Product:
          nullable: true
        OrderDetails:
          description: Information needed to allow an order to be placed on a basket.
          nullable: true
        Deal:
          nullable: true
    IdverificationapiRequestsCreateInitSessionRequestYaml:
      type: object
      properties:
        faceCompare:
          description: >-
            Whether the FaceCompare feature should be enabled, during the ID
            verification flow.
          type: boolean
          default: false
      example:
        faceCompare: false
    IdverificationapiResponsesCreateAccessTokenResponseYaml:
      type: object
      properties:
        tokenType:
          description: Type of the token returned - usually "Bearer".
          type: string
        expiresIn:
          description: Amount of seconds for which the token is valid.
          type: integer
          format: int32
        accessToken:
          description: The generated access token.
          type: string
        scope:
          description: >-
            The scope(s) for which the access token is valid. In case of
            multiple scopes, they are delimited by a space.
          type: string
      example:
        tokenType: Bearer
        expiresIn: 86500
        accessToken: >-
          eyJraWX8sd87GRaDdrPClw4m7E_LghZuxVtLb2uHedAav7CbfWdzjJtPTHCYaqFjc61b0ARlMhLMyKOmT.GRaDdrPClw4m7E_LghZuxVtLb2uHedAav7CbfWdzjJtPTHCYaqFjc61b0ARlMhLMyKOmTaSI6IkFULmlKazY5cjZHRGx3NU1xNDJfa0pWMXRMZFFyeWVIjoiSmV0QWdlIiwiY2xpZW50T3JnYW5pemF0aW9uSWQiOjExMjh9.mAfeXFBJWP13t1HZYrXxeNsziiuzuaE2s7p6vdP_nKoymmLFSBo96StDOt9KJpArIWhHcwEddQqG8HcmH_RMjvP9dIDxXuKxvnN-skZ_e-GRaDdrPClw4m7E_LghZuxVtLb2uHedAav7CbfWdzjJtPTHCYaqFjc61b0ARlMhLMyKOmT-YoLajP-pXwf2-PTLTkaB5I1i_noTEectnFfbsRP4NsaZRpLzWKsVya0y_GxBK2qptQCAjnJRznxWEQFxfFcmyfRmuP3dhMok6SfWPQTr7rAB_dH44rjgYpqZO0LkYvqflHh7cR_ypgjvhrEcLcO2ewPExzHdPkvj3rL5UA
        scope: ocs/scope:mobilesdk sdc mobilesdk
    IdverificationapiResponsesCreateInitSessionResponseYaml:
      type: object
      properties:
        sessionId:
          description: "The Au10tix SecureMe session/flow ID.\r\nCan be used to retrieve the ID Validation results later."
          type: string
        securemeLink:
          description: URL for the Au10tix SecureMe ID Validation flow.
          type: string
      example:
        sessionId: 02AFF225A0BE42E59F3670E76D4C9B05
        securemeLink: >-
          https://secure-me.au10tixservicesstaging.com?token=aMuKWgtZN7NRlhERPYRO&api=aHR0cHM6Ly93ZXUtYXBpLmF1MTB0aXhzZXJ2aWNlc3N0YWdpbmcuY29tL3NlY3VyZS1tZS92Mg%3D%3D&themeName=light&bcd=%231f1d2a&bcl=%23ffffff&pc=%23f56905
    IdverificationapiResponsesGetIdentityDocumentsResponseYaml:
      type: object
      properties:
        status:
          description: The Au10tix SecureMe session/flow status.
          enum:
            - failed
            - completed
          type: string
        failedStatus:
          description: >-
            A reason for the validation failure, if any. More statuses may
            appear in the future and clients must handle that gracefully. Any
            failedStatus (or no failedStatus) can be treated as a general error
            - specific values can be used to enable custom client-side
            behaviour.
          enum:
            - errorUnderAge
            - error
          type: string
      example:
        status: failed
        failedStatus: errorUnderAge
    IdverificationapiResponsesGetSessionResultsResponseYaml:
      type: object
      properties:
        sessionId:
          description: The Au10tix SecureMe session/flow ID.
          type: string
        status:
          description: The Au10tix SecureMe session/flow status.
          enum:
            - pending
            - failed
            - completed
          type: string
        failedStatus:
          description: >-
            A reason for the validation failure, if any. More statuses may
            appear in the future and clients must handle that gracefully.
            Basically anything but null/missing status could be treated as a
            general error, but different values are there to make custom
            handling from client side possible.
          enum:
            - errorUnderAge
            - error
          type: string
      example:
        sessionId: 02AFF225A0BE42E59F3670E76D4C9B05
        status: completed
        failedStatus: errorUnderAge
    JetConnectMenusUtfConnectorAcceptedResponseYaml:
      description: Is returned when a request has been accepted and is processing
      type: object
      required:
        - success
      properties:
        success:
          description: >-
            Indicates request successfully accepted or not for processing.
            Always true in an accepted response.
          type: boolean
          example: true
      x-examples:
        success:
          value:
            success: true
    JetConnectMenusUtfConnectorBaselineMenuYaml:
      description: Describes a menu
      type: object
      required:
        - name
        - reference
        - type
        - categories
      properties:
        default_language:
          description: The default language of the menu in BCP 47 standard.
          type: string
          example: en-US
        name:
          description: The menu name
          type: string
          example: Dinner Menu
        reference:
          description: >-
            An ID that helps the menu source (typically the POS) to identify the
            menu
          type: string
          example: '1'
        type:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorMenuTypeYaml'
        translations:
          description: >-
            The translations of the menu name, using IETF BCP 47 as the language
            identifier.
          type: object
          additionalProperties:
            type: object
            properties:
              name:
                description: The translated description
                type: string
            required:
              - name
          example:
            es-ES:
              name: Populate translated name here
        availability:
          description: >-
            The menu availability determining the hours that the menu is
            available for ordering for each day of the week. Availability may be
            omitted in cases where the restaurant hours are set manually by your
            delivery partner.


            If a restaurant isn't opening for a particular day, the relative key
            can be omitted from the array.
          type: object
          required:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
          properties:
            monday:
              $ref: '#/components/schemas/JetConnectMenusUtfConnectorWorkingHoursYaml'
            tuesday:
              $ref: '#/components/schemas/JetConnectMenusUtfConnectorWorkingHoursYaml'
            wednesday:
              $ref: '#/components/schemas/JetConnectMenusUtfConnectorWorkingHoursYaml'
            thursday:
              $ref: '#/components/schemas/JetConnectMenusUtfConnectorWorkingHoursYaml'
            friday:
              $ref: '#/components/schemas/JetConnectMenusUtfConnectorWorkingHoursYaml'
            saturday:
              $ref: '#/components/schemas/JetConnectMenusUtfConnectorWorkingHoursYaml'
            sunday:
              $ref: '#/components/schemas/JetConnectMenusUtfConnectorWorkingHoursYaml'
        categories:
          description: A collection of menu categories
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorCategoryYaml'
    JetConnectMenusUtfConnectorCaffeineYaml:
      description: Caffeine declaration for groceries
      type: object
      required:
        - unit_name
        - value
      properties:
        unit_name:
          description: The weight unit provided
          type: string
          example: grams
        value:
          description: The quantity of caffeine in the unit provided
          type: number
      x-examples:
        example-1:
          unit_name: grams
          value: 0.02
    JetConnectMenusUtfConnectorCategoryYaml:
      description: A menu category
      type: object
      required:
        - name
        - description
        - items
      properties:
        description:
          description: The category description
          type: string
          example: The best cuts of meat on this side of the Mississippi
        name:
          description: The category name
          type: string
          example: Mains
        translations:
          description: >-
            The translations of the category name & description, using IETF BCP
            47 as the language identifier.
          type: object
          additionalProperties:
            type: object
            properties:
              description:
                description: The translated description
                type: string
              name:
                description: The translated name
                type: string
            required:
              - name
              - description
          example:
            es-ES:
              description: Populate translated description here
              name: Populate translated name here
        items:
          description: A collection of items that belong to this category
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorItemYaml'
        gallery:
          description: The image gallery for the category
          type: array
          maxLength: 1
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorImageYaml'
    JetConnectMenusUtfConnectorDepositYaml:
      description: Deposit for items i.e for recycling purposes
      type: object
      required:
        - type
        - amount
        - included_in_total_price
      properties:
        type:
          description: 'Potential values: `single_use`, `multiple_use`, `not_specified`'
          type: string
          pattern: ^(single_use|multiple_use|not_specified)$
        amount:
          description: >-
            The cost of the deposit, corrected to match the format of the item
            price
          type: integer
        included_in_total_price:
          description: Whether the cost of the deposit is included in total price or not
          type: boolean
      x-examples:
        example-1:
          type: single_use
          amount: 200
          included_in_total_price: true
    JetConnectMenusUtfConnectorErrorResponseYaml:
      description: Standard error response for this service.
      type: object
      required:
        - success
        - error_message
      properties:
        success:
          description: >-
            Indicates request successfully accepted or not for processing.
            Always false in an error response.
          type: boolean
          example: false
        error_message:
          description: A brief description of the error.
          type: string
          example: Request not valid
      x-examples:
        bad request:
          value:
            success: false
            error_message: Baseline menus not valid.
        forbidden:
          value:
            success: false
            error_message: Restaurant not registered
        server error:
          value:
            success: false
            error_message: 'Menu(s) valid, error on ingestion: upstream communication failed'
    JetConnectMenusUtfConnectorImageYaml:
      description: An image for the item gallery
      type: object
      required:
        - url
      properties:
        url:
          description: The item image URL
          type: string
          example: http://aws-s3.com/bucket/wagyu.jpg
    JetConnectMenusUtfConnectorIncludeYaml:
      description: An item served with the main item
      type: object
      required:
        - name
        - description
        - plu
        - modifiers
      properties:
        description:
          description: The include (item) description
          type: string
          example: Complementary bread available for you
        name:
          description: The include (item) name
          type: string
          example: Bread
        plu:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorPluYaml'
        out_of_stock:
          description: >-
            Boolean value indicating whether this include item is out of stock
            or not
          type: boolean
          example: false
        modifiers:
          description: >-
            A collection of modifiers that could be applied on the include
            (item)
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorModifierYaml'
    JetConnectMenusUtfConnectorIngredientYaml:
      description: An item ingredient
      type: object
      required:
        - name
      properties:
        name:
          description: The ingredient name
          type: string
          example: 100% Wagyu Beef
        translations:
          description: >-
            The translations of the ingredient name, using IETF BCP 47 as the
            language identifier.
          type: object
          additionalProperties:
            type: object
            properties:
              name:
                description: The translated name
                type: string
            required:
              - name
          example:
            es-ES:
              name: Populate translated name here
    JetConnectMenusUtfConnectorItemYaml:
      description: A menu item
      type: object
      required:
        - name
        - plu
      properties:
        description:
          description: The item description
          type: string
          example: Magnificent, purebred, meticulously raised Japanese beef
        name:
          description: The item name
          type: string
          example: Wagyu Beef
        translations:
          description: >-
            The translations of the item name & description, using IETF BCP 47
            as the language identifier.
          type: object
          additionalProperties:
            type: object
            properties:
              description:
                description: The translated description
                type: string
              name:
                description: The translated name
                type: string
            required:
              - name
          example:
            es-ES:
              description: Populate translated description here
              name: Populate translated name here
        plu:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorPluYaml'
        out_of_stock:
          description: Boolean value indicating whether this item is out of stock or not
          type: boolean
          example: false
        price:
          description: >-
            The price in cents of the base item. When swap modifiers are
            present, this price could be 0.
          type: integer
          format: int32
          example: 2490
        reference:
          description: An optional (additional) unique reference for the item
          type: string
          example: id-123
        modifiers:
          description: A collection of modifiers that could be applied on the item
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorModifierYaml'
        portions:
          description: A collection of item portions
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorPortionYaml'
        includes:
          description: A collection of items naturally included with a top-level item
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorIncludeYaml'
        ingredients:
          description: A collection of the item's basic ingredients
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorIngredientYaml'
        tax_category:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorTaxCategoryYaml'
        swap:
          description: >-
            A swap modifier. This is used in case multiple options have
            different PLUs, but they all map to the same item.
          type: object
          required:
            - name
            - options
          properties:
            name:
              description: The swap modifier name
              type: string
              example: Marbling level
            options:
              description: The options the customer should select from
              type: array
              items:
                $ref: '#/components/schemas/JetConnectMenusUtfConnectorSwapOptionYaml'
        gallery:
          description: The image gallery for the item
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorImageYaml'
        is_alcoholic:
          description: >-
            Flag that mark an item as alcoholic or not. It might display custom
            icons on the partner website if supported
          type: boolean
          example: false
        spiciness:
          description: >-
            A value that describes how spicy is this item. It might display
            custom icons on the partner website if supported
          type: string
          pattern: ^(UNKNOWN|MILD|MEDIUM|HOT|VERY_HOT)$
          example: HOT
        dietary_restrictions:
          description: >-
            Array of dietary restrictions for an item. It might display custom
            icons on the partner website if supported
          type: array
          items:
            type: string
            pattern: ^(NONE|VEGETARIAN|VEGAN)$
            example: VEGETARIAN
        allergens:
          description: Array of allergens that this item contains.
          type: array
          items:
            type: string
            enum:
              - CEREAL_WHEAT
              - CEREAL_RYE
              - CEREAL_BARLEY
              - CEREAL_OATS
              - CEREAL_SPELT
              - CEREAL_KAMUT
              - CRUSTACEANS
              - EGGS
              - FISH
              - PEANUTS
              - SOYBEANS
              - MILK
              - NUTS_ALMONDS
              - NUTS_HAZELNUTS
              - NUTS_WALNUTS
              - NUTS_CASHEWS
              - NUTS_PECAN
              - NUTS_BRAZIL
              - NUTS_PISTACHIO
              - NUTS_MACADAMIA
              - CELERY
              - MUSTARD
              - SESAME_SEEDS
              - SULPHUR_DIOXIDE_SULPHITES
              - LUPIN
              - MOLLUSCS
            example: CEREAL_OATS
        additives:
          description: Array of additives that this item contains
          type: array
          items:
            type: string
            example: PROTEIN_MILK_PROTEIN
        nutritional_info:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorNutritionalInfoYaml'
        nutritional_info_range:
          $ref: >-
            #/components/schemas/JetConnectMenusUtfConnectorNutritionalInfoRangeYaml
        servings:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorServingsYaml'
        servings_range:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorRangeYaml'
        tax_percentage:
          description: The percentage of tax applied to the item
          example: 8
          type: number
        caffeine:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorCaffeineYaml'
        alcohol_percentage:
          description: The percentage of alcohol contained in the product
          type: number
        volume:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorVolumeYaml'
        weight:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorWeightYaml'
        deposit:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorDepositYaml'
        manufacturer:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorManufacturerYaml'
        storage:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorStorageYaml'
        gtin:
          description: >-
            Global Trade Item Number: ID for trade items. Used to look up
            product information in which may belong to a retailer, manufacturer,
            collector, researcher, or other entity
          type: string
    JetConnectMenusUtfConnectorItemAvailabilityYaml:
      description: The payload of an item availability request.
      type: object
      required:
        - event
        - itemReferences
        - restaurant
      properties:
        event:
          description: >-
            Status of the items. Set to AVAILABLE to mark the menu item as
            available for ordering, UNAVAILABLE to mark the item as unavailable
            for ordering.
          type: string
          pattern: ^(AVAILABLE|UNAVAILABLE)$
          example: UNAVAILABLE
        itemReferences:
          description: The POS Item IDs to be made available or unavailable
          type: array
          items:
            type: string
            example: DRINKS-023
        restaurant:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorRestaurantIdYaml'
        happenedAt:
          description: >-
            Date time in ISO8601 format of when the event occurred. Will default
            to current time if omitted
          type: string
          format: date-time
          example: '2018-10-11T14:56:18.234284+01:00'
        nextAvailableAt:
          description: >-
            Date time in ISO8601 format of when the item becomes available
            again. This field is applicable only for UNAVAILABLE event type.
            Must be in the future.
          type: string
          format: date-time
          example: '2018-10-11T14:56:18.234284+01:00'
    JetConnectMenusUtfConnectorManufacturerYaml:
      description: Legal requirement to display on front end
      type: object
      required:
        - name
        - brand
        - country_of_origin
      properties:
        name:
          description: The name of the manufacturer
          type: string
          example: Mondeleez
        brand:
          description: The brand owning the item
          example: Cadbury
          type: string
        country_of_origin:
          description: Where the item originated from
          example: England
          type: string
        additional_details:
          description: >-
            A free text field for more information and can contain Manufacturer
            address, customer service number etc
          type: string
      x-examples:
        example-1:
          name: Mondeleez
          brand: Cadbury
          country_of_origin: England
          additional_details: >-
            free text, can be manufacturer address, customer service phone
            number.
    JetConnectMenusUtfConnectorMenuTypeYaml:
      description: The menu type
      type: string
      pattern: ^(COLLECTION|DELIVERY)$
      example: DELIVERY
    JetConnectMenusUtfConnectorMenusYaml:
      description: The payload of a request to ingest menus.
      type: object
      required:
        - restaurants
        - menus
        - callback_url
      properties:
        restaurants:
          description: >-
            A collection of one or more restaurant IDs associated with the
            menu(s). These are identifiers of restaurants from the menu source -
            typically the POS.
          type: array
          items:
            type: string
            example: '5678'
        menus:
          description: A collection of one or more menus to ingest
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorBaselineMenuYaml'
        callback_url:
          description: >-
            URL to which notification of success/failure of the asynchronous
            menu ingestion process will be sent. Currently only available for
            restaurants using menu-sync to JustEat
          type: string
          format: uri
          example: https://example.com/menu_webhook
    JetConnectMenusUtfConnectorModifierYaml:
      description: A modifier group that could be applied on an item
      type: object
      required:
        - name
        - description
        - pick
      properties:
        description:
          description: The modifier description
          type: string
          example: How much do you want your steak cooked?
        name:
          description: The modifier name
          type: string
          example: Cook to
        translations:
          description: >-
            The translations of the modifier name & description, using IETF BCP
            47 as the language identifier.
          type: object
          additionalProperties:
            type: object
            properties:
              description:
                description: The translated description
                type: string
              name:
                description: The translated name
                type: string
            required:
              - name
              - description
          example:
            es-ES:
              description: Populate translated description here
              name: Populate translated name here
        pick:
          description: The number of options the customer is allowed
          allOf:
            - type: object
              required:
                - pick_same_option
              properties:
                pick_same_option:
                  description: True if the same option can be added more than once
                  type: boolean
                  example: true
            - $ref: >-
                #/components/schemas/JetConnectMenusUtfConnectorModifierPickExactlyYaml
            - $ref: >-
                #/components/schemas/JetConnectMenusUtfConnectorModifierPickRangeYaml
        options:
          description: A collection of options the customer can select from
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorItemYaml'
    JetConnectMenusUtfConnectorModifierPickExactlyYaml:
      description: The customer must select a fixed number of options
      type: object
      properties:
        exactly:
          description: The number of options the customer is allowed
          type: integer
          format: int32
          example: 1
    JetConnectMenusUtfConnectorModifierPickRangeYaml:
      description: The customer can select a min-max number of options
      type: object
      properties:
        range:
          description: The range of options the customer is allowed
          type: object
          properties:
            from:
              description: Minimum number of options the customer can select
              type: integer
              format: int32
              example: 2
            to:
              description: Maximum number of options the customer can select
              type: integer
              format: int32
              example: 4
    JetConnectMenusUtfConnectorNutritionalInfoYaml:
      description: The energy content of the item expressed in either kcal or kJ or both.
      type: object
      properties:
        kcal:
          description: The value of the energy content of the item in kcal.
          type: integer
          format: int32
          example: 200
        kj:
          description: The value of the energy content of the item in kJ.
          type: integer
          format: int32
          example: 200
    JetConnectMenusUtfConnectorNutritionalInfoRangeYaml:
      description: The energy content expressed in either kcal or kJ in ranges
      type: object
      properties:
        kcal_range:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorRangeYaml'
        kj_range:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorRangeYaml'
    JetConnectMenusUtfConnectorPluYaml:
      description: >-
        The Price Look Up Unit (similar to SKU  - Stock Keeping Unit) identifies
        a unique product/item reference, typically specific to the menu source
        and used in the ordering process.


        In a swap option, it is used to replace the item identifier when this
        option is selected.
      type: string
      x-examples:
        example: '123'
    JetConnectMenusUtfConnectorPortionYaml:
      description: An item portion
      type: object
      required:
        - name
        - description
        - plu
        - price
        - modifiers
      properties:
        description:
          description: The portion description
          type: string
          example: Magnificent, purebred, meticulously raised Japanese beef
        name:
          description: The portion name
          type: string
          example: Wagyu Beef
        plu:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorPluYaml'
        out_of_stock:
          description: Boolean value indicating whether this portion is out of stock or not
          type: boolean
          example: false
        price:
          description: >-
            The price in cents of the base portion. When swap modifiers are
            present, this price could be 0.
          type: integer
          format: int32
          example: 2490
        reference:
          description: An optional (additional) unique reference for the portion
          type: string
          example: id-123
        modifiers:
          description: A collection of modifiers that could be applied on the portion
          type: array
          items:
            $ref: '#/components/schemas/JetConnectMenusUtfConnectorModifierYaml'
        nutritional_info:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorNutritionalInfoYaml'
        nutritional_info_range:
          $ref: >-
            #/components/schemas/JetConnectMenusUtfConnectorNutritionalInfoRangeYaml
        servings:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorServingsYaml'
        servings_range:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorRangeYaml'
        tax_percentage:
          description: The percentage of tax applied to the item
          example: 8
          type: number
        caffeine:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorCaffeineYaml'
        alcohol_percentage:
          description: The percentage of alcohol contained in the product
          type: number
        volume:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorVolumeYaml'
        weight:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorWeightYaml'
        deposit:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorDepositYaml'
        manufacturer:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorManufacturerYaml'
        storage:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorStorageYaml'
        gtin:
          description: >-
            Global Trade Item Number: ID for trade items. Used to look up
            product information in which may belong to a retailer, manufacturer,
            collector, researcher, or other entity
          type: string
    JetConnectMenusUtfConnectorRangeYaml:
      description: Range object
      type: object
      required:
        - min
        - max
      properties:
        min:
          description: The min value
          type: integer
          format: int32
          example: 1
        max:
          description: The max value
          type: integer
          format: int32
          example: 10
    JetConnectMenusUtfConnectorRestaurantIdYaml:
      description: >-
        A restaurant identifier used in your back office systems, such as your
        point of sale. The JET Connect Platform will be configured to link your
        system's restaurant ID's to your delivery partner's restaurant ID's.
      type: string
    JetConnectMenusUtfConnectorServingsYaml:
      description: The number of servings for the item or portion
      type: integer
      format: int32
      example: 4
    JetConnectMenusUtfConnectorStorageYaml:
      description: >-
        How the grocery item are kept in storage, and also the courier to know
        what bag to use and how quick should they deliver
      type: object
      required:
        - type
      properties:
        type:
          description: >-
            The storage type, can be `frozen` or `cool_dry` - used for couriers
            to know which bag to use and speed of delivery
          type: string
          example: frozen
        additional_details:
          description: A free text field, displayed on the front-end to the customer
          type: string
      x-examples:
        example-1:
          type: frozen
          additional_details: free text
    JetConnectMenusUtfConnectorSwapOptionYaml:
      description: >-
        A single option for the swap modifier.


        The given PLU (Price Look Up Unit) is used to replace the item
        identifier when this option is selected
      type: object
      required:
        - name
        - plu
        - price
        - reference
      properties:
        name:
          description: The option name
          type: string
          example: A5
        translations:
          description: >-
            The translations of the ingredient name, using IETF BCP 47 as the
            language identifier.
          type: object
          additionalProperties:
            type: object
            properties:
              name:
                description: The translated name
                type: string
            required:
              - name
          example:
            es-ES:
              name: Populate translated name here
        plu:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorPluYaml'
        out_of_stock:
          description: >-
            Boolean value indicating whether this swap option is out of stock or
            not
          type: boolean
          example: false
        price:
          description: The price in cents of the option
          type: integer
          format: int32
          example: 2990
        reference:
          description: An optional (additional) unique reference
          type: string
          example: id-222
        tax_category:
          $ref: '#/components/schemas/JetConnectMenusUtfConnectorTaxCategoryYaml'
    JetConnectMenusUtfConnectorTaxCategoryYaml:
      description: The tax category of the item or swap option
      type: string
      pattern: ^(NO_TAX|ALCOHOL|SUGARED_DRINK)$
      example: ALCOHOL
    JetConnectMenusUtfConnectorVolumeYaml:
      description: Volume amount for a grocery item
      type: object
      required:
        - unit_name
        - gross_value
      properties:
        unit_name:
          description: The unit of measurement for volume
          type: string
          example: litres
        gross_value:
          description: The total volume of the item including containers for couriers
          type: number
        net_value:
          description: The total volume of the item
          type: number
      x-examples:
        example-1:
          unit_name: litres
          gross_value: 1.3
          net_value: 1.2
    JetConnectMenusUtfConnectorWeightYaml:
      description: The weight of a grocery item
      type: object
      required:
        - unit_name
        - gross_value
        - net_value
      properties:
        unit_name:
          description: The unit of measurement for weight
          type: string
          example: grams
        gross_value:
          description: The total weight of the item including containers for couriers
          type: number
        net_value:
          description: The total weight of the item
          type: number
      x-examples:
        example-1:
          unit_name: grams
          gross_value: 1300
          net_value: 1200
    JetConnectMenusUtfConnectorWorkingHoursYaml:
      description: >-
        Working hours describing what times the menu is available on a
        particular day, in the `hh:mm - hh:mm` format (opening time - closing
        time).
      type: array
      items:
        type: string
        pattern: ^[0-2][0-9]:[0-5][0-9] - [0-2][0-9]:[0-5][0-9]$
        example: 10:00 - 23:30
    JetConnectOrderInjectionStatusUpdaterAsyncOrderFailedYaml:
      description: The request body to send to mark an order as failed.
      type: object
      required:
        - happenedAt
        - errorCode
        - errorMessage
      properties:
        happenedAt:
          description: ISO timestamp that the order was marked as failed.
          type: string
          format: date-time
        errorCode:
          description: >-
            Indicates the failure reason. Possible values:


            - `INACTIVE`: the POS is offline and cannot take orders.

            - `INCORRECT_SETUP`: the configuration details sent with the order
            are wrong (e.g. store ID)

            - `IN_USE`: the POS is currently in use and cannot take requests.

            - `TIMEOUT`: the request to the POS timed out.

            - `NOT_SUPPORTED`: integrated ordering is not supported at this
            restaurant.

            - `MENU_ERROR`: the order had incorrect items (not in stock, PLU not
            in POS).

            - `MALFORMED_REQUEST`: the order request was malformed (e.g.
            malformed JSON).

            - `AUTH_FAILED`: the order authorization was incorrect.

            - `STORE_CLOSED`: the store is closed and cannot take orders.

            - `TENDER_ERROR`: the `tender_type` sent to the POS is wrong.
          type: string
          pattern: >-
            ^(UNKNOWN|INACTIVE|INCORRECT_SETUP|IN_USE|TIMEOUT|NOT_SUPPORTED|MENU_ERROR|MALFORMED_REQUEST|AUTH_FAILED|STORE_CLOSED|TENDER_ERROR)$
        errorMessage:
          description: Describes the failure reason
          type: string
    JetConnectOrderInjectionStatusUpdaterAsyncOrderSuccessYaml:
      description: The request body to send to mark an order as successful.
      type: object
      required:
        - happenedAt
      properties:
        happenedAt:
          description: ISO timestamp that the order was marked as successful.
          type: string
          format: date-time
    JetConnectOrderInjectionStatusUpdaterChannelYaml:
      description: Details about the delivery partner who sent the order.
      type: object
      required:
        - name
        - id
      properties:
        name:
          description: Delivery partner name.
          type: string
        id:
          description: Delivery partner unique ID.
          type: number
    JetConnectOrderInjectionStatusUpdaterCollectAtYaml:
      description: >-
        UNIX timestamp of when the order will be collected by the customer or
        driver. Only present on delivery-by-delivery-partner and
        collection-by-customer orders.
      type: string
      pattern: ^[0-9]+$
    JetConnectOrderInjectionStatusUpdaterCollectionNotesYaml:
      description: >-
        Notes provided by the customer regarding their collection of the order.
        Only present on collection-by-customer orders.
      type: string
    JetConnectOrderInjectionStatusUpdaterCreatedAtYaml:
      description: UNIX timestamp indicating when the order was created.
      type: string
      pattern: ^[0-9]+$
    JetConnectOrderInjectionStatusUpdaterDeliverAtYaml:
      description: >-
        UNIX timestamp of when the order should be delivered to the customer.
        Only present on delivery-by-merchant orders.
      type: string
      pattern: ^[0-9]+$
    JetConnectOrderInjectionStatusUpdaterDeliveryYaml:
      description: >-
        Details about where the order should be delivered to. Only present on
        delivery-by-merchant and delivery-by-delivery-partner orders, and some
        properties may be masked depending on the delivery partner.
      type: object
      required:
        - first_name
        - last_name
        - phone_number
        - phone_masking_code
        - line_one
        - line_two
        - city
        - postcode
        - email
        - coordinates
      properties:
        first_name:
          description: The delivery recipient's first name.
          type: string
        last_name:
          description: The delivery recipient's last name.
          type: string
        phone_number:
          description: >-
            The delivery recipient's phone number. Alternatively, the number of
            a call centre which to provide the `phone_masking_code` to.
          type: string
        phone_masking_code:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPhoneMaskingCodeYaml
        street_number:
          description: The street number of the delivery address.
          type: string
        street:
          description: The street of the delivery address.
          type: string
        line_one:
          description: The first line of the delivery address.
          type: string
        line_two:
          description: The second line of the delivery address.
          type: string
        city:
          description: The city of the delivery address.
          type: string
        postcode:
          description: The postcode or zip code of the delivery address.
          type: string
        company_name:
          description: The name of the company.
          type: string
          maxLength: 128
        email:
          description: The delivery recipient's email address.
          type: string
        coordinates:
          description: GPS coordinates of the delivery address
          type: object
          required:
            - latitude
            - longitude
            - latitude_as_string
            - longitude_as_string
          properties:
            latitude:
              description: A float number indicating the longitude.
              type: number
              format: float
            longitude:
              description: A float number indicating the latitude.
              type: number
              format: float
            latitude_as_string:
              description: The longitude converted to string format.
              type: string
            longitude_as_string:
              description: The latitude converted to string format.
              type: string
    JetConnectOrderInjectionStatusUpdaterDeliveryNotesYaml:
      description: >-
        Notes provided by the customer regarding the delivery of the order. Only
        present on delivery-by-merchant orders.
      type: string
    JetConnectOrderInjectionStatusUpdaterExtrasYaml:
      description: Extra details for the order. Only supported by Just Eat.
      type: object
      properties:
        just_eat_order_api_id:
          description: Just Eat ID for this order.
          type: string
    JetConnectOrderInjectionStatusUpdaterFailureResponseYaml:
      description: Bad request
      type: object
      properties:
        message:
          description: Describes why the order status update was rejected.
          type: string
          example: order 60298a19-9ef7-4860-bf69-f10fc0a26b21 not found
      required:
        - message
    JetConnectOrderInjectionStatusUpdaterIdYaml:
      description: >-
        JET Connect Platform's order ID. Used for updating the status of
        asynchronous orders.
      type: string
    JetConnectOrderInjectionStatusUpdaterItemYaml:
      description: >-
        A menu item contained in the order.


        If an item-level promotion is applied by the delivery partner, the
        interested item(s) won't appear on the top level items array, but on the
        `promotion.items` one.
      type: object
      required:
        - name
        - description
        - plu
        - price
        - notes
      properties:
        description:
          description: Menu item description.
          type: string
        name:
          description: Menu item name.
          type: string
        plu:
          description: Menu item's Price Lookup Unit.
          type: string
        price:
          description: >-
            Menu item price indicated by an integer number in pounds and pence /
            dollars and cents, for example `1950` means `£19.50` or `$19.50`.
          type: number
        unitDepositAmount:
          description: >-
            The deposit paid for the item in the minor unit of the currency. For
            example `50` means `£0.50` or `$0.50`.
          type: number
        notes:
          description: >-
            Preparation notes that have been entered by the customer for this
            menu item (if any).
          type: string
        children:
          description: >-
            Array of objects representing modifier group options.


            When defining promotions of type `FREE_ITEM_MIN_BASKET`, this array
            should be empty.
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectOrderInjectionStatusUpdaterOptionYaml
    JetConnectOrderInjectionStatusUpdaterItemsYaml:
      description: >-
        Array of menu items contained in the order. Except where otherwise
        noted, all properties are the same as provided when the menu was last
        published for this restaurant.
      type: array
      items:
        $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterItemYaml'
    JetConnectOrderInjectionStatusUpdaterKitchenNotesYaml:
      description: >-
        Notes provided by the customer regarding the preparation of the order.
        This information may not be available for every delivery partner.
        Confirm with your integration team whether this field will be available.
      type: string
    JetConnectOrderInjectionStatusUpdaterLocationYaml:
      description: Additional details for the location.
      type: object
      required:
        - id
        - timezone
      properties:
        id:
          description: Delivery partner's identifier for the location.
          type: number
        timezone:
          description: >-
            ISO timezone for the location as configured on the JET Connect
            Platform.
          type: string
    JetConnectOrderInjectionStatusUpdaterMenuReferenceYaml:
      description: The menu that the order was placed for.
      type: string
    JetConnectOrderInjectionStatusUpdaterMoneyValueYaml:
      description: >-
        A monetary value including taxes. (Amounts are always positive,
        discounts are labelled as such and are subtracted from the total
        payment.)
      type: object
      required:
        - inc_tax
        - tax
      properties:
        inc_tax:
          description: The amount including tax.
          type: number
        tax:
          description: The tax that was applied.
          type: number
    JetConnectOrderInjectionStatusUpdaterOptionYaml:
      description: >-
        An option for an item, as defined by the modifier group options you
        provided in the menu request.
      type: object
      required:
        - name
        - description
        - plu
        - price
      properties:
        description:
          description: >-
            The description of the item to be fulfilled, as provided by you in
            the menu request.
          type: string
        name:
          description: >-
            The name of the item to be fulfilled, as provided by you in the menu
            request.
          type: string
        plu:
          description: >-
            The PLU (price lookup unit) of the item to be fulfilled, as provided
            by you in the menu request.
          type: string
        price:
          description: The price of the item, in cents, pence or other currency.
          type: number
        unitDepositAmount:
          description: >-
            The deposit paid for the item in the minor unit of the currency. For
            example `50` means `£0.50` or `$0.50`.
          type: number
    JetConnectOrderInjectionStatusUpdaterOrderAcceptedYaml:
      description: >-
        If you would like to handle the order asynchronously, return a 202
        status code. JET Connect will place the order in a pending state, which
        will fail after 3 minutes if you do not notify JET Connect through the
        Update Order Status endpoint. If this endpoint is not called within 3
        minutes, the order will be marked as failed to inject.
      type: object
      required:
        - OrderId
      properties:
        OrderId:
          description: The order identifier.
          type: string
          example: 1234-1234-1234
    JetConnectOrderInjectionStatusUpdaterOrderFailedYaml:
      description: >-
        Any non-2xx status codes will be taken as a failure and redirected to
        the tablet to be hand-keyed into your POS.
      type: object
      required:
        - errorMessage
      properties:
        errorMessage:
          description: A description of the error
          type: string
          example: STORE_1234 is currently out of stock for PLU ABC321
    JetConnectOrderInjectionStatusUpdaterOrderSuccessYaml:
      description: >-
        To indicate that the order was successfully processed, return a `200`
        status code with an Order Number. JET Connect will notify your delivery
        partner that the order was successfully processed.
      type: object
      required:
        - OrderId
      properties:
        OrderId:
          description: The order identifier.
          type: string
          example: 1234-1234-1234
    JetConnectOrderInjectionStatusUpdaterOrderUnauthorizedYaml:
      description: Unauthorized. Authorization failed or the HMAC validation did not match.
      type: object
      required:
        - errorMessage
      properties:
        errorMessage:
          description: A description of the error
          type: string
          example: >-
            HMAC mismatch, authorization failed. The response body did not
            match.
    JetConnectOrderInjectionStatusUpdaterPaymentYaml:
      description: >-
        Details about the payment, including taxes and discounts. Amounts are in
        cents or pence.
      type: object
      required:
        - items_in_cart
        - deposit
        - adjustments
        - final
      properties:
        items_in_cart:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterMoneyValueYaml
        deposit:
          description: >-
            The total deposit paid for the order in the minor unit of the
            currency . For example `50` means `£0.50` or `$0.50`.
          type: number
        adjustments:
          description: >-
            Adjustments to the order total, such as delivery fees, service fees,
            bag fees, discounts or deposits. These adjustments are configured by
            the delivery partner (they cannot be sent with menus).
          type: array
          items:
            type: object
            required:
              - name
              - price
          properties:
            name:
              description: Type of adjustment applied.
              type: string
              enum:
                - deliveryFee
                - serviceCharge
                - bagfee
                - driverTip
                - discount
                - itemDepositGroup
                - other
            price:
              $ref: >-
                #/components/schemas/JetConnectOrderInjectionStatusUpdaterMoneyValueYaml
        final:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterMoneyValueYaml
    JetConnectOrderInjectionStatusUpdaterPaymentMethodYaml:
      description: Method that the order was paid with.
      type: string
    JetConnectOrderInjectionStatusUpdaterPersonYaml:
      description: >-
        Details about the person (driver or collector). Some properties may be
        masked depending on your delivery partner.


        If it's the driver, it contains details about the driver who will be
        picking up the order. Only present on delivery-by-delivery-partner
        orders.


        If it's the collector, it contains details about the customer who will
        be picking up the order. Only present on collection-by-customer orders.
      type: object
      required:
        - first_name
        - last_name
        - phone_number
      properties:
        first_name:
          description: The person's first name.
          type: string
        last_name:
          description: The person's last name.
          type: string
        phone_number:
          description: The person's phone number.
          type: string
        phone_masking_code:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPhoneMaskingCodeYaml
    JetConnectOrderInjectionStatusUpdaterPhoneMaskingCodeYaml:
      description: >-
        The code used to unmask the phone number (only certain delivery
        partners).


        Some of the delivery partners, in order to comply with GDPR regulations,
        are not allowed to send the customer phone number directly in the order.
        In this case, a service provider call centre number is provided, along
        with a `phone_masking_code` value.


        If the driver / restaurant will need to call the customer, they will
        need to phone up the `phone_number` and provide the
        `phone_masking_code`. The call centre will put them in touch with the
        user, without exposing their PII directly.
      type: string
    JetConnectOrderInjectionStatusUpdaterPosLocationIdYaml:
      description: >-
        The POS or `3PA` identifier you have provided to JET Connect for this
        restaurant. You should use this to route the order to the correct
        restaurant.
      type: string
    JetConnectOrderInjectionStatusUpdaterPromotionsYaml:
      description: Array of promotion objects.
      type: array
      items:
        type: object
        required:
          - type
          - items
          - promotionId
          - discountValue
          - offerId
        properties:
          type:
            description: >-
              The type of promotion applied to the order. Supported values vary
              dependant on service provider:

              - `Percentage_Discount`: Available only in ES, IE, IT, UK.

              - `Free_Item`: Available only in ES, IE, IT, UK.

              - `Free_Item_Minimum_Basket`: Available only in CA.

              - `Item_Level_Discount`: Available in AU, CA, ES, IE, IT, NZ, UK.
            type: string
          items:
            description: >-
              An array of menu items for which this promotion applies. Except
              where otherwise noted, all properties are the same as provided
              when the menu was last published for this restaurant.
            type: array
            items:
              $ref: >-
                #/components/schemas/JetConnectOrderInjectionStatusUpdaterItemYaml
          promotionId:
            description: The identifier of the promotion
            type: string
          discountValue:
            description: How much the item is discounted
            type: number
            format: double
          offerId:
            description: The identifier of the offer
            type: string
    JetConnectOrderInjectionStatusUpdaterTenderTypeYaml:
      description: >-
        An identifier for the payment method. If your POS integration requires a
        this field, please contact your brand manager.
      type: string
    JetConnectOrderInjectionStatusUpdaterThirdPartyOrderReferenceYaml:
      description: >-
        Delivery partner's identifier for the order. This is the order number
        that is displayed to the customer on the delivery partner website, and
        will be referenced when the order is picked up.
      type: string
    JetConnectOrderInjectionStatusUpdaterTypeYaml:
      description: >-
        Indicates how the order will be fulfilled. Accepts the following values:

        - `delivery-by-delivery-partner`: the order will be delivered by the
        delivery partner (Just Eat, Skip, Menulog, Takeaway).

        - `delivery-by-merchant`: delivery will be arranged by the restaurant,
        and not the delivery partner.

        - `collection-by-customer`: The order will be collected by the customer.
        Known as "take out" or "pickup" in some markets.
      type: string
      pattern: >-
        ^(delivery-by-delivery-partner|delivery-by-merchant|collection-by-customer)$
    JetConnectOrderReportingConnectorAddressYaml:
      title: Address
      description: >-
        Represents a postal address, a collection of information to give the
        location of the restaurant.
      type: object
      properties:
        lines:
          type: array
          items:
            type: string
        city:
          description: The city/town portion of the address.
          type: string
          minLength: 1
        postalCode:
          description: Postal code of the address.
          type: string
          minLength: 1
        geolocation:
          $ref: >-
            #/components/schemas/JetConnectOrderReportingConnectorGeolocationYaml
      required:
        - lines
        - city
        - postalCode
        - geolocation
    JetConnectOrderReportingConnectorGeolocationYaml:
      title: Geolocation
      description: An object that represents a latitude/longitude pair.
      type: object
      properties:
        latitude:
          description: The latitude in degrees.
          type: number
          format: double
        longitude:
          description: The longitude in degrees.
          type: number
          format: double
      required:
        - latitude
        - longitude
    JetConnectOrderReportingConnectorLocationYaml:
      title: Location
      description: An object describing a restaurant.
      type: object
      x-examples:
        example:
          reference: '28058'
          timeZone: Europe/London
          id: '144581'
          name: McDonald's® - Lowestoft - Kirkly Rise
          address:
            lines:
              - Kirkly Rise
            city: Lowestift
            postalCode: NR33 0PP
            geolocation:
              latitude: 52.470500505289
              longitude: 1.74350275274189
          phoneNumber: '02039126648'
      properties:
        reference:
          description: An identifier of the restaurant as given to us by a third party.
          type: string
        timeZone:
          description: The time zone the location is located in.
          type: string
        id:
          description: A unique identifier of the location in our systems.
          type: string
        name:
          description: The name of the location.
          type: string
        address:
          $ref: '#/components/schemas/JetConnectOrderReportingConnectorAddressYaml'
        phoneNumber:
          description: The phone number of the location.
          type: string
      required:
        - reference
        - id
        - name
    JetConnectOrderReportingConnectorOrderYaml:
      title: Order
      description: Order represents an order that was placed.
      type: object
      properties:
        orderDetails:
          $ref: >-
            #/components/schemas/JetConnectOrderReportingConnectorOrderDetailsYaml
        pos:
          description: >-
            The type of payment terminal, also known as a point of sale (POS)
            terminal.
          type: string
        payload:
          description: >-
            The payload of the single order object is an unstructured string.
            The purpose of this property is not to manipulate it, but just to
            have the possibility to quickly view the content that was injected
            on the POS.
          type: string
        steps:
          $ref: >-
            #/components/schemas/JetConnectOrderReportingConnectorOrderFlowStepsYaml
        mostRecentActivity:
          description: The most recent activity recorded for this order.
          type: string
          format: date-time
      required:
        - orderDetails
        - pos
        - payload
    JetConnectOrderReportingConnectorOrderDetailsYaml:
      title: OrderDetails
      description: An object containing details about an order.
      type: object
      properties:
        orderID:
          description: The ID of the order.
          type: string
          minLength: 1
        thirdPartyOrderReference:
          description: >-
            The third party order reference of the order, also known as friendly
            order reference.
          type: string
          minLength: 1
        placedAt:
          description: The date and time the order was created.
          type: string
          format: date-time
        location:
          $ref: '#/components/schemas/JetConnectOrderReportingConnectorLocationYaml'
        status:
          $ref: >-
            #/components/schemas/JetConnectOrderReportingConnectorOrderStatusYaml
        error:
          $ref: '#/components/schemas/JetConnectOrderReportingConnectorOrderErrorYaml'
        sendToPosStatus:
          description: >-
            Whether the POS injection was successful for the order, failure
            indicates that backup flow was triggered.
          type: string
      required:
        - orderID
        - thirdPartyOrderReference
        - placedAt
        - location
        - status
        - sendToPosStatus
    JetConnectOrderReportingConnectorOrderErrorYaml:
      title: OrderError
      description: Error information, if the order failed.
      type: object
      properties:
        errorCode:
          description: The error code from the POS.
          type: string
        errorMessage:
          description: The full error message.
          type: string
        errorID:
          description: The ID of the error category.
          type: string
          minLength: 1
        category:
          description: The error category.
          type: string
          minLength: 1
        resolution:
          description: A possible resolution to the error.
          type: string
        errorName:
          description: The name of the matched error category.
          type: string
        level:
          description: The level, either brand or integration.
          type: string
        matchedRegex:
          description: The regular expression that was matched to the error message.
          type: string
      required:
        - errorCode
        - errorMessage
        - errorID
        - category
        - resolution
        - errorName
        - level
        - matchedRegex
    JetConnectOrderReportingConnectorOrderFlowStepYaml:
      title: OrderFlowStep
      description: A specific step in the order flow.
      type: object
      properties:
        description:
          description: A description of the step.
          type: string
        name:
          description: The name of the step.
          type: string
        service:
          description: The service that emitted the event.
          type: string
        time:
          description: The time when the event occurred.
          type: string
          format: date-time
      required:
        - name
        - description
        - service
        - time
    JetConnectOrderReportingConnectorOrderFlowStepsYaml:
      title: OrderFlowSteps
      type: array
      items:
        $ref: >-
          #/components/schemas/JetConnectOrderReportingConnectorOrderFlowStepYaml
    JetConnectOrderReportingConnectorOrderStatusYaml:
      title: OrderStatus
      description: >-
        The current status of an order. If an order is "success" the error
        property will be empty.
      type: string
      enum:
        - success
        - failure
    JetConnectOrderingUniversalConnectorAddressYaml:
      description: Information about an address
      type: object
      properties:
        lines:
          description: The address lines
          type: array
          items:
            type: string
        city:
          description: The city
          type: string
        postalCode:
          description: The postcode
          type: string
        geoLocation:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorGeolocationYaml
        county:
          description: The county
          type: string
        companyName:
          description: The name of the company
          type: string
      required:
        - lines
        - city
        - postalCode
        - county
    JetConnectOrderingUniversalConnectorAdjustmentItemYaml:
      description: Information about an adjustment
      type: object
      properties:
        value:
          description: The amount of the adjustment
          type: number
          format: double
        tax:
          description: The tax adjustment
          type: number
          format: double
      required:
        - value
        - tax
    JetConnectOrderingUniversalConnectorAdjustmentsYaml:
      description: Adjustments to the order
      type: object
      properties:
        delivery:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorAdjustmentItemYaml
        serviceCharge:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorAdjustmentItemYaml
        other:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorAdjustmentItemYaml
        driverTip:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorAdjustmentItemYaml
        bagFee:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorAdjustmentItemYaml
    JetConnectOrderingUniversalConnectorAmendOrderItemYaml:
      description: Item to be amended.
      type: object
      required:
        - reason
        - plu
        - missingQuantity
      properties:
        reason:
          description: The reason the item is being amended.
          type: string
          enum:
            - missing
        plu:
          description: >-
            The partner specific identifier or "price lookup code" for the
            missing item.
          type: string
          example: plu123
        missingQuantity:
          description: The amount of items this amendment affects.
          type: number
          example: 1
    JetConnectOrderingUniversalConnectorAmendOrderReqYaml:
      description: Items marked as out of stock.
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectOrderingUniversalConnectorAmendOrderItemYaml
    JetConnectOrderingUniversalConnectorAmendOrderRespYaml:
      description: Information about this amendment.
      type: object
      required:
        - orderId
        - state
      properties:
        orderId:
          description: The originating order ID as supplied by the ordering partner.
          type: string
          example: 00025doahk2txeo9ttd0ma
        state:
          description: State describes the current state of the amendment.
          type: string
          enum:
            - pending
            - accepted
            - failed
            - succeeded
    JetConnectOrderingUniversalConnectorCancelOrderReqYaml:
      description: Reason why the order is being cancelled.
      type: object
      required:
        - reason
      properties:
        reason:
          description: Reason describes the cause of the cancellation.
          type: string
          enum:
            - allItemsOutOfStock
    JetConnectOrderingUniversalConnectorCancelOrderRespYaml:
      description: Information about this cancellation.
      type: object
      required:
        - orderId
        - message
      properties:
        orderId:
          description: The originating order ID as supplied by the ordering partner.
          type: string
          example: 00025doahk2txeo9ttd0ma
        message:
          description: >-
            An optional message with information about the successful
            cancellation.
          type: string
          example: Successfully cancelled order
    JetConnectOrderingUniversalConnectorCancellationReasonYaml:
      description: The reason why an order was cancelled in the form of a code.
      type: object
      properties:
        code:
          description: A code signifying the cancellation reason.
          type: string
          enum:
            - deletedRejectedByRestaurant
            - deletedNoAnswerFromRestaurant
            - restCancelledOutOfStock
            - custCancelledMadeMistake
            - custCancelledOther
            - unknown
      required:
        - code
    JetConnectOrderingUniversalConnectorCancelledOrderYaml:
      description: Metadata about the order that was cancelled.
      type: object
      properties:
        orderID:
          description: The identifier of the order that was cancelled.
          type: string
        reason:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorCancellationReasonYaml
        happenedAt:
          description: >-
            When the order was cancelled, in Coordinated Universal Time (UTC)
            and RFC 3339 (ISO 8601) format.
          type: string
          format: date-time
      required:
        - orderID
        - reason
        - happenedAt
    JetConnectOrderingUniversalConnectorCustomerYaml:
      description: Information about the customer
      type: object
      properties:
        id:
          description: The customer identifier
          type: string
        name:
          description: The name of the customer
          type: string
        email:
          description: The email of the customer
          type: string
      required:
        - id
        - name
        - email
    JetConnectOrderingUniversalConnectorCustomerNotesYaml:
      description: Any additional notes from the customer
      type: object
      properties:
        kitchenNotes:
          description: Notes from the customer for the kitchen
          type: string
        driverNotes:
          description: Notes from the customer for the driver
          type: string
      required:
        - kitchenNotes
        - driverNotes
    JetConnectOrderingUniversalConnectorDriverYaml:
      description: Information about the driver
      type: object
      properties:
        firstName:
          description: The first name of the driver
          type: string
        lastName:
          description: The last name of the driver
          type: string
        phoneNumber:
          description: The phone number of the driver
          type: string
      required:
        - firstName
        - lastName
        - phoneNumber
    JetConnectOrderingUniversalConnectorDriverStatusYaml:
      description: Information about the new driver status.
      type: object
      properties:
        code:
          description: A code signifying the new driver status.
          type: string
          enum:
            - driverArrivingAtRestaurant
            - driverAtRestaurant
            - onItsWay
      required:
        - code
    JetConnectOrderingUniversalConnectorDriverStatusUpdateYaml:
      description: Metadata about the order and information about the new driver status.
      type: object
      properties:
        orderID:
          description: The identifier of the order.
          type: string
        driverStatus:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorDriverStatusYaml
        happenedAt:
          description: >-
            Timestamp of the event in Coordinated Universal Time (UTC) and RFC
            3339 (ISO 8601) format.
          type: string
          format: date-time
      required:
        - orderID
        - driverStatus
        - happenedAt
    JetConnectOrderingUniversalConnectorErrorYaml:
      description: Please return errors to calling your webhook in this format.
      type: object
      properties:
        message:
          description: The reason why the request was unsuccessful.
          type: string
      required:
        - message
    JetConnectOrderingUniversalConnectorFailedAmendmentBodyYaml:
      description: >-
        The request body we will provide to your endpoint with information about
        why the amendment failed to process.
      type: object
      properties:
        reason:
          description: Error provided by the downstream system for the failed amendment.
          type: string
          example: Location incorrectly configured
        orderId:
          description: Partner order ID, as provided upon initial injection
          type: string
          example: 00025doahk2txeo9ttd0ma
      required:
        - reason
        - orderId
    JetConnectOrderingUniversalConnectorFailedCancellationBodyYaml:
      description: >-
        The response body we will provide with information about why the
        cancellation failed to process.
      type: object
      properties:
        reason:
          description: The reason why the cancellation request failed.
          type: string
          enum:
            - errCodeUnknown
          example: errCodeUnknown
        message:
          description: An optional message with information about the error that occurred.
          type: string
          example: Brand slug is invalid
        orderId:
          description: Partner order ID, as provided upon initial injection
          type: string
          example: 00025doahk2txeo9ttd0ma
      required:
        - reason
        - message
        - orderId
    JetConnectOrderingUniversalConnectorFailedOrderYaml:
      description: Information about an order that failed validation.
      type: object
      properties:
        validationError:
          description: A string giving us more information on why the validation failed.
          type: string
        unknownReference:
          description: >-
            An item reference missing from the menu causing validation failure
            (if any)
          type: string
        menuId:
          description: >-
            The ID of the published menu that the order was validated against
            (if any)
          type: string
        order:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorOrderCreatedYaml
      required:
        - validationError
      x-examples:
        Sample Order That Failed Validation:
          menuId: 2d4006f6-6b85-496e-9d41-523e75a91b0f
          order:
            acceptedAt: '2022-10-20T15:30:00+00:00'
            currency: GBP
            customer:
              email: max.mustermann@justeattakeaway.com
              id: '58259904'
              name: Max Mustermann
            customerNotes:
              driverNotes: ''
              kitchenNotes: no cheese please
            driver:
              firstName: Joe
              lastName: Smith
              phoneNumber: ''
            friendlyOrderReference: '1806363209'
            fulfilment:
              address:
                city: London
                county: ''
                geoLocation:
                  latitude: 51.545254
                  longitude: -0.007868
                lines:
                  - Example Road 123
                postalCode: E21 4LW
              customerDueAsap: true
              customerDueDate: '2022-10-20T15:30:00+00:00'
              method: Delivery
              phoneMaskingCode: '448595428'
              phoneNumber: 02045 555 301
              prepareFor: ''
              preparationTime: ''
              type: DELIVERY_BY_OPERATOR
            isTest: false
            items:
              - items: null
                name: Peri Peri Chicken Wrap
                notes: ''
                quantity: 1
                reference: 6440352f-cb04-4d48-b3ed-d945f010c627
                synonym: ''
                totalPrice: 6.95
                unitPrice: 6.95
              - items:
                  - description: ''
                    items:
                      - description: ''
                        items: null
                        name: 8 Pieces Peri Peri Chicken
                        quantity: 1
                        reference: 2cc4e00f-5939-40bd-9c95-468c9e96a574
                        unitPrice: 0
                    name: Peri Peri
                    quantity: 1
                    reference: ab98c424-2af1-44fe-aa57-8e5184019a96
                    unitPrice: 0
                name: 8 Pieces Peri Peri Chicken
                notes: ''
                quantity: 1
                reference: 38c45fe9-43b0-4570-b4e7-1c937ab591f9
                synonym: ''
                totalPrice: 12.95
                unitPrice: 12.95
            orderId: qxsjixwvuemnvb4ootr9rg
            payment:
              fees:
                - type: delivery
                  value: 1
                - type: service charge
                  value: 0.5
              lines:
                - paid: true
                  type: Card
                  value: 14.93
            placedDate: '2022-10-20T14:45:57.5730441+00:00'
            priceBreakdown:
              discount: 5.97
              feeItems: null
              fees:
                delivery: 1
                other: 0
                serviceCharge: 0.5
              items: 19.9
              taxes: 0
              tips: 0
            promotions: null
            restaurant:
              id: '55303'
            totalPrice: 15.43
          unknownReference: 6440352f-cb04-4d48-b3ed-d945f010c627
          validationError: >-
            top level item: {name: "Peri Peri Chicken Wrap", reference:
            "6440352f-cb04-4d48-b3ed-d945f010c627"} not present in restaurant's
            menu
    JetConnectOrderingUniversalConnectorFeeYaml:
      description: A fee accrued by the order
      type: object
      properties:
        type:
          description: The type of fee
          type: string
        value:
          description: The amount of the fee
          type: number
          format: double
    JetConnectOrderingUniversalConnectorFeeItemYaml:
      description: Breakdown of a fee item
      type: object
      properties:
        type:
          description: The type of fee
          type: string
        value:
          description: The fee amount
          type: number
          format: double
      required:
        - type
        - value
    JetConnectOrderingUniversalConnectorFeesYaml:
      description: The fees payable for the order
      type: object
      properties:
        delivery:
          description: The delivery charge
          type: number
          format: double
        serviceCharge:
          description: The service charge
          type: number
          format: double
        other:
          description: Any other charges
          type: number
          format: double
      required:
        - delivery
        - serviceCharge
        - other
    JetConnectOrderingUniversalConnectorFulfilmentYaml:
      description: Details about the fulfilment of the order
      type: object
      properties:
        type:
          description: The type of fulfilment
          type: string
        method:
          description: The fulfilment method
          type: string
        phoneNumber:
          description: Customer phone number (will be masked number if enabled)
          type: string
        customerDueDate:
          description: The time due at the customer
          type: string
        customerDueAsap:
          description: The customer wants the order ASAP
          type: boolean
        prepareFor:
          description: When the order will be prepared
          type: string
        preparationTime:
          description: The preparation time
          type: string
        address:
          $ref: '#/components/schemas/JetConnectOrderingUniversalConnectorAddressYaml'
        phoneMaskingCode:
          description: >-
            Code to use when calling customer phone masking number about this
            order
          type: string
      required:
        - method
        - phoneNumber
        - customerDueDate
        - customerDueAsap
        - prepareFor
        - preparationTime
        - address
        - type
        - phoneMaskingCode
    JetConnectOrderingUniversalConnectorGeolocationYaml:
      description: GPS coordinates
      type: object
      properties:
        latitude:
          description: The latitude part of the GPS tuple
          type: number
          format: double
        longitude:
          description: The longitude part of the GPS tuple
          type: number
          format: double
      required:
        - latitude
        - longitude
    JetConnectOrderingUniversalConnectorItemYaml:
      description: A menu item contained in the order
      type: object
      properties:
        totalPrice:
          description: The total price of the order item
          type: number
          format: double
        reference:
          description: The POS Item ID
          type: string
        name:
          description: Menu item name
          type: string
        synonym:
          description: A synonym for the order item
          type: string
        quantity:
          description: The quantity of the item
          type: number
        unitPrice:
          description: The unit price of the item
          type: number
          format: double
        items:
          description: Array of menu items contained in the order
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectOrderingUniversalConnectorModifierYaml
        notes:
          description: >-
            Preparation notes that have been entered by the customer for this
            menu item (if any)
          type: string
      required:
        - totalPrice
        - reference
        - name
        - synonym
        - quantity
        - unitPrice
        - items
        - notes
    JetConnectOrderingUniversalConnectorModifierYaml:
      description: A modifier to the item
      type: object
      properties:
        description:
          description: Menu item description
          type: string
        reference:
          description: The POS Item ID
          type: string
        name:
          description: Menu item name
          type: string
        quantity:
          description: The quantity of the item
          type: number
        unitPrice:
          description: The unit price of the item
          type: number
          format: double
        items:
          description: Further modifiers
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectOrderingUniversalConnectorModifierYaml
      required:
        - reference
        - name
        - description
        - quantity
        - unitPrice
        - items
    JetConnectOrderingUniversalConnectorOfflineServiceTypeYaml:
      description: Information about service which is offline
      type: object
      properties:
        isOffline:
          description: Fields to show service status online/offline
          type: boolean
        allowRestaurantOverride:
          description: Field to allow override data
          type: boolean
        categories:
          description: Array to show which categories are affected
          type: array
          items:
            type: string
        reasons:
          description: Array to show reasons of status
          type: array
          items:
            type: string
    JetConnectOrderingUniversalConnectorOrderCreatedYaml:
      description: >-
        The possibly incomplete payload of a `*flyt.OrderCreated`, so that the
        order can still be keyed in manually.

        Note that this is only an approximation of the actual payload.
      type: object
      properties:
        orderId:
          description: JET Connect Platform's order ID.
          type: string
        friendlyOrderReference:
          description: >-
            Delivery partner's identifier for the order. This is the order
            number that is displayed to the customer on the delivery partner
            website, and will be referenced when the order is picked up.
          type: string
        currency:
          description: The currency used to pay for the order
          type: string
        totalPrice:
          description: The total price of the order
          type: number
          format: double
        fulfilment:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorFulfilmentYaml
        payment:
          $ref: '#/components/schemas/JetConnectOrderingUniversalConnectorPaymentYaml'
        customer:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorCustomerYaml
        items:
          type: array
          items:
            $ref: '#/components/schemas/JetConnectOrderingUniversalConnectorItemYaml'
        priceBreakdown:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorPriceBreakdownYaml
        customerNotes:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorCustomerNotesYaml
        placedDate:
          description: When the order was placed
          type: string
        isTest:
          description: Whether or not this is a test order
          type: boolean
        driver:
          $ref: '#/components/schemas/JetConnectOrderingUniversalConnectorDriverYaml'
        acceptedAt:
          description: When the order was accepted
          type: string
        testData:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorTestDataYaml
        restaurant:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorRestaurantYaml
        promotions:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectOrderingUniversalConnectorPromotionsYaml
      required:
        - orderId
        - friendlyOrderReference
        - currency
        - totalPrice
        - items
        - placedDate
        - isTest
        - driver
        - acceptedAt
        - promotions
    JetConnectOrderingUniversalConnectorPaymentYaml:
      description: A breakdown of the payment
      type: object
      properties:
        lines:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectOrderingUniversalConnectorPaymentLineYaml
        fees:
          type: array
          items:
            $ref: '#/components/schemas/JetConnectOrderingUniversalConnectorFeeYaml'
      required:
        - lines
        - fees
    JetConnectOrderingUniversalConnectorPaymentLineYaml:
      description: A line in the list of payments
      type: object
      properties:
        type:
          description: The type of payment
          type: string
        value:
          description: The amount to be paid
          type: number
          format: double
        paid:
          description: Whether or not payment has been made
          type: boolean
      required:
        - type
        - value
        - paid
    JetConnectOrderingUniversalConnectorPriceBreakdownYaml:
      description: A breakdown of the price of the order
      type: object
      properties:
        discount:
          description: Any applied discount
          type: number
          format: double
        fees:
          $ref: '#/components/schemas/JetConnectOrderingUniversalConnectorFeesYaml'
        tips:
          description: Any tips
          type: number
          format: double
        taxes:
          description: Any applied taxes
          type: number
          format: double
        items:
          description: Payment for items
          type: number
          format: double
        feeItems:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectOrderingUniversalConnectorFeeItemYaml
        adjustments:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorAdjustmentsYaml
      required:
        - discount
        - tips
        - taxes
        - items
        - feeItems
    JetConnectOrderingUniversalConnectorPromotionsYaml:
      description: Information about the promotions applied
      type: object
      properties:
        type:
          description: The type of promotion
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/JetConnectOrderingUniversalConnectorItemYaml'
        promotionId:
          description: The identifier of the promotion
          type: string
        discountValue:
          description: How much the item is discounted
          type: number
          format: double
        offerId:
          description: The identifier of the offer
          type: string
      required:
        - type
        - items
        - promotionId
        - discountValue
        - offerId
    JetConnectOrderingUniversalConnectorRestaurantYaml:
      description: Information about the restaurant
      type: object
      properties:
        id:
          description: The identifier of the restaurant
          type: string
      required:
        - id
    JetConnectOrderingUniversalConnectorRestaurantTempOfflineStatusChangedYaml:
      description: >-
        Notification about which service type of restaurant is going temporary
        offline and online again.
      type: object
      properties:
        restaurantId:
          description: The identifier of the restaurant that was set offline/online.
          type: string
        lastChangedTimeStampUtc:
          description: When the service type of restaurant was set offline/online.
          type: string
          format: date-time
        collection:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorOfflineServiceTypeYaml
        delivery:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorOfflineServiceTypeYaml
        dineIn:
          $ref: >-
            #/components/schemas/JetConnectOrderingUniversalConnectorOfflineServiceTypeYaml
      required:
        - restaurantId
        - lastChangedTimeStampUtc
        - collection
        - delivery
        - dineIn
    JetConnectOrderingUniversalConnectorTestDataYaml:
      description: An object test orders have with information about the test
      type: object
      properties:
        description:
          description: Test description, for example `capability test ${pr} ${repo}`
          type: string
        type:
          description: The type of test
          type: string
      required:
        - type
        - description
    JetConnectOrderingUniversalConnectorUnauthorizedResponseYaml:
      description: The response body we will provide when authorization failed.
      type: object
      properties:
        message:
          description: An optional message with information about the error that occurred.
          type: string
          example: No API key found in the request
      required:
        - message
    JetConnectRestaurantAvailabilityApiAcceptedResponseYaml:
      description: Is returned when a request has been accepted and is processing
      type: object
      required:
        - success
      properties:
        success:
          description: >-
            Indicates request successfully accepted or not for processing.
            Always true in an accepted response.
          type: boolean
          example: true
      x-examples:
        success:
          value:
            success: true
    JetConnectRestaurantAvailabilityApiErrorResponseYaml:
      description: Standard error response for this type of service.
      type: object
      required:
        - success
        - error_message
      properties:
        success:
          description: >-
            Indicates request successfully accepted or not for processing.
            Always false in an error response.
          type: boolean
          example: false
        error_message:
          description: A brief description of the error.
          type: string
          example: Request not valid
      x-examples:
        forbidden:
          value:
            success: false
            error_message: Restaurant not registered
    JetConnectRestaurantAvailabilityApiOpeningTimesYaml:
      description: >-
        Describes the opening times of a restaurant for every day of the week.


        NOTE: At least one day needs to be specified. If a day is omitted, the
        restaurant is considered closed for that day of the week.
      type: object
      properties:
        monday:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiOpeningTimesDayYaml
        tuesday:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiOpeningTimesDayYaml
        wednesday:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiOpeningTimesDayYaml
        thursday:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiOpeningTimesDayYaml
        friday:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiOpeningTimesDayYaml
        saturday:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiOpeningTimesDayYaml
        sunday:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiOpeningTimesDayYaml
    JetConnectRestaurantAvailabilityApiOpeningTimesDayYaml:
      description: Describes the start and end time of opening hours.
      type: object
      required:
        - openingTime
        - closingTime
      properties:
        openingTime:
          description: Opening time for the specified day, in the `hh:mm` format
          type: string
          pattern: ^\d{2}:\d{2}$
          example: '10:00'
        closingTime:
          description: Closing time for the specified day, in the `hh:mm` format
          type: string
          pattern: ^\d{2}:\d{2}$
          example: '18:00'
    JetConnectRestaurantAvailabilityApiRestaurantOfflineYaml:
      description: >-
        Instructs when the restaurant should be automatically put back online.
        If a value is not provided (or it is omitted entirely), the restaurant
        will remain offline indefinitely.
      type: object
      properties:
        onlineAt:
          description: >-
            Local ISO8601 formatted timestamp (without timezone) representing
            the local time of the restaurant indicating when the restaurant
            should be brought back online. If omitted, offline will be
            indefinite.
          type: string
          example: '2021-10-13T12:03:00'
    JetConnectRestaurantAvailabilityApiServiceTimeYaml:
      description: Describes the opening times for the stated service type.
      type: object
      required:
        - serviceType
        - openingTimes
      properties:
        serviceType:
          description: Either Delivery or Collection
          type: string
          pattern: ^(Delivery|Collection)$
          example: Delivery
        openingTimes:
          $ref: >-
            #/components/schemas/JetConnectRestaurantAvailabilityApiOpeningTimesYaml
    JetConnectRestaurantAvailabilityApiServiceTimesYaml:
      description: Defines the times a restaurant provides a particular service.
      type: object
      required:
        - timezone
        - serviceTimes
      properties:
        timezone:
          description: The restaurant timezone
          type: string
          example: Europe/London
        serviceTimes:
          type: array
          items:
            $ref: >-
              #/components/schemas/JetConnectRestaurantAvailabilityApiServiceTimeYaml
    Livemetrics400LiveMetricsErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Invalid Request
          type: string
        error:
          description: Error Title
          example: Invalid Request
          type: string
      type: object
    Livemetrics401LiveMetricsErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Unauthorized Request
          type: string
        error:
          description: Error Title
          example: Unauthorized Request
          type: string
      type: object
    Livemetrics404LiveMetricsErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Live Metrics not found for delivery zone
          type: string
        error:
          description: Error Title
          example: Live Metrics not found for delivery zone
          type: string
      type: object
    Livemetrics500LiveMetricsErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Internal Server Error
          type: string
        error:
          description: Error Title
          example: Internal Server Error
          type: string
      type: object
    LivemetricsLiveMetricsYaml:
      description: The live metrics object for a given delivery zone.
      properties:
        marketplaceRank:
          description: Current marketplace rank value retrieved for a given delivery zone.
          format: integer
          example: -2
          type: number
        throttlingStatus:
          description: Zone Throttling On/Off status
          type: boolean
        zoneThrottling:
          description: Current zone throttling value retrieved for a given delivery zone.
          format: integer
          example: 15
          type: number
        currentAajl:
          description: Average assignable job load retrieved for a given delivery zone.
          format: double
          example: 0.7
          type: number
        marketplaceRankStatus:
          description: Marketplace On/Off status
          type: boolean
        aajlTimestamp:
          description: >-
            Timestamp for the average assignable job load retrieved for a given
            delivery zone.
          format: integer
          example: 1585260360000
          type: number
      type: object
    LocalDateTimeYaml:
      description: >-
        A local date time object, conforming to `ISO-8601`, but with only a
        partial time representation and no time offset.
      pattern: >-
        ^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\.[0-9]+)?$
      type: string
    LogisticsLocationYaml:
      description: GeoLocation object containing latitude and longitude values.
      required:
        - Latitude
        - Longitude
      type: object
      example:
        Speed: 8.68
        Latitude: 51.51641
        Heading: 357.10382
        Accuracy: 12.814
        Longitude: -0.103198
      properties:
        Speed:
          description: This should represent the travel speed of the driver.
          format: double
          type: number
        Latitude:
          description: This should represent the latitude of the driver's location.
          format: double
          type: number
        Heading:
          description: >-
            This should represent the degree of heading direction, for example,
            0 is north, 90 is east.
          format: double
          type: number
        Accuracy:
          description: This should represent the accuracy of driver's location.
          format: double
          type: number
        Longitude:
          description: This should represent the longitude of the driver's location.
          format: double
          type: number
    LogstashhttpLogYaml:
      description: Object containing information to log
      type: object
      example:
        je_feature: my-feature
        je_environment: production
        je_tenant: all
        Message: This is a log message
      additionalProperties: true
    LowestproductpriceLowestProductPriceYaml:
      title: LowestProductPrice
      description: Lowest Product Price information.
      type: object
      required:
        - productId
        - sinceDate
      properties:
        productId:
          description: The unique identifier of product
          nullable: false
          type: string
        sinceDate:
          description: The starting date of product price analysis
          nullable: false
          format: date
          type: string
        currency:
          description: The currency code in ISO-4217 format e.g. GBP.
          nullable: true
          type: string
        deliveryPrice:
          description: Delivery Price
          nullable: true
          $ref: '#/components/schemas/LowestproductpricePriceDateYaml'
        collectionPrice:
          description: Collection Price
          nullable: true
          $ref: '#/components/schemas/LowestproductpricePriceDateYaml'
    LowestproductpriceLowestProductPriceListResponseYaml:
      title: LowestProductPriceListEnvelope
      description: List of lowest product prices
      type: object
      properties:
        data:
          description: Array of lowest product prices
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/LowestproductpriceLowestProductPriceYaml'
      example:
        data:
          - productId: delivery-only-burger-id
            sinceDate: '2022-03-07'
            currency: GBP
            deliveryPrice:
              value: 1580
              date: '2022-03-20'
              savingPercentage: 0
              savingValue: 0
          - productId: collection-only-pizza-id
            sinceDate: '2022-03-07'
            currency: GBP
            collectionPrice:
              value: 1780
              date: '2022-03-22'
              savingPercentage: 10
              savingValue: 200
          - productId: collection-and-delivery-drink-id
            sinceDate: '2022-03-07'
            currency: GBP
            collectionPrice:
              value: 10
              date: '2022-03-27'
              savingPercentage: 20
              savingValue: 250
            deliveryPrice:
              value: 20
              date: '2022-03-21'
              savingPercentage: 20
              savingValue: 500
    LowestproductpricePriceDateYaml:
      title: Price Date
      description: The price value at certain date
      type: object
      required:
        - value
        - date
        - savingPercentage
        - savingValue
      properties:
        value:
          description: Price money value in the smallest unit of local currency
          format: integer
          type: number
          minimum: 0
        date:
          description: The date when price was set
          nullable: false
          format: date
          type: string
        savingPercentage:
          description: >-
            Customer savings in percentage terms. The value is calculated as the
            difference between the current discounted price and the lowest price
            in the past. The equivalent in money is provided in `savingValue`.
            For zero and negative savings 0 will be returned.
          format: float
          type: number
          minimum: 0
          maximum: 100
        savingValue:
          description: >-
            Money value of savings between the current discounted price and
            lowest price in the past, in the smallest unit of local currency,
            e.g., $3.25 will be returned as 325. The equivalent in percentage is
            provided in `savingPercentage`. For zero and negative savings 0 will
            be returned.
          format: integer
          type: number
          minimum: 0
      example:
        value: 1580
        date: '2021-03-04'
        savingPercentage: 10
        savingValue: 500
    MarketingAggregatedMenuEnvelopeYaml:
      title: AggregatedMenuEnvelope
      description: The result of an aggregated menu job result
      type: object
      properties:
        status:
          description: The status of the current aggregated menu job
          nullable: false
          $ref: '#/components/schemas/MarketingBatchStatusYaml'
        processed:
          description: Total number of processed restaurants
          nullable: false
          type: number
        lastUpdated:
          description: Timestamp of the last job update
          nullable: false
          format: date-time
          type: string
        aggregatedMenuId:
          description: The id of the aggregated menu result
          nullable: false
          type: string
        data:
          description: >-
            Array of aggregated menu items. Available if at least one restaurant
            has been processed
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/MarketingAggregatedMenuProductYaml'
      example:
        status: running
        lastUpdated: '2022-02-12T12:34:56.0000000+00:00'
        processed: 5
        aggregatedMenuId: >-
          28e385da591b4e7f959ee35690e75e7b_uk_FreeItemPromotion_20Oct2022_BFsGKRdV
        data:
          - name: Coca Cola
            count: 5
            variations:
              - name: 330ml
                count: 4
              - name: 500ml
                count: 2
              - name: ''
                count: 1
            categoryName: Drinks
          - name: Coca Cola
            count: 5
            variations:
              - name: 330ml
                count: 2
              - name: 500ml
                count: 2
            categoryName: Drink
          - name: CocaCola 330ml
            count: 2
            variations:
              - name: ''
                count: 2
            categoryName: Drinks
    MarketingAggregatedMenuProductYaml:
      title: AggregatedMenuProduct
      description: Aggregated menu product model.
      type: object
      properties:
        name:
          description: Name of the product
          nullable: false
          type: string
        count:
          description: Count of same product in different menus
          nullable: false
          type: number
        variations:
          description: Possible variations for the product
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/MarketingAggregatedMenuVariationYaml'
        categoryName:
          description: The category that contains this menu product
          nullable: false
      example:
        name: Coca Cola
        count: 5
        variations:
          - name: 330ml
            count: 4
          - name: 500ml
            count: 2
          - name: ''
            count: 1
        categoryName: Drinks
    MarketingAggregatedMenuVariationYaml:
      title: AggregatedMenuVariation
      description: Aggregated menu item model.
      type: object
      properties:
        name:
          description: Name of the product variation
          nullable: false
          type: string
        count:
          description: Count of same product variation in different menus
          nullable: false
          type: number
      example:
        name: 330ml
        count: 4
    MarketingBatchStatusYaml:
      description: Batch Status
      enum:
        - scheduled
        - running
        - succeeded
        - partial
        - failed
      type: string
    MarketingBogofYaml:
      title: Bogof
      description: >-
        Bogof offer template. An offer where the qualifying item is exactly the
        same as the free item. The customer will place two of these items in
        their basket and only pay for one.
      type: object
      properties:
        discount:
          description: Discount details. Default is 100%.
          $ref: '#/components/schemas/MarketingDiscountYaml'
        productSet:
          description: Items that would be discounted.
          nullable: true
          $ref: '#/components/schemas/MarketingProductSetYaml'
        maximumNumberOfRedemptions:
          description: The maximum number of discounted items that can be given.
          format: integer
          type: number
          minimum: 1
          deprecated: true
          nullable: true
        maximumRedemptions:
          description: >-
            The maximum number of discounted items that can be given, unlimited
            when null
          format: integer
          type: number
          minimum: 1
          default: 1
          nullable: true
      example:
        discount:
          discountPercentage: 50
        productSet:
          categories:
            - name: Pizza
        maximumRedemptions: 1
    MarketingBogofMixMatchYaml:
      title: BogofMixMatch
      description: >-
        Bogof Mix and Match offer template. An offer where the list of
        qualifying items and the list of free items are exactly the same. The
        customer will place two of these items in their basket and receive the
        cheapest one free.
      type: object
      properties:
        discount:
          description: Discount details. Default is 100%.
          $ref: '#/components/schemas/MarketingDiscountYaml'
        productSet:
          description: Items that would be discounted.
          nullable: true
          $ref: '#/components/schemas/MarketingProductSetYaml'
        maximumNumberOfRedemptions:
          description: The maximum number of discounted items that can be given.
          format: integer
          type: number
          minimum: 1
          deprecated: true
          nullable: true
        maximumRedemptions:
          description: >-
            The maximum number of discounted items that can be given, unlimited
            when null
          format: integer
          type: number
          minimum: 1
          default: 1
          nullable: true
      example:
        discount:
          discountPercentage: 50
        productSet:
          categories:
            - name: Pizza
        maximumRedemptions: 1
    MarketingBulkSubscriptionRequestYaml:
      title: BulkSubscriptionRequest
      description: Bulk subscription details.
      type: object
      properties:
        restaurantIds:
          description: List of restaurant ids to subscribe.
          nullable: true
          minItems: 1
          maxItems: 5000
          type: array
          items:
            type: string
        batchType:
          description: Batch type.
          nullable: false
          $ref: '#/components/schemas/MarketingSubscriptionBatchTypeYaml'
      example:
        restaurantIds:
          - '1234'
          - '5676'
        batchType: subscribe
    MarketingCampaignYaml:
      title: Campaign
      description: Campaign information.
      type: object
      oneOf:
        - $ref: '#/components/schemas/MarketingCampaignYaml'
        - $ref: '#/components/schemas/MarketingCampaignYaml'
        - $ref: '#/components/schemas/MarketingCampaignYaml'
      discriminator:
        propertyName: campaignType
        mapping:
          customPromotion: '#/components/schemas/MarketingCustomPromotionCampaignYaml'
          matchingByOfferDetails: '#/components/schemas/MarketingMatchingByOfferDetailsCampaignYaml'
          fastMovingGoods: '#/components/schemas/MarketingFastMovingGoodsCampaignYaml'
      properties:
        description:
          description: Description of the campaign
          nullable: true
          type: string
        campaignId:
          description: Internal id of the campaign
          nullable: false
          type: string
        name:
          description: Name of the campaign
          nullable: false
          type: string
        campaignType:
          description: Type of the campaign
          nullable: false
          type: string
          enum:
            - customPromotion
            - matchingByOfferDetails
            - fastMovingGoods
        campaignStatus:
          description: Indicates status of campaign
          nullable: false
          $ref: '#/components/schemas/MarketingCampaignStatusYaml'
        priority:
          description: Priority of the campaign. Default is 0.
          nullable: false
          format: integer
          minimum: 0
          type: number
        subscriptionRules:
          description: Information about opt-in and opt-out periods
          nullable: true
          $ref: '#/components/schemas/MarketingSubscriptionRulesYaml'
        metadata:
          description: Metadata dictionary
          nullable: false
          additionalProperties:
            type: string
          type: object
        externalCampaignId:
          description: >-
            External Campaign Id. A unique identifier of corresponding campaign
            object in external system. E.g. Subway promotion id
          nullable: true
          type: string
    MarketingCampaignAccessRestrictionsYaml:
      title: CampaignAccessRestrictions
      description: Campaign Access Restrictions.
      type: object
      properties:
        allowRestrictions:
          description: Allowed brands or restaurants
          nullable: true
          $ref: '#/components/schemas/MarketingRestrictionsYaml'
        denyRestrictions:
          description: Denied brands or restaurants
          nullable: true
          $ref: '#/components/schemas/MarketingRestrictionsYaml'
      example:
        allowRestrictions:
          byBrandNames: []
          byRestaurantIds:
            - '12'
            - '674'
        denyRestrictions:
          byBrandNames: []
          byRestaurantIds: []
    MarketingCampaignListEnvelopeYaml:
      title: CampaignListEnvelope
      description: Paginated list of campaigns
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/PagingAfterCursorYaml'
        data:
          description: Array of campaigns
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/MarketingCampaignYaml'
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
        data:
          - description: exclusive percent campaign for UK
            campaignId: cheekyTuesday
            name: Cheeky Tuesday
            campaignType: customPromotion
            campaignStatus: active
            priority: 0
            subscriptionRules:
              unsubscribeOfferActiveDays: 1
            exclusive: true
            offerDetails:
              template:
                offerType: percent
                consumerSegment: all
                qualifyingCriteria:
                  minimumSpendValue:
                    value: 1500
                percent:
                  discountPercent: 20
              runningPeriods:
                - daysOfWeek:
                    - tuesday
                  dateRunning:
                    from: '2021-02-12T00:00:00.0000000+00:00'
    MarketingCampaignOfferDetailsYaml:
      title: CampaignOfferDetails
      description: Campaign offer details.
      type: object
      properties:
        template:
          description: Information about offer configuration
          nullable: true
          $ref: '#/components/schemas/MarketingCampaignOfferTemplateYaml'
        runningPeriods:
          description: Running period of the offer
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/MarketingMultipleDaysRunningPeriodYaml'
      example:
        template:
          description: Free big pizza with any beverage on orders over 50 GBP
          shortDescription: Free item with selected orders
          offerType: freeItem
          consumerSegment: all
          qualifyingCriteria:
            minimumSpendValue:
              value: 5000
            productSet:
              categories:
                - name: Beverages
          freeItem:
            productSet:
              products:
                - name: Big Pizza
            maximumNumberOfRedemptions: 2
        runningPeriods:
          - daysOfWeek:
              - monday
            dateRunning:
              from: '2021-02-12T00:00:00.0000000+00:00'
              to: '2021-12-12T00:00:00.0000000+00:00'
            timeRunning:
              from: '00:10:00'
              to: '12:10:00'
    MarketingCampaignOfferTemplateYaml:
      title: CampaignOfferTemplate
      description: Campaign Offer Template.
      type: object
      properties:
        description:
          description: >-
            When configuring a campaign use this field to provide customized
            offer description or leave it null if default offer description
            should be applied
          nullable: true
          type: string
        offerType:
          nullable: false
          $ref: '#/components/schemas/MarketingOfferTypeYaml'
        consumerSegment:
          nullable: false
          $ref: '#/components/schemas/MarketingConsumerSegmentYaml'
        qualifyingCriteria:
          description: Conditions that must be met in order to get the offer discount.
          nullable: false
          $ref: '#/components/schemas/MarketingQualifyingCriteriaYaml'
        percent:
          description: Percent offer template
          nullable: true
          $ref: '#/components/schemas/MarketingPercentYaml'
        freeItem:
          description: FreeItem offer template
          nullable: true
          $ref: '#/components/schemas/MarketingFreeItemYaml'
        bogof:
          description: Bogof offer template
          nullable: true
          $ref: '#/components/schemas/MarketingBogofYaml'
        bogofMixMatch:
          description: BogofMixMatch offer template
          nullable: true
          $ref: '#/components/schemas/MarketingBogofMixMatchYaml'
        itemLevelDiscount:
          description: ItemLevelDiscount offer template
          nullable: true
          $ref: '#/components/schemas/MarketingItemLevelDiscountYaml'
        shortDescription:
          description: >-
            When configuring a campaign use this field to provide customized
            short offer description or leave it null if default short offer
            description should be applied. The short description is used for
            search page.
          nullable: true
          type: string
      example:
        description: Free big pizza with any beverage on orders over 50 GBP
        shortDescription: Free item with selected orders
        offerType: bogof
        consumerSegment: all
        qualifyingCriteria:
          minimumSpendValue:
            value: 5000
          productSet:
            categories:
              - name: Beverages
        percent:
          discountPercent: 20
        freeItem:
          productSet:
            categories:
              - name: Beverages
          maximumNumberOfRedemptions: 3
        bogof:
          productSet:
            categories:
              - name: Pizzas
          maximumNumberOfRedemptions: 3
        bogofMixMatch:
          productSet:
            categories:
              - name: Pizzas
    MarketingCampaignResponseYaml:
      title: CampaignResponse
      description: Campaign Response.
      type: object
      properties:
        data:
          description: Campaign details
          nullable: false
          $ref: '#/components/schemas/MarketingCampaignYaml'
    MarketingCampaignRestrictionsYaml:
      title: CampaignRestrictions
      description: Campaign restrictions.
      type: object
      properties:
        accessRestrictions:
          description: Allow and deny restrictions for a campaign by restaurant
          nullable: false
          $ref: '#/components/schemas/MarketingCampaignAccessRestrictionsYaml'
        subscriptionDateRestrictions:
          description: Subscribe and unsubscribe restrictions by date
          nullable: true
          $ref: '#/components/schemas/MarketingSubscriptionDateRestrictionsYaml'
      example:
        accessRestrictions:
          allowRestrictions:
            byBrandNames: []
            byRestaurantIds: []
          denyRestrictions:
            byBrandNames:
              - PizzaHut
            byRestaurantIds: []
        subscriptionDateRestrictions:
          subscribePeriod:
            from: '2021-02-12T00:00:00.0000000+00:00'
            to: '2021-03-12T00:00:00.0000000+00:00'
          allowUnsubscribe: true
    MarketingCampaignRestrictionsEnvelopeYaml:
      title: CampaignRestrictionsEnvelope
      description: Campaign restrictions envelope.
      type: object
      properties:
        data:
          description: Allow and deny restrictions for a campaign
          nullable: false
          $ref: '#/components/schemas/MarketingCampaignRestrictionsYaml'
      example:
        data:
          accessRestrictions:
            allowRestrictions:
              byBrandNames: []
              byRestaurantIds: []
            denyRestrictions:
              byBrandNames:
                - PizzaHut
              byRestaurantIds: []
    MarketingCampaignSearchEnvelopeYaml:
      title: CampaignSearchEnvelope
      description: Campaign Search Results.
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/PagingAfterCursorYaml'
        data:
          description: Array of campaign summaries
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/MarketingCampaignSummaryYaml'
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
        data:
          - description: someDescription
            campaignId: someId123
            status: active
            offerDescription: offerDescription
            lastUpdated: '2021-02-12T00:00:00.0000000+00:00'
            subscriptionSummary:
              topBrands:
                - Brand
              total: 123
              lastUpdated: '2021-02-12T00:00:00.0000000+00:00'
    MarketingCampaignStatusYaml:
      description: Status of the campaign.
      enum:
        - draft
        - scheduled
        - active
        - paused
        - finished
        - canceled
      type: string
    MarketingCampaignSummaryYaml:
      title: CampaignSummary
      description: Campaign summary information.
      type: object
      properties:
        description:
          description: Description of the campaign
          nullable: true
          type: string
        campaignId:
          description: Internal id of the campaign
          nullable: false
          type: string
        name:
          description: Name of the campaign
          nullable: false
          type: string
        status:
          description: Status of the campaign
          nullable: false
          $ref: '#/components/schemas/MarketingCampaignStatusYaml'
        offerDescription:
          description: Description of the offer visible on consumer facing app
          nullable: true
          type: string
        lastUpdated:
          description: Timestamp of the last campaign update
          nullable: false
          format: date-time
          type: string
        subscriptionSummary:
          description: Subscription summary
          nullable: false
          $ref: '#/components/schemas/MarketingSubscriptionSummaryYaml'
      example:
        description: someDescription
        campaignId: someId123
        name: someName
        status: active
        offerDescription: offerDescription
        lastUpdated: '2021-02-12T00:00:00.0000000+00:00'
        subscriptionSummary:
          topBrands: []
          total: 123
          lastUpdated: '2021-02-12T00:00:00.0000000+00:00'
    MarketingCategoryYaml:
      title: Category
      description: Category model.
      type: object
      properties:
        name:
          description: Name of the category
          nullable: true
          type: string
      example:
        name: Pizza
    MarketingConsumerSegmentYaml:
      description: Consumer Segment that offer applies
      enum:
        - all
        - newToRestaurant
      type: string
    MarketingCreateCampaignRequestYaml:
      title: CreateCampaignRequest
      description: Create Campaign Request.
      type: object
      properties:
        description:
          description: Description of the campaign
          nullable: true
          type: string
        name:
          description: Name of the campaign
          nullable: false
          type: string
        type:
          description: Type of the campaign
          nullable: true
          type: string
        priority:
          description: Priority of the campaign. Default is 0.
          nullable: false
          format: integer
          minimum: 0
          type: number
        exclusive:
          description: If campaign is exclusive i.e. Cheeky Tuesday. Default is false.
          nullable: false
          type: boolean
        draft:
          description: Campaign in draft state and does not allow subscriptions.
          nullable: false
          type: boolean
        offerDetails:
          description: Campaign offer configuration
          nullable: true
          $ref: '#/components/schemas/MarketingCampaignOfferDetailsYaml'
        matchingByOfferDetails:
          description: Information about matching by offer details
          nullable: true
          $ref: '#/components/schemas/MarketingMatchingByOfferDetailsYaml'
        allowRestrictions:
          description: Allowed brands or restaurants
          nullable: true
          $ref: '#/components/schemas/MarketingRestrictionsYaml'
        denyRestrictions:
          description: Denied brands or restaurants
          nullable: true
          $ref: '#/components/schemas/MarketingRestrictionsYaml'
        metadata:
          description: Metadata dictionary
          nullable: false
          additionalProperties:
            type: string
          type: object
        externalCampaignId:
          description: External Campaign Id
          nullable: true
          type: string
        subscriptionRules:
          description: Information about opt-in and opt-out periods
          nullable: true
          $ref: '#/components/schemas/MarketingSubscriptionRulesYaml'
      example:
        description: someDescription
        name: cheekyTuesday
        type: customPromotion
        priority: 0
        exclusive: false
        draft: false
        offerDetails:
          template:
            description: Buy one get one free
            shortDescription: Buy one get one free
            offerType: bogof
            consumerSegment: all
            qualifyingCriteria:
              minimumSpendValue:
                value: 5000
              productSet:
                categories:
                  - name: Beverages
            bogof:
              productSet:
                categories:
                  - name: Pizzas
              maximumNumberOfRedemptions: 3
          runningPeriods:
            - daysOfWeek:
                - monday
              dateRunning:
                from: '2021-02-12T00:00:00.0000000+00:00'
                to: '2021-12-12T00:00:00.0000000+00:00'
              timeRunning:
                from: '00:10:00'
                to: '12:10:00'
        allowRestrictions:
          byBrandNames: []
          byRestaurantIds: []
        denyRestrictions:
          byBrandNames: []
          byRestaurantIds: []
        metadata:
          systemTest: 'true'
        externalCampaignId: cheeky123
        subscriptionRules:
          unsubscribeOfferActiveDays: 1
    MarketingCreateOffersRequestYaml:
      title: Create offers request
      description: Create offers request
      type: object
      properties:
        offerType:
          nullable: false
          $ref: '#/components/schemas/MarketingOfferTypeYaml'
        consumerSegment:
          nullable: false
          $ref: '#/components/schemas/MarketingConsumerSegmentYaml'
        qualifyingCriteria:
          nullable: true
          $ref: '#/components/schemas/MarketingQualifyingCriteriaYaml'
        offerDescription:
          description: Custom description for offer
          nullable: true
          type: string
        percent:
          nullable: true
          $ref: '#/components/schemas/MarketingPercentYaml'
        freeItem:
          nullable: true
          $ref: '#/components/schemas/MarketingFreeItemYaml'
        bogof:
          nullable: true
          $ref: '#/components/schemas/MarketingBogofYaml'
        bogofMixMatch:
          nullable: true
          $ref: '#/components/schemas/MarketingBogofMixMatchYaml'
        itemLevelDiscount:
          description: ItemLevelDiscount offer template
          nullable: true
          $ref: '#/components/schemas/MarketingItemLevelDiscountYaml'
        runningPeriod:
          $ref: '#/components/schemas/MarketingMultipleDaysRunningPeriodYaml'
      example:
        runningPeriod:
          daysOfWeek:
            - wednesday
          dateRunning:
            from: '2020-12-12T00:00:00.0000000+00:00'
            to: '2021-12-12T00:00:00.0000000+00:00'
        offerType: freeItem
        consumerSegment: all
        qualifyingCriteria:
          minimumSpendValue:
            value: 1000
        offerDescription: Free Big Pizza on orders over 10 GBP
        freeItem:
          productSet:
            products:
              - name: Big Pizza
          maximumNumberOfRedemptions: 2
    MarketingDateTimePeriodYaml:
      title: DateTimePeriod
      description: Running Date Time period.
      type: object
      properties:
        from:
          description: Start date.
          nullable: true
          format: date-time
          type: string
        to:
          description: End date.
          nullable: true
          format: date-time
          type: string
      example:
        from: '2021-02-12T00:00:00.0000000+00:00'
        to: '2021-12-12T00:00:00.0000000+00:00'
    MarketingDiscountYaml:
      title: Discount
      description: Discount details.
      type: object
      properties:
        discountAmount:
          description: Money discount.
          nullable: true
          $ref: '#/components/schemas/MarketingMoneyYaml'
        discountPercentage:
          description: Percent discount.
          nullable: true
          format: integer
          type: number
          minimum: 1
          maximum: 100
      minProperties: 1
      maxProperties: 1
      example:
        discountAmount:
          value: 50
    MarketingFreeItemYaml:
      title: FreeItem
      description: "FreeItem offer template. An offer where the list of qualifying items and the list of free items are different. The customer will place an item in their basket from the list of qualifying items and receive one of the items from the list of free items, free.\_"
      type: object
      properties:
        discount:
          description: Discount details. Default is 100%.
          $ref: '#/components/schemas/MarketingDiscountYaml'
        productSet:
          description: Items that would be discounted.
          nullable: true
          $ref: '#/components/schemas/MarketingProductSetYaml'
        maximumNumberOfRedemptions:
          description: The maximum number of free items that can be given.
          format: integer
          type: number
          minimum: 1
          deprecated: true
          nullable: true
        maximumRedemptions:
          description: >-
            The maximum number of discounted items that can be given, unlimited
            when null
          format: integer
          type: number
          minimum: 1
          default: 1
          nullable: true
      example:
        discount:
          discountPercentage: 100
        productSet:
          products:
            - name: Big Pizza
        maximumRedemptions: 2
    MarketingItemLevelDiscountYaml:
      title: ItemLevelDiscount
      description: "ItemLevelDiscount offer template. An offer where the list of qualifying items and the list of discounted items are different. The customer will place an item in their basket from the list of qualifying items and receive one of the items from the list of discounted items with the defined discount.\_"
      type: object
      properties:
        discount:
          description: Discount details.
          $ref: '#/components/schemas/MarketingDiscountYaml'
        productSet:
          description: Items that would be discounted.
          nullable: true
          $ref: '#/components/schemas/MarketingProductSetYaml'
        maximumNumberOfRedemptions:
          description: The maximum number of discounted items that can be given.
          format: integer
          type: number
          minimum: 1
          deprecated: true
          nullable: true
        maximumRedemptions:
          description: >-
            The maximum number of discounted items that can be given, unlimited
            when null.
          format: integer
          type: number
          minimum: 1
          default: 1
          nullable: true
      example:
        discount:
          discountPercentage: 50
        productSet:
          products:
            - name: Big Pizza
        maximumRedemptions: 2
    MarketingMatchingByOfferDetailsYaml:
      title: CampaignOfferDetails
      description: Matching by offer details.
      type: object
      properties:
        template:
          description: Information about offer configuration
          nullable: false
          $ref: '#/components/schemas/MarketingCampaignOfferTemplateYaml'
      example:
        template:
          offerType: percent
          consumerSegment: all
          percent:
            discountPercent: 10
    MarketingMoneyYaml:
      title: Money
      description: Money value in the smallest unit of local currency
      type: object
      properties:
        value:
          description: Money value.
          format: integer
          type: number
          minimum: 0
      example:
        value: 50
    MarketingMultipleDaysRunningPeriodYaml:
      title: MultipleDaysRunningPeriod
      description: Structure that describes multiple running date and time periods.
      type: object
      properties:
        daysOfWeek:
          description: Days of week to run
          nullable: false
          type: array
          uniqueItems: false
          minItems: 1
          maxItems: 7
          items:
            $ref: '#/components/schemas/SharedDayOfWeekYaml'
        dateRunning:
          description: Date running period
          nullable: true
          $ref: '#/components/schemas/MarketingDateTimePeriodYaml'
        timeRunning:
          description: Time Running period
          nullable: true
          $ref: '#/components/schemas/MarketingTimeSpanPeriodYaml'
      example:
        daysOfWeek:
          - monday
        dateRunning:
          from: '2021-02-12T00:00:00.0000000+00:00'
          to: '2021-12-12T00:00:00.0000000+00:00'
        timeRunning:
          from: '00:10:00'
          to: '12:10:00'
    MarketingOfferYaml:
      title: Offer
      description: Offer details
      type: object
      properties:
        id:
          description: Internal id of the offer
          type: string
          nullable: false
        campaignId:
          description: The unique identifier of the offer campaign.
          nullable: true
          type: string
        offerType:
          nullable: false
          $ref: '#/components/schemas/MarketingOfferTypeYaml'
        status:
          nullable: false
          $ref: '#/components/schemas/MarketingOfferStatusYaml'
        consumerSegment:
          nullable: false
          $ref: '#/components/schemas/MarketingConsumerSegmentYaml'
        qualifyingCriteria:
          nullable: true
          $ref: '#/components/schemas/MarketingQualifyingCriteriaYaml'
        offerDescription:
          description: Custom description for offer
          nullable: true
          type: string
        percent:
          nullable: true
          $ref: '#/components/schemas/MarketingPercentYaml'
        freeItem:
          nullable: true
          $ref: '#/components/schemas/MarketingFreeItemYaml'
        bogof:
          nullable: true
          $ref: '#/components/schemas/MarketingBogofYaml'
        bogofMixMatch:
          nullable: true
          $ref: '#/components/schemas/MarketingBogofMixMatchYaml'
        itemLevelDiscount:
          description: ItemLevelDiscount offer template
          nullable: true
          $ref: '#/components/schemas/MarketingItemLevelDiscountYaml'
        runningPeriod:
          nullable: false
          $ref: '#/components/schemas/MarketingSingleDayRunningPeriodYaml'
      example:
        id: '1564'
        runningPeriod:
          dayOfWeek: wednesday
          dateRunning:
            from: '2020-12-12T00:00:00.0000000+00:00'
            to: '2021-12-12T00:00:00.0000000+00:00'
        offerType: freeItem
        status: active
        consumerSegment: all
        qualifyingCriteria:
          minimumSpendValue:
            value: 5000
        offerDescription: Free Big Pizza on orders over 10 GBP
        freeItem:
          discount:
            discountPercentage: 100
          productSet:
            products:
              - name: Big Pizza
          maximumNumberOfRedemptions: 2
    MarketingOfferDescriptionRequestYaml:
      title: OfferDescriptionRequest
      description: Offer details that are used to generate offer description
      type: object
      properties:
        offerTemplate:
          description: Selected offer template
          nullable: false
          $ref: '#/components/schemas/MarketingOfferTemplateYaml'
        offerPeriod:
          description: Selected running period of the offer
          nullable: true
          $ref: '#/components/schemas/MarketingMultipleDaysRunningPeriodYaml'
      example:
        offerTemplate:
          offerType: percent
          consumerSegment: all
          qualifyingCriteria:
            minimumSpendValue:
              value: 2500
          percent:
            discountPercent: 15
        offerPeriod:
          daysOfWeek:
            - monday
            - friday
          dateRunning:
            from: '2021-02-12T00:00:00.0000000+00:00'
            to: '2021-12-12T00:00:00.0000000+00:00'
          timeRunning:
            from: '00:10:00'
            to: '12:10:00'
    MarketingOfferDescriptionResponseYaml:
      title: OfferDescriptionResponse
      description: Offer description matching the offer description request
      type: object
      properties:
        data:
          description: Resolved offer description
          nullable: false
          $ref: '#/components/schemas/MarketingResolvedOfferDescriptionYaml'
      example:
        data:
          localizedDescription: Free big pizza with any beverage on orders over 50 GBP
          localizedShortDescription: Free item with selected orders
    MarketingOfferListEnvelopeYaml:
      title: OfferListEnvelope
      description: Paginated list of offers
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/PagingAfterCursorYaml'
        data:
          description: Array of offers
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/MarketingOfferYaml'
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
        data:
          - id: 1564X
            runningPeriod:
              dayOfWeek: monday
              dateRunning:
                from: '2021-02-12T00:00:00.0000000+00:00'
                to: '2021-12-12T00:00:00.0000000+00:00'
            offerType: freeItem
            consumerSegment: all
            qualifyingCriteria:
              minimumSpendValue:
                value: 5000
            offerDescription: Free Big Pizza on orders above 10 GBP
            freeItem:
              discount:
                discountPercentage: 100
              productSet:
                products:
                  - name: Big Pizza
              maximumNumberOfRedemptions: 2
    MarketingOfferStatusYaml:
      description: Status of the offer
      enum:
        - active
        - deleted
        - scheduled
        - expired
      type: string
    MarketingOfferTemplateYaml:
      title: OfferTemplate
      description: Offer Template.
      type: object
      properties:
        offerType:
          nullable: false
          $ref: '#/components/schemas/MarketingOfferTypeYaml'
        consumerSegment:
          nullable: false
          $ref: '#/components/schemas/MarketingConsumerSegmentYaml'
        qualifyingCriteria:
          description: Conditions that must be met in order to get the offer discount.
          nullable: false
          $ref: '#/components/schemas/MarketingQualifyingCriteriaYaml'
        percent:
          description: Percent offer template
          nullable: true
          $ref: '#/components/schemas/MarketingPercentYaml'
        freeItem:
          description: FreeItem offer template
          nullable: true
          $ref: '#/components/schemas/MarketingFreeItemYaml'
        bogof:
          description: Bogof offer template
          nullable: true
          $ref: '#/components/schemas/MarketingBogofYaml'
        bogofMixMatch:
          description: BogofMixMatch offer template
          nullable: true
          $ref: '#/components/schemas/MarketingBogofMixMatchYaml'
        itemLevelDiscount:
          description: ItemLevelDiscount offer template
          nullable: true
          $ref: '#/components/schemas/MarketingItemLevelDiscountYaml'
      example:
        offerType: bogof
        consumerSegment: all
        qualifyingCriteria:
          minimumSpendValue:
            value: 5000
          productSet:
            categories:
              - name: Beverages
        percent:
          discountPercent: 20
        freeItem:
          productSet:
            categories:
              - name: Beverages
          maximumNumberOfRedemptions: 3
        itemLevelDiscount:
          discount:
            discountPercentage: 50
          productSet:
            categories:
              - name: Beverages
          maximumNumberOfRedemptions: 3
        bogof:
          productSet:
            categories:
              - name: Pizzas
          maximumNumberOfRedemptions: 3
        bogofMixMatch:
          productSet:
            categories:
              - name: Pizzas
    MarketingOfferTypeYaml:
      description: Type of the offer
      enum:
        - percent
        - freeItem
        - bogof
        - stampCard
        - bogofMixMatch
        - notification
        - itemLevelDiscount
      type: string
    MarketingPercentYaml:
      title: Percent
      description: Percent offer template.
      type: object
      properties:
        discountPercent:
          description: Discount percentage for offer
          nullable: true
          type: number
          format: integer
          minimum: 1
          maximum: 100
      example:
        discountPercent: 10
    MarketingPreferableModifierYaml:
      title: PreferableModifier
      description: Preferable product modifier.
      type: object
      properties:
        name:
          description: Modifier Name
          nullable: true
          type: string
        modifierGroupName:
          description: Modifier group name
          nullable: true
          type: string
      example:
        name: Sweet Chilli Sauce
        modifierGroupName: Sides
    MarketingProductYaml:
      title: Product
      description: Product model.
      type: object
      properties:
        name:
          description: Name of the product
          nullable: true
          type: string
        variationName:
          description: Name of the product variation
          nullable: true
          type: string
        preferableModifiers:
          description: Preferable modifiers for the product
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/MarketingPreferableModifierYaml'
      example:
        name: Ger Burger
        preferableModifiers:
          - name: Sweet Chilli Sauce
            modifierGroupName: Sides
    MarketingProductSetYaml:
      title: ProductSet
      description: Set of products by brand names, categories, or specific products.
      type: object
      properties:
        brandNames:
          description: The names of specific brands product belongs to.
          nullable: true
          type: array
          items:
            type: string
        products:
          description: The specific products.
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/MarketingProductYaml'
        categories:
          description: The categories product belongs to.
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/MarketingCategoryYaml'
      minProperties: 1
      maxProperties: 3
      example:
        brandNames:
          - Cola
          - Fanta
    MarketingQualifyingCriteriaYaml:
      title: QualifyingCriteria
      description: Conditions that must be met in order to get the offer discount.
      type: object
      properties:
        minimumSpendValue:
          description: >-
            The minimum spend value required to be eligible for the offer
            discount in smallest unit of relevant currency. Default value is 0.
          nullable: false
          $ref: '#/components/schemas/MarketingMoneyYaml'
        productSet:
          description: >-
            The basket product requirements to be eligible for the offer
            discount.
          nullable: true
          $ref: '#/components/schemas/MarketingProductSetYaml'
      example:
        minimumSpendValue:
          value: 5000
    MarketingResolvedOfferDescriptionYaml:
      title: ResolvedOfferDescription
      description: Offer description matching the offer description request
      type: object
      properties:
        localizedDescription:
          description: Offer description localized for current tenant
          nullable: false
          type: string
        localizedShortDescription:
          description: Offer short description localized for current tenant
          nullable: false
          type: string
      example:
        localizedDescription: Free big pizza with any beverage on orders over 50 GBP
        localizedShortDescription: Free item with selected orders
    MarketingRestaurantYaml:
      title: Restaurant details
      description: Restaurant details.
      type: object
      properties:
        id:
          description: Restaurant Id
          nullable: false
          type: string
        name:
          description: The name of the restaurant
          nullable: false
          type: string
        brandName:
          description: The name of the brand this restaurant is part of
          nullable: true
          type: string
        city:
          description: The city/town the restaurant is located in
          nullable: true
          type: string
      example:
        id: '324567'
        name: pizza burger house
        brandName: Food Corp
        city: Newport
    MarketingRestrictionsYaml:
      title: Restrictions
      description: Brand name and restaurant id restrictions.
      type: object
      properties:
        byBrandNames:
          description: Restaurant brands array
          nullable: true
          type: array
          items:
            type: string
        byRestaurantIds:
          description: Restaurant ids array
          nullable: true
          type: array
          items:
            type: string
      example:
        byBrandNames: []
        byRestaurantIds: []
    MarketingSingleDayRunningPeriodYaml:
      title: SingleDayRunningPeriod
      description: Structure that describes single running date and time period.
      type: object
      properties:
        dayOfWeek:
          description: Day of week
          nullable: false
          $ref: '#/components/schemas/SharedDayOfWeekYaml'
        dateRunning:
          description: Date running period
          nullable: true
          $ref: '#/components/schemas/MarketingDateTimePeriodYaml'
        timeRunning:
          description: Time running period
          nullable: true
          $ref: '#/components/schemas/MarketingTimeSpanPeriodYaml'
      example:
        dayOfWeek: monday
        dateRunning:
          from: '2021-02-12T00:00:00.0000000+00:00'
          to: '2021-12-12T00:00:00.0000000+00:00'
        timeRunning:
          from: '08:10:00'
          to: '12:10:00'
    MarketingSubscriptionYaml:
      title: Subscription
      description: Subscription details.
      type: object
      properties:
        campaignId:
          description: Internal id of the campaign
          nullable: false
          type: string
        restaurantId:
          description: Restaurant Id.
          deprecated: true
          nullable: false
          type: string
        restaurant:
          description: Restaurant
          nullable: false
          $ref: '#/components/schemas/MarketingRestaurantYaml'
        status:
          description: Subscription status
          $ref: '#/components/schemas/MarketingSubscriptionStatusYaml'
        changedBy:
          description: Agent who changed status.
          nullable: false
          type: string
        reason:
          description: Reason why the status changed.
          nullable: true
          type: string
        changedAt:
          description: Subscribe/Unsubscribe timestamp.
          nullable: false
          format: date-time
          type: string
        eligibleStatusChanges:
          description: Eligible subscription statuses for restaurant.
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/MarketingSubscriptionEligibleStatusChangeYaml'
        subscriptionStatusChangeLogs:
          description: Logs of the subscription status changes.
          type: array
          items:
            $ref: '#/components/schemas/MarketingSubscriptionStatusChangeLogsYaml'
      example:
        campaignId: cheekyTuesday
        restaurantId: '324567'
        restaurant:
          id: 324567X
          name: pizza burger house
        status: subscribed
        changedBy: InternalUser
        reason: Need to stop the campaign
        changedAt: '2021-02-12T00:00:00.0000000+00:00'
        subscriptionStatusChangeLogs:
          - changedAt: '2021-02-12T00:00:00.0000000+00:00'
            changedBy: InternalUser
            reason: Need to stop the campaign
            status: unsubscribed
            jobId: test123
        eligibleStatusChanges:
          - fromDateTime: '2021-01-12T00:00:00.0000000+00:00'
            toDateTime: '2021-02-12T00:00:00.0000000+00:00'
            status: optOutRequested
    MarketingSubscriptionBatchYaml:
      title: SubscriptionBatch
      description: Subscription Batch details.
      type: object
      properties:
        id:
          description: Batch Id.
          nullable: false
          type: string
        batchType:
          description: Batch operation type.
          nullable: false
          $ref: '#/components/schemas/MarketingSubscriptionBatchTypeYaml'
        status:
          description: Batch status.
          nullable: false
          $ref: '#/components/schemas/MarketingBatchStatusYaml'
        lastModifiedDateTime:
          description: Last modification timestamp.
          nullable: false
          format: date-time
          type: string
        errors:
          description: Bulk operation errors.
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/MarketingSubscriptionBatchErrorYaml'
      example:
        id: test123
        batchType: subscribe
        status: failed
        lastModifiedDateTime: '2021-03-12T00:00:00.0000000+00:00'
        errors:
          - restaurantId: '324567'
            error: Unable to subscribe
    MarketingSubscriptionBatchEnvelopeYaml:
      title: SubscriptionBatchEnvelope
      description: Restaurant Subscription Batches Response.
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/PagingAfterCursorYaml'
        data:
          description: Array of subscription batches
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/MarketingSubscriptionBatchYaml'
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
        data:
          - id: test123X
            batchType: subscribe
            status: scheduled
            lastModifiedDateTime: '2021-03-12T00:00:00.0000000+00:00'
            errors:
              - restaurantId: '324567'
                error: Unable to subscribe
    MarketingSubscriptionBatchErrorYaml:
      title: SubscriptionBatchError
      description: Batch error details.
      type: object
      properties:
        restaurantId:
          description: Restaurant Id.
          nullable: false
          type: string
        error:
          description: Error details.
          nullable: false
          type: string
      example:
        restaurantId: '324567'
        error: Unable to subscribe
    MarketingSubscriptionBatchTypeYaml:
      description: Batch type
      enum:
        - subscribe
        - unsubscribe
      type: string
    MarketingSubscriptionDateRestrictionsYaml:
      title: SubscriptionDateRestrictions
      description: >-
        Restrictions that define how restaurant can be subscribed and
        unsubscribed from a campaign
      type: object
      properties:
        subscribePeriod:
          description: >-
            Period of time during which restaurants can subscribe to the
            campaign. If period is null a restaurant can subscribe anytime.
          nullable: true
          $ref: '#/components/schemas/MarketingDateTimePeriodYaml'
        allowUnsubscribe:
          description: Indicates whether unsubscribe is allowed
          type: boolean
        unsubscribePeriod:
          description: >-
            Period of time during which restaurants can unsubscribe from the
            campaign. If period is null a restaurant can unsubscribe anytime.
          nullable: true
          $ref: '#/components/schemas/MarketingDateTimePeriodYaml'
    MarketingSubscriptionEligibleStatusChangeYaml:
      description: Eligible status changes for the campaign
      type: object
      properties:
        from:
          description: Date and time when status change become eligible
          format: date-time
          type: string
        to:
          description: Date and time when status change become non-eligible
          format: date-time
          type: string
        status:
          description: Eligible status.
          $ref: '#/components/schemas/MarketingSubscriptionStatusYaml'
      example:
        from: '2021-01-12T00:00:00.0000000+00:00'
        to: '2021-02-12T00:00:00.0000000+00:00'
        status: optOutRequested
    MarketingSubscriptionEnvelopeYaml:
      title: SubscriptionEnvelope
      description: Restaurant Subscriptions Response.
      type: object
      properties:
        data:
          description: Subscription details
          nullable: false
          $ref: '#/components/schemas/MarketingSubscriptionYaml'
      example:
        data:
          campaignId: cheekyTuesday
          restaurantId: '324567'
          restaurant:
            id: 324567X
            name: pizza burger house
          status: subscribed
          changedBy: InternalUser
          reason: Need to stop the campaign
          changedAt: '2021-02-12T00:00:00.0000000+00:00'
          subscriptionStatusChangeLogs:
            - changedAt: '2021-02-12T00:00:00.0000000+00:00'
              changedBy: InternalUser
              reason: Need to stop the campaign
              status: unsubscribed
              jobId: test123
    MarketingSubscriptionListEnvelopeYaml:
      title: SubscriptionListEnvelope
      description: Restaurant Subscriptions Response.
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/PagingAfterCursorYaml'
        data:
          description: Array of subscriptions
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/MarketingSubscriptionYaml'
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
        data:
          - campaignId: cheekyTuesday
            restaurantId: '324567'
            restaurant:
              id: 324567X
              name: pizza burger house
            status: subscribed
            changedBy: InternalUser
            reason: Need to stop the campaign
            changedAt: '2021-02-12T00:00:00.0000000+00:00'
            subscriptionStatusChangeLogs:
              - changedAt: '2021-02-12T00:00:00.0000000+00:00'
                changedBy: InternalUser
                reason: Need to stop the campaign
                status: unsubscribed
                jobId: test123
    MarketingSubscriptionRulesYaml:
      title: SubscriptionRules
      description: >-
        Rules that define how a restaurant should be subscribed and unsubscribed
        from a campaign
      type: object
      properties:
        minimumSubscribePeriod:
          description: >-
            Period of time during which a restaurant cannot opt out from
            campaign. The period starts from when the restaurant is subscribed
            to the campaign.
          nullable: true
          format: timespan
          type: string
        unsubscribeNoticePeriod:
          description: >-
            Period of time from when opt out is requested to the when the
            restaurant is unsubscribed. Notice period includes cancellation
            period.
          nullable: true
          format: timespan
          type: string
        cancelOptOutRequestPeriod:
          description: >-
            Period of time during which a restaurant can cancel the opt-out and
            remain subscribed to the campaign. Cancellation period starts from
            when opt out is requested.
          nullable: true
          format: timespan
          type: string
        unsubscribeOfferActiveDays:
          description: >-
            Period of time during which the campaign offers remain active after
            the restaurant is unsubscribed from the campaign.
          nullable: true
          format: integer
          minimum: 1
          type: number
        minimumResubscribePeriod:
          description: >-
            Period of time during which a restaurant cannot opt back in. The
            period starts from when the restaurant is unsubscribed from the
            campaign.
          nullable: true
          format: timespan
          type: string
      example:
        minimumSubscribePeriod: 60.00:00:00
        unsubscribeNoticePeriod: 30.00:00:00
        cancelOptOutRequestPeriod: 7.00:00:00
        unsubscribeOfferActiveDays: 90
        minimumResubscribePeriod: 90.00:00:00
    MarketingSubscriptionStatusYaml:
      description: Status of the subscription
      enum:
        - inactive
        - subscribed
        - optOutRequested
        - optOutConfirmed
        - unsubscribed
      type: string
    MarketingSubscriptionStatusChangeLogsYaml:
      title: SubscriptionStatusChangeLogs
      description: Logs of the subscription status changes.
      type: object
      properties:
        changedAt:
          description: Subscription status change timestamp.
          nullable: false
          format: date-time
          type: string
        changedBy:
          description: Agent who changed status.
          nullable: false
          type: string
        reason:
          description: Reason why the status changed.
          nullable: true
          type: string
        status:
          description: Subscription status
          $ref: '#/components/schemas/MarketingSubscriptionStatusYaml'
        jobId:
          description: Id of the job.
          nullable: true
          type: string
      example:
        changedAt: '2021-02-12T00:00:00.0000000+00:00'
        changedBy: InternalUser
        reason: Need to stop the campaign
        status: unsubscribed
        jobId: test123
    MarketingSubscriptionSummaryYaml:
      title: SubscriptionSummary
      description: Subscription information.
      type: object
      properties:
        topBrands:
          description: Top campaign brands
          nullable: false
          minItems: 0
          maxItems: 10
          type: array
          items:
            type: string
        total:
          description: Total number of the subscriptions for the campaign
          nullable: false
          format: integer
          minimum: 0
          type: number
        lastUpdated:
          description: >-
            Timestamp of the last subscribe or unsubscribe. Value is null when
            there was no subscriptions yet.
          nullable: true
          format: date-time
          type: string
      example:
        topBrands: []
        total: 123
        lastUpdated: '2021-02-12T00:00:00.0000000+00:00'
    MarketingTimeSpanPeriodYaml:
      title: TimeSpanPeriod
      description: Time running period.
      type: object
      properties:
        from:
          description: Start time.
          nullable: false
          format: timespan
          type: string
        to:
          description: End time.
          nullable: false
          format: timespan
          type: string
      example:
        from: '00:10:00'
        to: '12:10:00'
    Marketplaceranking400MarketplaceRankingErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Invalid Request
          type: string
        error:
          description: Error Title
          example: Invalid Request
          type: string
      type: object
    Marketplaceranking401MarketplaceRankingErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Unauthorized Request
          type: string
        error:
          description: Error Title
          example: Unauthorized Request
          type: string
      type: object
    Marketplaceranking404MarketplaceRankingErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Marketplace Ranking Settings not found
          type: string
        error:
          description: Error Title
          example: Marketplace Ranking Settings not found
          type: string
      type: object
    Marketplaceranking500MarketplaceRankingErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Internal Server Error
          type: string
        error:
          description: Error Title
          example: Internal Server Error
          type: string
      type: object
    MarketplacerankingMarketplaceRankYaml:
      description: >-
        The marketplace rank object used to build a Ranking for a given delivery
        zone.
      properties:
        enabled:
          description: Status of the corresponding rank
          type: boolean
        rank:
          description: Rank position of Average Assignable Job Load
          format: integer
          example: -20
          type: number
        aajl:
          description: Average Assignable Job Load
          format: integer
          example: 1
          type: number
      type: object
    MarketplacerankingMarketplaceRankingSettingsYaml:
      description: The marketplace ranking settings object for all endpoints.
      properties:
        ranks:
          description: >-
            Array of marketplace rank objects used to build a Ranking for a
            given delivery zone.
          maxItems: 9
          type: array
          minItems: 9
          items:
            $ref: '#/components/schemas/MarketplacerankingMarketplaceRankYaml'
        marketplaceRankingStatus:
          description: Marketplace On/Off Status
          type: boolean
        id:
          description: Delivery Zone Id
          example: fc71ee27-608f-4223-b2ea-2774eb83c6b4
          type: string
      type: object
    MarketplacerankingMarketplaceRankingSettingsListYaml:
      description: Marketplace Ranking Settings List
      properties:
        marketplaceRankSettingsList:
          description: List of Marketplace Ranking Settings
          maxItems: 3
          type: array
          minItems: 3
          items:
            $ref: >-
              #/components/schemas/MarketplacerankingMarketplaceRankingSettingsYaml
      type: object
    MenuAddMenuViewYaml:
      description: A menu viewed event.
      type: object
      allOf:
        - $ref: '#/components/schemas/MenuAddMenuViewBaseYaml'
        - properties:
            deliveryArea:
              description: The location that the click applies to.
              type: string
              example: NW6
            isPromoted:
              description: Indicates whether the restaurant was promoted.
              type: boolean
            sortApplied:
              description: Indicates whether the restaurant list was sorted.
              type: boolean
            resultMode:
              description: >-
                Indicates whether the restaurant list was filtered when the
                click happened or it was organic SERP results.
              type: string
              enum:
                - filtered
                - organic
            positionInRestaurantList:
              description: >-
                The position in the search results as that have been seen.
                [one-based]
              type: integer
              format: int32
              minimum: 1
            positionInCandidateList:
              description: >-
                The current position of the restaurant in the filtered list of
                candidates for Promoted Placement. Available if the restaurant
                was promoted. [one-based]
              type: integer
              format: int32
              nullable: true
              minimum: 1
          required:
            - isPromoted
            - sortApplied
            - resultMode
            - positionInRestaurantList
    MenuAddMenuViewBaseYaml:
      type: object
      properties:
        menuDisplayedTimestampUtc:
          description: The UTC date and time at which the menu was displayed.
          nullable: true
          format: date-time
          type: string
        app:
          description: The type of client making the request.
          type: string
          enum:
            - android
            - ios
            - web
        latitude:
          description: The latitude value of the position.
          nullable: true
          format: double
          type: number
          example: 51.516445
        longitude:
          description: The longitude value of the position.
          nullable: true
          format: double
          type: number
          example: -0.103125
        globalUserId:
          description: The user's hashed globally unique ID.
          type: string
          example: 8It2lEaJjG82nJtxO00Iab0CoF0=
        gaUserId:
          description: The Google Analytics user ID.
          type: string
          example: GA1.1.46b5465f-33ed-4eab-aeb9-fa0d034d274b
        anonymousUserId:
          description: The legacy Just Eat anonymous user ID.
          type: string
          example: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
        searchDisplayedTimestampUtc:
          description: The UTC date and time at which the search page was displayed.
          nullable: true
          format: date-time
          type: string
        conversationId:
          description: >-
            The correlation ID of the request, used to trace the request when
            viewing logs.
          nullable: true
          type: string
          example: 1fb5a510-1dd9-47fb-a053-6840d6f59130
      required:
        - app
        - anonymousUserId
      additionalProperties: true
      x-abstract: true
    MenuLegacyAddMenuViewYaml:
      description: A menu viewed event.
      type: object
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/MenuAddMenuViewBaseYaml'
        - properties:
            isSponsored:
              description: >-
                Indicates whether the restaurant was sponsored. This property
                has been deprecated and should not be used. Please use a new
                contract instead.
              type: boolean
              deprecated: true
            outcode:
              description: >-
                The out component of the postcode. This property has been
                deprecated and should not be used. Please use a new contract
                instead.
              type: string
              example: NW6
              deprecated: true
          required:
            - isSponsored
    OpsorderprojectionAppAddressYaml:
      description: An address
      type: object
      properties:
        lines:
          description: Address lines.
          type: array
          items:
            type: string
        city:
          description: Address city.
          type: string
        country:
          description: Address country.
          type: string
        postcode:
          description: Address postcode.
          type: string
    OpsorderprojectionAppChildItemYaml:
      description: A menu sub item
      type: object
      properties:
        description:
          description: The description of the item
          type: string
        id:
          description: The id of the item
          type: string
        itemReference:
          description: The reference for the item
          type: string
        name:
          description: The name of the item
          type: string
        customerNote:
          description: A note from the customer in relation to this item
          type: string
        unitPrice:
          description: The unit price of the item
          format: money
          type: integer
        unitDepositAmount:
          description: The deposit amount for the item
          format: money
          type: integer
        quantity:
          description: The quantity of items requested
          type: integer
        subItems:
          items:
            $ref: '#/components/schemas/OpsorderprojectionAppChildItemYaml'
          type: array
    OpsorderprojectionAppGetOrderResponseExampleYaml:
      example:
        tenant: uk
        orderId: hxb6vkwr90uwgqftrher3a
        customer:
          id: '10281940'
          name: Bob Hope
          emailAddress: bob@justeattakeaway.com
          phoneNumber: '+441234567890'
          timeZone: Europe/London
          accountType: Guest
          address:
            lines:
              - Address Line 1
              - Address Line 2
              - Address Line 3
              - Address Line 4
              - Address Line n
            city: Bristol
            country: UK
            postcode: BS1 1AA
        restaurant:
          id: '11047251'
          supportTeam:
            name: scoober
          name: Awesome Burgers
          phoneNumber: '0412345678'
          emailAddress: awesome@burgers.com
          timeZone: Europe/London
          address:
            lines:
              - Address Line 1
              - Address Line 2
              - Address Line 3
              - Address Line 4
              - Address Line n
            city: Bristol
            country: UK
            postcode: BS1 1AA
            storefrontType: grocery
        fulfillment:
          isDineIn: true
          method: delivery
          dineInFulfillmentInfo:
            tableNumber: '15'
        items:
          - description: A slice of delicious sicilian chocolate cake
            id: i1-d26def13-bf4d-5d28-83d6-cf8f9c93695f
            totalPrice: 1250
            totalDiscount: 50
            discountedPrice: 1200
            itemReference: productid%3d11568235
            name: Sicilian chocolate
            customerNote: Can you add extra cream
            unitPrice: 1250
            unitDepositAmount: 0
            quantity: 1
            subItems:
              - description: Heinz Tomato Ketchup
                id: >-
                  i1-d26def13-bf4d-5d28-83d6-cf8f9c93695fo1-ca447a4d-5ca4-52a5-a75c-61c34f5d6f11
                itemReference: >-
                  productid%3dd26def13-bf4d-5d28-83d6-cf8f9c93695f%26accessoryid%3dca447a4d-5ca4-52a5-a75c-61c34f5d6f11
                name: Heinz Tomato Ketchup
                customerNote: Can I have the extra large sachets
                unitPrice: 0
                unitDepositAmount: 0
                quantity: 1
                subItems: []
          - description: ''
            id: i2-5e9c5c6c-dd77-48f3-8f30-edaa0638e9ef
            totalPrice: 450
            totalDiscount: 0
            discountedPrice: 450
            itemReference: productid%3d87654321
            name: Large Bottle Coke (1.5l)
            customerNote: Coke Zero please if available
            unitPrice: 450
            unitDepositAmount: 25
            quantity: 1
        itemsOutOfStock:
          - description: >-
              Perfectly crispy bacon rashers and oven cooked pork sausages
              stuffed into a crusty white baguette. Freshly prepared every
              morning.
            id: i1-d26def13-bf4d-5d28-83d6-cf8f9c93695fX
            totalPrice: 345
            itemReference: productid%3dd26def13-bf4d-5d28-83d6-cf8f9c93695f
            name: Bacon and Sausage Breakfast Baguette - NEW RECIPE
            unitPrice: 345
            unitDepositAmount: 0
            quantity: 1
            refundAmount: 345
            subItems:
              - description: Heinz Tomato Ketchup
                id: >-
                  i1-d26def13-bf4d-5d28-83d6-cf8f9c93695fo1-ca447a4d-5ca4-52a5-a75c-61c34f5d6f11X
                itemReference: >-
                  productid%3dd26def13-bf4d-5d28-83d6-cf8f9c93695f%26accessoryid%3dca447a4d-5ca4-52a5-a75c-61c34f5d6f11
                name: Heinz Tomato Ketchup
                customerNote: Can I have the extra large sachets
                unitPrice: 0
                unitDepositAmount: 0
                quantity: 1
                subItems: []
        payment:
          paidDate: '2022-03-21T09:20:46.3322468+00:00'
          tips:
            - type: driver
              value: 50
          fees:
            - description: Delivery Charge
              name: Delivery Charge
              type: delivery
              value: 199
            - description: Service charge 5% (min 50p max £1.99)
              name: Service charge 5% (min 50p max £1.99)
              type: None
              value: 50
          taxes:
            - name: Vat
              percentage: 20
              value: 324
          donations:
            - name: RSPCA
              value: 15
          lines:
            - type: Card
              subType: ApplePay
              value: 1019
              totalValue: 1069
              paymentServiceProviderName: Adyen
              payOnFulfillment: false
          isCashPayment: false
          isCardPayment: true
        priceBreakdown:
          totalPrice: 1458
          discount: 150
          fees: 249
          tips: 50
          taxes: 324
          items: 820
          donations: 15
        deliveryPartner:
          id: '618'
          name: Skip The Dishes - Live account
        notes:
          order:
            note: Contact-free delivery
          kitchen:
            note: No nuts please
          courier:
            note: I'm down the alley between houses numbers 18 and 20
        partnerReferenceId: bagw7zvpi02ffvck1xkyxq
        customerOrderId: 12345678910
        state: Accepted
        source: justeat
        dispatchMethod: orderpad
        previousOrderCounts:
          justeatOrderCount: 15
          restaurantOrderCount: 3
        isAsap: true
        discounts:
          - type: BOGOFF
            qualifyingValue: 150
        applicationInformation:
          version: 33.45.0
          name: iPhone App
        partnerSubscriptionId: '736'
        initialDueDateRequestedByCustomer: '2022-03-21T09:45:00+00:00'
        placedDate: '2022-03-21T09:20:34.0885419+00:00'
        acceptedAtDate: '2022-03-21T09:25:00+00:00'
        currentDueDate: '2022-03-21T09:55:00+00:00'
        refund:
          serviceFee:
            refundAmount: 15
            updatedAmount: 30
        currencyCode: GBP
    OpsorderprojectionAppGetOrderResponseYaml:
      description: Details of an order
      type: object
      properties:
        tenant:
          description: The tenant of the restaurant the order was placed at
          type: string
        orderId:
          description: The id of the order.
          type: string
        customer:
          description: The customer details
          type: object
          properties:
            id:
              description: The id of the customer.
              type: string
            name:
              description: The name of the customer that placed the order.
              type: string
            emailAddress:
              description: The email address of the customer.
              type: string
            phoneNumber:
              description: The phone number of the customer in n E.164 format.
              type: string
            timeZone:
              description: The timezone in IANA format.
              type: string
            accountType:
              description: The type of account that the customer has.
              type: string
              enum:
                - default
                - guest
                - unknown
            address:
              description: The customer's delivery address
              type: object
              $ref: '#/components/schemas/OpsorderprojectionAppAddressYaml'
        restaurant:
          description: The restaurant details
          type: object
          properties:
            id:
              description: The id for restaurant that the order was placed at.
              type: string
            supportTeam:
              description: >-
                The support team that applied to this order at the point of
                order creation.
              type: object
              properties:
                name:
                  description: >-
                    The name of the support team that applied to this order at
                    the point of order creation.
                  type: string
                  enum:
                    - premier
                    - core
                    - delco
                    - thirdParty
                    - scoober
            name:
              description: The name for restaurant that the order was placed at.
              type: string
            phoneNumber:
              description: The phone number for restaurant in n E.164 format.
              type: string
            emailAddress:
              description: The email address for the restaurant.
              type: string
            timeZone:
              description: The timezone for the restaurant in IANA format.
              type: string
            storefrontType:
              description: The type of storefront.
              type: string
              enum:
                - restaurant
                - grocery
            address:
              description: The restaurant's address
              type: object
              $ref: '#/components/schemas/OpsorderprojectionAppAddressYaml'
        fulfillment:
          description: The fulfillment details for the order
          type: object
          properties:
            isDineIn:
              description: Whether the order is a dine in order or not.
              type: boolean
            method:
              description: The method of fulfillment for the order.
              type: string
              enum:
                - delivery
                - collection
                - dineIn
            dineInFulfillmentInfo:
              description: Dine in specific details
              type: object
              properties:
                tableNumber:
                  description: The table number for the dine in order
                  type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OpsorderprojectionAppParentItemYaml'
        itemsOutOfStock:
          description: Items which were marked as out of stock
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/OpsorderprojectionAppOutOfStockItemYaml'
        payment:
          description: Payment details for the order
          type: object
          properties:
            paidDate:
              description: The datetime that this payment line was paid in ISO 8601 format.
              type: string
              format: date-time
            tips:
              type: array
              items:
                type: object
                properties:
                  type:
                    description: The type of the tip
                    type: string
                  value:
                    description: >-
                      The amount of the tip in the minor unit of the currency.
                      E.g. if the UK this value would be in pence.
                    format: money
                    type: integer
            fees:
              type: array
              items:
                type: object
                properties:
                  description:
                    description: The description of the fee
                    type: string
                  name:
                    description: The name of the fee
                    type: string
                  type:
                    description: The type of the fee
                    type: string
                  value:
                    description: >-
                      The amount of the fee in the minor unit of the currency.
                      E.g. if the UK this value would be in pence.
                    format: money
                    type: integer
            taxes:
              type: array
              items:
                type: object
                properties:
                  name:
                    description: The name of the tax
                    type: string
                  percentage:
                    description: The percentage of the tax
                    type: number
                    format: double
                  value:
                    description: >-
                      The amount of the tax in the minor unit of the currency.
                      E.g. if the UK this value would be in pence.
                    format: money
                    type: integer
            donations:
              type: array
              items:
                type: object
                properties:
                  name:
                    description: The name of the donation
                    type: string
                  value:
                    description: >-
                      The amount of the donation in the minor unit of the
                      currency. E.g. if the UK this value would be in pence.
                    format: money
                    type: integer
            lines:
              type: array
              items:
                type: object
                properties:
                  type:
                    description: The type of the payment
                    type: string
                  subType:
                    description: The subtype of the payment
                    type: string
                  value:
                    description: >-
                      The value of the payment in the minor unit of the
                      currency. E.g. if the UK this value would be in pence.
                    format: money
                    type: integer
                  totalValue:
                    description: >-
                      The total value of the payment in the minor unit of the
                      currency. E.g. if the UK this value would be in pence.
                    format: money
                    type: integer
                  paymentServiceProviderName:
                    description: The name of the of the payment service provider
                    type: string
                  payOnFulfillment:
                    description: >-
                      Whether this payment line is paid on the fulfillment of
                      the order
                    type: boolean
            isCashPayment:
              description: Whether any payment lines are of type cash
              type: boolean
            isCardPayment:
              description: Whether any payment lines are of type card
              type: boolean
        priceBreakdown:
          properties:
            totalPrice:
              description: >-
                The total value of the order in the minor unit of the currency.
                E.g. if the UK this value would be in pence.
              format: money
              type: integer
            discount:
              description: >-
                The total value of all discounts in the minor unit of the
                currency. E.g. if the UK this value would be in pence.
              format: money
              type: integer
            fees:
              description: >-
                The total value of all fees in the minor unit of the currency.
                E.g. if the UK this value would be in pence.
              format: money
              type: integer
            tips:
              description: >-
                The total value of all tips in the minor unit of the currency.
                E.g. if the UK this value would be in pence.
              format: money
              type: integer
            taxes:
              description: >-
                The total value of all taxes in the minor unit of the currency.
                E.g. if the UK this value would be in pence.
              format: money
              type: integer
            items:
              description: >-
                The total value of all items in the minor unit of the currency.
                E.g. if the UK this value would be in pence.
              format: money
              type: integer
            donations:
              description: >-
                The total value of all discounts in the minor unit of the
                currency. E.g. if the UK this value would be in pence.
              format: money
              type: integer
        deliveryPartner:
          properties:
            id:
              description: The id of the delivery partner for this order
              type: string
            name:
              description: The name of the delivery partner for this order
              type: string
        notes:
          description: A container for order kitchen and courier notes
          type: object
          properties:
            order:
              description: A note from the customer for the order
              $ref: '#/components/schemas/OpsorderprojectionAppNoteDetailYaml'
            kitchen:
              description: A note from the customer for the kitchen
              $ref: '#/components/schemas/OpsorderprojectionAppNoteDetailYaml'
            courier:
              description: A note from the customer for the courier
              $ref: '#/components/schemas/OpsorderprojectionAppNoteDetailYaml'
        partnerReferenceId:
          description: The id the the partner understands the order to known by
          type: string
        customerOrderId:
          description: The id the the customer understands the order to known by
          type: string
        state:
          description: The current state of the order
          type: string
          enum:
            - new
            - accepted
            - cancelled
            - problematic
        source:
          description: The source for this order i.e. JustEat etc
          type: string
        dispatchMethod:
          description: The dispatch method for the order e.g. phone
          type: string
        previousOrderCounts:
          description: The number of previous order made by a customer
          type: object
          properties:
            justeatOrderCount:
              description: The number of previous orders with JustEat
              type: integer
            restaurantOrderCount:
              description: The number of previous orders with this restaurant
              type: integer
        isAsap:
          description: Whether the order should be delivered as soon as possible
          type: boolean
        discounts:
          type: array
          items:
            type: object
            properties:
              type:
                description: The type of the discount
                type: string
              qualifyingValue:
                description: >-
                  The monetary amount required to qualify for the offer in the
                  minor unit of the currency. E.g. if the UK this value would be
                  in pence.
                format: money
                type: integer
        applicationInformation:
          description: Application and device details that the order was placed from
          type: object
          properties:
            version:
              description: The version of the application (client) that placed the order.
              type: string
            name:
              description: The name of the application (client) that placed the order.
              type: string
        partnerSubscriptionId:
          description: The partner subscription id
          type: string
        initialDueDateRequestedByCustomer:
          description: >-
            The date time that the customer request the initial due date in ISO
            8601 format.
          type: string
          format: date-time
        placedDate:
          description: The date time that order was placed in ISO 8601 format.
          type: string
          format: date-time
        acceptedAtDate:
          description: The date time that order accepted at in ISO 8601 format.
          type: string
          format: date-time
        currentDueDate:
          description: The date time that the order is currently due in ISO 8601 format.
          type: string
          format: date-time
        refund:
          description: Refunds that have been applied to the order
          type: object
          properties:
            serviceFee:
              description: A service fee refund
              type: object
              properties:
                refundedAmount:
                  description: >-
                    The amount of service fee that was refunded in the minor
                    unit of the currency (pence, cents etc)
                  format: money
                  type: integer
                updatedAmount:
                  description: >-
                    The new amount of the service fee  minor unit of the
                    currency (pence, cents etc)
                  format: money
                  type: integer
        currencyCode:
          description: The ISO-4217 currency code associated with the order.
          type: string
    OpsorderprojectionAppNoteDetailYaml:
      description: A note from the customer
      type: object
      properties:
        note:
          description: The note supplied by the customer
          type: string
    OpsorderprojectionAppOutOfStockItemYaml:
      description: An out of stock order item
      type: object
      properties:
        description:
          description: The description of the item
          type: string
        totalPrice:
          description: The total price for the item
          format: money
          type: integer
        id:
          description: The id of the item
          type: string
        itemReference:
          description: The reference for the item
          type: string
        name:
          description: The name of the item
          type: string
        customerNote:
          description: A note from the customer in relation to this item
          type: string
        unitPrice:
          description: The unit price of the item
          format: money
          type: integer
        unitDepositAmount:
          description: The deposit amount for the item
          format: money
          type: integer
        quantity:
          description: The quantity of items requested
          type: integer
        refundAmount:
          description: The total amount refunded for the item
          format: money
          type: integer
        subItems:
          items:
            $ref: '#/components/schemas/OpsorderprojectionAppChildItemYaml'
          type: array
    OpsorderprojectionAppParentItemYaml:
      description: A menu item
      type: object
      properties:
        description:
          description: The description of the item
          type: string
        totalPrice:
          description: The total price for the item
          format: money
          type: integer
        totalDiscount:
          description: The total discount for the item
          format: money
          type: integer
        discountedPrice:
          description: The discounted price for the item
          format: money
          type: integer
        id:
          description: The id of the item
          type: string
        itemReference:
          description: The reference for the item
          type: string
        name:
          description: The name of the item
          type: string
        customerNote:
          description: A note from the customer in relation to this item
          type: string
        unitPrice:
          description: The unit price of the item
          format: money
          type: integer
        unitDepositAmount:
          description: The deposit amount for the item
          format: money
          type: integer
        quantity:
          description: The quantity of items requested
          type: integer
        subItems:
          items:
            $ref: '#/components/schemas/OpsorderprojectionAppChildItemYaml'
          type: array
    OpspoolingserviceGetPoolResponseYaml:
      description: Details of the delivery pool of an order
      type: object
      properties:
        sequence:
          description: >-
            Sequence of pick up and delivery activities of the orders in the
            pool
          type: array
          items:
            $ref: '#/components/schemas/OpspoolingserviceSequenceItemYaml'
    OpspoolingserviceSequenceItemYaml:
      description: Item representing a courier activity performed for an order
      type: object
      properties:
        type:
          description: Courier activity type
          type: string
          enum:
            - pickup
            - delivery
        orderId:
          description: The id of an order
          type: string
        completed:
          description: Indicates whether the activity has been completed
          type: boolean
    OrderAcceptanceBeingPreparedRequestYaml:
      description: Refers to an order being prepared
      type: object
    OrderAcceptanceOrderAcceptRequestYaml:
      description: An order acceptance request
      type: object
      properties:
        TimeAcceptedFor:
          description: When the order is accepted for
          format: date-time
          type: string
        OrderPreparationTime:
          description: Restaurant preparation time at the moment when order was accepted
          type: string
          format: timespan
        CourierPickupTime:
          description: >-
            When restaurant expects courier to pick up food. Used only for
            Takeaway order updates.
          format: date-time
          type: string
        UserId:
          description: The ID of the customer care agent making the request.
          type: integer
      example:
        TimeAcceptedFor: '2018-03-10T14:45:28.000Z'
        OrderPreparationTime: '00:13:00'
        CourierPickupTime: '2023-03-10T14:45:28.000Z'
        UserId: 12345
    OrderAcceptanceOrderAcceptedYaml:
      description: An order acceptance message
      type: object
      properties:
        AcceptedFor:
          description: The time the order is accepted for
          format: date-time
          type: string
        OrderId:
          description: The order Id
          type: string
        Event:
          description: Order Accepted
          type: string
      example:
        AcceptedFor: '2018-03-10T14:45:28.000Z'
        OrderId: '123456'
        Event: OrderAccepted
    OrderAcceptanceOrderCancelRequestYaml:
      type: object
      properties:
        Message:
          description: Reason why this order is being cancelled.
          type: string
      example:
        Message: Customer requested the order to be cancelled
    OrderAcceptanceOrderCancelledYaml:
      type: object
      properties:
        Event:
          description: The event
          type: string
        OrderId:
          description: The Id of the order
          type: string
        Reason:
          description: The reason the order was cancelled.
          enum:
            - cust_cancelled_changed_mind
            - cust_cancelled_delivery_too_long
            - cust_cancelled_made_mistake
            - cust_cancelled_other
            - delivery_partner_cancelled
            - rest_cancelled_customer_absent
            - rest_cancelled_customer_requested
            - rest_cancelled_declined
            - rest_cancelled_drivers_unavailable
            - rest_cancelled_fake_order
            - rest_cancelled_other
            - rest_cancelled_out_of_stock
            - rest_cancelled_too_busy
            - system_cancelled_other
            - system_cancelled_test_order
          type: string
      example:
        Event: OrderCancelled
        OrderId: ijdhpy7bdusgtc28bapspa
        Reason: system_cancelled_other
    OrderAcceptanceOrderDueDateRequestYaml:
      type: object
      properties:
        DueDate:
          description: The updated ETA for the order
          format: date-time
          type: string
      example:
        DueDate: '2019-12-25T14:45:28.000Z'
    OrderAcceptanceOrderRejectRequestYaml:
      description: Describes an order being rejected
      type: object
      properties:
        Message:
          description: Reason why this order is being rejected.
          type: string
      example:
        Message: Kitchen overloaded
    OrderAcceptanceOrderRejectedYaml:
      description: Details of an order being rejected
      type: object
      properties:
        Event:
          description: The event
          type: string
        RejectedAt:
          description: Timestamp for the order being rejected
          format: date-time
          type: string
        RejectedReason:
          description: Details reason for the rejections
          type: string
        RejectedBy:
          description: ID of the rejecter
          type: string
      example:
        Event: OrderRejected
        RejectedAt: '2018-03-10T14:45:28.000Z'
        RejectedReason: Kitchen overloaded
        RejectedBy: '123456'
    OrderDeliveryEtaEstimateYaml:
      properties:
        bestGuess:
          description: >-
            This should represent the delivery partner's best guess at when the
            driver will arrive at the restaurant.
          format: date-time
          type: string
        estimatedAt:
          description: This is the time at which you are doing the estimation
          format: date-time
          type: string
      type: object
    OrderLogsGetOrderLogsResponseYaml:
      description: Event logs for an order
      type: array
      items:
        description: Details of a log entry
        type: object
        properties:
          category:
            description: The category of this log entry
            type: string
          date:
            description: The date that the log entry occurred
            type: string
            format: date-time
          logs:
            description: List of log lines for this entry
            type: array
            items:
              type: string
          logType:
            description: The message that resulted in this log entry
            type: string
          orderId:
            description: The order id
            type: string
          tenant:
            description: The tenant
            type: string
      example:
        - category: Order
          date: '2023-01-01T12:00:00+00:00'
          logs:
            - Created
            - 'Order total paid: £10.00'
          logType: OrderCreatedV2
          orderId: hxb6vkwr90uwgqftrher3a
          tenant: uk
        - category: Comms
          date: '2023-01-01T12:00:10+00:00'
          logs:
            - Sending order via OrderPad
          logType: DispatchMethodSelected
          orderId: hxb6vkwr90uwgqftrher3a
          tenant: uk
        - category: Ops
          date: '2023-01-01T12:05:00+00:00'
          logs:
            - Cancelled
          logType: OrderCancelled
          orderId: hxb6vkwr90uwgqftrher3a
          tenant: uk
    OrderSearchAggregateOrderSearchResponseYaml:
      type: object
      properties:
        orderCount:
          description: The number of orders that match the filter criteria
          type: number
      example:
        orderCount: 57
    OrderSearchOrderSearchItemYaml:
      description: Details of an order
      type: object
      properties:
        customer:
          description: The customer details
          type: object
          properties:
            emailAddress:
              description: The email address of the customer.
              type: string
            phoneNumber:
              description: The phone number of the customer in n E.164 format.
              type: string
            timeZone:
              description: The timezone in IANA format.
              type: string
            address:
              description: The customer's delivery address
              type: object
              properties:
                lines:
                  description: The customer delivery address lines.
                  type: array
                  items:
                    type: string
                city:
                  description: The customer delivery city.
                  type: string
                country:
                  description: The customer delivery country.
                  type: string
                postcode:
                  description: The customer delivery postcode.
                  type: string
            isGuest:
              description: If the customer is a guest customer or not.
              type: boolean
        restaurant:
          description: The restaurant details
          type: object
          properties:
            id:
              description: The id of the restaurant that the order was placed at.
              type: string
            name:
              description: The name of the restaurant that the order was placed at.
              type: string
            postcode:
              description: The postcode of the restaurant that the order was placed at.
              type: string
        tenant:
          description: The tenant of the restaurant the order was placed at.
          type: string
        totalPrice:
          description: >-
            the total price of the order in the minor unit of the currency. E.g.
            if the uk this value would be in pence.
          type: number
          format: int
        placedDate:
          description: The datetime that the order was placed in ISO 8601 format.
          type: string
          format: date-time
        currentDueDate:
          description: >-
            The datetime that the order is due to be fulfilled in ISO 8601
            format.
          type: string
          format: date-time
        acceptedAt:
          description: The datetime that the order was accepted in ISO 8601 format.
          type: string
          format: date-time
        payOnFulfilment:
          description: Whether payment is completed on fulfilment of the order.
          type: boolean
        status:
          description: The current status of the order as known by cse ops.
          type: string
          enum:
            - Good,
            - Cancelled
            - Problematic
        state:
          description: The current state of the order as known by cse ops.
          type: string
          enum:
            - New,
            - Accepted
            - Cancelled
            - Problematic
        orderId:
          description: The id of the order.
          type: string
        friendlyOrderReference:
          description: The friendly id of the order.
          type: string
        partnerOrderReference:
          description: The reference identifier supplied by a partner for this order.
          type: string
        partnerId:
          description: The identifier of a partner for this order.
          type: string
        resolutionReason:
          description: The reason that an order has been resolved.
          type: string
    OrderSearchPagedOrderSearchResponseYaml:
      allOf:
        - $ref: '#/components/schemas/PagingPagedAfterOnlyCursorResponseYaml'
        - description: List of all matching orders
          type: object
          properties:
            orders:
              type: array
              items:
                $ref: '#/components/schemas/OrderSearchOrderSearchItemYaml'
      example:
        orders:
          - customer:
              emailAddress: bob@justeattakeaway.com
              phoneNumber: '+441234567890'
              timeZone: Europe/London
              address:
                lines:
                  - Address Line 1
                  - Address Line 2
                  - Address Line 3
                  - Address Line 4
                  - Address Line n
                city: Bristol
                country: UK
                postcode: BS1 1AA
              isGuest: true
            restaurant:
              id: '6401389'
              name: Best Burgers
              postcode: BS1 1AA
            tenant: uk
            totalPrice: 1234
            placedDate: '2021-05-26T09:54:05.863Z'
            currentDueDate: '2021-05-26T09:54:05.863Z'
            acceptedAt: '2021-05-26T09:54:05.863Z'
            payOnFulfilment: true
            status: Good
            state: New
            orderId: 724nicxtnekdkzgr1opseg
            friendlyOrderReference: '306721801'
            partnerOrderReference: 724nicxtnekdkzgr1opseg
            partnerId: '219'
            resolutionReason: some-reason
          - customer:
              emailAddress: alice@justeattakeaway.com
              phoneNumber: '+449876543210'
              timeZone: Europe/London
              address:
                lines:
                  - 1 Address Line
                  - 2 Address Line
                  - 3 Address Line
                  - 4 Address Line
                  - 5 Address Line
                city: Bristol
                country: UK
                postcode: BS41 1AA
              isGuest: true
            restaurant:
              id: '301389'
              name: Best Burgers
              postcode: BS1 1AA
            tenant: uk
            totalPrice: 1234
            placedDate: '2021-05-26T09:54:05.863Z'
            currentDueDate: '2021-05-26T09:54:05.863Z'
            acceptedAt: '2021-05-26T09:54:05.863Z'
            payOnFulfilment: true
            status: Good
            state: New
            orderId: 858nicxtnekdkzgr1opseg
            friendlyOrderReference: '404721801'
            partnerOrderReference: 858nicxtnekdkzgr1opseg
            partnerId: '213'
            resolutionReason: some-reason
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
    OrderdispatchwebhooksDiscountYaml:
      description: Discount identifiers collection for order or order item levels
      items:
        properties:
          offerId:
            description: Offer identifier
            type: string
          discountValue:
            description: Discount amount, in the minor unit of the currency
            type: integer
        required:
          - offerId
        type: object
      type: array
    OrderdispatchwebhooksNeworderforrestaurantYaml:
      description: A request to dispatch the order
      properties:
        orderId:
          description: The machine readable Id of the order
          type: string
        orderReference:
          description: >-
            A human readable reference to the order. This identifier is not
            guaranteed to be globally unique.
          type: string
        tenant:
          description: The tenant (country) of the restaurant the order was placed at
          type: string
        totalPrice:
          description: >-
            The total value of the items in an order including additional
            charges, discounts and tips, in the minor unit of the currency
          format: integer
          type: number
        currency:
          description: The currency of the items on the menu in ISO 4217 format
          type: string
        placedDate:
          description: The UTC date and time the order was placed by the customer
          format: date-time
          type: string
        acceptanceDeadline:
          description: >-
            The UTC date and time by which the order should be accepted or
            rejected
          format: date-time
          type: string
        status:
          description: Details of the order status
          properties:
            orderStatus:
              description: Status of order
              enum:
                - new
                - accepted
                - rejected
                - complete
                - cancelled
          required:
            - orderStatus
          type: object
        restaurant:
          description: Details of the restaurant at which the order has been placed
          properties:
            id:
              description: Restaurant Id
              type: string
          required:
            - id
          type: object
        payment:
          description: Details of how the order has been paid for
          properties:
            lines:
              description: >-
                A set of different options which have been used to contribute to
                the cost of the order
              items:
                properties:
                  value:
                    description: >-
                      The amount contributed to the total cost of the order
                      using this payment type, in the minor unit of the currency
                    format: integer
                    type: number
                  type:
                    description: >-
                      The type of payment option used. "card", "credit" and
                      "voucher" payment types have already been paid, while the
                      "cash" payment type is yet to be paid
                    enum:
                      - card
                      - cash
                      - credit
                      - voucher
                  lastFourCardDigits:
                    description: >-
                      If the type is "card", the last four digits of the number
                      of the card used. Omitted for any other type of payment
                    type: string
                required:
                  - value
                  - type
                type: object
              type: array
          required:
            - lines
          type: object
        customer:
          description: Details of the customer that has placed the order
          properties:
            maskedId:
              description: The masked Id of the customer
              type: string
            fullName:
              description: The customer full name
              type: string
            restaurantOrderCount:
              description: >-
                The customer's previous total number of orders made to this
                restaurants
              type: number
            totalOrderCount:
              description: >-
                The customer's previous total number of orders made to any
                restaurant
              type: number
            phoneNumber:
              description: Customer phone data
              properties:
                number:
                  description: >-
                    Customer phone number (will be phone masking number if
                    enabled)
                  type: string
                maskingCode:
                  description: >-
                    A masking code required when contacting the customer. If
                    null or empty, no masking code is required.
                  type: string
                  nullable: true
              required:
                - number
              type: object
          required:
            - maskedId
            - fullName
            - restaurantOrderCount
            - totalOrderCount
            - phoneNumber
          type: object
        fulfilment:
          description: Details of how and when the order should be fulfilled
          properties:
            time:
              description: Details of when the order should be fulfilled
              properties:
                date:
                  description: >-
                    The time at which the order is expected to be fulfilled.
                    This will be null when the asap flag is set to true.
                  format: date-time
                  type: string
                  nullable: true
                asap:
                  description: >-
                    A flag indicating whether the customer is expecting the
                    order to be fulfilled as soon as possible
                  type: boolean
              required:
                - asap
              type: object
            serviceType:
              description: Whether the order should be collected or delivered
              enum:
                - collection
                - delivery
                - dineIn
            dineInInfo:
              description: >-
                Information on how to fulfil the dine-in order. This will only
                be populated for dine-in orders.
              properties:
                tableNumber:
                  description: >-
                    Dine in table number. This will only be populated for
                    dine-in orders.
                  type: string
                  nullable: true
              required:
                - tableNumber
              type: object
            deliveryInfo:
              description: >-
                Information on how to fulfil the delivery order. This will only
                be populated for delivery orders.
              properties:
                location:
                  description: >-
                    Details of where the order should be delivered. This will
                    only be populated for delivery orders
                  properties:
                    address:
                      description: The address to which the order should be delivered
                      properties:
                        lines:
                          description: A collection of lines which make up the address
                          items:
                            type: string
                          type: array
                        locality:
                          description: The city or town of the address
                          type: string
                        postalCode:
                          description: The postal code of the address
                          type: string
                      required:
                        - lines
                        - postalCode
                      type: object
                    geolocation:
                      description: >-
                        Array of geolocation data about where the order should
                        be delivered, in format [latitude, longitude]
                      minItems: 2
                      maxItems: 2
                      items:
                        type: number
                      type: array
                  required:
                    - address
                    - geolocation
                  type: object
              required:
                - location
              type: object
              nullable: true
          required:
            - time
            - serviceType
          type: object
        items:
          $ref: '#/components/schemas/OrderdispatchwebhooksTopLevelItemYaml'
        priceBreakdown:
          description: A breakdown of the cost of an order
          properties:
            items:
              description: >-
                The total value of all items in the order, in the minor unit of
                the currency
              format: integer
              type: number
            charges:
              description: Details of any extra charges applied to the order
              items:
                properties:
                  description:
                    description: Charge description
                    type: string
                  type:
                    description: Charge type details
                    enum:
                      - service
                      - delivery
                      - bag
                      - itemDepositGroup
                  name:
                    description: Charge name
                    type: string
                  amount:
                    description: Charge amount in the minor unit of the currency
                    type: number
                required:
                  - type
                  - description
                  - amount
              type: array
            discounts:
              description: Details of any discounts applied to the order
              items:
                properties:
                  description:
                    description: Discount description
                    type: string
                  type:
                    description: Discount type details
                    enum:
                      - restaurant
                      - stampCard
                  name:
                    description: Discount name
                    type: string
                  amount:
                    description: Discount amount in the minor unit of the currency
                    type: number
                required:
                  - type
                  - description
                  - amount
              type: array
            tips:
              description: Details of any extra charges applied to the order
              items:
                properties:
                  description:
                    description: Tips description
                    type: string
                  type:
                    description: Tips details
                    enum:
                      - driver
                  name:
                    description: Tips name
                    type: string
                  amount:
                    description: Tips amount in the minor unit of the currency
                    type: number
                required:
                  - type
                  - description
                  - amount
              type: array
          required:
            - items
            - charges
            - discounts
          type: object
        customerNotes:
          description: Details of notes provided by the customer for the order
          properties:
            order:
              description: Customer order notes details
              type: string
            kitchen:
              description: Customer kitchen notes details
              type: string
              nullable: true
            delivery:
              description: Customer delivery notes details
              type: string
              nullable: true
          required:
            - order
          type: object
        restrictions:
          description: Details of any restrictions that apply to the order
          properties:
            containsAlcohol:
              description: True if order contains items with alcohol
              type: boolean
          required:
            - containsAlcohol
          type: object
          nullable: true
        discounts:
          $ref: '#/components/schemas/OrderdispatchwebhooksDiscountYaml'
        source:
          description: just order source core vs white label
          type: string
      required:
        - orderId
        - orderReference
        - tenant
        - status
        - currency
        - placedDate
        - acceptanceDeadline
        - restaurant
        - payment
        - customer
        - fulfilment
        - items
        - priceBreakdown
        - source
      type: object
      example:
        orderId: 1234A
        orderReference: c9b3719630244b25b4664c486bafdd68
        tenant: uk
        totalPrice: 120
        currency: GBP
        placedDate: '2020-03-15T14:00:28.384Z'
        acceptanceDeadline: '2020-03-15T14:00:28.384Z'
        status:
          orderStatus: new
        restaurant:
          id: c9b3719630244b25b4664c486bafdd68
        payment:
          lines:
            - value: 120
              type: card
              lastFourDigits: 5348
            - value: 100
              type: credit
        customer:
          maskedId: c9b3719630244b25b4664c486bafdd68
          fullName: Bruce Wayne
          restaurantOrderCount: 10
          totalOrderCount: 5
          phoneNumber:
            number: '+441234567890'
            maskingCode: '9999999'
        fulfilment:
          time:
            date: '2020-03-15T14:00:28.384Z'
            asap: true
          serviceType: collection
          dineInInfo:
            tableNumber: '11'
          deliveryInfo:
            location:
              address:
                lines:
                  - Oldridge Road
                locality: London
                postalCode: SW12 8PW
              geolocation:
                - 51.4484
                - -0.1504
        items:
          - id: '30471'
            name: Vegan Whopper Cheese
            kitchenNumber: 124q
            unitPrice: 0
            quantity: 1
            totalPrice: 965
            unitDepositAmount: 80
            discounts:
              - offerId: '1117395'
                discountValue: 100
              - offerId: cb4664c486bafdd68c9b3719630244b2
                discountValue: 50
            items:
              - id: '7234'
                name: No Vegan Mayo
                quantity: 1
                kitchenNumber: 124q
                unitPrice: 165
                items: []
              - id: '7395'
                name: No Vegan Cheese
                quantity: 4
                kitchenNumber: 124q
                unitPrice: 200
                items: []
        priceBreakdown:
          items: 100
          charges:
            - description: charge service description
              type: service
              amount: 101
              name: service charge
            - description: delivery service description
              type: delivery
              amount: 102
              name: delivery charge
            - description: Deposit £0.20 x 2
              type: itemDepositGroup
              amount: 20
              name: Deposit £0.20 x 2
          discounts:
            - description: discounts restaurant description
              type: restaurant
              amount: 101
            - description: discounts stampCard description
              type: stampCard
              amount: 102
          tips:
            - description: driver tips
              type: driver
              amount: 150
        customerNotes:
          order: Customer order notes details
          kitchen: Customer kitchen notes details
          delivery: Customer delivery notes details
        restrictions:
          containsAlcohol: false
        discounts:
          - offerId: '7395111'
            discountValue: 150
          - offerId: c9b3719630244b25b4664c486bafdd68
            discountValue: 90
        source: justeat
    OrderdispatchwebhooksOrderItemYaml:
      items:
        properties:
          id:
            description: A machine readable ID for the item
            type: string
          name:
            description: A human readable name for the item
            type: string
          kitchenNumber:
            description: The number used by the kitchen to refer to the item
            type: string
            nullable: true
          unitPrice:
            description: The unit price of the item, in the minor unit of the currency
            type: integer
          quantity:
            description: The quantity of the item that has been ordered
            type: integer
          items:
            $ref: '#/components/schemas/OrderdispatchwebhooksOrderItemYaml'
          unitDepositAmount:
            description: >-
              The cost of any deposit for an item, in the minor unit of the
              currency
            type: integer
            format: money
        required:
          - id
          - name
          - unitPrice
          - quantity
        type: object
      type: array
    OrderdispatchwebhooksTopLevelItemYaml:
      items:
        properties:
          id:
            description: A machine readable ID for the item
            type: string
          name:
            description: A human readable name for the item
            type: string
          kitchenNumber:
            description: The number used by the kitchen to refer to the item
            type: string
            nullable: true
          unitPrice:
            description: The unit price of the item, in the minor unit of the currency
            type: integer
            format: money
          totalPrice:
            description: >-
              The total price of the item, including all sub-items, in the minor
              unit of the currency
            type: integer
            format: money
          totalCombinedPrice:
            description: >-
              The total price of all instances of the item, including all
              sub-items, in the minor unit of the currency
            type: integer
            format: money
          quantity:
            description: The quantity of the item that has been ordered
            type: integer
          items:
            $ref: '#/components/schemas/OrderdispatchwebhooksOrderItemYaml'
          discounts:
            $ref: '#/components/schemas/OrderdispatchwebhooksDiscountYaml'
          unitDepositAmount:
            description: >-
              The cost of any deposit for an item, in the minor unit of the
              currency
            type: integer
            format: money
        required:
          - id
          - name
          - unitPrice
          - totalPrice
          - totalCombinedPrice
          - quantity
        type: object
      type: array
    OrderitemsOrderItemAddedYaml:
      description: >-
        The substitute item. If corresponding `OrderItemRemoved` have no
        substitute is purely out of stock, this object will be null and 'added'
        array will be empty
      type: object
      nullable: true
      required:
        - menuItemId
        - menuItemVariationId
      properties:
        menuItemId:
          description: The item id from the menu for price lookup
          type: string
        menuItemVariationId:
          description: The item variation id from the menu for price lookup
          type: string
    OrderitemsOrderItemModificationYaml:
      description: >-
        An item modification to mark item as out of stock and optionally specify
        a substitute
      type: object
      required:
        - removed
      properties:
        removed:
          $ref: '#/components/schemas/OrderitemsOrderItemRemovedYaml'
        added:
          type: array
          items:
            $ref: '#/components/schemas/OrderitemsOrderItemAddedYaml'
    OrderitemsOrderItemModificationRejectionYaml:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          description: The rejection reason.
          type: string
          enum:
            - badRequestFormat
            - orderNotFound
            - removedItemNotFound
            - addedItemNotFound
            - addedItemPriceIsGreaterThanRemoved
        removedOrderItemId:
          description: >-
            The id of the removed item. Supplied when reason is
            removedItemNotFound or addedItemPriceIsGreaterThanRemoved.
          type: string
        addedMenuItemId:
          description: >-
            The id of the added menu item. Supplied when reason is
            addedItemNotFound or addedItemPriceIsGreaterThanRemoved.
          type: string
        addedItemVariationId:
          description: >-
            The id of the added menu item variation. Supplied when reason is
            addedItemNotFound or addedItemPriceIsGreaterThanRemoved.
          type: string
        priceDifference:
          description: >-
            Price difference in the minor unit of the currency used along with
            addedItemPriceIsGreaterThanRemoved status reason.
          type: number
          format: integer
        currency:
          description: >-
            The currency of the items on the menu in ISO 4217 format, i.e. GBP,
            EUR or AUD used along with addedItemPriceIsGreaterThanRemoved status
            reason.
          type: string
      example:
        errorCode: addedItemPriceIsGreaterThanRemoved
        removedOrderItemId: xyz
        addedMenuItemId: abc
        addedItemVariationId: def
        priceDifference: 7500
        currency: GBP
    OrderitemsOrderItemRemovedYaml:
      description: A missing item
      type: object
      required:
        - orderItemId
      properties:
        orderItemId:
          description: The id of the removed order item
          type: string
    OrderpadAppAppTypeYaml:
      description: Application type
      enum:
        - Orderpad
        - OrdertrackerDroid
        - OrdertrackerTouch
        - Orderbox
        - OrderDeliveryService
        - OrderpadDroid
        - OrderpadTouch
        - None
      type: string
    OrderpadAppApproveCancellationQueryYaml:
      properties:
        fee:
          description: Approved fee
          nullable: true
          format: decimal
          type: number
        notes:
          description: Notes about this cancellation
          nullable: true
          type: string
      type: object
    OrderpadAppArtifactYaml:
      properties:
        id:
          description: The id of the artifact.
          nullable: false
          type: string
        artifactVersion:
          description: The version of the artifact.
          nullable: true
          type: string
        createdAt:
          description: The date and time the artifact was created.
          nullable: false
          format: date-time
          type: string
      type: object
    OrderpadAppAttemptedDeliveryQueryYaml:
      description: Details of any attempted delivery query attached to the order
      type: object
      properties:
        response:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppAttemptedDeliveryResponseYaml'
        timeStamp:
          description: DateTime that the query was created in ISO 8601 format
          type: string
          format: date-time
        requestType:
          description: Type of attempted delivery request
          enum:
            - problem_with_address
            - no_answer
          type: string
          nullable: true
        resolution:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppAttemptedDeliveryResolutionYaml'
    OrderpadAppAttemptedDeliveryRequestYaml:
      properties:
        reasonCode:
          description: Reason for requesting attempted delivery
          enum:
            - problem_with_address
            - no_answer
          type: string
      type: object
    OrderpadAppAttemptedDeliveryResolutionYaml:
      description: The restaurants resolution to the query
      properties:
        redeliveryTime:
          description: Estimated redelivery time in ISO 8601 format
          nullable: true
          format: date-time
          type: string
        cancellationReason:
          description: Reason for cancelling order
          nullable: true
          enum:
            - new_address_not_within_area
            - unable_to_reprepare
            - driver_not_available
            - area_unsafe
            - customer_doesnt_want_anymore
          type: string
        redeliveryStatus:
          description: Status of the redelivery request
          nullable: true
          enum:
            - driver_at_address
            - repreparing
          type: string
        hasBeenMarkedAsOnItsWay:
          description: Flag to indicate whether redelivery is on it's way
          type: boolean
      type: object
    OrderpadAppAttemptedDeliveryResolutionCancellationRequestYaml:
      properties:
        reasonCode:
          description: The reason the order has been cancelled
          enum:
            - new_address_not_within_area
            - unable_to_reprepare
            - driver_not_available
            - area_unsafe
            - customer_doesnt_want_anymore
          type: string
      type: object
    OrderpadAppAttemptedDeliveryResolutionRedeliveryRequestYaml:
      properties:
        status:
          description: New status of attempted delivery
          nullable: true
          enum:
            - driver_at_address
            - repreparing
          type: string
        newDueDate:
          description: >-
            New date and time in ISO 8601 format the order is due to be
            delivered
          nullable: true
          format: date-time
          type: string
      type: object
    OrderpadAppAttemptedDeliveryResponseYaml:
      description: The customers response to the query
      properties:
        isViewed:
          description: Has the response been viewed
          type: boolean
        responseType:
          description: Response code from the customer for attempted delivery
          nullable: true
          enum:
            - response
            - already_delivered
          type: string
        message:
          description: Response message from customer
          nullable: true
          type: string
      type: object
    OrderpadAppBadItemYaml:
      properties:
        name:
          description: Name of the item
          nullable: true
          type: string
        unitPrice:
          description: Price of a single item in local currency
          format: decimal
          type: number
        quantity:
          description: Quantity of bad items
          format: int32
          type: integer
        totalCost:
          description: Total cost of all bad items
          format: decimal
          type: number
      type: object
    OrderpadAppBadItemClaimYaml:
      properties:
        status:
          description: Current status of the claim
          $ref: '#/components/schemas/OrderpadAppBadItemClaimStatusYaml'
        issues:
          description: Bad item issues
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppBadItemsGroupedByIssueYaml'
          type: array
        id:
          description: Id of the claim
          nullable: true
          type: string
        totalCost:
          description: Total cost of the claim in local currency
          format: decimal
          type: number
        refundRefusedReasonCode:
          description: If claim is refused, the reason for refusal
          nullable: true
          type: string
      type: object
    OrderpadAppBadItemClaimStatusYaml:
      description: Current status of a bad item claim
      enum:
        - Pending
        - Viewed
        - RefundAccepted
        - RefundRefused
      type: string
    OrderpadAppBadItemsGroupedByIssueYaml:
      properties:
        items:
          description: Group of items which have the same issue type
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppBadItemYaml'
          type: array
        issue:
          description: Bad item issue type
          nullable: true
          enum:
            - Missing
            - Cold
            - Damaged
          type: string
      type: object
    OrderpadAppBringOnlineRequestYaml:
      properties:
        comment:
          description: Any additional information
          nullable: true
          type: string
      type: object
    OrderpadAppCancellationInfoYaml:
      description: Details of any cancellation attached to the order
      properties:
        canRequestCompensation:
          description: Can the restaurant claim compensation for this cancellation
          type: boolean
        restaurantTransaction:
          nullable: true
          $ref: >-
            #/components/schemas/OrderpadAppCancellationRestaurantTransactionYaml
        hasRequestedCompensation:
          description: Has the restaurant claimed compensation for this cancellation
          type: boolean
        reason:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppCancellationReasonYaml'
        initiatedBy:
          description: Whether cancellation has been initiated by restaurant or consumer
          $ref: '#/components/schemas/OrderpadAppCancellationInitiatedByYaml'
        restaurantAware:
          description: Is restaurant already aware of the cancellation
          type: boolean
      type: object
    OrderpadAppCancellationInitiatedByYaml:
      description: Who initiated the cancellation
      enum:
        - Unknown
        - Restaurant
        - Customer
        - System
      type: string
    OrderpadAppCancellationQueryResponseYaml:
      type: object
      properties:
        resolution:
          $ref: '#/components/schemas/OrderpadAppCancellationResolutionYaml'
        state:
          description: Cancellation query outcome
          enum:
            - New
            - Offered
            - Declined
            - Approved
          type: string
          nullable: true
        createdAt:
          description: Cancellation query creation date and time in ISO 8601 format
          type: string
          format: date-time
        reasonCode:
          description: Reason for order cancellation
          enum:
            - rest_cancelled_customer_requested
            - rest_cancelled_customer_absent
            - rest_cancelled_out_of_stock
            - rest_cancelled_drivers_unavailable
            - rest_cancelled_fake_order
            - rest_cancelled_too_busy
            - rest_cancelled_other
          type: string
          nullable: true
        comments:
          description: Additional comments
          type: string
          nullable: true
        orderId:
          description: The id of the order
          type: string
          nullable: true
        policyResult:
          $ref: '#/components/schemas/OrderpadAppPolicyResultYaml'
    OrderpadAppCancellationReasonYaml:
      description: Reason for cancellation
      properties:
        description:
          description: Any additional comments
          nullable: true
          type: string
        code:
          description: Reason for order cancellation
          nullable: true
          enum:
            - rest_cancelled_out_of_stock
            - rest_cancelled_drivers_unavailable
            - rest_cancelled_customer_requested
            - rest_cancelled_customer_absent
            - rest_cancelled_fake_order
            - rest_cancelled_other
            - cust_cancelled_delivery_too_long
            - cust_cancelled_made_mistake
            - cust_cancelled_other
            - cust_cancelled_changed_mind
            - deleted_system_error
            - deleted_test_order
            - deleted_rejected_by_restaurant
          type: string
      type: object
    OrderpadAppCancellationResolutionYaml:
      description: Resolution of this cancellation query
      properties:
        feeApplied:
          description: Approved amount
          format: decimal
          type: number
        by:
          description: Role of cancellation requester
          nullable: true
          enum:
            - Agent
            - Restaurant
            - System
          type: string
        userName:
          description: User name who created this cancellation
          nullable: true
          type: string
        at:
          description: Creation date and time of the cancellation in ISO 8601 format
          format: date-time
          type: string
        notes:
          description: Additional notes
          nullable: true
          type: string
        state:
          description: State of the cancellation resolution
          nullable: true
          enum:
            - Approved
          type: string
      type: object
    OrderpadAppCancellationRestaurantTransactionYaml:
      description: >-
        Potential compensation or fee applied to the restaurant for the
        cancellation
      properties:
        percentage:
          description: The percentage of the order value of the transaction
          format: decimal
          type: number
        amount:
          description: The total amount of the transaction
          format: decimal
          type: number
        type:
          description: The type of cancellation transaction
          $ref: >-
            #/components/schemas/OrderpadAppCancellationRestaurantTransactionTypeYaml
      type: object
    OrderpadAppCancellationRestaurantTransactionTypeYaml:
      description: The transaction type
      enum:
        - Unknown
        - Compensation
        - Fee
      type: string
    OrderpadAppClientOrderStateYaml:
      description: The state of the client order
      enum:
        - AtCounter
        - InKitchen
        - Ready
        - Collected
        - WithDriver
        - Delivered
        - RejectedTooBusy
        - RejectedTooFar
        - Cancelled
        - Received
        - RejectedNoDriverAvailable
        - RejectedMenuItemsOutOfStock
        - RejectedOther
        - TestOrderDelete
        - CancelledAcknowledged
        - CancelledUnacknowledged
        - CancelledDismissed
        - Complete
      type: string
    OrderpadAppCompensationReasonYaml:
      properties:
        description:
          description: Additional description
          nullable: true
          type: string
        comments:
          description: Additional comments
          nullable: true
          type: string
        code:
          description: Compensation reason code
          $ref: '#/components/schemas/OrderpadAppCompensationReasonCodeYaml'
      type: object
    OrderpadAppCompensationReasonCodeYaml:
      description: Compensation reason code
      enum:
        - Unknown
        - NotSet
        - BeingPrepared
        - OnItsWay
        - Delivered
      type: string
    OrderpadAppCreateAuthTokenRequestYaml:
      description: Request for Orderpad token creation
      type: object
      required:
        - emailAddress
        - loginCode
      properties:
        emailAddress:
          description: Restaurant owner email address
          type: string
        loginCode:
          description: Login code obtained on Orderpad Login
          type: string
        pushNotificationId:
          description: Push Notification Id
          type: string
      example:
        emailAddress: myemail@justeattakeway.com
        loginCode: X874C5
        pushNotificationId: '1234'
    OrderpadAppCreateAuthTokenResponseYaml:
      description: Orderpad authentication token
      type: object
      required:
        - orderpadToken
      properties:
        orderpadToken:
          description: Orderpad authentication token
          type: string
      example:
        orderpadToken: 1234abc
    OrderpadAppCreateCancellationQueryYaml:
      properties:
        comments:
          description: Additional comments
          nullable: true
          type: string
        reasonCode:
          description: Reason for order cancellation
          nullable: true
          enum:
            - rest_cancelled_customer_requested
            - rest_cancelled_customer_absent
            - rest_cancelled_out_of_stock
            - rest_cancelled_drivers_unavailable
            - rest_cancelled_fake_order
            - rest_cancelled_too_busy
            - rest_cancelled_other
          type: string
      type: object
    OrderpadAppDeliveryDriverInfoYaml:
      description: Delivery driver information
      properties:
        arrivalTimeAtRestaurant:
          description: The ISO-8601 datetime arrival time of the driver
          nullable: true
          format: date-time
          type: string
        estimatedArrivalTime:
          description: The ISO-8601 datetime estimated arrival of the driver
          nullable: true
          format: date-time
          type: string
        deliveryState:
          description: Current state of the delivery
          nullable: true
          enum:
            - Accepted
            - TransmissionFailed
          type: string
        driverName:
          description: The driver's first name
          nullable: true
          type: string
        driverContactNumber:
          description: The driver's contact telephone number
          nullable: true
          type: string
        dynamicArrivalEstimate:
          description: The ISO-8601 datetime dynamic estimated arrival of the driver
          nullable: true
          format: date-time
          type: string
      type: object
    OrderpadAppDueTimeChangeYaml:
      properties:
        newTimeDue:
          description: New DateTime of the order due in ISO 8601 format
          format: date-time
          type: string
      type: object
    OrderpadAppEposStateYaml:
      description: Current state of sending Order to EPOS system
      enum:
        - None
        - Failed
        - FailedAcknowledged
        - FailedDismissed
      type: string
    OrderpadAppGeoLocationYaml:
      description: Location details
      properties:
        speed:
          description: The speed of travel
          format: double
          type: number
        latitude:
          description: The latitude component of the location
          nullable: true
          format: double
          type: number
        heading:
          description: The direction of travel
          format: double
          type: number
        accuracy:
          description: How accurate the location is
          format: double
          type: number
        longitude:
          description: The longitude component of the location
          nullable: true
          format: double
          type: number
      type: object
    OrderpadAppIoTClientUpdateAttributesRequestYaml:
      description: The client's attributes to be replaced
      properties:
        attributes:
          description: Key-value pairs of client's attributes be updated.
          type: object
          additionalProperties:
            type: string
      type: object
    OrderpadAppIoTCredentialsResponseYaml:
      type: object
      properties:
        privateKey:
          description: Private key for signing device's certificate
          nullable: false
          type: string
        deviceCertificate:
          description: Device's certificate identifying the client
          nullable: false
          type: string
        certificateAuthority:
          description: The certificate authority for identifying the client
          nullable: false
          type: string
        expiresAt:
          description: Expiration date of the device certificate
          nullable: false
          type: string
          format: date-time
        createdAt:
          description: Creation date of the device certificate
          nullable: false
          type: string
          format: date-time
        loginUrl:
          description: IoT broker's login URL
          nullable: false
          type: string
      example:
        privateKey: a6f7b874ea69329372ad75353314d7bcacd8c0be365023dab195bcac015d6009
        deviceCertificate: a6f7b874ea69329372ad75353314d7bcacd8c0be365023dab195bcac015d6009
        certificateAuthority: a6f7b874ea69329372ad75353314d7bcacd8c0be365023dab195bcac015d6009
        expiresAt: '2021-01-01T00:00:00.000Z'
        createdAt: '2020-01-01T00:00:00.000Z'
        loginUrl: https://login.example.com
    OrderpadAppLateOrderCompensationOptionYaml:
      properties:
        isRecommended:
          description: Whether this option is the recommended option
          type: boolean
        amount:
          description: Cost of the option in local currency
          format: decimal
          type: number
      type: object
    OrderpadAppLateOrderCompensationQueryYaml:
      description: Details of any late order compensation query attached to the order
      properties:
        isViewed:
          description: Has this compensation query been viewed
          type: boolean
        compensationOptions:
          description: List of possible options for compensation
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppLateOrderCompensationOptionYaml'
          type: array
        queryId:
          description: The ID of the late order compensation query
          nullable: true
          type: string
        response:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppLateOrderCompensationResponseYaml'
      type: object
    OrderpadAppLateOrderCompensationResolutionRequestYaml:
      properties:
        acceptedAmount:
          description: Accepted compensation amount
          nullable: true
          format: double
          type: number
        isAccepted:
          description: Is compensation accepted
          type: boolean
        rejectedReasonCode:
          description: Reason code for rejection
          nullable: true
          enum:
            - ExtraItem
            - StuckInTraffic
            - BusierThanExpected
            - BadWeather
            - UnexpectedProblems
          type: string
      type: object
    OrderpadAppLateOrderCompensationResponseYaml:
      description: The restaurants response to the late order compensation query
      properties:
        acceptedAmount:
          description: The amount of compensation if accepted
          nullable: true
          format: decimal
          type: number
        isAccepted:
          description: Has the late order compensation request been accepted
          type: boolean
        rejectedReasonCode:
          description: The rejection reason if not accepted
          nullable: true
          enum:
            - ExtraItem
            - StuckInTraffic
            - BusierThanExpected
            - BadWeather
            - UnexpectedProblems
          type: string
      type: object
    OrderpadAppLateOrderInfoYaml:
      description: Details of any late order query attached to the order
      properties:
        isLateOrder:
          description: Is there a late order request
          type: boolean
        lateOrderProcessed:
          description: Has the late order request been processed by the restaurant
          type: boolean
      type: object
    OrderpadAppLateOrderRequestYaml:
      properties:
        lateOrderStatus:
          description: Reason to adding minutes
          nullable: true
          enum:
            - None
            - Preparing
            - OnItsWay
            - Delivered
          type: string
        additionalMinutesToAdd:
          description: Amount of minutes added
          nullable: true
          format: int32
          type: integer
      type: object
    OrderpadAppListRolloutYaml:
      properties:
        id:
          description: The id of the release.
          nullable: true
          type: string
        devices:
          description: The ids of the devices to be rolled out.
          nullable: false
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/OrderpadAppRolloutDeviceYaml'
              - type: string
        status:
          description: The status of the release.
          nullable: false
          $ref: '#/components/schemas/OrderpadAppReleaseRolloutStatusYaml'
      type: object
    OrderpadAppLoginSessionRequestYaml:
      description: Request from restaurant owner to log in the self onboarding UI
      type: object
      required:
        - emailAddress
      properties:
        emailAddress:
          description: Restaurant owner email address
          type: string
      example:
        emailAddress: myemail@justeattakeway.com
    OrderpadAppMenuCategoryYaml:
      properties:
        description:
          description: Description of category
          nullable: true
          type: string
          readOnly: true
        name:
          description: Name of category
          nullable: true
          type: string
          readOnly: true
        productGroups:
          description: Product group
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/OrderpadAppProductGroupYaml'
          nullable: true
      type: object
    OrderpadAppMergedMenuCardYaml:
      description: >-
        Menu items of the restaurant with offline/online statuses grouped by
        category
      properties:
        categories:
          description: >-
            Menu items of the restaurant with offline/online statuses grouped by
            category
          nullable: true
          additionalProperties:
            $ref: '#/components/schemas/OrderpadAppMenuCategoryYaml'
          type: object
      type: object
    OrderpadAppMergedMenuResponseYaml:
      properties:
        menuCard:
          $ref: '#/components/schemas/OrderpadAppMergedMenuCardYaml'
      type: object
    OrderpadAppMergedProductYaml:
      properties:
        ids:
          description: Deprecated, not in use
          type: array
          deprecated: true
          items:
            format: int32
            type: integer
          nullable: true
        name:
          description: Product name
          nullable: true
          type: string
        isOffline:
          description: Is this product offline?
          type: boolean
        id:
          description: The id of the product
          nullable: true
          type: string
      type: object
    OrderpadAppMissingItemYaml:
      properties:
        itemReference:
          description: Product reference of missing item
          nullable: true
          type: string
        refundAmount:
          description: Total cost of missing item
          format: decimal
          type: number
        name:
          description: Name of the missing item
          nullable: true
          type: string
        quantity:
          description: Number of items missing
          format: int32
          type: integer
      type: object
    OrderpadAppMissingItemClaimYaml:
      properties:
        status:
          description: Current status of the missing item claim
          $ref: '#/components/schemas/OrderpadAppMissingItemClaimStatusYaml'
        totalAmount:
          description: Total cost of the claim
          format: decimal
          type: number
        id:
          description: Id of the missing item claim
          nullable: true
          type: string
        missingItems:
          description: Items that are missing
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppMissingItemYaml'
          type: array
        totalNumberItems:
          description: Total quantity of items in the claim
          format: int32
          type: integer
        refundRefusedReasonCode:
          description: Reason for refusing if status is refused
          nullable: true
          type: string
      type: object
    OrderpadAppMissingItemClaimStatusYaml:
      description: Status of missing item claim
      enum:
        - Unknown
        - Pending
        - Viewed
        - RefundAccepted
        - RefundRefused
      type: string
    OrderpadAppOfflineProductsResponseYaml:
      properties:
        offlineProducts:
          description: Array of men items which are offline currently
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppOrderpadOfflineProductYaml'
          type: array
      type: object
    OrderpadAppOptimizelyDataYaml:
      properties:
        cdnUrl:
          description: Location of the Optimizely data file
          nullable: true
          type: string
        dataFileRevision:
          description: The index of the Optimizely revision
          format: int32
          type: integer
      type: object
    OrderpadAppOrderHistoryItemYaml:
      properties:
        detail:
          description: Additional information about status update
          nullable: true
          type: string
        orderState:
          description: State order was set to
          $ref: '#/components/schemas/OrderpadAppClientOrderStateYaml'
        occurredAt:
          description: ISO 8601 Date/Time of status update
          format: date-time
          type: string
        updatedBy:
          description: User who made the status update
          nullable: true
          type: string
      type: object
    OrderpadAppOrderItemYaml:
      properties:
        id:
          description: Basket Id of the order item
          nullable: true
          type: string
        orderItemAccessories:
          description: Array of accessories for this item
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppOrderItemAccessoryYaml'
          type: array
        totalPrice:
          description: Total price of this item
          format: decimal
          type: number
        menuIdentifier:
          description: Just Eat menu identifier
          nullable: true
          type: string
        menuNumber:
          description: Just Eat menu number
          nullable: true
          type: string
        itemReference:
          description: >-
            Item reference uniquely identifying a product on the menu but not
            basket instance of a product
          nullable: true
          type: string
        quantity:
          description: Quantity of the item
          format: int32
          type: integer
        comment:
          description: Additional comments
          nullable: true
          type: string
        basketIds:
          description: >-
            Array of basket id's that make up the item. Can be multiple due to
            Zeus' grouping of items
          nullable: true
          items:
            type: string
          type: array
        name:
          description: Name of the item
          nullable: true
          type: string
        productTypeId:
          description: Just Eat product type id
          format: int32
          type: integer
        orderItems:
          description: Array of sub items for this item
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppOrderItemYaml'
          type: array
        productCategory:
          description: Just Eat product category
          nullable: true
          type: string
      type: object
    OrderpadAppOrderItemAccessoryYaml:
      properties:
        name:
          description: Name of the accessory
          nullable: true
          type: string
        id:
          description: Id of the accessory
          nullable: true
          type: string
        itemReference:
          description: >-
            Item reference uniquely identifying a product on the menu but not
            basket instance of a product
          nullable: true
          type: string
        quantity:
          description: Quantity of accessories
          format: int32
          type: integer
        accessoryName:
          description: Name of the accessory
          nullable: true
          type: string
        groupId:
          description: Group id of the accessory
          format: int32
          type: integer
        totalPrice:
          description: Total price of the accessory
          format: decimal
          type: number
      type: object
    OrderpadAppOrderPadClientOrderYaml:
      properties:
        postcode:
          description: Customer postcode
          nullable: true
          type: string
        previousOrdersToRestaurant:
          description: Number of previous orders by the customer to this restaurant
          nullable: true
          type: string
        asSoonAsPossible:
          description: Will be false if order was a preorder
          type: boolean
        orderItems:
          description: A list of order items
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppOrderItemYaml'
          type: array
        id:
          description: Id used to identify the order in Zeus
          nullable: true
          type: string
        phone:
          description: >-
            Customer phone number (will be phone masking number in markets when
            enabled)
          nullable: true
          type: string
        rdsPickupTime:
          description: ISO 8601 Date/Time when order will be picked up by RDS partner
          nullable: true
          format: date-time
          type: string
        customerId:
          description: Platform customer id
          nullable: true
          type: string
        timeDue:
          description: Current agreed delivery time of the order
          format: date-time
          type: string
        addressLines:
          description: Customer address
          nullable: true
          items:
            type: string
          type: array
        cancellationInfo:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppCancellationInfoYaml'
        missingItemClaims:
          description: A list of missing item claims attached to the order
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppMissingItemClaimYaml'
          type: array
        lateOrderInfo:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppLateOrderInfoYaml'
        previousOrders:
          description: Number of previous Just Eat orders by the customer
          nullable: true
          type: string
        city:
          description: Customer city
          nullable: true
          type: string
        prepareOrderFor:
          description: ISO 8601 Date/Time when order should be prepared for
          nullable: true
          format: date-time
          type: string
        startOrderPreparationAt:
          description: ISO 8601 Date/Time for restaurant to start preparing the order
          nullable: true
          format: date-time
          type: string
        location:
          description: Geo location of the customers address
          nullable: true
          $ref: '#/components/schemas/OrderpadAppGeoLocationYaml'
        sourcePartner:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppPartnerInfoYaml'
        deliveryDriverUsername:
          description: Delivery drivers user name (usually their phone number)
          nullable: true
          type: string
        phoneMaskingCode:
          description: >-
            Code to use when calling customer phone masking number about this
            order
          nullable: true
          type: string
        paymentInfo:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppPaymentInfoYaml'
        name:
          description: Customer name
          nullable: true
          type: string
        deliveredAt:
          description: ISO 8601 Date/Time order was delivered
          nullable: true
          format: date-time
          type: string
        estimatedHandoverTimeInSeconds:
          description: >-
            How long until order needs to be handed over to driver in seconds
            (RDS only)
          format: int32
          type: integer
        orderHistory:
          description: >-
            Ordered history of status updates to the order and when they
            happened
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppOrderHistoryItemYaml'
          type: array
        notes:
          description: General order notes
          nullable: true
          type: string
        preferredTimeDue:
          description: Current agreed delivery time of the order
          format: date-time
          type: string
        estimatedDeliveryTimeInSeconds:
          description: How long until order will be delivered in seconds (RDS only)
          format: int32
          type: integer
        badItemClaims:
          description: A list of bad item claims attached to the order
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppBadItemClaimYaml'
          type: array
        lateOrderCompensationQuery:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppLateOrderCompensationQueryYaml'
        deliveryDriverInfo:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppDeliveryDriverInfoYaml'
        restaurantInformation:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppRestaurantInfoYaml'
        restaurantId:
          description: Restaurant Id of the order
          nullable: true
          type: string
        receivedAt:
          description: ISO 8601 Date/Time order was paid
          format: date-time
          type: string
        acceptedAt:
          description: ISO 8601 Date/Time order was accepted by the restaurant
          format: date-time
          type: string
        eposState:
          description: Current state of sending the order to the restaurants EPOS system
          $ref: '#/components/schemas/OrderpadAppEposStateYaml'
        modernId:
          description: Just Eat modern order id
          nullable: true
          type: string
        deliveryNote:
          description: Delivery specific notes
          nullable: true
          type: string
        externalCustomerId:
          description: Customer id restaurants can use to identify customer
          nullable: true
          type: string
        customerNote:
          description: Customer added notes
          nullable: true
          type: string
        attemptedDeliveryQuery:
          nullable: true
          $ref: '#/components/schemas/OrderpadAppAttemptedDeliveryQueryYaml'
        cancelledAt:
          description: ISO 8601 Date/Time order was cancelled
          format: date-time
          type: string
        isPreorder:
          description: Whether order is a preorder
          type: boolean
        acceptedFor:
          description: ISO 8601 Date/Time time due at the point of acceptance
          format: date-time
          type: string
        isRdsOrder:
          description: Will be true if delivery is being arranged by Just Eat
          type: boolean
        orderState:
          description: Current state of the order
          $ref: '#/components/schemas/OrderpadAppClientOrderStateYaml'
        withDriverAt:
          description: ISO 8601 Date/Time order was handed over to driver
          nullable: true
          format: date-time
          type: string
        orderType:
          description: Type of order (collection or delivery)
          $ref: '#/components/schemas/OrderpadAppOrderTypeYaml'
      type: object
    OrderpadAppOrderStateChangeYaml:
      required:
        - newState
      properties:
        newState:
          description: New order state
          $ref: '#/components/schemas/OrderpadAppClientOrderStateYaml'
        timeAcceptedFor:
          description: >-
            If accepting order what date time (with offset) are you accepting it
            for
          format: date-time
          type: string
      type: object
    OrderpadAppOrderTypeYaml:
      description: Type of order
      enum:
        - Collection
        - Delivery
        - Unknown
      type: string
    OrderpadAppOrderpadOfflineProductYaml:
      properties:
        createdOn:
          description: Date and time in ISO 8601 format taken offline
          format: date-time
          type: string
        createdBy:
          description: Application which requested operation e.g. Orderpad, RestaurantApp
          nullable: true
          type: string
        restaurantId:
          description: The Id of the restaurant
          format: int32
          type: integer
        productId:
          description: The id of the menu item
          nullable: true
          type: string
        nextAvailableAt:
          description: >-
            Date and time in ISO 8601 format when item will be brought back
            online
          nullable: true
          format: date-time
          type: string
      type: object
    OrderpadAppOrderpadSetupTypeYaml:
      description: Type of order pad set up
      enum:
        - Unknown
        - SignUp
        - Upgrade
        - Swap
      type: string
    OrderpadAppOrdersDataYaml:
      properties:
        unreceivedOrders:
          description: List of all changed orders for a restaurant
          nullable: true
          items:
            type: string
          type: array
      type: object
    OrderpadAppPagedArtifactsYaml:
      allOf:
        - $ref: '#/components/schemas/PagingPagedCursorResponseYaml'
        - description: List of all available artifacts
          type: object
          properties:
            artifacts:
              type: array
              items:
                $ref: '#/components/schemas/OrderpadAppArtifactYaml'
    OrderpadAppPagedReleasesYaml:
      allOf:
        - $ref: '#/components/schemas/PagingPagedCursorResponseYaml'
        - description: List of all releases
          type: object
          properties:
            releases:
              type: array
              items:
                $ref: '#/components/schemas/OrderpadAppReleaseYaml'
    OrderpadAppPartnerInfoYaml:
      description: Information about the source of the order (Just Eat, Third Party etc.)
      properties:
        partnerId:
          description: Partner id of the source
          nullable: true
          type: string
        source:
          description: Where did the order originate (Just Eat, third party etc.)
          nullable: true
          type: string
        partnerName:
          description: Partner name of the source
          nullable: true
          type: string
        orderReference:
          description: Reference that partner uses to identify the order
          nullable: true
          type: string
        friendlyOrderReference:
          description: Friendly order reference
          nullable: true
          type: string
      type: object
    OrderpadAppPaymentInfoYaml:
      description: Payment details for the order
      properties:
        voucherAmount:
          description: Total amount paid for with a voucher
          format: decimal
          type: number
        feeText:
          description: Type of fee (`spanner`, `card`, `servicecharge`)
          nullable: true
          type: string
        isCashPayment:
          description: Is it a cash order
          type: boolean
        totalPrice:
          description: Total price of the order
          format: decimal
          type: number
        currency:
          description: Name of the currency used for the order
          nullable: true
          type: string
        accountCreditAmount:
          description: Total amount paid for with account credit
          format: decimal
          type: number
        discountSource:
          description: Source of discount (i.e. Just Eat or restaurant funded)
          nullable: true
          type: string
        cardAmount:
          description: Amount paid by card
          format: decimal
          type: number
        leftToPay:
          description: >-
            Amount left for customer to pay in cash after all vouchers and
            discounts removed from total
          format: decimal
          type: number
        discount:
          description: Total amount of discount
          format: decimal
          type: number
        deliveryCharge:
          description: Amount of cost that comes from delivery
          format: decimal
          type: number
        cardNumberLast4Digits:
          description: Last 4 digits of the payment card
          nullable: true
          type: string
        cardFee:
          description: Card fee for the order
          format: decimal
          type: number
        taxes:
          description: Tax information for the order
          nullable: true
          additionalProperties:
            format: decimal
            type: number
          type: object
      type: object
    OrderpadAppPolicyEligibilityYaml:
      description: Eligibility details
      properties:
        code:
          description: Policy rule name
          nullable: true
          enum:
            - BlockBlacklistedRestaurants
            - BlockCashCancellationBlacklistedRestaurants
            - BlockCashOrders
            - CashCancellationsAreWithinAllowedThreshold
            - CashOrderInTheWindowAfterAcceptance
            - MaxCancellationsPerCustomer
            - MaxCancellationsPerRestaurant
            - EvaluateMaxOrderValue
            - NotInTheWindowAfterAcceptance
            - OrderCancelledStatePolicy
            - IsRestaurantCancellationCapable
          type: string
        passed:
          description: Passed or not
          type: boolean
      type: object
    OrderpadAppPolicyFeeYaml:
      description: Fee details after the policy run
      properties:
        percentage:
          description: Percentage to be returned
          format: decimal
          type: number
        justificationCode:
          description: Justification code
          nullable: true
          enum:
            - CancellationOutsideWindow
            - UnChargeableReason
            - EmptyAcceptedAt
            - CancellationInsideWindow
          type: string
        amount:
          description: Amount to be returned in local currency
          format: decimal
          type: number
      type: object
    OrderpadAppPolicyOutcomeYaml:
      description: Result of the policy run
      properties:
        fee:
          $ref: '#/components/schemas/OrderpadAppPolicyFeeYaml'
        decision:
          description: Decision after policy run
          nullable: true
          enum:
            - Offered
            - Declined
          type: string
      type: object
    OrderpadAppPolicyResultYaml:
      description: Result of the policy run
      properties:
        outcome:
          $ref: '#/components/schemas/OrderpadAppPolicyOutcomeYaml'
        eligibility:
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppPolicyEligibilityYaml'
          type: array
      type: object
    OrderpadAppPreparationStateYaml:
      properties:
        state:
          description: State of preparation of the order
          enum:
            - started
            - finished
          type: string
      type: object
    OrderpadAppProductGroupYaml:
      properties:
        products:
          description: List of products
          nullable: true
          items:
            $ref: '#/components/schemas/OrderpadAppMergedProductYaml'
          type: array
      type: object
    OrderpadAppPushNotificationRegistrationUpdateYaml:
      properties:
        appType:
          description: Application type
          $ref: '#/components/schemas/OrderpadAppAppTypeYaml'
        pushNotificationToken:
          description: Push notification token
          nullable: true
          type: string
      type: object
    OrderpadAppPutProductBackOnTheMenuCommandYaml:
      properties:
        deletedBy:
          description: Application which requested operation e.g. Orderpad, RestaurantApp
          nullable: true
          type: string
        requestedAt:
          description: Request date and time in ISO 8601 format
          nullable: true
          format: date-time
          type: string
        productIds:
          description: List of product Ids to be brought back online
          nullable: true
          items:
            type: string
          type: array
      type: object
    OrderpadAppRegistrationCodeResponseYaml:
      description: Response to the Orderpad registration code for a given restaurant.
      properties:
        restaurantId:
          description: Restaurant id
          nullable: false
          type: string
        registrationCode:
          description: Registration code to pair device
          nullable: true
          type: string
        registrationCodeId:
          description: Registration code id generated on creation
          nullable: false
          type: string
        durationInMinutes:
          description: The duration of the registration code in minutes
          nullable: false
          type: integer
          format: int32
        absoluteExpiry:
          description: The absolute expiry of the registration code
          nullable: false
          type: string
          format: date-time
      type: object
    OrderpadAppRegistrationRequestYaml:
      properties:
        username:
          description: Username
          nullable: true
          type: string
        password:
          description: Password
          nullable: true
          type: string
        pushNotificationId:
          description: The id used in push notification registration
          nullable: true
          type: string
        appType:
          description: Application type
          $ref: '#/components/schemas/OrderpadAppAppTypeYaml'
      type: object
    OrderpadAppRegistrationResponseYaml:
      properties:
        appType:
          description: Application type
          nullable: true
          type: string
        token:
          description: Created authentication token
          nullable: true
          type: string
        restaurantId:
          description: The Id of the restaurant
          nullable: true
          type: string
        userId:
          description: The Id of the user
          nullable: true
          type: string
      type: object
    OrderpadAppReleaseYaml:
      properties:
        id:
          description: The id of the release.
          nullable: true
          type: string
        name:
          description: The name of the release.
          nullable: false
          type: string
        country:
          description: The country code for country of the release.
          nullable: true
          type: string
        artifactId:
          description: The id of the artifact uses to create the release.
          nullable: false
          type: string
        type:
          description: The type of the release.
          nullable: false
          $ref: '#/components/schemas/OrderpadAppReleaseTypeYaml'
        status:
          description: The status of the release.
          nullable: false
          $ref: '#/components/schemas/OrderpadAppReleaseRolloutStatusYaml'
        rollouts:
          description: The rollouts of the release.
          nullable: true
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/OrderpadAppStagedRolloutYaml'
              - $ref: '#/components/schemas/OrderpadAppListRolloutYaml'
      type: object
    OrderpadAppReleaseRolloutStatusYaml:
      description: The status of the release or device rollout.
      enum:
        - new
        - inProgress
        - cancelled
        - failed
        - success
      type: string
      default: new
    OrderpadAppReleaseTypeYaml:
      description: The type of the release.
      enum:
        - staged
        - list
      type: string
    OrderpadAppRestaurantConfigurationYaml:
      description: The restaurant configuration details
      properties:
        addressLine1:
          description: Address line 1
          nullable: true
          type: string
        financeDetails:
          $ref: '#/components/schemas/OrderpadAppRestaurantFinanceDetailsYaml'
        website:
          description: Web site address of the restaurant
          nullable: true
          type: string
        geoLocation:
          $ref: '#/components/schemas/OrderpadAppGeoLocationYaml'
        supportDetails:
          $ref: '#/components/schemas/OrderpadAppRestaurantSupportDetailsYaml'
        phoneNumber:
          description: Phone number
          nullable: true
          type: string
        isFlypayEposEnabled:
          description: Is Flypay enabled
          type: boolean
        isDmsEnabled:
          description: Is DMS enabled
          type: boolean
        addressCity:
          description: Address city
          nullable: true
          type: string
        logoUrl:
          description: Logo URL
          nullable: true
          type: string
        isRdsRestaurant:
          description: Is it RDS restaurant
          type: boolean
        brandName:
          description: Name of the brand this restaurant belongs to
          nullable: true
          type: string
        tempOffline:
          $ref: '#/components/schemas/OrderpadAppRestaurantTempOfflineYaml'
        name:
          description: Name of the restaurant
          nullable: true
          type: string
        postalCode:
          description: Post code of the restaurant
          nullable: true
          type: string
      type: object
    OrderpadAppRestaurantConfigurationDefinitionYaml:
      properties:
        Id:
          description: The identifier of this configuration definitions
          nullable: false
          type: string
        Name:
          description: A user friendly label for this configuration setting
          nullable: false
          type: string
        Description:
          description: >-
            A more detailed description of what this setting is for and what it
            does
          nullable: false
          type: string
        Category:
          description: Provides a mechanism to group settings with the same category.
          nullable: false
          type: string
        SystemOnly:
          description: >-
            If true, indicates that this setting should not be configurable via
            UI, but should be set by the platform automatically.
          nullable: false
          type: boolean
      type: object
    OrderpadAppRestaurantDetailsYaml:
      properties:
        RestaurantId:
          description: Restaurant id
          nullable: false
          type: string
        LogoUrl:
          description: Restaurant Logo
          nullable: true
          type: string
        Name:
          description: Restaurant name
          nullable: false
          type: string
        Address:
          description: Restaurant address details
          type: object
          properties:
            City:
              description: Restaurant city
              nullable: true
              type: string
            PostCode:
              description: Restaurant post code
              nullable: true
              type: string
      type: object
    OrderpadAppRestaurantFinanceDetailsYaml:
      description: Restaurant finance details
      properties:
        paymentMode:
          description: Current payment mode
          nullable: true
          enum:
            - CardOnly
            - CardAndCash
          type: string
      type: object
    OrderpadAppRestaurantInfoYaml:
      description: Restaurant information for the order
      properties:
        addressCity:
          description: Restaurant address city
          nullable: true
          type: string
        name:
          description: Restaurant name
          nullable: true
          type: string
        postalCode:
          description: Restaurant name
          nullable: true
          type: string
        addressLine1:
          description: Restaurant address line 1
          nullable: true
          type: string
        website:
          description: Restaurant website
          nullable: true
          type: string
        geoLocation:
          description: Restaurant geolocation
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/OrderpadAppGeoLocationYaml'
        vatRegistrationNumber:
          description: Restaurant VAT registration number
          nullable: true
          type: string
        phoneNumber:
          description: Restaurant phone number
          nullable: true
          type: string
      type: object
    OrderpadAppRestaurantSupportDetailsYaml:
      description: Restaurant support details
      properties:
        phoneNumber:
          description: Phone number of the restaurant
          nullable: true
          type: string
      type: object
    OrderpadAppRestaurantTempOfflineYaml:
      description: The details for a restaurant being temporarily offline
      properties:
        categories:
          description: List of current temp offline categories
          nullable: true
          items:
            type: string
          type: array
        type:
          description: Temp offline type
          nullable: true
          enum:
            - CancellationOutsideWindow
            - Unset
            - TempOffline
            - ClosedToday
            - ClosedDueTo
            - OnVacationOpens
            - OnVacationClosed
            - None
            - ClosedDueToEvent
            - ClosedDueToEmergency
            - FailedJctConnection
            - NoTrOverride
            - IgnoredOrders
            - ClosedByTempOfflineTool
          type: string
      type: object
    OrderpadAppRestaurantUpdateResponseYaml:
      properties:
        optimizelyData:
          description: Details of current Optimizely data file and location
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/OrderpadAppOptimizelyDataYaml'
        ordersData:
          description: Data containing all changed orders for a restaurant since last call
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/OrderpadAppOrdersDataYaml'
      type: object
    OrderpadAppRolloutDeviceYaml:
      properties:
        deviceId:
          description: The id of the release.
          nullable: false
          type: string
        status:
          description: The status of the device rollout.
          nullable: false
          $ref: '#/components/schemas/OrderpadAppReleaseRolloutStatusYaml'
      type: object
    OrderpadAppSecretsResponseYaml:
      properties:
        secrets:
          description: Dictionary of secrets providers available
          nullable: true
          additionalProperties:
            description: Key of a single secret
            additionalProperties:
              description: Secret value
              type: string
            type: object
          type: object
      type: object
    OrderpadAppSendSmsRequestYaml:
      properties:
        message:
          description: Message to send
          nullable: true
          type: string
      type: object
    OrderpadAppSendSmsResponseYaml:
      properties:
        mobileNumberUsed:
          description: Mobile number to which message were sent
          nullable: true
          type: string
      type: object
    OrderpadAppSetPaymentModeRequestYaml:
      properties:
        paymentMode:
          description: New payment mode
          nullable: true
          enum:
            - CardOnly
            - CardAndCash
          type: string
      type: object
    OrderpadAppSetupOrderpadRequestYaml:
      properties:
        postCode:
          description: Set up postcode
          nullable: true
          type: string
        phoneNumber:
          description: Callback phone number
          nullable: true
          type: string
        setupType:
          description: Orderpad set up type
          $ref: '#/components/schemas/OrderpadAppOrderpadSetupTypeYaml'
      type: object
    OrderpadAppStagedRolloutYaml:
      properties:
        id:
          description: The id of the release.
          nullable: true
          type: string
        stageName:
          description: The name of the stage.
          nullable: false
          type: string
        status:
          description: The status of the release.
          nullable: false
          $ref: '#/components/schemas/OrderpadAppReleaseRolloutStatusYaml'
      type: object
    OrderpadAppTakeOfflineRequestYaml:
      properties:
        comment:
          description: Any additional information
          nullable: true
          type: string
        tempOfflineType:
          description: Identifier of the reason for taking the restaurant offline
          nullable: true
          enum:
            - TempOffline
            - ClosedToday
          type: string
      type: object
    OrderpadAppTakeProductOffTheMenuCommandYaml:
      properties:
        requestedAt:
          description: Request date and time in ISO 8601 format
          nullable: true
          format: date-time
          type: string
        createdBy:
          description: Application which requested operation e.g. Orderpad, RestaurantApp
          nullable: true
          type: string
        productIds:
          description: List of product Ids to be taken offline
          nullable: true
          items:
            type: string
          type: array
      type: object
    OrderpadAppUpdateRestaurantsConfigurationsRequestYaml:
      description: The configurations to be updated for the provided restaurants
      properties:
        restaurantIds:
          description: List of restaurant ids.
          nullable: false
          items:
            type: string
          type: array
        configurations:
          description: A set of configuration options to be updated.
          additionalProperties:
            type: boolean
      type: object
    OrderpadAppUserInfoYaml:
      properties:
        id:
          description: The Id of the user
          nullable: false
          type: string
        restaurantId:
          description: The Id of the restaurant that this user has access to
          nullable: false
          type: string
        authorisedProductType:
          description: The type of device that this user has access to
          nullable: false
          type: number
        mobileContact:
          description: The mobile number of this user
          nullable: true
          type: string
        displayName:
          description: The display name of the user
          nullable: true
          type: string
        password:
          description: The password that the user may use to login
          nullable: false
          type: string
        passwordSalt:
          description: The salt used to calculate the password hash for this user
          nullable: false
          type: string
      type: object
    OrdersApiFeeYaml:
      description: Details of any fees
      properties:
        Value:
          description: Value of the fee
          format: money
          type: number
        Type:
          description: Type of the fee
          type: string
      type: object
    OrdersApiV2AddressV2Yaml:
      description: The address of a customer or restaurant
      required:
        - Lines
        - City
        - PostalCode
        - Geolocation
      properties:
        City:
          description: The city
          type: string
        GeoLocation:
          $ref: '#/components/schemas/OrdersApiV2LocationV2Yaml'
        Lines:
          items:
            type: string
          type: array
        PostalCode:
          description: The post code
          type: string
      type: object
    OrdersApiV2CustomerV2Yaml:
      description: Details of the customer
      required:
        - Name
        - PhoneNumber
        - Address
      properties:
        Name:
          description: The name the customer likes to be known by
          type: string
        DisplayPhoneNumber:
          description: If you implement phone masking provide a masked number here
          type: string
        Address:
          $ref: '#/components/schemas/OrdersApiV2AddressV2Yaml'
        Email:
          description: The customer's email address
          type: string
        PhoneNumber:
          description: The customer's real phone number
          type: string
        CompanyName:
          description: The company name provided by customer
          type: string
        TaxID:
          description: >-
            The company tax id provided by customer - Currently available for Pl
            Stores.
          type: string
      type: object
    OrdersApiV2FulfilmentV2Yaml:
      description: The fulfilment details
      properties:
        Method:
          description: Fulfilment type
          enum:
            - Delivery
            - Collection
          type: string
        DueDate:
          description: The time the customer expects the food. Time must be in the future
          format: date-time
          type: string
        DueAsap:
          description: If food should be delivered ASAP
          type: boolean
      type: object
      required:
        - Method
        - DueDate
      example:
        Method: Delivery
        DueDate: '2020-01-01T09:00:00.000Z'
        DueAsap: false
    OrdersApiV2ItemV2Yaml:
      description: A payment item
      properties:
        Name:
          description: The name of the item
          type: string
        UnitPrice:
          description: The unit price
          format: money
          type: integer
        Reference:
          description: The reference for the item
          type: string
        Quantity:
          description: How many items
          type: integer
        Items:
          items:
            $ref: '#/components/schemas/OrdersApiV2ItemV2Yaml'
          type: array
      type: object
    OrdersApiV2ItemsV2Yaml:
      required:
        - TotalPrice
        - Reference
        - Name
        - Quantity
      properties:
        Name:
          description: Item Name
          type: string
        UnitPrice:
          description: The price
          format: money
          type: integer
        Reference:
          description: The item's ID that you hold
          type: string
        Quantity:
          description: The quantity
          minimum: 1
          type: integer
        Items:
          items:
            $ref: '#/components/schemas/OrdersApiV2ItemV2Yaml'
          type: array
        TotalPrice:
          description: Price of this item x quantity and all sub items
          format: money
          type: number
      type: object
    OrdersApiV2LinesV2Yaml:
      description: The line items describing an order
      required:
        - Type
      properties:
        Paid:
          description: True if the line is paid
          type: boolean
        Type:
          description: Payment method
          enum:
            - Cash
            - Card
            - AccountCredit
            - Voucher
          type: string
        Value:
          description: Value of the line
          format: money
          type: number
        ServiceFee:
          description: The service fee
          format: double
          type: number
        LastCardDigits:
          description: Anonymised card digits
          type: string
      type: object
    OrdersApiV2LocationV2Yaml:
      description: Coordinates of a position
      required:
        - Latitude
        - Longitude
      properties:
        Longitude:
          description: Longitude
          format: double
          type: number
        Latitude:
          description: Latitude
          format: double
          type: number
      example:
        Longitude: -0.103198
        Latitude: 51.51641
      type: object
    OrdersApiV2OrderRequestV2Yaml:
      required:
        - OrderReference
        - TotalPrice
        - Restaurant
        - Customer
        - Fulfilment
        - Payment
        - Items
      properties:
        Customer:
          $ref: '#/components/schemas/OrdersApiV2CustomerV2Yaml'
        OrderReference:
          description: The order reference
          type: string
        IsTest:
          description: True if a test order
          type: boolean
        FriendlyOrderReference:
          description: The friendly order reference
          type: string
        CustomerNotes:
          description: The customer notes
          type: object
          properties:
            NoteForDelivery:
              description: Note for delivery
              type: string
            NoteForRestaurant:
              description: Note for the restaurant
              type: string
          example:
            NoteForDelivery: Red door
            NoteForRestaurant: Make it spicy
        Fulfilment:
          $ref: '#/components/schemas/OrdersApiV2FulfilmentV2Yaml'
        Payment:
          $ref: '#/components/schemas/OrdersApiV2PaymentV2Yaml'
        Items:
          items:
            $ref: '#/components/schemas/OrdersApiV2ItemsV2Yaml'
          type: array
        Restaurant:
          $ref: '#/components/schemas/OrdersApiV2RestaurantV2Yaml'
        TotalPrice:
          description: The total
          format: double
          type: number
      type: object
    OrdersApiV2PaymentV2Yaml:
      description: Payment details
      properties:
        Taxes:
          items:
            $ref: '#/components/schemas/OrdersApiV2TaxV2Yaml'
          type: array
        Tips:
          items:
            $ref: '#/components/schemas/OrdersApiFeeYaml'
          type: array
        Lines:
          items:
            $ref: '#/components/schemas/OrdersApiV2LinesV2Yaml'
          type: array
        Fees:
          items:
            $ref: '#/components/schemas/OrdersApiFeeYaml'
          type: array
        PaidDate:
          description: The payment date
          format: date-time
          type: string
      type: object
      required:
        - Lines
      example:
        Tips:
          - Value: 2.5
            Type: driver
        Lines:
          - ServiceFee: 0
            Type: Card
            Paid: true
            Value: 19.95
            LastCardDigits: '1234'
        Fees:
          - Value: 0.25
            Type: card
          - Value: 3.5
            Type: delivery
    OrdersApiV2RestaurantV2Yaml:
      oneOf:
        - properties:
            Id:
              description: Our restaurant ID
              type: integer
          type: object
        - properties:
            Reference:
              description: >-
                If we hold a mapping for your restaurant IDs to ours - use your
                ID here
              type: string
          type: object
    OrdersApiV2TaxV2Yaml:
      description: Details of the tax
      required:
        - Value
        - Type
        - Percentage
      properties:
        Percentage:
          description: The tax percentage
          format: double
          type: number
        Type:
          description: The tax type
          type: string
        Value:
          description: The value
          format: money
          type: number
      type: object
    OrdersWebhooksOrderReadyForPreparationYaml:
      description: Notification that the order is ready for preparation
      properties:
        OrderId:
          description: The order ID
          type: string
        CustomerNotes:
          description: Any additional notes from the customer
          additionalProperties:
            type: string
          type: object
        Restaurant:
          description: The restaurant fulfilling the order
          properties:
            Reference:
              description: The restaurant reference
              type: string
            Address:
              description: The address of the restaurant
              properties:
                City:
                  description: The city
                  type: string
                Lines:
                  description: The address lines
                  items:
                    type: string
                  type: array
                Geolocation:
                  $ref: '#/components/schemas/LogisticsLocationYaml'
                PostalCode:
                  description: The postcode
                  type: string
              type: object
            PhoneNumber:
              description: The phone number
              type: string
            Id:
              description: The id of the restaurant
              type: string
            Name:
              description: The name of the restaurant
              type: string
          type: object
        Payment:
          description: The payment details
          properties:
            Lines:
              items:
                properties:
                  Value:
                    description: The value of the item
                    format: money
                    type: number
                  Paid:
                    description: true if already paid
                    type: boolean
                  Type:
                    description: The payment type
                    enum:
                      - card
                      - cash
                      - credit
                      - other
                    type: string
                type: object
              type: array
          type: object
        Customer:
          description: The customer details
          properties:
            Name:
              description: The customer's name
              type: string
            Id:
              description: The customer's id
              type: string
          type: object
        PlacedDate:
          description: The date the order was placed
          format: date-time
          type: string
        Currency:
          description: The currency the payment is in
          type: string
        Items:
          items:
            $ref: '#/components/schemas/OrdersApiV2ItemV2Yaml'
          type: array
        IsTest:
          description: True if a test order
          type: boolean
        Fulfilment:
          description: The details for fulfilment
          properties:
            PrepareFor:
              description: When the order will be prepared
              format: date-time
              type: string
            PreparationTime:
              description: The preparation time
              format: timespan
              type: string
            CustomerDueAsap:
              description: The customer wants the order ASAP
              type: boolean
            CustomerDueDate:
              description: The time due at the customer
              format: date-time
              type: string
            Address:
              description: The customer address
              properties:
                City:
                  description: The city
                  type: string
                Lines:
                  description: The address lines
                  items:
                    type: string
                  type: array
                Geolocation:
                  $ref: '#/components/schemas/LogisticsLocationYaml'
                PostalCode:
                  description: The postcode
                  type: string
              type: object
            PhoneNumber:
              description: The phone number
              type: string
            Method:
              description: The fulfilment method
              enum:
                - Delivery
                - Collection
              type: string
          type: object
        TotalPrice:
          description: The total price
          format: money
          type: number
        PriceBreakdown:
          description: The breakdown of the price
          properties:
            Discount:
              description: Any applied discount
              format: money
              type: number
            Taxes:
              description: Any applied taxes
              format: money
              type: number
            Tips:
              description: Any tips
              format: money
              type: number
            Fees:
              description: The fees
              properties:
                Delivery:
                  description: The delivery charge
                  format: money
                  type: number
                ServiceCharge:
                  description: The service charge
                  format: money
                  type: number
                Other:
                  description: Any other charges
                  format: money
                  type: number
              type: object
            Items:
              description: Payment for items
              format: money
              type: number
          type: object
      type: object
      example:
        OrderId: XYZ123456
        CustomerNotes:
          - Key: Floor
            Value: 5th floor
          - Key: Code
            Value: Code 1234
        Restaurant:
          Refererence: R99999
          Address:
            City: London
            Lines:
              - Oldridge Road
            Geolocation:
              Latitude: 51.4484
              Longitude: -0.1504
            PostalCode: SW12 8PW
          PhoneNumber: 441200000000
          Id: '99999'
          Name: Just Eat Test Restaurant
        Payment:
          Lines:
            - Value: 19.25
              Paid: false
              Type: card
        Customer:
          Name: Bruce Wayne
          Id: Batman
        PlacedDate: '2018-03-10T14:45:28.000Z'
        Currency: GBP
        Items:
          - TotalPrice: 10
            Reference: '1234'
            Synonym: ''
            UnitPrice: 5
            Items:
              - Reference: '9876'
                Synonym: Regular
                UnitPrice: 0
                Items: []
                Quantity: 1
                Name: Fries
              - Reference: '6789'
                Synonym: 330ml
                UnitPrice: 0
                Items: []
                Quantity: 2
                Name: Pepsi
            Quantity: 2
            Name: Chicken Box Meal
          - TotalPrice: 7.25
            Reference: '4321'
            Synonym: ''
            UnitPrice: 7.25
            Items: []
            Quantity: 1
            Name: Milkshake
        IsTest: true
        Fulfilment:
          CustomerDueAsap: false
          CustomerDueDate: '2018-03-10T14:45:28.000Z'
          Address:
            City: London
            Lines:
              - Fleet Place House
              - Fleet Pl
            Geolocation:
              Latitude: 51.51641
              Longitude: -0.103198
            PostalCode: EC4M 7RD
          PhoneNumber: 441234567890
          Method: Delivery
        TotalPrice: 19.25
        PriceBreakdown:
          Discount: 0
          Taxes: 3.85
          Tips: 0.5
          Fees:
            Delivery: 1
            ServiceCharge: 0.5
            Other: 0
          Items: 17.25
    OrdersWebhooksSendToPosFailedYaml:
      properties:
        OrderId:
          description: The id of the order
          type: string
      type: object
    OutofstockorderitemsGetStatusResponseYaml:
      description: Status of the out of stock items request for the specific order
      type: object
      properties:
        status:
          description: Status
          type: string
          enum:
            - submitted
            - processed
            - failed
        items:
          type: array
          items:
            $ref: '#/components/schemas/OutofstockorderitemsItemYaml'
    OutofstockorderitemsItemYaml:
      description: An item marked as out of stock
      type: object
      properties:
        itemId:
          description: The id of the out of stock item
          type: string
    PagingPagedAfterOnlyCursorResponseYaml:
      type: object
      properties:
        paging:
          description: Consists of pagination information.
          properties:
            cursors:
              description: Consists of cursors markers used in forward only pagination.
              properties:
                after:
                  description: >-
                    Cursor parameter to use in the next request to the resource
                    to fetch the next page of data.
                  type: string
              type: object
          type: object
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
    PagingPagedCursorResponseYaml:
      description: Cursor Paging information
      type: object
      properties:
        paging:
          description: Consists of pagination information.
          properties:
            cursors:
              description: Consists of cursors markers used in pagination.
              properties:
                before:
                  description: >-
                    Cursor parameter to use in the next request to the resource
                    to fetch the previous page of data.
                  type: string
                after:
                  description: >-
                    Cursor parameter to use in the next request to the resource
                    to fetch the next page of data.
                  type: string
              type: object
          type: object
      example:
        paging:
          cursors:
            before: KHt67IUVSDJDVLa
            after: NDMyNzQyODI3OTQw
    PartnerLoyaltyChangeStampcardSubscriptionStatusRequestYaml:
      title: Change stampcard subscription status request
      description: Change partner stampcard subscription status request
      type: object
      required:
        - status
      properties:
        status:
          nullable: false
          $ref: '#/components/schemas/PartnerLoyaltySubscriptionStatusYaml'
        reason:
          description: >-
            The reason to change subscription status. The reason is required if
            status is 'optOutRequested'.
          type: string
      example:
        status: optOutRequested
        reason: I already have enough loyal customers
    PartnerLoyaltySubscriptionYaml:
      title: Subscription
      description: Partner stampcard subscription details
      type: object
      required:
        - partnerId
        - tenant
        - status
        - eligibleStatusChanges
      properties:
        partnerId:
          description: The ID of the partner.
          nullable: false
          type: string
        tenant:
          description: The tenant of the partner.
          nullable: false
          type: string
        status:
          description: Subscription status
          nullable: false
          $ref: '#/components/schemas/PartnerLoyaltySubscriptionStatusYaml'
        changedBy:
          description: >-
            Agent or partner who changed status. Null if the status is
            'Inactive'
          nullable: true
          type: string
        changedAt:
          description: The last status change timestamp. Null if the status is 'Inactive'
          nullable: true
          format: date-time
          type: string
        eligibleStatusChanges:
          description: Eligible subscription statuses for the partner.
          nullable: false
          type: array
          items:
            $ref: >-
              #/components/schemas/PartnerLoyaltySubscriptionEligibleStatusChangeYaml
        statusChangeLogs:
          description: Logs of the subscription status changes.
          type: array
          items:
            $ref: >-
              #/components/schemas/PartnerLoyaltySubscriptionStatusChangeLogsYaml
      example:
        partnerId: '324567'
        tenant: uk
        status: optOutRequested
        changedBy: InternalUser
        changedAt: '2023-01-12T00:00:00.0000000Z'
        statusChangeLogs:
          - status: optedIn
            changedAt: '2022-01-12T00:00:00.0000000Z'
            changedBy: InternalUser
            reason: null
          - status: optOutRequested
            changedAt: '2023-01-12T00:00:00.0000000Z'
            changedBy: InternalUser
            reason: I already have enough loyal customers
        eligibleStatusChanges:
          - status: optOutCancelled
            from: null
            to: '2023-01-19T00:00:00.0000000Z'
            manualAction: true
          - status: optOutConfirmed
            from: '2023-01-19T00:00:00.0000000Z'
            to: null
            manualAction: false
    PartnerLoyaltySubscriptionEligibleStatusChangeYaml:
      description: Eligible status changes for the subscription
      type: object
      properties:
        from:
          description: Date and time when status change become eligible
          nullable: true
          type: string
        to:
          description: Date and time when status change become non-eligible
          nullable: true
          type: string
        status:
          description: Eligible status.
          $ref: '#/components/schemas/PartnerLoyaltySubscriptionStatusYaml'
        manualAction:
          description: >-
            If manual action is true then a partner/agent can change status by
            himself otherwise it is automatic change based on 'from' property
          nullable: false
          type: boolean
      example:
        from: '2021-01-12T00:00:00.0000000Z'
        to: '2021-02-12T00:00:00.0000000Z'
        status: optOutRequested
        manualAction: true
    PartnerLoyaltySubscriptionEnvelopeYaml:
      title: SubscriptionEnvelope
      description: Partner stampcard subscription response.
      type: object
      properties:
        data:
          description: Partner stampcard subscription details
          nullable: false
          $ref: '#/components/schemas/PartnerLoyaltySubscriptionYaml'
      example:
        data:
          partnerId: '324567'
          tenant: uk
          status: optOutRequested
          changedBy: InternalUser
          changedAt: '2023-01-12T00:00:00.0000000Z'
          statusChangeLogs:
            - status: optedIn
              changedAt: '2022-01-12T00:00:00.0000000Z'
              changedBy: InternalUser
              reason: null
            - status: optOutRequested
              changedAt: '2023-01-12T00:00:00.0000000Z'
              changedBy: InternalUser
              reason: I already have enough loyal customers
          eligibleStatusChanges:
            - status: optOutCancelled
              from: null
              to: '2023-01-19T00:00:00.0000000Z'
              manualAction: true
            - status: optOutConfirmed
              from: '2023-01-19T00:00:00.0000000Z'
              to: null
              manualAction: false
    PartnerLoyaltySubscriptionStatusYaml:
      description: Status of the subscription
      enum:
        - inactive
        - optedIn
        - optOutRequested
        - optOutCancelled
        - optOutConfirmed
        - optedOut
      type: string
    PartnerLoyaltySubscriptionStatusChangeLogsYaml:
      title: SubscriptionStatusChangeLogs
      description: Logs of the subscription status changes.
      type: object
      properties:
        changedAt:
          description: Subscription status change timestamp.
          nullable: false
          format: date-time
          type: string
        changedBy:
          description: Agent or partner who changed status.
          nullable: false
          type: string
        reason:
          description: Reason why the status changed.
          nullable: true
          type: string
        status:
          description: Subscription status
          $ref: '#/components/schemas/PartnerLoyaltySubscriptionStatusYaml'
      example:
        changedAt: '2022-01-12T00:00:00.0000000Z'
        changedBy: InternalUser
        reason: I already have enough loyal customers
        status: optOutRequested
    PartnerProductInformationPartnerProductInformationResponseYaml:
      description: Partner product information response
      properties:
        gtin:
          description: >
            Product GTIN (Global Trade Item Number). 

            It's a number used to identify trade items (for example in
            barcodes).

            More info: https://en.wikipedia.org/wiki/Global_Trade_Item_Number
          type: string
        image:
          description: Image of the Product.
          properties:
            url:
              description: Image URL.
              type: string
            lastUpdated:
              description: Last updated timestamp in ISO 8601 format.
              format: date-time
              type: string
          type: object
      type: object
      example:
        gtin: '5017726100513'
        image:
          url: https://example.org/some-image.jpg
          lastUpdated: '2022-09-27T18:00:00.000Z'
    PartnerdeliverymanagementDeliveryAreaYaml:
      description: Delivery area object for the restaurant
      type: object
      properties:
        milesRadiusLimit:
          description: Miles radius limit value
          format: double
          type: number
        deliveryAreaType:
          description: Delivery area type. Postcodes or Polygon
          enum:
            - Postcodes
            - Polygon
          type: string
        postcodes:
          description: Delivery area as a list of postcodes
          items:
            description: postcode item
            type: string
          type: array
        polygon:
          description: Delivery area as a multi polygon defined by a set of coordinates
          $ref: '#/components/schemas/PartnerdeliverymanagementMultiPolygonYaml'
    PartnerdeliverymanagementDeliveryAreaToUpdateYaml:
      description: Delivery area object to update for the restaurant
      type: object
      properties:
        milesRadiusLimit:
          description: Miles radius limit value
          format: double
          type: number
        postcodes:
          description: Delivery area as a list of postcodes
          items:
            description: postcode item
            type: string
          type: array
    PartnerdeliverymanagementDeliveryFeeYaml:
      properties:
        minimumOrder:
          description: Minimum order value
          properties:
            currency:
              description: Currency code in ISO 4217 format
              type: string
            value:
              description: Smallest unit of local currency
              format: int32
              type: integer
          type: object
        deliveryCharge:
          description: base delivery charge for a given zone
          properties:
            currency:
              description: Currency code in ISO 4217 format
              type: string
            value:
              description: Smallest unit of local currency
              format: int32
              type: integer
          type: object
        zoneId:
          description: Id of assigned zone
          type: string
        zoneName:
          description: Name of assigned zone
          type: string
        freeDelivery:
          description: Free delivery over order price
          properties:
            currency:
              description: Currency code in ISO 4217 format
              type: string
            value:
              description: Smallest unit of local currency
              format: int32
              type: integer
          type: object
        smallOrderCharge:
          description: >-
            delivery charge for orders that has order value less then
            `minimumOrder`
          properties:
            currency:
              description: Currency code in ISO 4217 format
              type: string
            value:
              description: Smallest unit of local currency
              format: int32
              type: integer
          type: object
      type: object
    PartnerdeliverymanagementDeliveryZoneYaml:
      type: object
      properties:
        zoneId:
          description: id of the zone
          type: string
        unboundedZone:
          description: json representation of delivery zone
          properties:
            coordinates:
              description: >-
                geographical polygon
                https://tools.ietf.org/html/rfc7946#section-3.1.4. It might
                consist from multiple linear rings
              items:
                properties:
                  coordinates:
                    description: geographical coordinates of linear ring
                    items:
                      properties:
                        longitude:
                          description: geographical point longitude
                          format: decimal
                          type: number
                        latitude:
                          description: geographical point latitude
                          format: decimal
                          type: number
                      type: object
                    type: array
                type: object
              type: array
          type: object
        deliveryMinutes:
          description: geographical zone generated by SKIP, based on delivery minutes.
          format: int32
          type: integer
      example:
        zoneId: '1'
        unboundedZone:
          items:
            - items:
                - longitude: -2.08593559299993
                  latitude: 57.159200668
                - longitude: -2.18593559299993
                  latitude: 57.459200668
                - longitude: -2.28593559299993
                  latitude: 57.159200668
                - longitude: -2.08593559299993
                  latitude: 57.159200668
              coordinates: null
        deliveryMinutes: 5
    PartnerdeliverymanagementGeoJsonTypeYaml:
      description: GeoJson types
      enum:
        - Point
        - MultiPoint
        - LineString
        - MultiLineString
        - Polygon
        - MultiPolygon
        - GeometryCollection
        - Feature
        - FeatureCollection
      type: string
    PartnerdeliverymanagementGetDeliveryAreaResponseYaml:
      properties:
        deliveryArea:
          $ref: '#/components/schemas/PartnerdeliverymanagementDeliveryAreaYaml'
      type: object
      example:
        deliveryArea:
          milesRadiusLimit: 5
          deliveryAreaType: Postcodes
          postcodes:
            - AA
            - AB
    PartnerdeliverymanagementGetDeliveryFeesResponseYaml:
      properties:
        deliveryFees:
          description: restaurant delivery fees
          nullable: false
          items:
            $ref: '#/components/schemas/PartnerdeliverymanagementDeliveryFeeYaml'
          type: array
      type: object
      example:
        deliveryFees:
          - minimumOrder:
              value: 500
              currency: GBP
            zoneId: '1'
            zoneName: Zone 1
            freeDelivery:
              value: 1000
              currency: GBP
            deliveryCharge:
              value: 100
              currency: GBP
            smallOrderCharge:
              value: 200
              currency: GBP
          - minimumOrder:
              value: 500
              currency: GBP
            zoneId: '2'
            zoneName: Zone 2
            freeDelivery:
              value: 2000
              currency: GBP
            deliveryCharge:
              value: 200
              currency: GBP
            smallOrderCharge:
              value: 300
              currency: GBP
    PartnerdeliverymanagementGetDeliveryZonesResponseYaml:
      properties:
        deliveryZones:
          description: >-
            restaurant delivery zones. Maximum `deliveryZones` response size
            should be less than 20KB
          type: array
          nullable: false
          maxItems: 5
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PartnerdeliverymanagementDeliveryZoneYaml'
      type: object
      example:
        deliveryZones:
          - zoneId: '1'
            unboundedZone:
              items:
                - items:
                    - latitude: 57.159200668
                      longitude: -2.08593559299993
                    - latitude: 57.459200668
                      longitude: -2.18593559299993
                    - latitude: 57.159200668
                      longitude: -2.28593559299993
                    - latitude: 57.159200668
                      longitude: -2.08593559299993
                  coordinates: null
            deliveryMinutes: 5
          - zoneId: '2'
            unboundedZone:
              items:
                - items:
                    - latitude: 57.159200668
                      longitude: -2.08593559299993
                    - latitude: 57.459200668
                      longitude: -2.18593559299993
                    - latitude: 57.159200668
                      longitude: -2.28593559299993
                    - latitude: 57.159200668
                      longitude: -2.08593559299993
                  coordinates: null
            deliveryMinutes: 7
    PartnerdeliverymanagementGetPostcodeGeoShapesResponseYaml:
      type: object
      properties:
        geoShapes:
          description: postcode's geo shapes
          type: array
          items:
            $ref: '#/components/schemas/PartnerdeliverymanagementPostcodeGeoShapeYaml'
          nullable: true
    PartnerdeliverymanagementLineStringYaml:
      description: GeoJSON object line string
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PartnerdeliverymanagementGeoJsonTypeYaml'
        boundingBox:
          description: The bounding box of the GeoJSON object, as an array of numbers.
          type: array
          items:
            description: The bounding box item
            type: number
            format: double
          nullable: true
          readOnly: true
        coordinates:
          description: list of coordinates
          type: array
          items:
            $ref: '#/components/schemas/PartnerdeliverymanagementPositionYaml'
          nullable: true
    PartnerdeliverymanagementLinearRingYaml:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PartnerdeliverymanagementGeoJsonTypeYaml'
        boundingBox:
          description: bounding box array
          type: array
          items:
            description: bounding box item
            type: number
            format: double
          nullable: true
          readOnly: true
        coordinates:
          description: coordinates array
          type: array
          items:
            description: position item
            $ref: '#/components/schemas/PartnerdeliverymanagementPositionYaml'
          nullable: true
    PartnerdeliverymanagementMultiPolygonYaml:
      description: Object representing a GeoJSON geometry
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PartnerdeliverymanagementGeoJsonTypeYaml'
        boundingBox:
          description: Bounding box array for the geometry
          type: array
          items:
            description: Bounding box item
            type: number
            format: double
          nullable: true
          readOnly: true
        coordinates:
          description: Coordinates array for the geometry
          type: array
          items:
            description: Polygon item
            $ref: '#/components/schemas/PartnerdeliverymanagementPolygonYaml'
          nullable: true
    PartnerdeliverymanagementPointYaml:
      description: GeoJSON object point
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PartnerdeliverymanagementGeoJsonTypeYaml'
        boundingBox:
          description: The bounding box of the GeoJSON object, as an array of numbers.
          type: array
          items:
            description: The bounding box item
            type: number
            format: double
          nullable: true
          readOnly: true
        coordinates:
          $ref: '#/components/schemas/PartnerdeliverymanagementPositionYaml'
    PartnerdeliverymanagementPolygonYaml:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PartnerdeliverymanagementGeoJsonTypeYaml'
        boundingBox:
          description: bounding box array
          type: array
          items:
            description: bounding box item
            type: number
            format: double
          nullable: true
          readOnly: true
        coordinates:
          description: coordinates array
          type: array
          items:
            description: linear ring item
            $ref: '#/components/schemas/PartnerdeliverymanagementLinearRingYaml'
          nullable: true
    PartnerdeliverymanagementPositionYaml:
      description: position coordinates
      type: object
      properties:
        longitude:
          description: longitude value
          type: number
          format: double
        latitude:
          description: latitude value
          type: number
          format: double
        elevation:
          description: elevation value
          type: number
          format: double
          readOnly: true
    PartnerdeliverymanagementPostcodeGeoShapeYaml:
      description: geo shape object
      type: object
      properties:
        postcode:
          description: postcode value
          type: string
          nullable: true
        geometry:
          $ref: '#/components/schemas/PartnerdeliverymanagementLineStringYaml'
        location:
          $ref: '#/components/schemas/PartnerdeliverymanagementPointYaml'
        id:
          description: id of the geo shape object
          type: string
          nullable: true
    PartnerhelpChangeBusinessAddressRequestYaml:
      description: Request to change business address
      required:
        - address
        - city
        - postcode
        - effectiveDate
      properties:
        address:
          description: Address
          type: string
        city:
          description: Town / City
          type: string
        postcode:
          description: Postcode
          type: string
        effectiveDate:
          description: Effective date of the changes
          format: date
          type: string
      type: object
      example:
        address: 109 Bulgaria Blvd.
        city: Sofia
        postcode: A1404
        effectiveDate: '2023-04-13'
    PartnerhelpChangeBusinessNameRequestYaml:
      description: Request to change business name
      properties:
        businessName:
          description: Business name
          type: string
        effectiveDate:
          description: Effective date of the changes
          format: date
          type: string
      type: object
      example:
        businessName: Super Kebab
        effectiveDate: '2023-04-13'
    PartnerhelpChangeRestaurantContactsRequestYaml:
      description: Request containing new restaurant and owner contact details
      properties:
        restaurantEmailAddress:
          description: Restaurant email address
          type: string
        ownerMobileNumber:
          description: Restaurant owner mobile phone number in E.164 format.
          type: string
        restaurantPhoneNumber:
          description: Restaurant phone number in E.164 format.
          type: string
      type: object
      example:
        restaurantEmailAddress: super-kebab@gmail.com
        ownerMobileNumber: '+14151231234'
        restaurantPhoneNumber: '+14151231234'
    PartnerhelpChangeRestaurantLogoRequestYaml:
      description: >-
        Request containing path to new logo file that was  uploaded to AWS S3
        bucket
      properties:
        fileKey:
          description: Path to the file that was uploaded to the AWS S3 bucket
          type: string
      example:
        fileKey: ASIASJNB7IVSWQWRLQEQ_logo.jpeg
      type: object
    PartnerhelpChangeRestaurantMenuItemsRequestYaml:
      description: >-
        Request containing information about what to change in the restaurant
        menu (item/section/category)
      properties:
        message:
          description: >-
            The message with the details of what needs to be changed in the menu
            (item/section/category)
          type: string
        containsAllergensInfomation:
          description: >-
            The value indicating whether request has changes of allergen
            information
          type: boolean
      example:
        message: Change name from "Meat burger" to "Vegan burger"
        containsAllergensInfomation: true
      type: object
    PartnerhelpCreateSupportTicketRequestYaml:
      description: Request containing support ticket information
      properties:
        subject:
          description: Subject of the ticket
          type: string
        message:
          description: The message with the support details
          type: string
        type:
          description: Type the ticket belongs to
          type: string
      example:
        subject: Top Placement - Interest
        message: Change weekly budget
        type: top_placement__interest
      type: object
    PartnerhelpGeneratePresignedFIleUploadUrlRequestYaml:
      description: >-
        Request that contains information about file that will be uploaded to an
        AWS S3 bucket
      properties:
        fileName:
          description: The name of file that will be uploaded to the AWS S3 bucket
          type: string
        fileSizeInBytes:
          description: >-
            The size of file that will be uploaded to the AWS S3 bucket, in
            bytes
          format: int32
          type: number
      example:
        fileName: menu.pdf
        fileSizeInBytes: 4574745
      type: object
    PartnerhelpGeneratePresignedFIleUploadUrlResponseYaml:
      description: >-
        Response that provides presigned URL for making PUT upload to S3 bucket
        from a client application
      properties:
        url:
          description: Presigned URL for making PUT upload to S3 bucket
          type: string
        key:
          description: Unique file name that will be obtained after uploading
          type: string
      type: object
      example:
        url: >-
          https://bucketname.s3.eu-west-1.amazonaws.com/5b96ed5cdc594ddc96382dff7162e9d2_filename.pdf?X-Amz-Expires=120&X-Amz-Security-Token=token&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=credentials&X-Amz-Date=20200423T120247Z&X-Amz-SignedHeaders=content-length;content-type;host&X-Amz-Signature=signature
        key: 5b96ed5cdc594ddc96382dff7162e9d2_filename.pdf
    PartnerhelpGeneratePresignedInvoiceDownloadUrlResponseYaml:
      description: >-
        Response that provides presigned URL for making download of invoice from
        S3 bucket
      properties:
        url:
          description: Presigned URL to download invoice from S3 bucket
          type: string
      type: object
      example:
        url: >-
          https://s3name.s3.eu-west-1.amazonaws.com/filename.pdf?X-Amz-Expires=exp&X-Amz-Security-Token=token&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=credential&X-Amz-Date=date&X-Amz-SignedHeaders=host&X-Amz-Signature=signature
    PartnerhelpGetSupportRequestTypesResponseYaml:
      description: Array of types request belongs to
      minLength: 1
      type: array
      example:
        - name: Top Placement
          subtype:
            - name: Interest
              subtype: []
              value: top_placement__interest
            - name: Issue
              subtype: []
              value: top_placement__issue
          value: top_placement
        - subtypes: []
          name: Menu update
          value: menu_update
      items:
        $ref: '#/components/schemas/PartnerhelpSupportRequestTypeYaml'
    PartnerhelpGetSupportRequestsResponseYaml:
      description: Response representing support requests from restaurant
      properties:
        requests:
          description: List of restaurant support requests
          items:
            $ref: '#/components/schemas/PartnerhelpSupportRequestYaml'
          type: array
        paging:
          description: Consists of pagination information
          properties:
            count:
              description: The total number of results
              format: int64
              type: integer
          type: object
      example:
        requests:
          - subject: Top Placement
            status: open
            id: '5646645'
            submittedDate: '2020-01-01T09:30:00.000Z'
          - subject: Change Logo Request
            status: closed
            id: '235253'
            submittedDate: '2020-01-01T09:30:00.000Z'
        paging:
          count: 35
      type: object
    PartnerhelpReplaceRestaurantMenuRequestYaml:
      description: request containing links in s3 to new menu files
      properties:
        fileKeys:
          description: >-
            Array of paths to the new menu files that were uploaded to the
            certain AWS s3 bucket
          maxLength: 10
          items:
            description: >-
              path to the new menu file that Was uploaded to the certain AWS s3
              bucket
            type: string
          type: array
      example:
        fileKeys:
          - 3c81dq0k9bhj1bn_menu_1.pdf
          - 1rhj7qhr6fhjgbm_menu_2.pdf
      type: object
    PartnerhelpSupportRequestYaml:
      description: Object that represents support request
      properties:
        subject:
          description: Request subject
          type: string
        status:
          description: Request status
          enum:
            - new
            - open
            - closed
            - pending
            - solved
            - hold
            - deleted
        id:
          description: The Id of the request
          type: string
        submittedDate:
          description: Request placed date
          format: date-time
          type: string
      type: object
    PartnerhelpSupportRequestTypeYaml:
      description: Object that represents type/sub-type of request
      properties:
        subTypes:
          description: Possible sub-types of request
          items:
            $ref: '#/components/schemas/PartnerhelpSupportRequestTypeYaml'
          type: array
        name:
          description: Human readable name
          type: string
        value:
          description: Type value which will be used for Zendesk ticket as a tag
          type: string
      type: object
    PartnerinvoicesRestaurantInvoiceDownloadInformationYaml:
      description: An information to download invoice content
      properties:
        expires:
          description: >-
            The time when the download URL expires and becomes invalid to
            download invoice content
          format: date-time
          type: string
        downloadUrl:
          description: The URL to download invoice content
          type: string
        downloadCsvUrl:
          description: The URL to download CSV invoice content
          type: string
      example:
        expires: '2020-10-07T16:23:55.000Z'
        downloadUrl: >-
          https://invoicesbucket.s3.eu-west-1.amazonaws.com/123456.html?X-Amz-Expires=60&x-amz-security-token=qw12qw12&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ABABABABAB/20201007/eu-west-1/s3/aws4_request&X-Amz-Date=20201007T162255Z&X-Amz-SignedHeaders=host;x-amz-security-token&X-Amz-Signature=34rt34rt
        downloadCsvUrl: >-
          https://je-internalassets-staging-uk.s3.eu-west-1.amazonaws.com/uk/invoices/2023/6001161.csv?response-content-disposition=inline&X-Amz-Security-Token=IQQkUfOqiOwId5y1AV7CU05g%3D%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20230420T091711Z&X-Amz-SignedHeaders=host&X-Amz-Expires=1799&X-Amz-Credential=ASIAUCNJPS27E%2F20230420%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Signature=ccdec27dc
      type: object
    PartnerinvoicesRestaurantInvoiceSummaryYaml:
      description: An invoice summary for the invoice period
      properties:
        createdDate:
          description: The invoice created date
          format: date-time
          type: string
        startDate:
          description: The start date of the invoice period
          format: date
          type: string
        endDate:
          description: The end date of the invoice period
          format: date
          type: string
        id:
          description: The Id of the invoice
          type: string
      type: object
    PartnerinvoicesRestaurantInvoicesYaml:
      type: object
      properties:
        invoices:
          description: List of restaurant invoice summaries
          items:
            $ref: '#/components/schemas/PartnerinvoicesRestaurantInvoiceSummaryYaml'
          type: array
        paging:
          description: Consists of pagination information
          properties:
            cursors:
              description: Consists of cursor markers used in pagination
              properties:
                after:
                  description: >-
                    The value should be used in the query parameter named after.
                    It is used as a cursor of the last returned record in the
                    previous request, from which next offset going to be
                    fetched. A missing or empty value indicates that the end of
                    the result set has been reached
                  type: string
              type: object
          type: object
      example:
        invoices:
          - id: i9999999
            createdDate: '2020-09-29T09:26:09.930Z'
            startDate: '2020-09-21'
            endDate: '2020-09-27'
          - id: i8888888
            createdDate: '2020-09-22T11:00:32.800Z'
            startDate: '2020-09-14'
            endDate: '2020-09-20'
        paging:
          cursors:
            after: fewyNzQyOGI3OHYt
    PartneroffersAvailableTimeSlotsResponseYaml:
      type: object
      properties:
        available:
          description: The collection of available time slots in restaurant local time
          nullable: false
          items:
            description: Pair of start and end time of available period to create offer
            properties:
              from:
                description: The available offer start time
                nullable: false
                format: time
                type: string
              to:
                description: The available offer end time
                nullable: false
                format: time
                type: string
            type: object
          type: array
        overlappingOfferIds:
          description: The collection of overlapped offer ids for same date
          nullable: false
          items:
            type: string
          type: array
      example:
        available:
          - from: '12:00:00'
            to: '12:30:00'
          - from: '12:30:00'
            to: '13:00:00'
        overlappingOfferIds:
          - '1'
          - '2'
    PartneroffersBogofYaml:
      title: Bogof
      description: Bogof offer configuration.
      type: object
      properties:
        productSet:
          description: Items that would be discounted.
          $ref: '#/components/schemas/PartneroffersProductSetYaml'
        maximumNumberOfRedemptions:
          description: The maximum number of free items can be given.
          format: integer
          type: number
          minimum: 1
          deprecated: true
          nullable: true
        maximumRedemptions:
          description: >-
            The maximum number of discounted items for this offer, unlimited
            when null
          format: integer
          type: number
          minimum: 1
          default: 1
          nullable: true
        discount:
          description: Item discount details.
          $ref: '#/components/schemas/PartneroffersDiscountYaml'
      example:
        productSet:
          categories:
            - name: Pizza
        maximumRedemptions: 1
        discount:
          discountPercentage: 100
    PartneroffersBogofMixMatchYaml:
      title: Bogof
      description: Bogof Mix and Match offer configuration.
      type: object
      properties:
        productSet:
          description: Items that would be discounted.
          $ref: '#/components/schemas/PartneroffersProductSetYaml'
        maximumNumberOfRedemptions:
          description: The maximum number of free items can be given.
          format: integer
          type: number
          minimum: 1
          deprecated: true
          nullable: true
        maximumRedemptions:
          description: >-
            The maximum number of discounted items for this offer, unlimited
            when null
          format: integer
          type: number
          minimum: 1
          default: 1
          nullable: true
        discount:
          description: Item discount details.
          $ref: '#/components/schemas/PartneroffersDiscountYaml'
      example:
        productSet:
          categories:
            - name: Pizza
        maximumRedemptions: 1
        discount:
          discountPercentage: 100
    PartneroffersCampaignYaml:
      title: CampaignV2
      description: Campaign information.
      type: object
      properties:
        description:
          description: Description of the campaign
          nullable: false
          type: string
        id:
          description: Internal id of the campaign
          nullable: false
          type: string
        name:
          description: Name of the campaign
          nullable: false
          type: string
        type:
          description: Type of the campaign
          nullable: false
          type: string
        offerTemplate:
          description: Information about offer
          nullable: false
          $ref: '#/components/schemas/PartneroffersOfferTemplateV2Yaml'
        runningPeriods:
          type: array
          items:
            $ref: '#/components/schemas/PartneroffersMultipleDaysRunningPeriodYaml'
        status:
          description: The campaign status
          nullable: false
          $ref: '#/components/schemas/PartneroffersCampaignStatusTypeYaml'
        statusReason:
          description: Reason why status change was requested by customer if any
          nullable: true
        eligibleStatusChanges:
          description: Array of eligible statuses
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/PartneroffersCampaignEligibleStatusChangeYaml'
      example:
        description: Big Pizza on orders over 10 GBP
        id: someId111
        name: bigPizza
        type: GenericOfferCampaign
        offerTemplate:
          offerType: freeItem
          consumerSegment: all
          qualifyingCriteria:
            minimumSpendValue: 1000
          freeItem:
            productSet:
              products:
                - name: Big Pizza
            maximumRedemptions: 2
            discount:
              discountPercentage: 100
        runningPeriods:
          - startDate: '2020-12-12T00:00:00.0000000+00:00'
            endDate: '2021-12-12T00:00:00.0000000+00:00'
        status: subscribed
        eligibleStatusChanges:
          - fromDateTime: '2021-01-12T00:00:00.0000000+00:00'
            toDateTime: '2021-02-12T00:00:00.0000000+00:00'
            status: optOutRequested
    PartneroffersCampaignEligibleStatusChangeYaml:
      description: Eligible status changes for the campaign
      type: object
      properties:
        fromDateTime:
          description: Date and time when status change become eligible
          format: date-time
          type: string
        toDateTime:
          description: Date and time when status change become non-eligible
          format: date-time
          type: string
        status:
          description: Eligible status.
          $ref: '#/components/schemas/PartneroffersCampaignStatusTypeYaml'
      example:
        fromDateTime: '2021-01-12T00:00:00.0000000+00:00'
        toDateTime: '2021-02-12T00:00:00.0000000+00:00'
        status: optOutRequested
    PartneroffersCampaignStatusTypeYaml:
      description: The campaign status.
      enum:
        - subscribed
        - optOutRequested
        - optOutConfirmed
        - unsubscribed
      type: string
    PartneroffersCategoryYaml:
      title: Category
      description: Category model.
      type: object
      properties:
        name:
          description: Name of the category
          nullable: false
          type: string
      example:
        name: Pizza
    PartneroffersCreateOffersRequestV2Yaml:
      description: The request object for creating of new offer group.
      type: object
      properties:
        runningPeriod:
          nullable: false
          $ref: '#/components/schemas/PartneroffersRunningPeriodYaml'
        daysOfWeek:
          description: Days of week to run the offer
          items:
            enum:
              - sunday
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
            type: string
          uniqueItems: true
          type: array
        serviceTypes:
          description: Service types for which offer is applicable
          items:
            type: string
          uniqueItems: true
          type: array
        offerType:
          nullable: false
          $ref: '#/components/schemas/PartneroffersPartnerOfferTypeV2Yaml'
        consumerSegment:
          nullable: false
          $ref: '#/components/schemas/PartneroffersPartnerConsumerSegmentV2Yaml'
        offerDescription:
          description: Custom description for offer
          nullable: true
          type: string
        qualifyingCriteria:
          nullable: true
          $ref: '#/components/schemas/PartneroffersQualifyingCriteriaYaml'
        percent:
          nullable: true
          $ref: '#/components/schemas/PartneroffersPercentYaml'
        freeItem:
          nullable: true
          $ref: '#/components/schemas/PartneroffersFreeItemYaml'
        bogof:
          nullable: true
          $ref: '#/components/schemas/PartneroffersBogofYaml'
        bogofMixMatch:
          nullable: true
          $ref: '#/components/schemas/PartneroffersBogofMixMatchYaml'
        itemLevelDiscount:
          nullable: true
          $ref: '#/components/schemas/PartneroffersItemLevelDiscountYaml'
      example:
        daysOfWeek:
          - monday
          - friday
        runningPeriod:
          startDate: '2019-08-06'
          endDate: '2019-09-03'
          startTime: '12:00:00'
          endTime: '13:00:00'
        offerType: percent
        consumerSegment: all
        qualifyingCriteria:
          minimumSpendValue: 1000
        percent:
          discountPercent: 10
    PartneroffersDayOfWeekYaml:
      description: The day of week.
      enum:
        - sunday
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
      type: string
    PartneroffersDiscountYaml:
      description: Details of item discount
      type: object
      properties:
        discountPercentage:
          description: The percentage of discount
          nullable: true
          type: integer
        discountAmount:
          description: Fixed value discount in smallest unit of relevant currency
          nullable: true
          type: integer
      minProperties: 1
      maxProperties: 1
      example:
        discountPercentage: 100
    PartneroffersFreeItemYaml:
      title: FreeItem
      description: FreeItem offer configuration.
      type: object
      properties:
        productSet:
          description: Items that would be discounted.
          $ref: '#/components/schemas/PartneroffersProductSetYaml'
        maximumNumberOfRedemptions:
          description: The maximum number of free items can be given.
          format: integer
          type: number
          minimum: 1
          deprecated: true
          nullable: true
        maximumRedemptions:
          description: >-
            The maximum number of discounted items for this offer, unlimited
            when null.
          format: integer
          type: number
          minimum: 1
          default: 1
          nullable: true
        discount:
          description: Item discount details.
          $ref: '#/components/schemas/PartneroffersDiscountYaml'
      example:
        productSet:
          products:
            - name: Big Pizza
        maximumRedemptions: 2
        discount:
          discountPercentage: 100
    PartneroffersItemLevelDiscountYaml:
      title: ItemLevelDiscount
      description: Offer configuration for an item-level discount.
      type: object
      properties:
        productSet:
          description: Items that would be discounted.
          $ref: '#/components/schemas/PartneroffersProductSetYaml'
        maximumNumberOfRedemptions:
          description: The maximum number of free items that can be given.
          format: integer
          type: number
          minimum: 1
          deprecated: true
          nullable: true
        maximumRedemptions:
          description: >-
            The maximum number of discounted items for this offer, unlimited
            when null
          format: integer
          type: number
          minimum: 1
          default: 1
          nullable: true
        discount:
          description: Item discount details.
          $ref: '#/components/schemas/PartneroffersDiscountYaml'
      example:
        productSet:
          products:
            - name: Big Pizza
        maximumRedemptions: 2
        discount:
          discountPercentage: 50
    PartneroffersMultipleDaysRunningPeriodYaml:
      title: MultipleDaysRunningPeriod
      description: Running period of campaign
      type: object
      properties:
        daysOfWeek:
          type: array
          items:
            $ref: '#/components/schemas/PartneroffersDayOfWeekYaml'
          uniqueItems: true
        startDate:
          description: The date when campaign starts
          nullable: true
          format: date-time
          type: string
        endDate:
          description: The date when campaign ends
          nullable: false
          format: date-time
          type: string
        startTime:
          description: Timestamp when campaign starts during the day
          nullable: true
          format: time
          type: string
        endTime:
          description: Timestamp when campaign ends during the day
          nullable: true
          format: time
          type: string
      example:
        startDate: '2020-12-12T00:00:00.0000000+00:00'
        endDate: '2021-12-12T00:00:00.0000000+00:00'
    PartneroffersOfferTemplateYaml:
      type: object
      properties:
        maxQualifyingValue:
          description: Maximum qualifying value for a given offer template
          nullable: false
          properties:
            currency:
              description: Currency code in ISO 4217 format
              type: string
            value:
              description: Smallest unit of local currency
              format: int32
              type: integer
          type: object
        discountValue:
          description: Amount of the discount
          nullable: false
          format: double
          type: number
        consumerSegment:
          nullable: false
          $ref: '#/components/schemas/PartneroffersPartnerConsumerSegmentYaml'
        id:
          description: Internal id of the offer template
          nullable: false
          format: int32
          type: integer
        offerType:
          nullable: false
          $ref: '#/components/schemas/PartneroffersPartnerOfferTypeYaml'
      example:
        maxQualifyingValue:
          currency: GBP
          value: 5000
        discountValue: 15
        consumerSegment: All
        id: 333
        offerType: Percent
    PartneroffersOfferTemplateV2Yaml:
      title: OfferTemplate
      description: Offer info.
      type: object
      properties:
        offerType:
          nullable: false
          $ref: '#/components/schemas/PartneroffersPartnerOfferTypeV2Yaml'
        consumerSegment:
          nullable: false
          $ref: '#/components/schemas/PartneroffersPartnerConsumerSegmentV2Yaml'
        qualifyingCriteria:
          nullable: true
          $ref: '#/components/schemas/PartneroffersQualifyingCriteriaYaml'
        percent:
          nullable: true
          $ref: '#/components/schemas/PartneroffersPercentYaml'
        freeItem:
          nullable: true
          $ref: '#/components/schemas/PartneroffersFreeItemYaml'
        bogof:
          nullable: true
          $ref: '#/components/schemas/PartneroffersBogofYaml'
        itemLevelDiscount:
          nullable: true
          $ref: '#/components/schemas/PartneroffersItemLevelDiscountYaml'
      example:
        offerType: freeItem
        consumerSegment: all
        qualifyingCriteria:
          minimumSpendValue: 1000
        freeItem:
          productSet:
            products:
              - name: Big Pizza
          maximumRedemptions: 2
          discount:
            discountPercentage: 100
    PartneroffersOfferV2Yaml:
      title: Offer
      description: Offer model.
      type: object
      properties:
        offerId:
          description: Internal id of the offer
          type: string
        campaignId:
          description: The unique identifier of the offer campaign.
          nullable: true
          type: string
        runningPeriod:
          $ref: '#/components/schemas/PartneroffersRunningPeriodYaml'
        dayOfWeek:
          description: Day of week to run the offer
          nullable: false
          $ref: '#/components/schemas/PartneroffersDayOfWeekYaml'
        offerType:
          nullable: false
          $ref: '#/components/schemas/PartneroffersPartnerOfferTypeV2Yaml'
        consumerSegment:
          nullable: false
          $ref: '#/components/schemas/PartneroffersPartnerConsumerSegmentV2Yaml'
        offerDescription:
          description: Custom description for offer
          nullable: true
          type: string
        qualifyingCriteria:
          nullable: true
          $ref: '#/components/schemas/PartneroffersQualifyingCriteriaYaml'
        percent:
          nullable: true
          $ref: '#/components/schemas/PartneroffersPercentYaml'
        freeItem:
          nullable: true
          $ref: '#/components/schemas/PartneroffersFreeItemYaml'
        bogof:
          nullable: true
          $ref: '#/components/schemas/PartneroffersBogofYaml'
        bogofMixMatch:
          nullable: true
          $ref: '#/components/schemas/PartneroffersBogofMixMatchYaml'
        itemLevelDiscount:
          nullable: true
          $ref: '#/components/schemas/PartneroffersItemLevelDiscountYaml'
      required:
        - offerId
        - runningPeriod
        - dayOfWeek
        - offerType
      example:
        offerId: SomeId
        runningPeriod:
          startDate: '2020-12-12'
          endDate: '2021-12-12'
        dayOfWeek: wednesday
        offerType: freeItem
        consumerSegment: all
        qualifyingCriteria:
          minimumSpendValue: 1000
        freeItem:
          productSet:
            products:
              - name: Big Pizza
          maximumRedemptions: 2
          discount:
            discountPercentage: 100
    PartneroffersPartnerConsumerSegmentYaml:
      description: Consumer Segment that offer applies
      enum:
        - All
        - NewToRestaurant
      type: string
    PartneroffersPartnerConsumerSegmentV2Yaml:
      description: Consumer Segment that offer applies
      enum:
        - all
        - newToRestaurant
      type: string
    PartneroffersPartnerOfferTypeYaml:
      description: Type of the offer
      enum:
        - Percent
        - FreeItem
        - Bogof
        - StampCard
        - Notification
      type: string
    PartneroffersPartnerOfferTypeV2Yaml:
      description: Type of the offer
      enum:
        - percent
        - freeItem
        - bogof
        - stampCard
        - notification
        - itemLevelDiscount
      type: string
    PartneroffersPercentYaml:
      title: Percent
      description: Percent offer configuration.
      type: object
      properties:
        discountPercent:
          description: Discount percentage for offer
          nullable: true
          type: number
          format: integer
      example:
        discountPercent: 10
    PartneroffersPreferableModifierYaml:
      title: PreferableModifier
      description: Preferable modifier model model.
      type: object
      properties:
        id:
          description: Identifier of the modifier
          nullable: true
          type: string
        name:
          description: Name of the modifier
          nullable: true
          type: string
        modifierGroupName:
          description: Name of the modifier group
          nullable: true
          type: string
      example:
        id: 10abfcd
    PartneroffersProductYaml:
      title: Product
      description: Product model.
      type: object
      properties:
        name:
          description: Name of the product
          nullable: true
          type: string
        variationName:
          description: Name of the product variation
          nullable: true
          type: string
        preferableModifiers:
          description: Preferable modifiers for the product
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/PartneroffersPreferableModifierYaml'
      example:
        name: Ger Burger
        preferableModifiers:
          - id: 100asd
    PartneroffersProductSetYaml:
      title: ProductSet
      description: Set of products by brand names, categories, or specific products.
      type: object
      properties:
        brandNames:
          description: The names of specific brands product belongs to.
          nullable: true
          type: array
          items:
            type: string
        products:
          description: The specific products.
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/PartneroffersProductYaml'
        categories:
          description: The categories product belongs to.
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/PartneroffersCategoryYaml'
      example:
        brandNames:
          - Cola
          - Fanta
    PartneroffersQualifyingCriteriaYaml:
      title: QualifyingCriteria
      description: Conditions that must be met in order to get the offer.
      type: object
      properties:
        minimumSpendValue:
          description: >-
            The minimum spend value required to be eligible for the Offer in
            smallest unit of relevant currency.
          nullable: true
          format: integer
          type: number
        productSet:
          description: The basket product requirements to be eligible for the Offer.
          $ref: '#/components/schemas/PartneroffersProductSetYaml'
          nullable: true
    PartneroffersRunningPeriodYaml:
      title: RunningPeriod
      description: Running period of consumer offer
      additionalProperties: false
      properties:
        startDate:
          description: The date when offer starts
          nullable: true
          format: date
          type: string
        endDate:
          description: The date when offer ends
          nullable: false
          format: date
          type: string
        startTime:
          description: Timestamp when offer starts during the day
          nullable: true
          format: time
          type: string
        endTime:
          description: Timestamp when offer ends during the day
          nullable: true
          format: time
          type: string
      example:
        startDate: '2020-12-12'
        endDate: '2021-12-12'
    PartneropeninghoursShiftYaml:
      description: Shift information.
      type: object
      properties:
        name:
          description: Name of the shift
          type: string
        service:
          description: Service type of the shift
          enum:
            - unknown
            - delivery
            - collection
          type: string
        startAt:
          description: Start time of the shift in hh:mm format.
          pattern: ^([0-1]?[0-9]|2[0-3]):[0-5]\d$
          type: string
        endAt:
          description: End time of the shift in hh:mm format.
          pattern: ^([0-1]?[0-9]|2[0-3]):[0-5]\d$
          type: string
        availabilityId:
          description: Identifier of the availability
          type: string
        status:
          description: Status of the shift
          enum:
            - closed
            - open
          type: string
      example:
        name: Lunch
        service: delivery
        startAt: '10:00'
        endAt: '15:30'
        availabilityId: '111'
        status: open
    PartneropeninghoursShiftAvailabilityYaml:
      type: object
      properties:
        name:
          description: The name for the availability.
          type: string
        service:
          description: Service type of the availability.
          enum:
            - unknown
            - delivery
            - collection
          type: string
        id:
          description: A unique identifier for a given availability.
          type: string
      example:
        name: Delivery Lunch
        service: delivery
        id: '111'
    PartneropeninghoursShiftDaysYaml:
      description: The shifts at which restaurant is in service
      properties:
        monday:
          description: Shifts for Mondays
          items:
            $ref: '#/components/schemas/PartneropeninghoursShiftYaml'
          type: array
        tuesday:
          description: Shifts for Tuesdays
          items:
            $ref: '#/components/schemas/PartneropeninghoursShiftYaml'
          type: array
        wednesday:
          description: Shifts for Wednesdays
          items:
            $ref: '#/components/schemas/PartneropeninghoursShiftYaml'
          type: array
        thursday:
          description: Shifts for Thursdays
          items:
            $ref: '#/components/schemas/PartneropeninghoursShiftYaml'
          type: array
        friday:
          description: Shifts for Fridays
          items:
            $ref: '#/components/schemas/PartneropeninghoursShiftYaml'
          type: array
        saturday:
          description: Shifts for Saturdays
          items:
            $ref: '#/components/schemas/PartneropeninghoursShiftYaml'
          type: array
        sunday:
          description: Shifts for Sundays
          items:
            $ref: '#/components/schemas/PartneropeninghoursShiftYaml'
          type: array
      type: object
    PartneropeninghoursShiftTimesYaml:
      type: object
      properties:
        shiftTimes:
          $ref: '#/components/schemas/PartneropeninghoursShiftDaysYaml'
      x-konfig-properties:
        shiftTimes:
          description: The shifts at which restaurant is in service
          type: object
    PartnerorderhistoryRestaurantOrderAppliedDiscountYaml:
      description: A discount item in an order
      properties:
        type:
          description: The type of discount
          enum:
            - Percent
            - FirstTimeCustomer
            - StampCard
        discountAmount:
          description: The discount value in smallest unit of relevant currency
          format: integer
          type: number
      type: object
    PartnerorderhistoryRestaurantOrderCustomerInfoYaml:
      description: Information about a customer
      properties:
        deliveryAddress:
          description: The delivery address of the order
          nullable: true
          items:
            description: The address line
            type: string
          type: array
        name:
          description: The customer name
          nullable: true
          type: string
      type: object
    PartnerorderhistoryRestaurantOrderDetailsYaml:
      description: An order details
      properties:
        customerInfo:
          description: Information about a customer
          $ref: >-
            #/components/schemas/PartnerorderhistoryRestaurantOrderCustomerInfoYaml
        paymentType:
          description: The payment type (cash or card)
          enum:
            - Card
            - Cash
        paymentInfo:
          description: Information about a payment
          $ref: >-
            #/components/schemas/PartnerorderhistoryRestaurantOrderPaymentInfoYaml
        dueDate:
          description: The due date of the order
          format: date-time
          type: string
        deliveryPrice:
          description: The order delivery price in smallest unit of relevant currency
          format: integer
          type: number
        serviceFee:
          description: The order service fee in smallest unit of relevant currency
          format: integer
          type: number
        statusReason:
          description: The reason for the order's status, if known
          enum:
            - TooFar
            - FakeDelivered
            - FakeNotDelivered
            - FaxNotReceived
            - IncorrectOrder
            - NoAnswerFromRestaurant
            - MissedByRestaurant
            - FakeNotCollected
            - RestaurantCannotDeliver
            - RejectedByRestaurant
            - NewTimeRejected
            - SystemError
            - RestaurantIsBusy
            - TestOrder
        previousRestaurantOrderCount:
          description: >-
            The customer's previous total number of orders made to this
            restaurant
          type: number
        placedDate:
          description: The order placed date
          format: date-time
          type: string
        promptAsap:
          description: >-
            The flag that shows whether the customer awaits an order as soon as
            possible
          type: boolean
        currencyCode:
          description: >-
            The ISO-4217 currency code associated with the all prices and money
            amounts in order details
          type: string
        orderPrice:
          description: The order price in smallest unit of relevant currency
          format: integer
          type: number
        orderStatus:
          description: Status of completed order
          enum:
            - Completed
            - Cancelled
        orderItems:
          description: List of restaurant order items
          items:
            $ref: '#/components/schemas/PartnerorderhistoryRestaurantOrderItemYaml'
          type: array
        transactionReference:
          description: The payment transaction reference, if known
          type: string
        previousTotalOrderCount:
          description: >-
            The customer's previous total number of orders made to all
            restaurants
          type: number
        id:
          description: The Id of the order
          type: string
        orderPriceBreakdown:
          description: >-
            The order price breakdown (all amounts in smallest unit of relevant
            currency)
          $ref: >-
            #/components/schemas/PartnerorderhistoryRestaurantOrderPriceBreakdownYaml
        serviceType:
          description: Type of service (collection, delivery or dine-in)
          enum:
            - Delivery
            - Collection
            - DineIn
        appliedDiscounts:
          description: List of restaurant applied discounts
          items:
            $ref: >-
              #/components/schemas/PartnerorderhistoryRestaurantOrderAppliedDiscountYaml
          type: array
        friendlyId:
          description: The friendly order Id
          type: string
        orderNotes:
          description: Dictionary of the customer notes for the order
          nullable: true
          additionalProperties:
            type: string
          type: object
      type: object
      example:
        currencyCode: GBP
        customerInfo:
          deliveryAddress:
            - 13 Moon road
            - Mars
            - BS5 1KG
            - Bristol
          name: Simon Moon
        paymentType: Card
        paymentInfo:
          paidDate: '2020-01-01T09:31:00.000Z'
          paymentLines:
            - value: 500
              fee: 0
              paymentMethod: AccountCredit
            - value: 1549
              fee: 50
              paymentMethod: Card
          fees:
            - value: 50
              type: Card
            - value: 200
              type: Delivery
        deliveryPrice: 200
        serviceFee: 100
        statusReason: RejectedByRestaurant
        previousRestaurantOrderCount: 1
        placedDate: '2020-01-01T09:30:00.000Z'
        promptAsap: false
        previousJustEatOrderCount: 3
        orderPrice: 2099
        orderStatus: Cancelled
        orderItems:
          - description: one pizza and one drink from choices
            itemType: Product
            itemId: p1
            synonym: Medium
            subItems:
              - description: classic pizza Margherita
                itemType: MealPart
                itemId: mp1
                synonym: Medium
                subItems: []
                unitPrice: 0
                quantity: 1
                name: Margherita
              - description: ''
                itemType: MealPart
                itemId: mp2
                synonym: 1L
                subItems: []
                unitPrice: 0
                quantity: 1
                name: Coca-Cola
              - itemType: Accessory
                itemId: a1
                synonym: ''
                subItems: []
                unitPrice: 100
                quantity: 1
                name: Double Cheese
            unitPrice: 999
            quantity: 1
            name: Pizza and drink
          - description: >-
              Romaine lettuce, croutons, Parmesan cheese, lemon juice, olive
              oil, egg, Worcestershire sauce, anchovies, Dijon mustard, black
              pepper
            itemType: Product
            itemId: p2
            synonym: ''
            subItems: []
            unitPrice: 533
            quantity: 2
            name: Cesar Salad
        transactionReference: 123334567667989
        appliedDiscounts:
          - discountAmount: 2550
            type: StampCard
        id: rtvtgo0wwugmiiikdpzvsg
        orderPriceBreakdown:
          vouchers: 0
          discounts: 207
          fees: 250
          items: 2066
          accountCredits: 500
        serviceType: Delivery
        dueDate: '2020-01-01T10:15:00.000Z'
        friendlyId: 821367535
        orderNotes:
          NoteForRestaurant: Restaurant note
          NoteForDriver: Delivery note
    PartnerorderhistoryRestaurantOrderHistoryYaml:
      properties:
        orders:
          description: List of restaurant order summaries
          items:
            $ref: '#/components/schemas/PartnerorderhistoryRestaurantOrderSummaryYaml'
          type: array
        paging:
          description: Consists of pagination information
          properties:
            cursors:
              description: Consists of cursors markers used in pagination
              properties:
                after:
                  description: >-
                    The value should be used in the query parameter named after.
                    It is used as a cursor of the last returned record in the
                    previous request, from which next offset going to be
                    fetched. A missing or empty value indicates that the end of
                    the result set has been reached
                  type: string
              type: object
          type: object
      type: object
      example:
        orders:
          - orderStatus: Completed
            placedDate: '2020-01-01T09:30:00.000Z'
            deliveryPrice: 200
            orderPrice: 2099
            currencyCode: GBP
            paymentType: Card
            id: rtvtgo0wwugmiiikdpzvsgX
            serviceType: Delivery
            friendlyId: '821367535'
          - orderStatus: Cancelled
            placedDate: '2020-01-02T19:20:00.000Z'
            deliveryPrice: 0
            orderPrice: 99900
            currencyCode: GBP
            paymentType: Cash
            id: uerbbymdfkxdecduuerbby
            serviceType: Collection
            friendlyId: '829022736'
          - orderStatus: Completed
            placedDate: '2020-01-02T20:45:00.000Z'
            deliveryPrice: 0
            orderPrice: 54400
            currencyCode: GBP
            paymentType: Cash
            id: dfssd3efsferr4rgfdgf
            serviceType: DineIn
            friendlyId: '829022737'
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
    PartnerorderhistoryRestaurantOrderItemYaml:
      description: An item in an order
      properties:
        description:
          description: The description for the item
          type: string
        name:
          description: The name of the item
          type: string
        unitPrice:
          description: The unit price for the item
          format: integer
          type: number
        itemId:
          description: The Id of the item
          type: string
        synonym:
          description: The synonym of the item
          type: string
        quantity:
          description: The quantity of the item
          format: int32
          type: integer
        itemType:
          description: The type of item
          enum:
            - Product
            - MealPart
            - Accessory
        subItems:
          description: The sub items of item, such as meal parts of the meal or accessories
          items:
            $ref: '#/components/schemas/PartnerorderhistoryRestaurantOrderItemYaml'
          type: array
      type: object
    PartnerorderhistoryRestaurantOrderPaymentInfoYaml:
      description: Information about a payment
      properties:
        paidDate:
          description: The date and time the order was paid for, if known
          nullable: true
          format: date-time
          type: string
        fees:
          description: The fees applied to the order
          items:
            properties:
              type:
                description: The type of fee, such as delivery or card
                type: string
              value:
                description: The fee value in smallest unit of relevant currency
                format: integer
                type: number
            type: object
          type: array
        paymentLines:
          description: The payment lines
          items:
            description: An individual payment line
            properties:
              fee:
                description: The payment fee in smallest unit of relevant currency
                format: integer
                type: number
              paymentMethod:
                description: The payment method, such as cash or card
                type: string
              value:
                description: The payment value in smallest unit of relevant currency
                format: integer
                type: number
            type: object
          type: array
      type: object
    PartnerorderhistoryRestaurantOrderPriceBreakdownYaml:
      description: >-
        The order price breakdown (all amounts in smallest unit of relevant
        currency)
      properties:
        fees:
          description: The total amount of fees applied to the order
          format: integer
          type: number
        discounts:
          description: The total amount of discount(s) applied to the order
          format: integer
          type: number
        vouchers:
          description: The total amount of voucher(s) applied to the order
          format: integer
          type: number
        items:
          description: The total amount of order items
          format: integer
          type: number
        accountCredits:
          description: The total amount of account credit(s) applied to the order
          format: integer
          type: number
      type: object
    PartnerorderhistoryRestaurantOrderSummariesYaml:
      description: >-
        An orders summary for date range (all total values in smallest unit of
        relevant currency)
      properties:
        totalCollectionOrderValue:
          description: Total value of collection orders for date range
          format: int32
          type: number
        totalDeliveryOrderValue:
          description: Total value of delivery orders for date range
          format: int32
          type: number
        totalDineInOrderValue:
          description: Total value of dine-in orders for date range
          format: int32
          type: number
        totalDeliveryPriceValue:
          description: Total delivery price value for date range
          format: int32
          type: number
        totalServiceFeeValue:
          description: Total service fee value for date range
          format: int32
          type: number
        count:
          description: Total number of all orders for date range
          format: int32
          type: integer
        currencyCode:
          description: The ISO-4217 currency code associated with the total values
          type: string
        totalCardOrderValue:
          description: Total value of card orders for date range
          format: int32
          type: number
        totalOrderValue:
          description: Total value of all orders for date range
          format: int32
          type: number
        totalCashOrderValue:
          description: Total value of cash orders for date range
          format: int32
          type: number
      type: object
      example:
        totalCollectionOrderValue: 22241
        totalDeliveryOrderValue: 66621
        totalDineInOrderValue: 11131
        totalDeliveryPriceValue: 70
        totalServiceFeeValue: 50
        count: 27
        currencyCode: GBP
        totalCardOrderValue: 92059
        totalOrderValue: 99993
        totalCashOrderValue: 7934
    PartnerorderhistoryRestaurantOrderSummaryYaml:
      description: An order summary
      properties:
        orderStatus:
          description: Status of completed order
          enum:
            - Completed
            - Cancelled
        placedDate:
          description: The order placed date
          format: date-time
          type: string
        deliveryPrice:
          description: The order delivery price in smallest unit of relevant currency
          format: integer
          type: number
        serviceFee:
          description: The order service fee in smallest unit of relevant currency
          format: integer
          type: number
        orderPrice:
          description: The order price in smallest unit of relevant currency
          format: integer
          type: number
        currencyCode:
          description: The ISO-4217 currency code associated with the order price
          type: string
        paymentType:
          description: The payment type (cash or card)
          enum:
            - Card
            - Cash
        id:
          description: The Id of the order
          type: string
        serviceType:
          description: Type of service (collection, delivery or dine-in)
          enum:
            - Collection
            - Delivery
            - DineIn
        friendlyId:
          description: The friendly order Id
          type: string
      type: object
    PartnerreviewsRestaurantCommentsOnReviewYaml:
      type: object
      properties:
        restaurantComments:
          description: Restaurant comments in response on the customer review
          nullable: false
          type: string
      example:
        restaurantComments: Thank you very much for positive feedback
    PartnerreviewsRestaurantReviewsYaml:
      allOf:
        - $ref: '#/components/schemas/PagingPagedAfterOnlyCursorResponseYaml'
        - properties:
            reviews:
              description: List of restaurant reviews
              items:
                properties:
                  friendlyOrderId:
                    description: The friendly order Id the review is associated with
                    nullable: false
                    type: string
                  customerName:
                    description: The (first) name of the customer who left the review
                    nullable: false
                    type: string
                  rateDate:
                    description: The date and time on which the order was made
                    nullable: false
                    format: date-time
                    type: string
                  restaurantComments:
                    description: >-
                      Any comments left by the restaurant in response to the
                      review
                    nullable: true
                    type: string
                  id:
                    description: The Id of the review
                    nullable: false
                    format: int32
                    type: string
                  customerComments:
                    description: Any comments left by the customer in their review
                    nullable: true
                    type: string
                  approvedRestaurantComments:
                    description: >-
                      Any comments left by the restaurant in response to the
                      review approved by a moderator
                    nullable: true
                    type: string
                  ratingAverage:
                    description: The average score left by the customer
                    nullable: false
                    format: double
                    type: number
                type: object
              type: array
          type: object
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
        reviews:
          - friendlyOrderId: '123456789'
            customerName: Steve
            rateDate: '2020-10-18T17:42:38.000Z'
            restaurantComments: Thank u very much for positive feedback
            id: uimpewidbrjyxcweiqtoe
            customerComments: Extremely good food and service
            approvedRestaurantComments: Thank you very much for positive feedback
            ratingAverage: 5.66
          - friendlyOrderId: '123456790'
            customerName: Lucy
            rateDate: '2020-10-19T18:00:45.000Z'
            restaurantComments: We are sorry, but it is your fault
            id: tytyhjdbrhgjfxcweigfht
            customerComments: Coffee poured all over my food
            approvedRestaurantComments: We are sorry
            ratingAverage: 2.33
    PartnerreviewsRestaurantReviewsRatingBreakdownYaml:
      description: The breakdown of reviews
      properties:
        neutralRatingsCount:
          description: The count of neutral (3,4 stars) ratings across all reviews
          nullable: false
          format: int32
          type: integer
        goodRatingsCount:
          description: The count of good (5,6 stars) ratings across all reviews
          nullable: false
          format: int32
          type: integer
        badRatingsCount:
          description: The count of bad (1,2 stars) ratings across all reviews
          nullable: false
          format: int32
          type: integer
      type: object
    PartnerreviewsRestaurantReviewsSummaryYaml:
      type: object
      properties:
        ratingsBreakdown:
          description: >-
            The breakdown of good/neutral/bad reviews for different types of
            ratings
          nullable: false
          properties:
            service:
              description: >-
                The breakdown of good/neutral/bad service experience ratings
                across all reviews
              $ref: >-
                #/components/schemas/PartnerreviewsRestaurantReviewsRatingBreakdownYaml
            overall:
              description: >-
                The breakdown of good/neutral/bad overall experience ratings
                across all reviews
              $ref: >-
                #/components/schemas/PartnerreviewsRestaurantReviewsRatingBreakdownYaml
            delivery:
              description: >-
                The breakdown of good/neutral/bad delivery experience ratings
                across all reviews
              $ref: >-
                #/components/schemas/PartnerreviewsRestaurantReviewsRatingBreakdownYaml
            quality:
              description: >-
                The breakdown of good/neutral/bad quality experience ratings
                across all reviews
              $ref: >-
                #/components/schemas/PartnerreviewsRestaurantReviewsRatingBreakdownYaml
          type: object
        ratingAverage:
          description: The average score of all reviews
          nullable: false
          format: double
          type: number
        reviewsCount:
          description: The count of all reviews
          nullable: false
          format: int32
          type: integer
      example:
        ratingsBreakdown:
          service:
            neutralRatingsCount: 6
            goodRatingsCount: 45
            badRatingsCount: 15
          overall:
            neutralRatingsCount: 14
            goodRatingsCount: 44
            badRatingsCount: 8
          delivery:
            neutralRatingsCount: 10
            goodRatingsCount: 46
            badRatingsCount: 10
          quality:
            neutralRatingsCount: 12
            goodRatingsCount: 44
            badRatingsCount: 10
        ratingAverage: 4.7
        reviewsCount: 66
    PartnersignupAddressYaml:
      description: Information required for an address
      type: object
      properties:
        street:
          description: List of address lines
          type: array
          maxItems: 3
          minItems: 1
          items:
            type: string
            maxLength: 255
        city:
          description: Address field for the city name
          type: string
          maxLength: 255
        state:
          description: Address field for the state, province or political entity name
          type: string
          maxLength: 255
        postcode:
          description: Address field for postal code
          type: string
          maxLength: 20
        country:
          description: Address field for the country name
          type: string
          maxLength: 255
      example:
        street:
          - Unit 1
          - High Road
        city: London
        postcode: AR51 1ET
        state: London
        country: United Kingdom
    PartnersignupAlcoholYaml:
      description: >-
        Describes the alcohol requirements for the sign up. Partner must provide
        a license document if they choose to serve alcohol.
      type: object
      required:
        - servesAlcohol
      properties:
        servesAlcohol:
          description: Flag to indicate whether the partner chooses to serve alcohol
          type: boolean
        alcoholLicense:
          description: Alcohol license required for selling alcohol
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
      example:
        servesAlcohol: true
        alcoholLicense:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The image belongs to some other business premises
          files:
            - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdbc
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdba
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
    PartnersignupApplicantYaml:
      description: The applicant requirements
      required:
        - givenName
        - familyName
        - phoneNumber
        - emailAddress
      type: object
      properties:
        businessTitle:
          description: Applicant's business title
          type: string
          enum:
            - owner
            - manager
            - otherAuthorisedSignatory
        givenName:
          description: Applicant's first name
          type: string
          maxLength: 255
        familyName:
          description: Applicant's last name
          type: string
          maxLength: 255
        phoneNumber:
          description: Applicant's phone number in E.164 format.
          type: string
          maxLength: 20
        emailAddress:
          description: Applicant's email address
          type: string
          maxLength: 320
        photoId:
          description: Identity document of applicant
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
      example:
        businessTitle: manager
        givenName: Jane
        familyName: Doe
        phoneNumber: '+4479232123123'
        emailAddress: janeDoe@example.com
        photoId:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: a2e806b7-baf0-4b85-8e1a-a6170325ddcb
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 02229995-ad45-495e-8938-34a1e25799c8
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
    PartnersignupApplicationMetadataYaml:
      description: The application metadata
      required:
        - premisesType
        - occupancyType
        - applicationType
      type: object
      properties:
        occupancyType:
          description: >-
            The nature of occupancy that restaurant is using e.g Single,
            Multiple businesses under one ownership, Multiple businesses under
            multiple ownership etc...
          nullable: false
          enum:
            - unknown
            - single
            - multipleBusinessSingleOwnership
            - multipleBusinessMultipleOwnership
            - other
          type: string
        applicationType:
          description: The type of sign up application i.e. Standard, Non-Standard.
          nullable: false
          enum:
            - unknown
            - standard
            - nonStandard
          type: string
        premisesType:
          description: >-
            The type of premises that restaurant is using e.g Pub, Hotel, Stall
            etc...
          nullable: false
          enum:
            - unknown
            - highStreet
            - ghostKitchen
            - residential
            - pubOrHotelSameName
            - pubOrHotelDifferentName
            - pubOrHotelLeased
            - pubOrHotelUnknown
            - unit
            - stall
            - shoppingCentre
            - van
            - other
          type: string
      example:
        applicationType: nonStandard
        occupancyType: multipleBusinessMultipleOwnership
        premisesType: van
    PartnersignupApplicationStatusYaml:
      description: The application status i.e. Open, Approved etc.
      enum:
        - userAssigned
        - openApplication
        - manualInterventionRequired
        - readyForInitialReview
        - initialReviewRejected
        - readyForFinalReview
        - finalReviewRejected
        - approved
      type: string
    PartnersignupAuditLogYaml:
      description: Response representing the audit log entries for a sign up
      properties:
        logEntries:
          description: Audit log
          type: array
          items:
            $ref: '#/components/schemas/PartnersignupAuditLogEntryYaml'
        paging:
          $ref: '#/components/schemas/PagingPagedCursorResponseYaml'
      example:
        logEntries:
          - signupId: '123456789'
            timestamp: '2024-02-02T11:20:58.174Z'
            action: view
            documentType: catalog
            user: Partner
          - signupId: '987654321'
            timestamp: '2024-02-02T11:30:58.174Z'
            action: upload
            documentType: alcoholLicense
            user: Partner
        paging:
          cursors:
            before: '2024-02-02T11:20:58.174Z'
            after: '2024-02-02T11:30:58.174Z'
      type: object
    PartnersignupAuditLogEntryYaml:
      type: object
      properties:
        signupId:
          description: The id of the sign up.
          type: string
        timestamp:
          description: Timestamp when signup was last edited [YYYY-MM-DDThh:mm:ssZ]
          format: date-time
          type: string
        action:
          description: The type of action the user made
          type: string
        documentType:
          description: The type of document (if applicable)
          $ref: '#/components/schemas/PartnersignupDocumentTypeYaml'
        user:
          description: >-
            The name of the agent, or "Partner" for actions triggered by a
            partner.
          type: string
          maxLength: 512
      example:
        signupId: '2026174131'
        timestamp: '2024-02-02T11:20:58.174Z'
        action: upload
        documentType: alcoholLicense
        user: Partner
    PartnersignupBankingDetailsYaml:
      description: The banking details
      required:
        - accountNumber
        - bankName
        - accountHolderName
      type: object
      properties:
        accountNumber:
          description: The bank account number
          type: string
          maxLength: 13
        bankName:
          description: The name of the bank
          type: string
          maxLength: 255
        accountHolderName:
          description: The name on the bank account
          type: string
          maxLength: 255
        bankCode:
          description: >-
            The number identifying the banking company and optionally including
            a code to identify the particular branch (can be omitted for tenants
            where bank code is embedded in the account number)
          type: string
          minLength: 0
          maxLength: 10
      example:
        accountNumber: '1234567890'
        bankName: HSBC
        accountHolderName: Mr John Doe
        bankCode: '123456'
    PartnersignupBusinessDetailsYaml:
      description: The business details
      type: object
      properties:
        brandName:
          description: The name of partner's business.
          type: string
          maxLength: 512
        businessLegalName:
          description: >-
            Legal name of business that is registered with Companies House or
            similar authority
          type: string
          maxLength: 512
        businessPhoneNumber:
          description: Business phone number in E.164 format.
          type: string
          maxLength: 20
        businessIdentifier:
          description: Business unique identifier.
          type: string
          maxLength: 20
        businessIdentifierType:
          description: >-
            Business id type. Australia or New Zealand business number or Goods
            and services tax.
          type: string
          enum:
            - gstNumber
            - abn
            - nzbn
        premisesAddress:
          $ref: '#/components/schemas/PartnersignupAddressYaml'
        businessType:
          $ref: '#/components/schemas/PartnersignupBusinessTypesYaml'
        kitchenPhoto:
          description: Pictures of Kitchen
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
        leaseAgreement:
          description: Lease agreement if business operates from leased premises
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
        logo:
          description: Business logo to be used by our platform
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
        ownerLetter:
          description: >-
            Document that proves that the owner has given consent to operate in
            the premises by applicant
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
        proofOfAddress:
          description: >-
            Registration with the local authority or a permission to trade where
            the food truck is parked.
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
        proofOfOwnership:
          description: Document providing ownership details .e.g Utility Bill.
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
        shopFrontPhoto:
          description: Picture of the shop front
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
        streetTradingLicense:
          description: License to operate business as a mobile or street vendor
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
      example:
        brandName: A Company that Makes Everything
        businessLegalName: ACME Inc.
        businessPhoneNumber: '+442300000000'
        businessIdentifier: '909242522'
        businessIdentifierType: abn
        premisesAddress:
          street:
            - Unit 1
            - High Road
          city: London
          postcode: AR51 1ET
          state: London
          country: United Kingdom
        businessType: restaurant
        kitchenPhoto:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 41ba4056-f014-427a-8060-cad0910532eb
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: f718a131-8281-4c1a-9140-d14e250ebb88
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
        leaseAgreement:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 11b4c1c1-a72b-4e91-9b55-97a590f81d5a
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 9e39930a-29e3-4d88-980c-9b68455396ae
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
        logo:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 6da9bfe6-47b4-4870-86a8-9d7da92f815e
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 07088997-3834-4e5e-9792-b910239a7418
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
        ownerLetter:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 6c36c9b1-0064-4f74-9577-d00f3352f8c2
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 6d36a5d6-170b-4ffe-8642-28d38fe52c44
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
        proofOfAddress:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdbc
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdba
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
        proofOfOwnership:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 6da9bfe6-47b4-4870-86a8-9d7da92f815e
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 07088997-3834-4e5e-9792-b910239a7418
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
        shopFrontPhoto:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 5edc8fa7-982a-40cb-9b50-08ee7498833e
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 21f87f18-6c35-4413-bb20-a3c72b7cfd1c
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
        streetTradingLicense:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdbc
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdba
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
    PartnersignupCatalogueYaml:
      description: The catalogue
      required:
        - primaryCuisine
      type: object
      minProperties: 1
      properties:
        primaryCuisine:
          description: Partner's primary cuisine
          type: string
          maxLength: 255
        secondaryCuisine:
          description: Partner's secondary cuisine
          type: string
          maxLength: 255
        url:
          description: URL for the partner's catalogue
          type: string
          maxLength: 2048
        productCatalog:
          description: >-
            Catalogue showing products that business wants to sell using our
            platform
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
      example:
        primaryCuisine: Pizza
        secondaryCuisine: Burgers
        url: https://menu.url.com
        productCatalog:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdba
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 5f08903a-bfcb-475a-af8c-92e68d6da9cb
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
    PartnersignupDocumentYaml:
      description: Document associated with a sign-up requirement
      type: object
      properties:
        status:
          description: Status of this requirement.
          type: string
          $ref: '#/components/schemas/PartnersignupRequirementStatusYaml'
        rejectionReasons:
          description: Reason(s) provided for the rejection of this requirement
          type: array
          items:
            $ref: '#/components/schemas/PartnersignupRejectionReasonYaml'
        files:
          description: List of documents associated with this requirement document
          type: array
          items:
            $ref: '#/components/schemas/PartnersignupFileYaml'
      example:
        status: initialReviewRejected
        rejectionReasons:
          - type: other
            comment: This URL does not show your catalogue
        files:
          - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdbc
            contentType: image/png
            dateAdded: '2022-11-17T09:37:16.899Z'
          - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdbd
            contentType: image/jpeg
            dateAdded: '2022-11-17T09:40:00.000Z'
    PartnersignupDocumentTypeYaml:
      description: The type of the document
      enum:
        - catalog
        - photoId
        - proofOfAddress
        - fsaCertificate
        - logo
        - proofOfOwnership
        - shopFrontPhoto
        - leaseAgreement
        - ownerLetter
        - streetTradingLicense
        - kitchenPhoto
        - hygieneRegistration
        - alcoholLicense
      type: string
    PartnersignupFileYaml:
      description: File associated with a sign-up requirement
      type: object
      required:
        - documentKey
        - contentType
      properties:
        documentKey:
          description: >-
            A unique key to document resource that can be used to retrieve
            document contents
          type: string
          maxLength: 36
        contentType:
          description: MIME type of document
          type: string
          maxLength: 128
        dateAdded:
          description: When the document was added [yyyy-MM-ddTHH:mm:ssZ]
          format: date-time
          type: string
      example:
        documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdbc
        contentType: image/png
        dateAdded: '2022-11-17T09:37:16.899Z'
    PartnersignupFulfillmentYaml:
      description: Information about the partner's delivery preferences
      required:
        - types
      type: object
      properties:
        types:
          $ref: '#/components/schemas/PartnersignupFulfillmentTypesYaml'
        numberOfDeliveryDriversAtPeak:
          description: Maximum number of delivery drivers
          type: number
          format: integer
          minimum: 0
          nullable: true
      example:
        types:
          - jetDelivery
        numberOfDeliveryDriversAtPeak: 2
    PartnersignupGeneratePresignedFileRequestYaml:
      description: Request to create a presigned file link for uploading documents
      type: object
      required:
        - contentType
      properties:
        contentType:
          description: >-
            MIME type of document being uploaded - the presigned url will then
            be restricted to this content type
          type: string
          maxLength: 128
      example:
        contentType: image/png
    PartnersignupHygieneYaml:
      description: >-
        Describes the hygiene requirements for the sign up. Partner can have
        only one rating from given agency.
      type: object
      minProperties: 1
      properties:
        ratings:
          description: List of ratings for the partner
          type: array
          minProperties: 1
          items:
            $ref: '#/components/schemas/PartnersignupHygieneDetailYaml'
      example:
        ratings:
          - agency: fsa
            rating: registrationSubmitted
            url: https://fsa.co.uk/business/1
            hygieneRegistration:
              status: initialReviewRejected
              rejectionReasons:
                - type: other
                  comment: The document is not clear
              files:
                - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdbc
                  contentType: image/png
                  dateAdded: '2022-11-17T09:37:16.899Z'
                - documentKey: 5f08903a-bfcb-475a-af8c-92e68d6da9c9
                  contentType: image/png
                  dateAdded: '2022-11-17T09:38:16.899Z'
          - agency: fss
            rating: registrationSubmitted
            url: https://fss.co.uk/business/1
            hygieneRegistration:
              status: initialReviewRejected
              rejectionReasons:
                - type: other
                  comment: The document is not clear
              files:
                - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdba
                  contentType: image/png
                  dateAdded: '2022-11-17T09:37:16.899Z'
                - documentKey: 5f08903a-bfcb-475a-af8c-92e68d6da9cb
                  contentType: image/png
                  dateAdded: '2022-11-17T09:38:16.899Z'
    PartnersignupHygieneDetailYaml:
      description: >-
        Describes the hygiene requirement for the sign up. Agencies are specific
        to a country and region. Every agency has a set of values that can be
        used for rating.
      required:
        - agency
        - rating
      type: object
      minProperties: 1
      properties:
        agency:
          description: >-
            Agency that provides the hygiene rating. Agencies are specific to a
            country or region.
          type: string
          maxLength: 20
        rating:
          description: >-
            Hygiene rating for the sign-up application. The allowed list of
            values depends on the agency.
          type: string
          maxLength: 50
        url:
          description: >-
            Partner's hygiene rating link. It should link to official website of
            the hygiene agency that clearly shows the partner business' name and
            hygiene rating.
          type: string
          maxLength: 2048
        hygieneRegistration:
          description: >-
            Proof of application for registration with hygiene agency. It is
            required in case the business is in process of being certified by
            the agency.
          $ref: '#/components/schemas/PartnersignupDocumentYaml'
      example:
        agency: fsa
        rating: registrationSubmitted
        url: https://fsa.co.uk/business/1
        hygieneRegistration:
          status: initialReviewRejected
          rejectionReasons:
            - type: other
              comment: The document is not clear
          files:
            - documentKey: 52863240-17e0-40d1-a2a7-aaa97e03bdbc
              contentType: image/png
              dateAdded: '2022-11-17T09:37:16.899Z'
            - documentKey: 5f08903a-bfcb-475a-af8c-92e68d6da9c9
              contentType: image/png
              dateAdded: '2022-11-17T09:38:16.899Z'
    PartnersignupMarketingConsentYaml:
      description: Marketing consent preferences for a new partner
      type: object
      properties:
        email:
          description: Whether the partner consents to marketing by email
          type: boolean
          default: false
        sms:
          description: Whether the partner consents to marketing by SMS
          type: boolean
          default: false
      example:
        email: true
        sms: false
    PartnersignupRejectionReasonYaml:
      description: Rejection details for a document
      required:
        - type
      type: object
      properties:
        type:
          description: Type of rejection
          type: string
          enum:
            - other
            - incorrectDocument
            - notClearEnough
            - outdated
            - noOwnersName
            - noOwnersPhoto
            - noBusinessAddress
            - noBusinessName
            - missingPages
            - handwritten
            - missingInformation
            - noAllergenKey
            - logoNameDoesNotMatch
            - copyrightInfringement
            - photoFromInternet
            - sameView
            - samePhotos
            - newRequirement
            - uniqueReferenceNumberMissing
            - ownerNameDoesNotMatch
            - businessAddressDoesNotMatch
            - licenseNumberMissing
        comment:
          description: >-
            Details of rejection reason. Only valid if the reject reason is
            other.
          type: string
          maxLength: 512
      example:
        type: other
        comment: The image belongs to some other business premises
    PartnersignupRequirementStatusYaml:
      description: The approval status of a requirement
      enum:
        - notAvailable
        - received
        - readyForInitialReview
        - initialToBeRejected
        - initialNoIssuesFound
        - initialReviewRejected
        - readyForFinalReview
        - finalReviewNoIssuesFound
        - finalReviewToBeRejected
        - finalReviewRejected
        - approved
        - newRequirement
      type: string
    PartnersignupRequirementTypeYaml:
      description: The type of requirement
      enum:
        - alcohol
        - applicant
        - applicationMetadata
        - bankingDetails
        - businessDetails
        - fulfillment
        - hygiene
        - catalog
      type: string
    PartnersignupSignupYaml:
      type: object
      properties:
        signupId:
          description: The id of the signup.
          type: string
        brandName:
          description: The name of partner's business.
          type: string
          maxLength: 512
        status:
          $ref: '#/components/schemas/PartnersignupApplicationStatusYaml'
        premisesAddress:
          $ref: '#/components/schemas/PartnersignupAddressYaml'
        lastModified:
          description: Timestamp when signup was last edited [YYYY-MM-DDThh:mm:ssZ]
          format: date-time
          type: string
        businessType:
          $ref: '#/components/schemas/PartnersignupBusinessTypesYaml'
      example:
        signupId: '2026174131'
        brandName: ACME Ltd.
        status: openApplication
        premisesAddress:
          street:
            - Unit 1
            - High Road
          city: London
          postcode: AR51 1ET
          state: London
          country: United Kingdom
        businessType: restaurant
        lastModified: '2020-01-01T09:30:00.000Z'
    PartnersignupSignupListYaml:
      description: Response representing sign up items page
      properties:
        signups:
          description: List of sign-ups
          type: array
          items:
            $ref: '#/components/schemas/PartnersignupSignupYaml'
        paging:
          description: Consists of pagination information
          type: object
          properties:
            count:
              description: The total number of results
              format: int64
              type: integer
      example:
        signups:
          - brandName: ACME Ltd.
            status: openApplication
            businessType: restaurant
            premisesAddress:
              street:
                - Unit 1
                - High Road
              city: London
              postcode: AR51 1ET
              state: London
              country: United Kingdom
            lastModified: '2020-01-01T09:30:00.000Z'
          - brandName: ACME Foods
            status: openApplication
            businessType: restaurant
            premisesAddress:
              street:
                - Unit 2
                - High Road
              city: London
              postcode: AR51 1ET
              state: London
              country: United Kingdom
            lastModified: '2020-01-01T09:30:00.000Z'
        paging:
          count: 12
      type: object
    PartnersignupStatusYaml:
      required:
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PartnersignupApplicationStatusYaml'
      example:
        status: readyForInitialReview
    PartnersignupSummaryYaml:
      required:
        - brandName
        - status
        - nextStatus
      type: object
      properties:
        brandName:
          description: The name of partner's business.
          type: string
          maxLength: 512
        status:
          $ref: '#/components/schemas/PartnersignupApplicationStatusYaml'
        nextStatus:
          $ref: '#/components/schemas/PartnersignupApplicationStatusYaml'
        businessType:
          $ref: '#/components/schemas/PartnersignupBusinessTypesYaml'
        summaryItems:
          description: Breakdown of requirements type and status
          type: array
          maxItems: 40
          minItems: 1
          items:
            type: object
            properties:
              type:
                $ref: '#/components/schemas/PartnersignupSummaryItemTypeYaml'
              status:
                $ref: '#/components/schemas/PartnersignupSummaryItemStatusYaml'
              rejectionReasons:
                $ref: '#/components/schemas/PartnersignupRejectionReasonYaml'
      example:
        brandName: ACME Ltd.
        status: openApplication
        nextStatus: readyForInitialReview
        businessType: restaurant
        summaryItems:
          - type: emailAddress
            status: completed
          - type: businessPhoneNumber
            status: incomplete
          - type: hygieneRegistration
            status: pendingApproval
            rejectionReasons:
              type: other
              comment: The image belongs to some other business premises
          - type: shopFrontPhoto
            status: rejected
    PartnersignupSummaryItemStatusYaml:
      description: The status of summary item.
      enum:
        - incomplete
        - completed
        - pendingApproval
        - rejected
        - newRequirement
      type: string
    PartnersignupSummaryItemTypeYaml:
      description: The type of summary item.
      enum:
        - businessTitle
        - givenName
        - familyName
        - emailAddress
        - phoneNumber
        - photoID
        - street
        - city
        - province
        - postcode
        - country
        - state
        - alcoholLicense
        - applicationType
        - occupancyType
        - premisesType
        - businessPhoneNumber
        - businessIdentifier
        - businessIdentifierType
        - proofOfAddress
        - kitchenPhoto
        - leaseAgreement
        - shopFrontPhoto
        - streetTradingLicense
        - ownerLetter
        - proofOfOwnership
        - accountHolderName
        - accountNumber
        - bankCode
        - bankName
        - iban
        - fulfillmentType
        - hygieneAgency
        - hygieneRating
        - hygieneRegistration
        - catalog
        - logo
      type: string
    PartnersignupWelcomePackYaml:
      description: Information required to send out a welcome pack
      type: object
      properties:
        addressee:
          description: The name of the addressee who will receive the welcome pack.
          type: string
          maxLength: 512
        deliveryAddress:
          $ref: '#/components/schemas/PartnersignupAddressYaml'
      example:
        addressee: A Person who will receive the welcome pack
        deliveryAddress:
          street:
            - Unit 1
            - High Road
          city: London
          postcode: AR51 1ET
          state: London
          country: United Kingdom
    PartnersignupBusinessTypesYaml:
      description: The type of the business
      enum:
        - restaurant
        - grocery
      type: string
    PartnersignupFulfillmentTypesYaml:
      description: Partner's delivery types
      type: array
      items:
        type: string
        enum:
          - collection
          - jetDelivery
          - selfDelivery
    PartnersignupLeadYaml:
      description: Information used to create a Partner lead
      required:
        - applicant
        - brandName
        - premisesAddress
        - businessType
      type: object
      properties:
        applicant:
          $ref: '#/components/schemas/PartnersignupApplicantYaml'
        brandName:
          description: The name of partner's business
          type: string
          maxLength: 512
        premisesAddress:
          $ref: '#/components/schemas/PartnersignupAddressYaml'
        businessType:
          $ref: '#/components/schemas/PartnersignupBusinessTypesYaml'
        fulfillment:
          $ref: '#/components/schemas/PartnersignupFulfillmentYaml'
        primaryCuisine:
          description: Partner's primary cuisine
          type: string
          maxLength: 255
        marketingConsent:
          description: Marketing consent preferences
          $ref: '#/components/schemas/PartnersignupMarketingConsentYaml'
      example:
        applicant:
          businessTitle: manager
          givenName: Jane
          familyName: Doe
          phoneNumber: '+4479232123123'
          emailAddress: janeDoe@example.com
          photoId:
            status: initialReviewRejected
            rejectionReasons:
              - type: other
                comment: The document is not clear
            files:
              - documentKey: a2e806b7-baf0-4b85-8e1a-a6170325ddcb
                contentType: image/png
                dateAdded: '2022-11-17T09:37:16.899Z'
              - documentKey: 02229995-ad45-495e-8938-34a1e25799c8
                contentType: image/png
                dateAdded: '2022-11-17T09:38:16.899Z'
        brandName: ACME Ltd.
        premisesAddress:
          street:
            - Unit 1
            - High Road
          city: London
          postcode: AR51 1ET
          state: London
          country: United Kingdom
        businessType: restaurant
        primaryCuisine: Pizza
        fulfillment:
          types:
            - jetDelivery
          numberOfDeliveryDriversAtPeak: 2
        marketingConsent:
          email: false
          sms: false
    PartnersignupLeadSignupYaml:
      type: object
      properties:
        leadId:
          description: Identifier for lead to use as source for this sign up
          type: string
          maxLength: 512
        userId:
          description: Identifier for user to associate with the sign up
          type: string
          maxLength: 512
      required:
        - userId
        - leadId
      example:
        leadId: Dfac6ec6857a6445ba16c1b31770bf9d1
        userId: john.doe@acme.com
    PasswordEmailaddressYaml:
      properties:
        EmailAddress:
          description: An email address for an account.
          type: string
      type: object
    PasswordPasswordYaml:
      properties:
        Password:
          description: A password for a consumers account.
          type: string
      type: object
    PatchOperationYaml:
      description: A JSON Patch operation as defined by RFC 6902
      type: object
      required:
        - op
        - path
      properties:
        from:
          description: A string containing a JSON Pointer value
          type: string
        op:
          description: The operation to be performed
          type: string
          enum:
            - add
            - copy
            - move
            - remove
            - replace
            - test
        path:
          description: A JSON-Pointer. See examples
          type: string
        value:
          description: The value to be used within the operations
    PatchRequestYaml:
      description: A JSON Patch document as defined by RFC 6902
      items:
        $ref: '#/components/schemas/PatchOperationYaml'
      type: array
    PaymentoptionsDeductionYaml:
      description: Deduction (optionally applied to payment types).
      type: object
      required:
        - deductionType
        - applied
      properties:
        deductionType:
          description: The type of deduction.
          type: string
          enum:
            - takeawayPay
            - accountCredit
            - voucher
        applied:
          description: If the deduction has been applied to any payment.
          type: boolean
        appliedAmount:
          description: The amount deducted, if applied (in minor currency units).
          type: integer
          nullable: true
        availableAmount:
          description: >-
            The amount available for this deduction, if not applied (in minor
            currency units).
          type: integer
          nullable: true
        appliesTo:
          description: Defines how this deduction can be applied.
          type: object
          nullable: true
          properties:
            paymentTypes:
              description: List of paymentTypes this deduction can apply to.
              type: array
              nullable: true
              items:
                type: string
        code:
          description: Any code associated with this deduction - e.g. voucherCode.
          type: string
          nullable: true
        errorKeys:
          description: >-
            List of error codes when attempting to apply this deduction (e.g.
            voucher validation errors).
          type: array
          nullable: true
          items:
            type: string
    PaymentoptionsPaymentOptionsResponseYaml:
      description: Get detailed payment options.
      type: object
      required:
        - orderId
        - basketTotal
        - orderTotal
        - chargesTotal
        - availablePaymentTypes
      properties:
        orderId:
          description: Identifier of the order.
          type: string
        basketTotal:
          description: Total basket amount (in minor currency units).
          type: integer
        orderTotal:
          description: Total order amount - includes charges (in minor currency units).
          type: integer
        chargesTotal:
          description: Total of charges applied (in minor currency units).
          type: integer
        charges:
          description: List of charges/fees applied to the order.
          type: array
          nullable: true
          items:
            type: object
            required:
              - chargeType
              - chargeAmount
            properties:
              chargeType:
                description: The type of charge.
                type: string
                enum:
                  - serviceFee
              chargeAmount:
                description: Monetary amount of the charge (in minor currency units).
                type: integer
              displayText:
                description: Display context associated with the charge, if any.
                type: string
                nullable: true
        balances:
          description: List of available balances for credit.
          type: array
          nullable: true
          items:
            type: object
            required:
              - balanceType
              - balanceAmount
            properties:
              balanceType:
                description: The type of balance.
                type: string
                enum:
                  - takeawayPay
                  - accountCredit
              balanceAmount:
                description: Amount of balance available (in minor currency units).
                type: integer
        availableDeductions:
          description: List of optional deductions.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PaymentoptionsDeductionYaml'
        availablePaymentTypes:
          description: List of available payment types.
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/PaymentoptionsPaymentTypesPaymentTypeYaml'
              - $ref: '#/components/schemas/PaymentoptionsPaymentTypesPaymentTypeYaml'
              - $ref: '#/components/schemas/PaymentoptionsPaymentTypesPaymentTypeYaml'
              - $ref: '#/components/schemas/PaymentoptionsPaymentTypesPaymentTypeYaml'
              - $ref: '#/components/schemas/PaymentoptionsPaymentTypesPaymentTypeYaml'
              - $ref: '#/components/schemas/PaymentoptionsPaymentTypesPaymentTypeYaml'
              - $ref: '#/components/schemas/PaymentoptionsPaymentTypesPaymentTypeYaml'
              - $ref: '#/components/schemas/PaymentoptionsPaymentTypesPaymentTypeYaml'
            discriminator:
              propertyName: paymentType
              mapping:
                accountCredit: >-
                  #/components/schemas/PaymentoptionsPaymentTypesAccountCreditYaml
                applePay: '#/components/schemas/PaymentoptionsPaymentTypesApplePayYaml'
                card: '#/components/schemas/PaymentoptionsPaymentTypesCardYaml'
                cash: '#/components/schemas/PaymentoptionsPaymentTypesCashYaml'
                googlePay: '#/components/schemas/PaymentoptionsPaymentTypesGooglePayYaml'
                payPal: '#/components/schemas/PaymentoptionsPaymentTypesPayPalYaml'
                savedCard: '#/components/schemas/PaymentoptionsPaymentTypesSavedCardYaml'
                takeawayPay: '#/components/schemas/PaymentoptionsPaymentTypesTakeawayPayYaml'
        basketBreakdown:
          description: List of necessary amounts.
          type: array
          items:
            type: object
            required:
              - itemType
              - itemAmount
            properties:
              itemType:
                description: The type of basket item.
                type: string
                enum:
                  - subTotal
                  - multiBuyDiscount
                  - restaurantDiscount
                  - basketAdjustments
                  - deliveryFee
                  - serviceFee
              itemAmount:
                description: Amount of basket item available (in minor currency units).
                type: integer
              subItems:
                description: Sub items for this basket item.
                type: array
                nullable: true
                items:
                  type: object
                  required:
                    - name
                    - type
                    - amount
                  properties:
                    name:
                      description: The name of the relevant sub-item.
                      type: string
                    type:
                      description: The identifier of the relevant sub-item.
                      type: string
                    amount:
                      description: Amount of the sub-item (in minor currency units).
                      type: integer
      example:
        orderId: 8d523bc6850d49dab6cccf3084971578
        basketTotal: 1000
        chargesTotal: 50
        orderTotal: 1050
        charges:
          - chargeType: serviceFee
            chargeAmount: 50
            displayText: Service Charge
        balances:
          - balanceType: accountCredit
            balanceAmount: 200
          - balanceType: takeawayPay
            balanceAmount: 0
        availableDeductions:
          - deductionType: voucher
            applied: false
            appliesTo:
              paymentTypes:
                - cash
                - card
                - savedCard
                - payPal
          - deductionType: accountCredit
            applied: true
            appliesTo:
              types:
                - card
                - savedCard
                - payPal
            availableAmount: 200
            appliedAmount: 200
        availablePaymentTypes:
          - paymentType: cash
            paymentAmount: 1050
          - paymentType: card
            paymentAmount: 850
            appliedDeductions:
              - accountCredit
            psp: Adyen
            cardTypes:
              - VISA
              - MASTERCARD
              - AMEX
          - paymentType: savedCard
            paymentAmount: 850
            appliedDeductions:
              - accountCredit
            cards:
              - id: '12334456'
                cardType: VISA
                expiry: 2022-01
                last4Digits: '1234'
                psp: Adyen
          - paymentType: payPal
            paymentAmount: 850
            appliedDeductions:
              - accountCredit
            psp: Braintree
        basketBreakdown:
          - itemType: subTotal
            itemAmount: 1000
          - itemType: multiBuyDiscount
            itemAmount: -250
          - itemType: restaurantDiscount
            itemAmount: -150
          - itemType: basketAdjustments
            itemAmount: -150
            subItems:
              - name: StampCard discount
                type: StampCard
                amount: -250
              - name: Bag fee
                type: BagFee
                amount: 100
          - itemType: deliveryFee
            itemAmount: 550
          - itemType: serviceFee
            itemAmount: 50
    PaymentoptionsPaymentTypesPaymentTypeYaml:
      type: object
      required:
        - paymentType
        - paymentAmount
      properties:
        paymentType:
          description: The type of payment.
          enum:
            - accountCredit
            - applePay
            - card
            - cash
            - googlePay
            - payPal
            - savedCard
            - takeawayPay
          type: string
        selected:
          description: If this payment type should be the default one selected.
          type: boolean
        paymentAmount:
          description: The amount to be paid (in minor currency units).
          type: integer
        appliedDeductions:
          description: List of deductions that have been applied to this payment type.
          type: array
          items:
            type: string
    Paymentoptionsv2PaymentOptionsResponseYaml:
      type: object
      properties:
        availablePaymentTypes:
          description: List of available payment types
          type: array
          items:
            $ref: '#/components/schemas/Paymentoptionsv2PaymentTypeYaml'
      example:
        availablePaymentTypes:
          - paymentType: cash
            displayName: Cash
            status: available
            isOnlinePayment: false
            behaviour: external
            iconUrl: https://static.takeaway.com/images/inno-payments/icons/cash.svg
            hasOneClickPaymentDetails: false
            supportsOneClickPayment: false
          - paymentType: voucher
            displayName: Voucher
            status: available
            isOnlinePayment: true
            behaviour: external
            iconUrl: https://static.takeaway.com/images/inno-payments/icons/voucher.svg
            hasOneClickPaymentDetails: false
            supportsOneClickPayment: false
          - paymentType: accountcredit
            displayName: Account Credit
            status: available
            isOnlinePayment: true
            behaviour: external
            iconUrl: >-
              https://static.takeaway.com/images/inno-payments/icons/accountcredit.svg
            hasOneClickPaymentDetails: false
            supportsOneClickPayment: false
          - paymentType: jetpay
            displayName: JET Pay
            status: available
            isOnlinePayment: true
            behaviour: external
            iconUrl: https://static.takeaway.com/images/inno-payments/icons/jetpay.svg
            hasOneClickPaymentDetails: false
            supportsOneClickPayment: false
            balance: 750
          - paymentType: creditcard
            displayName: Card
            status: available
            isOnlinePayment: true
            behaviour: external
            iconUrl: https://static.takeaway.com/images/inno-payments/icons/card.svg
            hasOneClickPaymentDetails: true
            supportsOneClickPayment: true
          - paymentType: ideal
            displayName: IDEAL
            status: available
            isOnlinePayment: true
            behaviour: external
            iconUrl: https://static.takeaway.com/images/inno-payments/icons/ideal.svg
            hasOneClickPaymentDetails: false
            supportsOneClickPayment: false
            fee:
              value: 25
              calculation: flatFee
              currency: EUR
            choice:
              type: bank
              displayName: Select bank
              items:
                - id: 001A
                  displayName: ABN Amro
                - id: 002I
                  displayName: ING Bank
          - paymentType: applepay
            displayName: Apple Pay
            status: available
            isOnlinePayment: true
            behaviour: native
            iconUrl: >-
              https://static.takeaway.com/images/inno-payments/icons/applepay.svg
            hasOneClickPaymentDetails: false
            supportsOneClickPayment: false
          - paymentType: googlepay
            displayName: Google Pay
            status: available
            isOnlinePayment: true
            behaviour: native
            iconUrl: >-
              https://static.takeaway.com/images/inno-payments/icons/googlepay.svg
            hasOneClickPaymentDetails: false
            supportsOneClickPayment: false
          - paymentType: paypal
            displayName: PayPal
            status: available
            isOnlinePayment: true
            behaviour: external
            iconUrl: https://static.takeaway.com/images/inno-payments/icons/paypal.svg
            hasOneClickPaymentDetails: false
            supportsOneClickPayment: true
          - paymentType: paypal_braintree
            displayName: PayPal
            status: available
            isOnlinePayment: false
            behaviour: native
            iconUrl: https://static.takeaway.com/images/inno-payments/icons/paypal.svg
            hasOneClickPaymentDetails: false
            supportsOneClickPayment: false
            additionalData:
              clientKey: clientKey
              merchantAccountId: merchantAccountId
    Paymentoptionsv2PaymentTypeYaml:
      type: object
      required:
        - paymentType
        - displayName
        - status
        - isOnlinePayment
        - behaviour
      properties:
        paymentType:
          description: >
            Identifier of the payment type. Values include, but are not limited
            to:

            * cash

            * creditcard

            * googlepay

            * applepay

            * voucher

            * jetpay

            * accountcredit
          type: string
        displayName:
          description: >-
            Display text that the client may use to identify the payment method.
            Clients may use their own text, but should fall back to this if
            unavailable.
          type: string
        status:
          description: Indicates if the method is temporarily unavailable
          type: string
          enum:
            - available
            - unavailable
        isOnlinePayment:
          description: Indicates if the method is online or offline (e.g. a cash payment)
          type: boolean
        behaviour:
          description: >-
            Indicates whether the client may provide this option natively on the
            device (e.g. for wallet payments)
          type: string
          enum:
            - native
            - external
            - nativeOrExternal
        iconUrl:
          description: Url for payment option icon
          type: string
          nullable: true
        hasOneClickPaymentDetails:
          description: Indicates whether customer already has saved payment data
          type: boolean
        supportsOneClickPayment:
          description: >-
            Indicates whether payment option supports saving payment data for
            future payments
          type: boolean
        balance:
          description: >-
            The balance that is available for full or part payment (in minor
            currency units) (e.g. 750 is equal to 7.5 EUR)
          type: integer
          nullable: true
        currency:
          description: ISO 4217 currency code of balance
          type: string
        fee:
          description: Additional fee for this payment method
          type: object
          nullable: true
          properties:
            value:
              description: Fee in minor currency units
              type: integer
            currency:
              description: ISO 4217 currency code of fee
              type: string
            calculation:
              description: The way the fee should be added
              type: string
              enum:
                - flatFee
        additionalData:
          description: Additional data related to this payment method
          type: object
          nullable: true
          properties:
            clientKey:
              description: Used for PayPal Braintree payments
              type: string
            merchantAccountId:
              description: Used for PayPal Braintree payments
              type: string
        choice:
          description: A list of items that a customer must choose from
          type: object
          nullable: true
          properties:
            type:
              description: The type of choices being presented, e.g. 'bank'.
              type: string
            displayName:
              description: >-
                Display text that the client may use to identify the set of
                choices. Clients may use their own text, but should fall back to
                this if unavailable.
              type: string
            items:
              type: array
              items:
                type: object
                properties:
                  id:
                    description: Identifier for the choice.
                    type: string
                  displayName:
                    description: >-
                      Display text that the client may use to identify the
                      choice. Clients may use their own text, but should fall
                      back to this if unavailable.
                    type: string
                  iconUrl:
                    description: URL for an icon associated with the choice.
                    type: string
                    nullable: true
        excludedPaymentCapabilities:
          description: >-
            Determines if this payment method must be excluded from paying for
            certain items
          type: array
          nullable: true
          items:
            type: string
            enum:
              - driverTip
    Paymentorchestration4XxErrorSchemaYaml:
      description: A HTTP 4xx error response
      type: object
      properties:
        fault:
          description: An object representing the nature of the failure
          type: object
          required:
            - faultId
          properties:
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
            errors:
              description: The list of errors
              type: array
              items:
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue
                    type: string
                    nullable: true
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error
                    type: string
                    enum:
                      - paymentRefused
                      - paymentFailed
                      - invalidRequest
                      - unknown
                  paymentMethod:
                    description: The payment method
                    type: string
                    nullable: true
                  reasons:
                    description: Reasons for the error in slug format
                    type: array
                    nullable: true
                    items:
                      type: string
                  displayText:
                    description: Customer facing display context associated with the error
                    type: string
                    nullable: true
      example:
        faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
        errors:
          - description: JetPay error received with reason code
            errorCode: paymentRefused
            paymentMethod: jetpay
            reasons:
              - moneycardMonthlyLimitExceededError
            displayText: >-
              An unexpected error has occurred with your payment. Please try a
              different payment method.
    Paymentorchestration5XxErrorSchemaYaml:
      description: A HTTP 5xx error response
      type: object
      properties:
        fault:
          description: An object representing the nature of the failure
          type: object
          required:
            - faultId
          properties:
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
            errors:
              description: The list of errors
              type: array
              items:
                type: object
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist you in
                      resolving the issue
                    type: string
                    nullable: true
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error
                    type: string
                  displayText:
                    description: Customer facing display context associated with the error
                    type: string
                    nullable: true
      example:
        faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd
        errors:
          - description: Requested partner doesn't support any payment method
            errorCode: paymentFailed
            displayText: >-
              An unexpected error has occurred. Please try again or contact
              support for assistance
    PaymentorchestrationAuthorizeRequestYaml:
      description: The details needed to authorize a native payment transaction
      type: object
      properties:
        paymentMethod:
          description: |
            An identifier used to determine method of payment
          type: string
          nullable: false
        identifier:
          description: |
            A unique payment identifier
          type: string
          minLength: 1
          nullable: false
        paymentToken:
          description: |
            An authorization payment token generated by client device
          type: string
          minimum: 1
        additionalData:
          description: |
            Additional data for Braintree PayPal
          type: object
          nullable: true
          properties:
            payerID:
              description: ID of the Payer
              type: string
            payerEmail:
              description: Email of the Payer
              type: string
            deviceData:
              description: Device fingerprint coming from SDK
              type: string
      required:
        - paymentMethod
        - identifier
        - paymentToken
    PaymentorchestrationAuthorizeResponseYaml:
      description: Payment authorized
      type: object
      required:
        - orderId
      properties:
        orderId:
          description: The Id of the order.
          type: string
      example:
        orderId: ryuwbcq0vkaj0q0zfiex8w
    PaymentorchestrationOrchestrateRequestYaml:
      description: Details of a payment
      type: object
      properties:
        serviceType:
          description: Type of fulfilment
          type: string
          enum:
            - delivery
            - collection
            - dineIn
        legacyOrderId:
          description: Takeaway order id
          type: string
          nullable: true
        orderId:
          description: Modern order id
          type: string
        orderReference:
          description: The reference used by the customer to identify their order
          type: string
        device:
          description: Properties of the ordering device
          type: object
          properties:
            platform:
              description: Type of operating system
              type: string
              enum:
                - android
                - ios
                - web
            ip:
              description: Public IP address of device
              type: string
        products:
          description: Products of the order
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PaymentorchestrationProductYaml'
        currency:
          description: Currency of basket
          type: string
        deliveryDateTime:
          description: Date and time of requested delivery
          type: string
          format: date-time
        orderDate:
          description: Date and time of order placement
          type: string
          format: date-time
        returnUrl:
          description: Return URL for redirection after payment has succeeded.
          type: string
          format: uri
        paymentMethods:
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/PaymentsPaymentTypeYaml'
        partner:
          description: Properties of restaurant/grocery partner
          type: object
          required:
            - id
            - type
          properties:
            id:
              description: Partner id
              type: string
            type:
              description: Business type of partner
              type: string
              enum:
                - restaurant
                - groceries
            isTest:
              description: Whether partner is test partner or not
              type: boolean
            name:
              description: Partner name
              type: string
              nullable: true
            brand:
              description: Partner brand
              type: string
              nullable: true
            deliveryModel:
              description: Partner delivery model
              type: string
              nullable: true
              enum:
                - marketplace
                - logistics
            cuisines:
              description: Partner cuisines
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/PaymentorchestrationCuisineYaml'
            address:
              description: Partner's address
              type: object
              nullable: true
              properties:
                city:
                  description: This is the city
                  type: string
                streetAddress:
                  description: Street address
                  type: array
                  minItems: 1
                  items:
                    type: string
                postalCode:
                  description: Postal code
                  type: string
                coordinates:
                  description: The only two elements are longitude and latitude.
                  nullable: true
                  type: array
                  maxItems: 2
                  minItems: 2
                  items:
                    type: number
                    format: double
        costs:
          description: Breakdown of costs
          type: object
          properties:
            productsTotal:
              description: Total price of the products excluding discounts
              type: number
              format: integer
            discountsTotal:
              description: Total of discounts
              type: number
              format: integer
            delivery:
              description: Delivery cost
              type: number
              format: integer
            service:
              description: Service fee
              type: number
              format: integer
            bag:
              description: Bag fee
              type: number
              format: integer
            stampCardDiscount:
              description: Bag fee
              type: number
              format: integer
            voucherDiscountableAmount:
              description: Amount that needs to be input for voucher redemption
              type: number
              format: integer
            alcoholicItemsTotal:
              description: Total of products containing alcohol
              type: number
              format: integer
            driverTipAmount:
              description: Driver tip to be paid with the order
              type: number
              format: integer
        customer:
          description: Details of customer
          type: object
          properties:
            id:
              description: Id of customer
              type: string
            phone:
              description: Customer phone number
              type: string
            registrationDateTime:
              description: Customer's registration date and time in ISO-8601 format
              type: string
              format: date-time
              nullable: true
            role:
              description: Role of customer
              type: string
              enum:
                - guest
                - registered
                - unknown
            firstName:
              description: First name
              type: string
            lastName:
              description: Last name
              type: string
              nullable: true
            language:
              description: ISO 639-1 code of customer's requested language
              type: string
            email:
              description: Email address
              type: string
              format: email
            numberOfOrders:
              description: Number of orders placed
              type: number
              nullable: true
              format: integer
            consumerStatus:
              description: Consumer status
              type: string
              nullable: true
              enum:
                - newConsumer
                - returningConsumer
            deliveryAddress:
              description: Delivery address or `null` if collection
              type: object
              nullable: true
              properties:
                city:
                  description: This is the city
                  type: string
                streetAddress:
                  description: Street address
                  type: string
                postalCode:
                  description: Postal code
                  type: string
                geolocation:
                  description: Physical location
                  type: object
                  nullable: true
                  properties:
                    latitude:
                      description: Latitude in degrees
                      type: number
                    longitude:
                      description: Longitude in degrees
                      type: number
      required:
        - serviceType
        - orderId
        - orderReference
        - device
        - currency
        - deliveryDateTime
        - orderDate
        - returnUrl
        - paymentMethods
        - partner
        - costs
        - customer
    PaymentorchestrationOrchestrateResponseYaml:
      description: Detail of status of payment orchestration and required action
      type: object
      required:
        - type
      properties:
        type:
          description: Type of status or action
          type: string
          enum:
            - authorized
            - native
            - redirect
        voucher:
          description: Voucher that was applied
          nullable: true
          type: object
          required:
            - name
          properties:
            name:
              description: Name of the voucher
              type: string
            isStampCard:
              description: If voucher is a stamp card
              type: boolean
      discriminator:
        propertyName: type
        mapping:
          authorized: >-
            #/components/schemas/PaymentorchestrationOrchestrateResponsesAuthorizedYaml
          native: >-
            #/components/schemas/PaymentorchestrationOrchestrateResponsesNativeYaml
          redirect: >-
            #/components/schemas/PaymentorchestrationOrchestrateResponsesRedirectYaml
      oneOf:
        - $ref: >-
            #/components/schemas/PaymentorchestrationOrchestrateResponsesAuthorizedYaml
        - $ref: >-
            #/components/schemas/PaymentorchestrationOrchestrateResponsesNativeYaml
        - $ref: >-
            #/components/schemas/PaymentorchestrationOrchestrateResponsesRedirectYaml
    PaymentorchestrationCuisineYaml:
      type: object
      required:
        - id
      properties:
        id:
          description: Identifier of the cuisine
          type: string
    PaymentorchestrationOrchestrateResponsesAuthorizedYaml:
      type: object
      properties:
        type:
          description: Payment completed. No need to take further action.
          type: string
    PaymentorchestrationOrchestrateResponsesNativeYaml:
      type: object
      required:
        - data
      properties:
        type:
          description: >-
            Client needs to use a native SDK to get a token representing the
            customer's authorized payment, then send to the
            [Authorize](https://uk.api.just-eat.io/docs/) endpoint.
          type: string
        data:
          description: Details for completing payment natively.
          type: object
          properties:
            summary:
              description: >-
                Basket summary lines for display to the customer upon
                authorisation
              type: array
              minItems: 1
              items:
                type: object
                properties:
                  label:
                    description: Description of the line item in localised text
                    type: string
                  amount:
                    description: Positive or negative amount in minor currency units.
                    type: number
                    format: integer
                  sdkAmount:
                    description: Formatted amount that can be passed directly to the SDK.
                    type: string
                required:
                  - label
                  - amount
                  - sdkAmount
            identifier:
              description: Unique identifier required for the payment to be authorised.
              type: string
            currency:
              description: The currency code in ISO-4217 format.
              type: string
              minLength: 3
              maxLength: 3
            amount:
              description: >-
                Confirmation of the total amount that needs to be authorised as
                minor currency units.
              type: number
              format: integer
            sdkAmount:
              description: Formatted amount that can be passed directly to SDK.
              type: string
          required:
            - identifier
            - currency
            - amount
            - sdkAmount
            - summary
    PaymentorchestrationOrchestrateResponsesRedirectYaml:
      type: object
      required:
        - data
      properties:
        type:
          description: Client needs to redirect user to a payment page
          type: string
        data:
          description: Action details
          type: object
          properties:
            redirectUrl:
              description: Target redirection URL
              type: string
              format: uri
            target:
              $ref: >-
                #/components/schemas/PaymentorchestrationOrchestrateResponsesSharedTargetYaml
            pollingPageUrl:
              description: The polling page URL used to ensure an accurate payment status.
              type: string
              format: uri
              nullable: true
      example:
        type: redirect
        data:
          redirectUrl: https://test.adyen.com
          target: internalBrowser
          pollingPageUrl: >-
            https://payment-view.payments-view.int.sre-eks-staging-1.tkwy.cloud/status/fakepaymentreference?countryCode=nl&language=nl&returnUrl=fakereturnurl&traceId=faketraceid&hash=fakehash
    PaymentorchestrationOrchestrateResponsesSharedTargetYaml:
      description: The target used to complete the payment.
      type: string
      enum:
        - webView
        - internalBrowser
        - externalBrowser
      nullable: true
    PaymentorchestrationProductYaml:
      type: object
      required:
        - id
        - name
        - category
        - combinedPrice
      properties:
        id:
          description: Identifier of the product
          type: string
        name:
          description: Name of the product
          type: string
        category:
          description: Category of the product
          type: string
        combinedPrice:
          description: >-
            Total price in minor units of the currency for the item including
            side dishes or any other sub products come with it
          type: integer
    PaymentsPaymentTypeYaml:
      description: Detail of payment by payment method.
      type: object
      nullable: false
      properties:
        type:
          description: >
            The type of the payment method.


            This corresponds to the `availablePaymentTypes`->`paymentType` in
            the OK response of the [Payment
            Options](https://uk.api.just-eat.io/docs/) endpoint.
          type: string
          minLength: 1
          maxLength: 100
          nullable: false
        amount:
          description: >
            Amount to charge for this payment method as minor currency units in
            ISO-4217 format.


            The amount should not include the fee.
          type: number
          format: integer
          minimum: 1
          nullable: false
        fee:
          description: >-
            Fee applied for using this payment method as minor currency units in
            ISO-4217 format.
          type: number
          format: integer
          minimum: 0
          nullable: true
        additionalData:
          description: Additional data that is required for a particular payment method.
          oneOf:
            - $ref: '#/components/schemas/PaymentsTypesGenericYaml'
            - $ref: '#/components/schemas/PaymentsTypesVoucherYaml'
            - $ref: '#/components/schemas/PaymentsTypesJetPayYaml'
            - $ref: '#/components/schemas/PaymentsTypesCashYaml'
          nullable: true
      required:
        - type
        - amount
    PaymentsTypesCashYaml:
      type: object
      nullable: false
      properties:
        paysWith:
          description: The amount of money that the customer will pay with to the courier.
          type: number
          format: integer
          nullable: true
    PaymentsTypesGenericYaml:
      type: object
      nullable: false
      properties:
        choiceId:
          description: >-
            When the payment method required a choice to be made, the id of the
            choice selected by the customer.
          type: string
          nullable: true
        useOneClickPayment:
          description: >
            When a payment option supports one-click payments, 'true' indicates
            that, if the customer already has saved payment details, those
            should be used,

            and if no details are already saved, they should be saved for use
            next time.

            If 'false', no saved payment details will be used and none will be
            saved.
          type: boolean
          nullable: true
    PaymentsTypesJetPayYaml:
      type: object
      nullable: false
      properties:
        purchaseNumber:
          description: Customer's own reference.
          maxLength: 50
          type: string
          nullable: true
    PaymentsTypesVoucherYaml:
      type: object
      nullable: false
      properties:
        code:
          description: Voucher code to be redeemed.
          type: string
          nullable: false
      required:
        - code
    PerformanceLateOrdersResponseYaml:
      type: object
      properties:
        responses:
          description: >-
            List of late order responses from restaurant. Returns response type
            and count.
          type: array
          items:
            description: Type of available response and how many times it was selected.
            type: object
            properties:
              responseType:
                description: The response type for late order
                type: string
              count:
                description: Total number of late orders for the type
                format: int32
                type: integer
        totalNumberOfRequests:
          description: Total number of late night orders
          format: int32
          type: number
        averageResponseTimeInSeconds:
          description: Average time to accept late order in seconds
          format: int32
          type: number
    PerformanceRatingsResponseYaml:
      type: object
      properties:
        restaurantId:
          description: Just Eat restaurant identifier
          format: int32
          type: integer
        ratingCount:
          description: Count of ratings
          format: double
          type: number
        delivery:
          description: Average delivery rating
          format: double
          type: number
        periodStart:
          description: UTC date to specify date range start.
          type: string
          format: date-time
        periodEnd:
          description: UTC date to specify date range end.
          type: string
          format: date-time
    PerformanceReorderRateResponseYaml:
      type: object
      properties:
        rate:
          description: Customer reorder rate
          format: double
          type: number
        lastUpdatedUtc:
          description: UTC date to specify last update of reorder rate.
          type: string
          format: date-time
    PerformanceRestaurantResponseYaml:
      type: object
      properties:
        id:
          description: Just Eat restaurant identifier
          format: int32
          type: number
        name:
          description: Restaurant name
          type: string
        address:
          description: Restaurant address
          type: string
        logoUrl:
          description: Restaurant logo url
          type: string
        deliveryType:
          description: Type of restaurant delivery
          format: int32
          type: number
        deliveryRadiusUrl:
          description: Restaurant delivery radius url
          type: string
        goOffLineUrl:
          description: Temporary offline
          type: string
    PerformanceDeliveryOnTheWayResponseYaml:
      type: object
      properties:
        acceptedOrders:
          description: Total value of accepted orders
          format: int32
          type: number
        onTheWayOrders:
          description: Total value of on the way orders
          format: int32
          type: number
        tips:
          description: >-
            List of tips for improvement for on the way orders. Returns type of
            tip and the blog url.
          type: array
          items:
            type: object
            properties:
              findOutMoreLink:
                description: Url for on it's way information
                type: string
              type:
                description: Type of information
                type: string
    PerformanceDeliveryTimesResponseYaml:
      type: object
      properties:
        delivery:
          description: >-
            Performance analytics for delivery. Returns accepted orders, orders
            with added time, average and daily breakdown for additional time
          type: object
          properties:
            acceptedOrders:
              description: Total of accepted orders for delivery
              format: int32
              type: number
            ordersWithAddedTime:
              description: Total of accepted orders with added time for delivery
              format: int32
              type: number
            averageAcceptedTimePerOrder:
              description: Average value of accepted time per order
              format: double
              type: number
            dailyBreakdown:
              description: List of daily breakdown for additional minutes.
              type: array
              items:
                description: Day of the week and additional minutes.
                type: object
                properties:
                  dayOfWeek:
                    description: Number representing day of the week
                    format: int32
                    type: number
                  timeAdded:
                    description: >-
                      List of added minutes. Returns minutes added and count of
                      minutes added, with 5 minutes increments
                    type: array
                    items:
                      properties:
                        minutes:
                          description: Amount of minutes added
                          format: int32
                          type: number
                        count:
                          description: Count for minutes added for the amount
                          format: int32
                          type: number
            tips:
              description: List of tips for improving score for rejected orders.
              type: array
              items:
                description: Type of improvement tip and the link to information page.
                type: object
                properties:
                  link:
                    description: Link with information for delivery time
                    type: string
                  type:
                    description: Delivery time tip type
                    type: string
        collection:
          description: >-
            Performance analytics for collection. Returns accepted orders,
            orders with added time, average and daily breakdown for additional
            time
          type: object
          properties:
            acceptedOrders:
              description: Total of accepted orders for collection
              format: int32
              type: number
            ordersWithAddedTime:
              description: Total of accepted orders with added time for collection
              format: int32
              type: number
            averageAcceptedTimePerOrder:
              description: Average value of accepted time per order
              format: double
              type: number
            dailyBreakdown:
              description: List of daily breakdown for additional minutes.
              type: array
              items:
                type: object
                properties:
                  dayOfWeek:
                    description: Number representing day of the week
                    format: int32
                    type: number
                  timeAdded:
                    description: >-
                      List of added minutes. Returns minutes added and count of
                      minutes added, with 5 minutes increments
                    type: array
                    items:
                      properties:
                        minutes:
                          description: Amount of minutes added
                          format: int32
                          type: number
                        count:
                          description: Count for minutes added for the amount
                          format: int32
                          type: number
            tips:
              description: List of tips for improving score for rejected orders.
              type: array
              items:
                type: object
                properties:
                  link:
                    description: Link with information for collection time
                    type: string
                  type:
                    description: Collection time tip type
                    type: string
    PerformanceOrdersRejectedResponseYaml:
      type: object
      properties:
        restaurantId:
          description: Just Eat restaurant identifier
          format: int32
          type: integer
        totalOrders:
          description: Count of rejected orders
          format: int32
          type: integer
        sets:
          description: >-
            List of total rejected orders, key of rejection, total rejected
            orders and list of rejected orders per reason.
          type: array
          items:
            type: object
            properties:
              key:
                description: The rejected orders key
                type: string
              total:
                description: Total number of rejected orders
                format: int32
                type: integer
              values:
                description: >-
                  List rejected orders per reason. Returns rejected reason type
                  and total number.
                type: array
                items:
                  type: object
                  properties:
                    key:
                      description: Reason for rejected order
                      type: string
                    value:
                      description: Count of rejected orders
                      format: int32
                      type: integer
        tips:
          description: List of tips for improving score for rejected orders.
          type: array
          items:
            type: object
            properties:
              type:
                description: Category of tips for improving performance score.
                type: string
    PerformanceOrdersTotalsResponseYaml:
      type: object
      properties:
        orderCount:
          description: Count of fulfilled orders
          format: int32
          type: integer
        previousOrderCount:
          description: Count of fulfilled orders from previous week
          format: int32
          type: integer
        days:
          description: Average value of daily fulfilled orders.
          type: object
          properties:
            mon:
              description: Average value of fulfilled orders for Monday
              format: double
              type: number
            tue:
              description: Average value of fulfilled orders for Tuesday
              format: double
              type: number
            wed:
              description: Average value of fulfilled orders for Wednesday
              format: double
              type: number
            thu:
              description: Average value of fulfilled orders for Thursday
              format: double
              type: number
            fri:
              description: Average value of fulfilled orders for Friday
              format: double
              type: number
            sat:
              description: Average value of fulfilled orders for Saturday
              format: double
              type: number
            sun:
              description: Average value of fulfilled orders for Sunday
              format: double
              type: number
        averageWeeklyOrders:
          description: Average value of weekly fulfilled orders
          format: double
          type: number
    PerformanceScoreHistoryResponseYaml:
      type: object
      properties:
        orderScore:
          description: Overall orders performance score for the last 28 days
          format: double
          type: number
        averageOverallScore:
          description: Average overall score
          format: double
          type: number
        customerExperienceScore:
          description: Overall customer experience for the last 28 days
          format: double
          type: number
        performanceScore:
          description: Performance score for the last 28 days
          format: double
          type: number
        performanceScores:
          description: >-
            List of performance score per day, for the last 28 days. Overall
            score and timestamp is returned.
          type: array
          items:
            type: object
            properties:
              overallScore:
                description: Overall daily score
                format: double
                type: number
              timestampUtc:
                description: The UTC date and time
                type: string
                format: date-time
        tips:
          description: List of tips for performance improvement. Type of tip is returned.
          type: array
          items:
            type: object
            properties:
              type:
                description: Type of performance score information
                type: string
    PhonemaskingTwilioIncomingMessageCallbackRequestYaml:
      properties:
        body:
          description: The body of the text message being sent
          type: string
        from:
          description: The number of the sender in E.164 format
          type: string
      type: object
    PhonemaskingTwilioIncomingVoiceCallbackRequestYaml:
      properties:
        from:
          description: The number of the caller in E.164 format
          type: string
        digits:
          description: Any digits the caller has entered on their phone
          type: string
      type: object
    PhonemaskingTwilioProxyOutOfSessionCallbackRequestYaml:
      properties:
        from:
          description: The number the call or text message is from in E.164 format
          type: string
        sessionDateEnded:
          description: The date and time in which the proxy session ended
          nullable: true
          type: string
        callSid:
          description: A unique identifier for the call, generated by Twilio
          type: string
        smsSid:
          description: A unique identifier for the sms, generated by Twilio
          type: string
        sessionSid:
          description: A unique identifier for the proxy session, generated by Twilio
          type: string
      type: object
    PhonemaskinginteractionsTwilioInteractionCallbackRequestYaml:
      properties:
        outboundResourceUrl:
          description: The URL of the Twilio outbound resource
          type: string
        outboundResourceType:
          description: The outbound resource type
          type: string
        inboundResourceType:
          description: The inbound resource type
          type: string
        inboundResourceSid:
          description: The SID of the inbound resource
          type: string
        outboundResourceSid:
          description: The SID of the outbound resource
          type: string
        interactionType:
          description: The Type of the Interaction
          type: string
        interactionData:
          description: A JSON string that includes the message body of message interactions
          type: string
        inboundParticipantSid:
          description: The SID of the inbound Participant resource
          type: string
        interactionSid:
          description: The unique string to identify the Interaction resource
          type: string
        inboundResourceUrl:
          description: The URL of the Twilio inbound resource
          type: string
        interactionAccountSid:
          description: The SID of the Account that created the Interaction resource
          type: string
        outboundParticipantSid:
          description: The SID of the outbound Participant
          type: string
        interactionServiceSid:
          description: The SID of the parent Service resource
          type: string
        interactionSessionSid:
          description: The SID of the parent Session resource
          type: string
        outboundResourceStatus:
          description: The outbound resource status of the Interaction
          type: string
        interactionDateCreated:
          description: The date and time when the resource was created
          type: string
        interactionDateUpdated:
          description: The date and time when the resource was last updated
          type: string
        inboundResourceStatus:
          description: The inbound resource status of the Interaction
          type: string
      type: object
    ProactivetempofflineapiExclusionResponseYaml:
      additionalProperties: false
      properties:
        excludeFromGoingOfflineOnDeviceDisconnection:
          description: Whether the restaurant is excluded from PTOL or not.
          type: boolean
    ProblematicOrdersClaimRequestYaml:
      description: Claim request details
      type: object
      properties:
        agentName:
          description: The name of the agent
          type: string
        browserAgent:
          description: The browser agent
          type: string
        ipAddress:
          description: The IP address of the user
          type: string
    ProblematicOrdersGetProblematicOrdersResponseExampleYaml:
      example:
        problematicOrders:
          - agentName: John Smith
            currentDueDate: '2022-01-01T12:00:00Z'
            customer:
              email: john@example.com
              phoneNumber: +44 20 5555 5555
              timeZone: Europe/London
            dispatchMethod: delivery
            friendlyOrderId: 123456789
            orderId: a1b2c3d4e5
            paymentType: Card
            placedDate: '2021-12-31T12:00:00Z'
            reasons:
              - description: Order acceptance timed out
                reasonCode: OrderAcceptanceTimedOut
            restaurant:
              name: Joe's Pizza
              id: 54321
              phoneNumber: +44 30 1234 5678
              postcode: SW1A 2AA
          - agentName: Jane Doe
            currentDueDate: '2022-01-02T12:00:00Z'
            customer:
              email: jane@example.com
              phoneNumber: +44 20 6666 6666
              timeZone: Europe/London
            dispatchMethod: collection
            friendlyOrderId: 987654321
            orderId: e5f6g7h8i9
            paymentType: Cash
            placedDate: '2022-01-01T12:00:00Z'
            reasons:
              - description: Order acceptance timed out
                reasonCode: OrderAcceptanceTimedOut
            restaurant:
              name: Bob's Burgers
              id: 98765
              phoneNumber: +44 30 9876 5432
              postcode: W1D 3PX
        totalOrders: 2
    ProblematicOrdersGetProblematicOrdersResponseYaml:
      description: Response for problematic orders
      type: object
      properties:
        problematicOrders:
          type: array
          items:
            description: Details of a problematic order
            type: object
            properties:
              agentName:
                description: The name of the agent assigned to the order
                type: string
              currentDueDate:
                description: The current due date of the order
                type: string
                format: date-time
              customer:
                description: Details of a customer
                type: object
                properties:
                  email:
                    description: The email of the customer
                    type: string
                  phoneNumber:
                    description: The phone number of the customer
                    type: string
                  timeZone:
                    description: The time zone of the customer
                    type: string
              dispatchMethod:
                description: The dispatch method for the order
                type: string
                enum:
                  - delivery
                  - collection
              friendlyOrderId:
                description: The friendly order id
                type: string
              orderId:
                description: The order id
                type: string
              paymentType:
                description: The payment type for the order
                type: string
                enum:
                  - Cash
                  - Card
              placedDate:
                description: The date and time the order was placed
                type: string
                format: date-time
              reasons:
                type: array
                items:
                  description: Details of a problem reason
                  type: object
                  properties:
                    description:
                      description: The description of the problem reason
                      type: string
                    reasonCode:
                      description: The code for the problem reason
                      type: string
              restaurant:
                description: Details of a restaurant
                type: object
                properties:
                  name:
                    description: The name of the restaurant
                    type: string
                  id:
                    description: The id of the restaurant
                    type: string
                  phoneNumber:
                    description: The phone number of the restaurant
                    type: string
                  postcode:
                    description: The postcode of the restaurant
                    type: string
        totalOrders:
          description: The total number of problematic orders
          type: integer
    ProblematicOrdersResendRequestYaml:
      description: Resend request details
      type: object
      properties:
        agentName:
          description: The name of the agent
          type: string
    ProblematicOrdersResolutionRequestYaml:
      description: Details of a resolution request
      type: object
      properties:
        agentName:
          description: The name of the agent who is resolving the order
          type: string
        note:
          description: The note that the agent has added to the order
          type: string
        resolutionStatus:
          description: The status of the resolution
          type: string
      required:
        - agentName
        - note
        - resolutionStatus
    ProductInformationAdditiveYaml:
      type: object
      required:
        - type
      properties:
        type:
          description: The type of additive
          type: string
          example: caffeine
        warnings:
          description: An array of additive warnings
          type: array
          example:
            - caffeineHighContentBeverage
          items:
            type: string
    ProductInformationAdditivesYaml:
      description: The Additives details for a product
      required:
        - provided
      type: object
      properties:
        provided:
          description: >-
            An explicit property indicating whether additive data has been
            provided by the restaurant partner
          type: boolean
          nullable: false
        dataSource:
          description: The source of the additive data; Databank, Partner or Prediction
          type: string
          example: databank
          nullable: true
          enum:
            - databank
            - partner
            - prediction
        validated:
          description: Whether the additive data has been validated
          type: boolean
          nullable: true
        additiveSets:
          description: The list of additives for this product
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProductInformationAdditiveYaml'
    ProductInformationAllergenYaml:
      type: object
      required:
        - level
        - type
      properties:
        level:
          description: The containment level; contains or mayContain
          type: string
          example: contains
          enum:
            - contains
            - mayContain
        type:
          description: The type of allergen
          type: string
          example: peanut
        subTypes:
          description: An array of allergen sub types, may be empty
          type: array
          example:
            - walnut
            - almond
          items:
            type: string
    ProductInformationAllergensYaml:
      description: The Allergen details for a product
      required:
        - provided
      type: object
      properties:
        provided:
          description: >-
            An explicit property indicating whether allergen data has been
            provided by the restaurant partner
          type: boolean
          nullable: false
        dataSource:
          description: The source of the allergen data; Databank, Partner or Prediction
          type: string
          example: databank
          nullable: true
          enum:
            - databank
            - partner
            - prediction
        validated:
          description: Whether the allergen data has been validated
          type: boolean
          nullable: true
        allergenSets:
          description: The list of allergens for this product
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProductInformationAllergenYaml'
    ProductInformationProductInformationResponseYaml:
      type: object
      required:
        - restaurantId
        - productType
        - productId
        - allergens
      properties:
        restaurantId:
          description: The id of the restaurant partner
          example: Rest1234
          type: string
          nullable: false
        productType:
          description: The type of product; variation or modifier
          example: variation
          type: string
          nullable: false
          enum:
            - variation
            - modifier
        productId:
          description: The id of the variation or modifier
          example: '56789'
          type: string
          nullable: false
        allergens:
          description: The allergen details for the product
          type: object
          nullable: false
          $ref: '#/components/schemas/ProductInformationAllergensYaml'
        additives:
          description: The additive details for the product
          type: object
          nullable: false
          $ref: '#/components/schemas/ProductInformationAdditivesYaml'
        additionalInformation:
          description: >
            Additional information about the product.  This field will soon be
            deprecated and is used for compatibility with L-TA menus.
          example: 100,000 to 225,000 on the Scoville Heat Scale
          type: string
          nullable: true
          maxLength: 7000
    ProductsRestrictionsProductRestrictionItemYaml:
      type: object
      properties:
        id:
          description: Encrypted Id of product
          type: string
        category:
          description: Category of restriction
          type: string
        age:
          description: Age information of restriction
          type: integer
          nullable: true
        amount:
          description: Amount of restriction
          type: object
          properties:
            value:
              description: Value
              type: integer
            scale:
              description: Scale number to get precision
              type: integer
            unit:
              description: Unit of amount
              type: string
    ProductsRestrictionsProductRestrictionResponseYaml:
      type: object
      properties:
        dependencies:
          type: array
          items:
            description: Dependency Group
            type: object
            properties:
              id:
                description: Tag Id
                type: string
              dependency:
                description: Grouped tags
                type: array
                items:
                  description: Tag Id
                  type: string
        products:
          type: array
          items:
            $ref: >-
              #/components/schemas/ProductsRestrictionsProductRestrictionItemYaml
        addons:
          type: array
          items:
            $ref: >-
              #/components/schemas/ProductsRestrictionsProductRestrictionItemYaml
      example:
        dependencies:
          - id: age_soft_alcohol
            dependency:
              - age_hard_alcohol
        products:
          - id: 33Q535P
            category: age_hard_alcohol
            age: 18
            amount:
              value: 500
              scale: 100
              unit: '%'
        addons:
          - id: 44Q535P
            category: age_soft_alcohol
            age: 16
            amount:
              value: 50
              scale: 100
              unit: '%'
    PromotedPlacementActivePlacementYaml:
      properties:
        status:
          description: >-
            Contains status information for different aspects of this placement.
            'normal' status is assumed if no additional status information is
            available.
          type: object
          properties:
            budget:
              description: The budget status of this placement.
              properties:
                code:
                  description: >-
                    The status code that describes this placement's current
                    budget status.
                  enum:
                    - budgetLow
                    - budgetExhausted
                  type: string
              required:
                - code
              additionalProperties: true
            contract:
              $ref: >-
                #/components/schemas/PromotedPlacementActivePlacementContractStatusYaml
            pause:
              description: The pause status of this placement.
              properties:
                code:
                  description: >-
                    The status code that describes this placement's pause
                    status.
                  enum:
                    - paused
                  type: string
                pauseDate:
                  description: >-
                    The UTC date and time at which this placement was paused as
                    a result of a manual action. Available if the status code is
                    "paused".
                  format: date-time
                  type: string
                resumeDate:
                  description: >-
                    The UTC date and time at which this placement is scheduled
                    to be resumed. Available if the status code is "paused" and
                    a resume date was specified.
                  format: date-time
                  type: string
              required:
                - code
              additionalProperties: true
        weeklyBudget:
          $ref: '#/components/schemas/PromotedPlacementWeeklyBudgetStatusYaml'
        purchaseDate:
          description: The UTC date and time at which this placement was purchased.
          format: date-time
          type: string
        salesChannel:
          description: The source of the placement's sale.
          type: string
          enum:
            - telesales
            - selfService
        startDate:
          description: >-
            The UTC date and time at which this placement started, or will
            start.
          format: date-time
          type: string
        deliveryArea:
          description: The location that the placement applies to.
          type: string
        placementId:
          description: The unique identifier of the placement.
          type: string
        availableActions:
          description: A list of the currently supported actions for this placement.
          items:
            enum:
              - adjustBudget
              - cancelAtEndOfWeek
              - cancelAtSpecifiedTime
              - cancelImmediately
              - pause
              - resume
              - undoCancel
            type: string
          type: array
      type: object
      required:
        - availableActions
        - placementId
        - deliveryArea
        - purchaseDate
        - startDate
        - salesChannel
        - weeklyBudget
        - status
      additionalProperties: true
      example:
        status:
          pause:
            code: paused
            pauseDate: '2021-01-14T12:02:32.000Z'
            resumeDate: '2021-02-12T00:00:00.000Z'
        weeklyBudget:
          recommended: 13000
          minimumAllowable: 500
          total: 13000
          maximumAllowable: 100000
          remaining: 5000
        purchaseDate: '2021-01-01T14:45:00.000Z'
        startDate: '2021-01-01T14:45:00.000Z'
        deliveryArea: NW6
        placementId: '100005'
        salesChannel: telesales
        availableActions:
          - adjustBudget
          - resume
          - cancelAtEndOfWeek
          - cancelImmediately
    PromotedPlacementActivePlacementCancelledContractStatusYaml:
      allOf:
        - $ref: >-
            #/components/schemas/PromotedPlacementActivePlacementContractStatusYaml
        - additionalProperties: true
          type: object
          required:
            - code
            - endDate
          properties:
            endDate:
              description: The UTC date and time at which this placement will end.
              format: date-time
              type: string
    PromotedPlacementActivePlacementContractStatusYaml:
      description: The status of this placement's contract.
      anyOf:
        - $ref: >-
            #/components/schemas/PromotedPlacementActivePlacementCancelledContractStatusYaml
        - $ref: >-
            #/components/schemas/PromotedPlacementActivePlacementNonCancellablePeriodContractStatusYaml
      properties:
        code:
          description: The status code that describes this placement's contract status.
          type: string
          enum:
            - cancelled
            - inNonCancellablePeriod
      discriminator:
        propertyName: code
        mapping:
          cancelled: >-
            #/components/schemas/PromotedPlacementActivePlacementCancelledContractStatusYaml
          inNonCancellablePeriod: >-
            #/components/schemas/PromotedPlacementActivePlacementNonCancellablePeriodContractStatusYaml
      additionalProperties: true
      type: object
      required:
        - code
      x-abstract: true
    PromotedPlacementActivePlacementNonCancellablePeriodContractStatusYaml:
      allOf:
        - $ref: >-
            #/components/schemas/PromotedPlacementActivePlacementContractStatusYaml
        - additionalProperties: true
          type: object
          required:
            - code
            - cancellableAfterDate
          properties:
            cancellableAfterDate:
              description: >-
                The UTC date and time after which this placement may be
                cancelled.
              format: date-time
              type: string
    PromotedPlacementActivePlacementsForRestaurantResponseYaml:
      properties:
        contract:
          description: Information about the contract for this restaurant.
          properties:
            nonCancellablePeriodEndDate:
              description: >-
                The UTC time after which the non-cancellable period ends for
                this restaurant. If not specified, this restaurant has
                week-by-week rolling contracts.
              format: date-time
              type: string
          type: object
        restaurantEligibility:
          $ref: '#/components/schemas/PromotedPlacementRestaurantEligibilityYaml'
        metadata:
          $ref: '#/components/schemas/PromotedPlacementMetadataYaml'
        placements:
          description: List of promoted placements active for a given restaurant.
          items:
            $ref: '#/components/schemas/PromotedPlacementActivePlacementYaml'
          type: array
      type: object
      required:
        - restaurantEligibility
        - metadata
        - placements
      additionalProperties: true
      example:
        metadata:
          currency: GBP
          timeZone: Europe/London
          effectiveDate: '2021-01-14T17:30:00.000Z'
        restaurantEligibility:
          isEligible: false
          customerExperienceScore:
            score: 12
            requiredScore: 25
            hasPassed: false
          hygiene:
            hasPassed: true
        placements:
          - status:
              pause:
                code: paused
                pauseDate: '2021-01-14T12:02:32.000Z'
                resumeDate: '2021-02-12T00:00:00.000Z'
              placement:
                code: cancelled
                endDate: '2021-01-17T23:59:59.000Z'
            weeklyBudget:
              recommended: 13000
              minimumAllowable: 500
              total: 13000
              maximumAllowable: 100000
              remaining: 5000
            purchaseDate: '2021-01-01T14:45:00.000Z'
            startDate: '2021-01-01T14:45:00.000Z'
            deliveryArea: NW6
            placementId: '100001'
            salesChannel: selfService
            availableActions:
              - adjustBudget
              - cancelImmediately
              - resume
              - undoCancel
          - status:
              budget:
                code: budgetLow
            weeklyBudget:
              recommended: 14000
              minimumAllowable: 500
              total: 13000
              maximumAllowable: 110000
              remaining: 210
            purchaseDate: '2021-01-01T14:47:34.000Z'
            startDate: '2021-01-01T14:47:34.000Z'
            deliveryArea: NW5
            placementId: '100002'
            salesChannel: selfService
            availableActions:
              - adjustBudget
              - cancelAtEndOfWeek
              - cancelAtSpecifiedTime
              - cancelImmediately
              - pause
          - status:
              placement:
                code: cancelled
                endDate: '2021-01-17T23:59:59.000Z'
            weeklyBudget:
              recommended: 14000
              minimumAllowable: 500
              total: 13000
              maximumAllowable: 100000
              remaining: 3200
            purchaseDate: '2021-01-01T14:51:12.000Z'
            startDate: '2021-01-01T14:51:12.000Z'
            deliveryArea: NW4
            placementId: '100003'
            salesChannel: telesales
            availableActions:
              - adjustBudget
              - cancelImmediately
              - undoCancel
          - status:
              budget:
                code: budgetExhausted
            weeklyBudget:
              recommended: 14000
              minimumAllowable: 500
              total: 13000
              maximumAllowable: 100000
              remaining: 0
            purchaseDate: '2021-01-01T14:51:12.000Z'
            startDate: '2021-01-01T14:51:12.000Z'
            deliveryArea: NW3
            placementId: '100004'
            salesChannel: telesales
            availableActions:
              - adjustBudget
              - pause
              - cancelAtEndOfWeek
              - cancelAtSpecifiedTime
              - cancelImmediately
    PromotedPlacementAvailablePlacementYaml:
      required:
        - deliveryArea
        - weeklyBudget
      additionalProperties: true
      type: object
      example:
        weeklyBudget:
          maximumAllowable: 100000
          minimumAllowable: 500
          recommended: 13000
        deliveryArea: NW6
      properties:
        weeklyBudget:
          $ref: '#/components/schemas/PromotedPlacementWeeklyBudgetRecommendationYaml'
        deliveryArea:
          description: The location that is available for starting a placement.
          type: string
    PromotedPlacementAvailablePlacementsForRestaurantResponseYaml:
      properties:
        restaurantEligibility:
          $ref: '#/components/schemas/PromotedPlacementRestaurantEligibilityYaml'
        metadata:
          $ref: '#/components/schemas/PromotedPlacementMetadataYaml'
        placements:
          description: >-
            List of promoted placements available for purchase for a given
            restaurant.
          items:
            $ref: '#/components/schemas/PromotedPlacementAvailablePlacementYaml'
          type: array
      type: object
      required:
        - restaurantEligibility
        - metadata
        - placements
      example:
        metadata:
          currency: GBP
          timeZone: Europe/London
          effectiveDate: '2021-01-14T17:30:00.000Z'
        restaurantEligibility:
          isEligible: false
          customerExperienceScore:
            score: 12
            requiredScore: 25
            hasPassed: false
          hygiene:
            hasPassed: true
        placements:
          - deliveryArea: NW6
            weeklyBudget:
              minimumAllowable: 500
              maximumAllowable: 100000
              minimumRecommended: 1000
              recommended: 13000
          - deliveryArea: NW5
            weeklyBudget:
              minimumAllowable: 500
              maximumAllowable: 100000
              minimumRecommended: 1000
              recommended: 14000
          - deliveryArea: NW4
            weeklyBudget:
              minimumAllowable: 500
              maximumAllowable: 100000
              minimumRecommended: 1000
              recommended: 14000
          - deliveryArea: NW3
            weeklyBudget:
              minimumAllowable: 500
              maximumAllowable: 100000
              minimumRecommended: 1000
              recommended: 14000
      additionalProperties: true
    PromotedPlacementCampaignInsightsYaml:
      required:
        - reports
      additionalProperties: true
      type: object
      properties:
        reports:
          description: Reports keyed by the name of specific time periods.
          additionalProperties:
            $ref: '#/components/schemas/PromotedPlacementInsightsReportYaml'
          type: object
        metadata:
          $ref: '#/components/schemas/PromotedPlacementMetadataYaml'
      example:
        metadata:
          currency: GBP
          timeZone: Europe/London
          effectiveDate: '2021-01-22T17:30:00.000Z'
        reports:
          last-7-days:
            period:
              createdAt: '2021-01-22T08:06:14.199Z'
              startDate: '2021-01-15'
              endDate: '2021-01-21'
            data:
              overall:
                newCustomers: 50
                menuViews: 309
                orders: 165
                orderValue: 315910
              promotedPlacement:
                newCustomers: 17
                menuViews: 225
                orders: 48
                orderValue: 96090
                placementSpend: 14190
          last-28-days:
            period:
              createdAt: '2021-01-22T08:06:14.278Z'
              startDate: '2020-12-25'
              endDate: '2021-01-21'
            data:
              overall:
                newCustomers: 198
                menuViews: 1236
                orders: 660
                orderValue: 1137241
              promotedPlacement:
                newCustomers: 67
                menuViews: 922
                orders: 250
                orderValue: 403212
                placementSpend: 60630
    PromotedPlacementCancelPlacementAtEndOfWeekRequestYaml:
      allOf:
        - $ref: '#/components/schemas/PromotedPlacementCancelPlacementRequestYaml'
        - example:
            cancellationEffective: atEndOfWeek
    PromotedPlacementCancelPlacementAtSpecifiedTimeRequestYaml:
      allOf:
        - $ref: '#/components/schemas/PromotedPlacementCancelPlacementRequestYaml'
        - properties:
            cancellationTime:
              description: The UTC time at which the cancellation should take effect.
              format: date-time
              type: string
          required:
            - cancellationTime
          example:
            cancellationEffective: atSpecifiedTime
            cancellationTime: '2021-10-03T23:59:59Z'
    PromotedPlacementCancelPlacementRequestYaml:
      anyOf:
        - $ref: >-
            #/components/schemas/PromotedPlacementCancelPlacementAtSpecifiedTimeRequestYaml
        - $ref: >-
            #/components/schemas/PromotedPlacementCancelPlacementAtEndOfWeekRequestYaml
      discriminator:
        propertyName: cancellationEffective
        mapping:
          atSpecifiedTime: >-
            #/components/schemas/PromotedPlacementCancelPlacementAtSpecifiedTimeRequestYaml
          atEndOfWeek: >-
            #/components/schemas/PromotedPlacementCancelPlacementAtEndOfWeekRequestYaml
      example:
        cancellationEffective: atSpecifiedTime
        cancellationTime: '2021-10-03T23:59:59Z'
      properties:
        cancellationEffective:
          description: When the cancellation should take effect.
          type: string
          enum:
            - atSpecifiedTime
            - atEndOfWeek
      type: object
      required:
        - cancellationEffective
      additionalProperties: true
      x-abstract: true
    PromotedPlacementCandidateRestaurantYaml:
      properties:
        rank:
          description: >-
            The relative rank of this candidate restaurant in relation to others
            in the response. A smaller number indicates that this restaurant
            should be shown closer to the beginning of the list.
          type: number
        restaurantId:
          description: The unique identifier of the candidate restaurant.
          type: string
      type: object
      example:
        rank: 1
        metadata:
          key: value
        restaurantId: '1234'
      additionalProperties: true
    PromotedPlacementCandidateRestaurantsResponseYaml:
      properties:
        candidateRestaurants:
          description: >-
            An array of candidate restaurants that are available for Promoted
            Placement.
          items:
            $ref: '#/components/schemas/PromotedPlacementCandidateRestaurantYaml'
          type: array
        metadata:
          description: >-
            Contains additional metadata that may affect the rendering of
            Promoted Placement candidate restaurants.
          properties:
            availableFilteredPositions:
              description: >-
                The number of Promoted Placement positions available in this
                location when displaying a filtered list of restaurants.
              type: number
            availableUnfilteredPositions:
              description: >-
                The number of Promoted Placement positions available in this
                location when displaying the full list of restaurants.
              type: number
          type: object
          additionalProperties: true
      type: object
      example:
        candidateRestaurants:
          - rank: 1
            restaurantId: '1234'
          - rank: 2
            restaurantId: '4567'
          - rank: 3
            restaurantId: '3245'
        metadata:
          availableFilteredPositions: 2
          availableUnfilteredPositions: 5
    PromotedPlacementCandidateRestaurantsResponseV2Yaml:
      properties:
        restaurants:
          description: An array of available restaurants.
          items:
            type: object
            required:
              - rank
              - restaurantId
            properties:
              rank:
                description: >-
                  The relative rank of this candidate restaurant in relation to
                  others in the response. 

                  For Promoted Placement - a smaller number indicates that this
                  restaurant should be shown closer to the beginning of the
                  list.

                  For Top Rank - a smaller number indicates that this restaurant
                  has the bigger boosting score value. This value should be
                  between 0 and 1.
                type: number
                format: float
              restaurantId:
                description: The unique identifier of the candidate restaurant.
                type: string
              chainBoost:
                description: >-
                  This indicates whether the restaurant was ranked due to a
                  chain boost.
                type: boolean
              demandDownRank:
                description: >-
                  This indicates whether the restaurant has been
                  "demand-down-ranked". This can be used to ensure consistency

                  between both upstream and downstream services.
                type: boolean
          type: array
        metadata:
          description: >-
            Contains additional metadata that can be used to affect the
            rendering of candidate restaurants.
          required:
            - mode
          properties:
            mode:
              description: The product type supported in the current market.
              enum:
                - promotedPlacement
                - topRank
              type: string
            availableFilteredPositions:
              description: >-
                The number of Promoted Placement positions available in this
                location when displaying a filtered list of restaurants.
              type: number
            availableUnfilteredPositions:
              description: >-
                The number of Promoted Placement positions available in this
                location when displaying the full list of restaurants.
              type: number
          type: object
          additionalProperties: true
      type: object
      example:
        restaurants:
          - rank: 1
            restaurantId: '1234'
          - rank: 2
            restaurantId: '4567'
          - rank: 3
            restaurantId: '3245'
        metadata:
          mode: promotedPlacement
          availableFilteredPositions: 2
          availableUnfilteredPositions: 5
    PromotedPlacementCreatePlacementRequestYaml:
      type: object
      anyOf:
        - $ref: >-
            #/components/schemas/PromotedPlacementCreatePlacementViaSelfServiceRequestYaml
        - $ref: >-
            #/components/schemas/PromotedPlacementCreatePlacementViaTelesalesRequestYaml
      discriminator:
        propertyName: salesChannel
        mapping:
          selfService: >-
            #/components/schemas/PromotedPlacementCreatePlacementViaSelfServiceRequestYaml
          telesales: >-
            #/components/schemas/PromotedPlacementCreatePlacementViaTelesalesRequestYaml
      properties:
        salesChannel:
          description: The sales channel for this placement.
          type: string
          enum:
            - telesales
            - selfService
        deliveryArea:
          description: The location for which to buy the placement.
          type: string
        weeklyBudget:
          description: >-
            The initial weekly budget for the placement in the smallest unit of
            local currency (e.g., pence).
          type: integer
          format: int32
          minimum: 0
          maximum: 100000
          exclusiveMinimum: true
      required:
        - salesChannel
        - deliveryArea
      additionalProperties: true
      x-abstract: true
      example:
        salesChannel: telesales
        deliveryArea: NW6
        isFreePlacement: false
        remainderOfFirstWeekIsFree: true
        weeklyBudget: 13000
        nonCancellablePeriodDurationWeeks: 5
    PromotedPlacementCreatePlacementViaSelfServiceRequestYaml:
      allOf:
        - $ref: '#/components/schemas/PromotedPlacementCreatePlacementRequestYaml'
        - required:
            - weeklyBudget
      example:
        salesChannel: selfService
        deliveryArea: NW6
        weeklyBudget: 13000
    PromotedPlacementCreatePlacementViaTelesalesRequestYaml:
      allOf:
        - $ref: '#/components/schemas/PromotedPlacementCreatePlacementRequestYaml'
        - properties:
            isFreePlacement:
              description: A value indicating whether the placement is free.
              type: boolean
            remainderOfFirstWeekIsFree:
              description: >-
                A value indicating whether the restaurant will be given a free
                trial lasting until the end of the first week of the placement
                contract.
              type: boolean
            nonCancellablePeriodDurationWeeks:
              description: >-
                The duration of the initial fixed term of the contract before
                switching to a rolling one-week contract.
              nullable: true
              type: integer
              format: int32
              minimum: 1
              maximum: 6
            startDate:
              description: >-
                The UTC date and time at which this placement should start. If
                specified, this must be in the future.
              format: date-time
              type: string
          required:
            - isFreePlacement
            - remainderOfFirstWeekIsFree
      example:
        salesChannel: telesales
        deliveryArea: NW6
        isFreePlacement: false
        remainderOfFirstWeekIsFree: true
        weeklyBudget: 13000
        nonCancellablePeriodDurationWeeks: 5
        startDate: '2021-01-01T14:45:00.000Z'
    PromotedPlacementCustomerExperienceScoreDetailYaml:
      description: >-
        The details of how the customer experience score has contributed to the
        restaurant's promoted placement eligibility.
      type: object
      properties:
        score:
          description: The customer experience score achieved by the restaurant.
          type: number
          format: double
        requiredScore:
          description: >-
            The customer experience score required to pass the customer
            experience score criteria.
          type: number
          format: double
        hasPassed:
          description: >-
            Represents if the restaurant has passed the customer experience
            score criteria.
          type: boolean
      required:
        - requiredScore
        - hasPassed
      example:
        score: 12
        requiredScore: 25
        hasPassed: false
    PromotedPlacementHygieneScoreDetailYaml:
      description: >-
        The details of how the hygiene rating has contributed to the
        restaurant's promoted placement eligibility.
      type: object
      properties:
        hasPassed:
          description: Represents if the restaurant has passed the hygiene rating criteria.
          type: boolean
      required:
        - hasPassed
      example:
        hasPassed: true
    PromotedPlacementInsightsReportYaml:
      description: A report for a given time period.
      required:
        - period
        - data
      additionalProperties: true
      type: object
      properties:
        period:
          description: Describes the time period for this report.
          required:
            - createdAt
            - startDate
            - endDate
          properties:
            startDate:
              description: The start date of this report period.
              format: date
              type: string
            endDate:
              description: The end date of this report period.
              format: date
              type: string
            createdAt:
              description: The UTC time at which this report was generated.
              format: date-time
              type: string
          type: object
        data:
          description: The placement insights data for this report period.
          properties:
            promotedPlacement:
              description: Total values for promoted placement in this period.
              required:
                - newCustomers
                - menuViews
                - orders
                - orderValue
                - placementSpend
              additionalProperties: true
              type: object
              properties:
                menuViews:
                  description: The total number of promoted menu views.
                  format: int32
                  type: integer
                newCustomers:
                  description: >-
                    The total number of new customers as a result of promoted
                    placement.
                  format: int32
                  type: integer
                placementSpend:
                  description: >-
                    The total amount spent on promoted placement in the smallest
                    unit of local currency (e.g., pence).
                  format: int32
                  type: integer
                orderValue:
                  description: >-
                    The total order value resulting from promoted placement
                    orders in the smallest unit of local currency (e.g., pence).
                  format: int32
                  type: integer
                orders:
                  description: >-
                    The total number of orders resulting from promoted placement
                    menu views.
                  format: int32
                  type: integer
            overall:
              description: Total values for this period.
              required:
                - newCustomers
                - menuViews
                - orders
                - orderValue
              additionalProperties: true
              type: object
              properties:
                newCustomers:
                  description: The total number of new customers.
                  format: int32
                  type: integer
                menuViews:
                  description: The total number of menu views.
                  format: int32
                  type: integer
                orders:
                  description: The total number of orders.
                  format: int32
                  type: integer
                orderValue:
                  description: >-
                    The total order value in the smallest unit of local currency
                    (e.g., pence).
                  format: int32
                  type: integer
          additionalProperties: true
          type: object
    PromotedPlacementMetadataYaml:
      description: Additional metadata that may assist the rendering of the response.
      type: object
      properties:
        timeZone:
          description: The restaurant's timezone in IANA format, e.g., Europe/London.
          type: string
        currency:
          description: >-
            The currency used for the budget data in ISO 4217 format, e.g., GBP,
            EUR or AUD.
          type: string
        effectiveDate:
          description: >-
            The UTC time at which the request was processed for relative time
            calculations.
          format: date-time
          type: string
      required:
        - timeZone
        - currency
        - effectiveDate
      additionalProperties: true
    PromotedPlacementRankingRequestYaml:
      type: object
      required:
        - restaurants
      properties:
        restaurants:
          description: An array of restaurants.
          type: array
          items:
            $ref: '#/components/schemas/PromotedPlacementRankingRequestRestaurantYaml'
        postalCode:
          description: >-
            Postcode or name of the location for which to return restaurant
            candidates.

            Use `geolocation` instead to specify the location where available.
          type: string
        geolocation:
          description: The geolocation of the user.
          $ref: '#/components/schemas/SharedGeoJsonPointYaml'
          nullable: true
      example:
        restaurants:
          - id: '123123'
          - id: '456456'
          - id: '789789'
        postalCode: EC4M 7RF
        geolocation:
          coordinates:
            - 51.501285
            - -0.142442
          type: point
    PromotedPlacementRankingRequestRestaurantYaml:
      type: object
      required:
        - id
      properties:
        id:
          description: The unique identifier of the restaurant.
          type: string
    PromotedPlacementRestaurantEligibilityYaml:
      description: Represents the details of restaurant's promoted placement eligibility.
      type: object
      properties:
        customerExperienceScore:
          $ref: >-
            #/components/schemas/PromotedPlacementCustomerExperienceScoreDetailYaml
        hygiene:
          $ref: '#/components/schemas/PromotedPlacementHygieneScoreDetailYaml'
        isEligible:
          description: Represents if the restaurant is eligible to use promoted placement.
          type: boolean
      required:
        - customerExperienceScore
        - isEligible
    PromotedPlacementRestaurantPromotedPlacementInfoYaml:
      properties:
        defaultPromoted:
          description: Should be promoted by default
          type: boolean
        restaurantId:
          description: Id of the restaurant
          type: string
      example:
        defaultPromoted: true
        restaurantId: '84335'
      type: object
    PromotedPlacementWeeklyBudgetRecommendationYaml:
      description: >-
        Contains information about the required weekly budget for this placement
        location.
      type: object
      properties:
        maximumAllowable:
          description: >-
            The maximum allowable budget for this week in the smallest unit of
            local currency (e.g., pence). It will not be possible to set a
            budget that exceeds this amount.
          format: int32
          type: integer
        minimumAllowable:
          description: >-
            The minimum allowable budget for this week in the smallest unit of
            local currency (e.g., pence). It will not be possible to set a
            budget lower than this amount.
          format: int32
          type: integer
        recommended:
          description: >-
            The recommended budget for this week so that the budget does not run
            out in the smallest unit of local currency (e.g., pence).
          format: int32
          type: integer
      required:
        - maximumAllowable
        - minimumAllowable
        - recommended
      additionalProperties: true
    PromotedPlacementWeeklyBudgetStatusYaml:
      description: Contains information about the weekly budget for this placement.
      type: object
      properties:
        recommended:
          description: >-
            The recommended budget for this week so that the budget does not run
            out in the smallest unit of local currency (e.g., pence).
          format: int32
          type: integer
        minimumAllowable:
          description: >-
            The minimum allowable budget for this week in the smallest unit of
            local currency (e.g., pence). It will not be possible to set a
            budget lower than this amount.
          format: int32
          type: integer
        total:
          description: >-
            The total budget for this week in the smallest unit of local
            currency (e.g., pence).
          format: int32
          type: integer
        maximumAllowable:
          description: >-
            The maximum allowable budget for this week in the smallest unit of
            local currency (e.g., pence). It will not be possible to set a
            budget that exceeds this amount.
          format: int32
          type: integer
        remaining:
          description: >-
            The remaining budget for this week in the smallest unit of local
            currency (e.g., pence).
          format: int32
          type: integer
        remainderOfWeekIsFree:
          description: >-
            Indicates whether this placement has been given a free trial that
            lasts until the end of the current week (the end of Sunday).
          type: boolean
      required:
        - remaining
        - total
        - maximumAllowable
        - minimumAllowable
        - recommended
        - remainderOfWeekIsFree
    ProvidersSocialProvidersResponseYaml:
      description: A list of social login providers
      type: object
      properties:
        Providers:
          description: An array of social login providers
          type: array
          items:
            type: object
            properties:
              ProviderName:
                description: Social Provider name
                type: string
              ClientId:
                description: Client ID
                type: string
              AppClientId:
                description: App client ID
                type: string
                nullable: true
              Scopes:
                description: Scope
                type: array
                items:
                  type: string
      example:
        Providers:
          - ProviderName: Apple
            ClientId: com.justeat.JUSTEAT.ie
            AppClientId: null
            Scopes:
              - email
          - ProviderName: Appleweb
            ClientId: com.justeat.JUSTEAT.ie.signinwithapple
            AppClientId: null
            Scopes:
              - openid
              - email
              - profile
    RankRankedItemYaml:
      description: A ranked item
      type: object
      required:
        - type
      properties:
        type:
          description: The type of the ranked item
          enum:
            - restaurant
            - restaurantCarousel
            - productCarousel
          type: string
          nullable: false
    RankRankedItemCarouselYaml:
      allOf:
        - $ref: '#/components/schemas/RankRankedItemYaml'
        - description: An instance of a ranked carousel
          required:
            - carouselId
            - restaurantIds
          type: object
          properties:
            carouselId:
              description: The ID of the carousel
              type: string
              nullable: false
            restaurantIds:
              description: An ordered set of restaurants belonging to a carousel
              type: array
              nullable: false
              items:
                type: string
      example:
        type: carousel
        carouselId: lunch
        restaurantIds:
          - '123123'
          - '456456'
          - '789789'
    RankRankedItemProductCarouselYaml:
      allOf:
        - $ref: '#/components/schemas/RankRankedItemYaml'
        - description: >-
            An instance of a product carousel. This is primarily used for the
            dish carousel.
          required:
            - carouselId
            - products
          type: object
          properties:
            carouselId:
              description: The ID of the carousel
              type: string
              nullable: false
            products:
              description: An array of products for the product carousel
              type: array
              nullable: false
              items:
                description: A product included in the carousel
                type: object
                required:
                  - restaurantId
                  - productId
                properties:
                  restaurantId:
                    description: The restaurant ID for the product
                    type: string
                    nullable: false
                  productId:
                    description: The product ID for the product
                    type: string
                    nullable: false
      example:
        type: productCarousel
        carouselId: lunch
        products:
          - restaurantId: '123123'
            productId: 00000000-1111-1111-1111-111111
          - restaurantId: '456456'
            productId: 00000000-2222-2222-2222-222222
          - restaurantId: '789789'
            productId: 00000000-3333-3333-3333-333333
    RankRankedItemRestaurantYaml:
      allOf:
        - $ref: '#/components/schemas/RankRankedItemYaml'
        - description: An instance of a ranked restaurant
          required:
            - restaurantId
          type: object
          properties:
            restaurantId:
              description: The ID of the restaurant
              type: string
              nullable: false
      example:
        type: restaurant
        restaurantId: '123456'
    RankRankingMetadataCarouselDataYaml:
      description: Additional data pertaining to the carousel, keyed by the carousel ID
      type: object
      nullable: false
      additionalProperties:
        type: object
        required:
          - theme
          - title
        properties:
          title:
            description: The title of the carousel
            type: string
            nullable: false
          theme:
            description: The carousel theme
            type: string
            nullable: false
          subtitle:
            description: The subtitle of the carousel
            type: string
          filterId:
            description: The filter ID
            type: string
      example:
        lunch:
          title: Top picks for you
          theme: personalised
          subTitle: Based on your previous orders
          filterId: ''
    RankRankingMetadataProductDataYaml:
      description: >-
        Additional data pertaining to products in the products carousel, keyed
        by {RestaurantId}-{ProductId}. Primarily used for the dish carousel.
      type: object
      nullable: false
      additionalProperties:
        type: object
        required:
          - name
          - price
        properties:
          parentItemId:
            description: The parent item's product ID
            type: string
          name:
            description: The product name
            type: string
            nullable: false
          imageUrl:
            description: The product's image URL
            type: string
          price:
            description: >-
              The price of the product in the smallest unit of local currency,
              e.g. pence, cent
            type: integer
            nullable: false
      example:
        123456-aaaaaa-0011-0011-0011-000001:
          name: Coca Cola
          price: 150
    RankRankingMetadataRestaurantDataYaml:
      description: Additional data pertaining to restaurants, keyed by the restaurant ID
      type: object
      nullable: false
      additionalProperties:
        type: object
        required:
          - isTemporaryBoost
          - sponsoredDetails
        properties:
          isTemporaryBoost:
            description: True if the restaurant temporarily boosted, otherwise false
            type: boolean
            nullable: false
          sponsoredDetails:
            description: Details describing if and how a restaurant is sponsored
            $ref: '#/components/schemas/RankRankingResponseSponsoredDetailsYaml'
      example:
        '123456':
          isTemporaryBoost: false
          sponsoredDetails:
            isSponsoredCandidate: false
            isSponsored: false
            sponsoredPosition: 2
    RankRankingRequestOpenStatusFlagsYaml:
      description: The open status flags for an individual restaurant
      type: object
      required:
        - isOpenNowForDelivery
        - isOpenNowForCollection
        - isOpenNowForPreOrder
      properties:
        isOpenNowForDelivery:
          description: True if the restaurant is open for delivery, otherwise false
          type: boolean
          nullable: false
        isOpenNowForCollection:
          description: True if the restaurant is open for collection, otherwise false
          type: boolean
          nullable: false
        isOpenNowForPreOrder:
          description: True if the restaurant is open for pre-order, otherwise false
          type: boolean
          nullable: false
    RankRankingRequestRestaurantYaml:
      description: An individual restaurant and its properties required for ranking
      type: object
      required:
        - id
        - openStatus
      properties:
        id:
          description: The restaurant ID
          type: string
          nullable: false
        geolocation:
          description: >-
            The geolocation of the restaurant, in the format [longitude,
            latitude]
          type: array
          minItems: 2
          maxItems: 2
          nullable: true
          items:
            type: number
            format: float
        openStatus:
          description: The open status flags for the restaurant
          $ref: '#/components/schemas/RankRankingRequestOpenStatusFlagsYaml'
        hasOffer:
          description: >-
            True if the restaurant has an offer available in the context of this
            request, false otherwise
          type: boolean
          nullable: true
        isFreeDelivery:
          description: True if the restaurant has free delivery available, false otherwise
          type: boolean
          nullable: true
    RankRankingResponseSponsoredDetailsYaml:
      description: Details describing if and how a restaurant is sponsored
      type: object
      nullable: false
      required:
        - isSponsoredCandidate
        - isSponsored
      properties:
        isSponsoredCandidate:
          description: True if the restaurant is a sponsored candidate, otherwise false
          type: boolean
          nullable: false
        isSponsored:
          description: True if the restaurant is sponsored, otherwise false
          type: boolean
          nullable: false
        sponsoredPosition:
          description: The sponsored position
          type: number
          format: integer
          nullable: true
          minimum: 0
    RankRestaurantRankingRequestYaml:
      type: object
      required:
        - restaurants
        - district
        - postalCode
      properties:
        restaurants:
          description: An array of restaurants to be ranked
          type: array
          items:
            description: An individual restaurant and its properties required for ranking
            $ref: '#/components/schemas/RankRankingRequestRestaurantYaml'
        district:
          description: >-
            The out/district component of a user's postal code, or the user's
            district
          type: string
          nullable: false
        postalCode:
          description: The postal code of the user
          type: string
          nullable: false
        geolocation:
          description: The geolocation of the user, in the format [longitude, latitude]
          type: array
          minItems: 2
          maxItems: 2
          nullable: true
          items:
            type: number
            format: float
      example:
        restaurants:
          - id: 123123X
            openStatus:
              isOpenNowForDelivery: true
              isOpenNowForCollection: true
              isOpenNowForPreOrder: true
          - id: 456456X
            openStatus:
              isOpenNowForDelivery: true
              isOpenNowForCollection: false
              isOpenNowForPreOrder: true
          - id: 789789X
            geolocation:
              - -0.12
              - 51.53
            openStatus:
              isOpenNowForDelivery: true
              isOpenNowForCollection: true
              isOpenNowForPreOrder: true
        district: EC4M
        postalCode: EC4M 7RF
    RankRestaurantRankingResponseYaml:
      description: >-
        Contains a ranked set of restaurants and carousels, along with relevant
        metadata
      type: object
      required:
        - rankedResults
        - restaurantData
        - carouselData
        - productData
      properties:
        rankedResults:
          description: Ordered set of restaurants and carousel objects
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/RankRankedItemRestaurantYaml'
              - $ref: '#/components/schemas/RankRankedItemCarouselYaml'
              - $ref: '#/components/schemas/RankRankedItemProductCarouselYaml'
        restaurantData:
          $ref: '#/components/schemas/RankRankingMetadataRestaurantDataYaml'
        carouselData:
          $ref: '#/components/schemas/RankRankingMetadataCarouselDataYaml'
        productData:
          $ref: '#/components/schemas/RankRankingMetadataProductDataYaml'
        promotedAvailableFilteredPositions:
          description: >-
            Count of promoted placement restaurants to display when a filter is
            applied
          type: integer
          format: integer
          nullable: true
    RealmsCredentialsYaml:
      description: The credentials for the identity
      properties:
        userName:
          $ref: '#/components/schemas/RealmsUsernameYaml'
      type: object
    RealmsIdentityRecordYaml:
      required:
        - emailAddress
      properties:
        emailAddress:
          description: Identity's preferred email address.
          format: email
          type: string
        familyName:
          description: Surname(s) or last name(s) of the identity
          type: string
        givenName:
          description: Given name(s) or first name(s) of the identity
          type: string
        displayName:
          description: Identity's full name in displayable form including all name parts
          type: string
        roles:
          description: List of strings holding custom roles
          items:
            type: string
          minItems: 0
          type: array
        credentials:
          $ref: '#/components/schemas/RealmsCredentialsYaml'
        customClaims:
          items:
            properties:
              name:
                description: Custom claim name
                type: string
              value:
                description: Custom claim value
                type: string
            type: object
          type: array
      type: object
    RealmsIdentityRecordCreatedResponseYaml:
      description: One time access code for an identity
      required:
        - identityId
      properties:
        otac:
          description: One time access code
          type: string
        identityId:
          description: The identity id
          type: string
      type: object
    RealmsIdentityRecordWithoutCredentialsYaml:
      description: An identity record with no credentials
      required:
        - emailAddress
      properties:
        emailAddress:
          description: Identity's preferred email address.
          format: email
          type: string
        familyName:
          description: Surname(s) or last name(s) of the identity
          type: string
        givenName:
          description: Given name(s) or first name(s) of the identity
          type: string
        displayName:
          description: Identity's full name in displayable form including all name parts
          type: string
        roles:
          description: List of strings holding custom roles
          items:
            type: string
          minItems: 0
          type: array
        customClaims:
          items:
            properties:
              name:
                description: Custom claim name
                type: string
              value:
                description: Custom claim value
                type: string
            type: object
          type: array
      type: object
    RealmsUsernameYaml:
      description: Username credential
      required:
        - userName
      properties:
        userName:
          description: The username of the credential
          type: string
        password:
          description: The credential password in plain text
          type: string
      example:
        userName: jon-doe@justeattakeaway.local
        password: password123
      type: object
    RealtimeEventsRealtimeEventsEventYaml:
      title: RealTimeEvents_Event
      type: object
      properties:
        tna:
          description: The tracker namespace
          type: string
        aid:
          description: Unique identifier for website / application
          type: string
        p:
          description: The platform the app runs on
          type: string
        dtm:
          description: Timestamp when event occurred, as recorded by client device
          type: string
        tz:
          description: Time zone of client devices OS
          type: string
        e:
          description: Event type
          type: string
        tid:
          description: Not documented
          type: string
        eid:
          description: Event UUID
          type: string
        tv:
          description: Identifier for Snowplow tracker
          type: string
        duid:
          description: >-
            Unique identifier for a user, based on a first party cookie (so
            domain specific)
          type: string
        nuid:
          description: >-
            Unique identifier for a user, based on a server-side cookie issued
            by the collector
          type: string
        uid:
          description: Unique identifier for user, set by the business using `setUserId`
          type: string
        vid:
          description: >-
            Index of number of visits that this user_id has made to this domain.
            1 is first visit.
          type: string
        ip:
          description: >-
            IP address override. This is useful, if traffic is being proxied to
            a Snowplow collector (optional, as IP Address will be automatically
            captured by collector)
          type: string
        res:
          description: Screen / monitor resolution
          type: string
        url:
          description: Page URL
          type: string
        page:
          description: Page title
          type: string
        refr:
          description: Referrer URL
          type: string
        fp:
          description: Not documented
          type: string
        ctype:
          description: Not documented
          type: string
        cookie:
          description: Does the browser permit cookies?
          type: string
        lang:
          description: Language the browser is set to
          type: string
        f_pdf:
          description: Not documented
          type: string
        f_qt:
          description: Not documented
          type: string
        f_realp:
          description: Not documented
          type: string
        f_wma:
          description: Not documented
          type: string
        f_dir:
          description: Not documented
          type: string
        f_fla:
          description: Not documented
          type: string
        f_java:
          description: Not documented
          type: string
        f_gears:
          description: Not documented
          type: string
        f_ag:
          description: Not documented
          type: string
        cd:
          description: Browser colour depth
          type: string
        ds:
          description: Web page width and height
          type: string
        cs:
          description: Web page's character encoding
          type: string
        vp:
          description: Browser viewport width and height
          type: string
        mac:
          description: MAC address for the device running the tracker
          type: string
        pp_mix:
          description: Minimum page x offset seen in the last ping period
          type: string
        pp_max:
          description: Maximum page x offset seen in the last ping period
          type: string
        pp_miy:
          description: Minimum page y offset seen in the last ping period
          type: string
        pp_may:
          description: Maximum page y offset seen in the last ping period
          type: string
        ad_ba:
          description: Not documented
          type: string
        ad_ca:
          description: Not documented
          type: string
        ad_ad:
          description: Not documented
          type: string
        ad_uid:
          description: Not documented
          type: string
        tr_id:
          description: Order ID
          type: string
        tr_af:
          description: Transaction affiliation (e.g. channel)
          type: string
        tr_tt:
          description: Transaction total value
          type: string
        tr_tx:
          description: Transaction tax value (i.e. amount of VAT included)
          type: string
        tr_sh:
          description: Delivery cost charged
          type: string
        tr_ci:
          description: Delivery address city
          type: string
        tr_st:
          description: Delivery address state
          type: string
        tr_co:
          description: Delivery address country
          type: string
        tr_cu:
          description: Transaction Currency
          type: string
        ti_id:
          description: Order ID
          type: string
        ti_sk:
          description: Item SKU
          type: string
        ti_nm:
          description: Item name
          type: string
        ti_na:
          description: Item not set
          type: string
        ti_ca:
          description: Item category
          type: string
        ti_pr:
          description: Item price
          type: string
        ti_qu:
          description: Item quantity
          type: string
        ti_cu:
          description: Currency
          type: string
        sa:
          description: Not documented
          type: string
        sn:
          description: Not documented
          type: string
        st:
          description: Not documented
          type: string
        sp:
          description: Not documented
          type: string
        se_ca:
          description: The category of event
          type: string
        se_ac:
          description: The action / event itself
          type: string
        se_la:
          description: A label often used to refer to the object the action is performed on
          type: string
        se_pr:
          description: A property associated with either the action or the object
          type: string
        se_va:
          description: A value associated with the user action
          type: string
        ue_na:
          description: Not documented
          type: string
        ue_pr:
          description: The properties of the event JSON
          type: string
        ue_px:
          description: The properties of the event JSON (URL-safe Base64 encoded)
          type: string
        co:
          description: An array of custom contexts JSON
          type: string
        cx:
          description: An array of custom contexts JSON (URL-safe Base64 encoded)
          type: string
        ua:
          description: The User Agent
          type: string
        tnuid:
          description: Can be used be a tracker to overwrite the `nuid`
          type: string
        stm:
          description: Timestamp when event was sent by client device to collector
          type: string
        sid:
          description: >-
            Unique identifier (UUID) for this visit of this user_id to this
            domain
          type: string
        ttm:
          description: User-set exact timestamp
          type: string
      required:
        - tv
        - p
        - e
    RealtimeEventsRealtimeEventsRequestYaml:
      title: RealTimeEventsResponse
      description: Event logged to analytics
      type: object
      properties:
        schema:
          type: string
        data:
          description: An array of events to be logged
          type: array
          items:
            $ref: '#/components/schemas/RealtimeEventsRealtimeEventsEventYaml'
          minItems: 1
      example:
        schema: iglu:com.snowplowanalytics.snowplow/payload_data/jsonschema/1-0-4
        data:
          - e: ue
            eid: 6389ab34-e190-4387-9707-7ec594c68993
            tv: js-3.8.0
            tna: webTracker
            aid: customer_web
            p: web
            cookie: '1'
            cs: UTF-8
            lang: en-GB
            res: 1728x1117
            cd: '30'
            dtm: '1693323505255'
            vp: 847x961
            ds: 847x1667
            vid: '4'
            sid: 1df4bd76-f854-4bde-9533-3a6676699d43
            duid: c1f8dc0f-b8f7-462e-87d9-b5ce8710ef04
            uid: ixDndjh36vagH2hnjH3jbDgS1TU=
            refr: tagassistant.google.com/
            url: >-
              https://uk-publicweb-cloudflare-staging-uk.staging-uk.je-labs.com/orders/lbnhcsc2feknrgp5xyrwba
            ue_px: >-
              eyJzY2hlbWEiOiJpZ2x1OmNvbS5zbm93cGxvd2FuYWx5dGljcy5zbm93cGxvdy91bnN0cnVjdF9ldmVudC9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJzY2hlbWEiOiJpZ2x1OmpldC5jdXN0L29yZGVyX3B1cmNoYXNlL2pzb25zY2hlbWEvMS0wLTAiLCJkYXRhIjp7fX19
            cx: >-
              eyJzY2hlbWEiOiJpZ2x1OmNvbS5zbm93cGxvd2FuYWx5dGljcy5zbm93cGxvdy9jb250ZXh0cy9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6W3sic2NoZW1hIjoiaWdsdTpqZXQvY3hfdXNlci9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJhbm9ueW1vdXNJZCI6IjVlNjQ1YjY4LTY3ZGQtNGY3MC1iM2I1LWE1NjkwZWJkNDAwZCJ9fSx7InNjaGVtYSI6ImlnbHU6amV0L2N4X3BsYXRmb3JtL2pzb25zY2hlbWEvMS0wLTAiLCJkYXRhIjp7Im5hbWUiOiJ1bmRlZmluZWQiLCJ2ZXJzaW9uIjoiMS4wLjk0NTEiLCJjb3VudHJ5IjoidWsiLCJsYW5ndWFnZSI6ImVuIiwiZW52aXJvbm1elbnQiOiJwcm9kIn19LHsic2NoZW1hIjoiaWdsdTpqZXQvY3hfcGFnZS9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJuYW1lIjoiZm9vZHRyYWNrZXIiLCJpZCI6IjY1ZjYxZDRiLWM4MjEtNDhmYi1iM2I2LTEwNGQwZTE2MzJlNiJ9fSx7InNjaGVtYSI6ImlnbHU6Y29tLmp1c3RlYXQvZ3RtL2pzb25zY2hlbWEvMS0wLTAiLCJkYXRhIjp7ImlkIjoiR1RNLVRNUFg5Rk4iLCJ2ZXJzaW9uIjoiUVVJQ0tfUFJFVklFVyJ9fSx7InNjaGVtYSI6ImlnbHU6amV0LmN1c3QvY3hfcGF5bWVudC9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJpZCI6IkNhc2gifX0seyJzY2hlbWEiOiJpZ2x1OmpldC5jdXN0L2N4X3BhcnRuZXIvanNvbnNjaGVtYS8xLTAtMCIsImRhdGEiOnsiaWQiOiI4MjUxMCJ9fSx7InNjaGVtYSI6ImlnbHU6amV0LmN1c3QvY3hfb3JkZXIvanNvbnNjaGVtYS8xLTAtMCIsImRhdGEiOnsidG90YWwiOjE4LjUsImlkIjoibGJuaGNzYzJmZWtucmdwNXh5cndiYSJ9fV19
            stm: '1693323505256'
    RecommendationsBasketProductsRequestYaml:
      description: >-
        Describes a request for product recommendations based on products in a
        user's basket.
      properties:
        productIds:
          description: An array of product ids that are in the user's basket.
          items:
            type: string
          type: array
        orderRequestDetails:
          description: >-
            The object representing the local time, day of week and service type
            if knowable of the customer's current order.
          items:
            $ref: '#/components/schemas/RecommendationsOrderRequestDetailsYaml'
          type: object
        restaurantId:
          description: The id of the restaurant that the recommendations are for.
          type: string
      required:
        - productIds
        - restaurantId
        - userExperimentValues
      type: object
    RecommendationsMenuRecommendationsRequestYaml:
      description: >-
        Describes a request for dish recommendations for a particular restaurant
        menu.
      required:
        - restaurantId
        - orderRequestDetails
      properties:
        restaurantId:
          description: The id of the restaurant that the recommendations are for.
          type: string
        orderRequestDetails:
          description: >-
            The object representing the local time, day of week and service type
            if knowable of the customer's current order.
          items:
            $ref: '#/components/schemas/RecommendationsOrderRequestDetailsYaml'
          type: object
      type: object
    RecommendationsMenuRecommendationsResponseYaml:
      description: Contains menu dish recommendations.
      required:
        - themes
      properties:
        themes:
          description: >-
            List of the themes of the recommendations, i.e. personal favourites,
            most popular, etc.
          maxItems: 10
          type: array
          minItems: 0
          items:
            properties:
              recommendations:
                description: List of dish recommendations for the theme.
                maxItems: 20
                type: array
                minItems: 0
                items:
                  properties:
                    confidence:
                      description: Recommendation confidence score.
                      format: double
                      type: number
                    productId:
                      description: ID of a product/dish being recommended.
                      type: string
                    type:
                      description: >-
                        Describes the type of recommendation, i.e. popular,
                        healthy.
                      type: string
                  type: object
              id:
                description: Unique identifier for the theme.
                type: string
            type: object
      type: object
    RecommendationsOrderRequestDetailsYaml:
      properties:
        orderRequestDetails:
          description: Defines the time and service type for which the order is requested.
          properties:
            orderedForTime:
              description: >
                The time, local to restaurant, in ISO 8601 format, that the
                order is requested for. If the ordered for time is not known at
                the point of this request then the time should be the current
                local time.
              format: time
              type: string
            dayOfWeek:
              description: The day of the week that the order is placed for.
              enum:
                - sunday
                - monday
                - tuesday
                - wednesday
                - thursday
                - friday
                - saturday
              type: string
            serviceType:
              description: The service type, "collection", "delivery" or "dineIn".
              enum:
                - collection
                - delivery
                - dineIn
              type: string
          type: object
    RecommendationsProductRecommendationsResponseYaml:
      description: Contains all recommendations for a product.
      properties:
        renderWithView:
          description: >-
            Gets or sets the name of the UI component that the client should use
            to display the recommendations,

            which is taken from the experiment data for the user.
          type: string
        recommendations:
          description: >-
            Gets or sets an array of products that are recommended for the
            source product.
          items:
            description: Contains information for a single recommended product.
            properties:
              confidence:
                description: >-
                  Gets or sets the confidence level of this recommendation
                  (between 0 and 1).
                format: double
                type: number
              productId:
                description: Gets or sets the id of the product that is being recommended.
                type: string
              imageUrl:
                description: The URL of the image, if available, to display with the view
                type: string
            type: object
          type: array
        restaurantId:
          description: Gets or sets the restaurant id
          type: string
      type: object
    RestaurantListOfOfflineItemsResponseYaml:
      type: object
      properties:
        paging:
          description: Consists of pagination information.
          properties:
            cursors:
              description: Consists of cursors markers used in pagination.
              properties:
                after:
                  description: >-
                    The value should be used in the query parameter named after.
                    It is used as a cursor of the last returned record in the
                    previous request, from which next offset going to be
                    fetched. A missing or empty value indicates that the end of
                    the result set has been reached.
                  type: string
              type: object
          type: object
        offlineItems:
          description: List of offline items for a given restaurant.
          items:
            $ref: '#/components/schemas/RestaurantOfflineItemsResponseYaml'
          type: array
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
        offlineItems:
          - type: variation
            id: 111X
            nextAvailableAt: '2021-01-01T05:00:00.000Z'
          - type: variation
            id: '222'
            nextAvailableAt: '2021-01-01T05:00:00.000Z'
          - type: modifier
            id: '888'
            nextAvailableAt: '2021-01-01T05:00:00.000Z'
          - type: modifier
            id: '999'
            nextAvailableAt: '2021-01-01T05:00:00.000Z'
    RestaurantOfflineItemsRequestYaml:
      type: object
      properties:
        modifierIds:
          description: Modifier identifiers. Maximum sum of 100 Variation and Modifier IDs.
          maxItems: 100
          type: array
          minItems: 0
          items:
            type: string
        variationIds:
          description: >-
            Variation identifiers. Maximum sum of 100 Variation and Modifier
            IDs.
          maxItems: 100
          type: array
          minItems: 0
          items:
            type: string
        nextAvailableAt:
          description: >-
            Time when items will be brought back online (ISO-8601 Date Time
            UTC).
          format: date-time
          type: string
      example:
        modifierIds:
          - '777'
          - '888'
          - '999'
        variationIds:
          - '111'
          - '222'
          - '333'
        nextAvailableAt: '2021-01-01T05:00:00.000Z'
    RestaurantOfflineItemsResponseYaml:
      type: object
      properties:
        type:
          description: Item type identifier.
          items:
            type: string
          type: string
        id:
          description: Item identifier.
          items:
            type: string
          type: string
        nextAvailableAt:
          description: >-
            Time when item(s) will be brought back online (ISO-8601 Date Time
            UTC).
          format: date-time
          type: string
      example:
        type: variation
        id: 111X
        nextAvailableAt: '2021-01-01T05:00:00.000Z'
    RestaurantOnlineItemsRequestYaml:
      type: object
      properties:
        modifierIds:
          description: Modifier identifiers. Maximum sum of 100 Variation and Modifier IDs.
          maxItems: 100
          type: array
          minItems: 0
          items:
            type: string
        variationIds:
          description: >-
            Variation identifiers. Maximum sum of 100 Variation and Modifier
            IDs.
          maxItems: 100
          type: array
          minItems: 0
          items:
            type: string
      example:
        modifierIds:
          - '777'
          - '888'
          - '999'
        variationIds:
          - '111'
          - '222'
          - '333'
    RestaurantRestaurantErrorResponseYaml:
      type: object
      properties:
        statusCode:
          description: Http response status code
          type: string
        errorCode:
          description: >-
            A code that identifies the problem type. It will be supported by
            human-readable documentation that identifies how to resolve the
            error
          type: string
        errorId:
          description: >-
            A value that helps identify this response back to logs, so we can
            easily find this specific fault
          type: string
        timestamp:
          description: Date-time when this request was processed
          format: date-time
          type: string
        message:
          description: >-
            Specific details about the error that may assist the you in
            resolving the issue
          type: string
        requestId:
          description: >-
            A value that helps identify the trace back to logs, so that we can
            easily find what was happening on our system when the fault was
            generated
          type: string
      example:
        statusCode: '400'
        errorCode: InvalidCountryCode
        errorId: 6947c692-ca24-434d-8166-d4d54ef8d74e
        timestamp: '2019-10-02T12:34:53.121Z'
        message: The country code 'zzz' is not supported.
        requestId: 8000324e-0000-f400-b63f-84710c7967bb
    RestaurantVariationReorderDealYaml:
      title: VariationReorderDeal
      properties:
        Attributes:
          description: An object containing all the attributes of a Deal
          properties:
            Quantity:
              description: >-
                How many of the deal were previously ordered. When re-adding to
                basket this is the number that should be added.
              type: integer
            Rank:
              description: >-
                The position in the deal in the list. The data list is ordered
                by this ascending.
              type: integer
            DealGroups:
              description: >-
                A list of all the deal groups attached to a deal. 20 items
                maximum.
              items:
                $ref: '#/components/schemas/RestaurantVariationReorderDealGroupYaml'
              type: array
          type: object
        Id:
          description: The unique identifier for the deal.
          type: string
        Type:
          description: The type of the object. This will always be 'deal'.
          type: string
      type: object
    RestaurantVariationReorderDealGroupYaml:
      title: VariationReorderDealGroup
      properties:
        Variations:
          description: A list of variations in the deal group. 20 items maximum.
          items:
            $ref: '#/components/schemas/RestaurantVariationReorderVariationYaml'
          type: array
        Id:
          description: The unique identifier for a deal group.
          type: string
      type: object
    RestaurantVariationReorderModifierYaml:
      title: VariationReorderModifier
      properties:
        Quantity:
          description: How many of the modifier were previously added to the variation.
          type: integer
        Id:
          description: A unique identifier for the variation modifier.
          type: string
      type: object
    RestaurantVariationReorderModifierGroupYaml:
      title: VariationReorderModifierGroup
      properties:
        Id:
          description: The unique identifier for a modifier group.
          type: string
        Modifiers:
          description: >-
            A list of modifiers applied in this modifier group. 20 items
            maximum.
          items:
            $ref: '#/components/schemas/RestaurantVariationReorderModifierYaml'
          type: array
      type: object
    RestaurantVariationReorderRankedVariationYaml:
      title: VariationReorderRankedVariation
      properties:
        Attributes:
          description: An object containing all the attributes of a Deal
          properties:
            Rank:
              description: >-
                The position in the variation in the array. The data array is
                ordered by this ascending.
              type: integer
            Quantity:
              description: >-
                How many of the variation were previously ordered. When
                re-adding to basket, this is the number that should be added.
              type: integer
            ModifierGroups:
              description: >-
                A list of all the modifiers previously applied to the variation.
                20 items maximum.
              items:
                $ref: >-
                  #/components/schemas/RestaurantVariationReorderModifierGroupYaml
              type: array
          type: object
        Id:
          description: The unique identifier for the variation.
          type: string
        Type:
          description: The type of the object. This will always be 'variation'.
          type: string
      type: object
    RestaurantVariationReorderVariationYaml:
      title: VariationReorderVariation
      properties:
        Id:
          description: The unique identifier for the variation.
          type: string
        Quantity:
          description: How many of the variation were previously ordered.
          type: integer
        ModifierGroups:
          description: >-
            A list of all the modifiers previously applied to the variation. 20
            items maximum.
          items:
            $ref: '#/components/schemas/RestaurantVariationReorderModifierGroupYaml'
          type: array
      type: object
    RestaurantApiPartnerRestaurantTemporaryOfflineStatusYaml:
      type: object
      properties:
        Status:
          description: The offline status
          enum:
            - TempOffline
            - ClosedToday
            - None
          type: string
        Message:
          description: A detailed message about the offline reason
          type: string
      example:
        Status: TempOffline
        Message: Too busy
    RestaurantApiRestaurantDetailsUpdatedYaml:
      properties:
        event:
          description: The restaurant details have been updated
          enum:
            - RestaurantUpdated
          format: enum
          type: string
        tenant:
          description: The country the restaurant(s) exists in
          type: string
        restaurants:
          items:
            allOf:
              - $ref: '#/components/schemas/SharedAddressAndGeopositionLowercaseYaml'
              - type: object
                properties:
                  id:
                    description: The JUST EAT restaurant id
                    format: integer
                    type: number
          type: array
      type: object
    RestaurantApiRestaurantHoursChangedYaml:
      properties:
        Event:
          description: The details of the restaurant hours change
          enum:
            - OpenHoursForRestaurantChanged
          format: enum
          type: string
        Tenant:
          description: The country the restaurant exists in
          type: string
        OpenHours:
          items:
            properties:
              DayOfWeek:
                description: The day of the week the times are for.
                format: enum
                enum:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
                type: string
              OpenTime:
                description: The open time (HH:mm)
                type: string
              Closed:
                description: The restaurant is closed for the day
                type: boolean
              CloseTime:
                description: >-
                  The close time (HH:mm) (Wide clock, i.e. if before start it is
                  following day)
                type: string
            type: object
          type: array
        RestaurantReference:
          description: The JUST EAT Restaurant Id
          type: string
      type: object
    RestaurantApiRestaurantInformationUpdatedYaml:
      properties:
        event:
          description: The event type
          enum:
            - RestaurantInformationUpdated
          format: enum
          type: string
        RestaurantInformationUpdated:
          description: The information update
          properties:
            Tenant:
              description: The country the restaurant exists in
              type: string
            RestaurantId:
              description: The JUST EAT Restaurant Id
              type: string
            RestaurantInfo:
              description: The restaurant information
              properties:
                id:
                  description: The id
                  type: integer
                email:
                  description: The contact email
                  type: string
                phoneNumber:
                  description: The phone number of the restaurant
                  type: string
                companyNo:
                  description: The company number
                  type: string
                allergenUrl:
                  description: URL for allergen information
                  type: string
                ownerName:
                  description: The owner's name
                  type: string
                signupReference:
                  description: The sign up reference
                  type: string
                alternativeOwnerNumber:
                  description: An alternative phone number
                  type: string
                address:
                  $ref: >-
                    #/components/schemas/SharedAddressAndGeopositionLowercaseYaml
                mobileNumber:
                  description: The mobile number of the restaurant
                  type: string
                brandName:
                  description: The brand name for the restaurant
                  type: string
                openingClosingTimes:
                  description: >-
                    The restaurant opening and closing times for all days of the
                    week
                  properties:
                    wednesdayClosed:
                      description: true if closed
                      type: boolean
                    mondayOpeningTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    tuesdayClosed:
                      description: true if closed
                      type: boolean
                    saturdayOpeningTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    thursdayOpeningTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    sundayClosed:
                      description: true if closed
                      type: boolean
                    fridayOpeningTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    thursdayClosingTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    fridayClosingTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    wednesdayOpeningTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    fridayClosed:
                      description: true if closed
                      type: boolean
                    mondayClosingTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    tuesdayClosingTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    saturdayClosed:
                      description: true if closed
                      type: boolean
                    sundayOpeningTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    tuesdayOpeningTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    sundayClosingTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    mondayClosed:
                      description: true if closed
                      type: boolean
                    wednesdayClosingTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                    thursdayClosed:
                      description: true if closed
                      type: boolean
                    saturdayClosingTimeOfDay:
                      description: The time of day the restaurant closes
                      type: string
                  type: object
                allergenPhoneNumber:
                  description: The phone number for allergen information
                  type: string
                name:
                  description: The restaurant's name
                  type: string
                alternativeOwnerName:
                  description: An alternative owner's name
                  type: string
                seoName:
                  description: The SEO name of the restaurant
                  type: string
                logoUrl:
                  description: The URL of the restaurant's logo
                  type: string
                legalName:
                  description: The restaurant's legal name
                  type: string
              type: object
          type: object
      type: object
    RestaurantApiRestaurantOfflineStatusYaml:
      description: An event representing a change in the restaurant's offline status
      properties:
        Event:
          description: The restaurant's offline status
          enum:
            - RestaurantOfflineStatus
          format: enum
          type: string
        RestaurantReference:
          description: The JUST EAT Restaurant Id
          type: string
        RestaurantOfflineStatus:
          $ref: '#/components/schemas/RestauranteventsRestaurantOfflineStatusYaml'
      type: object
    RestaurantApiRestaurantStatusYaml:
      properties:
        Event:
          description: An object representing a change in the restaurant's status
          enum:
            - RestaurantStatusChange
          format: enum
          type: string
        Status:
          description: The new status
          enum:
            - online
            - offline
          format: enum
          type: string
        Message:
          description: >-
            This field should not be used but has been left in the callback for
            backwards compatibility purposes
          deprecated: true
          type: string
        RestaurantReference:
          description: The JUST EAT Restaurant Id
          type: string
      type: object
    RestaurantRestaurantEmailAddressYaml:
      properties:
        emailAddress:
          description: >-
            The email address of the restaurant that the login link will be sent
            to
          type: string
      type: object
    RestaurantPortal401ResponseYaml:
      type: object
      properties:
        status:
          description: HTTP status message
          type: string
        code:
          description: HTTP status code
          type: string
        message:
          description: Server message
          type: string
    RestaurantPortal500ResponseYaml:
      type: object
      properties:
        status:
          description: HTTP status message
          type: string
        code:
          description: HTTP status code
          type: string
        message:
          description: Server message
          type: string
    RestaurantPortalMerchandiseMerchandiseCategoriesResponseYaml:
      type: object
      properties:
        status:
          description: HTTP status message
          type: string
        code:
          description: HTTP status code
          type: string
        message:
          description: Server message
          type: string
        data:
          description: Returned data
          type: object
          properties:
            categories:
              description: An array with categories
              type: array
              additionalProperties:
                type: object
                properties:
                  name:
                    description: Category name
                    type: string
                  img:
                    description: Category image
                    type: string
                  url:
                    description: Full category URL in Webshop
                    type: string
                  seo_url:
                    description: SEO-friendly URL
                    type: string
                  totalProducts:
                    description: Products in category
                    type: integer
                  id:
                    description: Category id
                    type: integer
            baseUrl:
              description: Webshop URL
              type: string
      example:
        status: OK
        code: '200'
        message: success
        data:
          baseUrl: >-
            https://shop.thuisbezorgd.nl/merchandiseservices/login/return?id=1&token=some-token
          categories:
            - name: Disposables
              img: https://some.com/img.png
              url: >-
                https://shop.thuisbezorgd.nl/merchandiseservices/login/return?id=1&token=some-token&goto=/nl/disposables
              seo_url: /nl/disposables
              totalProducts: 10
              id: 2
            - name: Merchandise
              img: https://some.com/img.png
              url: >-
                https://shop.thuisbezorgd.nl/merchandiseservices/login/return?id=1&token=some-token&goto=/nl/merchandise
              seo_url: /nl/merchandise
              totalProducts: 10
              id: 3
    RestaurantPortalMerchandiseMerchandiseLinkResponseYaml:
      type: object
      properties:
        status:
          description: HTTP status message
          type: string
        code:
          description: HTTP status code
          type: string
        message:
          description: Server message
          type: string
        data:
          description: Webshop login link
          type: string
      example:
        status: OK
        code: '200'
        message: success
        data: >-
          https://shop.thuisbezorgd.nl/merchandiseservices/login/return?id=1&token=d08208309430c668a22d6f30b1609bbcf70e4ae2e0cbaa365e12152e4c6b278665555abf7e90ac4d667666af2897adf59801d4c147f0ba6cbe234fe8d12b7504
    RestaurantPortalMerchandiseMerchandiseUrlResponseYaml:
      type: object
      properties:
        status:
          description: HTTP status message
          type: string
        code:
          description: HTTP status code
          type: string
        message:
          description: Server message
          type: string
        data:
          description: Webshop URL
          type: string
      example:
        status: OK
        code: '200'
        message: success
        data: https://shop.thuisbezorgd.nl/nl/
    RestaurantPortalMerchandiseMerchandiseWebshopAccessControlResponseYaml:
      type: object
      properties:
        status:
          description: HTTP status message
          type: string
        code:
          description: HTTP status code
          type: string
        message:
          description: Server message
          type: string
        data:
          description: Returned data
          type: object
          properties:
            webshop_categories_link:
              description: Can link to categories
              type: boolean
      example:
        status: OK
        code: '200'
        message: success
        data:
          webshop_categories_link: true
    RestaurantSegmentationAssessmentStatusTypesYaml:
      description: Denotes the type of segmentation status that restaurant can have
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: enum
      example: 1
      x-enumNames:
        - Unknown
        - LocalLegend
        - Gold
        - Silver
        - New
    RestaurantSegmentationCustomerExperienceScoreDetailYaml:
      description: >-
        Details of how customer experience score has contributed to get the
        segmentation status
      properties:
        score:
          description: Represent the customer experience score achieved by the restaurant
          type: number
        requiredScore:
          description: >-
            Represent the customer experience score required to pass the
            customer experience score criteria
          type: number
        maximumScore:
          description: >-
            Represent the maximum customer experience score that can be achieved
            by the restaurant
          type: number
        scoreType:
          description: >-
            Represent the type of score data. It would always be number (0)
            customer experience score.
          $ref: '#/components/schemas/RestaurantSegmentationScoreTypesYaml'
        hasPassed:
          description: >-
            Represent if the restaurant has passed the customer experience score
            criteria
          type: boolean
      example:
        score: 12
        requiredScore: 40
        maximumScore: 50
        scoreType: 0
        hasPassed: false
      type: object
    RestaurantSegmentationHygieneSchemeYaml:
      description: Denotes the type of hygiene scheme supported
      enum:
        - 0
        - 1
        - 2
      type: integer
      example: 1
      x-enumNames:
        - Unknown
        - FHRS
        - FHIS
    RestaurantSegmentationHygieneScoreDetailYaml:
      description: >-
        Details of hygiene rating experience score has contributed to get the
        segmentation status
      properties:
        score:
          description: >-
            Represent the hygiene score achieved by restaurant. Based in the
            score type value, type of this field can be string or number of in
            future anything else
          anyOf:
            - type: number
            - type: string
            - type: object
        requiredScore:
          description: >-
            Represent the hygiene score required to pass hygiene criteria. Based
            in the score type value, type of this field can be string or number
            of in future anything else
          anyOf:
            - type: number
            - type: string
            - type: object
        scheme:
          description: Represent the hygiene scheme used by the restaurant
          $ref: '#/components/schemas/RestaurantSegmentationHygieneSchemeYaml'
        maximumScore:
          description: >-
            Represent the maximum hygiene score that can be achieved. Based in
            the score type value, type of this field can be string or number of
            in future anything else
          nullable: true
          anyOf:
            - type: number
            - type: string
            - type: object
        scoreType:
          description: >-
            Represent the type of score data. Value of this field will depend
            which hygiene method is supported by restaurant.
          $ref: '#/components/schemas/RestaurantSegmentationScoreTypesYaml'
        hasPassed:
          description: Represent if the restaurant has passed the hygiene score criteria
          type: boolean
      example:
        score: 5
        requiredScore: 3
        scheme: 1
        maximumScore: 5
        scoreType: 0
        hasPassed: true
      type: object
    RestaurantSegmentationOnItsWayPercentageYaml:
      description: >-
        Details of how on its way experience score has contributed to get the
        segmentation status
      properties:
        requiredScore:
          description: >-
            Represent the on its way percentage required to pass the on-its-way
            threshold
          type: number
        hasPassed:
          description: Represent if the restaurant has passed the on-its-way threshold
          type: boolean
        score:
          description: Represent the on-its-way percentage of restaurant
          type: number
        scoreType:
          description: >-
            Represent the type of score data. It would always be percentage (1)
            for on-its-way.
          $ref: '#/components/schemas/RestaurantSegmentationScoreTypesYaml'
      example:
        requiredScore: 70
        hasPassed: true
        score: 84
        scoreType: 1
      type: object
    RestaurantSegmentationOrderScoreDetailYaml:
      description: >-
        Details of how order score has contributed to get the segmentation
        status
      properties:
        score:
          description: Represent the order score achieved by the restaurant
          type: number
        requiredScore:
          description: Represent the order score required to pass the order score criteria
          type: number
        maximumScore:
          description: >-
            Represent the maximum order score that can be achieved by the
            restaurant
          type: number
        scoreType:
          description: >-
            Represent the type of score data. It would always be number (0)
            customer experience score.
          $ref: '#/components/schemas/RestaurantSegmentationScoreTypesYaml'
        hasPassed:
          description: Represent if the restaurant has passed the order score criteria
          type: boolean
      example:
        score: 48
        requiredScore: 20
        maximumScore: 50
        scoreType: 0
        hasPassed: true
      type: object
    RestaurantSegmentationScoreTypesYaml:
      description: >-
        Represent the type of score data. Value of this field will depend on the
        category.
      enum:
        - 0
        - 1
        - 2
      type: integer
      example: 2
      x-enumNames:
        - Number
        - Percentage
        - Custom
    RestaurantSegmentationSegmentationHistoryYaml:
      description: >-
        Represents list of last four segmentation statuses, sorted reverse
        chronologically by assessment date.
      properties:
        status:
          description: The segmentation status for restaurant
          $ref: '#/components/schemas/RestaurantSegmentationAssessmentStatusTypesYaml'
        hasLocalLegendCriteriaBeenMet:
          description: >-
            Represents if the restaurant achieved local legend status at that
            point or not
          type: boolean
        dateAssessed:
          description: Date and time when the segmentation assessment was made
          format: date-time
          type: string
      type: object
      example:
        status: 1
        hasLocalLegendCriteriaBeenMet: true
        dateAssessed: '2019-12-31T00:00:00.000Z'
    RestaurantSegmentationSegmentationHistoryListYaml:
      description: >-
        Represents list of last four segmentation statuses, sorted reverse
        chronologically by assessment date.
      items:
        $ref: '#/components/schemas/RestaurantSegmentationSegmentationHistoryYaml'
      type: array
    RestaurantSegmentationSegmentationStatusYaml:
      properties:
        status:
          description: The segmentation status for restaurant
          $ref: '#/components/schemas/RestaurantSegmentationAssessmentStatusTypesYaml'
        details:
          description: Represent the details of segmentation status
          $ref: >-
            #/components/schemas/RestaurantSegmentationSegmentationStatusDetailYaml
        lastUpdated:
          description: Timestamp of last status change
          format: date-time
          type: string
        id:
          description: The JUST EAT restaurant id
          format: integer
          type: number
      type: object
    RestaurantSegmentationSegmentationStatusDetailYaml:
      description: Represent the details of segmentation status sub-scores
      properties:
        customerExperienceScore:
          description: >-
            Details of how customer experience score has contributed to get the
            segmentation status
          $ref: >-
            #/components/schemas/RestaurantSegmentationCustomerExperienceScoreDetailYaml
        onItsWayPercentage:
          description: >-
            Details of how on its way experience score has contributed to get
            the segmentation status
          $ref: '#/components/schemas/RestaurantSegmentationOnItsWayPercentageYaml'
        hygiene:
          description: >-
            Details of hygiene rating experience score has contributed to get
            the segmentation status
          $ref: '#/components/schemas/RestaurantSegmentationHygieneScoreDetailYaml'
        orderScore:
          description: >-
            Details of how order score has contributed to get the segmentation
            status
          $ref: '#/components/schemas/RestaurantSegmentationOrderScoreDetailYaml'
      type: object
    RestaurantcapabilitiesRestaurantCapabilitiesPaymentTypeItemYaml:
      properties:
        paymentType:
          description: The payment type
          enum:
            - ApplePay
            - Card
            - Cash
            - GooglePay
            - PayPal
            - VCO
          type: string
        cardTypes:
          description: List of card types (only applies to `Card` payment type)
          items:
            enum:
              - AMEX
              - DK
              - MASTERCARD
              - VISA
              - VISADK
            format: enum
            type: string
            nullable: true
          type: array
        token:
          description: >-
            Token to be used with the payment type (only applies to `PayPal`
            payment type)
          type: string
          nullable: true
        voucherAvailable:
          description: Flag to indicate if vouchers are available for the payment type
          type: boolean
        maxOrderValueCents:
          description: >-
            Max order value in smallest unit of relevant currency (only applies
            to `Cash` payment type)
          format: integer
          type: number
          nullable: true
        selected:
          description: Flag to indicate if the payment type has been selected
          type: boolean
      type: object
      example:
        paymentType: Card
        selected: false
        voucherAvailable: true
        cardTypes:
          - VISA
          - MASTERCARD
          - AMEX
    RestaurantcapabilitiesRestaurantCapabilitiesResponseYaml:
      type: object
      properties:
        availablePaymentTypes:
          description: List of available payment types
          items:
            $ref: >-
              #/components/schemas/RestaurantcapabilitiesRestaurantCapabilitiesPaymentTypeItemYaml
          type: array
      example:
        availablePaymentTypes:
          - paymentType: ApplePay
            selected: true
            voucherAvailable: true
          - paymentType: GooglePay
            selected: false
            voucherAvailable: true
          - paymentType: PayPal
            selected: false
            voucherAvailable: true
            token: token123
          - paymentType: VCO
            selected: false
            voucherAvailable: true
          - paymentType: Cash
            selected: false
            voucherAvailable: true
            maxOrderValueCents: 5000
          - paymentType: Card
            selected: false
            voucherAvailable: true
            cardTypes:
              - VISA
              - MASTERCARD
              - AMEX
    RestaurantclaimsClaimDisputeYaml:
      description: Dispute of the customer claim
      type: object
      example:
        disputeReason: Ice cream is meant to be cold
      properties:
        disputeReason:
          description: >-
            Comment from the restaurant owner in case they want to dispute the
            customer claim describing the details as to why the claim should be
            rejected
          nullable: false
          type: string
    RestaurantclaimsClaimResolutionYaml:
      description: Representation of the decision made about a claim
      properties:
        decision:
          description: >-
            Indicates whether the claim is accepted, partially accepted
            disputed, or rejected - claim is partially accepted if at least one
            of the claimed items is accepted
          enum:
            - Accepted
            - PartiallyAccepted
            - Disputed
            - Rejected
          type: string
        resolvedDate:
          description: Date when decision on the claim was submitted
          format: date-time
          type: string
        totalClaimedAccepted:
          description: >-
            Total claimed money accepted by the restaurant in smallest unit of
            relevant currency
          type: number
        resolvedChannel:
          description: Channel which was used to resolved the claim
          type: string
      type: object
      nullable: true
      example:
        decision: Accepted
        resolvedDate: '2020-05-28T06:40:48.105Z'
        totalClaimedAccepted: 1900
        resolvedChannel: PartnerCentre
    RestaurantclaimsClaimsResponseYaml:
      description: Response containing claims for a restaurant which match the given filter
      properties:
        claims:
          description: Array with claims
          items:
            $ref: '#/components/schemas/RestaurantclaimsOrderClaimYaml'
          type: array
      type: object
      example:
        claims:
          - totalClaimed: 4000
            resolution:
              decision: Accepted
              resolvedDate: '2020-05-28T06:40:48.105Z'
              totalClaimedAccepted: 4000
              resolvedChannel: OrderPad
            issueType: LateOrder
            state: Closed
            id: z2749442-a62a-abcd-8623-04202878e034
            friendlyOrderReference: '954226580'
            restaurantResponse:
              decision: Accepted
              justification: null
            submittedDate: '2020-05-20T14:22:11.105Z'
            expirationDate: '2020-05-22T14:22:11.105Z'
            orderId: z27tqoxdoeupdx9w8evorw
            currency: GBP
          - orderId: r23tqoxdoeupdx9w8evorw
            issueType: Damaged
            affectedItems:
              - reference: productid%4t56574596
                decision: NotDecided
                name: Potato skin
                totalClaimed: 1900
                unitPrice: 2000
                id: >-
                  NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1
                quantity: 1
                additionalContext: null
              - reference: productid%t5y6574596
                decision: NotDecided
                name: Pizza
                totalClaimed: 1900
                unitPrice: 2000
                id: >-
                  123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1
                quantity: 1
                additionalContext: null
            totalClaimed: 3800
            expirationDate: '2020-05-22T14:22:11.105Z'
            currency: GBP
            state: Open
            resolution: null
            id: 2f749442-a62a-abcd-8623-04202878e034
            friendlyOrderReference: '451226580'
            submittedDate: '2020-05-20T14:22:11.105Z'
            restaurantResponse: null
          - orderId: a23tqoxdoeupdx9w8evorw
            issueType: Cold
            affectedItems:
              - reference: productid%4t56574596
                decision: Rejected
                name: Potato skin
                totalClaimed: 1900
                unitPrice: 2000
                id: >-
                  NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
                quantity: 1
                additionalContext: Potato skin was cold
            totalClaimed: 1900
            expirationDate: '2020-05-22T14:22:11.105Z'
            currency: GBP
            state: Closed
            resolution:
              decision: Rejected
              resolvedDate: '2020-05-28T06:40:48.105Z'
              totalClaimedAccepted: 0
              resolvedChannel: PartnerCentre
            id: 1f749442-a62a-abcd-8623-04202878e034
            friendlyOrderReference: '151226580'
            submittedDate: '2020-05-20T14:22:11.105Z'
            restaurantResponse:
              items:
                - decision: Rejected
                  id: >-
                    NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
              justification:
                comments: null
                reason: OrderWasHot
          - orderId: z23tqoxdoeupdx9w8evorw
            issueType: Cold
            affectedItems:
              - reference: productid%4t56574596
                decision: Accepted
                name: Potato skin
                totalClaimed: 1900
                unitPrice: 2000
                id: >-
                  NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
                quantity: 1
                additionalContext: Potato skin was cold
            totalClaimed: 1900
            expirationDate: '2020-05-22T14:22:11.105Z'
            currency: GBP
            state: Closed
            resolution:
              decision: Accepted
              resolvedDate: '2020-05-28T06:40:48.105Z'
              totalClaimedAccepted: 1900
              resolvedChannel: OrderPad
            id: zf749442-a62a-abcd-8623-04202878e034
            friendlyOrderReference: '951226580'
            submittedDate: '2020-05-20T14:22:11.105Z'
            restaurantResponse:
              items:
                - decision: Accepted
                  id: >-
                    NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
              justification: null
          - orderId: z23tqoxdoeupdx9w8evorz
            issueType: Cold
            affectedItems:
              - reference: productid%4t56574596
                decision: Accepted
                name: Potato skin
                totalClaimed: 1900
                unitPrice: 2000
                id: >-
                  NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
                quantity: 1
                additionalContext: Potato skin was cold
              - reference: productid%4t56574593
                decision: Rejected
                name: Meat
                totalClaimed: 2900
                unitPrice: 3000
                id: >-
                  NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3
                quantity: 1
                additionalContext: Meat was terribly cold
            totalClaimed: 1900
            expirationDate: '2020-05-22T14:22:11.105Z'
            currency: GBP
            state: Closed
            resolution:
              decision: PartiallyAccepted
              resolvedDate: '2020-05-28T06:40:48.105Z'
              totalClaimedAccepted: 1900
              resolvedChannel: OrderPad
            id: zf749442-a62a-abcd-8623-04202878e038
            friendlyOrderReference: '951226588'
            submittedDate: '2020-05-20T14:22:11.105Z'
            restaurantResponse:
              items:
                - decision: Accepted
                  id: >-
                    NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
                - decision: Rejected
                  id: >-
                    NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3X
              justification: null
    RestaurantclaimsItemYaml:
      description: Information about an item in the claim
      properties:
        decision:
          description: >-
            Indicates whether decision on the claimed item was made and what was
            that decision
          enum:
            - NotDecided
            - Accepted
            - Rejected
          type: string
        name:
          description: Item name
          type: string
        totalClaimed:
          description: Total claimed money in smallest unit of relevant currency
          type: number
        unitPrice:
          description: Price of a single unit in smallest unit of relevant currency
          type: number
        id:
          description: Item identifier
          type: string
        quantity:
          description: Quantity of items
          type: number
        additionalContext:
          description: Comment giving additional context
          nullable: true
          type: string
      type: object
      example:
        decision: Rejected
        name: Potato skin
        totalClaimed: 1900
        unitPrice: 2000
        id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
        quantity: 1
        additionalContext: Potato skin was damaged
    RestaurantclaimsItemDecisionYaml:
      description: Decision on the item
      properties:
        decision:
          description: Decision made about the item
          enum:
            - Accepted
            - Rejected
          type: string
        id:
          description: Item identifier
          type: string
      example:
        decision: Accepted
        id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
      type: object
    RestaurantclaimsJustificationYaml:
      description: >-
        The reason of the claim rejection and optional comments from the
        restaurant
      type: object
      example:
        comments: The food was packed properly
        reason: Other
      properties:
        comments:
          description: >-
            Comment from the restaurant owner in case they rejected at least one
            of the items and want to type their own rejection reason
          nullable: true
          type: string
        reason:
          description: One of the predefined reasons
          enum:
            - AlreadyRefunded
            - ItemReplaced
            - PartialRefundRequired
            - WasNotMissing
            - WillRedeliver
            - OrderWasHot
            - OrderWasOnTime
            - OrderWasPacked
            - FoodWasIntact
            - AddExtraItem
            - Other
          type: string
      nullable: true
    RestaurantclaimsOrderClaimYaml:
      description: Claim information
      properties:
        orderId:
          description: Just Eat order identifier
          type: string
        issueType:
          description: Type of claim
          enum:
            - Missing
            - Damaged
            - Cold
            - LateOrder
            - FoodNotArrived
          type: string
        affectedItems:
          description: Information about the claimed items
          nullable: true
          items:
            $ref: '#/components/schemas/RestaurantclaimsItemYaml'
          type: array
        totalClaimed:
          description: Total claimed money in smallest unit of relevant currency
          type: number
        expirationDate:
          description: >-
            Date when the claim will be accepted automatically in case the owner
            of the restaurant ignores it
          format: date-time
          type: string
        currency:
          description: Name of currency in ISO 4217 format
          type: string
        state:
          description: Indicates whether a decision about the claim was made
          enum:
            - Open
            - Closed
          type: string
        resolution:
          description: Representation of the claim resolution
          $ref: '#/components/schemas/RestaurantclaimsClaimResolutionYaml'
        id:
          description: Claim identifier
          type: string
        friendlyOrderReference:
          description: Just Eat friendly order reference
          type: string
        submittedDate:
          description: Date when the claim was submitted
          format: date-time
          type: string
        restaurantResponse:
          description: Restaurant response on the claim
          type: object
          $ref: >-
            #/components/schemas/RestaurantclaimsOrderClaimRestaurantResponseYaml
      type: object
      example:
        orderId: r23tqoxdoeupdx9w8evorw
        issueType: Damaged
        affectedItems:
          - reference: productid%4t56574596
            decision: Rejected
            name: Potato skin
            totalClaimed: 1900
            unitPrice: 2000
            id: >-
              NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
            quantity: 1
            additionalContext: Potato skin was damaged
          - reference: productid%t5y6574596
            decision: Accepted
            name: Pizza
            totalClaimed: 1900
            unitPrice: 2000
            id: >-
              123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
            quantity: 1
            additionalContext: Pizza was damaged too
        totalClaimed: 3800
        expirationDate: '2020-05-22T14:22:11.105Z'
        currency: GBP
        state: Closed
        resolution:
          decision: PartiallyAccepted
          resolvedDate: '2020-05-28T06:40:48.105Z'
          totalClaimedAccepted: 1900
          resolvedChannel: PartnerCentre
        id: 2f749442-a62a-abcd-8623-04202878e034X
        friendlyOrderReference: '451226580'
        submittedDate: '2020-05-20T14:22:11.105Z'
        restaurantResponse:
          decision: PartiallyAccepted
          items:
            - decision: Rejected
              id: >-
                NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
            - decision: Accepted
              id: >-
                123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
          justification:
            comments: The food was packed properly
            reason: Other
    RestaurantclaimsOrderClaimRestaurantResponseYaml:
      description: Restaurant response for the claim
      properties:
        decision:
          description: Decision on the claim
          enum:
            - Accepted
            - Rejected
            - PartiallyAccepted
          type: string
        items:
          description: Decisions on the items of a claim
          nullable: true
          items:
            $ref: '#/components/schemas/RestaurantclaimsItemDecisionYaml'
          type: array
        justification:
          description: Reasons why of the decision for the claim
          $ref: '#/components/schemas/RestaurantclaimsJustificationYaml'
      type: object
      nullable: true
      example:
        decision: PartiallyAccepted
        items:
          - decision: Accepted
            id: >-
              NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1X
          - decision: Rejected
            id: >-
              NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3X
        justification:
          comments: The food was packed properly
          reason: Other
    RestaurantdetailsRestaurantDetailsLocationYaml:
      description: Location of the restaurant
      properties:
        country:
          description: Country of the restaurant
          type: string
        postalCode:
          description: Post code of the restaurant
          type: string
        streetAddress:
          description: Street address of the restaurant
          type: string
        region:
          description: Region of the restaurant
          type: string
        geoPosition:
          description: Geoposition of the restaurant
          $ref: >-
            #/components/schemas/RestaurantdetailsRestaurantDetailsLocationPositionYaml
        city:
          description: City of the restaurant
          type: string
      type: object
    RestaurantdetailsRestaurantDetailsLocationPositionYaml:
      description: Geoposition of the restaurant in GeoJSON format
      properties:
        coordinates:
          description: longitude and latitude
          maxItems: 2
          type: array
          minItems: 2
          items:
            format: double
            type: number
        type:
          description: type of primitive
          enum:
            - Point
          type: string
      type: object
    RestaurantdetailsRestaurantDetailsResponseYaml:
      description: response containing details of the restaurant
      properties:
        contactOptions:
          description: Contact details of the restaurant
          properties:
            phoneNumbers:
              description: Array containing a phone number with label items
              maxItems: 3
              items:
                description: An item in emails array containing an email with label
                maxItems: 3
                properties:
                  phoneNumber:
                    description: Phone number
                    type: string
                  usedFor:
                    description: Type of phone number contacts
                    maxItems: 3
                    items:
                      description: Array containing labels specifying phone number
                      format: enum
                      enum:
                        - Default
                        - Owner
                        - Alternative
                      type: string
                    type: array
                type: object
              type: array
            emails:
              description: Array containing an email with label items
              items:
                description: An item in emails array containing an email with label
                maxItems: 3
                properties:
                  email:
                    description: Email contact
                    type: string
                  usedFor:
                    description: Type of email contacts
                    maxItems: 3
                    items:
                      description: Array containing labels specifying email
                      format: enum
                      enum:
                        - Default
                        - Invoice
                      type: string
                    type: array
                type: object
              type: array
          type: object
        allergenInformation:
          description: Allergen details of the restaurant
          properties:
            url:
              description: Page with information about allergens
              type: string
            phoneNumber:
              description: Phone number to contact restaurant about allergens
              type: string
          type: object
        cuisines:
          description: Array of cuisines of restaurant
          items:
            description: Cuisine name
            type: string
          type: array
        name:
          description: The name of the restaurant.
          type: string
        location:
          description: Location of the restaurant
          $ref: '#/components/schemas/RestaurantdetailsRestaurantDetailsLocationYaml'
        id:
          description: A unique identifier at tenant level for a given restaurant
          type: string
        logoUrl:
          description: The logo URL of the restaurant.
          type: string
        legalInformation:
          description: Legal information of the restaurant
          properties:
            registeredName:
              description: Legal company name of the restaurant
              type: string
            companyNumber:
              description: Company number of the restaurant
              type: string
          type: object
      example:
        contactOptions:
          phoneNumbers:
            - phoneNumber: +44 7911 123456
            - usedFor:
                - Default
                - Owner
                - Alternative
          emails:
            - email: test@mcdonalds.com
            - usedFor:
                - Invoice
                - Default
        allergenInformation:
          url: http://test.com
          phoneNumber: +44 7911 123456
        cuisines:
          - Italian
          - American
        name: McDonald's Test
        location:
          country: United Kingdom
          postalCode: EC4M 7RF
          streetAddress: Fleet Place House, Fleet Place
          region: Farringdon
          geoPosition:
            coordinates:
              - 51.509865
              - -0.118092
            type: Point
          city: London
        id: '108308'
        legalInformation:
          registeredName: Mc Donald's
          companyNumber: '12345'
      type: object
    RestauranteventsLegacyTempOfflineStatusYaml:
      description: >-

        - `Unset` : Legacy value meaning online.

        - `None` : Legacy value meaning online.

        - `TempOffline` : The restaurant will go temporarily offline, typically
        for an undetermined amount of time (no end date).

        - `ClosedToday` : The restaurant will closed for the day and the event
        will end the next morning.

        - `ClosedDueToEvent` : The restaurant will go offline for an event (e.g.
        a holiday), these events will typically have an end time.

        - `FailedJctConnection` : The restaurant will go offline due to the POS
        device losing connection.

        - `NoTrOverride` : The restaurant will go offline for another reason
        that the restaurant cannot override.

        - `IgnoredOrders` : The restaurant will go offline due to ignoring
        orders.
      default: ClosedDueToEvent
      enum:
        - Unset
        - None
        - TempOffline
        - ClosedToday
        - ClosedDueToEvent
        - FailedJctConnection
        - NoTrOverride
        - IgnoredOrders
      type: string
    RestauranteventsOfflineRestaurantsRequestModelYaml:
      description: A request to take restaurants offline.
      properties:
        restaurantIds:
          description: >-
            A comma separated list of the IDs of the restaurants to include in
            the offline event. No limit to the number accepted by the endpoint,
            but unexpected behaviour mat occur at more than 500 IDs.
          type: string
        endDate:
          description: ISO 8601 format of the end datetime of the offline event.
          type: string
          nullable: true
          format: date-time
          minLength: 1
        duration:
          description: >-
            Either a timespan in the HH:mm format or `untilTomorrow` (this will
            be the next day at 4:30 am +/- 10 minutes local time). Note if both
            duration and `endDate` are specified duration takes precedence.
          type: string
        legacyTempOfflineType:
          $ref: '#/components/schemas/RestauranteventsLegacyTempOfflineStatusYaml'
        reason:
          description: The reason for creating the offline event.
          type: string
        name:
          description: Name of the offline event to be created.
          type: string
        allowRestaurantOverride:
          description: >-
            Whether a restaurant should be allowed to delete this event,
            regardless of who raised it.
          type: boolean
        category:
          description: >-
            A free text category used to group multiple events. This field is
            not intended to be used by clients.
          deprecated: true
          type: string
        startDate:
          description: ISO 8601 format of the start datetime of the offline event.
          type: string
          format: date-time
          minLength: 1
      type: object
      required:
        - restaurantIds
        - name
        - reason
        - startDate
        - allowRestaurantOverride
      example:
        restaurantIds: '12345'
        name: Out of Chicken
        reason: No more chicken in stock.
        startDate: '2020-01-16T09:00:00Z'
        duration: '1:00:00'
        allowRestaurantOverride: true
    RestauranteventsRestaurantOfflineStatusYaml:
      description: The offline status of the restaurant
      type: object
      properties:
        Tenant:
          description: >-
            The two letter country code for the market in which the restaurant
            operates.
          format: enum
          enum:
            - au
            - dk
            - es
            - ie
            - it
            - 'no'
            - uk
            - nz
          type: string
        IsOffline:
          description: Represents the current offline status of the restaurant.
          type: boolean
        RestaurantId:
          description: >-
            The unique identifier of the restaurant that has their offline
            status changed.
          type: string
        AllowRestaurantOverride:
          description: >-
            Whether a restaurant should be allowed to reverse this offline
            status change through calls to the Restaurant Events endpoints.
          nullable: true
          type: boolean
      example:
        Tenant: uk
        IsOffline: true
        RestaurantId: '123456'
        AllowRestaurantOverride: false
    RestauranteventsUserRoleYaml:
      description: |-

        - `System` : Role for an automated process action.
        - `Operations` : Role for an operations user action.
        - `Restaurant` : Role for a restaurant owner/employee user action.
      enum:
        - System
        - Operations
        - Restaurant
      type: string
    RestauranteventsValidationErrorYaml:
      properties:
        errorCode:
          description: The error code
          type: string
        propertyName:
          description: The name of the property causing the failure
          type: string
        customState:
          description: Custom state associated with the failure
          nullable: true
          type: string
        formattedMessageArguments:
          description: Custom formatted validator messages with placeholders
          items:
            type: string
          type: array
        severity:
          description: Severity of a validation rule. Will always be 0 (Error).
          type: number
        attemptedValue:
          description: The property value that caused the failure
          nullable: true
          type: string
        resourceName:
          description: The resource name used for building the message
          nullable: true
          type: string
        formattedMessagePlaceHolderValues:
          description: The values for placeholders in the formatted messages
          type: object
          additionalProperties: true
        errorMessage:
          description: The error message
          type: string
      type: object
      example:
        errorCode: NotEmptyValidator
        propertyName: TestProperty
        customState: null
        formattedMessageArguments: []
        severity: 0
        attemptedValue: null
        resourceName: null
        formattedMessagePlaceHolderValues:
          PropertyName: User Role
          PropertyValue: null
        errorMessage: TestProperty is empty
    RestaurantfeesBagFeeYaml:
      description: The object which encapsulates a Fee
      properties:
        serviceTypes:
          description: >-
            Contains Service type specific fee values. If set, default can be
            used to apply a fee to as yet unspecified service types
          properties:
            default:
              description: >-
                Configuration of the fee for any service type which is not
                explicitly configured
              $ref: >-
                #/components/schemas/RestaurantfeesServiceTypeBagFeeConfigurationYaml
            collection:
              description: Configuration of the fee for the collection service type
              $ref: >-
                #/components/schemas/RestaurantfeesServiceTypeBagFeeConfigurationYaml
            delivery:
              description: Configuration of the fee for the delivery service type
              $ref: >-
                #/components/schemas/RestaurantfeesServiceTypeBagFeeConfigurationYaml
          type: object
      example:
        serviceTypes:
          default:
            amount: 0
          collection:
            amount: 5
          delivery:
            amount: 10
      type: object
    RestaurantfeesBagFeeWithDescriptionYaml:
      description: The object which encapsulates a Fee
      properties:
        bagFee:
          description: A fee applied for bags used for delivery and collection orders
          properties:
            description:
              description: A description of what the Fee is
              type: string
            serviceTypes:
              description: >-
                Contains Service type specific fee values. If set, default can
                be used to apply a fee to as yet unspecified service types
              properties:
                default:
                  description: >-
                    Configuration of the fee for any service type which is not
                    explicitly configured
                  $ref: >-
                    #/components/schemas/RestaurantfeesServiceTypeBagFeeConfigurationYaml
                collection:
                  description: Configuration of the fee for the collection service type
                  $ref: >-
                    #/components/schemas/RestaurantfeesServiceTypeBagFeeConfigurationYaml
                delivery:
                  description: Configuration of the fee for the delivery service type
                  $ref: >-
                    #/components/schemas/RestaurantfeesServiceTypeBagFeeConfigurationYaml
          type: object
      example:
        bagFee:
          description: A charge for bags
          serviceTypes:
            default:
              amount: 0
            collection:
              amount: 5
            delivery:
              amount: 10
      type: object
    RestaurantfeesFeeComponentYaml:
      description: The type of FeeComponent
      type: string
      enum:
        - DELIVERY_FEE
        - PREPAID_TIPS
        - TAX
        - SUBTOTAL
      example: TAX
    RestaurantfeesFeeUseConfigurationYaml:
      description: The fee being used
      required:
        - use
      properties:
        use:
          description: A string describing which fee type is being used
          type: string
          enum:
            - fixed
            - percentage
            - none
      discriminator:
        propertyName: use
    RestaurantfeesFilterYaml:
      description: The Filter object with its properties
      type: object
      properties:
        orderMethod:
          description: The order method of the Filter
          type: string
          enum:
            - ONLINE
            - CALL_IN
          nullable: true
        orderType:
          description: The order type of the Filter
          type: string
          enum:
            - DELIVERY
            - PICKUP
          nullable: true
        paymentType:
          description: The payment type of the Filter
          type: string
          enum:
            - CASH
            - INTERAC_ONLINE
            - CREDIT_CARD
            - CORPORATE
            - PREPAID
            - UNKNOWN
            - SKIP_CREDIT
            - SKIP_PAID
            - REDIRECT
          nullable: true
      example:
        filters:
          orderMethod: CALL_IN
          orderType: DELIVERY
          paymentType: CREDIT_CARD
    RestaurantfeesFixedFeeConfigurationYaml:
      description: Object containing the amount of a fixed fee
      allOf:
        - $ref: '#/components/schemas/RestaurantfeesFeeUseConfigurationYaml'
        - type: object
          required:
            - use
            - fixed
      properties:
        fixed:
          description: Object containing the fixed configuration for this fee
          type: object
          properties:
            amount:
              description: The value to apply for this Fee in the smallest unit of currency
              format: integer
              type: number
    RestaurantfeesNoneFeeConfigurationYaml:
      description: Empty object for when there's no fees to return
      allOf:
        - $ref: '#/components/schemas/RestaurantfeesFeeUseConfigurationYaml'
        - type: object
          required:
            - use
            - none
    RestaurantfeesPercentageFeeConfigurationYaml:
      description: Object containing the amount of a percentage fee
      type: object
      allOf:
        - $ref: '#/components/schemas/RestaurantfeesFeeUseConfigurationYaml'
        - type: object
          required:
            - use
            - percentage
      properties:
        percentage:
          description: Object containing the percentage configuration for this Fee
          type: object
          properties:
            percent:
              description: The value to apply for this Fee in percentage amount
              format: double
              type: number
            minAmount:
              description: >-
                The minimum amount of the Fee in the second smallest unit of
                currency
              format: integer
              type: number
            maxAmount:
              description: >-
                The maximum amount of the Fee in the second smallest unit of
                currency
              format: integer
              type: number
    RestaurantfeesRestaurantFeesYaml:
      description: >-
        An object encapsulating all possible fees which a restaurant can apply
        to itself
      allOf:
        - $ref: '#/components/schemas/RestaurantfeesBagFeeWithDescriptionYaml'
        - $ref: '#/components/schemas/RestaurantfeesServiceFeeWithDescriptionYaml'
      example:
        bagFee:
          description: A charge for bags in delivery
          serviceTypes:
            default:
              amount: 10
            collection:
              amount: 5
            delivery:
              amount: 20
        serviceFee:
          description: A charge for service fee
          serviceTypes:
            default:
              use: percentage
              percentage:
                percent: 0.1
                minAmount: 0.5
                maxAmount: 1.99
            collection:
              use: percentage
              percentage:
                percent: 0.2
                minAmount: 0.1
                maxAmount: 1.99
            delivery:
              use: percentage
              percentage:
                percent: 0.05
                minAmount: 1
                maxAmount: 2.99
      type: object
    RestaurantfeesServiceFeeYaml:
      description: The object which encapsulates a Fee
      properties:
        serviceTypes:
          description: >-
            Contains Service type specific fee values. If set, default is used
            to apply a fee to as yet unspecified service types
          properties:
            default:
              description: >-
                Configuration of the fee for any service type which is not
                explicitly configured
              $ref: >-
                #/components/schemas/RestaurantfeesServiceTypeServiceFeeConfigurationYaml
            collection:
              description: Configuration of the fee for the collection service type
              $ref: >-
                #/components/schemas/RestaurantfeesServiceTypeServiceFeeConfigurationYaml
            delivery:
              description: Configuration of the fee for the delivery service type
              $ref: >-
                #/components/schemas/RestaurantfeesServiceTypeServiceFeeConfigurationYaml
          type: object
      example:
        serviceTypes:
          default:
            use: percentage
            percentage:
              percent: 0.1
              minAmount: 0.5
              maxAmount: 1.99
          collection:
            use: percentage
            percentage:
              percent: 0.1
              minAmount: 0.5
              maxAmount: 1.99
          delivery:
            use: percentage
            percentage:
              percent: 0.1
              minAmount: 0.5
              maxAmount: 1.99
      type: object
    RestaurantfeesServiceFeeCategoryYaml:
      description: The category of the ServiceFee
      type: string
      enum:
        - REVENUE_SHARE
        - CUSTOMER_CONTRIBUTION
        - REVENUE_SHARE_FREE_TRIAL
        - REVENUE_SHARE_DISCOUNT
        - REVENUE_SHARE_REBATE
        - REVENUE_SHARE_DAAS
      nullable: false
      example: REVENUE_SHARE
    RestaurantfeesServiceFeeTypeYaml:
      description: The type of the ServiceFee
      type: string
      enum:
        - PERCENT
        - FLAT_RATE
        - FLAT_RATE_PER_WEEK
      nullable: false
      example: PERCENT
    RestaurantfeesServiceFeeWithDescriptionYaml:
      description: The object which encapsulates a Fee
      properties:
        serviceFee:
          description: A charge for services used for delivery and collection orders
          properties:
            description:
              description: A description of what the Fee is
              type: string
            serviceTypes:
              description: >-
                Contains Service type specific fee values. If set, default is
                used to apply a fee to as yet unspecified service types
              properties:
                default:
                  description: >-
                    Configuration of the fee for any service type which is not
                    explicitly configured
                  $ref: >-
                    #/components/schemas/RestaurantfeesServiceTypeServiceFeeConfigurationYaml
                collection:
                  description: Configuration of the fee for the collection service type
                  $ref: >-
                    #/components/schemas/RestaurantfeesServiceTypeServiceFeeConfigurationYaml
                delivery:
                  description: Configuration of the fee for the delivery service type
                  $ref: >-
                    #/components/schemas/RestaurantfeesServiceTypeServiceFeeConfigurationYaml
          type: object
      example:
        description: A charge for service fee
        serviceFee:
          serviceTypes:
            default:
              use: percentage
              percentage:
                percent: 0.1
                minAmount: 0.5
                maxAmount: 1.99
            collection:
              use: percentage
              percentage:
                percent: 0.1
                minAmount: 0.5
                maxAmount: 1.99
            delivery:
              use: percentage
              percentage:
                percent: 0.1
                minAmount: 0.5
                maxAmount: 1.99
      type: object
    RestaurantfeesServiceFeesRequestYaml:
      description: >-
        By providing a set of ServiceFee details, to create/update the requested
        restaurant.
      type: object
      properties:
        serviceFees:
          description: >-
            Contains a set of ServiceFee objects with id, amount, description,
            category, startDate and endDate.
          nullable: true
          type: array
          items:
            type: object
            properties:
              description:
                description: >-
                  The description of the ServiceFee that is going to
                  create/update.
                type: string
                nullable: false
              id:
                description: The id of the ServiceFee that is going to create/update.
                type: string
                nullable: true
              amount:
                description: The amount of the ServiceFee that is going to create/update.
                type: number
                format: double
                nullable: false
              type:
                $ref: '#/components/schemas/RestaurantfeesServiceFeeTypeYaml'
              category:
                $ref: '#/components/schemas/RestaurantfeesServiceFeeCategoryYaml'
              startDate:
                description: >-
                  The startDate timestamp of the ServiceFee that is going to
                  create/update.
                type: number
                format: long
                nullable: true
              endDate:
                description: >-
                  The endDate timestamp of the ServiceFee that is going to
                  create/update.
                type: number
                format: long
                nullable: true
              filters:
                description: >-
                  Only when ServiceFeeType is PERCENT or FLAT_RATE, it would
                  have a set of Filter property.
                type: array
                nullable: true
                items:
                  $ref: '#/components/schemas/RestaurantfeesFilterYaml'
              feeComponents:
                description: >-
                  Only when ServiceFeeType is PERCENT, it would have a set of
                  FeeComponent property.
                type: array
                nullable: true
                items:
                  $ref: '#/components/schemas/RestaurantfeesFeeComponentYaml'
      example:
        serviceFees:
          - description: SkipTheDishes Service Fee 1
            id: 00186d61-f107-4032-a7b8-425df1b0bc35
            amount: 15.5
            category: REVENUE_SHARE
            type: FLAT_RATE
            filters:
              - orderMethod: CALL_IN
                orderType: DELIVERY
                paymentType: CREDIT_CARD
              - orderType: PICKUP
                paymentType: INTERAC_ONLINE
                orderMethod: ONLINE
          - description: SkipTheDishes Service Fee 2
            id: f2d99f86-22f7-11ec-9621-0242ac130002
            amount: 27
            category: REVENUE_SHARE_FREE_TRIAL
            type: PERCENT
            startDate: 1593444834
            endDate: 1593444233
            filters:
              - orderMethod: CALL_IN
                orderType: DELIVERY
                paymentType: CREDIT_CARD
              - orderType: PICKUP
                paymentType: INTERAC_ONLINE
                orderMethod: ONLINE
            feeComponents:
              - SUBTOTAL
    RestaurantfeesServiceFeesResponseYaml:
      description: >-
        The service fee details object of a restaurant. It contains a set of
        service fees configured for a given restaurant.
      type: object
      properties:
        serviceFees:
          description: >-
            Contains a set of ServiceFee objects with id, amount, description,
            type, category, etc.
          nullable: true
          type: array
          items:
            type: object
            properties:
              description:
                description: The description of the ServiceFee.
                type: string
                nullable: false
              id:
                description: The id of the ServiceFee.
                type: string
                nullable: false
              amount:
                description: The amount of the ServiceFee.
                type: number
                format: double
                nullable: false
              type:
                $ref: '#/components/schemas/RestaurantfeesServiceFeeTypeYaml'
              category:
                $ref: '#/components/schemas/RestaurantfeesServiceFeeCategoryYaml'
              startDate:
                description: The startDate timestamp of the ServiceFee.
                type: number
                format: long
                nullable: true
              endDate:
                description: The endDate timestamp of the ServiceFee.
                type: number
                format: long
                nullable: true
              filters:
                description: >-
                  Only when ServiceFeeType is PERCENT or FLAT_RATE, it would
                  have a set of Filter property.
                type: array
                nullable: true
                items:
                  $ref: '#/components/schemas/RestaurantfeesFilterYaml'
              feeComponents:
                description: >-
                  Only when ServiceFeeType is PERCENT, it would have a set of
                  FeeComponent property.
                type: array
                nullable: true
                items:
                  $ref: '#/components/schemas/RestaurantfeesFeeComponentYaml'
      example:
        serviceFees:
          - description: SkipTheDishes Service Fee
            id: 691e7fd6-082c-4fea-bafa-2e9950891a5d
            amount: 99
            type: FLAT_RATE
            category: REVENUE_SHARE
            startDate: 3600000
            filters:
              - orderMethod: CALL_IN
                orderType: DELIVERY
                paymentType: CREDIT_CARD
              - orderType: PICKUP
                paymentType: INTERAC_ONLINE
                orderMethod: ONLINE
          - description: SkipTheDishes Service Fee
            id: 2ab9ad00-1034-4c38-b0d0-11460a316f4e
            amount: 10
            type: PERCENT
            category: REVENUE_SHARE
            startDate: 3600000
            filters:
              - orderMethod: CALL_IN
                orderType: DELIVERY
                paymentType: CREDIT_CARD
              - orderType: PICKUP
                paymentType: INTERAC_ONLINE
                orderMethod: ONLINE
            feeComponents:
              - SUBTOTAL
          - description: SkipTheDishes Service Fee
            id: 6329402c-0c97-4d16-adf3-6b781bfc6680
            amount: 25
            type: PERCENT
            category: REVENUE_SHARE
            startDate: 3600000
            filters:
              - orderMethod: CALL_IN
                orderType: DELIVERY
                paymentType: CREDIT_CARD
            feeComponents:
              - SUBTOTAL
    RestaurantfeesServiceTypeBagFeeConfigurationYaml:
      description: Distinct values which are configured for a particular service type
      properties:
        amount:
          description: >-
            The value to apply to the basket for this Fee in the smallest unit
            of currency
          format: integer
          type: number
      example:
        amount: 5
      type: object
    RestaurantfeesServiceTypeServiceFeeConfigurationYaml:
      description: >-
        Distinct values which are configured for a particular service type,
        either fixed or percentage amounts
      type: object
      properties:
        use:
          description: A string describing which fee type is being used
          $ref: '#/components/schemas/RestaurantfeesFeeUseConfigurationYaml'
      discriminator:
        propertyName: use
        mapping:
          fixed: '#/components/schemas/RestaurantfeesFixedFeeConfigurationYaml'
          percentage: '#/components/schemas/RestaurantfeesPercentageFeeConfigurationYaml'
          none: '#/components/schemas/RestaurantfeesNoneFeeConfigurationYaml'
        oneOf:
          - $ref: '#/components/schemas/RestaurantfeesFixedFeeConfigurationYaml'
          - $ref: '#/components/schemas/RestaurantfeesPercentageFeeConfigurationYaml'
          - $ref: '#/components/schemas/RestaurantfeesNoneFeeConfigurationYaml'
      required:
        - use
    RestauranthoursServiceTimesYaml:
      type: object
      properties:
        serviceTimes:
          $ref: '#/components/schemas/RestauranthoursServiceTimesDaysYaml'
      example:
        desiredServiceTimes:
          friday:
            collection:
              - start: '12:00:00'
                end: '14:00:00'
              - start: '17:00:00'
                end: '23:00:00'
            delivery:
              - start: '12:00:00'
                end: '13:30:00'
              - start: '18:00:00'
                end: '00:00:00'
          tuesday:
            collection:
              - start: '12:00:00'
                end: '14:00:00'
              - start: '17:00:00'
                end: '23:00:00'
            delivery:
              - start: '12:00:00'
                end: '13:30:00'
              - start: '18:00:00'
                end: '00:00:00'
          thursday:
            collection:
              - start: '12:00:00'
                end: '14:00:00'
              - start: '17:00:00'
                end: '23:00:00'
            delivery:
              - start: '12:00:00'
                end: '13:30:00'
              - start: '18:00:00'
                end: '00:00:00'
          sunday:
            collection:
              - start: '12:00:00'
                end: '23:00:00'
            delivery:
              - start: '12:00:00'
                end: '00:00:00'
          saturday:
            collection:
              - start: '12:00:00'
                end: '23:00:00'
            delivery:
              - start: '12:00:00'
                end: '00:00:00'
          monday:
            collection:
              - start: '12:00:00'
                end: '14:00:00'
              - start: '17:00:00'
                end: '23:00:00'
            delivery:
              - start: '12:00:00'
                end: '13:30:00'
              - start: '18:00:00'
                end: '00:00:00'
          wednesday:
            collection:
              - start: '12:00:00'
                end: '14:00:00'
              - start: '17:00:00'
                end: '23:00:00'
            delivery:
              - start: '12:00:00'
                end: '13:30:00'
              - start: '18:00:00'
                end: '00:00:00'
      x-konfig-properties:
        serviceTimes:
          description: The desired times at which a restaurant is in service
          type: object
    RestauranthoursServiceTimesCollectionYaml:
      items:
        properties:
          start:
            description: >-
              Start time of the slot in hh:mm:ss format. Times are in the
              restaurant's time zone which can be obtained by converting
              `location.geoPosition` value from [the restaurant's
              details](https://uk.api.just-eat.io/docs/) using a lookup API such
              as `timezonedb.com`.
            pattern: ^([0-1]\d|2[0-3]):[0-5]\d$:[0-5]\d$
            type: string
          end:
            description: >-
              Local end time of the slot in hh:mm:ss format. The end time occurs
              on the next day if less than or equal to the start time. Times are
              in the restaurant's time zone which can be obtained by converting
              `location.geoPosition` value from [the restaurant's
              details](https://uk.api.just-eat.io/docs/) using a lookup API such
              as `timezonedb.com`.
            pattern: ^([0-1]\d|2[0-3]):[0-5]\d$:[0-5]\d$
            type: string
        type: object
      type: array
    RestauranthoursServiceTimesDaysYaml:
      description: The desired times at which a restaurant is in service
      properties:
        friday:
          $ref: '#/components/schemas/RestauranthoursServiceTimesServicesYaml'
        tuesday:
          $ref: '#/components/schemas/RestauranthoursServiceTimesServicesYaml'
        thursday:
          $ref: '#/components/schemas/RestauranthoursServiceTimesServicesYaml'
        sunday:
          $ref: '#/components/schemas/RestauranthoursServiceTimesServicesYaml'
        saturday:
          $ref: '#/components/schemas/RestauranthoursServiceTimesServicesYaml'
        monday:
          $ref: '#/components/schemas/RestauranthoursServiceTimesServicesYaml'
        wednesday:
          $ref: '#/components/schemas/RestauranthoursServiceTimesServicesYaml'
      type: object
      x-konfig-properties:
        friday:
          description: Service times for Fridays
        tuesday:
          description: Service times for Tuesdays
        thursday:
          description: Service times for Thursdays
        sunday:
          description: Service times for Sundays
        saturday:
          description: Service times for Saturdays
        monday:
          description: Service times for Mondays
        wednesday:
          description: Service times for Wednesdays
    RestauranthoursServiceTimesOverridesYaml:
      type: object
      properties:
        overrides:
          type: array
          items:
            type: object
            properties:
              date:
                description: The date in which to service time overrides apply
                format: date
                type: string
              collection:
                description: The times at which customers can collect from the restaurant
                $ref: >-
                  #/components/schemas/RestauranthoursServiceTimesOverridesSchedulesYaml
                type: object
              delivery:
                description: The times at which the restaurant can provide delivery
                $ref: >-
                  #/components/schemas/RestauranthoursServiceTimesOverridesSchedulesYaml
                type: object
      example:
        overrides:
          - date: '2023-03-12'
            delivery:
              - start: '12:00:00'
                end: '14:00:00'
              - start: '17:00:00'
                end: '23:00:00'
            collection:
              - start: '12:00:00'
                end: '14:00:00'
              - start: '17:00:00'
                end: '23:00:00'
    RestauranthoursServiceTimesOverridesSchedulesYaml:
      items:
        properties:
          start:
            description: >-
              Start time of the slot in hh:mm format. Times are in the
              restaurant's time zone.
            format: time
            type: string
          end:
            description: >-
              Local end time of the slot in hh:mm format. The end time occurs on
              the next day if less than or equal to the start time. Times are in
              the restaurant's time zone.
            format: time
            type: string
        type: object
      type: array
    RestauranthoursServiceTimesServicesYaml:
      properties:
        collection:
          description: The times at which customers can collect from the restaurant
          $ref: '#/components/schemas/RestauranthoursServiceTimesCollectionYaml'
          type: object
        delivery:
          description: The times at which the restaurant can provide delivery
          $ref: '#/components/schemas/RestauranthoursServiceTimesCollectionYaml'
          type: object
      type: object
    RestaurantqueriesAttemptedDeliveryCancelOrderResolutionYaml:
      properties:
        ReasonCode:
          description: The reason the order has been cancelled
          enum:
            - NewAddressNotWithinDeliveryArea
            - UnableToReprepare
            - DriverNoLongerAvailable
            - AreaIsUnsafe
            - CustomerDoesnotWantOrderAnymore
          type: string
      type: object
    RestaurantqueriesAttemptedDeliveryCreateAttemptedDeliveryQueryYaml:
      properties:
        ReasonCode:
          description: The reason the attempted delivery event was created
          enum:
            - ProblemWithAddress
            - NoAnswer
          type: string
      type: object
      example:
        ReasonCode: ProblemWithAddress
    RestaurantqueriesAttemptedDeliveryRedeliverOrderResolutionYaml:
      properties:
        Status:
          description: The current status of the order
          enum:
            - DriverAtAddress
            - Repreparing
          type: string
        NewDueDate:
          description: Updated due date for delivery of the order
          format: date-time
          type: string
      type: object
    RestaurantqueriesCancellationApproveCancellationQueryYaml:
      properties:
        overriddenFee:
          description: A way to override the cancellation fee
          format: decimal
          type: number
        notes:
          description: Some notes in regards of cancellation
          type: string
      type: object
      example:
        notes: Customer call us to cancel the order
    RestaurantqueriesCancellationCreateCancellationQueryYaml:
      properties:
        reasonCode:
          description: The reason the cancellation event was created
          type: string
          enum:
            - rest_cancelled_customer_requested
            - rest_cancelled_customer_absent
            - rest_cancelled_out_of_stock
            - rest_cancelled_drivers_unavailable
            - rest_cancelled_fake_order
            - rest_cancelled_too_busy
            - rest_cancelled_other
        comments:
          description: Comments on why the order was cancelled
          type: string
      type: object
      example:
        reasonCode: rest_cancelled_customer_requested
        comments: There was a problem with the customer
    RestaurantqueriesCancellationCreateCancellationQueryResponseYaml:
      properties:
        orderId:
          description: Id of the order to be cancelled
          type: string
        reasonCode:
          description: Reason for cancellation
          type: string
          enum:
            - rest_cancelled_customer_requested
            - rest_cancelled_customer_absent
            - rest_cancelled_out_of_stock
            - rest_cancelled_drivers_unavailable
            - rest_cancelled_fake_order
            - rest_cancelled_too_busy
            - rest_cancelled_other
        comments:
          description: Additional comments regarding cancellation
          type: string
        state:
          description: State of the cancellation query
          type: string
          enum:
            - New
            - Offered
            - Declined
            - Approved
        createdAt:
          description: Date of cancellation query creation in ISO 8601 format.
          type: string
          format: date-time
        policyResult:
          description: Result of policies evaluation
          type: object
          properties:
            outcome:
              description: Outcome of policies evaluation
              type: object
              properties:
                fee:
                  description: Fee associated with cancellation query
                  type: object
                  properties:
                    amount:
                      description: Amount
                      type: number
                decision:
                  description: Final decision
                  type: string
                  enum:
                    - Offered
                    - Declined
            eligibility:
              description: Collection of evaluated eligibility policies
              type: array
              items:
                description: Policy details
                type: object
                properties:
                  code:
                    description: Name of the policy
                    type: string
                  passed:
                    description: Flag to indicate whether the policy was successful or not
                    type: boolean
                  overridable:
                    description: >-
                      Flag to indicate whether the policy can be overridden or
                      not
                    type: boolean
        resolution:
          description: Overall result of cancellation query
          type: object
          properties:
            by:
              description: Who initiated the query (restaurant, customer etc.)
              type: string
            userName:
              description: Name of query initiator
              type: string
            at:
              description: When was the query resolved in ISO 8601 format.
              type: string
              format: date-time
            notes:
              description: Additional notes
              type: string
      example:
        orderId: 123qwe
        reasonCode: rest_cancelled_other
        comments: example comments
        state: Offered
        createdAt: '2022-09-09T12:55:56.0149188Z'
        policyResult:
          outcome:
            fee:
              amount: 0
            decision: Offered
          eligibility:
            - code: BlockCashOrders
              passed: true
              overridable: false
        resolution:
          by: person
          userName: joe bloggs
          at: '2022-09-09T12:55:56.0149188Z'
          notes: Cancelled because didn't need
    RestaurantqueriesCompensationCreateRestaurantCompensationQueryYaml:
      type: object
      properties:
        Comments:
          description: Any other comments to add to the request
          type: string
        ReasonCode:
          description: The reason why compensation is due
          enum:
            - NotSet
            - BeingPrepared
            - OnItsWay
            - Delivered
            - Unknown
          type: string
      example:
        Comments: Driver had just left the restaurant
        ReasonCode: OnItsWay
    RestaurantqueriesCompensationOrderEligibleForRestaurantCompensationYaml:
      type: object
      properties:
        IsEligible:
          description: >-
            Flag that informs if the cancelled order is eligible for
            compensation
          type: boolean
        OrderId:
          description: Id for the order
          type: string
      example:
        IsEligible: true
        OrderId: c9639af6-04a3-4376-bb4b-5e95cc8b80eb
    RestaurantsAdditiveYaml:
      description: Indicates the presence of an additive in a variation or modifier.
      type: object
      additionalProperties: true
      required:
        - type
      properties:
        type:
          description: Types of additive that can be present
          $ref: '#/components/schemas/RestaurantsAdditiveTypeYaml'
        warnings:
          description: Type of warning for a specific allergen type
          type: array
          items:
            $ref: '#/components/schemas/RestaurantsAdditiveWarningYaml'
          nullable: true
    RestaurantsAdditiveTypeYaml:
      description: Type of additive
      type: string
      enum:
        - antioxidants
        - caffeine
        - colours
        - darkened
        - flavourEnhancers
        - geneticallyModified
        - liquorice
        - nitrate
        - nitriteCuringSalt
        - packagingGases
        - phosphate
        - plantSterols
        - plantStanols
        - preservatives
        - quinine
        - sugarsAndSweeteners
        - sweeteners
        - tableTopSweetenerAcesulfameK
        - tableTopSweetenerAdvantame
        - tableTopSweetenerAlitame
        - tableTopSweetenerAspartame
        - tableTopSweetenerAspartameAcesulphameSalt
        - tableTopSweetenerCyclamate
        - tableTopSweetenerErythritol
        - tableTopSweetenerIsomalt
        - tableTopSweetenerLactitol
        - tableTopSweetenerMaltitol
        - tableTopSweetenerMannitol
        - tableTopSweetenerNeohesperidineDC
        - tableTopSweetenerNeotame
        - tableTopSweetenerPolyglycitolSyrup
        - tableTopSweetenerSaccharin
        - tableTopSweetenerSorbitol
        - tableTopSweetenerSteviolGlycoside
        - tableTopSweetenerSucralose
        - tableTopSweetenerThaumatin
        - tableTopSweetenerXylitol
        - waxed
    RestaurantsAdditiveWarningYaml:
      description: Type of warning to show for specific additives
      type: string
      enum:
        - caffeineHighContentBeverage
        - caffeineNonBeverage
        - coloursHyperactivity
        - liquoriceHypertension
        - packagingGasesProtectiveAtmosphere
        - plantSterolsStanols
        - sweetenersLaxativeEffects
        - sweetenersPhenylalanine
    RestaurantsAllergenYaml:
      description: Indicates the presence of an allergen in a variation or modifier.
      type: object
      additionalProperties: true
      required:
        - type
        - level
      properties:
        type:
          description: Types of allergens that can be present
          $ref: '#/components/schemas/RestaurantsAllergenTypeYaml'
          nullable: false
        level:
          description: Level of containment of an allergen
          $ref: '#/components/schemas/RestaurantsAllergenContainmentLevelYaml'
          nullable: false
    RestaurantsAllergenContainmentLevelYaml:
      description: Containment level for an allergen
      type: string
      enum:
        - contains
        - mayContain
    RestaurantsAllergenTypeYaml:
      description: Type of allergen
      type: string
      enum:
        - celery
        - crustacean
        - egg
        - fish
        - glutenCereal
        - glutenCerealBarley
        - glutenCerealKamut
        - glutenCerealOat
        - glutenCerealRye
        - glutenCerealSpelt
        - glutenCerealWheat
        - lupin
        - milkLactose
        - mollusc
        - mustard
        - peanut
        - sesame
        - soybean
        - sulphurDioxideSulphites
        - treeNut
        - treeNutAlmond
        - treeNutBrazilNut
        - treeNutCashew
        - treeNutHazelnut
        - treeNutMacadamia
        - treeNutPecan
        - treeNutPistachio
        - treeNutWalnut
    RestaurantsAvailabilityYaml:
      type: object
      required:
        - id
        - name
        - serviceTypes
        - times
      properties:
        description:
          description: The description of the availability.
          type: string
          nullable: true
        name:
          description: The name for the availability.
          type: string
          minLength: 1
          nullable: false
        serviceTypes:
          description: >-
            Values can be "collection" or "delivery" and are used to denote what
            types of service apply to the availability. The array cannot contain
            duplicate values.
          items:
            enum:
              - collection
              - delivery
            type: string
          type: array
          minItems: 1
          nullable: false
        descriptionTranslations:
          description: Translations of the name of the availability.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        times:
          description: >-
            An array of times when the availability is active.  Times cannot
            overlap with the times of another availability on the same menu.
          items:
            $ref: '#/components/schemas/RestaurantsTimeYaml'
          type: array
          nullable: false
        id:
          description: A unique identifier at menu level for a given availability.
          type: string
          minLength: 1
          nullable: false
      example:
        description: Menu items available for delivery during weekdays for lunch.
        name: Delivery Lunch
        serviceTypes:
          - delivery
        times:
          - daysOfTheWeek:
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
              - sunday
            toDateTime: '14:30:00'
            fromDateTime: '11:30:00'
        id: 1-lunch-delivery
    RestaurantsBadRequestMarketingResponseYaml:
      description: 400 Bad Request Returned
      example:
        message: Unable to process the request.
        errors:
          - description: Bad Request
            errorCode: '400'
        faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
    RestaurantsCaffeineInformationYaml:
      description: Represents the caffeine data for a specific serving.
      type: object
      additionalProperties: true
      required:
        - caffeineQuantity
      anyOf:
        - required:
            - referenceQuantity
        - required:
            - description
      properties:
        description:
          description: Label for the reference quantity.
          type: string
          nullable: true
          example: Caffeine mg per 100ml
        referenceQuantity:
          description: The quantity the caffeine applies to.
          $ref: '#/components/schemas/RestaurantsReferenceQuantityYaml'
          nullable: true
          example: 100ml
        caffeineQuantity:
          description: The quantity of caffeine.
          $ref: '#/components/schemas/RestaurantsReferenceQuantityYaml'
          example: 15mg
      example:
        description: Caffeine mg per 100ml
        referenceQuantity:
          unit: ml
          quantity:
            value: 100
            lessThan: false
        caffeineQuantity:
          unit: mg
          quantity:
            value: 15
            lessThan: false
    RestaurantsCategoryYaml:
      allOf:
        - $ref: '#/components/schemas/RestaurantsCategoryBaseYaml'
        - type: object
          required:
            - itemIds
          properties:
            itemIds:
              description: >-
                The ids of the menu items that are within the category. The
                array must contain at least one menu item. Each id must be
                unique within the category and a menu item with that id must be
                included in the menu.
              items:
                type: string
              type: array
              minItems: 1
              nullable: false
      example:
        description: ''
        name: Starters
        itemIds:
          - '65143901'
          - '65143902'
          - '65143903'
          - '65143904'
          - '65143905'
        id: '3'
    RestaurantsCategoryBaseYaml:
      type: object
      required:
        - id
        - name
      properties:
        description:
          description: The description of the category.
          type: string
          minLength: 0
          nullable: true
        name:
          description: The name of the category.
          type: string
          minLength: 1
          nullable: false
        nameTranslations:
          description: Translations of the name of the category.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        descriptionTranslations:
          description: Translations of the description of the category.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        id:
          description: A unique identifier at menu level for a given category.
          type: string
          minLength: 1
          nullable: false
      example:
        description: ''
        name: Starters
        nameTranslations:
          - language: it
            text: Antipasti
        id: 3X
    RestaurantsDealItemVariationYaml:
      type: object
      required:
        - dealItemVariationId
        - minChoices
        - maxChoices
        - additionPrice
      properties:
        maxChoices:
          description: >-
            The maximum number of times this deal item variation can be chosen
            within a given deal group.
          format: int32
          type: integer
          nullable: false
        dealItemVariationId:
          description: A referenced variation id that can be a part of a deal group.
          type: string
          minLength: 1
          nullable: false
        externalId:
          description: >-
            The partner identifier for a deal item variation. For example, this
            could be a price look-up / stock keeping unit code.
          type: string
          minLength: 0
          maxLength: 1000
          nullable: true
        minChoices:
          description: >-
            The minimum number of times this deal item variation can be chosen
            within a given deal group. If not provided, this defaults to 0.
          type: integer
          format: int32
          nullable: false
        additionPrice:
          description: >-
            Selecting this modifier will increase the base price of the
            variation by this amount in the minor unit of the currency.
          type: number
          format: int32
          nullable: false
      example:
        maxChoices: 1
        dealItemVariationId: '8548153'
        minChoices: 0
        additionPrice: 50
    RestaurantsDeliveryFeeYaml:
      description: The delivery fees for a fee package
      type: object
      required:
        - minimumOrderLimit
        - feeAboveLimit
        - feeType
      properties:
        minimumOrderLimit:
          description: The minimum limit of the order value.
          type: integer
          format: int32
        feeAboveLimit:
          description: >-
            The delivery fee in smallest unit of relevant currency that has
            order value above the `minimumOrderLimit`.
          format: integer
          type: number
        feeBelowLimit:
          description: >-
            The delivery fee in smallest unit of relevant currency that has
            order value less than the `minimumOrderLimit`.
          format: integer
          type: number
        freeDeliveryLimit:
          description: Free delivery over order price.
          type: integer
          format: int32
        feeType:
          description: Type of the delivery fee.
          enum:
            - default
            - postCodeOverride
          type: string
        currencyCode:
          description: >-
            The ISO-4217 currency code associated with the all prices and money
            amounts in order details
          type: string
        postalCode:
          description: The postal code for this fee.
          type: string
    RestaurantsDeliveryFeesPackageYaml:
      description: The object representing a delivery fees package.
      type: object
      required:
        - id
        - name
        - feesPackageType
        - fees
      properties:
        id:
          description: The Id of the delivery fees package.
          type: string
        name:
          description: The name of the delivery fees package.
          type: string
        feesPackageType:
          description: The type of the delivery fees package.
          enum:
            - default
            - timeOverride
          type: string
        fees:
          description: The list of fees for the delivery fees package.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RestaurantsDeliveryFeeYaml'
        timeSlots:
          description: >-
            The list of time slots for delivery fees time based overrides. When
            there is no time slots, it will be considered as the whole day.
          type: array
          items:
            $ref: '#/components/schemas/RestaurantsDeliveryFeesTimeSlotYaml'
      example:
        id: ca3687f5-0b3e-4e42-9dff-cdcd631f20e6
        name: Monday and Wednesday fees
        feesPackageType: timeOverride
        fees:
          - limit: 800
            feeAboveLimit: 1000
            feeBelowLimit: 1200
            freeDeliveryLimit: 9900
            feeType: default
            minimumOrderLimit: 2000
            currencyCode: GBP
          - postalCode: AR51
            limit: 1000
            feeAboveLimit: 1100
            feeBelowLimit: 1400
            minimumOrderLimit: 2000
            freeDeliveryLimit: 9000
            feeType: postCodeOverride
            currencyCode: GBP
        timeSlots:
          - dayOfWeek: monday
            startTime: '18:00:00'
            endTime: '20:00:00'
          - dayOfWeek: wednesday
            startTime: '18:00:00'
            endTime: '20:00:00'
    RestaurantsDeliveryFeesPackageRequestYaml:
      description: The object representing a delivery fees package.
      type: object
      required:
        - name
        - fees
        - feesPackageType
      properties:
        name:
          description: The name of the delivery fees package.
          type: string
        feesPackageType:
          description: The type of the delivery fees package.
          enum:
            - default
            - timeOverride
          type: string
        fees:
          description: The list of fees for the delivery fees package.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RestaurantsDeliveryFeeYaml'
        timeSlots:
          description: >-
            The list of time slots for delivery fees time based overrides. When
            there is no time slots, it will be considered as the whole day.
          type: array
          items:
            $ref: '#/components/schemas/RestaurantsDeliveryFeesTimeSlotYaml'
      example:
        name: Adjustment Fees
        feesPackageType: timeOverride
        fees:
          - limit: 800
            feeAboveLimit: 1000
            feeBelowLimit: 1200
            freeDeliveryLimit: 9900
            minimumOrderLimit: 2000
            feeType: default
            currencyCode: GBP
          - postalCode: AR51
            limit: 1000
            feeAboveLimit: 1100
            feeBelowLimit: 1400
            freeDeliveryLimit: 9000
            minimumOrderLimit: 2000
            feeType: postCodeOverride
            currencyCode: GBP
        timeSlots:
          - dayOfWeek: monday
            startTime: '18:00:00'
            endTime: '20:00:00'
          - dayOfWeek: wednesday
            startTime: '18:00:00'
            endTime: '20:00:00'
    RestaurantsDeliveryFeesTimeSlotYaml:
      type: object
      properties:
        dayOfWeek:
          description: Day of week for delivery fee override.
          $ref: '#/components/schemas/SharedDayOfWeekYaml'
        startTime:
          description: Start time of the time slot.
          format: time
          type: string
        endTime:
          description: End time of the time slot.
          format: time
          type: string
    RestaurantsDepositTypeYaml:
      description: >-
        The type of deposit price to indicate if it's inclusive or exclusive of
        the base price.
      type: string
      enum:
        - inclusive
        - exclusive
    RestaurantsExternalSearchResponseYaml:
      description: The search response
      properties:
        Restaurants:
          items:
            description: A restaurant
            properties:
              DriveDistance:
                description: The distance to drive
                type: number
              Name:
                description: The name of the restaurant
                type: string
              UniqueName:
                description: A guaranteed to be unique
                type: string
              Id:
                description: The id
                type: number
              Url:
                description: The URL of the restaurant
                type: string
              IsOpenNow:
                description: True if open
                type: boolean
              DeliveryEtaMinutes:
                description: The delivery ETA
                properties:
                  RangeLower:
                    description: The lower bound for the estimate
                    type: number
                  Approximate:
                    description: The estimate
                    type: number
                  RangeUpper:
                    description: The upper bound for the estimate
                    type: number
                type: object
              IsOpenNowForDelivery:
                description: True if open now
                type: boolean
              DriveInfoCalculated:
                description: True if the drive info has been calculated
                type: boolean
              Address:
                description: The address of the restaurant
                properties:
                  Postcode:
                    description: The postcode
                    type: string
                  Latitude:
                    description: The latitude
                    type: number
                  FirstLine:
                    description: First line of the address
                    type: string
                  Longitude:
                    description: The longitude
                    type: number
                  City:
                    description: The city
                    type: string
                type: object
            type: object
          type: array
      type: object
    RestaurantsGeneratePresignedFileUploadUrlRequestYaml:
      description: >-
        Request that contains information about file that will be uploaded to an
        AWS S3 bucket.
      properties:
        fileSizeInBytes:
          description: >-
            The size of file that will be uploaded to the AWS S3 bucket, in
            bytes
          format: int32
          type: number
          maximum: 23068672
          minimum: 1
      example:
        fileSizeInBytes: 5574745
      type: object
    RestaurantsGeneratePresignedFileUploadUrlResponseYaml:
      description: >-
        A presigned URL and metadata which can be used for making a POST upload
        to Just Eat Takeaway's S3 bucket as described in this [official
        documentation](https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-post-example.html)
      properties:
        url:
          description: >-
            Presigned URL for making a POST upload to Just Eat Takeaway's S3
            bucket. The URL will expire after 30 minutes.
          type: string
        fields:
          description: >-
            Metadata fields that must be supplied in the form data of the upload
            request alongside the file to upload
          type: object
          additionalProperties:
            oneOf:
              - type: string
              - type: integer
        menuSchema:
          $ref: '#/components/schemas/RestaurantsMenuYaml'
      type: object
      externalDocs:
        description: >-
          AWS S3 Documentation detailing an example of how to use this data to
          post a file to S3
        url: >-
          https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-post-example.html
      example:
        url: https://s3.eu-west-1.amazonaws.com/menu-ingestion-pending
        fields:
          key: 123456
          bucket: menu-ingestion-pending
          X-Amz-Algorithm: AWS4-HMAC-SHA256
          X-Amz-Credential: ASIA.../20230412/eu-west-1/s3/aws4_request
          X-Amz-Date: 20230412T193102Z
          X-Amz-Security-Token: IQoJb3JpZ2luX2V...
          Policy: eyJleHBpcmF0a...
          X-Amz-Signature: e0a4307389ce3...
        menuSchema (not included in this response):
          description: My excellent menu
          restaurantId: '100059'
          name: My Restaurant
          currency: GBP
          categories:
            - description: ''
              id: 3X
              name: Starters
              itemIds:
                - '65143901'
            - description: ''
              id: '4'
              name: Deals
              itemIds:
                - '23435309'
                - '33445308'
            - description: ''
              id: '5'
              name: Pizzas
              itemIds:
                - '8547130'
                - '8547140'
            - description: ''
              id: '6'
              name: Drinks
              itemIds:
                - '6537130'
                - '6537140'
          items:
            - description: Choose each half.
              id: '23435309'
              type: deal
              name: Half-and-half Pizza
              labels: []
              variations:
                - id: 23435309X
                  name: ''
                  type: noVariation
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                  basePrice: 3099
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                    nutritionTable:
                      - description: Per 100g
                        referenceQuantity:
                          unit: g
                          quantity:
                            value: 100
                        nutritionProperties:
                          - name: protein
                            unit: g
                            quantity:
                              value: 0.1
                              lessThan: true
                          - name: fat
                            unit: g
                            percentRI: 50
                            quantity:
                              value: 15
                              lessThan: false
                  numberOfServings:
                    min: 1
                    max: 1
                  dealGroupsIds:
                    - 23435309-1
                    - 23435309-2
              dealGroups:
                - id: 23435309-1
                  name: Choose your base
                  numberOfChoices: 1
                  dealItemVariations:
                    - dealItemVariationId: '1577341'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                - id: 23435309-2
                  name: Choose your halves
                  numberOfChoices: 2
                  dealItemVariations:
                    - dealItemVariationId: '8547121'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                    - dealItemVariationId: '3547157'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                    - dealItemVariationId: '8548153'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 50
            - description: >-
                Choose a 14 inch Pizza (including half-and-half) and any drink.
                Note: Alcohol is only available for collection.
              id: '33445308'
              type: deal
              name: 14 inch Pizza & A Drink For 1
              labels: []
              variations:
                - id: 33445308X
                  name: ''
                  type: noVariation
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                  basePrice: 3099
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 200
                        unit: kcal
                      - min: 418
                        max: 836
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  dealGroupsIds:
                    - 33445308-1
                    - 33445308-2
              dealGroups:
                - id: 33445308-1
                  name: Choose your pizza
                  numberOfChoices: 1
                  dealItemVariations:
                    - dealItemVariationId: '9750011'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                    - dealItemVariationId: '9750021'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                    - dealItemVariationId: '23435309'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                - id: 33445308-2
                  name: Choose your drink
                  numberOfChoices: 1
                  dealItemVariations:
                    - dealItemVariationId: '6537130'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 13
                    - dealItemVariationId: '6537140'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                    - dealItemVariationId: '7739164'
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
            - description: ''
              id: '65143901'
              type: menuItem
              name: Flat Bread and Dips (Pick any 2 Dips)
              requireOtherProducts: false
              labels: []
              variations:
                - id: 65143901X
                  name: ''
                  type: noVariation
                  basePrice: 650
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  kitchenNumber: '90'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                  modifierGroupsIds:
                    - 65143901-req-1
                    - 65143901-req-2
              modifierGroups:
                - id: 65143901-req-1
                  name: Choose your bread
                  minChoices: 1
                  maxChoices: 1
                  modifiers:
                    - id: '834502'
                      name: Pitta Bread
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                      nutrition:
                        energyContent:
                          - min: 100
                            max: 100
                            unit: kcal
                          - min: 418
                            max: 418
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: '835700'
                      name: Sourdough
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                      nutrition:
                        energyContent:
                          - min: 100
                            max: 100
                            unit: kcal
                          - min: 418
                            max: 418
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: '835601'
                      name: Wholemeal
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 50
                      nutrition:
                        energyContent:
                          - min: 50
                            max: 50
                            unit: kcal
                          - min: 209
                            max: 209
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                - id: 65143901-req-2
                  name: Choose your dips
                  minChoices: 2
                  maxChoices: 2
                  modifiers:
                    - id: '835340'
                      name: Tzatziki
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 0
                      nutrition:
                        energyContent:
                          - min: 10
                            max: 10
                            unit: kcal
                          - min: 42
                            max: 42
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: '835341'
                      name: Taramasalata
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 0
                      nutrition:
                        energyContent:
                          - min: 20
                            max: 20
                            unit: kcal
                          - min: 84
                            max: 84
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: '825344'
                      name: Hummus
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 0
                      nutrition:
                        energyContent:
                          - min: 30
                            max: 30
                            unit: kcal
                          - min: 126
                            max: 126
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: '825346'
                      name: Onion
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 0
                      nutrition:
                        energyContent:
                          - min: 0
                            max: 0
                            unit: kcal
                          - min: 0
                            max: 0
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
            - description: ''
              id: '1577341'
              type: menuItem
              name: Base
              requireOtherProducts: true
              labels: []
              variations:
                - id: 1577341X
                  name: ''
                  type: noVariation
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                  basePrice: 200
                  dealOnly: true
                  modifierGroupsIds:
                    - 1577341-req-1
              modifierGroups:
                - id: 1577341-req-1
                  name: Crust
                  minChoices: 1
                  maxChoices: 1
                  modifiers:
                    - id: '854500'
                      name: Classic Crust
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                      nutrition:
                        energyContent:
                          - min: 0
                            max: 0
                            unit: kcal
                          - min: 0
                            max: 0
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: '854600'
                      name: Stuffed Crust
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 200
                      nutrition:
                        energyContent:
                          - min: 100
                            max: 100
                            unit: kcal
                          - min: 418
                            max: 418
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
            - description: ''
              id: '8547130'
              type: menuItem
              name: Margherita
              requireOtherProducts: true
              labels: []
              variations:
                - id: '8547121'
                  name: Half
                  type: variation
                  basePrice: 500
                  dealOnly: true
                  kitchenNumber: '100'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                  modifierGroupsIds:
                    - 8547130-opt-1
                - id: 8547130X
                  name: 12 inch
                  type: variation
                  basePrice: 1000
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  kitchenNumber: '100'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                  modifierGroupsIds:
                    - 8547130-req-1
                    - 8547130-opt-1
                - id: '8543123'
                  name: 14 inch
                  type: variation
                  basePrice: 1200
                  dealOnly: true
                  kitchenNumber: '200'
                  availabilityIds:
                    - 1-lunch-delivery-weekday
                    - 2-lunch-collection-weekday
                    - 3-dinner-delivery-weekday
                    - 4-dinner-collection-weekday
                  modifierGroupsIds:
                    - 8547130-req-1
                    - 8547130-opt-1
              modifierGroups:
                - id: 8547130-req-1
                  name: Choose your crust
                  minChoices: 1
                  maxChoices: 1
                  modifiers:
                    - id: 854500X
                      name: Classic Crust
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                      nutrition:
                        energyContent:
                          - min: 0
                            max: 0
                            unit: kcal
                          - min: 0
                            max: 0
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: 854600X
                      name: Stuffed Crust
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 200
                      nutrition:
                        energyContent:
                          - min: 100
                            max: 100
                            unit: kcal
                          - min: 418
                            max: 418
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                - id: 8547130-opt-1
                  name: Any extra toppings?
                  minChoices: 0
                  maxChoices: 10
                  modifiers:
                    - id: '1000'
                      name: Mozzarella Cheese
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 50
                    - id: '1001'
                      name: Ham
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 50
                    - id: '1002'
                      name: Red Onion
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 50
                    - id: '1003'
                      name: Pepperoni
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 50
                    - id: '1004'
                      name: Olives
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 50
            - description: ''
              id: '8547140'
              type: menuItem
              name: Double Pepperoni
              requireOtherProducts: false
              labels: []
              variations:
                - id: '8548153'
                  name: Half
                  type: variation
                  basePrice: 500
                  dealOnly: true
                  kitchenNumber: '100'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                  modifierGroupsIds:
                    - 8547140-opt-1
                - id: 8547140X
                  name: 12 inch
                  type: variation
                  basePrice: 1000
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  kitchenNumber: '100'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                  modifierGroupsIds:
                    - 8547140-req-1
                    - 8547140-opt-1
                - id: '9750021'
                  name: 14 inch
                  type: variation
                  basePrice: 1200
                  dealOnly: true
                  kitchenNumber: '200'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                  modifierGroupsIds:
                    - 8547140-req-1
                    - 8547140-opt-1
                - id: '9755052'
                  name: 18 inch
                  type: variation
                  basePrice: 1200
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  kitchenNumber: '200'
                  availabilityIds:
                    - 2-lunch-collection
                    - 4-dinner-collection
                  modifierGroupsIds:
                    - 9755052-req-1
                    - 9755052-opt-1
              modifierGroups:
                - id: 8547140-req-1
                  name: Choose your crust
                  minChoices: 1
                  maxChoices: 1
                  modifiers:
                    - id: 854500X
                      name: Classic Crust
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                      nutrition:
                        energyContent:
                          - min: 0
                            max: 0
                            unit: kcal
                          - min: 0
                            max: 0
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: 854600X
                      name: Stuffed Crust
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 200
                      nutrition:
                        energyContent:
                          - min: 100
                            max: 100
                            unit: kcal
                          - min: 418
                            max: 418
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                - id: 8547140-opt-1
                  name: Any extra toppings?
                  minChoices: 0
                  maxChoices: 10
                  modifiers:
                    - id: 1000X
                      name: Mozzarella Cheese
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 50
                    - id: 1001X
                      name: Ham
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 50
                    - id: 1002X
                      name: Red Onion
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 50
                    - id: 1003X
                      name: Pepperoni
                      minChoices: 2
                      maxChoices: 4
                      additionPrice: 50
                    - id: 1004X
                      name: Olives
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 50
                - id: 9755052-req-1
                  name: Choose your crust
                  minChoices: 1
                  maxChoices: 1
                  modifiers:
                    - id: 854500X
                      name: Classic Crust
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 0
                    - id: 854600X
                      name: Stuffed Crust
                      minChoices: 0
                      maxChoices: 1
                      additionPrice: 250
                - id: 9755052-opt-1
                  name: Any extra toppings?
                  minChoices: 0
                  maxChoices: 10
                  modifiers:
                    - id: 1000X
                      name: Mozzarella Cheese
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 70
                    - id: 1001X
                      name: Ham
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 70
                    - id: 1002X
                      name: Red Onion
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 70
                    - id: 1003X
                      name: Pepperoni
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 70
                    - id: 1004X
                      name: Olives
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 70
            - description: ''
              id: '3547157'
              type: menuItem
              name: Vegetarian
              requireOtherProducts: false
              labels:
                - vegetarian
              variations:
                - id: 3547157X
                  name: ''
                  type: noVariation
                  basePrice: 500
                  dealOnly: true
                  kitchenNumber: '121'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                  modifierGroupsIds:
                    - 8547140-opt-1
              modifierGroups:
                - id: 8547140-opt-1X
                  name: Any extra toppings?
                  minChoices: 0
                  maxChoices: 10
                  modifiers:
                    - id: 1000X
                      name: Mozzarella Cheese
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 50
                      nutrition:
                        energyContent:
                          - min: 100
                            max: 100
                            unit: kcal
                          - min: 418
                            max: 418
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: 1001X
                      name: Ham
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 50
                      nutrition:
                        energyContent:
                          - min: 10
                            max: 10
                            unit: kcal
                          - min: 42
                            max: 42
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: 1002X
                      name: Red Onion
                      minChoices: 1
                      maxChoices: 2
                      additionPrice: 50
                      nutrition:
                        energyContent:
                          - min: 0
                            max: 0
                            unit: kcal
                          - min: 0
                            max: 0
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: 1003X
                      name: Pepperoni
                      minChoices: 0
                      maxChoices: 2
                      additionPrice: 50
                      nutrition:
                        energyContent:
                          - min: 10
                            max: 10
                            unit: kcal
                          - min: 42
                            max: 42
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
                    - id: 1004X
                      name: Olives
                      minChoices: 1
                      maxChoices: 2
                      additionPrice: 50
                      nutrition:
                        energyContent:
                          - min: 10
                            max: 10
                            unit: kcal
                          - min: 42
                            max: 42
                            unit: kJ
                      numberOfServings:
                        min: 1
                        max: 1
            - description: ''
              id: '6537130'
              type: menuItem
              name: Coca-Cola
              requireOtherProducts: true
              labels: []
              variations:
                - id: 6537130X
                  name: 0.33L
                  type: variation
                  basePrice: 100
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  kitchenNumber: '300'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                - id: '9750011'
                  name: 1.5L
                  type: variation
                  basePrice: 300
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  kitchenNumber: '400'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
            - description: ''
              id: '6537140'
              type: menuItem
              name: Diet Coke
              requireOtherProducts: true
              labels: []
              variations:
                - id: 6537140X
                  name: 0.33L
                  type: variation
                  basePrice: 100
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  kitchenNumber: '300'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
                - id: '9750312'
                  name: 1.5L
                  type: variation
                  basePrice: 300
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  kitchenNumber: '400'
                  availabilityIds:
                    - 1-lunch-delivery
                    - 2-lunch-collection
                    - 3-dinner-delivery
                    - 4-dinner-collection
            - description: ''
              id: '7739164'
              type: menuItem
              name: Bottle of Lager
              requireOtherProducts: true
              labels: []
              variations:
                - id: 7739164X
                  name: ''
                  type: noVariation
                  basePrice: 300
                  dealOnly: false
                  nutrition:
                    energyContent:
                      - min: 100
                        max: 100
                        unit: kcal
                      - min: 418
                        max: 418
                        unit: kJ
                  numberOfServings:
                    min: 1
                    max: 1
                  kitchenNumber: '700'
                  availabilityIds:
                    - 2-lunch-collection
                    - 4-dinner-collection
      x-konfig-properties:
        menuSchema:
          description: >-
            For information only (not included in this response) - This is the
            schema the uploaded menu file should conform to
    RestaurantsGrossWeightYaml:
      description: The gross weight of an item.
      required:
        - unit
        - value
      type: object
      properties:
        unit:
          description: Unit of measurement (g or kg) for the weight of the item.
          $ref: '#/components/schemas/RestaurantsWeightUnitTypeYaml'
          nullable: false
        value:
          description: >-
            The gross weight of the item (i.e. the weight including all
            packaging).
          type: number
          format: decimal
          minimum: 0
          nullable: false
    RestaurantsIgnoredRestaurantIdsYaml:
      properties:
        ignoredRestaurantIds:
          description: >-
            A list of restaurant ids that were present in a request but were
            ignored.
          items:
            type: string
          type: array
      type: object
      example:
        ignoredRestaurantIds:
          - '123'
          - '456'
    RestaurantsIngestPreUploadedMenuRequestYaml:
      description: >-
        Request that contains information for the ingestion of a pre-uploaded
        menu
      properties:
        eTag:
          description: >-
            The ETag of the file that is obtained from the response of the [S3
            POST
            upload](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOST.html)
            - can be optionally used to ensure the right file is being ingested.
            The ETag must retain all quotes as returned by AWS after the upload.
          type: string
        mapAvailabilityTimesToServiceTimes:
          description: >-
            Indicate whether the shift times sent in the menu should be used to
            update the partner's opening hours. If this is not included, the
            default behaviour will be to update the partner's opening hours to
            match the times in the uploaded menu.
          type: boolean
      example:
        eTag: '"1b2cf535f27731c974343645a3985328"'
        mapAvailabilityTimesToServiceTimes: false
      type: object
    RestaurantsInternalServerErrorMarketingResponseYaml:
      description: 500 Internal Server Error Returned
      example:
        message: Something has gone wrong, please try again later.
        errors:
          - description: Internal Server Error
            errorCode: '500'
        faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
      x-abstract: true
      properties:
        message:
          description: >-
            Specific details about the error that may assist the you in
            resolving the issue
          type: string
        faultId:
          description: >-
            A value that helps identify this response back to logs, so we can
            easily find this specific fault
          type: string
        errors:
          description: Underlying errors associated with the error
          nullable: true
          items:
            $ref: '#/components/schemas/RestaurantsMarketingErrorYaml'
          type: array
      type: object
    RestaurantsMarketingErrorYaml:
      properties:
        description:
          description: >-
            Specific details about the error that may assist the you in
            resolving the issue
          type: string
        errorCode:
          description: >-
            A value that helps identify this response back to logs, so we can
            easily find this specific fault
          type: string
      type: object
    RestaurantsMarketingErrorResponseYaml:
      x-abstract: true
      properties:
        message:
          description: >-
            Specific details about the error that may assist the you in
            resolving the issue
          type: string
        faultId:
          description: >-
            A value that helps identify this response back to logs, so we can
            easily find this specific fault
          type: string
        errors:
          description: Underlying errors associated with the error
          nullable: true
          items:
            $ref: '#/components/schemas/RestaurantsMarketingErrorYaml'
          type: array
      type: object
    RestaurantsMarketingReportResponseYaml:
      description: The report data and the extraction date
      type: object
      additionalProperties:
        properties:
          reportData:
            description: Report data as JSON object
            nullable: true
          dataExtractionDateUTC:
            description: The UTC datetime that the report data was extracted from BigQuery
            format: date-time
            type: string
        type: object
      example:
        unique-customers:
          reportData: >-
            [{'month':3,'year':2019,'unique_customer_count':630},{'month':4,'year':2019,'unique_customer_count':583}]
          dataExtractionDateUTC: '2019-09-03T13:10:05.000Z'
        orders-per-month:
          reportData: >-
            [{'month':3,'year':2019,'order_count':630},{'month':4,'year':2019,'order_count':583}]
          dataExtractionDateUTC: '2019-09-03T13:10:05.000Z'
        potential-orders-per-month:
          reportData: >-
            [{'month':3,'year':2019,'potential_monthly_order_count':630},{'month':4,'year':2019,'potential_monthly_order_count':583}]
          dataExtractionDateUTC: '2019-09-03T13:10:05.000Z'
    RestaurantsMenuYaml:
      allOf:
        - $ref: '#/components/schemas/RestaurantsMenuBaseYaml'
        - type: object
          required:
            - availabilities
            - categories
            - items
          properties:
            categories:
              description: A set of categories that appear on the menu.
              items:
                $ref: '#/components/schemas/RestaurantsCategoryYaml'
              type: array
              minItems: 1
              nullable: false
            items:
              description: >-
                All of the menu items within the menu. There must be at least
                one item on the menu.
              items:
                description: A menu item within the menu.
                $ref: '#/components/schemas/RestaurantsMenuItemYaml'
              type: array
              minItems: 1
              nullable: false
            availabilities:
              description: >-
                A set of availabilities that can later be referenced by
                individual menu items.
              items:
                $ref: '#/components/schemas/RestaurantsAvailabilityYaml'
              type: array
              minItems: 1
              nullable: false
            baseLanguage:
              description: >-
                The language that the menu has been provided in as a two-letter
                language code as defined by ISO 639-1.
              type: string
              minLength: 2
              maxLength: 2
              nullable: true
      example:
        description: My excellent menu
        restaurantId: '100059'
        name: My Restaurant
        currency: GBP
        baseLanguage: en
        categories:
          - description: ''
            id: 3X
            name: Starters
            itemIds:
              - '65143901'
          - description: ''
            id: 4X
            name: Deals
            itemIds:
              - '23435309'
              - '33445308'
          - description: ''
            id: 5X
            name: Pizzas
            itemIds:
              - '8547130'
              - '8547140'
          - description: ''
            id: 6X
            name: Drinks
            itemIds:
              - '6537130'
              - '6537140'
        items:
          - description: Choose each half.
            id: 23435309X
            type: deal
            name: Half-and-half Pizza
            labels: []
            variations:
              - id: 23435309X
                name: ''
                type: noVariation
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                basePrice: 3099
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                  nutritionTable:
                    - description: Per 100g
                      referenceQuantity:
                        unit: g
                        quantity:
                          value: 100
                      nutritionProperties:
                        - name: protein
                          unit: g
                          quantity:
                            value: 0.1
                            lessThan: true
                        - name: fat
                          unit: g
                          percentRI: 50
                          quantity:
                            value: 15
                            lessThan: false
                numberOfServings:
                  min: 1
                  max: 1
                modifierGroupsIds: []
                dealGroupsIds:
                  - 23435309-1
                  - 23435309-2
            modifierGroups: []
            dealGroups:
              - id: 23435309-1X
                name: Choose your base
                numberOfChoices: 1
                dealItemVariations:
                  - dealItemVariationId: '1577341'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
              - id: 23435309-2X
                name: Choose your halves
                numberOfChoices: 2
                dealItemVariations:
                  - dealItemVariationId: '8547121'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                  - dealItemVariationId: '3547157'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                  - dealItemVariationId: '8548153'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 50
          - description: >-
              Choose a 14 inch Pizza (including half-and-half) and any drink.
              Note: Alcohol is only available for collection.
            id: 33445308X
            type: deal
            name: 14 inch Pizza & A Drink For 1
            labels: []
            variations:
              - id: 33445308X
                name: ''
                type: noVariation
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                basePrice: 3099
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 200
                      unit: kcal
                    - min: 418
                      max: 836
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                modifierGroupsIds: []
                dealGroupsIds:
                  - 33445308-1
                  - 33445308-2
            modifierGroups: []
            dealGroups:
              - id: 33445308-1X
                name: Choose your pizza
                numberOfChoices: 1
                dealItemVariations:
                  - dealItemVariationId: '9750011'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                  - dealItemVariationId: '9750021'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                  - dealItemVariationId: '23435309'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
              - id: 33445308-2X
                name: Choose your drink
                numberOfChoices: 1
                dealItemVariations:
                  - dealItemVariationId: '6537130'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 13
                  - dealItemVariationId: '6537140'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                  - dealItemVariationId: '7739164'
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
          - description: ''
            id: 65143901X
            type: menuItem
            name: Flat Bread and Dips (Pick any 2 Dips)
            requireOtherProducts: false
            labels: []
            variations:
              - id: 65143901X
                name: ''
                type: noVariation
                basePrice: 650
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                kitchenNumber: '90'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds:
                  - 65143901-req-1
                  - 65143901-req-2
                dealGroupsIds: []
            modifierGroups:
              - id: 65143901-req-1X
                name: Choose your bread
                minChoices: 1
                maxChoices: 1
                modifiers:
                  - id: 834502X
                    name: Pitta Bread
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                    nutrition:
                      energyContent:
                        - min: 100
                          max: 100
                          unit: kcal
                        - min: 418
                          max: 418
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 835700X
                    name: Sourdough
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                    nutrition:
                      energyContent:
                        - min: 100
                          max: 100
                          unit: kcal
                        - min: 418
                          max: 418
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 835601X
                    name: Wholemeal
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 50
                    nutrition:
                      energyContent:
                        - min: 50
                          max: 50
                          unit: kcal
                        - min: 209
                          max: 209
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
              - id: 65143901-req-2X
                name: Choose your dips
                minChoices: 2
                maxChoices: 2
                modifiers:
                  - id: 835340X
                    name: Tzatziki
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 0
                    nutrition:
                      energyContent:
                        - min: 10
                          max: 10
                          unit: kcal
                        - min: 42
                          max: 42
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 835341X
                    name: Taramasalata
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 0
                    nutrition:
                      energyContent:
                        - min: 20
                          max: 20
                          unit: kcal
                        - min: 84
                          max: 84
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 825344X
                    name: Hummus
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 0
                    nutrition:
                      energyContent:
                        - min: 30
                          max: 30
                          unit: kcal
                        - min: 126
                          max: 126
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 825346X
                    name: Onion
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 0
                    nutrition:
                      energyContent:
                        - min: 0
                          max: 0
                          unit: kcal
                        - min: 0
                          max: 0
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
            dealGroups: []
          - description: ''
            id: 1577341X
            type: menuItem
            name: Base
            requireOtherProducts: true
            labels: []
            variations:
              - id: 1577341X
                name: ''
                type: noVariation
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                basePrice: 200
                dealOnly: true
                modifierGroupsIds:
                  - 1577341-req-1
                dealGroupsIds: []
            modifierGroups:
              - id: 1577341-req-1X
                name: Crust
                minChoices: 1
                maxChoices: 1
                modifiers:
                  - id: 854500X
                    name: Classic Crust
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                    nutrition:
                      energyContent:
                        - min: 0
                          max: 0
                          unit: kcal
                        - min: 0
                          max: 0
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 854600X
                    name: Stuffed Crust
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 200
                    nutrition:
                      energyContent:
                        - min: 100
                          max: 100
                          unit: kcal
                        - min: 418
                          max: 418
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
            dealGroups: []
          - description: ''
            id: 8547130X
            type: menuItem
            name: Margherita
            requireOtherProducts: true
            labels: []
            variations:
              - id: 8547121X
                name: Half
                type: variation
                basePrice: 500
                dealOnly: true
                kitchenNumber: '100'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds:
                  - 8547130-opt-1
                dealGroupsIds: []
              - id: 8547130X
                name: 12 inch
                type: variation
                basePrice: 1000
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                kitchenNumber: '100'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds:
                  - 8547130-req-1
                  - 8547130-opt-1
                dealGroupsIds: []
              - id: 8543123X
                name: 14 inch
                type: variation
                basePrice: 1200
                dealOnly: true
                kitchenNumber: '200'
                availabilityIds:
                  - 1-lunch-delivery-weekday
                  - 2-lunch-collection-weekday
                  - 3-dinner-delivery-weekday
                  - 4-dinner-collection-weekday
                modifierGroupsIds:
                  - 8547130-req-1
                  - 8547130-opt-1
                dealGroupsIds: []
            modifierGroups:
              - id: 8547130-req-1X
                name: Choose your crust
                minChoices: 1
                maxChoices: 1
                modifiers:
                  - id: 854500X
                    name: Classic Crust
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                    nutrition:
                      energyContent:
                        - min: 0
                          max: 0
                          unit: kcal
                        - min: 0
                          max: 0
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 854600X
                    name: Stuffed Crust
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 200
                    nutrition:
                      energyContent:
                        - min: 100
                          max: 100
                          unit: kcal
                        - min: 418
                          max: 418
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
              - id: 8547130-opt-1X
                name: Any extra toppings?
                minChoices: 0
                maxChoices: 10
                modifiers:
                  - id: 1000X
                    name: Mozzarella Cheese
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 50
                  - id: 1001X
                    name: Ham
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 50
                  - id: 1002X
                    name: Red Onion
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 50
                  - id: 1003X
                    name: Pepperoni
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 50
                  - id: 1004X
                    name: Olives
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 50
            dealGroups: []
          - description: ''
            id: 8547140X
            type: menuItem
            name: Double Pepperoni
            requireOtherProducts: false
            labels: []
            variations:
              - id: 8548153X
                name: Half
                type: variation
                basePrice: 500
                dealOnly: true
                kitchenNumber: '100'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds:
                  - 8547140-opt-1
                dealGroupsIds: []
              - id: 8547140X
                name: 12 inch
                type: variation
                basePrice: 1000
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                kitchenNumber: '100'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds:
                  - 8547140-req-1
                  - 8547140-opt-1
                dealGroupsIds: []
              - id: 9750021X
                name: 14 inch
                type: variation
                basePrice: 1200
                dealOnly: true
                kitchenNumber: '200'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds:
                  - 8547140-req-1
                  - 8547140-opt-1
                dealGroupsIds: []
              - id: 9755052X
                name: 18 inch
                type: variation
                basePrice: 1200
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                kitchenNumber: '200'
                availabilityIds:
                  - 2-lunch-collection
                  - 4-dinner-collection
                modifierGroupsIds:
                  - 9755052-req-1
                  - 9755052-opt-1
                dealGroupsIds: []
            modifierGroups:
              - id: 8547140-req-1X
                name: Choose your crust
                minChoices: 1
                maxChoices: 1
                modifiers:
                  - id: 854500X
                    name: Classic Crust
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                    nutrition:
                      energyContent:
                        - min: 0
                          max: 0
                          unit: kcal
                        - min: 0
                          max: 0
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 854600X
                    name: Stuffed Crust
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 200
                    nutrition:
                      energyContent:
                        - min: 100
                          max: 100
                          unit: kcal
                        - min: 418
                          max: 418
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
              - id: 8547140-opt-1X
                name: Any extra toppings?
                minChoices: 0
                maxChoices: 10
                modifiers:
                  - id: 1000X
                    name: Mozzarella Cheese
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 50
                  - id: 1001X
                    name: Ham
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 50
                  - id: 1002X
                    name: Red Onion
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 50
                  - id: 1003X
                    name: Pepperoni
                    minChoices: 2
                    maxChoices: 4
                    additionPrice: 50
                  - id: 1004X
                    name: Olives
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 50
              - id: 9755052-req-1X
                name: Choose your crust
                minChoices: 1
                maxChoices: 1
                modifiers:
                  - id: 854500X
                    name: Classic Crust
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 0
                  - id: 854600X
                    name: Stuffed Crust
                    minChoices: 0
                    maxChoices: 1
                    additionPrice: 250
              - id: 9755052-opt-1X
                name: Any extra toppings?
                minChoices: 0
                maxChoices: 10
                modifiers:
                  - id: 1000X
                    name: Mozzarella Cheese
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 70
                  - id: 1001X
                    name: Ham
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 70
                  - id: 1002X
                    name: Red Onion
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 70
                  - id: 1003X
                    name: Pepperoni
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 70
                  - id: 1004X
                    name: Olives
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 70
            dealGroups: []
          - description: ''
            id: 3547157X
            type: menuItem
            name: Vegetarian
            requireOtherProducts: false
            labels:
              - vegetarian
            variations:
              - id: 3547157X
                name: ''
                type: noVariation
                basePrice: 500
                dealOnly: true
                kitchenNumber: '121'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds:
                  - 8547140-opt-1
                dealGroupsIds: []
            modifierGroups:
              - id: 8547140-opt-1X
                name: Any extra toppings?
                minChoices: 0
                maxChoices: 10
                modifiers:
                  - id: 1000X
                    name: Mozzarella Cheese
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 50
                    nutrition:
                      energyContent:
                        - min: 100
                          max: 100
                          unit: kcal
                        - min: 418
                          max: 418
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 1001X
                    name: Ham
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 50
                    nutrition:
                      energyContent:
                        - min: 10
                          max: 10
                          unit: kcal
                        - min: 42
                          max: 42
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 1002X
                    name: Red Onion
                    minChoices: 1
                    maxChoices: 2
                    additionPrice: 50
                    nutrition:
                      energyContent:
                        - min: 0
                          max: 0
                          unit: kcal
                        - min: 0
                          max: 0
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 1003X
                    name: Pepperoni
                    minChoices: 0
                    maxChoices: 2
                    additionPrice: 50
                    nutrition:
                      energyContent:
                        - min: 10
                          max: 10
                          unit: kcal
                        - min: 42
                          max: 42
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
                  - id: 1004X
                    name: Olives
                    minChoices: 1
                    maxChoices: 2
                    additionPrice: 50
                    nutrition:
                      energyContent:
                        - min: 10
                          max: 10
                          unit: kcal
                        - min: 42
                          max: 42
                          unit: kJ
                    numberOfServings:
                      min: 1
                      max: 1
            dealGroups: []
          - description: ''
            id: 6537130X
            type: menuItem
            name: Coca-Cola
            requireOtherProducts: true
            labels: []
            variations:
              - id: 6537130X
                name: 0.33L
                type: variation
                basePrice: 100
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                kitchenNumber: '300'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds: []
                dealGroupsIds: []
              - id: 9750011X
                name: 1.5L
                type: variation
                basePrice: 300
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                kitchenNumber: '400'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds: []
                dealGroupsIds: []
            modifierGroups: []
            dealGroups: []
          - description: ''
            id: 6537140X
            type: menuItem
            name: Diet Coke
            requireOtherProducts: true
            labels: []
            variations:
              - id: 6537140X
                name: 0.33L
                type: variation
                basePrice: 100
                pricing:
                  depositAmount: 5
                  unitPrice:
                    price: 30
                    unit:
                      quantity: 100
                      type: ml
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                kitchenNumber: '300'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds: []
                dealGroupsIds: []
              - id: 9750312X
                name: 1.5L
                type: variation
                basePrice: 300
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                kitchenNumber: '400'
                availabilityIds:
                  - 1-lunch-delivery
                  - 2-lunch-collection
                  - 3-dinner-delivery
                  - 4-dinner-collection
                modifierGroupsIds: []
                dealGroupsIds: []
            modifierGroups: []
            dealGroups: []
          - description: ''
            id: 7739164X
            type: menuItem
            name: Bottle of Lager
            requireOtherProducts: true
            labels: []
            variations:
              - id: 7739164X
                name: ''
                type: noVariation
                basePrice: 300
                dealOnly: false
                nutrition:
                  energyContent:
                    - min: 100
                      max: 100
                      unit: kcal
                    - min: 418
                      max: 418
                      unit: kJ
                numberOfServings:
                  min: 1
                  max: 1
                kitchenNumber: '700'
                availabilityIds:
                  - 2-lunch-collection
                  - 4-dinner-collection
                modifierGroupsIds: []
                dealGroupsIds: []
            modifierGroups: []
            dealGroups: []
          - description: ''
            id: '6574488'
            type: menuItem
            name: Paracetamol - 16 500mg tablets
            requireOtherProducts: false
            labels: []
            variations:
              - id: 6574488X
                name: ''
                type: noVariation
                basePrice: 59
                dealOnly: false
                availabilityIds:
                  - 1-lunch-delivery
                  - 3-dinner-delivery
                modifierGroupsIds: []
                dealGroupsIds: []
            modifierGroups: []
            dealGroups: []
            gtin: '012345675214'
    RestaurantsMenuBaseYaml:
      type: object
      required:
        - restaurantId
        - name
      properties:
        description:
          description: A top level description for the menu.
          type: string
          nullable: true
        name:
          description: The name of the restaurant.
          type: string
          minLength: 1
          nullable: false
        currency:
          description: >-
            The currency of the items on the menu in ISO 4217 format, i.e. GBP,
            EUR or AUD
          type: string
          nullable: true
        restaurantId:
          description: A unique identifier at tenant level for a given restaurant.
          type: string
          minLength: 1
          nullable: false
      example:
        description: My excellent menu
        name: My Restaurant
        currency: GBP
        restaurantId: '100059'
    RestaurantsMenuDealGroupYaml:
      allOf:
        - $ref: '#/components/schemas/RestaurantsMenuDealGroupBaseYaml'
        - type: object
          required:
            - id
            - dealItemVariations
            - numberOfChoices
          properties:
            dealItemVariations:
              description: >-
                The ids of the variations that can be selected in order to
                satisfy this deal group. The variations included must exist on
                the menu and the array cannot contain duplicate ids.
              items:
                $ref: '#/components/schemas/RestaurantsDealItemVariationYaml'
              type: array
              minItems: 1
              nullable: false
            name:
              description: The name of the deal group.
              type: string
              nullable: true
            nameTranslations:
              description: Translations of the name of the deal group.
              type: array
              minLength: 1
              items:
                $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
              nullable: true
            numberOfChoices:
              description: >-
                How many deal item variations must be selected to satisfy this
                deal group.
              type: integer
              format: int32
              minimum: 1
              nullable: false
            id:
              description: A unique identifier at menu level for a deal group.
              type: string
              minLength: 1
              nullable: false
      example:
        dealItemVariations:
          - maxChoices: 1
            dealItemVariationId: '8547121'
            minChoices: 0
            additionPrice: 0
          - maxChoices: 1
            dealItemVariationId: '3547157'
            minChoices: 0
            additionPrice: 0
          - maxChoices: 1
            dealItemVariationId: '8548153'
            minChoices: 0
            additionPrice: 50
        name: Choose your pizzas
        numberOfChoices: 2
        id: 23435309-2X
    RestaurantsMenuDealGroupBaseYaml:
      type: object
      properties:
        name:
          description: The name of the deal group.
          type: string
          nullable: true
        numberOfChoices:
          description: >-
            How many deal item variations must be selected to satisfy this deal
            group.
          type: integer
          format: int32
          minimum: 1
          nullable: false
        id:
          description: A unique identifier at menu level for a deal group.
          type: string
          minLength: 1
          nullable: false
      example:
        name: Choose your pizzas
        numberOfChoices: 2
        id: 23435309-2X
    RestaurantsMenuIngestionResponseYaml:
      type: object
      properties:
        correlationId:
          description: An ID for the asynchronous operation to ingest the menu
          type: string
      example:
        correlationId: 64bef5ee-7265-47f8-9aee-28bc74f00b13
    RestaurantsMenuItemYaml:
      allOf:
        - $ref: '#/components/schemas/RestaurantsMenuItemBaseYaml'
        - type: object
          required:
            - variations
          properties:
            imageUrl:
              description: A menu item image URL.
              type: string
              nullable: true
            dealGroups:
              description: A set of deal groups for this menu item.
              items:
                description: A deal group for this menu item.
                $ref: '#/components/schemas/RestaurantsMenuDealGroupYaml'
              type: array
              nullable: true
            modifierGroups:
              description: A set of modifier groups for this menu item.
              items:
                description: A modifier group for this menu item.
                $ref: '#/components/schemas/RestaurantsMenuModifierGroupYaml'
              type: array
              nullable: true
            variations:
              description: A set of variations of this menu item.
              items:
                description: A variation of this menu item.
                $ref: '#/components/schemas/RestaurantsVariationYaml'
              type: array
              minItems: 1
              nullable: false
      example:
        description: ''
        name: Flat Bread and Dips (Pick any 2 Dips)
        imageUrl: http://cdn.images/flat_bread_dips.png
        dealGroups: []
        type: menuItem
        labels: []
        requireOtherProducts: false
        id: 65143901X
        modifierGroups:
          - name: Bread
            maxChoices: 1
            modifiers:
              - name: Pitta Bread
                additionPrice: 0
                maxChoices: 1
                id: 834502X
                minChoices: 0
              - name: Sourdough
                additionPrice: 0
                maxChoices: 1
                id: 835700X
                minChoices: 0
              - name: Wholemeal
                additionPrice: 50
                maxChoices: 1
                id: 835601X
                minChoices: 0
            id: 65143901-req-1X
            minChoices: 1
          - name: Dips
            maxChoices: 2
            modifiers:
              - name: Tzatziki
                additionPrice: 0
                maxChoices: 2
                id: 835340X
                minChoices: 0
              - name: Taramasalata
                additionPrice: 0
                maxChoices: 2
                id: 835341X
                minChoices: 0
              - name: Hummus
                additionPrice: 0
                maxChoices: 2
                id: 825344X
                minChoices: 0
              - name: Onion
                additionPrice: 0
                maxChoices: 2
                id: 825346X
                minChoices: 0
            id: 65143901-req-2X
            minChoices: 2
        variations:
          - name: ''
            dealOnly: false
            kitchenNumber: '90'
            type: noVariation
            modifierGroupsIds:
              - 65143901-req-1
              - 65143901-req-2
            id: 65143901X
            basePrice: 650
            dealGroupsIds: []
            availabilityIds:
              - 1-lunch-delivery
              - 2-lunch-collection
              - 3-dinner-delivery
              - 4-dinner-collection
    RestaurantsMenuItemBaseYaml:
      type: object
      required:
        - id
        - name
        - type
      properties:
        description:
          description: The description of the menu item.
          type: string
          nullable: true
        name:
          description: The name of the menu item.
          type: string
          minLength: 1
          nullable: false
        nameTranslations:
          description: Translations of the name of the menu item.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        type:
          description: Indicates whether this is a regular meal item or a deal item.
          enum:
            - menuItem
            - deal
          type: string
          nullable: false
        descriptionTranslations:
          description: Translations of the description of the menu item.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        labels:
          description: >-
            Used to toggle front end icons for the available labels. Valid
            values are: 'alcohol', 'hot', 'nuts', 'vegan', 'vegetarian'
          type: array
          items:
            type: string
          minItems: 0
          maxItems: 5
          nullable: true
        requireOtherProducts:
          description: >-
            Cannot be selected as a stand alone item, it has to be ordered with
            other items. Typically this will apply to menu items within drinks
            and dessert categories.
          type: boolean
          nullable: true
        id:
          description: A unique identifier at menu level for a menu item.
          type: string
          minLength: 1
          nullable: false
        externalId:
          description: >-
            The partner identifier for an item. For example, this could be a
            price look-up / stock keeping unit code.
          type: string
          minLength: 0
          maxLength: 1000
          nullable: true
      example:
        description: ''
        name: Flat Bread and Dips (Pick any 2 Dips)
        nameTranslations:
          - language: it
            text: Focaccia e salse (scegli 2 salse qualsiasi)
        type: menuItem
        labels: []
        requireOtherProducts: false
        id: 65143901X
    RestaurantsMenuModifierYaml:
      type: object
      required:
        - id
        - name
        - minChoices
        - maxChoices
        - additionPrice
      properties:
        name:
          description: The name of the modifier.
          type: string
          minLength: 1
          nullable: false
        nameTranslations:
          description: Translations of the name of the variation.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        additionPrice:
          description: >-
            Selecting this modifier will increase the base price of the
            variation by this amount in the minor unit of the currency.  If the
            value is negative, the base price will decrease. If this is omitted,
            the addition price will default to 0.
          type: number
          format: int32
          nullable: false
        id:
          description: A unique identifier relative to the menu for a modifier.
          type: string
          minLength: 1
          nullable: false
        externalId:
          description: >-
            The partner identifier for a modifier. For example, this could be a
            price look-up / stock keeping unit code.
          type: string
          maxLength: 1000
          nullable: true
        minChoices:
          description: >-
            The minimum number of times this modifier can be chosen within a
            given modifier group.
          type: integer
          format: int32
          minimum: 0
          nullable: false
        maxChoices:
          description: >-
            The maximum number of times this modifier can be chosen within a
            given modifier group.
          type: integer
          format: int32
          minimum: 1
          nullable: false
        nutrition:
          description: Nutritional information for this modifier.
          $ref: '#/components/schemas/RestaurantsNutritionYaml'
          nullable: true
        numberOfServings:
          description: The number of servings, expressed as a range.
          $ref: '#/components/schemas/RestaurantsNumberOfServingsYaml'
          nullable: true
        pricing:
          description: The pricing information for an item.
          $ref: '#/components/schemas/RestaurantsPricingYaml'
          nullable: true
        additionalInformation:
          description: >-
            This field will be deprecated in the future and is to be used for
            migrating and compatibility with L-TA menus only.
          type: string
          nullable: true
        additionalInformationTranslations:
          description: Translations of the additional information of the modifier.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        physicalProperties:
          type: object
          $ref: '#/components/schemas/RestaurantsPhysicalPropertiesYaml'
          nullable: true
        gtin:
          description: >-
            The GS1 GTIN code to uniquely identify a given product. This may be
            an EAN, APN, ISBN or UPC.
          type: string
          minLength: 8
          maxLength: 14
          nullable: true
      example:
        name: Stuffed Crust
        nameTranslations:
          - language: it
            text: Crosta farcita
        additionPrice: 200
        maxChoices: 1
        id: 854600X
        externalId: '11253'
        minChoices: 0
        nutrition:
          energyContent:
            - min: 100
              max: 200
              unit: kcal
            - min: 418
              max: 836
              unit: kJ
          nutritionTable:
            - description: Per 100g
              referenceQuantity:
                unit: g
                quantity:
                  value: 100
              nutritionProperties:
                - name: protein
                  unit: g
                  quantity:
                    value: 0.1
                    lessThan: true
                - name: fat
                  unit: g
                  percentRI: 50
                  quantity:
                    value: 15
                    lessThan: false
        numberOfServings:
          min: 1
          max: 1
        gtin: '012345678905'
    RestaurantsMenuModifierGroupYaml:
      type: object
      required:
        - id
        - modifiers
        - minChoices
        - maxChoices
      properties:
        name:
          description: A name for the modifier group, usually phrased as a question.
          type: string
          nullable: true
          example: Would you like any extras?
        nameTranslations:
          description: Translations of the name of the modifier group.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        maxChoices:
          description: >-
            The maximum number of modifiers that must be selected to satisfy
            this modifier group.
          type: integer
          format: int32
          minimum: 1
        modifiers:
          description: The modifiers that can be selected to satisfy this modifier group.
          items:
            $ref: '#/components/schemas/RestaurantsMenuModifierYaml'
          type: array
          minItems: 1
          nullable: false
        id:
          description: A unique identifier relative to the menu for a modifier group.
          type: string
          minLength: 1
          nullable: false
        minChoices:
          description: >-
            The minimum number of modifiers that must be selected to satisfy
            this modifier group.
          type: integer
          format: int32
          minimum: 0
          nullable: false
      example:
        name: Choose your crust
        maxChoices: 1
        modifiers:
          - name: Classic Crust
            additionPrice: 0
            maxChoices: 1
            id: 854500X
            minChoices: 0
          - name: Stuffed Crust
            additionPrice: 200
            maxChoices: 1
            id: 854600X
            minChoices: 0
        id: 8547130-req-1X
        minChoices: 1
    RestaurantsMenuTranslationYaml:
      type: object
      required:
        - language
        - text
      properties:
        language:
          description: A two-letter language code as defined by ISO 639-1.
          type: string
          minLength: 2
          maxLength: 2
          nullable: false
        text:
          description: The translation of the field.
          type: string
          minLength: 1
          nullable: false
      example:
        language: it
        text: pane all'aglio
    RestaurantsNetQuantityYaml:
      description: >-
        The net quantity of an item (not including packaging), or the net
        quantity of an individual product within a multi-pack.
      type: object
      additionalProperties: true
      required:
        - unit
        - value
      properties:
        unit:
          description: Unit of measurement for the quantity of the item.
          $ref: '#/components/schemas/RestaurantsUnitPriceUnitTypeYaml'
          nullable: false
        value:
          description: The value of the net quantity
          type: number
          format: decimal
          minimum: 0
          nullable: false
        quantity:
          description: >-
            Optional field indicating the item consists of multiple products
            (e.g. a multi-pack of soft drinks). If this is set, the value should
            relate to an individual product within the multi-pack (e.g. 330ml
            for a can of soft drink).
          type: integer
          minimum: 0
          nullable: true
      example:
        unit: ml
        value: 330
        quantity: 6
    RestaurantsNetVolumeYaml:
      description: >-
        The net volume of an item (not including packaging), or the net volume
        of an individual product within a multi-pack.
      type: object
      additionalProperties: true
      required:
        - unit
        - value
      properties:
        unit:
          description: Unit of measurement for the volume of the item.
          $ref: '#/components/schemas/RestaurantsVolumeUnitTypeYaml'
          nullable: false
          example: ml
        value:
          description: The value of the net volume
          type: number
          format: decimal
          minimum: 0
          nullable: false
          example: 330
        quantity:
          description: >-
            Optional field indicating the item consists of multiple products
            (e.g. a multi-pack of soft drinks). If this is set, the value should
            relate to an individual product within the multi-pack (e.g. 330ml
            for a can of soft drink).
          type: integer
          minimum: 0
          nullable: true
          example: 6
      example:
        unit: ml
        value: 330
        quantity: 6
    RestaurantsNetWeightYaml:
      description: >-
        The net weight of an item (not including packaging), or the net weight
        of an individual product within a multi-pack.
      type: object
      additionalProperties: true
      required:
        - unit
        - value
      properties:
        unit:
          description: Unit of measurement for the weight of the item.
          $ref: '#/components/schemas/RestaurantsWeightUnitTypeYaml'
          nullable: false
          example: g
        value:
          description: The value of the net weight
          type: number
          format: decimal
          minimum: 0
          nullable: false
          example: 100
        quantity:
          description: >-
            Optional field indicating the item consists of multiple products
            (e.g. a multi-pack of chocolate). If this is set, the value should
            relate to an individual product within the multi-pack (e.g. 35g for
            a chocolate bar).
          type: integer
          minimum: 0
          nullable: true
          example: 6
      example:
        unit: g
        value: 100
        quantity: 6
    RestaurantsNotFoundMarketingResponseYaml:
      description: 404 Not Found Returned
      example:
        message: The requested resource could not found.
        errors:
          - description: Campaign Not found
            errorCode: '404'
        faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
      x-abstract: true
      properties:
        message:
          description: >-
            Specific details about the error that may assist the you in
            resolving the issue
          type: string
        faultId:
          description: >-
            A value that helps identify this response back to logs, so we can
            easily find this specific fault
          type: string
        errors:
          description: Underlying errors associated with the error
          nullable: true
          items:
            $ref: '#/components/schemas/RestaurantsMarketingErrorYaml'
          type: array
      type: object
    RestaurantsNumberOfServingsYaml:
      description: The number of servings, expressed as a range.
      type: object
      required:
        - min
        - max
      properties:
        min:
          description: The minimum number of servings.
          type: number
          format: int32
          minimum: 0
          nullable: false
        max:
          description: The maximum number of servings.
          type: number
          format: int32
          minimum: 0
          nullable: false
      example:
        min: 1
        max: 1
    RestaurantsNutritionYaml:
      description: Nutritional information for this item.
      type: object
      properties:
        energyContent:
          description: Energy information for this item.
          items:
            $ref: '#/components/schemas/RestaurantsNutritionalRangeItemYaml'
          type: array
          minItems: 1
          nullable: true
        alcoholByVolume:
          description: >-
            The alcohol by volume of this item, represented as a percentage
            value.
          type: number
          format: decimal
          minimum: 0
          maximum: 100
          nullable: true
        caffeine:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RestaurantsCaffeineInformationYaml'
          nullable: true
        nutritionTable:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RestaurantsNutritionTableItemYaml'
          nullable: true
        allergens:
          description: >-
            Describes the allergens for a variation/modifier. If there are no
            allergens, the 'allergenSet' will be an empty array. If allergens
            are unknown, this field will not be included.
          type: object
          additionalProperties: true
          properties:
            dataSource:
              description: The provider of the predicted or validated set of allergens.
              type: string
              $ref: '#/components/schemas/RestaurantsNutritionalDataSourceYaml'
            validated:
              description: >-
                Specifies whether the set of allergens provided has been
                validated as accurate.
              type: boolean
            allergenSet:
              description: >-
                The set of allergens provided for this variation/modifier. If
                this is an empty array, this indicates that the
                variation/modifier does not contain any allergens.
              type: array
              items:
                $ref: '#/components/schemas/RestaurantsAllergenYaml'
            containsNoAllergens:
              description: >-
                Additional safety check - this property will be set to true if
                the allergen set is empty.
              type: boolean
          required:
            - dataSource
            - validated
            - allergenSet
          nullable: true
        additives:
          description: >-
            Describes the additives for a variation/modifier. If there are no
            additives, the 'additiveSet' should be an empty array. If additives
            are unknown, this field should not be included.
          type: object
          additionalProperties: true
          required:
            - dataSource
            - validated
            - additiveSet
          properties:
            dataSource:
              description: The provider of the predicted or confirmed set of additives.
              type: string
              $ref: '#/components/schemas/RestaurantsNutritionalDataSourceYaml'
            validated:
              description: >-
                Specifies whether the set of additives provided has been
                confirmed as accurate.
              type: boolean
            additiveSet:
              description: >-
                The set of additives provided for this variation/modifier. If
                this is an empty array, this indicates that the
                variation/modifier does not contain any additives.
              type: array
              items:
                $ref: '#/components/schemas/RestaurantsAdditiveYaml'
              nullable: true
            containsNoAdditives:
              description: >-
                Additional safety check - this property will be set to true if
                the additive set is empty.
              type: boolean
              nullable: true
      example:
        energyContent:
          - min: 100
            max: 100
            unit: kcal
          - min: 100
            max: 100
            unit: kJ
    RestaurantsNutritionPropertyYaml:
      description: Represents a nutrition component
      additionalProperties: true
      required:
        - name
        - unit
        - quantity
      properties:
        name:
          description: >-
            The nutrition component being referenced. Currently supported
            nutrition components: 'addedSugar', 'calcium', 'carbohydrates',
            'cholesterol', 'energyKcal', 'energyKj', 'fat', 'fibre', 'iron',
            'potassium', 'protein', 'salt', 'saturatedFat', 'sodium', 'sugar',
            'transFat', 'vitaminD'
          type: string
          nullable: false
        unit:
          description: The unit used to represented the nutrition quantity.
          $ref: '#/components/schemas/RestaurantsQuantityUnitYaml'
          nullable: false
        quantity:
          description: The quantity of the nutrient.
          $ref: '#/components/schemas/RestaurantsQuantityValueYaml'
          nullable: false
        percentRI:
          description: >-
            The percentage of the daily reference intake (RI) of an average
            adult.
          type: number
          format: decimal
          minimum: 0
          nullable: true
    RestaurantsNutritionTableItemYaml:
      description: Represents the nutrition table information for a specific serving.
      type: object
      additionalProperties: true
      required:
        - description
        - nutritionProperties
      properties:
        description:
          description: Label for the nutrition table item.
          type: string
          nullable: false
        referenceQuantity:
          description: The quantity the nutrition table item applies to.
          $ref: '#/components/schemas/RestaurantsReferenceQuantityYaml'
          nullable: true
        nutritionProperties:
          description: The nutrition information for the reference quantity.
          items:
            $ref: '#/components/schemas/RestaurantsNutritionPropertyYaml'
          type: array
          minItems: 1
          nullable: false
      example:
        description: Quantity Per 100g
        referenceQuantity:
          unit: g
          quantity:
            value: 100
            lessThan: false
        nutritionProperties:
          - name: fat
            unit: g
            quantity:
              value: 15
              lessThan: false
            percentRI: 50
          - name: protein
            unit: g
            quantity:
              value: 0.1
              lessThan: true
    RestaurantsNutritionalDataSourceYaml:
      description: The data source for a set of allergens or additives
      type: string
      enum:
        - databank
        - partner
        - prediction
    RestaurantsNutritionalRangeItemYaml:
      type: object
      required:
        - min
        - max
        - unit
      properties:
        min:
          description: The minimum energy content.
          type: number
          format: int32
          nullable: false
        max:
          description: The maximum energy content.
          type: number
          format: int32
          nullable: false
        unit:
          description: The unit of measure.
          enum:
            - kcal
            - kJ
          type: string
          nullable: false
      example:
        min: 100
        max: 100
        unit: kcal
    RestaurantsOrderTimeOverrideYaml:
      description: The object representing order time override entry
      properties:
        lowerBoundMinutes:
          description: Order time lower bound value, in minutes.
          format: int32
          type: integer
        upperBoundMinutes:
          description: Order time upper bound value, in minutes.
          format: int32
          type: integer
        startTime:
          description: start time of the override.
          format: time
          type: string
        endTime:
          description: end time of the override.
          format: time
          type: string
      example:
        lowerBoundMinutes: 44
        upperBoundMinutes: 59
        startTime: '18:00:00'
        endTime: '20:00:00'
      type: object
    RestaurantsPhysicalPropertiesYaml:
      description: The physical properties of an item.
      type: object
      additionalProperties: true
      properties:
        grossWeight:
          description: The gross weight information of an item.
          $ref: '#/components/schemas/RestaurantsGrossWeightYaml'
          nullable: true
        netWeight:
          description: >-
            The net weight information of an item. (This property is deprecated
            and replaced with netQuantity)
          $ref: '#/components/schemas/RestaurantsNetWeightYaml'
          nullable: true
          deprecated: true
        netVolume:
          description: >-
            The net volume information of an item. (This property is deprecated
            and replaced with netQuantity)
          $ref: '#/components/schemas/RestaurantsNetVolumeYaml'
          nullable: true
          deprecated: true
        netQuantity:
          description: >-
            The net quantity information of an item. (Replaces and consolidates
            netWeight and netVolume)
          $ref: '#/components/schemas/RestaurantsNetQuantityYaml'
          nullable: true
          example:
            summary: >-
              Represents a product with a net quantity of 330ml per item in a
              multipack of 6 items, e.g. 6 pack of coca-cola
            unit: ml
            value: 330
            quantity: 6
    RestaurantsPricingYaml:
      description: The pricing information of an item.
      type: object
      properties:
        depositAmount:
          description: >-
            The amount that can be received by a customer for depositing the
            item's packaging. This should be specified using minor units
            (pence/cents) of the currency.
          format: int32
          type: number
          minimum: 0
          nullable: true
        depositType:
          $ref: '#/components/schemas/RestaurantsDepositTypeYaml'
          nullable: true
        unitPrice:
          $ref: '#/components/schemas/RestaurantsUnitPriceYaml'
          nullable: true
    RestaurantsQuantityUnitYaml:
      description: Unit representing a quantity
      type: string
      enum:
        - g
        - kcal
        - kg
        - kJ
        - l
        - mg
        - ml
        - mmoles
    RestaurantsQuantityValueYaml:
      description: Represents the quantity of nutritional content.
      type: object
      additionalProperties: true
      required:
        - value
      properties:
        value:
          description: The value representing the quantity of the nutrient
          type: number
          format: decimal
          minimum: 0
          nullable: false
        lessThan:
          description: >-
            Indicates that the quantity is less than the specified value, e.g.
            <0.5g of fibre.
          type: boolean
          nullable: true
    RestaurantsReferenceQuantityYaml:
      description: Represents a reference quantity
      additionalProperties: true
      required:
        - unit
        - quantity
      properties:
        unit:
          description: The unit used to represented the reference quantity.
          $ref: '#/components/schemas/RestaurantsQuantityUnitYaml'
        quantity:
          description: The value of the reference quantity.
          $ref: '#/components/schemas/RestaurantsQuantityValueYaml'
    RestaurantsRestaurantBankDetailsYaml:
      oneOf:
        - title: Sort Code & Account Number
          description: >-
            Information on the bank account of which we use to pay the
            restaurant, provided as a sort code and account number.
          type: object
          required:
            - sortCode
            - accountNumber
          properties:
            bankName:
              description: The name of the bank.
              type: string
              minLength: 2
              maxLength: 100
              nullable: true
            accountHolderName:
              description: The name of the bank account holder.
              type: string
              maxLength: 255
              nullable: true
            sortCode:
              description: The sort code.
              type: string
              minLength: 6
              maxLength: 6
            accountNumber:
              description: The bank account number.
              type: string
              minLength: 10
              maxLength: 12
        - title: IBAN
          description: >-
            Information on the bank account of which we use to pay the
            restaurant, provided as an IBAN.
          type: object
          required:
            - iban
          properties:
            bankName:
              description: The name of the bank.
              type: string
              minLength: 2
              maxLength: 100
              nullable: true
            accountHolderName:
              description: The name of the bank account holder.
              type: string
              maxLength: 255
              nullable: true
            iban:
              description: The international bank account number.
              type: string
              maxLength: 34
      example:
        bankName: Best Bank
        accountHolderName: John Doe
        sortCode: '123456'
        accountNumber: '12345678'
    RestaurantsRestaurantCreationYaml:
      allOf:
        - $ref: '#/components/schemas/RestaurantsRestaurantCreationDataYaml'
        - type: object
          properties:
            isTestRestaurant:
              description: >-
                Indicates whether the restaurant will be a test restaurant or
                not, this cannot be changed after the fact.
              type: boolean
              default: false
              nullable: false
            masterTicketId:
              description: >-
                The master ticket number for this restaurant. This is required
                in the UK only and not required for test restaurants.
              type: string
              nullable: true
            signUpReference:
              description: The reference ID for the restaurant's sign up process.
              type: string
              nullable: true
      example:
        description: This is a restaurant created for testing purposes only.
        name: Test Restaurant
        location:
          type: Feature
          properties:
            validated: true
            address:
              - 127 High Street
              - Chelmsford
              - CM1 4QQ
        phoneNumber: '+44791231234'
        cuisines:
          - Greek
          - European
        masterTicketId: '12345'
        owner:
          name: John Doe
          phoneNumber: '+44791231234'
        companyNumber: null
        email: test@justeattakeaway.com
        signUpFee:
          value: 130000
          currency: GBP
        commissionRate: 0.13
        bankDetails:
          bankName: Best Bank
          accountHolderName: John Doe
          sortCode: 12-34-56
          accountNumber: '12345678'
        externalFoodHygieneId: '12345'
        signUpReference: '123456789'
        isResponsibleForOwnDelivery: true
        isTestRestaurant: false
    RestaurantsRestaurantCreationDataYaml:
      description: The data to start creating a restaurant on the platform.
      type: object
      required:
        - name
        - location
        - phoneNumber
        - owner
        - commissionRate
      properties:
        name:
          description: The restaurant name.
          type: string
          minLength: 2
          maxLength: 50
          nullable: false
        location:
          description: The restaurant location.
          type: object
          nullable: false
          required:
            - properties
          properties:
            type:
              description: The GeoJSON type representing the restaurant location.
              type: string
              default: Feature
              nullable: false
            properties:
              description: The restaurant location properties.
              type: object
              nullable: false
              required:
                - validated
                - address
              properties:
                address:
                  description: >-
                    The restaurant address. Should be the restaurants address
                    lines, followed by the city and then the postal code.
                  items:
                    type: string
                  minItems: 3
                  maxItems: 5
                  type: array
                  nullable: false
                validated:
                  description: >-
                    Provides information on whether the address given has been
                    manually validated.
                  type: boolean
                  nullable: false
        phoneNumber:
          description: The restaurant's public phone number in E.164 format.
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          nullable: false
        cuisines:
          description: The restaurant's primary and secondary cuisine.
          type: array
          minItems: 1
          maxItems: 2
          items:
            type: string
          nullable: false
        owner:
          description: The restaurant owner.
          type: object
          nullable: false
          required:
            - name
            - phoneNumber
          properties:
            name:
              description: The full name of the restaurant owner.
              type: string
              minLength: 2
              maxLength: 50
              nullable: false
            phoneNumber:
              description: The phone/mobile number of the restaurant owner in E.164 format.
              type: string
              pattern: ^\+[1-9]\d{1,14}$
              nullable: false
        email:
          description: >-
            The restaurant's private email address for business correspondence
            between us and the restaurant.
          type: string
          format: email
          nullable: true
        companyNumber:
          description: >-
            The company number for the restaurant. In some markets this is also
            known as the VAT number.
          type: string
          maxLength: 50
          nullable: true
        signUpFee:
          description: The sign up fee paid by the the restaurant to get on the platform.
          type: object
          nullable: true
          properties:
            value:
              description: >-
                The sign up fee in the lowest unit of the relevant local
                currency.
              type: integer
              minimum: 0
              nullable: false
            currency:
              description: The ISO 4217 code for the currency provided.
              type: string
              pattern: ^[A-Z]{3}$
              nullable: false
          required:
            - value
            - currency
        bankDetails:
          $ref: '#/components/schemas/RestaurantsRestaurantBankDetailsYaml'
        commissionRate:
          description: The commission rate to charge for each order from this restaurant.
          type: number
          format: double
          minimum: 0
          maximum: 1
          nullable: false
        externalFoodHygieneId:
          description: >-
            The external food hygiene ID, if the market has such an
            organisation.
          type: string
          nullable: true
        isResponsibleForOwnDelivery:
          description: >-
            Indicates whether the restaurant will be responsible for handling
            the delivery of an order.
          type: boolean
          default: false
          nullable: false
        allergenUrl:
          description: URL that provides the allergen information for the restaurant
          type: string
          nullable: true
        allergenPhoneNumber:
          description: The phone number responsible for handling allergen queries
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          nullable: true
        isHalal:
          description: Indicates whether or not the restaurant is halal
          type: boolean
          default: false
          nullable: false
        cashPaymentOnly:
          description: >-
            Does the restaurant accept only cash payment? It can only be true on
            Cash Payment Only / Card Payment Only
          type: boolean
          default: false
          nullable: false
        cardPaymentOnly:
          description: >-
            Does the restaurant accept only card payments? It can only be true
            on Cash Payment Only / Card Payment Only
          type: boolean
          default: false
          nullable: false
        storefrontType:
          description: What type of store is this location
          type: string
          nullable: false
          enum:
            - restaurant
            - grocery
    RestaurantsRestaurantCreationProcessYaml:
      allOf:
        - $ref: '#/components/schemas/RestaurantsRestaurantCreationStatusYaml'
        - type: object
          properties:
            restaurantId:
              description: >-
                The restaurant ID of the restaurant that was created as a result
                of the given creation request. This will only be present if the
                status has at least reached `onboarding`.
              type: string
      example:
        status: onboarding
        errors:
          - description: Could not automatically geocode provided address.
            errorCode: AddressGeocodingFailed
            isBlockingProcess: false
        criteria:
          - description: Restaurant's setup tickets must be completed.
            type: creationTicketsCompleted
            passed: true
          - description: Restaurant must have its delivery partner correctly configured.
            type: deliveryPartnerCorrectlyConfigured
            passed: false
          - description: Restaurant must not have any pending updates or errors.
            type: restaurantUpdatesCompleted
            passed: false
        restaurantId: '1234'
    RestaurantsRestaurantCreationProcessUpdateYaml:
      type: object
      properties:
        restaurant:
          $ref: '#/components/schemas/RestaurantsRestaurantCreationDataYaml'
    RestaurantsRestaurantCreationStatusYaml:
      description: The creation status of a given restaurant.
      type: object
      properties:
        status:
          description: Status of given restaurant creation process.
          type: string
          enum:
            - creating
            - onboarding
            - ready
            - activated
        errors:
          description: >-
            The list of errors that occurred during the creation request. Not
            all errors necessarily require attention.
          type: array
          items:
            type: object
            properties:
              description:
                description: >-
                  Specific details about the error that may assist you in
                  resolving the issue.
                type: string
              errorCode:
                description: >-
                  A code that identifies the error type. It will be supported by
                  human-readable documentation that identifies how to resolve
                  the error.
                type: string
              isBlockingProcess:
                description: >-
                  Indicates that the error is stopping the creation process from
                  progressing.
                type: boolean
        criteria:
          description: >-
            The criteria required for the restaurant to pass before it can be
            activated.
          type: array
          items:
            type: object
            properties:
              description:
                description: >-
                  A human readable description of the criteria. This will not be
                  localized and should only be utilized if your client does not
                  yet support the criteria `type`.
                type: string
              type:
                description: A code indicating the criteria type.
                type: string
                enum:
                  - commissionRateApproved
                  - creationTicketsCompleted
                  - deliveryPartnerCorrectlyConfigured
                  - restaurantUpdatesCompleted
                  - logoUploaded
                  - menuPublished
              passed:
                description: >-
                  Indicates whether the restaurant being created has passed the
                  criteria or not.
                type: boolean
      example:
        status: ready
        errors: []
        criteria:
          - description: Restaurant's commission rate must be approved.
            type: commissionRateApproved
            passed: true
          - description: Restaurant must have its delivery partner correctly configured.
            type: deliveryPartnerCorrectlyConfigured
            passed: true
          - description: Restaurant's setup tickets must be completed.
            type: creationTicketsCompleted
            passed: true
          - description: Restaurant must not have any pending updates or errors.
            type: restaurantUpdatesCompleted
            passed: true
    RestaurantsRestaurantEtAsYaml:
      items:
        properties:
          etaAtRestaurant:
            description: Your best estimation in minutes
            format: int32
            type: number
          restaurantId:
            description: The unique identifier of the restaurant.
            type: string
        type: object
        example:
          etaAtRestaurant: 1
          restaurantId: '1'
      type: array
    RestaurantsSearchResponseYaml:
      properties:
        area:
          description: The area
          type: string
        promotedPlacement:
          description: Information related to promoted placement restaurants.
          properties:
            filteredSearchPromotedLimit:
              description: How many restaurants to promote when search is filtered
              type: number
            restaurants:
              description: Dictionary of `restaurantIds` to promoted placement info.
              type: object
              additionalProperties:
                $ref: >-
                  #/components/schemas/PromotedPlacementRestaurantPromotedPlacementInfoYaml
            rankedIds:
              description: Restaurants that can be promoted, in preferred order
              items:
                type: number
              type: array
          type: object
        deliveryFees:
          description: Information related to delivery fees.
          properties:
            restaurants:
              description: Dictionary of `restaurantIds` to delivery fees.
              type: object
              additionalProperties:
                $ref: '#/components/schemas/DeliveryfeesRestaurantDeliveryFeesYaml'
          type: object
        CuisineSets:
          items:
            properties:
              Id:
                description: The id
                type: string
              Name:
                description: The name
                type: string
              Cuisines:
                items:
                  properties:
                    SeoName:
                      description: The SEO name
                      type: string
                    Name:
                      description: The name
                      type: string
                  type: object
                type: array
              Type:
                description: The type
                type: string
            type: object
          type: array
        Views:
          items:
            properties:
              Components:
                description: The components of the view
                properties:
                  TemplateName:
                    description: The name of the template
                    type: string
                  Type:
                    description: The type
                    type: string
                  ViewData:
                    description: The view data
                    type: object
                  TrackingId:
                    description: The tracking Id
                    type: string
                  Id:
                    description: The id
                    type: string
                type: object
              Target:
                description: The target
                type: string
            type: object
          type: array
        Restaurants:
          items:
            $ref: '#/components/schemas/RestaurantsSearchRestaurantYaml'
          type: array
        ShortResultText:
          description: The short result
          type: string
        MetaData:
          description: Additional data about the results
          properties:
            Area:
              description: Text representation of the  area
              type: string
            CuisineDetails:
              items:
                properties:
                  SeoName:
                    description: The SEO name
                    type: string
                  Total:
                    description: The total
                    type: number
                  Name:
                    description: The name of the cuisine
                    type: string
                type: object
              type: array
            Postcode:
              description: The postcode
              type: string
            ResultCount:
              description: The number of results
              type: number
            District:
              description: The district
              type: string
            CanonicalName:
              description: The canonical name
              type: string
            TagDetails:
              items:
                properties:
                  Priority:
                    description: The priority of the tag
                    type: number
                  Colour:
                    description: The colour to represent the tag in Hex
                    type: string
                  Key:
                    description: The key
                    type: string
                  DisplayName:
                    description: The display name of the tag
                    type: string
                  BackgroundColour:
                    description: The background colour for the tag in Hex
                    type: string
                type: object
              type: array
            SearchedTerms:
              description: The terms used for the search
              nullable: true
              type: object
            Longitude:
              description: The longitude of the search location
              type: number
            Latitude:
              description: The latitude of the search location
              type: number
          type: object
        RestaurantSets:
          items:
            properties:
              Restaurants:
                items:
                  properties:
                    Metadata:
                      items:
                        properties:
                          Key:
                            description: The key
                            type: string
                          Value:
                            description: The value
                            type: string
                        type: object
                      type: array
                    Id:
                      description: The id
                      type: number
                  type: object
                type: array
              Id:
                description: The id
                type: string
              Name:
                description: The name
                type: string
              Type:
                description: The type
                type: string
            type: object
          type: array
        Dishes:
          items:
            properties:
              Similar:
                items:
                  properties:
                    ProductId:
                      description: The id of the product
                      type: number
                    Price:
                      description: The price of the product
                      type: number
                    FullName:
                      description: The full name of the product
                      type: string
                  type: object
                type: array
              Best:
                items:
                  properties:
                    ProductId:
                      description: >-
                        Deprecated field no longer populated, but retained for
                        backwards compatibility with clients
                      type: number
                    Price:
                      description: The price of the product
                      type: number
                    StrProductId:
                      description: The id of the product
                      type: string
                    FullName:
                      description: The full name of the product
                      type: string
                  type: object
                type: array
              RestaurantId:
                description: The restaurant ID
                type: number
            type: object
          type: array
      type: object
      example:
        Area: Fleet Street
        MetaData:
          CanonicalName: ec4-fleetstreet
          District: EC4
          Postcode: EC4
          Area: Fleet Street
          Latitude: 0
          Longitude: 0
          CuisineDetails:
            - Name: Danish
              SeoName: danish
              Total: 171
          ResultCount: 1
          SearchedTerms: null
          TagDetails:
            - BackgroundColour: '#E6F6C5'
              Colour: '#04822C'
              DisplayName: Tried and Tasted
              Key: tried-and-tasted
              Priority: 300
        Restaurants:
          - Id: 102215
            Name: TEST_DP_1
            UniqueName: test_dp-london-london
            Address:
              City: London
              FirstLine: London
              Postcode: EC4M 7RF
              Latitude: 51.516454
              Longitude: -0.103137
            City: London
            Postcode: EC4M 7RF
            Latitude: 0
            Longitude: 0
            Rating:
              Count: 0
              Average: 0
              StarRating: 0
            RatingStars: 0
            NumberOfRatings: 0
            RatingAverage: 0
            Description: ''
            Url: https://www.just-eat.co.uk/restaurants-test_dp-london-london
            LogoUrl: >-
              http://d30v2pzvrfyzpo.cloudfront.net/uk/images/restaurants/102215.gif
            BannerUrl: >-
              https://res.cloudinary.com/tkwy-prod-eu/image/upload/{transformations}/v1676933415/static-takeaway-com/images/generic/heroes/541/541_burger_158
            IsTestRestaurant: false
            IsHalal: false
            IsNew: false
            ReasonWhyTemporarilyOffline: ''
            DriveDistance: 0
            DriveInfoCalculated: true
            IsCloseBy: true
            OfferPercent: 0
            NewnessDate: '2017-05-02T14:30:21'
            OpeningTime: '2019-11-19T01:00:00Z'
            OpeningTimeUtc: null
            OpeningTimeIso: '2019-11-19T01:00:00'
            OpeningTimeLocal: '2019-11-19T01:00:00'
            DeliveryOpeningTimeLocal: '2019-11-18T01:00:00'
            DeliveryOpeningTime: '2019-11-18T01:00:00Z'
            DeliveryOpeningTimeUtc: null
            DeliveryStartTime: '2019-11-18T01:00:00Z'
            DeliveryTime: null
            DeliveryTimeMinutes: null
            DeliveryWorkingTimeMinutes: 10
            DeliveryEtaMinutes:
              Approximate: null
              RangeLower: 10
              RangeUpper: 25
            IsCollection: false
            IsDelivery: true
            IsFreeDelivery: false
            IsOpenNowForCollection: false
            IsOpenNowForDelivery: true
            IsOpenNowForPreorder: false
            IsOpenNow: true
            IsTemporarilyOffline: false
            DeliveryMenuId: 224651
            CollectionMenuId: null
            DeliveryZipcode: null
            DeliveryCost: 0.12
            MinimumDeliveryValue: 0
            SecondDateRanking: 0
            DefaultDisplayRank: 0
            SponsoredPosition: 0
            SecondDateRank: 0
            Score: 502
            IsTemporaryBoost: false
            IsSponsored: false
            IsPremier: false
            HygieneRating: null
            ShowSmiley: false
            SmileyDate: null
            SmileyElite: false
            SmileyResult: null
            SmileyUrl: null
            SendsOnItsWayNotifications: false
            BrandName: ''
            IsBrand: false
            LastUpdated: '2019-09-10T10:55:58.199397'
            Deals:
              - Description: 20% off when you spend £20
                DiscountPercent: 20
                QualifyingPrice: 20
                OfferType: Percent
            Offers:
              - Amount: 20
                QualifyingValue: 20
                MaxQualifyingValue: 50
                Type: Percent
                OfferId: '136149'
            Logo:
              - StandardResolutionURL: >-
                  http://d30v2pzvrfyzpo.cloudfront.net/uk/images/restaurants/102215.gif
            Tags: []
            DeliveryChargeBands: []
            CuisineTypes:
              - Id: 2
                IsTopCuisine: false
                Name: English
                SeoName: english
            Cuisines:
              - Name: English
                SeoName: english
            ScoreMetaData:
              - Key: Distance
                Value: '0'
              - Key: SetName
                Value: Default
            Badges: []
            OpeningTimes: []
            ServiceableAreas: []
        RestaurantSets: []
        CuisineSets:
          - Id: user_and_local_cuisines
            Name: ''
            Type: area_cuisines
            Cuisines:
              - Name: Pizza
                SeoName: pizza
        Views: []
        Dishes: []
        ShortResultText: EC4
        deliveryFees:
          restaurants:
            '102215':
              restaurantId: '102215'
              minimumOrderValue: 0
              bands:
                - minimumAmount: 0
                  fee: 100
        promotedPlacement:
          filteredSearchPromotedLimit: 5
          restaurants:
            '84335':
              restaurantId: '84335'
              defaultPromoted: true
          rankedIds:
            - 84335
    RestaurantsSearchRestaurantYaml:
      description: Represents a restaurant in the search result
      properties:
        OpeningTimes:
          items:
            type: object
          type: array
        IsCollection:
          description: True if the restaurant offers collection
          type: boolean
        NumberOfRatings:
          description: The number of reviews that have been left.
          type: number
        SponsoredPosition:
          description: The position in the sponsored results section.
          type: number
        DeliveryOpeningTimeUtc:
          description: The time when the restaurant opens for delivery.
          nullable: true
          format: date-time
          type: string
        HygieneRating:
          description: The hygiene rating of the restaurant
          nullable: true
          type: number
        RatingAverage:
          description: The Mean rating
          type: number
        Offers:
          items:
            additionalProperties: true
            type: object
          type: array
        DeliveryOpeningTime:
          description: The time when the restaurant opens for delivery.
          format: date-time
          type: string
        IsSponsored:
          description: Is the result sponsored
          type: boolean
        CuisineTypes:
          items:
            properties:
              IsTopCuisine:
                description: true if is top cuisine
                type: boolean
              Id:
                description: The cuisine id
                type: number
            type: object
          type: array
        SecondDateRanking:
          description: How likely customers are to return to the restaurant
          type: number
        Description:
          description: The restaurant description
          type: string
        DeliveryOpeningTimeLocal:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        Id:
          description: Id of the restaurant
          type: number
        IsTemporarilyOffline:
          description: Is the restaurant offline temporarily
          type: boolean
        SendsOnItsWayNotifications:
          description: Does the restaurant send notifications when food is on its way
          type: boolean
        OfferPercent:
          description: Percentage discount
          type: number
        ReasonWhyTemporarilyOffline:
          description: Reason why the restaurant is temporarily offline
          type: string
        CollectionMenuId:
          description: Id of the menu for collection
          nullable: true
          type: number
        OpeningTime:
          description: When the restaurant opens
          format: date-time
          type: string
        OpeningTimeIso:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        IsOpenNowForDelivery:
          description: Is the restaurant open for delivery now
          type: boolean
        Cuisines:
          items:
            properties:
              SeoName:
                description: The SEO name of the cuisine
                type: string
              Name:
                description: The name of the cuisine
                type: string
            type: object
          type: array
        DeliveryEtaMinutes:
          description: Estimate for the restaurant delivery times
          properties:
            Approximate:
              description: The estimate
              nullable: true
              type: number
            RangeLower:
              description: The lower limit of the estimate range
              type: number
            RangeUpper:
              description: The upper limit of the estimate range
              type: number
          type: object
        IsBrand:
          description: Is the restaurant a brand
          type: boolean
        IsOpenNowForCollection:
          description: Is the restaurant open for collection now
          type: boolean
        DeliveryTime:
          description: Estimated time for delivery
          nullable: true
          type: number
        IsOpenNowForPreorder:
          description: True if you can place a pre-order with the restaurant
          type: boolean
        Score:
          description: The ranking score of the restaurant
          type: number
        Name:
          description: The name of the restaurant
          type: string
        SmileyUrl:
          description: URL to the food safety results
          nullable: true
          type: object
        Url:
          description: URL to the restaurant on the website
          type: string
        OpeningTimeUtc:
          description: The opening time of the restaurant
          nullable: true
          format: date-time
          type: string
        MinimumDeliveryValue:
          description: The minimum value for an order to qualify for delivery
          type: number
        SmileyResult:
          description: The food safety result
          nullable: true
          type: object
        LogoUrl:
          description: URL to the restaurant's logo
          type: string
        BannerUrl:
          description: >-
            URL template that can be used to access the restaurant's banner
            image. The `{transformations}` placeholder can be replaced with
            additional Cloudinary transformations (e.g. height, width). For more
            details see
            https://cloudinary.com/documentation/image_transformations
          type: string
        UniqueName:
          description: The Unique Name
          type: string
        DriveDistance:
          description: The distance to drive to the restaurant
          type: number
        IsPremier:
          description: Is the restaurant a premier partner
          type: boolean
        ServiceableAreas:
          items:
            type: object
          type: array
        IsDelivery:
          description: Is the restaurant offering delivery
          type: boolean
        DriveInfoCalculated:
          description: Has driving info been calculated
          type: boolean
        IsNew:
          description: True if the restaurant was recently added
          type: boolean
        NewnessDate:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        Postcode:
          description: The Postcode
          type: string
        OpeningTimeLocal:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        Rating:
          description: The rating
          properties:
            Average:
              description: The average rating score
              type: number
            Count:
              description: How many ratings have been placed
              type: number
            StarRating:
              description: The rating as a star score
              type: number
          type: object
        IsHalal:
          description: Is the restaurant halal
          type: boolean
        DeliveryWorkingTimeMinutes:
          description: Average time spent preparing orders
          type: number
        BrandName:
          description: the brand name
          type: string
        SmileyElite:
          description: Smiley elite
          type: boolean
        Deals:
          items:
            properties:
              OfferType:
                description: The offer type
                type: string
              DiscountPercent:
                description: The discount percent
                type: number
              QualifyingPrice:
                description: The Qualifying Price
                type: number
              Description:
                description: Description
                type: string
            type: object
          type: array
        SecondDateRank:
          description: How likely customers are to return to the restaurant
          type: number
        Latitude:
          description: Latitude
          type: number
        DeliveryMenuId:
          description: The menu id for delivery
          type: number
        IsFreeDelivery:
          description: Is delivery free
          type: boolean
        SmileyDate:
          description: When was the food safety rating given
          nullable: true
          type: object
        IsCloseBy:
          description: Is close by
          type: boolean
        ScoreMetaData:
          description: Metadata about the score
          items:
            properties:
              Key:
                description: The key
                type: string
              Value:
                description: The value
                type: string
            type: object
          type: array
        DeliveryCost:
          description: Cost of delivery
          type: number
        DeliveryZipcode:
          description: The zip code for delivery
          nullable: true
          type: string
        DeliveryTimeMinutes:
          description: Delivery time in minutes
          nullable: true
          type: number
        Address:
          description: Address of the restaurant
          properties:
            City:
              description: The City
              type: string
            Postcode:
              description: Postcode
              type: string
            Longitude:
              description: Longitude
              type: number
            FirstLine:
              description: Address first line
              type: string
            Latitude:
              description: Latitude
              type: number
          type: object
        IsTestRestaurant:
          description: True if the restaurant is for testing
          type: boolean
        Longitude:
          description: Longitude
          type: number
        DefaultDisplayRank:
          description: The default display rank
          type: number
        ShowSmiley:
          description: Should the client show the safety rating
          type: boolean
        DeliveryStartTime:
          description: When the restaurant starts delivering
          format: date-time
          type: string
        DeliveryChargeBands:
          items:
            properties:
              DeliveryChargeBelowThreshold:
                description: The threshold below which the charge applies
                type: number
              BasketThresholdPrice:
                description: The basket threshold
                type: number
            type: object
          type: array
        Badges:
          items:
            type: object
          type: array
        IsOpenNow:
          description: True if open right now
          type: boolean
        Tags:
          items:
            type: string
          type: array
        Logo:
          items:
            properties:
              StandardResolutionURL:
                description: URL to the logo in standard resolution
                type: string
            type: object
          type: array
        City:
          description: The City the restaurant is in
          type: string
        LastUpdated:
          $ref: '#/components/schemas/LocalDateTimeYaml'
        IsTemporaryBoost:
          description: True if the restaurant rank has been temporarily improved
          type: boolean
        RatingStars:
          description: The restaurant rating
          type: number
      type: object
    RestaurantsSearchWebResponseYaml:
      properties:
        Open:
          items:
            $ref: '#/components/schemas/RestaurantsSearchRestaurantYaml'
          type: array
        Offline:
          items:
            $ref: '#/components/schemas/RestaurantsSearchRestaurantYaml'
          type: array
        Closed:
          items:
            $ref: '#/components/schemas/RestaurantsSearchRestaurantYaml'
          type: array
      type: object
    RestaurantsTimeYaml:
      type: object
      required:
        - daysOfTheWeek
        - fromDateTime
        - toDateTime
      properties:
        daysOfTheWeek:
          description: >-
            The days of the week. The array must contain at least one day and
            cannot contain duplicate days.
          items:
            enum:
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
              - sunday
            type: string
          type: array
          minItems: 1
          nullable: false
        toDateTime:
          description: >-
            Time of day the availability begins, in local time, format is ISO
            8601 hh:mm:ss
          type: string
          minLength: 8
          maxLength: 8
          nullable: false
        fromDateTime:
          description: >-
            Time of day the availability begins, in local time, format is ISO
            8601 hh:mm:ss
          type: string
          minLength: 8
          maxLength: 8
          nullable: false
      example:
        daysOfTheWeek:
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
        fromDateTime: '11:30:00'
        toDateTime: '14:30:00'
    RestaurantsUnauthorisedMarketingResponseYaml:
      allOf:
        - $ref: '#/components/schemas/RestaurantsMarketingErrorResponseYaml'
        - description: 401 Unauthorised Returned
          type: object
      example:
        message: Unauthorised
        errors:
          - description: Unauthorised
            errorCode: '401'
        faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b
    RestaurantsUnitYaml:
      description: The unit size definition.
      additionalProperties: true
      type: object
      required:
        - quantity
        - type
      properties:
        quantity:
          description: The quantity of the unit
          type: integer
          minimum: 1
          nullable: false
        type:
          description: The type of the unit
          $ref: '#/components/schemas/RestaurantsUnitPriceUnitTypeYaml'
          nullable: false
    RestaurantsUnitPriceYaml:
      description: The unit price and quantity.
      type: object
      required:
        - unit
        - price
      properties:
        unit:
          $ref: '#/components/schemas/RestaurantsUnitYaml'
          nullable: false
        price:
          description: >-
            The price value per the unit specified. This should be specified
            using minor units (pence/cents) of the currency.
          format: int32
          type: number
          minimum: 0
          nullable: false
    RestaurantsUnitPriceUnitTypeYaml:
      description: The type of unit that a price can be measured by.
      type: string
      enum:
        - cl
        - cm
        - g
        - kg
        - l
        - m
        - ml
        - sheet
        - sqm
        - unit
    RestaurantsUpdatePaymentMethodRequestYaml:
      description: Request object for updating restaurant's payment mode
      properties:
        updatedBy:
          description: User who made the status update
          nullable: false
          type: string
        cardOnlyPayment:
          description: Determines if restaurant takes only card only payments
          nullable: false
          type: boolean
      type: object
    RestaurantsUpdateRestaurantCreationStatusYaml:
      description: The request body to update the creation status of a restaurant.
      type: object
      required:
        - status
      properties:
        status:
          description: The new creation status of the restaurant.
          type: string
          enum:
            - activated
    RestaurantsVariationYaml:
      type: object
      required:
        - id
        - name
        - type
        - basePrice
        - availabilityIds
      properties:
        name:
          description: >-
            The name of the variation.  If the variation type is `noVariation`,
            this should be set to an empty string, otherwise the name should be
            at least 1 character.
          type: string
          minLength: 0
          nullable: false
        nameTranslations:
          description: Translations of the name of the variation.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        dealOnly:
          description: >-
            This flag indicates the variation is only available as part of a
            deal, the item will not be displayed as a stand alone menu item.
          type: boolean
          nullable: true
        kitchenNumber:
          description: >-
            Identifies the item with a number on the physical menu that the
            kitchen understand e.g. on a Chinese menu number 16 could correspond
            to "BBQ ribs"
          type: string
          nullable: true
        type:
          description: >-
            Denotes the type of variation, `variation` if there are multiple
            variations of the parent `menuitem`, `noVariation` if there's only
            one
          enum:
            - noVariation
            - variation
          type: string
          nullable: false
        modifierGroupsIds:
          description: Maps to the modifier groups that are applicable to this variation.
          items:
            type: string
          type: array
          nullable: true
        id:
          description: >-
            A unique identifier at menu level for a variation, can be shared
            with parent menu item id.
          type: string
          minLength: 1
          nullable: false
        externalId:
          description: >-
            The partner identifier for a variation. For example, this could be a
            price look-up / stock keeping unit code.
          type: string
          minLength: 0
          maxLength: 1000
          nullable: true
        basePrice:
          description: The base price of this variation in the minor unit of the currency.
          type: number
          format: int32
          minimum: 0
          nullable: false
        nutrition:
          $ref: '#/components/schemas/RestaurantsNutritionYaml'
          nullable: true
        numberOfServings:
          $ref: '#/components/schemas/RestaurantsNumberOfServingsYaml'
          nullable: true
        dealGroupsIds:
          description: Maps to the deal groups that are applicable to this variation.
          items:
            type: string
          type: array
          nullable: true
        availabilityIds:
          description: >-
            Maps to an availability item, availabilities determines which days
            and times the item can be sold.
          items:
            type: string
          type: array
          minItems: 1
          nullable: false
        physicalProperties:
          description: The physical properties of an item.
          $ref: '#/components/schemas/RestaurantsPhysicalPropertiesYaml'
          nullable: true
        pricing:
          description: The pricing information for an item.
          $ref: '#/components/schemas/RestaurantsPricingYaml'
          nullable: true
        additionalInformation:
          description: >-
            This field will be deprecated in the future and is to be used for
            migrating and compatibility with L-TA menus only.
          type: string
          nullable: true
        additionalInformationTranslations:
          description: Translations of the additional information of the variation.
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/RestaurantsMenuTranslationYaml'
          nullable: true
        gtin:
          description: >-
            The GS1 GTIN code to uniquely identify a given product. This may be
            an EAN, APN, ISBN or UPC.
          type: string
          minLength: 8
          maxLength: 14
          nullable: true
      example:
        name: 12 inch
        nameTranslations:
          - language: it
            text: 12 pollici
        dealOnly: false
        kitchenNumber: '100'
        type: variation
        modifierGroupsIds:
          - 8547130-req-1
          - 8547130-opt-1
        id: 8547130X
        basePrice: 1000
        nutrition:
          energyContent:
            - min: 100
              max: 200
              unit: kcal
            - min: 418
              max: 836
              unit: kJ
          nutritionTable:
            - description: Per 100g
              referenceQuantity:
                unit: g
                quantity:
                  value: 100
              nutritionProperties:
                - name: protein
                  unit: g
                  quantity:
                    value: 0.1
                    lessThan: true
                - name: fat
                  unit: g
                  percentRI: 50
                  quantity:
                    value: 15
                    lessThan: false
        numberOfServings:
          min: 1
          max: 1
        dealGroupsIds: []
        availabilityIds:
          - 1-lunch-delivery
          - 2-lunch-collection
          - 3-dinner-delivery
          - 4-dinner-collection
        physicalProperties:
          grossWeight:
            value: 100
            unit: g
        gtin: '012345678905'
    RestaurantsVolumeUnitTypeYaml:
      description: The unit type for a volume.
      type: string
      enum:
        - cl
        - l
        - ml
    RestaurantsWeightUnitTypeYaml:
      description: The unit type for a weight
      type: string
      enum:
        - g
        - kg
    RestaurantsOrderTimeYaml:
      description: The object representing order time entry
      properties:
        upperBoundMinutes:
          description: Order time upper bound value, in minutes.
          format: int32
          type: integer
        dayOfWeek:
          description: Day of week for order time
          enum:
            - sunday
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
          type: string
        serviceType:
          description: Service type of the order time
          enum:
            - Delivery
            - Collection
          type: string
        lowerBoundMinutes:
          description: Order time lower bound value, in minutes.
          format: int32
          type: integer
        overrides:
          description: >-
            Time-based adjustments to upper and lower bounds. No limits for the
            overrides count. No overlaps allowed.
          type: array
          items:
            $ref: '#/components/schemas/RestaurantsOrderTimeOverrideYaml'
      example:
        upperBoundMinutes: 50
        dayOfWeek: monday
        serviceType: Delivery
        lowerBoundMinutes: 35
        overrides:
          - startTime: '18:00:00'
            endTime: '20:00:00'
            lowerBoundMinutes: 44
            upperBoundMinutes: 59
      type: object
    RestaurantsUpdateOrderTimeRequestYaml:
      description: Request object for order time update
      properties:
        upperBoundMinutes:
          description: Order time upper bound value, in minutes.
          format: int32
          type: integer
        lowerBoundMinutes:
          description: Order time lower bound value, in minutes.
          format: int32
          type: integer
      example:
        upperBoundMinutes: 50
        lowerBoundMinutes: 35
      type: object
    RestaurantsWebhooksMenuIngestionCompleteYaml:
      type: object
      properties:
        tenant:
          description: Country code for the market the restaurant is in
          format: enum
          enum:
            - au
            - dk
            - es
            - ie
            - it
            - 'no'
            - uk
            - nz
          type: string
        result:
          description: The result of the menu ingestion process
          format: enum
          enum:
            - success
            - fail
          type: string
        correlationId:
          description: The ID of the execution which has been completed
          type: string
        restaurantId:
          description: The Just Eat restaurant ID
          type: string
        timestamp:
          description: The ISO-8601 datetime at which the menu ingestion completed
          format: date-time
          type: string
        fault:
          description: >-
            Details of the fault which caused the menu ingestion to fail. This
            is only present if menu ingestion did not complete successfully
          properties:
            id:
              description: A unique ID for the fault
              type: string
            errors:
              description: Details of errors which caused the fault
              items:
                properties:
                  description:
                    description: A description of the error to help you resolve the issue
                    type: string
                  code:
                    description: An alphanumeric code for the error
                    type: string
                type: object
              type: array
          type: object
      example:
        tenant: uk
        result: fail
        correlationId: 64bef5ee-7265-47f8-9aee-28bc74f00b13
        restaurantId: '123456'
        timestamp: '2020-01-01T00:00:00.000Z'
        fault:
          id: 70e307df-0156-4d3c-ab92-dd57a103350b
          errors:
            - description: >-
                Invalid variation: 15237d6c-c866-55da-9e61-b4f59dcab9ae -
                variations must be associated with at least one availability
              code: '123'
            - description: >-
                Invalid availability ID: menu-105369-availabilities -
                availability IDs must be integers
              code: '145'
    RestaurantsWebhooksOrderTimeUpdatedYaml:
      type: object
      properties:
        upperBoundMinutes:
          description: Order time upper bound value, in minutes.
          format: int32
          type: integer
        serviceType:
          description: Service type of the order time.
          format: enum
          enum:
            - Delivery
            - Collection
          type: string
        dayOfWeek:
          description: The day of the week that has been updated.
          format: enum
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
          type: string
        lowerBoundMinutes:
          description: Order time lower bound value, in minutes.
          format: int32
          type: integer
        restaurantId:
          description: The Just Eat restaurant ID
          type: string
      example:
        upperBoundMinutes: 50
        serviceType: Delivery
        dayOfWeek: Monday
        lowerBoundMinutes: 35
        restaurantId: '123456'
    RestaurantsettingsRestaurantSettingsResponseYaml:
      description: response containing settings of the restaurant in partner centre
      properties:
        isMenuManagementTeaserVisible:
          description: >-
            A value indicated whether menu management teaser should be shown on
            restaurant edit menu page
          type: boolean
      example:
        isMenuManagementTeaserVisible: false
      type: object
    RestaurantsignupApplicationStateYaml:
      description: The application state i.e. Open, Approved etc.
      enum:
        - OpenApplication
        - ManualInterventionRequired
        - ReadyForInitialReview
        - InitialReviewRejected
        - ReadyForFinalReview
        - FinalReviewRejected
        - Approved
      type: string
    RestaurantsignupApplicationSubmitResponseYaml:
      properties:
        applicationState:
          description: The current application state i.e. Open, Approved etc.
          $ref: '#/components/schemas/RestaurantsignupApplicationStateYaml'
      type: object
    RestaurantsignupDeliveryTypeYaml:
      description: Supported delivery type
      type: object
      properties:
        name:
          description: Delivery Type Name
          type: string
    RestaurantsignupDeliveryTypesYaml:
      type: object
      properties:
        deliveryTypes:
          description: Supported delivery methods
          type: array
          items:
            $ref: '#/components/schemas/RestaurantsignupDeliveryTypeYaml'
    RestaurantsignupDocumentYaml:
      properties:
        documentType:
          $ref: '#/components/schemas/RestaurantsignupDocumentTypeYaml'
        documentMetadata:
          $ref: '#/components/schemas/RestaurantsignupDocumentMetadataYaml'
      type: object
    RestaurantsignupDocumentContentTypeYaml:
      description: >-
        The content type of this document. Can be used by the client to display
        the file correctly
      enum:
        - image/jpeg
        - image/png
        - application/pdf
        - application/msword
      type: string
    RestaurantsignupDocumentLinkResponseYaml:
      properties:
        method:
          description: The method the client should use when calling S3
          enum:
            - GET
            - PUT
            - DELETE
          type: string
        headers:
          description: Headers that will be passed when calling S3
          type: object
          additionalProperties:
            type: string
        href:
          description: >-
            The signed URL for S3. It includes the random generated file name
            which is usually a GUID.
          type: string
        documentKey:
          description: The name of the document
          type: string
      type: object
      example:
        headers:
          x-amz-meta-documenttype: Menu
          x-amz-server-side-encryption: AES256
        href: >-
          https://s3.eu-west-1.amazonaws.com/uk/restaurants/restaurantId/fileName?X-Amz-Expires=180
    RestaurantsignupDocumentMetadataYaml:
      description: Metadata of document being added
      properties:
        dateAdded:
          description: When the document is added [YYYY-MM-DDThh:mm:ssZ (UTC)]
          format: date-time
          type: string
        contentType:
          description: Content type of the document
          $ref: '#/components/schemas/RestaurantsignupDocumentContentTypeYaml'
        documentKey:
          description: >-
            Key of document being added. This is the s3 object key that you have
            already added
          example: images/signup/menu-1.jpg
          type: string
      type: object
    RestaurantsignupDocumentRejectionTypeYaml:
      description: The rejection reason of a document
      enum:
        - Other
        - IncorrectDocument
        - NotClearEnough
        - Outdated
        - NoOwnersName
        - NoOwnersPhoto
        - NoBusinessAddress
        - NoBusinessName
        - MissingPages
        - Handwritten
        - MissingInformation
        - NoAllergenKey
        - LogoNameDoesNotMatch
        - CopyrightInfringement
        - PhotoFromInternet
      type: string
    RestaurantsignupDocumentReviewsYaml:
      properties:
        rejectionReasons:
          description: An array of rejection reasons
          maxItems: 10
          type: array
          minItems: 0
          items:
            properties:
              comment:
                description: Any other review comments
                type: string
              type:
                $ref: '#/components/schemas/RestaurantsignupDocumentRejectionTypeYaml'
            type: object
      type: object
    RestaurantsignupDocumentStateYaml:
      description: The state of a document
      enum:
        - NotAvailable
        - Received
        - ReadyForInitialReview
        - InitialToBeRejected
        - InitialNoIssuesFound
        - InitialReviewRejected
        - ReadyForFinalReview
        - FinalReviewNoIssuesFound
        - FinalReviewToBeRejected
        - FinalReviewRejected
        - Approved
      type: string
    RestaurantsignupDocumentStateUpdateYaml:
      properties:
        documentState:
          description: The new state of the document
          $ref: '#/components/schemas/RestaurantsignupDocumentStateYaml'
          type: string
      type: object
    RestaurantsignupDocumentTypeYaml:
      description: The type of the document
      enum:
        - Menu
        - PhotoId
        - AddressProof
        - FsaCertificate
        - Logo
        - OwnershipInfo
        - Shopfront
      type: string
    RestaurantsignupInitialRestaurantRequestYaml:
      type: object
      required:
        - name
        - address
        - owner
      properties:
        name:
          description: The name of the restaurant
          type: string
        owner:
          description: The owner of the restaurant
          properties:
            emailAddress:
              description: The email address of the restaurant owner
              type: string
            phoneNumber:
              description: The phone number of the restaurant owner
              type: string
            givenName:
              description: The first name of the restaurant owner
              type: string
            familyName:
              description: The last name of the restaurant owner
              type: string
          type: object
        address:
          description: The address of the restaurant
          properties:
            city:
              description: The name of the city the restaurant is located
              type: string
            postalCode:
              description: The post code the restaurant is located
              type: string
            lines:
              description: The address lines the restaurant is located
              maxItems: 3
              type: array
              minItems: 1
              items:
                type: string
          type: object
      example:
        name: Test Restaurant
        address:
          city: London
          postalCode: EC4M 7RF
          lines:
            - Fleet Place House
            - Fleet Place
        owner:
          phoneNumber: '+44791231234'
          emailAddress: restaurant@example.com
    RestaurantsignupRestaurantYaml:
      type: object
      properties:
        menu:
          description: The restaurant menu
          properties:
            requestedCuisines:
              description: The restaurant cuisines
              maxItems: 2
              type: array
              minItems: 1
              items:
                type: string
          type: object
        applicationState:
          description: The current application state of the restaurant
          $ref: '#/components/schemas/RestaurantsignupApplicationStateYaml'
        applicationMetadata:
          description: >-
            Extra information about the restaurant, like the premises and
            ownership status
          nullable: true
          properties:
            occupancyType:
              description: >-
                The nature of occupancy that restaurant is using e.g Single,
                Multiple businesses under one ownership, Multiple businesses
                under multiple ownership etc...
              nullable: true
              enum:
                - Unknown
                - Single
                - MultipleBusinessSingleOwnership
                - MultipleBusinessMultipleOwnership
                - Other
              type: string
            applicationType:
              description: The type of sign up application i.e. Standard, Non-Standard.
              nullable: true
              enum:
                - Unknown
                - Standard
                - NonStandard
              type: string
            premiseType:
              description: >-
                The type of premises that restaurant is using e.g Pub, Hotel,
                Stall etc...
              nullable: true
              enum:
                - Unknown
                - HighStreet
                - GhostKitchen
                - Residential
                - PubOrHotelSameName
                - PubOrHotelDifferentName
                - PubOrHotelLeased
                - PubOrHotelUnknown
                - Unit
                - Stall
                - ShoppingCentre
                - Van
                - Other
              type: string
          type: object
        lastUpdatedDate:
          description: When the restaurant was last updated [YYYY-MM-DDThh:mm:ssZ (UTC)]
          format: date-time
          type: string
        address:
          description: The address of the restaurant
          properties:
            city:
              description: The name of the city the restaurant is located
              type: string
            postalCode:
              description: The post code the restaurant is located
              type: string
            lines:
              description: The address lines the restaurant is located
              maxItems: 3
              type: array
              minItems: 1
              items:
                type: string
          type: object
        createdDate:
          description: When the restaurant was created [YYYY-MM-DDThh:mm:ssZ (UTC)]
          format: date-time
          type: string
        name:
          description: The name of the restaurant
          type: string
        fulfilment:
          description: The delivery type of the restaurant
          properties:
            type:
              description: The delivery type of the restaurant
              enum:
                - DeliveryAndCollection
                - CollectionOnly
                - JustEatDelivery
              type: string
          type: object
        bankDetails:
          description: Account holder information for the restaurant
          properties:
            bankAccountNumber:
              description: The bank account number
              type: string
            bankName:
              description: The name of the bank
              type: string
            accountHolderName:
              description: The name on the bank account
              type: string
            bankSortCode:
              description: The sort code
              type: string
          type: object
        hygiene:
          description: The food hygiene rating for the restaurant
          properties:
            rating:
              description: The rating score
              type: string
          type: object
        owner:
          description: The restaurant owner
          properties:
            emailAddress:
              description: The email address of the restaurant owner
              type: string
            phoneNumber:
              description: The phone number of the restaurant owner
              type: string
            givenName:
              description: The first name of the restaurant owner
              type: string
            familyName:
              description: The last name of the restaurant owner
              type: string
          type: object
      example:
        name: Test Restaurant
        applicationState: OpenApplication
        applicationMetadata:
          applicationType: NonStandard
          occupancyType: MultipleBusinessMultipleOwnership
          premiseType: Van
        createdDate: '2019-10-16T12:18:34.000Z'
        lastUpdatedDate: '2019-10-16T12:18:34.000Z'
        hygiene:
          rating: '4'
        fulfilment:
          description: The fulfillment options for the restaurant
          type: DeliveryAndCollection
        menu:
          requestedCuisines:
            - Greek
            - European
        bankDetails:
          accountHolderName: John Doe
          bankName: Best Bank
          bankSortCode: 12-34-56
          bankAccountNumber: '12345678'
        address:
          city: London
          postalCode: EC4M 7RF
          lines:
            - Fleet Place House
            - Fleet Place
        owner:
          givenName: John
          familyName: Doe
          phoneNumber: '+44791231234'
          emailAddress: restaurant@example.com
    ReviewsConsumerReviewYaml:
      properties:
        reviewId:
          description: Unique identifier for the review
          nullable: false
          type: string
        customerFirstName:
          description: The first name of the customer who left the review
          nullable: false
          type: string
        reviewDate:
          description: The date on which the review was submitted
          nullable: false
          format: date-time
          type: string
        orderId:
          description: A unique identifier for the order
          nullable: false
          type: string
        orderDate:
          description: The date on which the order was made
          nullable: false
          format: date-time
          type: string
        customerComments:
          description: Any comments left by the customer in their review
          nullable: true
          type: string
        restaurantComments:
          description: >-
            Any published comments left by the restaurant in response to the
            review
          nullable: true
          type: string
        restaurantId:
          description: The Id of the restaurant associated with the reviews
          nullable: false
          type: string
        ratingAverage:
          description: The average score left by the customer
          nullable: false
          format: double
          type: number
        maxRating:
          description: The maximum possible value of a score
          nullable: false
          format: integer
          type: number
          minimum: 1
        ratingScores:
          $ref: '#/components/schemas/ReviewsReviewScoresYaml'
      additionalProperties: false
      example:
        reviewId: abc1234
        customerFirstName: John
        reviewDate: '2022-01-15T23:07:39Z'
        orderId: 12345a
        orderDate: '2022-01-12T23:07:39Z'
        restaurantComments: Thanks for your review!
        customerComments: Tasty food
        restaurantId: '1234'
        ratingAverage: 4.8
        maxRating: 5
        ratingScores:
          quality: '5'
          delivery: '4'
    ReviewsOrderReviewResponseYaml:
      type: object
      properties:
        reviewId:
          description: Unique identifier for the review
          nullable: false
          type: string
        customerFirstName:
          description: The first name of the customer who left the review
          nullable: false
          type: string
        reviewDate:
          description: The date on which the review was submitted
          nullable: false
          format: date-time
          type: string
        orderId:
          description: A unique identifier for the order
          nullable: false
          type: string
        orderDate:
          description: The date on which the order was made
          nullable: false
          format: date-time
          type: string
        customerComments:
          description: Any comments left by the customer in their review
          nullable: true
          type: string
        restaurantComments:
          description: >-
            Any published comments left by the restaurant in response to the
            review
          nullable: true
          type: string
        restaurantId:
          description: The Id of the restaurant associated with the reviews
          nullable: false
          format: string
        ratingAverage:
          description: The average score left by the customer
          nullable: false
          format: double
          type: number
        maxRating:
          description: The maximum possible value of a score
          nullable: false
          format: integer
          type: number
          minimum: 1
        ratingScores:
          $ref: '#/components/schemas/ReviewsReviewScoresYaml'
      example:
        reviewId: abc1234
        customerFirstName: John
        reviewDate: '2022-01-15T23:07:39Z'
        orderId: 12345a
        orderDate: '2022-01-12T23:07:39Z'
        customerComments: Tasty food
        restaurantComments: Thanks for your review!
        restaurantId: '1234'
        ratingAverage: 4.8
        maxRating: 5
        ratingScores:
          quality: '5'
          delivery: '4'
    ReviewsPagedConsumerReviewsResponseYaml:
      allOf:
        - $ref: '#/components/schemas/PagingPagedAfterOnlyCursorResponseYaml'
        - properties:
            reviews:
              description: A collection of reviews associated with a user
              type: array
              items:
                $ref: '#/components/schemas/ReviewsConsumerReviewYaml'
          type: object
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
        reviews:
          - reviewId: abc1234
            customerFirstName: John
            orderId: 12345a
            reviewDate: '2022-01-15T23:07:39Z'
            orderDate: '2022-01-12T23:07:39Z'
            restaurantComments: Thanks for your review!
            customerComments: Tasty food
            restaurantId: '1234'
            ratingAverage: 4.8
            maxRating: 5
            ratingScores:
              quality: '5'
              delivery: '4'
    ReviewsPagedRestaurantReviewsResponseYaml:
      allOf:
        - $ref: '#/components/schemas/PagingPagedAfterOnlyCursorResponseYaml'
        - properties:
            reviews:
              description: A Collection of Ratings by Restaurant
              type: array
              items:
                $ref: '#/components/schemas/ReviewsRestaurantReviewYaml'
          type: object
      example:
        paging:
          cursors:
            after: NDMyNzQyODI3OTQw
        reviews:
          - customerName: John
            rateDate: '2021-06-12T23:07:39Z'
            restaurantComments: Thanks for your review!
            customerComments: Tasty food
            restaurantId: 1234
            ratingAverage: 4.8
            maxRating: 5
    ReviewsPagedUnfilteredRestaurantReviewsResponseYaml:
      allOf:
        - $ref: '#/components/schemas/PagingPagedCursorResponseYaml'
        - properties:
            reviews:
              description: >-
                A collection of reviews associated with a restaurant, with
                restaurant comments shown regardless of whether they have been
                approved
              type: array
              items:
                $ref: '#/components/schemas/ReviewsUnfilteredRestaurantReviewYaml'
          type: object
      example:
        paging:
          cursors:
            before: KHt67IUVSDJDVLa
            after: NDMyNzQyODI3OTQw
        reviews:
          - reviewId: abcdef22334455
            customerFirstName: John
            reviewDate: '2022-01-15T23:07:39Z'
            orderId: 12345a
            orderNumber: 556677
            customerComments: Tasty food
            restaurantComments: Thanks for your review!
            restaurantCommentApproved: false
            ratingAverage: 4.8
            maxRating: 5
    ReviewsRestaurantReviewYaml:
      properties:
        customerName:
          description: The (first) name of the customer who left the review
          nullable: false
          type: string
        rateDate:
          description: The date on which the order was made
          nullable: false
          format: date-time
          type: string
        restaurantComments:
          description: Any comments left by the restaurant in response to the review
          nullable: true
          type: string
        customerComments:
          description: Any comments left by the customer in their review
          nullable: true
          type: string
        restaurantId:
          description: The Id of the restaurant associated with the reviews
          nullable: false
          format: int32
          type: integer
        ratingAverage:
          description: The average score left by the customer
          nullable: false
          format: double
          type: number
        maxRating:
          description: The maximum possible value of a score
          nullable: false
          format: integer
          type: number
          minimum: 1
      additionalProperties: false
      example:
        customerName: John
        rateDate: '2021-06-12T23:07:39Z'
        restaurantComments: Thanks for your review!
        customerComments: Tasty food
        restaurantId: 1234
        ratingAverage: 4.8
        maxRating: 5
    ReviewsRestaurantReviewAggregationYaml:
      type: object
      properties:
        restaurantId:
          description: The Id of the restaurant associated with the review aggregation
          nullable: false
          type: string
        restaurantReviewScore:
          description: The review score for this restaurant
          $ref: '#/components/schemas/ReviewsRestaurantReviewScoreYaml'
        restaurantReviewBreakdowns:
          description: The review breakdowns for this restaurant
          items:
            $ref: '#/components/schemas/ReviewsRestaurantReviewBreakdownYaml'
          type: array
      example:
        restaurantId: 1234ab
        restaurantReviewScore:
          restaurantScoreValue: 4.4
          restaurantScoreStars: 4.5
          ratingCountUsedInScore: 140
          totalRestaurantRatingCount: 550
        restaurantReviewBreakdowns:
          - ratingType: 1
            goodReviews: 200
            badReviews: 100
            indifferentReviews: 287
    ReviewsRestaurantReviewAggregationsResponseYaml:
      type: object
      properties:
        restaurantReviewAggregations:
          items:
            description: The review aggregations for these restaurants
            $ref: '#/components/schemas/ReviewsRestaurantReviewAggregationYaml'
          type: array
      example:
        restaurantReviewAggregations:
          - restaurantId: 1234ab
            restaurantReviewScore:
              restaurantScoreValue: 4.4
              restaurantScoreStars: 4.5
              ratingCountUsedInScore: 140
              totalRestaurantRatingCount: 550
            restaurantReviewBreakdowns:
              - ratingType: 1
                goodReviews: 200
                badReviews: 100
                indifferentReviews: 287
    ReviewsRestaurantReviewBreakdownYaml:
      properties:
        ratingType:
          description: >-
            The type of rating - Service = 1, Quality = 2, Delivery = 3, Overall
            = 4
          nullable: false
          format: integer
          type: number
        goodReviews:
          description: The number of good reviews
          nullable: false
          format: integer
          type: number
        badReviews:
          description: The number of bad reviews
          nullable: false
          format: integer
          type: number
        indifferentReviews:
          description: The number of indifferent reviews
          nullable: false
          format: integer
          type: number
      additionalProperties: false
      example:
        ratingType: 1
        goodReviews: 200
        badReviews: 100
        indifferentReviews: 287
    ReviewsRestaurantReviewScoreYaml:
      description: The review score of the restaurant
      type: object
      properties:
        restaurantScoreValue:
          description: The exact value of the score
          nullable: false
          format: double
          type: number
        restaurantScoreStars:
          description: The score to use when displaying stars
          nullable: false
          format: double
          type: number
        ratingCountUsedInScore:
          description: The number of ratings used to calculate the score
          nullable: false
          format: integer
        totalRestaurantRatingCount:
          description: The total number of ratings left for this restaurant
          nullable: false
          format: integer
      example:
        restaurantScoreValue: 4.4
        restaurantScoreStars: 4.5
        ratingCountUsedInScore: 140
        totalRestaurantRatingCount: 550
    ReviewsReviewCommentYaml:
      description: Details for a review comment
      properties:
        showText:
          description: >-
            Text for the review comment will be hidden until it has been passed
            as OK. E.g. ensuring it doesn't contains swear words
          type: boolean
        comment:
          description: Comment left by customer/restaurant
          nullable: true
          maxLength: 4000
          type: string
        processed:
          description: Will be false until processed by an agent/automation
          type: boolean
      type: object
      example:
        showText: false
        comment: Yum!
        processed: true
    ReviewsReviewManagementDataYaml:
      description: A customer review for an order
      properties:
        restaurantId:
          description: The restaurant partner Id
          type: string
        processed:
          description: >-
            Flag used to indicate that this review has passed through the
            validation process.
          type: boolean
        reviewDate:
          description: When the review was submitted
          format: date-time
          type: string
        orderId:
          description: A unique identifier for the order
          type: string
        orderNumber:
          description: The user friendly order number
          type: string
        hideFromSite:
          description: >-
            This review is suspect (e.g. a restaurant self-reviewing) so don't
            display it on the public site
          type: boolean
        customerCity:
          description: The customers city
          nullable: true
          type: string
        orderDate:
          description: When order was placed
          format: date-time
          type: string
        customerEmail:
          description: The customers email
          nullable: true
          format: email
          type: string
        customerComment:
          $ref: '#/components/schemas/ReviewsReviewCommentYaml'
        ratingScores:
          $ref: '#/components/schemas/ReviewsReviewScoresYaml'
        restaurantComment:
          $ref: '#/components/schemas/ReviewsReviewCommentYaml'
        customerDisplayName:
          description: >-
            Customer name shown on the public site. Forename only to avoid
            disclosing PII
          nullable: true
          type: string
        reviewId:
          description: Identifier for ratings - will be equal to the legacy `RatingCode`
          nullable: true
          type: string
      type: object
      example:
        restaurantId: '1234'
        processed: true
        reviewDate: '2021-05-14T17:00:00.000Z'
        orderId: fg12345a
        orderNumber: '1234'
        hideFromSite: false
        customerCity: London
        orderDate: '2021-05-14T12:00:00.000Z'
        customerEmail: example@example.com
        customerComment:
          showText: true
          comment: Very tasty!
          processed: true
        ratingScores:
          quality: '5'
          delivery: '4'
        restaurantComment:
          showText: true
          comment: Thank you :-)
          processed: true
        customerDisplayName: John
        reviewId: abc1234
    ReviewsReviewManagementPagedListYaml:
      description: >-
        Represents a page of reviews plus data about the overall result set.
        E.g. total number of results for the search.
      allOf:
        - $ref: '#/components/schemas/PagingPagedAfterOnlyCursorResponseYaml'
        - properties:
            reviews:
              description: The current page of reviews
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/ReviewsReviewManagementDataYaml'
          type: object
      additionalProperties: false
      example:
        paging:
          after: NDMyNzQyODI3OTQw
        reviews:
          - restaurantId: '1234'
            processed: true
            reviewDate: '2021-05-14T17:00:00.000Z'
            orderId: gh63745b
            orderNumber: '1234'
            hideFromSite: false
            customerCity: London
            orderDate: '2021-05-14T12:00:00.000Z'
            customerEmail: example@example.com
            customerComment:
              showText: true
              comment: Very tasty!
              processed: true
            ratingScores:
              quality: '5'
              delivery: '4'
            restaurantComment:
              showText: true
              comment: Thank you :-)
              processed: true
            customerDisplayName: John
            reviewId: abc1234
    ReviewsReviewScoresYaml:
      description: The star ratings given by a customer
      type: object
      additionalProperties:
        type: string
    ReviewsSubmitReviewReplyRequestYaml:
      description: A restaurant reply to a review
      properties:
        reviewReply:
          description: Review reply left by the restaurant
          nullable: false
          maxLength: 4000
          type: string
      type: object
      example:
        reviewReply: Glad you liked the food!
    ReviewsSubmitReviewRequestYaml:
      description: A customer review for an order
      properties:
        customerComment:
          description: Comment left by customer
          nullable: true
          maxLength: 4000
          type: string
        ratingScores:
          $ref: '#/components/schemas/ReviewsReviewScoresYaml'
        timeTakenMinutes:
          description: >-
            An optional field detailing the customer's perceived time of
            delivery
          nullable: true
          type: number
          format: integer
        consumerId:
          description: Optional Id of the user submitting the review
          nullable: true
          type: string
      type: object
      example:
        customerComment: Very tasty!
        ratingScores:
          quality: '5'
          delivery: '4'
    ReviewsUnfilteredRestaurantReviewYaml:
      properties:
        reviewId:
          description: Identifier for ratings - will be equivalent to `RatingCode`
          nullable: false
          type: string
        customerFirstName:
          description: The first name of the customer who left the review
          nullable: false
          type: string
        reviewDate:
          description: The date on which the review was submitted
          nullable: false
          format: date-time
          type: string
        orderId:
          description: A unique identifier for the order
          nullable: false
          type: string
        orderNumber:
          description: The user friendly order number
          nullable: false
          type: string
        customerComments:
          description: Any comments left by the customer in their review
          nullable: true
          type: string
        restaurantComments:
          description: >-
            Any comments left by the restaurant in response to the review,
            whether approved or not
          nullable: true
          type: string
        restaurantCommentApproved:
          description: >-
            Indicates whether the response left by the restaurant has been
            approved
          nullable: false
          type: boolean
        ratingAverage:
          description: The average score left by the customer
          nullable: false
          format: double
          type: number
        maxRating:
          description: The maximum possible value of a score
          nullable: false
          format: integer
          type: number
          minimum: 1
      additionalProperties: false
      example:
        reviewId: abcdef22334455
        customerFirstName: John
        reviewDate: '2022-01-15T23:07:39Z'
        orderNumber: '556677'
        customerComments: Tasty food
        restaurantComments: Thanks for your review!
        restaurantCommentApproved: false
        ratingAverage: 4.8
        maxRating: 5
    RichmediaImagesByTagResponseYaml:
      type: object
      example:
        images:
          - tags:
              - uk_dishes_burgers-pizza-restaurant
              - uk_dishes
            imageContext:
              tenant: uk
              restaurantKey: burgers-pizza-restaurant
              dishKey: pizza
            moderationStatus: approved
            urlTemplate: >-
              https://cloudinary.test/image/upload/c_fill,q_auto,{transformations}/v1/uk/dishes/burgers-pizza-restaurant/pizza
            rawImageUrl: >-
              https://cloudinary.test/image/upload/v1/uk/dishes/burgers-pizza-restaurant/pizza
            publicId: uk/dishes/burgers-pizza-restaurant/pizza
            supplier: uk#brg_je-uk-burgers-pizza-restaurant
          - tags:
              - uk_dishes_burgers-pizza-restaurant
              - uk_dishes
            imageContext:
              tenant: uk
              restaurantKey: burgers-pizza-restaurant
              dishKey: burger
            moderationStatus: pending
            urlTemplate: ''
            rawImageUrl: ''
            publicId: moderation/pending/uk/dishes/burgers-pizza-restaurant/pizza
            supplier: uk#brg_je-uk-burgers-pizza-restaurant
          - tags:
              - uk_dishes_burgers-pizza-restaurant
              - uk_dishes
            imageContext:
              tenant: uk
              restaurantKey: burgers-pizza-restaurant
              dishKey: burger-with-beef
            moderationStatus: rejected
            moderationRejectionReasons:
              - id: bad-quality
                value: Bad quality
              - id: bad-proportion
                value: Bad proportion
            urlTemplate: ''
            rawImageUrl: ''
            publicId: moderation/rejected/uk/dishes/burgers-pizza-restaurant/pizza
            supplier: uk#brg_je-uk-burgers-pizza-restaurant
        approvedCount: 1
        unapprovedCount: 1
        paging:
          cursors:
            after: 926cdc79-7802-4dbf-820e-10a448edfedf
      properties:
        images:
          description: The array of images having specified tag
          type: array
          items:
            type: object
            properties:
              tags:
                description: Array of tags attached to an image
                type: array
                items:
                  type: string
              supplier:
                description: >
                  The supplier of the imagery. Could be an agency, brand or even
                  an individual restaurant that owns and provides images. See
                  the additional guidance at
                  https://justeattakeaway.atlassian.net/wiki/spaces/ContentVertical/pages/6056083749/Integrating+with+Content+as+a+service+CaaS
                type: string
              urlTemplate:
                description: >-
                  Image URL template that can be used to access the image.
                  Mandatory transformations are already baked in the URL
                  template. The {transformations} placeholder can be replaced
                  with additional image transformations that suit your need
                  (e.g. height, width etc). For more details see
                  https://justeattakeaway.atlassian.net/wiki/spaces/ContentVertical/pages/48259335/Cloudinary+image+URL+-+Guidelines
                type: string
              rawImageUrl:
                description: >-
                  Image URL without any transformations, which gives access to
                  the raw original image and may be used, for example, as a
                  source URL when publishing an image to a CDN
                type: string
              publicId:
                description: >-
                  Id of the image on a CDN. Should not be used to build image
                  URLs; the `urlTemplate` and `rawImageUrl` properties should be
                  used for this purpose.
                type: string
              imageContext:
                description: >-
                  Image contextual metadata. Might contain some or all of the
                  fields that were sent during image publishing
                additionalProperties:
                  type: string
                type: object
              moderationStatus:
                description: Moderation status of the image
                format: string
                enum:
                  - approved
                  - rejected
                  - pending
              moderationRejectionReasons:
                description: >-
                  If the image was rejected the reasons for rejection will be
                  supplied in this array
                type: array
                items:
                  $ref: '#/components/schemas/RichmediaListItemYaml'
        approvedCount:
          description: Number of `approved` images in the response
          format: integer
          type: number
        unapprovedCount:
          description: Number of `rejected` or `pending` images in the response
          format: integer
          type: number
        paging:
          description: Consists of pagination information.
          properties:
            cursors:
              description: Consists of cursor markers used in pagination.
              properties:
                after:
                  description: >-
                    Cursor parameter to use in the next request to the resource
                    to fetch the next page of data. A missing or empty value
                    indicates that the end of the result set has been reached.
                  type: string
              type: object
          type: object
      nullable: false
    RichmediaListItemYaml:
      description: Custom type for all list items.
      type: object
      properties:
        id:
          description: >-
            Id of the list item. Can be used to build country-specific
            translations.
          type: string
        value:
          description: Text representation of the list item in English.
          type: string
      required:
        - id
        - value
    RichmediaRichMediaImageBatchResponseYaml:
      required:
        - batchStatus
      type: object
      example:
        batchStatus: partiallySucceeded
        externalId: rNXjPKwIaN7StcV3YQfY
        images:
          - imageContext:
              tenant: uk
              restaurantKey: burgers&pizza
              dishKey: pizza
            imageStatus: succeeded
            urlTemplate: >-
              https://cloudinary.test/image/upload/c_fill,q_auto,{transformations}/v1/uk/dishes/burgers_pizza/image01
            sourceImageUrl: https://test.test/image01.jpg
          - imageContext:
              tenant: uk
              restaurantKey: burgers&pizza
              dishKey: burger
            imageStatus: failed
            sourceImageUrl: https://test.test/image02.jpg
            failureReason: Source image exeeds maximum size of 10 MB.
        paging:
          cursors:
            after: 926cdc79-7802-4dbf-820e-10a448edfedf
            before: bd7e1aeb-1a73-46bf-8f07-5b3716693b35
      properties:
        batchStatus:
          description: The status of batch request
          format: enum
          enum:
            - queued
            - running
            - succeeded
            - partiallySucceeded
            - failed
            - cancelled
          type: string
        externalId:
          description: >-
            String which can be provided by the client to later identify the
            images batch on their side
          type: string
        images:
          description: The array of images in the batch
          items:
            required:
              - sourceImageUrl
              - imageContext
              - imageStatus
            properties:
              failureReason:
                description: >-
                  Can contain additional information about image publishing
                  failure
                type: string
              urlTemplate:
                description: >-
                  Image URL template that can be used to access the image.
                  Mandatory transformations are already baked in the URL
                  template. The {transformations} placeholder can be replaced
                  with additional Cloudinary transformations that suit your need
                  (e.g. height, width etc). For more details see
                  https://cloudinary.com/documentation/image_transformations
                type: string
              sourceImageUrl:
                description: >-
                  Source image URL. The remote HTTP or HTTPS URL address of an
                  existing image or a private S3 object URL in a whitelisted
                  bucket.
                type: string
              imageStatus:
                description: The status of individual image
                format: enum
                enum:
                  - succeeded
                  - failed
                type: string
              imageContext:
                description: >-
                  Image context in dictionary format. Can contain additional
                  data that will be published alongside the image.
                additionalProperties:
                  type: string
                type: object
            type: object
          type: array
        paging:
          description: Consists of pagination information.
          properties:
            cursors:
              description: Consists of cursor markers used in pagination.
              properties:
                after:
                  description: >-
                    Cursor parameter to use in the next request to the resource
                    to fetch the next page of data. A missing or empty value
                    indicates that the end of the result set has been reached.
                  type: string
                before:
                  description: >-
                    Cursor parameter to use in the next request to the resource
                    to fetch the previous page of data. A missing or empty value
                    indicates that the beginning of the result set has been
                    reached.
                  type: string
              type: object
          type: object
      nullable: false
    RichmediaRichMediaImagePublishRequestYaml:
      required:
        - imageType
        - images
      type: object
      example:
        imageType: dishImage
        imagePublisher: contentMenuSync
        externalId: rNXjPKwIaN7StcV3YQfY
        images:
          - imageContext:
              tenant: uk
              restaurantKey: brg_chain1
              dishKey: cheeseburger
            sourceImageUrl: https://test.test/image01.jpg
            supplier: uk#brg_chain1
          - imageContext:
              tenant: uk
              restaurantKey: brg_chain2
              dishKey: mcflurry
            sourceImageUrl: https://test.test/image02.jpg
            supplier: uk#brg_chain2
      properties:
        imageType:
          description: >-
            Image type of published images. Must match an image type defined in
            the metadata for your client.
          type: string
        imagePublisher:
          description: >
            The sender of the request. If provided, it must match one of the
            registered publishers in the client profile or the request will be
            rejected. If not provided - the client name will be used by default.
          type: string
        externalId:
          description: >-
            String which can be provided by the client to later identify the
            images batch on their side
          type: string
        images:
          description: The array of images to publish.
          maxItems: 2500
          type: array
          minItems: 1
          items:
            properties:
              imageContext:
                description: >-
                  Image context in dictionary format. Can contain additional
                  data that will be published alongside the image.
                additionalProperties:
                  type: string
                type: object
              sourceImageUrl:
                description: >-
                  Source image URL. The remote HTTP or HTTPS URL address of an
                  existing image or a private S3 object URL in a whitelisted
                  bucket.
                type: string
              supplier:
                description: >
                  The supplier of the imagery. Could be an agency, brand or even
                  individual restaurant that owns and provides images.  See the
                  additional guidance
                  https://justeattakeaway.atlassian.net/wiki/spaces/ContentVertical/pages/6056083749/Integrating+with+Content+as+a+service+CaaS
                type: string
            type: object
      nullable: false
    S3GeneratePresignedFileResponseYaml:
      description: Response to request to generate presigned file link
      type: object
      properties:
        documentKey:
          description: the file name
          type: string
        headers:
          description: Headers to include on subsequent request following redirect
          type: object
          additionalProperties:
            oneOf:
              - type: string
              - type: integer
      example:
        documentKey: 313d6863-c160-497a-8691-fdb688401ac6
        headers:
          x-amz-server-side-encryption: AES256
    ScoobercuriosityAuthServiceAccountDisabledResponseYaml:
      title: Root Type for AccountDisabledResponse
      description: Account Disabled Response
      type: object
      properties:
        reason:
          description: Failure Reason
          type: string
        supportEmail:
          description: Support Email
          type: string
      example:
        reason: ACCOUNT_DISABLED
        supportEmail: support@takeaway.com
    ScoobercuriosityAuthServiceCheckEmailResponseYaml:
      title: Root Type for checkEmailResponse
      description: Tells if the email is available for registration or not.
      required:
        - available
      type: object
      properties:
        available:
          description: |-
            A boolean flag
            - true: the email is available for registration
            - false: the email is not available for registration
          type: boolean
      example:
        available: true
    ScoobercuriosityAuthServiceConfirmAccountYaml:
      title: Root Type for ConfirmAccount
      description: Confirm account
      type: object
      properties:
        email:
          description: Courier's email address
          type: string
        confirmationCode:
          description: Confirmation code from the account confirmation email
          type: string
      example:
        email: john.smith@gmail.com
        confirmationCode: '1234'
    ScoobercuriosityAuthServiceConfirmForgotPasswordYaml:
      title: Root Type for ConfirmForgotPassword
      description: Confirm Forgot Password
      type: object
      properties:
        email:
          description: user email
          type: string
        password:
          description: user password
          type: string
        confirmationCode:
          description: >-
            Confirmation code. Sent to the provided email upon forgot Password
            request
          type: string
      example:
        email: john.smith@gmail.com
        password: NewPa$$w0rd
        confirmationCode: '123456'
    ScoobercuriosityAuthServiceConfirmationResponseYaml:
      title: Root Type for ConfirmForgotPasswordResponse
      description: 'Confirm Forgot Password Response 200 '
      type: object
      properties:
        confirmationTime:
          description: confirmation time
          type: string
      example:
        confirmationTime: '2021-02-18T12:57:28.714819Z'
    ScoobercuriosityAuthServiceCredentialsYaml:
      title: Root Type for Credentials
      description: courier credentials
      required:
        - email
        - password
      type: object
      properties:
        email:
          description: Courier's email address
          type: string
        password:
          description: Courier's password
          type: string
      example:
        email: johns.smith@gmail.com
        password: Pa$$w0rd
    ScoobercuriosityAuthServiceForgotPasswordResponseYaml:
      description: forgot password response
      required:
        - email
      type: object
      properties:
        email:
          description: Courier's email address
          type: string
      example:
        email: john.smith@gmail.com
    ScoobercuriosityAuthServiceForgotPasswordYaml:
      title: Root Type for ForgotPassword
      description: forgot password request
      required:
        - email
      type: object
      properties:
        email:
          description: 'Courier''s email address '
          type: string
      example:
        email: john.smith@gmail.com
    ScoobercuriosityAuthServiceGuestLoginCredentialsYaml:
      title: Root Type for appUuid
      description: >-
        Unique id of the app/device id, needed to avoid multiple sessions
        creation from one device
      required:
        - locale
        - appUuid
      type: object
      properties:
        appUuid:
          description: >-
            Unique id of the app/device id, needed to avoid multiple sessions
            creation from one device
          type: string
        locale:
          description: Courier's locale info
          $ref: '#/components/schemas/ScoobercuriosityAuthServiceLocaleYaml'
      example:
        appUuid: 07f099dd-403d-4bb1-aead-070cb9711115
        locale:
          language: en
          country: GB
    ScoobercuriosityAuthServiceInvalidConfirmationCodeYaml:
      title: Root Type for InvalidConfirmationCode
      description: invalid confirmation code
      type: object
      properties:
        reason:
          description: Failure Reason
          type: string
      example:
        reason: INVALID_CODE
    ScoobercuriosityAuthServiceInvalidParametersResponseYaml:
      title: Root Type for InvalidParametersResponse
      description: Returned when input parameters are invalid or malformed
      type: object
      properties:
        reason:
          description: Failure Reason
          type: string
      example:
        reason: INVALID_PARAMS
    ScoobercuriosityAuthServiceLocaleYaml:
      title: Root Type for Locale
      description: locale of the user
      type: object
      properties:
        language:
          description: ISO-639-1 language code
          type: string
        country:
          description: ISO 3166-1 A2 country code
          type: string
      example:
        language: en
        country: GB
    ScoobercuriosityAuthServiceNewUserYaml:
      description: new user object
      required:
        - userId
        - confirmationMethod
      type: object
      properties:
        userId:
          description: Courier's unique ID
          type: string
        confirmationMethod:
          description: 'Account confirmation method to be used. Available values: CODE, URL'
          enum:
            - CODE
            - URL
          type: string
      example:
        userId: e354d3bd-57b7-488d-9ade-2e15aac5a790
        confirmationMethod: CODE
    ScoobercuriosityAuthServiceRefreshTokenCredentialsYaml:
      description: refresh token credentials
      required:
        - refreshToken
        - userId
      type: object
      properties:
        refreshToken:
          description: User's JWT Refresh Token.
          type: string
        userId:
          description: Cognito user ID
          type: string
      example:
        userId: 62f031c7-0000-4fc3-baad-f67f6f635cc1
        refreshToken: >-
          eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE1OTgwMDgwNzMsImV4cCI6MTYyOTU0NDA3MywiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoianJvY2tldEBleGFtcGxlLmNvbSIsImZpcnN0TmFtZSI6IkpvaG4iLCJsYXN0TmFtZSI6IlNtaXRoIiwiZW1haWwiOiJqb2huLnNtaXRoQGdtYWlsLmNvbSJ9.NFE2z99BAIFF8dj4myCtFm0SuxLuIRObDpFqponIwyc
    ScoobercuriosityAuthServiceResendConfirmationYaml:
      description: resend confirmation response
      required:
        - email
      type: object
      properties:
        email:
          description: Courier's email address
          type: string
      example:
        email: john.smith@gmail.com
    ScoobercuriosityAuthServiceTokenSuccessResponseYaml:
      description: response for successful token generation
      required:
        - accessToken
        - refreshToken
        - userId
      type: object
      properties:
        refreshToken:
          description: User's Refresh Token. Can be used to to get a new Access Token.
          type: string
        accessToken:
          description: >-
            User's Access Token. Should be included in the following calls for
            authorization.
          type: string
        userId:
          description: Courier's ID
          type: string
      example:
        userId: e354d3bd-57b7-488d-9ade-2e15aac5a790
        accessToken: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gU21pdGgiLCJlbWFpbCI6ImpvaG4uc21pdGguZ21haWwuY29tIn0.klCBfmCL5vZOVg5-tJCg_TJi_w1uuyszI4OcXD8EblY
        refreshToken: >-
          eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE1OTgwMDgwNzMsImV4cCI6MTYyOTU0NDA3MywiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoianJvY2tldEBleGFtcGxlLmNvbSIsImZpcnN0TmFtZSI6IkpvaG4iLCJsYXN0TmFtZSI6IlNtaXRoIiwiZW1haWwiOiJqb2huLnNtaXRoQGdtYWlsLmNvbSJ9.NFE2z99BAIFF8dj4myCtFm0SuxLuIRObDpFqponIwyc
    ScoobercuriosityAuthServiceTokenUnauthorizedResponseYaml:
      description: token unauthorized response
      required:
        - reason
      type: object
      properties:
        reason:
          description: '- INVALID_TOKEN: The provided refresh token is invalid or expired'
          enum:
            - INVALID_TOKEN
          type: string
    ScoobercuriosityAuthServiceUnauthorizedLoginYaml:
      description: unauthorized login response
      required:
        - reason
      type: object
      properties:
        reason:
          description: >-
            Tells why the request is rejected.

            - NOT_VERIFIED: when courier has not confirmed his or her email yet

            - NOT_AUTHORIZED: when the password is wrong or the account does not
            exists
          enum:
            - NOT_VERIFIED
            - NOT_AUTHORIZED
          type: string
      example:
        reason: NOT_VERIFIED
    ScoobercuriosityAuthServiceUserNotFoundResponseYaml:
      title: Root Type for FailureUserNotFound
      description: Failure with reason "COURIER_NOT_FOUND"
      type: object
      properties:
        reason:
          description: reason of failure
          type: string
      example:
        reason: USER_NOT_FOUND
    ScoobercuriosityAuthServiceUserYaml:
      description: User object response
      required:
        - firstName
        - lastName
        - email
        - password
        - locale
      type: object
      properties:
        firstName:
          description: Courier's first name
          type: string
        lastName:
          description: Courier's last name
          type: string
        email:
          description: Courier's email address
          type: string
        password:
          description: Courier's password
          type: string
        legalAge:
          description: >-
            (Deprecated) Tells if the courier is above the legal age to deliver
            alcoholic beverages or not. Currently we are not using this field to
            determine if the courier is above the legal age or not.
          type: boolean
          deprecated: true
        locale:
          description: Courier's locale data
          $ref: '#/components/schemas/ScoobercuriosityAuthServiceLocaleYaml'
        guestId:
          description: Guest user id if available, to match guest and permanent sessions
          type: string
        appUuid:
          description: Unique app installation ID
          type: string
      example:
        firstName: John
        lastName: Smith
        email: john.smith@gmail.com
        password: Pa$$w0rd
        legalAge: true
        locale:
          language: en
          country: GB
        guestId: e354d3bd-57b7-488d-9ade-2e15aac5a790
        appUuid: 07f099dd-403d-4bb1-aead-070cb9711115
    ScoobercuriosityDeliveryServiceAddressRequestYaml:
      title: Root Type for customer address
      description: Customer address model
      required:
        - city
        - postcode
        - streetName
        - streetNumber
      type: object
      properties:
        city:
          description: City name
          type: string
        postcode:
          description: Postal code
          type: string
        streetName:
          description: Street name
          type: string
        streetNumber:
          description: Street number
          type: string
        countryCode:
          description: Country Code
          type: string
      example:
        city: Berlin
        streetName: Am Lustgarten
        streetNumber: '6'
        postcode: '10178'
        countryCode: DE
    ScoobercuriosityDeliveryServiceBuildingInfoYaml:
      title: Root Type for BuildingInfo
      description: Building info includes extra info for address
      type: object
      properties:
        block:
          description: Address Block
          type: string
        residenceType:
          description: Residence Type
          type: string
        houseName:
          description: House Name
          type: string
        flatNumber:
          description: Flat Number
          type: string
        apartmentName:
          description: Apartment Name
          type: string
        intercom:
          description: Apartment Intercom
          type: string
        doorbell:
          description: Apartment Doorbell
          type: string
        entrance:
          description: Apartment Entrance
          type: string
        floor:
          description: Apartment Floor
          type: string
        door:
          description: Apartment Door
          type: string
        accessCode:
          description: Apartment Access Code
          type: string
    ScoobercuriosityDeliveryServiceClientErrorYaml:
      title: Root Type for ClientError
      description: Client side error
      type: object
      properties:
        reason:
          description: Failure reason
          type: string
    ScoobercuriosityDeliveryServiceConfirmationWithTimestampYaml:
      title: Root Type for ConfirmationWithTimestamp
      description: Confirmation with instant timestamp
      type: object
      properties:
        confirmationTime:
          description: Order confirmation time
          type: string
    ScoobercuriosityDeliveryServiceCourierIdYaml:
      title: Root Type for NotifyDelivery
      description: Notify about delivery
      required:
        - courierId
      type: object
      properties:
        courierId:
          description: >-
            This field is deprecated and it will be auto extracted from
            authorization token
          type: string
          deprecated: true
      example:
        courierId: c32ed45b-045f-4156-a6f4-f7401ae84c4f
    ScoobercuriosityDeliveryServiceCustomerRequestYaml:
      title: Root Type for customer
      description: Customer request model
      required:
        - address
        - location
      type: object
      properties:
        address:
          $ref: >-
            #/components/schemas/ScoobercuriosityDeliveryServiceAddressRequestYaml
        lastName:
          description: Customer last name
          type: string
        location:
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceLocationYaml'
        phone:
          description: Customer phone number
          type: string
        placeId:
          description: Customer place id
          type: string
      example:
        location:
          latitude: 50.8768293
          longitude: 6.1512706
        phone: '+4912345678'
        address:
          city: Berlin
          streetName: Am Lustgarten
          streetNumber: '6'
          postcode: '10178'
          countryCode: DE
        lastName: Smith
        placeId: google-place-id
    ScoobercuriosityDeliveryServiceCustomerYaml:
      title: Root Type for Customer
      description: Customer information
      required:
        - lastName
        - phone
        - location
        - address
      type: object
      properties:
        placeId:
          description: Place id
          type: string
        lastName:
          description: Customer last name
          type: string
        phone:
          description: Phone number
          type: string
        location:
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceLocationYaml'
        address:
          $ref: >-
            #/components/schemas/ScoobercuriosityDeliveryServiceDeliveryAddressYaml
      example:
        placeId: ChIJN1t_tDeuEmsRUsoyG83frY4
        lastName: Smith
        phone: '017621237216'
        address:
          postcode: '7181'
          city: Berlin
          streetNumber: '13'
          streetName: Land str
          buildingInfo:
            block: A
            residenceType: building
            houseName: testHouse
            flatNumber: '4'
            apartmentName: testApartment
            intercom: b220
            doorbell: b220
            entrance: front
            floor: '2'
            door: '1'
            accessCode: '123'
          flightInfo:
            flightNumber: f123
            flightDate: 01.01.2023
            departureFrom: BER
            arriveAt: MUC
            seatNumber: b1
        location:
          latitude: 50.8768293
          longitude: 6.1512706
    ScoobercuriosityDeliveryServiceDeliveryAddressYaml:
      title: Root Type for DeliveryAddress
      description: Delivery address
      type: object
      properties:
        postcode:
          description: Address postcode
          type: string
        city:
          description: Address city
          type: string
        streetNumber:
          description: Address street number
          type: string
        streetName:
          description: Address street name
          type: string
        floor:
          description: Optional, floor number
          type: string
        apartmentNumber:
          description: Optional, apartment number
          type: string
        companyName:
          description: Optional, company name
          type: string
        buildingInfo:
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceBuildingInfoYaml'
        flightInfo:
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceFlightInfoYaml'
      example:
        postcode: '7181'
        city: Berlin
        streetNumber: '13'
        streetName: Land str
        floor: '5'
        apartmentNumber: '22'
        companyName: JET
        buildingInfo:
          block: A
          residenceType: building
          houseName: testHouse
          flatNumber: '4'
          apartmentName: testApartment
          intercom: b220
          doorbell: b220
          entrance: front
          floor: '2'
          door: '1'
          accessCode: '123'
        flightInfo:
          flightNumber: f123
          flightDate: 01.01.2023
          departureFrom: BER
          arriveAt: MUC
          seatNumber: b1
    ScoobercuriosityDeliveryServiceErrorConflictInStartDeliveryYaml:
      type: object
      properties:
        reason:
          description: Failure reason
          type: string
          enum:
            - POOL_IS_EMPTY
            - DELIVERY_ALREADY_STARTED
    ScoobercuriosityDeliveryServiceFlightInfoYaml:
      title: Root Type for FlightInfo
      description: Flight info
      type: object
      properties:
        flightNumber:
          description: Flight number
          type: string
        flightDate:
          description: Flight date
          type: string
        departureFrom:
          description: Departure from
          type: string
        arriveAt:
          description: Arrive at
          type: string
        seatNumber:
          description: Seat number
          type: string
    ScoobercuriosityDeliveryServiceItemsYaml:
      type: array
      items:
        type: object
        properties:
          additions:
            type: array
            items:
              type: object
              properties:
                id:
                  description: Item id
                  type: string
                name:
                  description: Item name
                  type: string
          comment:
            description: Courier's comment
            type: string
          id:
            description: Item id
            type: string
          name:
            description: Item name
            type: string
          quantity:
            description: Item quantity
            type: string
    ScoobercuriosityDeliveryServiceJobAssignmentYaml:
      title: Root Type for JobAssignment
      description: Job Assignment
      type: object
      properties:
        orderHash:
          description: Order Hash
          type: string
        courierId:
          description: Courier ID
          type: string
      example:
        orderHash: f91623829438ae9d1a61e91d33d5fe71
        courierId: 880bfe02-c115-44f0-b34a-35528dabf31d
    ScoobercuriosityDeliveryServiceJobCreationRequestYaml:
      title: Root Type for JobCreation
      description: Job creation request
      required:
        - customer
      type: object
      properties:
        restaurant:
          $ref: >-
            #/components/schemas/ScoobercuriosityDeliveryServiceRestaurantRequestYaml
        comment:
          description: Comment about job
          type: string
        customer:
          $ref: >-
            #/components/schemas/ScoobercuriosityDeliveryServiceCustomerRequestYaml
      example:
        comment: new customer
        restaurant:
          location:
            latitude: 50.8768293
            longitude: 6.1512706
        customer:
          location:
            latitude: 50.8768293
            longitude: 6.1512706
          phone: '+4912345678'
          address:
            city: Berlin
            streetName: Am Lustgarten
            streetNumber: '6'
            postcode: '10178'
            countryCode: DE
          lastName: Smith
          placeId: google-place-id
    ScoobercuriosityDeliveryServiceJobCreationResponseYaml:
      title: Root Type for job creation
      description: Job creation response
      required:
        - jobId
      type: object
      properties:
        jobId:
          description: Job id
          type: string
      example:
        jobId: f47ac10b-58cc-4372-a567-0e02b2c3d479
    ScoobercuriosityDeliveryServiceJobOrderDetailsV2Yaml:
      title: Root Type for UnassignedOrderDetails
      description: Job order details
      required:
        - order
      type: object
      properties:
        order:
          description: Job order details
          $ref: >-
            #/components/schemas/ScoobercuriosityDeliveryServiceJobOrderDetailsYaml
        job:
          description: Job object
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceJobYaml'
    ScoobercuriosityDeliveryServiceJobOrderDetailsYaml:
      title: Root Type for UnassignedOrderDetails
      description: Job order details
      required:
        - comment
        - customer
        - expectedDeliveryTime
        - hasAlcohol
        - payment
        - hash
        - restaurant
        - reference
        - createdAt
        - platform
      type: object
      properties:
        comment:
          description: Comment left by customer
          type: string
        expectedDeliveryTime:
          description: Expected delivery timestamp (ISO 8601)
          type: string
        hasAlcohol:
          description: Shows whether or not order contains the alcohol drinks
          type: boolean
        customer:
          description: Customer details
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceCustomerYaml'
        payment:
          description: Payment status
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServicePaymentYaml'
        reference:
          description: Order reference
          type: string
        hash:
          description: Order Hash
          type: string
        createdAt:
          description: Order creation timestamp (ISO 8601)
          type: string
        platform:
          description: Order Platform
          enum:
            - TAKEAWAY
          type: string
        restaurant:
          description: Restaurant details contains geolocation data
          $ref: >-
            #/components/schemas/ScoobercuriosityDeliveryServiceRestaurantDetailsYaml
        items:
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceItemsYaml'
      example:
        reference: 123X0Y1
        hash: f91623829438ae9d1a61e91d33d5fe71
        platform: TAKEAWAY
        payment:
          status: PAID
          totalAmount: 10.2
          currencyCode: USD
        comment: Knock 3 times at the door, then sing the song
        createdAt: '2022-11-18T08:00:00Z'
        expectedDeliveryTime: '2022-11-18T08:29:45Z'
        hasAlcohol: true
        customer:
          placeId: ChIJN1t_tDeuEmsRUsoyG83frY4
          lastName: Smith
          location:
            latitude: 50.8768293
            longitude: 6.1512706
          address:
            postcode: '7181'
            city: Berlin
            streetNumber: '13'
            streetName: Land str
            floor: '5'
            apartmentNumber: '22'
            companyName: JET
            buildingInfo:
              block: A
              residenceType: building
              houseName: testHouse
              flatNumber: '4'
              apartmentName: testApartment
              intercom: b220
              doorbell: b220
              entrance: front
              floor: '2'
              door: '1'
              accessCode: '123'
            flightInfo:
              flightNumber: f123
              flightDate: 01.01.2023
              departureFrom: BER
              arriveAt: MUC
              seatNumber: b1
          phone: '017111111111'
        restaurant:
          id: 123123X
          location:
            latitude: 50.8768326
            longitude: 6.1775459
        items:
          - additions:
              - id: '793553478'
                name: Potato
              - id: '793553508'
                name: cheese
              - id: '900865238'
                name: sauce
            comment: ''
            id: '287657308'
            name: Burger
            quantity: '1'
          - additions:
              - id: '793555018'
                name: Potato
              - id: '793555078'
                name: cheese
              - id: '900865308'
                name: sauce
            comment: ''
            id: '287659158'
            name: Spareribs hot
            quantity: '1'
    ScoobercuriosityDeliveryServiceJobYaml:
      title: Root Type for Job
      description: Courier's Job
      required:
        - order
        - status
        - createdAt
        - sequence
      type: object
      properties:
        status:
          description: Job status
          enum:
            - READY_FOR_DELIVERY
            - IN_DELIVERY
            - DELIVERED
          type: string
        order:
          description: Order snapshot
          $ref: >-
            #/components/schemas/ScoobercuriosityDeliveryServiceJobOrderDetailsYaml
        createdAt:
          description: Job creation timestamp (ISO 8601)
          type: string
        sequence:
          description: Job position in the pool
          type: integer
        deliveredAt:
          description: Job delivery timestamp (ISO 8601)
          type: string
      example:
        status: DELIVERED
        sequence: 1
        createdAt: '2020-11-18T08:10:45Z'
        deliveredAt: '2020-11-18T08:30:45Z'
        order:
          status: READY_FOR_DELIVERY
          reference: 123X0Y1
          hash: f91623829438ae9d1a61e91d33d5fe71
          payment:
            status: PAID
            totalAmount: 10.2
            currencyCode: USD
          comment: knock 3 times at the door, then sing the song
          expectedDeliveryTime: '2020-11-18T08:29:45Z'
          createdAt: '2020-11-18T08:00:45Z'
          hasAlcohol: true
          platform: TAKEAWAY
          customer:
            placeId: ChIJN1t_tDeuEmsRUsoyG83frY4
            lastName: Smith
            location:
              latitude: 50.8768293
              longitude: 6.1512706
            address:
              postcode: '7181'
              city: Berlin
              streetNumber: '13'
              streetName: Land str
              floor: '5'
              apartmentNumber: '22'
              companyName: JET
              buildingInfo:
                block: A
                residenceType: building
                houseName: testHouse
                flatNumber: '4'
                apartmentName: testApartment
                intercom: b220
                doorbell: b220
                entrance: front
                floor: '2'
                door: '1'
                accessCode: '123'
              flightInfo:
                flightNumber: f123
                flightDate: 01.01.2023
                departureFrom: BER
                arriveAt: MUC
                seatNumber: b1
            phone: '017111111111'
          restaurant:
            id: 123123X
            location:
              latitude: 50.8768326
              longitude: 6.1775459
          items:
            - additions:
                - id: 793553478X
                  name: Potato
                - id: 793553508X
                  name: Cheese
                - id: 900865238X
                  name: Sauce
              comment: ''
              id: 287657308X
              name: Apple
              quantity: '1'
            - additions:
                - id: 793555018X
                  name: Potato
                - id: 793555078X
                  name: Cheese
                - id: 900865308X
                  name: Apple
              comment: ''
              id: 287659158X
              name: Spareribs hot
              quantity: '1'
    ScoobercuriosityDeliveryServiceLegacyOrderDetailsYaml:
      title: Root Type for UnassignedOrderDetailes
      description: Unassigned order details
      required:
        - comment
        - customer
        - expectedDeliveryTime
        - hasAlcohol
        - payment
        - orderHash
        - restaurantId
        - restaurant
        - reference
        - status
      type: object
      properties:
        comment:
          description: Comment left by customer
          type: string
        expectedDeliveryTime:
          description: Expected delivery time (ISO 8601)
          type: string
        hasAlcohol:
          description: Shows whether or not order contains the alcohol drinks
          type: boolean
        customer:
          description: Customer details
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceCustomerYaml'
        payment:
          description: Payment status
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServicePaymentYaml'
        restaurantId:
          description: Restaurant id
          type: string
        items:
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceItemsYaml'
        status:
          description: Order status
          enum:
            - UNASSIGNED
            - ASSIGNED
            - IN_DELIVERY
            - DELIVERED
          type: string
        orderHash:
          description: Order hash
          type: string
        reference:
          description: Order reference
          type: string
        restaurant:
          description: Restaurant details contains geolocation data
          $ref: >-
            #/components/schemas/ScoobercuriosityDeliveryServiceRestaurantDetailsYaml
      example:
        reference: 123X0Y1
        orderHash: X0Y12Z123X0Y12
        restaurantId: '123123'
        status: ASSIGNED
        payment:
          status: PAID
          totalAmount: 10.2
          currencyCode: USD
        comment: knock 3 times at the door, then sing the song
        expectedDeliveryTime: '2020-11-18T08:29:45Z'
        hasAlcohol: true
        customer:
          placeId: ChIJN1t_tDeuEmsRUsoyG83frY4
          lastName: Smith
          location:
            latitude: 50.8768293
            longitude: 6.1512706
          address:
            postcode: '7181'
            city: Berlin
            streetNumber: '13'
            streetName: Land str
            buildingInfo:
              block: A
              residenceType: building
              houseName: testHouse
              flatNumber: '4'
              apartmentName: testApartment
              intercom: b220
              doorbell: b220
              entrance: front
              floor: '2'
              door: '1'
              accessCode: '123'
            flightInfo:
              flightNumber: f123
              flightDate: 01.01.2023
              departureFrom: BER
              arriveAt: MUC
              seatNumber: b1
          phone: '017111111111'
        restaurant:
          id: 123123X
          location:
            latitude: 50.8768326
            longitude: 6.1775459
        items:
          - additions:
              - id: 793553478X
                name: Potato
              - id: 793553508X
                name: Cheese
              - id: 900865238X
                name: Sauce
            comment: ''
            id: 287657308X
            name: Apple
            quantity: '1'
          - additions:
              - id: 793555018X
                name: Potato
              - id: 793555078X
                name: Cheese
              - id: 900865308X
                name: Apple
            comment: ''
            id: 287659158X
            name: Spareribs hot
            quantity: '1'
    ScoobercuriosityDeliveryServiceLocationYaml:
      title: Root Type for Location
      description: Geolocation object
      type: object
      properties:
        latitude:
          description: Latitude
          format: double
          type: number
        longitude:
          description: Longitude
          format: double
          type: number
      example:
        latitude: 50.8768293
        longitude: 6.1512706
    ScoobercuriosityDeliveryServiceNotificationDetailsYaml:
      title: Root Type for NotificationDetails
      description: Notification details
      type: object
      properties:
        notificationTime:
          description: Notification time in ISO 8601 format
          format: date-time
          type: string
      example:
        notificationTime: '2020-11-18T08:29:45Z'
    ScoobercuriosityDeliveryServiceOrderDetailsInDeliveryYaml:
      title: Root Type for UnassignedOrderDetails
      description: Unassigned order details
      required:
        - comment
        - customer
        - expectedDeliveryTime
        - hasAlcohol
        - payment
        - reference
        - restaurantId
        - restaurant
        - orderHash
        - status
      type: object
      properties:
        reference:
          description: Order reference
          type: string
        comment:
          description: Comment left by customer
          type: string
        expectedDeliveryTime:
          description: Expected delivery time (ISO 8601)
          type: string
        hasAlcohol:
          description: Shows whether or not order contains the alcohol drinks
          type: boolean
        customer:
          description: Customer details
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceCustomerYaml'
        payment:
          description: Payment status
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServicePaymentYaml'
        restaurantId:
          description: restaurant id
          type: string
        status:
          description: Order status
          enum:
            - UNASSIGNED
            - ASSIGNED
            - IN_DELIVERY
            - DELIVERED
          type: string
        restaurant:
          description: Restaurant details contains geolocation data
          $ref: >-
            #/components/schemas/ScoobercuriosityDeliveryServiceRestaurantDetailsYaml
        orderHash:
          description: Order hash
          type: string
      example:
        orderHash: X0Y12Z123
        reference: X0Y12Z1
        restaurantId: '123123'
        status: IN_DELIVERY
        payment:
          status: PAID
          totalAmount: 10.2
          currencyCode: USD
        comment: knock 3 times at the door, then sing the song
        expectedDeliveryTime: '2020-11-18T08:29:45Z'
        hasAlcohol: true
        customer:
          placeId: ChIJN1t_tDeuEmsRUsoyG83frY4
          lastName: Smith
          address:
            postcode: '7181'
            city: Berlin
            streetNumber: '13'
            streetName: Land str
            buildingInfo:
              block: A
              residenceType: building
              houseName: testHouse
              flatNumber: '4'
              apartmentName: testApartment
              intercom: b220
              doorbell: b220
              entrance: front
              floor: '2'
              door: '1'
              accessCode: '123'
            flightInfo:
              flightNumber: f123
              flightDate: 01.01.2023
              departureFrom: BER
              arriveAt: MUC
              seatNumber: b1
          location:
            latitude: 50.8768293
            longitude: 6.1512706
          phone: '017111111111'
        restaurant:
          id: '8938538'
          location:
            latitude: 50.8768326
            longitude: 6.1775459
        items:
          - additions:
              - id: 793553478X
                name: Potato
              - id: 793553508X
                name: Cheese
              - id: 900865238X
                name: Sauce
            comment: ''
            id: 287657308X
            name: Apple
            quantity: '1'
          - additions:
              - id: 793555018X
                name: Potato
              - id: 793555078X
                name: Cheese
              - id: 900865308X
                name: Apple
            comment: ''
            id: 287659158X
            name: Spareribs hot
            quantity: '1'
    ScoobercuriosityDeliveryServiceOrderSequenceYaml:
      title: Root Type for OrderSequence
      description: Sequence of orders
      type: object
      properties:
        courierId:
          description: >-
            This field is deprecated and it will be auto extracted from
            authorization token
          type: string
          deprecated: true
        sequence:
          description: Sequence of orders
          type: array
          items:
            description: Order id
            type: string
      example:
        courierId: 07f099dd-403d-4bb1-aead-070cb97a0fe6
        sequence:
          - X0Y12Z123
          - X0Y12Z121
    ScoobercuriosityDeliveryServicePaymentYaml:
      title: Root Type for Payment
      description: Payment details
      required:
        - status
        - totalAmount
        - currencyCode
      type: object
      properties:
        status:
          description: Payment status
          enum:
            - PAID
            - UNPAID
            - UNKNOWN
          type: string
        currencyCode:
          description: currency code
          type: string
        totalAmount:
          description: total amount
          type: number
      example:
        status: PAID
        totalAmount: 10.2
        currencyCode: USD
    ScoobercuriosityDeliveryServicePoolYaml:
      title: Root Type for Pool
      description: Order pool
      required:
        - type
      type: object
      properties:
        id:
          description: Pool Id
          type: string
        type:
          description: Type of the pool
          type: string
        jobs:
          description: Jobs (orders) in pool
          type: array
          items:
            $ref: >-
              #/components/schemas/ScoobercuriosityDeliveryServiceJobOrderDetailsYaml
      example:
        id: 123e4567-e89b-12d3-a456-426614174000
        type: CURRENT
        jobs: []
    ScoobercuriosityDeliveryServicePoolsYaml:
      title: Root Type for Pools
      description: Pools of courier
      required:
        - current
        - next
      type: object
      properties:
        current:
          description: Current Pool
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServicePoolYaml'
        next:
          description: Next Pool
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServicePoolYaml'
      example:
        current:
          id: 123e4567-e89b-12d3-a456-426614174000X
          type: CURRENT
          jobs: []
        next:
          id: 123e4567-e89b-12d3-a456-426614174001
          type: NEXT
          jobs: []
    ScoobercuriosityDeliveryServiceRestaurantDetailsYaml:
      title: Root Type for RestaurantDetails
      description: Restaurant details contains geolocation data
      required:
        - location
        - id
      type: object
      properties:
        id:
          description: Restaurant id
          type: string
        location:
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceLocationYaml'
      example:
        id: 8938538X
        location:
          latitude: 50.8768326
          longitude: 6.1775459
    ScoobercuriosityDeliveryServiceRestaurantRequestYaml:
      title: Root Type for restaurant
      description: Restaurant request model
      type: object
      properties:
        location:
          $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceLocationYaml'
      example:
        location:
          latitude: 50.8768293
          longitude: 6.1512706
    ScoobercuriosityDeliveryServiceRestaurantYaml:
      title: Root Type for Restaurant
      description: Restaurant object
      required:
        - id
        - name
      type: object
      properties:
        id:
          description: Restaurant id
          type: string
        name:
          description: Restaurant name
          type: string
      example:
        id: 123123X
        name: Great Pizza
    ScoobercuriosityDeliveryServiceStartDeliveryYaml:
      title: Root Type for StartDelivery
      description: Start delivery request body
      required:
        - courierId
        - vehicleType
      type: object
      properties:
        courierId:
          description: >-
            This field is deprecated and it will be auto extracted from
            authorization token
          type: string
          deprecated: true
        vehicleType:
          description: Vehicle type
          type: string
      example:
        courierId: 07f099dd-403d-4bb1-aead-070cb97a0fe6
        vehicleType: BIKE
    ScoobercuriosityDeliveryServiceStatusChangeYaml:
      title: Root Type for StatusChange
      description: Status Change
      required:
        - status
        - courierId
      type: object
      properties:
        status:
          description: Job Status
          enum:
            - ASSIGNED
            - IN_DELIVERY
            - DELIVERED
            - UNASSIGNED
          type: string
        courierId:
          description: >-
            This field is deprecated and it will be auto extracted from
            authorization token
          type: string
          deprecated: true
      example:
        courierId: d071b7ff-ba5f-497f-93b1-04571b899aa7
        status: IN_DELIVERY
    ScoobercuriosityDeliveryServiceUnassignedOrdersWithRestaurantsYaml:
      title: Root Type for UnassignedOrdersWithRestaurants
      description: >-
        Array of unassigned orders + array of restaurants connected to the
        courier
      required:
        - restaurants
      type: object
      properties:
        orders:
          description: Array of unassigned orders
          type: array
          items:
            $ref: >-
              #/components/schemas/ScoobercuriosityDeliveryServiceLegacyOrderDetailsYaml
        restaurants:
          description: Array of restaurants connected to the courier
          type: array
          items:
            $ref: '#/components/schemas/ScoobercuriosityDeliveryServiceRestaurantYaml'
      example:
        orders:
          - orderHash: X0Y12Z123
            status: UNASSIGNED
            reference: X0Y12Z
            restaurantId: '123123'
            payment:
              status: PAID
              totalAmount: 10.2
              currencyCode: USD
            comment: knock 3 times at the door, then sing the song
            expectedDeliveryTime: '2020-11-18T08:29:45Z'
            hasAlcohol: true
            customer:
              placeId: ChIJN1t_tDeuEmsRUsoyG83frY4
              lastName: Smith
              address:
                postcode: '7181'
                city: Berlin
                streetNumber: '13'
                streetName: Land str
                floor: '5'
                apartmentNumber: '22'
                companyName: JET
                buildingInfo:
                  block: A
                  residenceType: building
                  houseName: testHouse
                  flatNumber: '4'
                  apartmentName: testApartment
                  intercom: b220
                  doorbell: b220
                  entrance: front
                  floor: '2'
                  door: '1'
                  accessCode: '123'
                flightInfo:
                  flightNumber: f123
                  flightDate: 01.01.2023
                  departureFrom: BER
                  arriveAt: MUC
                  seatNumber: b1
              location:
                latitude: 50.8768293
                longitude: 6.1512706
              phone: '017111111111'
            restaurant:
              id: 123123X
              location:
                latitude: 50.8768326
                longitude: 6.1775459
            items:
              - additions:
                  - id: 793553478X
                    name: Potato
                  - id: 793553508X
                    name: Cheese
                  - id: 900865238X
                    name: Sauce
                comment: ''
                id: 287657308X
                name: Apple
                quantity: '1'
              - additions:
                  - id: 793555018X
                    name: Potato
                  - id: 793555078X
                    name: Cheese
                  - id: 900865308X
                    name: Apple
                comment: ''
                id: 287659158X
                name: Spareribs hot
                quantity: '1'
          - orderHash: X0Y12Z121
            status: UNASSIGNED
            reference: X0Y12Z
            restaurantId: '123123'
            payment:
              status: PAID
              totalAmount: 10.2
              currencyCode: USD
            comment: Some comment
            expectedDeliveryTime: '2020-11-18T08:29:45Z'
            hasAlcohol: true
            customer:
              lastName: Jones
              address:
                postcode: '7181'
                city: Berlin
                streetNumber: '1'
                streetName: Land str
                buildingInfo:
                  block: A
                  residenceType: building
                  houseName: testHouse
                  flatNumber: '4'
                  apartmentName: testApartment
                  intercom: b220
                  doorbell: b220
                  entrance: front
                  floor: '2'
                  door: '1'
                  accessCode: '123'
                flightInfo:
                  flightNumber: f123
                  flightDate: 01.01.2023
                  departureFrom: BER
                  arriveAt: MUC
                  seatNumber: b1
              location:
                latitude: 50.8768293
                longitude: 6.1512706
              phone: '017111111111'
            restaurant:
              id: 123123X
              location:
                latitude: 50.8768326
                longitude: 6.1775459
            items:
              - quantity: '1'
                name: Pizza Thon Senior
                id: '346248508'
                comment: >-
                  Sans oeuf avec pomme de terre et beaucoup d'olive noir s'il
                  vous plaît
                additions: []
        restaurants:
          - id: 123123X
            name: Pizza pizza
          - id: '123124'
            name: Burger burger
    ScoobercuriosityDeliveryServiceUpdateVehicleTypeYaml:
      title: Root Type for UpdateVehicleType
      description: Update Vehicle Type
      required:
        - vehicleType
        - courierId
      type: object
      properties:
        courierId:
          description: >-
            This field is deprecated and it will be auto extracted from
            authorization token
          type: string
          deprecated: true
        vehicleType:
          description: Vehicle Type
          enum:
            - BIKE
            - EBIKE
            - CAR
            - SCOOTER
          type: string
      example:
        courierId: 07f099dd-403d-4bb1-aead-070cb97a0fe6
        vehicleType: BIKE
    ScoobercuriosityLocationServiceCoordinateYaml:
      title: Root Type for coordinate
      description: Location coordinates object
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          description: Courier's current latitude
          format: double
          type: number
          minimum: -90
          maximum: 90
        longitude:
          description: Courier's current longitude
          format: double
          type: number
          minimum: -180
          maximum: 180
      example:
        latitude: 49.455544
        longitude: 11.085865
    ScoobercuriosityLocationServicePositionUpdateRequestYaml:
      title: Root Type for positionUpdateRequest
      description: position update request
      required:
        - coordinate
        - horizontalAccuracy
      type: object
      properties:
        coordinate:
          $ref: '#/components/schemas/ScoobercuriosityLocationServiceCoordinateYaml'
        horizontalAccuracy:
          description: Horizontal accuracy of the location
          format: double
          type: number
      example:
        coordinate:
          latitude: 49.455544
          longitude: 11.085865
        horizontalAccuracy: 12312.12
    ScoobercuriosityLocationServicePositionUpdateResponseYaml:
      title: Root Type for PositionUpdateResponse
      description: position update response
      type: object
      properties:
        continueTracking:
          description: Indicates if client should continue sending position update or not.
          type: boolean
      example:
        continueTracking: true
    ScooberoperationsAddCommentToTicketModelYaml:
      description: >-
        Used when Scoober sends a reply about a support incident, to add to a
        Just Eat Zendesk ticket
      required:
        - description
        - externalId
        - responseUrl
        - ticketId
      properties:
        description:
          description: Comment to add to the ticket.
          example: Happy to help!
          type: string
        externalId:
          description: >-
            Scoober job reference, or similar ID used by Scoober to identify
            this ticket.
          example: slack:1
          type: string
        ticketId:
          description: The ticket ID to add the comment to.
          format: int64
          example: 1234
          type: integer
        requesterEmail:
          description: E-Mail address of the ticket requester.
          nullable: true
          example: requester@scoober.com
          type: string
        responseUrl:
          description: Where should we respond to with progress on this request?
          example: >-
            https://zenbox-api.bob.external.tkwy-staging.io/ticket/reply/response
          type: string
        status:
          description: 'What status should we set the ticket to: Open, pending or solved.'
          nullable: true
          example: pending
          type: string
      type: object
    ScooberoperationsAddReplyMessageModelYaml:
      description: >-
        Information sent when a Just Eat agent sends a follow up message about a
        Scoober support ticket to Scoober
      required:
        - description
        - externalId
        - reason
        - status
        - subject
        - ticketId
      properties:
        description:
          description: 'Description, i.e.: main body, of the message.'
          example: Happy to help!
          type: string
        externalId:
          description: External ID for this ticket, e.g. Scoober job ID (assigned by them).
          example: slack:1
          type: string
        ticketId:
          description: Zendesk ticket ID this message is about.
          format: int64
          example: 1234
          type: integer
        subject:
          description: Subject of the message.
          example: Scoober Test
          type: string
        restaurantId:
          description: Restaurant Id of the order.
          nullable: true
          example: '1234567'
          type: string
        scooberJobId:
          description: Scoober job ID for this order.
          nullable: true
          example: '1234'
          type: string
        reason:
          description: Scoober contact reason for this ticket.
          example: front_line_reason_food_quality_cold_crushed_spilled
          type: string
        countryCode:
          description: 2 letter ISO code this ticket is about.
          nullable: true
          example: gb
          type: string
        status:
          description: 'Status of the ticket. Can be: New, pending, solved.'
          example: pending
          type: string
        city:
          description: City this order is located in.
          type: string
          deprecated: true
          example: london
          nullable: true
      type: object
    ScooberoperationsCreateMessageModelYaml:
      description: Information needed to create a message for the Scoober ops team
      required:
        - description
        - reason
        - status
        - subject
        - ticketId
      properties:
        description:
          description: Description, main body, of the message to send.
          example: Scoober Test
          type: string
        status:
          description: Status of the Zendesk ticket.
          example: new
          type: string
        ticketId:
          description: Zendesk ticket ID this message is about.
          format: int64
          example: 1234
          type: integer
        subject:
          description: Subject of the message to send.
          example: Scoober Test
          type: string
        restaurantId:
          description: Restaurant Id of the order.
          nullable: true
          example: '1234567'
          type: string
        scooberJobId:
          description: Scoober job ID, if known.
          nullable: true
          example: en
          type: string
        reason:
          description: Scoober contact reason for this ticket.
          example: front_line_reason_food_quality_cold_crushed_spilled
          type: string
        countryCode:
          description: 2 letter ISO code for the country this ticket is about.
          nullable: true
          example: gb
          type: string
        city:
          description: City this order is located in.
          type: string
          deprecated: true
          example: london
          nullable: true
      type: object
    ScooberoperationsCreateTicketModelYaml:
      description: >-
        Information needed to create a ticket on the Just Eat Zendesk instance
        for a Scoober delivery support incident
      required:
        - description
        - externalId
        - reason
        - responseUrl
        - subject
      properties:
        description:
          description: Description (main body) of the ticket.
          example: Scoober Test
          type: string
        requesterEmail:
          description: Ticket requester e-mail address.
          nullable: true
          example: requester@scoober.com
          type: string
        reason:
          description: Scoober reason code for the creation of this ticket.
          example: delivery__spilled_food
          type: string
        requesterName:
          description: Ticket requester name.
          nullable: true
          example: scoober
          type: string
        country:
          description: >-
            2 letter ISO code of the country this pertains to. Will be inferred
            from queried API.
          nullable: true
          example: gb
          type: string
        status:
          description: >-
            Ticket status to set on creation of this ticket. Possible values:
            New, pending, solved.
          nullable: true
          example: new
          type: string
        city:
          description: City of the delivery in question of this ticket.
          nullable: true
          example: london
          type: string
        responseUrl:
          description: Where should we respond to with progress on this request?
          example: https://zenbox-api.bob.external.tkwy-staging.io/ticket/response
          type: string
        courier:
          description: Courier who created this query.
          nullable: true
          example: scoober
          type: string
        externalId:
          description: >-
            We will note this as incident/ticket/query ID used by the calling
            party and include it for their future reference.
          example: slack:1
          type: string
        subject:
          description: Subject of the ticket.
          example: Scoober Test
          type: string
        senderType:
          description: Scoober transmits a sender type value.
          type: array
          example:
            - internal
          items:
            type: string
          nullable: true
        language:
          description: >-
            2 letter ISO code of the language for the ticket. Will be inferred
            from queried API.
          nullable: true
          example: en
          type: string
        scooberJobId:
          description: Scoober job ID for this order.
          nullable: true
          example: '1234'
          type: string
      type: object
    SearchAutoCompleteSearchResponseYaml:
      type: object
      properties:
        terms:
          description: Ordered list of suggested term completions
          uniqueItems: false
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/SearchAutoCompleteSearchResponseItemYaml'
      example:
        terms:
          - term: Pizza Palace
            classification: Restaurant
          - term: Pizza
            classification: Cuisine
          - term: Large Hawaiian
            classification: Dish
    SearchAutoCompleteSearchResponseItemYaml:
      type: object
      properties:
        term:
          description: Auto-completed search term
          type: string
        classification:
          description: Grouping to which term belongs
          enum:
            - Restaurant
            - Cuisine
            - Dish
          type: string
      example:
        term: Pizza Palace
        classification: Restaurant
    SearchEnergyContentYaml:
      description: Energy content details of product
      type: object
      properties:
        unit:
          description: The unit of measurement for energy
          type: string
        min:
          description: The minimum energy value
          type: number
        max:
          description: The maximum energy value
          type: number
      example:
        unit: kcal
        min: 1000
        max: 1500
    SearchMenuSearchResponseYaml:
      type: object
      properties:
        products:
          description: A list of menu products matching a given search term
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SearchMenuSearchResponseItemYaml'
      example:
        products:
          - id: '1'
          - id: '2'
    SearchMenuSearchResponseItemYaml:
      type: object
      properties:
        id:
          description: A product ID
          type: string
      example:
        term: null
        id: 1X
    SearchNumberOfServingsYaml:
      description: The number of servings in the product
      type: object
      properties:
        min:
          description: The minimum number of servings
          type: number
        max:
          description: The maximum number of servings
          type: number
      example:
        min: 5
        max: 10
    SearchRestaurantSearchProductYaml:
      description: Product details for a restaurant search result
      type: object
      properties:
        price:
          description: The price of the product
          type: number
          deprecated: true
        productPrice:
          description: The detailed price of the product
          properties:
            basePrice:
              description: >-
                The value of this product base price (e.g. excluding deposit
                fee) in the minor unit of the currency.
              format: integer
              type: number
            depositFee:
              description: >-
                The value of this product deposit fee in the minor unit of the
                currency.
              format: integer
              type: number
            currencyCode:
              description: The currency of this product price in ISO 4217 format.
              type: string
          type: object
        fullName:
          description: The full name of the product
          type: string
        productId:
          description: The id of the product
          type: string
        numberOfServings:
          $ref: '#/components/schemas/SearchNumberOfServingsYaml'
        energyContent:
          description: List of energy content details of product
          items:
            $ref: '#/components/schemas/SearchEnergyContentYaml'
          type: array
      example:
        price: 799
        productPrice:
          basePrice: 700
          depositFee: 99
          currencyCode: GBP
        fullName: Chicken Korma
        productId: '289347'
        numberOfServings:
          min: 5
          max: 10
        energyContent:
          - unit: kcal
            min: 1000
            max: 1500
          - unit: kJ
            min: 4184
            max: 6276
    SearchRestaurantSearchResponseYaml:
      description: Restaurant details for a restaurant search result
      type: object
      properties:
        restaurants:
          description: Ordered list of restaurants
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SearchRestaurantSearchResponseItemYaml'
          type: array
      example:
        restaurants:
          - restaurantId: '110230'
            isSponsored: true
            products:
              - productId: '289347'
                fullName: Chicken Korma
                price: 799
              - productId: '563454'
                fullName: Chicken Madras
                price: 699
          - restaurantId: '229390'
            isSponsored: false
            products:
              - productId: '67832'
                fullName: BBQ Chicken Pizza
                price: 1099
                productPrice:
                  basePrice: 1000
                  depositFee: 99
                  currencyCode: GBP
                numberOfServings:
                  min: 5
                  max: 10
                energyContent:
                  - unit: kcal
                    min: 1000
                    max: 1500
                  - unit: kJ
                    min: 4184
                    max: 6276
              - productId: '23567'
                fullName: Chicken Burger
                price: 899
                productPrice:
                  basePrice: 899
                  depositFee: 0
                  currencyCode: GBP
    SearchRestaurantSearchResponseItemYaml:
      description: The main response from a restaurant search request
      type: object
      properties:
        isSponsored:
          description: >-
            Flag to indicate if the restaurant is sponsored, so has been
            promoted to the top of the results
          type: boolean
        restaurantId:
          description: The id of the restaurant
          type: string
        products:
          description: >-
            Ordered list of products available from the restaurant which matched
            the search term
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SearchRestaurantSearchProductYaml'
          type: array
      example:
        isSponsored: false
        restaurantId: '110230'
        products:
          - price: 799
            productPrice:
              basePrice: 700
              depositFee: 99
              currencyCode: GBP
            fullName: Chicken Korma
            productId: '289347'
            numberOfServings:
              min: 5
              max: 10
            energyContent:
              - unit: kcal
                min: 1000
                max: 1500
              - unit: kJ
                min: 4184
                max: 6276
          - price: 699
            productPrice:
              basePrice: 699
              depositFee: 0
              currencyCode: GBP
            fullName: Chicken Madras
            productId: '563454'
    SearchServiceTypesYaml:
      type: string
      enum:
        - any
        - delivery
        - collection
      default: any
    SharedDayOfWeekYaml:
      description: The day of week.
      enum:
        - sunday
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
      type: string
    SharedAddressAndGeopositionLowercaseYaml:
      allOf:
        - description: Represents an address with latitude and longitude
          properties:
            postcode:
              description: the postcode
              type: string
            name:
              description: the name
              type: string
            firstLine:
              description: The first line of the address
              type: string
            city:
              description: The city
              type: string
          type: object
        - $ref: '#/components/schemas/SharedGeopositionYaml'
    SharedGeoJsonPointYaml:
      description: The coordinates of a geographical location.
      required:
        - coordinates
        - type
      properties:
        coordinates:
          description: >-
            The only two elements are longitude and latitude precisely in that
            order and using decimal numbers.
          maxItems: 2
          minItems: 2
          type: array
          items:
            format: decimal
            type: number
        type:
          description: >-
            The type of geospatial data this represents. The only supported
            value is 'Point' in GeoJSON format as defined in [RFC
            7946](https://tools.ietf.org/html/rfc7946).
          enum:
            - point
          type: string
      type: object
      example:
        coordinates:
          - 51.501285
          - -0.142442
        type: point
    SharedGeopositionYaml:
      description: A geoposition.
      properties:
        longitude:
          description: The longitude.
          format: double
          type: number
        latitude:
          description: The latitude.
          format: double
          type: number
      x-api-version-from: 2017-10
      type: object
    SharedTenantYaml:
      description: The tenant.
      type: string
      pattern: ^[a-z]{2}$
      example: uk
    SkipmenueditorgatewaySkipMenuEditorGatewayRequestYaml:
      description: GraphQL request
      properties:
        variables:
          description: variables used in query
          type: object
        query:
          description: GraphQL statement
          type: string
      type: object
    SkipmenueditorgatewaySkipMenuEditorGatewayResponseYaml:
      description: GraphQL response
      properties:
        data:
          description: GraphQL data response
          type: object
        errors:
          description: GraphQL errors response
          items:
            type: object
          type: array
      type: object
    TagsRequestAssociatePartnerWithTagYaml:
      description: Associate a partner with a set of tags
      properties:
        tags:
          description: >-
            A collection representing the tags that should be assigned to the
            partner.
          nullable: false
          type: array
          items:
            description: A globally unique identifier for a tag.
            type: string
      type: object
      example:
        tags:
          - 01HAM1GP8BNATV66TQRTK3B582
          - 01H9P4YQ203FT729N406QFP5TS
    TagsRequestCreateTagYaml:
      description: A request to add tag.
      properties:
        type:
          description: The taxonomy that the tag belongs to.
          nullable: false
          type: string
          enum:
            - cuisine
            - vertical
        name:
          description: A human readable name of the tag.
          nullable: false
          type: string
        tenants:
          description: >-
            The tenants that the tag will be available in. Represented as a list
            of IE 2-letter lowercase codes each representing a market.
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SharedTenantYaml'
      type: object
      required:
        - type
        - name
      example:
        type: cuisine
        name: Pizza
        tenants:
          - uk
          - nl
    TagsResponsePartnerAssociatedTagsYaml:
      description: Get tag definition list
      properties:
        tags:
          description: Get tag definition list
          items:
            $ref: '#/components/schemas/TagsResponsePartnerTagDefinitionItemYaml'
          type: array
      type: object
      example:
        tags:
          - id: 01HAM1GP8BNATV66TQRTK3B582
            name: Pizza
            type: cuisine
            slug: pizza
    TagsResponsePartnerTagDefinitionItemYaml:
      description: Response body of tag definition
      properties:
        id:
          description: A globally unique identifier for the tag.
          nullable: false
          type: string
        type:
          description: The taxonomy that the tag belongs to.
          nullable: false
          type: string
          enum:
            - cuisine
            - vertical
        name:
          description: A human readable name of the tag.
          nullable: false
          type: string
        slug:
          description: A URL safe version of the tag name.
          nullable: false
          type: string
      type: object
      example:
        id: 01HAM1GP8BNATV66TQRTK3B582X
        type: cuisine
        name: Pizza
        slug: pizza
    TagsResponseTagDefinitionItemYaml:
      description: Response body of tag definition
      properties:
        id:
          description: A globally unique identifier for the tag.
          nullable: false
          type: string
        type:
          description: The taxonomy that the tag belongs to.
          nullable: false
          type: string
          enum:
            - cuisine
            - vertical
        name:
          description: A human readable name of the tag.
          nullable: false
          type: string
        supportedTenants:
          description: >-
            The markets where the tag can be used. Represented as a list of IE
            2-letter lowercase codes each representing a market.
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/SharedTenantYaml'
        slug:
          description: A URL safe version of the tag name.
          nullable: false
          type: string
      type: object
      example:
        id: 01HAM1GP8BNATV66TQRTK3B582X
        type: cuisine
        name: Pizza
        supportedTenants:
          - de
          - nl
        slug: pizza
    TagsResponseTagDefinitionsYaml:
      description: Tag definition list
      properties:
        tags:
          description: Tag definition list
          items:
            $ref: '#/components/schemas/TagsResponseTagDefinitionItemYaml'
          type: array
        paging:
          description: Consists of pagination information
          type: object
          properties:
            count:
              description: The total number of results
              format: int64
              type: integer
      type: object
      example:
        tags:
          - id: 01HAM1GP8BNATV66TQRTK3B582X
            name: Pizza
            type: cuisine
            supportedTenants:
              - de
              - nl
            slug: pizza
        paging:
          count: 50
    TakeawayErrorTakeaway400ErrorResponseYaml:
      description: A HTTP 400 error response
      properties:
        description:
          description: A description of the error.
          type: string
        errorCode:
          description: >-
            A value that helps identify this response back to logs, so we can
            easily find this specific fault.
          type: string
        validationErrors:
          description: Validation error messages for each field.
          additionalProperties:
            description: Field name that contains error.
            properties:
              errors:
                description: Error explanation.
                items:
                  type: string
                type: array
            type: object
          type: object
      type: object
    TakeawayErrorTakeaway4XxErrorResponseYaml:
      description: A HTTP 4xx error response
      properties:
        description:
          description: A description of the error.
          type: string
        errorCode:
          description: >-
            A value that helps identify this response back to logs, so we can
            easily find this specific fault.
          type: string
      type: object
    TakeawayErrorTakeaway500ErrorResponseYaml:
      description: A HTTP 500 error response
      properties:
        description:
          description: A description of the error.
          type: string
        errorCode:
          description: >-
            A value that helps identify this response back to logs, so we can
            easily find this specific fault.
          type: string
      type: object
    TakeawaypayEmployeesYaml:
      properties:
        id:
          description: User id
          type: string
        firstName:
          description: User first name
          type: string
        lastName:
          description: User last name
          type: string
        email:
          description: User email
          type: string
        phone:
          description: User phone number
          type: string
        countryCode:
          description: User country code
          type: string
        paymentToken:
          description: Token for action
          type: string
        lastUpdated:
          description: Datetime of the last operation
          format: date-time
          type: string
      type: object
    TakeawaypayTakeawayPayAccountLinkingUpdateRequestYaml:
      description: Request to link Takeaway Pay employee with JE account.
      properties:
        consumer:
          description: >-
            Details of the consumer account to be linked with Takeaway Pay
            employee account.
          nullable: true
          properties:
            id:
              description: Id of the consumer.
              type: string
              nullable: true
          type: object
      type: object
    TakeawaypayTakeawayPayEmployeeResponseYaml:
      description: Details of a Takeaway Pay employee.
      properties:
        available:
          description: Account linking available.
          type: boolean
      type: object
    TakeawaypayTakeawayPayNotificationModelYaml:
      description: Information about Takeaway Pay users activation.
      properties:
        actionTime:
          description: Datetime of action.
          format: date-time
          type: string
        employees:
          description: List of employees for applying action.
          items:
            $ref: '#/components/schemas/TakeawaypayEmployeesYaml'
          type: array
        employeeIds:
          description: List of employee ids for applying action.
          items:
            type: string
          type: array
      type: object
    TakeawaypayTakeawayPayNotificationTypesYaml:
      enum:
        - upsert
        - activation
        - deactivation
      type: string
    TokenwebAuthorizeResponseYaml:
      description: The response object for the `authorize` endpoint.
      type: object
    TokenwebTokenRequestYaml:
      description: The request object for retrieving an access token.
      properties:
        code:
          description: The authorisation code received from the authorisation server.
          nullable: false
          type: string
        client_id:
          description: >-
            Only required if the client is not authenticating with the same
            authorisation server.
          nullable: true
          type: string
        grant_type:
          description: OAuth grant type. Value MUST be set to `authorization_code`.
          nullable: false
          type: string
        redirect_uri:
          description: URI to form the path for a redirect response.
          nullable: false
          type: string
        code_verifier:
          description: >-
            High-entropy cryptographic random string with a minimum length of 43
            characters and a maximum length of 128 characters.
          nullable: true
          type: string
      example:
        code: D4DE0039-8193-48A1-BA2D-49E6F0C8ADFF
        client_id: example_clientid
        grant_type: authorization_code
        redirect_uri: example.com
        code_verifier: kPjhpIVnKGBq3YvnjLDBo65pi91YI4ReJoRV1WMryJa
      type: object
    TokenwebTokenRequestErrorResponseYaml:
      description: The error response object for token request endpoint.
      properties:
        error:
          description: >-
            Error code. Can be one of: `invalid_request`, `invalid_client`,
            `invalid_grant`, `unauthorized_client`, `unsupported_grant_type`,
            `invalid_scope`.
          type: string
      example:
        error: invalid_request
      type: object
    TokenwebTokenRequestSuccessResponseYaml:
      description: The success response object for token request endpoint.
      properties:
        access_token:
          description: The JWT access token.
          type: string
      example:
        access_token: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      type: object
    TokenwebWellKnownConfigurationResponseYaml:
      description: The success response object for the well-known endpoint.
      properties:
        issuer:
          description: URL used to identify the issuer.
          nullable: false
          type: string
        token_endpoint:
          description: URL of the token endpoint.
          nullable: false
          type: string
        response_types_supported:
          description: >-
            List containing the OAuth 2.0 `response_type` values which are
            supported.
          nullable: true
          items:
            type: string
          type: array
        jwks_uri:
          description: >-
            URL of the JSON Web Key Set. This contains the signing keys used to
            validate signatures.
          nullable: false
          type: string
        authorization_endpoint:
          description: URL of the authorisation endpoint.
          nullable: false
          type: string
        token_endpoint_auth_methods_supported:
          description: >-
            List containing the Client Authentication methods supported by this
            Token Endpoint.
          nullable: true
          items:
            type: string
          type: array
        userinfo_endpoint:
          description: URL of the user info endpoint.
          nullable: false
          type: string
        scopes_supported:
          description: List containing the scope values that the server supports.
          nullable: true
          items:
            type: string
          type: array
      example:
        issuer: http://uk-tokenweb.cwa.je-labs.com
        token_endpoint: http://uk-tokenweb.cwa.je-labs.com/applications/tokenweb/token
        response_types_supported:
          - code
        jwks_uri: http://uk-tokenweb.cwa.je-labs.com/.well-known/jwks.json
        authorization_endpoint: http://uk-tokenweb.cwa.je-labs.com/applications/tokenweb/authorize
        token_endpoint_auth_methods_supported:
          - client_secret_basic
        userinfo_endpoint: http://uk-tokenweb.cwa.je-labs.com/userinfo
        scopes_supported:
          - ''
      type: object
    TwilioivrCallReceivedOrUpdatedModelYaml:
      properties:
        tags:
          description: >-
            Open-ended tag collection, for on-the-fly adjustment of data
            slicing; comma separated.
          type: string
        status:
          description: Contains the status of the order, if known
          type: string
        orderId:
          description: Legacy/friendly Order ID
          type: string
        callSid:
          description: UID used by Twilio, identifying a phone call
          type: string
        resolution:
          description: Resolution
          type: string
        callerId:
          description: Caller's phone number
          type: string
        callStep:
          description: CallStep
          type: string
        queryType:
          description: QueryType
          type: string
      type: object
    TwilioivrCallerInformationCallRequestYaml:
      properties:
        calledState:
          description: The state of the called sender
          type: string
        direction:
          description: A string describing the direction of the call
          type: string
        digits:
          description: The digits that caller entered on their keypad
          type: string
        callSid:
          description: A unique identifier for the call, generated by Twilio
          type: string
        to:
          description: The phone number, SIP address, or client identifier to call
          type: string
        apiVersion:
          description: The Twilio API version used to start a new TwiML session
          type: string
        callerCountry:
          description: The country of the called sender
          type: string
        callStatus:
          description: A descriptive status for the call
          type: string
        accountSid:
          description: The SID of the Twilio Account that created the Call resource
          type: string
        finishedOnKey:
          description: >-
            Gets or sets a value that caller pressed to submit their digits
            input
          type: string
        fromCountry:
          description: The country of the called sender
          type: string
        caller:
          description: The name or phone number of the caller
          type: string
        calledCountry:
          description: The country of the called sender
          type: string
        called:
          description: The caller identifier
          type: string
        from:
          description: The phone number or client identifier to use as the caller id
          type: string
        toCountry:
          description: The country of the recipient
          type: string
      type: object
    TwilioivrTwiMlResultYaml:
      properties:
        data:
          description: >-
            set of special TwiML instructions defined by Twilio that will be
            executed
          readOnly: true
          type: string
      type: object
    TwiliologginglogsinkTwilioDebuggingEventRequestYaml:
      description: >-
        Information about errors and warnings which could occur on Twilio
        account
      properties:
        timestamp:
          description: Time of occurrence of the Debugger event
          type: string
          example: '2020-01-01T23:28:54.000Z'
        parentAccountSid:
          description: >-
            Unique identifier of the Parent Account. This parameter only exists
            if the above account is a sub account
          type: string
          example: ACxxxxxxxxxxxxxxxxxxxxxxxx
        sid:
          description: Unique identifier of the Debugger event
          type: string
          example: NOxxxxx
        payloadType:
          description: Type of the payload
          type: string
          example: application/json
        payload:
          description: >-
            JSON data specific to the Debugging Event. More details -
            https://www.twilio.com/docs/usage/troubleshooting/debugging-event-webhooks#payload
          type: string
          example: >-
            {resource_sid: CAxxxx, service_sid: SSxxxx, error_code: 13227
            ,webhook: null, more_info: {  Msg : No International Permission. ,
            ErrorCode : 13227 , LogLevel : WARN }}
        level:
          description: >-
            Severity of the Debugger event. Possible values are Error and
            Warning
          type: string
          example: Error
        accountSid:
          description: Unique identifier of the account that generated the Debugger event
          type: string
          example: ACxxxxxxxxxxxxxxxxxxxxxxxx
      type: object
    VoucherCodeTypeYaml:
      description: The type of voucher code
      x-enumNames:
        - Unknown
        - DynamicSingleUse
        - StaticMultipleUse
      enum:
        - 0
        - 1
        - 2
      type: integer
    VoucherConsumerRestrictionsYaml:
      type: object
      properties:
        status:
          nullable: true
          $ref: '#/components/schemas/VoucherConsumerStatusV2Yaml'
    VoucherConsumerStatusV2Yaml:
      description: The consumer status
      type: string
      format: enum
      enum:
        - new
        - returning
    VoucherConsumerStatusYaml:
      description: ''
      x-enumNames:
        - Undefined
        - NewConsumer
        - ReturnConsumer
      enum:
        - 0
        - 1
        - 2
      type: integer
    VoucherConsumerVoucherDiscountYaml:
      type: object
      properties:
        type:
          description: Voucher discount type.
          format: enum
          enum:
            - amount
            - percentage
            - deliveryFee
          type: string
        percent:
          description: The percent of the discount.
          nullable: true
          type: number
          format: decimal
        amount:
          description: The absolute amount of the discount (in minor currency units).
          nullable: true
          format: int32
          type: integer
    VoucherConsumerVoucherResponseYaml:
      type: object
      properties:
        code:
          description: The voucher code.
          nullable: true
          type: string
        currency:
          description: The currency code in ISO-4217 format.
          nullable: true
          type: string
          minLength: 3
          maxLength: 3
        discount:
          description: Voucher discount.
          oneOf:
            - $ref: '#/components/schemas/VoucherConsumerVoucherDiscountYaml'
        restrictions:
          description: Voucher restrictions.
          oneOf:
            - $ref: '#/components/schemas/VoucherConsumerVoucherRestrictionsYaml'
        usage:
          description: Voucher usage summary.
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherConsumerVoucherUsageYaml'
    VoucherConsumerVoucherRestrictionsYaml:
      type: object
      properties:
        endDate:
          description: The end date (UTC) of the voucher.
          format: date-time
          type: string
        minimumBasketTotal:
          description: >-
            The minimum basket total in minor currency units the voucher is
            valid for
          nullable: true
          format: int32
          type: integer
    VoucherConsumerVoucherUsageYaml:
      type: object
      required:
        - type
      properties:
        type:
          description: >
            Use policy type.  The value defined on voucher creation by
            `usePolicy.type`. 
          type: string
          example: unlimited
        autoApplicable:
          description: Whether to apply voucher automatically on checkout.
          type: boolean
          default: false
    VoucherConsumerVouchersResponseYaml:
      type: object
      properties:
        data:
          description: The list of vouchers distributed to customer.
          items:
            $ref: '#/components/schemas/VoucherConsumerVoucherResponseYaml'
          type: array
    VoucherCreateVoucherRequestYaml:
      type: object
      properties:
        name:
          description: Voucher name.
          type: string
        createdBy:
          description: The source system creating the voucher
          type: string
        holder:
          $ref: '#/components/schemas/VoucherVoucherHolderYaml'
        discount:
          $ref: '#/components/schemas/VoucherVoucherDiscountYaml'
        restrictions:
          $ref: '#/components/schemas/VoucherRestrictionsYaml'
        usePolicy:
          $ref: '#/components/schemas/VoucherUsePolicyYaml'
      x-konfig-properties:
        holder:
          description: The voucher holder's identity
        discount:
          description: The details of the discount (amount / type etc)
        restrictions:
          description: The parameters that determine the restrictions of the voucher
        usePolicy:
          description: The use policy required for multi-use vouchers
          nullable: true
    VoucherCreateVoucherResponseYaml:
      type: object
      properties:
        code:
          description: The voucher code.
          type: string
      example:
        code: ABCD-1234
    VoucherDayOfWeekYaml:
      description: The day of the week
      x-enumNames:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
    VoucherDeliveryModelV2Yaml:
      description: The delivery model (applicable for delivery service type)
      type: string
      format: enum
      enum:
        - marketplace
        - logistics
    VoucherDiscountYaml:
      properties:
        Amount:
          description: The amount of discount
          format: decimal
          type: number
        VoucherType:
          description: The type of discount
          $ref: '#/components/schemas/VoucherVoucherTypeYaml'
      type: object
    VoucherGroupTypeYaml:
      description: The type of the voucher group (e.g. Dynamically Created Single Use)
      x-enumNames:
        - Unknown
        - DynamicSingleUse
        - StaticMultipleUse
      enum:
        - 0
        - 1
        - 2
      type: integer
    VoucherOrderNumberValidityYaml:
      properties:
        NumberOfOrders:
          description: The number of orders for the comparison
          nullable: true
          format: int32
          type: integer
        ComparisonOperator:
          description: The comparison operator (e.g. >, <, ==)
          nullable: true
          type: string
      type: object
    VoucherRedeemVoucherRequestYaml:
      type: object
      properties:
        orderId:
          description: The order ID
          type: string
        restaurantId:
          description: The restaurant ID associated with the order
          type: string
        userId:
          description: The user's unique ID that applied voucher
          type: string
        deliveryFee:
          description: >-
            The delivery fee associated with the order in minor currency units
            (such as cents)
          type: integer
          format: int32
        basketTotal:
          description: >-
            The basket total associated with the order in minor currency units
            (such as cents)
          type: integer
          format: int32
    VoucherRedeemVoucherResponseYaml:
      type: object
      properties:
        voucherId:
          description: The unique voucher external identifier
          type: string
        name:
          description: >-
            The voucher name assigned during creation (should not be displayed
            to the customer)
          type: string
        displayName:
          description: The user friendly voucher name (could be displayed to the customer)
          type: string
        amount:
          description: The redemption amount in minor currency units (such as cents)
          type: integer
          format: int32
          minimum: 1
        currency:
          description: The currency code in ISO-4217 format
          type: string
        endDate:
          description: The end date of the voucher
          type: string
          format: date-time
    VoucherRestaurantBrandsYaml:
      properties:
        BrandNames:
          description: The restaurant brand names the voucher is valid for
          items:
            type: string
          type: array
        Action:
          description: Include or exclude the restaurant brand names
          format: enum
          enum:
            - Include
            - Exclude
          type: string
      type: object
    VoucherRestrictionsYaml:
      type: object
      properties:
        timeline:
          $ref: '#/components/schemas/VoucherTimelineRestrictionsYaml'
        consumer:
          $ref: '#/components/schemas/VoucherConsumerRestrictionsYaml'
        restaurants:
          description: >-
            The parameters that determine the restaurant restrictions of the
            voucher
          nullable: true
          type: object
          properties:
            ids:
              description: Eligible restaurants
              type: array
              minItems: 1
              maxItems: 500
              items:
                type: string
            exclude:
              description: Whether to exclude the restaurants
              type: boolean
              default: false
        brands:
          description: >-
            The parameters that determine the restaurant brand restrictions of
            the voucher
          nullable: true
          type: object
          properties:
            names:
              description: Eligible restaurant brand name(s)
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
            exclude:
              description: Whether to exclude the restaurant brands
              type: boolean
              default: false
        platforms:
          description: Eligible platforms
          nullable: true
          type: array
          items:
            type: string
        postalCodePrefixes:
          description: Eligible postal code prefixes
          nullable: true
          type: array
          maxItems: 1000
          items:
            type: string
        minimumBasketTotal:
          description: Eligible minimum of basket total in minor currency units
          nullable: true
          type: integer
          format: int32
        serviceType:
          $ref: '#/components/schemas/VoucherServiceTypeV2Yaml'
        deliveryModel:
          $ref: '#/components/schemas/VoucherDeliveryModelV2Yaml'
        cuisines:
          description: Eligible cuisines
          nullable: true
          type: object
          properties:
            ids:
              description: Eligible cuisine id(s)
              type: array
              items:
                type: string
            exclude:
              description: Whether to exclude the cuisines
              type: boolean
              default: false
      x-konfig-properties:
        timeline:
          description: >-
            The parameters that determine the timeline restrictions of the
            voucher
        consumer:
          description: >-
            The parameters that determine the consumer restrictions of the
            voucher
          nullable: true
        serviceType:
          description: Eligible service type
          nullable: true
        deliveryModel:
          description: Eligible delivery model
          nullable: true
    VoucherServiceTypeV2Yaml:
      description: The order service type
      type: string
      format: enum
      enum:
        - collection
        - delivery
    VoucherServiceTypeYaml:
      description: The service type for the voucher (e.g. Delivery, collection)
      x-enumNames:
        - Collection
        - Delivery
      enum:
        - 1
        - 2
      type: integer
    VoucherTimelineRestrictionsYaml:
      type: object
      properties:
        startDate:
          description: The start date and time of the voucher
          type: string
          format: date-time
        endDate:
          description: The end date and time of the voucher
          type: string
          format: date-time
        days:
          description: The days of the week the voucher is valid for
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SharedDayOfWeekYaml'
        hours:
          description: The hours of the day the voucher is valid for
          nullable: true
          type: object
          properties:
            from:
              description: The time the voucher is valid from
              type: string
              format: time
            to:
              description: The time the voucher is valid to
              type: string
              format: time
    VoucherUsePolicyYaml:
      properties:
        type:
          description: The type of use policy
          nullable: true
          type: string
          example: unlimited
      type: object
    VoucherValidateVoucherRequestYaml:
      type: object
      properties:
        restaurantId:
          description: The restaurant ID associated with the order
          type: string
        userId:
          description: The user's unique ID that applied voucher
          type: string
        deliveryFee:
          description: >-
            The delivery fee associated with the order in minor currency units
            (such as cents)
          type: integer
          format: int32
        basketTotal:
          description: >-
            The basket total associated with the order in minor currency units
            (such as cents)
          type: integer
          format: int32
    VoucherValidateVoucherResponseYaml:
      type: object
      properties:
        voucherId:
          description: The unique voucher external identifier
          type: string
        name:
          description: >-
            The voucher name assigned during creation (should not be displayed
            to the customer)
          type: string
        displayName:
          description: The user friendly voucher name (could be displayed to the customer)
          type: string
        amount:
          description: The redemption amount in minor currency units (such as cents)
          type: integer
          format: int32
          minimum: 1
        currency:
          description: The currency code in ISO-4217 format
          type: string
        endDate:
          description: The end date and time of the voucher
          type: string
          format: date-time
    VoucherValidityYaml:
      properties:
        ValidOnDays:
          description: The days of the week the voucher is valid on
          nullable: true
          items:
            $ref: '#/components/schemas/VoucherDayOfWeekYaml'
          type: array
        MinimumSpend:
          description: The minimum spend to use the voucher
          nullable: true
          format: decimal
          type: number
        EndDate:
          description: The end date of the voucher
          nullable: true
          format: date-time
          type: string
        RestrictedToConsumerStatus:
          description: >-
            Whether the voucher is restricted to new customers, returning
            customers etc
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherConsumerStatusYaml'
        OrderNumberValidity:
          description: >-
            The number of orders a customer has placed to satisfy the
            requirements of the voucher
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherOrderNumberValidityYaml'
        ServiceType:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherServiceTypeYaml'
        DeliveryModel:
          description: The delivery model for the voucher
          nullable: true
          format: enum
          enum:
            - Marketplace
            - Logistics
          type: string
        PostCode:
          description: The post code applicable to the order
          nullable: true
          type: string
        StartDate:
          description: The start date of the voucher
          nullable: true
          format: date-time
          type: string
        Platform:
          description: The order platform using the voucher
          nullable: true
          type: string
        RestaurantBrands:
          description: The restaurant brands the voucher is restricted to
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherRestaurantBrandsYaml'
        IncludeRestaurantIds:
          description: The restaurant ids the voucher is valid for
          nullable: true
          items:
            type: string
          type: array
        ExcludeRestaurantIds:
          description: The restaurant ids the voucher is not valid for
          nullable: true
          items:
            type: string
          type: array
        ValidToHour:
          description: Whether time the voucher is valid to
          nullable: true
          format: time-span
          type: string
        ValidFromHour:
          description: Whether time the voucher is valid from
          nullable: true
          format: time-span
          type: string
        PaymentOptionTypes:
          description: The payment options the voucher is restricted to
          nullable: true
          items:
            type: string
          type: array
        CuisineIds:
          description: The cuisine ids the voucher is valid for
          nullable: true
          items:
            type: string
          type: array
      type: object
    VoucherVoucherYaml:
      properties:
        CodeType:
          $ref: '#/components/schemas/VoucherCodeTypeYaml'
        Lock:
          description: If the voucher is locked and what it is locked to
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherVoucherLockYaml'
        Code:
          description: The voucher code
          nullable: true
          type: string
        PaymentOptionTypes:
          description: The payment options the voucher is restricted to
          nullable: true
          items:
            type: string
          type: array
        Created:
          description: The created time (UTC) of the voucher
          format: date-time
          type: string
        CreatedBy:
          description: The creator of the voucher
          nullable: true
          type: string
        Id:
          description: The voucher id
          format: int32
          type: integer
      type: object
    VoucherVoucherDiscountYaml:
      type: object
      properties:
        amount:
          description: The amount of discount in minor units (e.g. 1000 cents = $10)
          type: integer
          format: int32
        type:
          description: The type of discount
          type: string
          format: enum
          enum:
            - absolute
            - percentage
            - deliveryFee
    VoucherVoucherGroupYaml:
      properties:
        Id:
          description: The Id of the voucher group
          format: int32
          type: integer
        Validity:
          description: The parameters that determine the validity of the voucher group
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherValidityYaml'
        StaticCode:
          description: >-
            The static code of the voucher group (will be normalised as part of
            the creation)
          nullable: true
          type: string
        Source:
          description: The source system creating the voucher group
          nullable: true
          type: string
        CreatedBy:
          description: The creator of the voucher group
          nullable: true
          type: string
        Hidden:
          description: Whether the voucher group is flagged as hidden
          type: boolean
        Discount:
          description: The details of the discount (amount / type etc)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherDiscountYaml'
        Inactive:
          description: Whether the voucher group is flagged as inactive
          type: boolean
        Archived:
          description: Whether the voucher group is flagged as archived
          type: boolean
        Updated:
          description: The updated time (UTC) of the voucher group
          format: date-time
          type: string
        GroupType:
          $ref: '#/components/schemas/VoucherGroupTypeYaml'
        Name:
          description: The name of the voucher group
          nullable: true
          type: string
        Created:
          description: The created time (UTC) of the voucher group
          format: date-time
          type: string
      type: object
    VoucherVoucherHolderYaml:
      type: object
      properties:
        globalUserId:
          description: The user's globally unique ID.
          type: string
          example: 8It2lEaJjG82nJtxO00Iab0CoF0=
    VoucherVoucherLockYaml:
      properties:
        RestaurantId:
          description: The restaurant id
          format: int32
          type: integer
        OrderId:
          description: The Order Id the voucher is locked to
          nullable: true
          type: string
        Locked:
          description: The UTC date it was locked
          nullable: true
          format: date-time
          type: string
        ConsumerStatus:
          description: The Customer Status (i.e. new customers, returning customers etc)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherConsumerStatusYaml'
        OrderPlacedDateWithUtcOffset:
          description: The order placed date
          nullable: true
          format: date-time
          type: string
        CuisinesIds:
          description: The number of orders
          nullable: true
          items:
            type: string
          type: array
        CustomerId:
          description: The Customer Id the voucher is locked to
          nullable: true
          type: string
        Consumed:
          description: The UTC date it was consumed
          nullable: true
          format: date-time
          type: string
        State:
          $ref: '#/components/schemas/VoucherVoucherStatesYaml'
        ServiceType:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VoucherServiceTypeYaml'
        VoucherId:
          description: The voucher id
          format: int32
          type: integer
        DiscountApplied:
          description: The Discount Applied
          format: decimal
          type: number
        PostCode:
          description: The post code
          nullable: true
          type: string
        Platform:
          description: The order platform
          nullable: true
          type: string
        OrderAmount:
          description: The order amount
          format: decimal
          type: number
        PaymentOptionType:
          description: The payment option
          nullable: true
          type: string
        NumberOfOrders:
          description: The number of orders
          nullable: true
          format: int32
          type: integer
        DeliveryFee:
          description: The delivery fee
          format: decimal
          type: number
      type: object
    VoucherVoucherStatesYaml:
      description: The current state
      x-enumNames:
        - Available
        - Locked
        - Consumed
      enum:
        - 0
        - 1
        - 2
      type: integer
    VoucherVoucherTypeYaml:
      description: Type of voucher
      x-enumNames:
        - Absolute
        - Percentage
        - DeliveryFee
      enum:
        - 0
        - 1
        - 2
      type: integer
    WebhooksCallbacksExternalRequestResponseYaml:
      properties:
        message:
          description: Request response message
          type: string
        status:
          description: Indicates success or failure of async webhook request
          type: string
          format: enum
          enum:
            - Success
            - Failure
        data:
          description: Request response details
          format: binary
          type: string
      type: object
      example:
        message: Success
        status: Success
    Zoneprofile400ZoneProfileErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Invalid Request
          type: string
        error:
          description: Error Title
          example: Invalid Request
          type: string
      type: object
    Zoneprofile401ZoneProfileErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Unauthorized Request
          type: string
        error:
          description: Error Title
          example: Unauthorized Request
          type: string
      type: object
    Zoneprofile404ZoneProfileErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Zone Profile Settings not found
          type: string
        error:
          description: Error Title
          example: Zone Profile Settings not found
          type: string
      type: object
    Zoneprofile500ZoneProfileErrorResponseYaml:
      description: The error object returned when an operation fails
      properties:
        message:
          description: Error Message Text
          example: Internal Server Error
          type: string
        error:
          description: Error Title
          example: Internal Server Error
          type: string
      type: object
    ZoneprofileBenderFlexStateTypeYaml:
      description: >-
        <p>The flex state type changes according to the exponential moving
        average and is used as a reference to bring more couriers to suffice the
        demand in a given delivery zone.</p> <p>If the flex state type is "Off",
        it means no shifts will be offered for the delivery zone.</p> <p>If the
        state is "CLOSED", only scheduled shifts will be allowed for the
        delivery zone.</p> <p>If the state is "SEEKING", the shift offers are
        going to be made across the courier network in order to suffice the
        current demand.</p> <p>If the state is "OPEN", it means demand is high
        and couriers from all over the courier network are allowed to create
        shifts for themselves to suffice the current demand.</p> <p>If the state
        is "CODE_RED", it means not only can everyone create shifts for
        themselves for the delivery zone but also couriers from other delivery
        zones might reallocate to help suffice the demand of that particular
        delivery zone.</p>
      enum:
        - CODE_RED
        - OPEN
        - SEEKING
        - CLOSED
        - 'Off'
      type: string
    ZoneprofileZoneProfileYaml:
      description: The zone profile object for a given delivery zone.
      properties:
        averageAssignableJobLoad:
          description: >-
            The burden over the couriers in a delivery zone. The average
            assignable job load is calculated by the sum of all jobs assigned to
            the couriers divided by the delivery zone's total assignable courier
            count.
          format: double
          example: 0.7
          type: number
        ema:
          description: >-
            The simple moving average is the usage for a given delivery zone,
            which is calculated by using the sum of all on-shift utilisation (
            percentage of time a courier spends working on orders during their
            shift ) at the time, divided by the number of time periods gathered
            from all data points. Differently from simple moving average,
            exponential moving average also represents the usage however its
            equation places a greater weight on the most recent data points.
          format: integer
          example: 70
          type: number
        bender:
          description: Bender On/Off object
          properties:
            enabled:
              description: Bender Enabled/Disabled status
              type: boolean
          type: object
        zoneId:
          description: Zone profile delivery zone id.
          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d
          type: string
        flexStateType:
          $ref: '#/components/schemas/ZoneprofileBenderFlexStateTypeYaml'
      type: object
    LogisticManagementTakePoolOfflineRequest:
      properties:
        reason:
          description: Reason of the offline event.
          enum:
            - manual
          type: string
      type: object
    LogisticManagementRemoveDeliveryPoolRestaurantsRequest:
      type: object
      properties:
        restaurants:
          description: A list of Just Eat restaurant ids served by the delivery pool.
          items:
            format: int32
            type: number
          type: array
      example:
        restaurants:
          - 123
          - 456
    JetConnectForManageOrderStatusReceiveFinalPickedOrderRequest:
      type: object
      required:
        - id
        - third_party_order_reference
        - type
        - posLocationId
        - location
        - menu_reference
        - items
        - created_at
        - channel
        - payment_method
        - payment
        - promotions
      properties:
        id:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterIdYaml'
        third_party_order_reference:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterThirdPartyOrderReferenceYaml
        type:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterTypeYaml'
        posLocationId:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPosLocationIdYaml
        location:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterLocationYaml
        menu_reference:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterMenuReferenceYaml
        items:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterItemsYaml'
        created_at:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterCreatedAtYaml
        channel:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterChannelYaml
        collect_at:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterCollectAtYaml
        collection_notes:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterCollectionNotesYaml
        deliver_at:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterDeliverAtYaml
        delivery_notes:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterDeliveryNotesYaml
        kitchen_notes:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterKitchenNotesYaml
        payment_method:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPaymentMethodYaml
        tender_type:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterTenderTypeYaml
        payment:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPaymentYaml
        driver:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterPersonYaml'
        collector:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterPersonYaml'
        delivery:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterDeliveryYaml
        extras:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterExtrasYaml'
        promotions:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPromotionsYaml
      x-examples:
        example-1:
          id: 38bbeb45-f520-4438-a44f-0fcdbb29e166
          third_party_order_reference: '22721763'
          type: delivery-by-delivery-partner
          posLocationId: AKZ12
          location:
            id: 1296
            timezone: Europe/London
          menu_reference: ''
          items:
            - description: ''
              name: Cheeseburger
              plu: M2
              price: 1700
              notes: ''
              children:
                - description: ''
                  name: Extra Sauce
                  plu: R3
                  price: 100
                  unitDepositAmount: 10
          created_at: '1606780145'
          channel:
            name: Just Eat
            id: 32
          collect_at: '1606780980'
          collection_notes: Driver will be wearing a blue shirt
          kitchen_notes: ''
          payment_method: CARD
          tender_type: Flyt
          payment:
            items_in_cart:
              inc_tax: 2160
              tax: 360
            adjustments: []
            final:
              inc_tax: 2160
              tax: 360
            deposit: 10
          driver:
            first_name: John
            last_name: Smith
            phone_number: 555-111-3344
          delivery:
            first_name: '****************'
            last_name: '****************'
            phone_number: 55555 113 000
            phone_masking_code: ''
            line_one: '**********************'
            line_two: ''
            city: '*****'
            postcode: '*****'
            email: customer@email.hidden
            coordinates:
              latitude: 49.898498728223224
              longitude: -97.13560152293131
              latitude_as_string: '49.8984'
              longitude_as_string: '-122.2966'
          extras: {}
          promotions:
            - type: FREE_ITEM_MIN_BASKET
              items:
                - description: ''
                  name: Crispy Chicken Twist
                  plu: ''
                  price: 419
                  notes: ''
                  children: []
              promotionId: string
              discountValue: 419
              offerId: string
    JetConnectForManageOrderStatusReceiveOrderPostRequest:
      type: object
      required:
        - id
        - third_party_order_reference
        - type
        - posLocationId
        - location
        - menu_reference
        - items
        - created_at
        - channel
        - payment_method
        - payment
        - promotions
      properties:
        id:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterIdYaml'
        third_party_order_reference:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterThirdPartyOrderReferenceYaml
        type:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterTypeYaml'
        posLocationId:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPosLocationIdYaml
        location:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterLocationYaml
        menu_reference:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterMenuReferenceYaml
        items:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterItemsYaml'
        created_at:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterCreatedAtYaml
        channel:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterChannelYaml
        collect_at:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterCollectAtYaml
        collection_notes:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterCollectionNotesYaml
        deliver_at:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterDeliverAtYaml
        delivery_notes:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterDeliveryNotesYaml
        kitchen_notes:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterKitchenNotesYaml
        payment_method:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPaymentMethodYaml
        tender_type:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterTenderTypeYaml
        payment:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPaymentYaml
        driver:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterPersonYaml'
        collector:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterPersonYaml'
        delivery:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterDeliveryYaml
        extras:
          $ref: '#/components/schemas/JetConnectOrderInjectionStatusUpdaterExtrasYaml'
        promotions:
          $ref: >-
            #/components/schemas/JetConnectOrderInjectionStatusUpdaterPromotionsYaml
      x-examples:
        example-1:
          id: 38bbeb45-f520-4438-a44f-0fcdbb29e166
          third_party_order_reference: '22721763'
          type: delivery-by-delivery-partner
          posLocationId: AKZ12
          location:
            id: 1296
            timezone: Europe/London
          menu_reference: ''
          items:
            - description: ''
              name: Cheeseburger
              plu: M2
              price: 1700
              notes: ''
              children:
                - description: ''
                  name: Extra Sauce
                  plu: R3
                  price: 100
                  unitDepositAmount: 10
          created_at: '1606780145'
          channel:
            name: Just Eat
            id: 32
          collect_at: '1606780980'
          collection_notes: Driver will be wearing a blue shirt
          kitchen_notes: ''
          payment_method: CARD
          tender_type: Flyt
          payment:
            items_in_cart:
              inc_tax: 2160
              tax: 360
            adjustments: []
            final:
              inc_tax: 2160
              tax: 360
            deposit: 10
          driver:
            first_name: John
            last_name: Smith
            phone_number: 555-111-3344
          delivery:
            first_name: '****************'
            last_name: '****************'
            phone_number: 55555 113 000
            phone_masking_code: ''
            line_one: '**********************'
            line_two: ''
            city: '*****'
            postcode: '*****'
            email: customer@email.hidden
            coordinates:
              latitude: 49.898498728223224
              longitude: -97.13560152293131
              latitude_as_string: '49.8984'
              longitude_as_string: '-122.2966'
          extras: {}
          promotions:
            - type: FREE_ITEM_MIN_BASKET
              items:
                - description: ''
                  name: Crispy Chicken Twist
                  plu: ''
                  price: 419
                  notes: ''
                  children: []
              promotionId: string
              discountValue: 419
              offerId: string
    PartnerManagementGetBrandOrdersResponse:
      type: array
      items:
        $ref: '#/components/schemas/JetConnectOrderReportingConnectorOrderDetailsYaml'
    LogisticManagementGetDeliveryPoolsResponse:
      description: Describes a delivery pool
      properties:
        delivery-pool-id:
          description: Details of a delivery pool id
          properties:
            name:
              description: The name of the pool, used by operations teams, in reports, etc.
              type: string
            restaurants:
              description: A list of Just Eat restaurant ids served by the delivery pool.
              items:
                format: int32
                type: number
              type: array
          type: object
      type: object
    LogisticManagementCreateDeliveryPoolResponse:
      type: object
      properties:
        name:
          type: array
          items:
            type: string
            example: '''Name'' should not be empty'
      example:
        name:
          - '''Name'' should not be empty'
    LogisticManagementGetPickupEtaResponse:
      properties:
        bestGuess:
          description: Your best estimation (hh:mm:ss)
          type: string
      type: object
    LogisticManagementGetDeliveryPoolResponse:
      properties:
        name:
          description: The name of the pool, used by operations teams, in reports, etc.
          type: string
        restaurants:
          description: A list of Just Eat restaurant ids served by the delivery pool.
          items:
            format: int32
            type: number
          type: array
      type: object
    LogisticManagementModifyDeliveryPoolResponse:
      type: object
      properties:
        restaurants:
          description: A list of Just Eat restaurant ids served by the delivery pool.
          type: array
          items:
            format: int32
            type: number
        name:
          description: The name of the pool, used by operations teams, in reports, etc.
          type: string
    LogisticManagementModifyDeliveryPool400Response:
      type: object
      properties:
        name:
          type: array
          items:
            type: string
            example: '''Name'' should not be empty'
      example:
        name:
          - '''Name'' should not be empty'
    LogisticManagementReplaceDeliveryPoolResponse:
      properties:
        name:
          description: The name of the pool, used by operations teams, in reports, etc.
          type: string
        restaurants:
          description: A list of Just Eat restaurant ids served by the delivery pool.
          items:
            format: int32
            type: number
          type: array
      type: object
    LogisticManagementReplaceDeliveryPool400Response:
      type: object
      properties:
        name:
          type: array
          items:
            type: string
            example: '''Name'' should not be empty'
      example:
        name:
          - '''Name'' should not be empty'
    LogisticManagementGetDeliveryPoolStatusResponse:
      properties:
        status:
          description: status of the pool (online/offline)
          type: string
        events:
          items:
            description: Restaurant status event view
            properties:
              createdUtc:
                description: When the event was created
                type: string
                format: date-time
              eventType:
                description: Type of event
                type: string
            type: object
          type: array
      type: object
    LogisticManagementGetRestaurantDeliveryFeesResponse:
      nullable: true
      properties:
        restaurants:
          description: Collection of restaurants for which delivery fees were found.
          items:
            $ref: '#/components/schemas/DeliveryfeesRestaurantDeliveryFeesYaml'
          type: array
      type: object
    ApiPartnerManagementGatewayOrderReadyForCollectionPutResponse:
      description: An event showing an order is ready for pickup
      properties:
        Timestamp:
          description: The timestamp of the event
          format: date-time
          type: string
        Message:
          description: The message text
          type: string
        Details:
          description: Details of the message
          type: string
        OrderId:
          description: The order Id
          type: string
      type: object
    ApiPartnerManagementGatewayScheduleOrderPickupResponse:
      properties:
        errors:
          items:
            properties:
              message:
                description: >-
                  <p>The accompanying message should, in each case, provide an
                  explanation of the specific problem that was
                  experienced.</p><br/><p>Please note that the accompanying
                  explanatory text are part of the code is only intended as an
                  explanation of each reason code - and should not be returned
                  to us as the message.</p>
                type: string
              code:
                description: >-
                  <p>Each code should be selected from the following list of
                  valid
                  reasons.</p><table><tr><th>code</th><th>explanation</th></tr><tr><td>`outside_hours`</td><td>Delivery
                  partner is closed and not accepting
                  requests.</td></tr><tr><td>`too_busy`</td><td>Delivery partner
                  does not have enough capacity to accept this
                  request.</td></tr><tr><td>`too_far`</td><td>The customer is
                  too far away from the restaurant, either by time or
                  distance.</td></tr><tr><td>`not_supported`</td><td>Delivery
                  partner is currently unable to deliver to the customer's
                  location.</td></tr><tr><td>`bad_address`</td><td>The order
                  contains an address that could not be processed or
                  understood.</td></tr><tr><td>`bad_request`</td><td>The order
                  format is invalid or the order contains required data or
                  information that cannot be
                  processed.</td></tr><tr><td>`restaurant_not_configured`</td><td>Delivery
                  partner is not configured to accept requests for given
                  restaurant.</td></tr><tr><td>`duplicate`</td><td>The request
                  has already been processed
                  before.</td></tr><tr><td>`other`</td><td>Any validation
                  failure or unexpected error not covered by the above
                  codes.</td></tr></table>
                enum:
                  - outside_hours
                  - too_busy
                  - too_far
                  - not_supported
                  - bad_address
                  - bad_request
                  - restaurant_not_configured
                  - duplicate
                  - other
                type: string
            type: object
          type: array
      type: object
    CustomerExperienceCreateOrderResponse:
      description: Describes a created order
      properties:
        OrderId:
          description: The order Id
          type: string
      type: object
    CustomerExperienceCreateOrder409Response:
      description: Describes a created order
      properties:
        OrderId:
          description: The order Id
          type: string
      type: object
    ManageOrderJourneyUpdateDriverAtRestaurantEtaResponse:
      type: object
      properties:
        bestGuess:
          type: array
          items:
            type: string
            example: bestGuess must be later than estimatedAt
      example:
        bestGuess:
          - bestGuess must be later than estimatedAt
    ManageOrderJourneyUpdateOrderDriverAssignedDetailsResponse:
      type: object
      properties:
        '':
          type: array
          items:
            type: string
            example: No driver details given in driver assigned message
      example:
        '':
          - No driver details given in driver assigned message
    ManageOrderJourneyUpdateDriverLocationEtaResponse:
      type: object
      properties:
        location:
          type: array
          items:
            type: string
            example: location must not be null
      example:
        location:
          - location must not be null
    SearchOrchestratorGetRestaurantsByLocationResponse:
      oneOf:
        - $ref: '#/components/schemas/RestaurantsSearchResponseYaml'
        - $ref: '#/components/schemas/RestaurantsExternalSearchResponseYaml'
        - $ref: '#/components/schemas/RestaurantsSearchWebResponseYaml'
    SearchOrchestratorGetRestaurantsByLocation400Response:
      type: object
      properties:
        ModelState:
          type: object
          properties:
            Longitude:
              type: array
              items:
                type: string
                example: The value 'nan' is not valid for Longitude.
        Message:
          type: string
          example: The request is invalid.
      example:
        ModelState:
          Longitude:
            - The value 'nan' is not valid for Longitude.
        Message: The request is invalid.
    SearchOrchestratorGetRestaurantsByLocation401Response:
      type: object
      properties:
        message:
          type: string
          example: No API key found in request
      example:
        message: No API key found in request
    SearchOrchestratorGetRestaurantsByLocation500Response:
      type: object
      properties:
        ExceptionMessage:
          type: string
          example: Object reference not set to an instance of an object.
        Message:
          type: string
          example: An error has occurred.
        ExceptionType:
          type: string
          example: System.NullReferenceException
        StackTrace:
          type: string
          example: |2-
               at JE.SearchOrchestrator.Controllers.Filters.CacheControlFilter.OnActionExecuted(HttpActionExecutedContext actionExecutedContext) in \\Mac\Home\Documents\GitHub\SearchOrchestrator\src\JE.SearchOrchestrator\Controllers\Filters\CacheControlFilter.cs:line 18
               at System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)
            --- End of stack
      example:
        ExceptionMessage: Object reference not set to an instance of an object.
        Message: An error has occurred.
        ExceptionType: System.NullReferenceException
        StackTrace: |2-
             at JE.SearchOrchestrator.Controllers.Filters.CacheControlFilter.OnActionExecuted(HttpActionExecutedContext actionExecutedContext) in \\Mac\Home\Documents\GitHub\SearchOrchestrator\src\JE.SearchOrchestrator\Controllers\Filters\CacheControlFilter.cs:line 18
             at System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)
          --- End of stack
    SearchOrchestratorGetRestaurantsByPostcodeResponse:
      oneOf:
        - $ref: '#/components/schemas/RestaurantsSearchResponseYaml'
        - $ref: '#/components/schemas/RestaurantsExternalSearchResponseYaml'
        - $ref: '#/components/schemas/RestaurantsSearchWebResponseYaml'
    SearchOrchestratorGetRestaurantsByPostcode400Response:
      type: object
      properties:
        ModelState:
          type: object
          properties:
            Postcode:
              type: array
              items:
                type: string
                example: Invalid Postcode.
        Message:
          type: string
          example: The request is invalid.
      example:
        ModelState:
          Postcode:
            - Invalid Postcode.
        Message: The request is invalid.
    SearchOrchestratorGetRestaurantsByPostcode401Response:
      type: object
      properties:
        message:
          type: string
          example: No API key found in request
      example:
        message: No API key found in request
    SearchOrchestratorGetRestaurantsByPostcode500Response:
      type: object
      properties:
        ExceptionMessage:
          type: string
          example: Object reference not set to an instance of an object.
        Message:
          type: string
          example: An error has occurred.
        ExceptionType:
          type: string
          example: System.NullReferenceException
        StackTrace:
          type: string
          example: |2-
               at JE.SearchOrchestrator.Controllers.Filters.CacheControlFilter.OnActionExecuted(HttpActionExecutedContext actionExecutedContext) in \\Mac\Home\Documents\GitHub\SearchOrchestrator\src\JE.SearchOrchestrator\Controllers\Filters\CacheControlFilter.cs:line 18
               at System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)
            --- End of stack
      example:
        ExceptionMessage: Object reference not set to an instance of an object.
        Message: An error has occurred.
        ExceptionType: System.NullReferenceException
        StackTrace: |2-
             at JE.SearchOrchestrator.Controllers.Filters.CacheControlFilter.OnActionExecuted(HttpActionExecutedContext actionExecutedContext) in \\Mac\Home\Documents\GitHub\SearchOrchestrator\src\JE.SearchOrchestrator\Controllers\Filters\CacheControlFilter.cs:line 18
             at System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)
          --- End of stack
    CustomerExperienceGetAutoCompletedSearchTermsResponse:
      description: A HTTP 4xx error response
      properties:
        fault:
          description: Details of the fault
          properties:
            errors:
              items:
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist the you
                      in resolving the issue
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error
                    type: string
                  fields:
                    description: An array of invalid query fields
                    items:
                      type: string
                    type: array
                type: object
              type: array
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
          required:
            - faultId
          type: object
      type: object
    CustomerExperienceGetAutoCompletedSearchTerms503Response:
      description: Service Unavailable
      properties:
        fault:
          description: Details of the fault
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
          required:
            - faultId
          type: object
      type: object
    CustomerExperienceSearchMenuProductsResponse:
      description: A HTTP 4xx error response
      properties:
        fault:
          description: Details of the fault
          properties:
            errors:
              items:
                properties:
                  description:
                    description: >-
                      Specific details about the error that may assist the you
                      in resolving the issue
                    type: string
                  errorCode:
                    description: >-
                      A code that identifies the problem type. It will be
                      supported by human-readable documentation that identifies
                      how to resolve the error
                    type: string
                  fields:
                    description: An array of invalid query fields
                    items:
                      type: string
                    type: array
                type: object
              type: array
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
          required:
            - faultId
          type: object
      type: object
    CustomerExperienceSearchMenuProducts503Response:
      description: Service Unavailable
      properties:
        fault:
          description: Details of the fault
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
          required:
            - faultId
          type: object
      type: object
    CustomerExperienceSearchRestaurantsByLatLongResponse:
      description: Service Unavailable
      properties:
        fault:
          description: Details of the fault
          properties:
            traceId:
              description: >-
                A value that helps identify the trace back to logs, so that we
                can easily find what was happening on our system when the fault
                was generated
              type: string
            faultId:
              description: >-
                A value that helps identify this response back to logs, so we
                can easily find this specific fault
              type: string
          required:
            - faultId
          type: object
      type: object
  headers:
    CacheControlYaml:
      description: Information about how the response can be cached.
      schema:
        type: array
        items:
          type: string
    ExpiresAfterYaml:
      description: date in UTC when token expires
      schema:
        format: date-time
        type: string
    RetryAfterYaml:
      description: >-
        The Retry-After HTTP response header indicates how long the User Agent
        should wait before making a follow-up request
      required: false
      schema:
        type: string
  securitySchemes:
    Bearer:
      description: Bearer token authentication using a JSON Web Token (JWT).
      type: http
      bearerFormat: JWT
      scheme: bearer
    api_key:
      description: >-
        APIs for delivery partners require an API key that will have been issued
        to you.
      name: Authorization
      in: header
      type: apiKey
    basic_auth:
      description: >-
        A few services allow the use of basic authentication when a partner
        doesn't support OAuth based authentication.
      scheme: basic
      type: http
    justeat_adfs:
      description: ADFS authentication provider for internal Just Eat tools.
      openIdConnectUrl: https://adfs.just-eat.com/adfs/.well-known/openid-configuration
      type: openIdConnect
    restaurantsignup_jwt:
      description: >-
        Bearer token authentication using a JSON Web Token (JWT), used by the
        restaurant sign up system
      type: http
      bearerFormat: >-
        JWT token with payload `RestaurantId` and Role `[RestaurantRead |
        VerifyEmail | RestaurantWrite | FullAccess | DocumentRead]`
      scheme: bearer
    daas_jwt:
      description: >-
        Bearer token authentication using a JSON Web Token (JWT), used for
        delivery as a service endpoints.
      type: http
      bearerFormat: JWT token.
      scheme: bearer
    X-Flyt-Api-Key:
      description: API Key for services run by JET Connect, formerly known as Flyt.
      name: X-Flyt-Api-Key
      in: header
      type: apiKey
x-tagGroups:
  - tags:
      - Operate Basket Pricing
      - Operate Item Selection
      - Operate Customer Reviews
      - Promote Partner Products
      - Promote Partners to Customers
      - Process Customer Purchases
      - Accept Payments
      - Accept JET Payments
      - Analyse Order Fulfilment
      - Handle Problem Orders
      - Handle Customer Compensation
      - Handle Partner Compensation
      - Handle Partner Queries
      - Support Contact Center Capabilities
      - Handle Customer Queries
      - Analyse Customer Activity
      - Manage Customer Information
      - Operate Customer Security
      - Manage Business Customer Information
    name: Customer Experience
  - tags:
      - Manage Promotions for Partners
      - Manage Partner Marketing Content
      - Operate Stored Value Programs
      - Manage and Operate JET Pay
    name: Market Partners
  - tags:
      - Manage Product Catalogue
      - Manage Products
      - Analyse Partner Performance
      - Process Partner Onboarding
      - Process Partner Certifications
      - Manage Partner Information
      - Manage Partner Availability
      - Manage Partner Security
    name: Partner Management
  - tags:
      - Operate Order Status
      - Process Order Fulfilment
      - Manage Partner Devices
      - Dispatch Orders
      - Operate Order History
      - Handle Partner Problems
      - Process Delivery Plan
      - Accept Delivery
      - Analyze Order Delivery
      - Define Fulfillment Plan
      - Operate Shopping
    name: Manage Order Journey
  - tags:
      - Analyse Delivery Demand
      - Define Delivery Associate Assignments
      - Manage Delivery Suppliers
      - Define Courier Delivery Areas
      - Define Partner Delivery Areas
      - Define Delivery Plan
      - Process Delivery
      - Analyse Delivery Effectiveness
    name: Logistic Management
  - tags:
      - Manage Delivery Associate Application
      - Manage Delivery Associate Orientation and Deployment
      - Manage Delivery Associate Performance
      - Manage Delivery Associate Training
      - Manage Delivery Associate Info
    name: Delivery Associate Experience
  - tags:
      - Process Partner Invoices
      - Process Business Customer Invoices
      - Process Delivery Associate Invoices
    name: Finance & Accounts
  - tags:
      - Manage Secrets
      - Manage Cloud Accounts
      - Manage App Config
      - Manage Cloud RBAC
      - Manage Cloud Cost
      - Manage DNS
      - Manage IP Space
      - Operate Inter-Platform Connectivity
      - Operate Intra-Platform Connectivity
      - Manage Metrics
      - Manage Logging
      - Manage Tracing
      - Manage Alerting
      - Manage Incidents
      - Provide Insights
      - Manage Application Infrastructure
      - Build software
      - Deploy software
      - Verify software quality
      - Manage Data Infrastructure
      - Manage Data Streaming
      - Manage Backup and Restore
      - Manage Data Ingestion
      - Operate Machine Learning
      - Operate Data Transformation
      - Manage Data Compliance
      - Operate Platform Security
    name: Operate Platform
  - tags:
      - uncategorized
      - Vendor Specific Endpoints
    name: Miscellaneous
  - tags:
      - Web Application Firewall
      - API Smartgateway
      - Event Mesh
      - Smart IAM Gateway
      - Experimentation Gateway
      - Orderpad App BFF
      - Partner Centre App BFF
      - Partner Hub App BFF
      - API Partner Management Gateway
      - Global Basket Orchestrator
      - Search Orchestrator
      - Order Orchestrator
      - Menu Consumer Orchestrator
      - Reorder Gateway API
      - Customer Service Ops Webhooks
      - Notifications Gateway
      - Location Services Gateway
      - Content As A Service Gateway
      - Google Food Ordering Gateway
      - Skip Menu Editor Gateway
      - Device Gateway
      - Order Management BFF
      - Apps Beta Gateway
      - Stuart Logistics Integration
      - Chat User Assistent Gateway
      - JET Connect for Just Eat
      - JET Connect for Takeaway
      - JET Connect for Skip
      - JET Connect for Operate Basket Pricing
      - JET Connect for Process Partner Onboarding
      - JET Connect for Manage Product Catalogue
      - JET Connect for Dispatch Orders
      - JET Connect for Manage Products
      - JET Connect for Manage Partner Availability
      - JET Connect for Manage Order Status
      - JET Connect for Process Delivery
      - JET Connect for Dominos
      - JET Connect for Burger King
      - JET Connect for Deliverect
      - JET Connect for Google
      - JET Connect for McDonald's
      - JET Connect for Greggs
      - JET Connect for Subway
      - JET Connect for Chipotle
      - JET Connect for Chowly
      - JET Connect for PAR Brink POS
      - JET Connect for The Beer Store
      - JET Connect for Homeria
      - JET Connect for Omnivore
      - JET Connect for Seven Now
      - POS Connect
      - Runway
      - JET Connect for Redcat
      - JET Connect for Olo
      - JET Connect for KFC
      - JET Connect for Ghost Kitchens
      - JET Connect for Xenial
      - JET Connect for The Beer Guy
      - JET Connect for Flytops
      - API SkipTheDishes
      - API Internal
      - API Restaurant
      - API Courier
      - API Applicant Tracking System
      - API Courier Chat
      - API Courier Management
      - API LiveOps
      - API Restaurant Management
      - API Restaurant Order Fulfillment
      - Admin API Gateway
      - SkipTheDishes API Gateway
      - Customer API Gateway
      - Payment API Gateway
      - Courier API Gateway
      - Customer GraphQL Federation
      - DaaS API Gateway
      - Restaurant API Gateway
      - BFF Customer Partner
      - Chat Services GraphQL
      - Customer Order Creation GraphQL
      - Courier Operations GraphQL
      - Restaurant Order Fulfillment GraphQL
      - Restaurant Menu GraphQL
      - Menu GraphQL
      - DaaS Logistics Tracker
      - TA Firewall
      - Live Orders BFF
      - Consumer Web BFF
      - Live Orders Sockets
      - T-Connect Gateway
      - Help Center Gateway
      - TKWY Auth Gateway
      - TKWY Google Food Ordering Gateway
      - Restaurant Data Gateway
      - Search Data Gateway
      - Restaurant Portal BFF
      - TMS BFF
      - Tall Desk Gateway
      - Takeaway Notifications Gateway
      - TMS Micro Frontend BFF
      - Turnover Workday Integration
      - Trustbox Gateway
      - Scoober Courier GraphQl Gateway
      - Courier Auth Gateway
      - Courier Notification Gateway
      - Just Eat Integration Gateway
      - Takeaway Integration Gateway
      - Salesforce Integration Gateway
      - Google Trip Gateway
      - Courier Portal Restaurant Delivery Dashboard BFF
      - 3rd Party integrations gateway
      - Scoober Delivery Updates Gateway
    name: gateways
