openapi: 3.0.3
info:
  title: Fordefi API
  description: >-
    The future of institutional web3 wallets.


    For builders, traders, and operators, Fordefi's comprehensive MPC wallet
    platform and web3 gateway enables you to securely self-custody your private
    keys, seamlessly connect to thousands of dApps across any blockchain,
    protect your workflows with granular policies, and manage your digital asset
    operations all-in-one place.
  version: 0.2.0
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - description: Production
    url: https://api.fordefi.com
tags:
  - description: >-
      This resource collection represents a transaction. <br><br>A transaction
      is any object that can be signed cryptographically (with a private key).
      <br><br>In general, it can be one of the following types: <ul> <li> **EVM
      Transaction**: a native currency transfer or a smart contract call on an
      EVM-based chain.  <li> **EVM Message**: in which a message is signed for
      off-chain use on an EVM-based chain.  <li> **Solana Transaction**: a
      native currency transfer on a Solana-based chain.  <li> **Black Box
      Signature**: in which a payload is signed for use, external to the Fordefi
      platform. </ul> <h4>Monitor transactions</h4>  As transactions progress
      from creation through completion,  they can follow several workflows,
      during which they take on various statuses. Status is returned in  the
      `state` field of the Get Transaction and List Transaction requests.
      <br><br> For a list of possible statuses, see [Transaction
      Lifecycle](https://docs.fordefi.com/docs/transaction-lifecycle). 
    name: Transactions
  - description: >-
      This resource collection represents a vault.<br><br>The vault is the basic
      unit to manage funds. A vault has a single public address but is
      multi-chain, meaning you can use it across all chains that are compatible
      with the address and are supported by Fordefi.<br><br>In general, Fordefi
      supports the following vault types: <ul> <li> **EVM**: a vault to be used
      in supported EVM chains.  <li> **Solana**: a vault to be used in supported
      Solana chains.  <li> **Black Box**: in which the user can leverage Fordefi
      for MPC and policy, but is responsible for managing the transaction
      lifecycle. <li> **Cosmos**: a vault to be used in supported Cosmos
      chains.</ul>
    name: Vaults
  - description: >-
      This resource collection represents assets.<ul> <li> 'Assets', in general,
      refer to the assets that are supported by Fordefi and can be held by an
      organization. The Fetch Asset Prices API, for example, returns the current
      prices of all the assets that are recognized by the system. <li>'Owned
      assets' reflects the balance of specific assets that are owned by an
      organization. 
    name: Assets
  - description: >-
      This resource collection represents authorization tokens.<br><br>These
      tokens allow end users to authenticate with Fordefi. Each end user can
      have a maximum of ten active authorization tokens at any time. Each token
      is valid for 24 hours only.
    name: Authorization Tokens
  - description: >-
      This resource collection represents keysets.<br><br>A keyset is a
      high-level object that includes the three different key types: EdDSA,
      ECDSA, and ECDSA-Stark.
    name: Keysets
  - description: >-
      This resource collection represents end users.<br><br>End users are the
      users of a third-party app that embeds cryptographic technology provided
      by Fordefi. Each end user's mobile device can have a unique key-share,
      where Fordefi holds the matching key-share.
    name: End Users
  - description: >-
      This resource collection represents users.<h4>User types and
      roles</h4>There are three types of user in the Fordefi
      platform:<ul><li>**Person**: A human user of the platform. Only a person
      can have an admin role.<li>**API user**: An API client key that is trying
      to interact with the platform.See Create an API user and token.<li>**API
      signer**: Used to auto-sign transactions. See Automate Signing with API
      Signer.<li>**End user**: This represents the end user in a Consumer Wallet
      solution.</ul>In addition, a person can have one of two possible user
      roles, which define the permissions that the user is
      given:<ul><li>**Admin**: A user with high privileges in the organization.
      Only admins have permission to manage the policy, set up the backup,
      manage the address book, and add or remove users in the
      organization.<li>**Trader**: A user who can create vaults and
      transactions.</ul>
    name: Users
  - description: This resource collection represents blockchains.
    name: Blockchains
  - description: This resource collection represents webhooks.
    name: Webhooks
  - name: User Groups
  - description: >-
      This resource collection represents an address book.<br><br>Address Book
      is an object that represents a contact (saved blockchain address and its
      alias) in the platform. The Address Book object can either be queried
      directly or returned as part of a transaction.
    name: Address Book
  - description: This resource collection represents a vault group.<br><br>TBD
    name: Vault Groups
paths:
  /api/v1/blockchains:
    get:
      tags:
        - Blockchains
      summary: List Chains
      operationId: Blockchains_getList
      description: Get a list of all supported blockchains.
      parameters:
        - name: chain_types
          in: query
          required: false
          schema:
            title: Chain Types
            type: array
            items:
              $ref: '#/components/schemas/ChainType'
        - name: only_interacted_with
          in: query
          required: false
          schema:
            title: Only Interacted With
            type: boolean
            default: false
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBlockchainsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/blockchains/suggested-fees:
    get:
      tags:
        - Blockchains
      summary: Get Suggested Fees
      operationId: Blockchains_getSuggestedFees
      description: Get the suggested fees in a specific network.
      parameters:
        - name: chains
          in: query
          required: false
          schema:
            title: Chains
            type: array
            items:
              $ref: '#/components/schemas/ChainUniqueId'
        - name: chain_types
          in: query
          required: false
          schema:
            title: Chain Types
            type: array
            items:
              $ref: '#/components/schemas/ChainType'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuggestedFeesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/users:
    get:
      tags:
        - Users
      summary: List Users
      operationId: Users_list
      description: Get a list of users in the organization.
      parameters:
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/UserSortableFields'
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 400
            minimum: 1
            default: 50
        - description: The types of the users to filter on.
          name: types
          in: query
          required: false
          schema:
            title: Types
            description: The types of the users to filter on.
            type: array
            items:
              $ref: '#/components/schemas/UserType'
        - description: The roles of the users to filter on.
          name: roles
          in: query
          required: false
          schema:
            title: Roles
            description: The roles of the users to filter on.
            type: array
            items:
              $ref: '#/components/schemas/UserRole'
        - description: >-
            The states of the users to filter on.  Is one of: <ul><li>`active`:
            The user can perform all actions in the Fordefi
            platform.<li>`onboarding`: The user has been approved but still
            needs to activate the account.<li>`pending_approval`: The user has
            been invited but not yet approved.<li>`deleted`: The user has been
            deleted.</ul>
          name: states
          in: query
          required: false
          schema:
            title: States
            description: >-
              The states of the users to filter on.  Is one of:
              <ul><li>`active`: The user can perform all actions in the Fordefi
              platform.<li>`onboarding`: The user has been approved but still
              needs to activate the account.<li>`pending_approval`: The user has
              been invited but not yet approved.<li>`deleted`: The user has been
              deleted.</ul>
            type: array
            items:
              $ref: '#/components/schemas/UserState'
        - name: include_deleted
          in: query
          required: false
          schema:
            title: Include Deleted
            default: false
            type: boolean
        - name: name
          in: query
          required: false
          schema:
            title: Name
            type: string
        - name: email
          in: query
          required: false
          schema:
            title: Email
            type: string
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
        - description: The unique identifiers of the users.
          name: user_ids
          in: query
          required: false
          schema:
            title: User Ids
            description: The unique identifiers of the users.
            type: array
            items:
              type: string
              format: uuid
        - name: external_id
          in: query
          required: false
          schema:
            title: External Id
            type: string
        - description: The unique identifiers of the user groups.
          name: group_ids
          in: query
          required: false
          schema:
            title: Group Ids
            description: The unique identifiers of the user groups.
            type: array
            items:
              type: string
              format: uuid
        - description: The unique identifiers of the user groups to exclude.
          name: group_ids__not
          in: query
          required: false
          schema:
            title: Group Ids  Not
            description: The unique identifiers of the user groups to exclude.
            type: array
            items:
              type: string
              format: uuid
        - description: >-
            The states of the user groups to filter group_ids on. Is one of:
            <ul><li>`active`: The user group is active.<li>`pending_addition`:
            The user is pending to be added to the group.<li>`pending_removal`:
            The user is pending to be removed from the group.</ul>
          name: states_on_groups
          in: query
          required: false
          schema:
            title: States On Groups
            description: >-
              The states of the user groups to filter group_ids on. Is one of:
              <ul><li>`active`: The user group is active.<li>`pending_addition`:
              The user is pending to be added to the
              group.<li>`pending_removal`: The user is pending to be removed
              from the group.</ul>
            type: array
            items:
              $ref: '#/components/schemas/UserStateOnGroup'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/users/{id}:
    get:
      tags:
        - Users
      summary: Get User
      operationId: Users_getUserById
      description: Gets the user that corresponds to the given ID.
      parameters:
        - description: ID of the user to retrieve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the user to retrieve.
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/user-groups:
    get:
      tags:
        - User Groups
      summary: List User Groups
      operationId: UserGroups_getList
      description: Get a list of user groups
      parameters:
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - name: states
          in: query
          required: false
          schema:
            title: States
            type: array
            items:
              $ref: '#/components/schemas/UserGroupState'
        - name: user_group_ids
          in: query
          required: false
          schema:
            title: User Group Ids
            type: array
            items:
              type: string
              format: uuid
        - name: user_ids
          in: query
          required: false
          schema:
            title: User Ids
            type: array
            items:
              type: string
              format: uuid
        - name: modified_by
          in: query
          required: false
          schema:
            title: Modified By
            type: array
            items:
              type: string
              format: uuid
        - name: name
          in: query
          required: false
          schema:
            title: Name
            type: string
            minLength: 1
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
            minLength: 1
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/UserGroupSortableFields'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserGroupsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/user-groups/{id}:
    get:
      tags:
        - User Groups
      summary: Get User Group
      operationId: UserGroups_getDetails
      description: Retrieve user group details
      parameters:
        - description: ID of the user group to retrieve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the user group to retrieve.
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserGroupResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/vaults:
    get:
      tags:
        - Vaults
      summary: List Vaults
      operationId: Vaults_list
      description: Get a list of all vaults in an organization.
      parameters:
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/VaultSortableFields'
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - description: Vault IDs to filter on.
          name: vault_ids
          in: query
          required: false
          schema:
            title: Vault Ids
            description: Vault IDs to filter on.
            type: array
            items:
              type: string
              format: uuid
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
        - description: Vault types to filter on.
          name: vault_types
          in: query
          required: false
          schema:
            title: Vault Types
            description: Vault types to filter on.
            type: array
            items:
              $ref: '#/components/schemas/VaultType'
        - description: Vault states to filter on.
          name: vault_states
          in: query
          required: false
          schema:
            title: Vault States
            description: Vault states to filter on.
            type: array
            items:
              $ref: '#/components/schemas/VaultState'
        - description: List of keyset IDs to filter on.
          name: keyset_ids
          in: query
          required: false
          schema:
            title: Keyset Ids
            description: List of keyset IDs to filter on.
            type: array
            items:
              type: string
              format: uuid
        - description: List of key holder IDs to filter on.
          name: key_holder_ids
          in: query
          required: false
          schema:
            title: Key Holder Ids
            description: List of key holder IDs to filter on.
            type: array
            items:
              type: string
              format: uuid
        - description: >-
            List of vault group IDs to filter on. Filter applies to current and
            pending vault groups.
          name: vault_group_ids
          in: query
          required: false
          schema:
            title: Vault Group Ids
            description: >-
              List of vault group IDs to filter on. Filter applies to current
              and pending vault groups.
            type: array
            items:
              type: string
              format: uuid
        - description: List of vault group IDs to exclude.
          name: exclude_vault_group_ids
          in: query
          required: false
          schema:
            title: Exclude Vault Group Ids
            description: List of vault group IDs to exclude.
            type: array
            items:
              type: string
              format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVaultsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
    post:
      tags:
        - Vaults
      summary: Create Vault
      operationId: Vaults_createNewVault
      description: Create a new vault.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVaultRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVaultResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_CreateVaultErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '409':
          description: Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/vaults/export:
    get:
      tags:
        - Vaults
      summary: Export Vaults With Assets
      operationId: Vaults_exportWithAssets
      description: Get a CSV-format list of balances of all vaults and their assets.
      parameters:
        - description: Vault IDs to filter on.
          name: vaults_ids
          in: query
          required: false
          schema:
            title: Vaults Ids
            description: Vault IDs to filter on.
            type: array
            items:
              type: string
              format: uuid
      responses:
        '200':
          description: Exported vaults in CSV format
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/VaultsExportWithAssetsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/vaults/{id}:
    get:
      tags:
        - Vaults
      summary: Get Vault
      operationId: Vaults_getDetails
      description: Retrieve vault details.
      parameters:
        - description: ID of the vault to retrieve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the vault to retrieve.
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVaultResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/vaults/{id}/assets/{asset_id}:
    get:
      tags:
        - Vaults
      summary: Get Vault Asset
      operationId: Vaults_getAsset
      description: Get a specific asset in a vault.
      parameters:
        - description: ID of the vault to retrieve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the vault to retrieve.
            type: string
            format: uuid
        - description: ID of the asset to retrieve.
          name: asset_id
          in: path
          required: true
          schema:
            title: Asset Id
            description: ID of the asset to retrieve.
            type: string
            format: uuid
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnedAsset'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/vaults/{id}/assets:
    get:
      tags:
        - Vaults
      summary: Get Vault Assets
      operationId: Vaults_getAssets
      description: Get a list of all assets in a vault.
      parameters:
        - description: ID of the vault to retrieve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the vault to retrieve.
            type: string
            format: uuid
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - name: chains
          in: query
          required: false
          schema:
            title: Chains
            type: array
            items:
              $ref: '#/components/schemas/ChainUniqueId'
        - name: asset_ids
          in: query
          required: false
          schema:
            title: Asset Ids
            type: array
            items:
              type: string
              format: uuid
        - name: is_hidden
          in: query
          required: false
          schema:
            title: Is Hidden
            type: boolean
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/OwnedAssetsSortableFields'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOwnedAssetsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/vaults/{id}/name:
    put:
      tags:
        - Vaults
      summary: Rename Vault
      operationId: Vaults_renameVault
      description: Rename an existing vault.
      parameters:
        - description: ID of the vault to rename.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the vault to rename.
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameVaultRequest'
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '409':
          description: Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/vaults/{id}/addresses:
    post:
      tags:
        - Vaults
      summary: Create Address
      operationId: Vaults_createAddress
      description: Create a new address.
      parameters:
        - description: ID of the vault to create address in.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the vault to create address in.
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUtxoVaultAddressRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtxoVaultAddress'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_CreateVaultAddressErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
    get:
      tags:
        - Vaults
      summary: List Vault Addresses
      operationId: Vaults_listAddresses
      description: Get a list of all addresses in a vault.
      parameters:
        - description: ID of the vault.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the vault.
            type: string
            format: uuid
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/VaultAddressSortableFields'
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
        - description: List of addresses to filter on.
          name: addresses
          in: query
          required: false
          schema:
            title: Addresses
            description: List of addresses to filter on.
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVaultAddressesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/vaults/addresses/{id}/name:
    put:
      tags:
        - Vaults
      summary: Rename Vault Address
      operationId: Vaults_renameAddress
      description: Rename an existing vault address.
      parameters:
        - description: ID of the vault address to rename.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the vault address to rename.
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameVaultRequest'
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '409':
          description: Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/vault-groups:
    get:
      tags:
        - Vault Groups
      summary: List Vault Groups
      operationId: VaultGroups_list
      description: Get a list of vault groups in the organization.
      parameters:
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/VaultGroupSortableFields'
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - description: Vault group IDs to filter on.
          name: vault_group_ids
          in: query
          required: false
          schema:
            title: Vault Group Ids
            description: Vault group IDs to filter on.
            type: array
            items:
              type: string
              format: uuid
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
        - name: access_level
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ListVaultGroupsFilterByAccessLevel'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVaultGroupsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/assets/owned-assets/{id}:
    get:
      tags:
        - Assets
      summary: Get Owned Asset
      operationId: Assets_getOwnedAsset
      description: Get a a specific asset owned by an organization.
      parameters:
        - description: ID of the asset to retrieve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the asset to retrieve.
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnedAsset'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/assets/owned-assets:
    get:
      tags:
        - Assets
      summary: List Owned Assets
      operationId: Assets_listOwnedAssets
      description: Get a list of all assets owned by an organization.
      parameters:
        - name: chains
          in: query
          required: false
          schema:
            title: Chains
            type: array
            items:
              $ref: '#/components/schemas/ChainUniqueId'
        - name: asset_ids
          in: query
          required: false
          schema:
            title: Asset Ids
            type: array
            items:
              type: string
              format: uuid
        - name: is_hidden
          in: query
          required: false
          schema:
            title: Is Hidden
            type: boolean
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
        - name: vault_ids
          in: query
          required: false
          schema:
            title: Vault Ids
            type: array
            items:
              type: string
              format: uuid
        - name: end_user_ids
          in: query
          required: false
          schema:
            title: End User Ids
            type: array
            items:
              type: string
              format: uuid
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/OwnedAssetsSortableFields'
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOwnedAssetsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/assets:
    put:
      tags:
        - Assets
      summary: Update Asset Configuration
      operationId: Assets_updateConfiguration
      description: Update the asset's configuration under the entire organization.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssetConfiguration'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/assets/prices:
    post:
      tags:
        - Assets
      summary: Fetch Asset Prices
      operationId: Assets_getPrices
      description: Fetch the prices of assets.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAssetPricesRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchAssetPricesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/transactions/export:
    get:
      tags:
        - Transactions
      summary: Export Transactions
      operationId: Transactions_exportCsvList
      description: Get a CSV-format list of transactions.
      parameters:
        - description: The amount of transactions to export, 1000 if not set.
          name: limit
          in: query
          required: false
          schema:
            title: Limit
            description: The amount of transactions to export, 1000 if not set.
            type: integer
            default: 1000
        - name: created_before
          in: query
          required: false
          schema:
            title: Created Before
            type: string
            format: date-time
        - name: created_after
          in: query
          required: false
          schema:
            title: Created After
            type: string
            format: date-time
        - name: modified_after
          in: query
          required: false
          schema:
            title: Modified After
            type: string
            format: date-time
        - description: >-
            The filter applies both to transactions that have been signed by the
            vault and also to transactions that have interacted with the vault. 
          name: vault_ids
          in: query
          required: false
          schema:
            title: Vault Ids
            description: >-
              The filter applies both to transactions that have been signed by
              the vault and also to transactions that have interacted with the
              vault. 
            type: array
            items:
              type: string
              format: uuid
        - name: chains
          in: query
          required: false
          schema:
            title: Chains
            type: array
            items:
              $ref: '#/components/schemas/ChainUniqueId'
        - name: initiator_ids
          in: query
          required: false
          schema:
            title: Initiator Ids
            type: array
            items:
              type: string
              format: uuid
        - name: types
          in: query
          required: false
          schema:
            title: Types
            type: array
            items:
              $ref: '#/components/schemas/TransactionType'
        - name: sub_types
          in: query
          required: false
          schema:
            title: Sub Types
            type: array
            items:
              $ref: '#/components/schemas/TransactionSubType'
        - name: signer_types
          in: query
          required: false
          schema:
            title: Signer Types
            type: array
            items:
              $ref: '#/components/schemas/SignerType'
        - name: transaction_ids
          in: query
          required: false
          schema:
            title: Transaction Ids
            type: array
            items:
              type: string
              format: uuid
        - name: end_user_ids
          in: query
          required: false
          schema:
            title: End User Ids
            type: array
            items:
              type: string
              format: uuid
        - name: direction
          in: query
          required: false
          schema:
            title: Direction
            $ref: '#/components/schemas/TransactionDirection'
      responses:
        '200':
          description: Exported transactions in CSV format
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/TransactionsExportCsvListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/transactions/{id}:
    get:
      tags:
        - Transactions
      summary: Get Transaction
      operationId: Transactions_getDetails
      description: Retrieve transaction details.
      parameters:
        - description: ID of the transaction to retrieve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the transaction to retrieve.
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/transactions:
    get:
      tags:
        - Transactions
      summary: List Transactions
      operationId: Transactions_listAllInOrganization
      description: Get a list of all transactions in an organization.
      parameters:
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - name: created_before
          in: query
          required: false
          schema:
            title: Created Before
            type: string
            format: date-time
        - name: created_after
          in: query
          required: false
          schema:
            title: Created After
            type: string
            format: date-time
        - name: modified_after
          in: query
          required: false
          schema:
            title: Modified After
            type: string
            format: date-time
        - description: >-
            The filter applies both to transactions that have been signed by the
            vault and also to transactions that have interacted with the vault. 
          name: vault_ids
          in: query
          required: false
          schema:
            title: Vault Ids
            description: >-
              The filter applies both to transactions that have been signed by
              the vault and also to transactions that have interacted with the
              vault. 
            type: array
            items:
              type: string
              format: uuid
        - name: chains
          in: query
          required: false
          schema:
            title: Chains
            type: array
            items:
              $ref: '#/components/schemas/ChainUniqueId'
        - name: initiator_ids
          in: query
          required: false
          schema:
            title: Initiator Ids
            type: array
            items:
              type: string
              format: uuid
        - name: types
          in: query
          required: false
          schema:
            title: Types
            type: array
            items:
              $ref: '#/components/schemas/TransactionType'
        - name: sub_types
          in: query
          required: false
          schema:
            title: Sub Types
            type: array
            items:
              $ref: '#/components/schemas/TransactionSubType'
        - name: signer_types
          in: query
          required: false
          schema:
            title: Signer Types
            type: array
            items:
              $ref: '#/components/schemas/SignerType'
        - name: transaction_ids
          in: query
          required: false
          schema:
            title: Transaction Ids
            type: array
            items:
              type: string
              format: uuid
        - name: end_user_ids
          in: query
          required: false
          schema:
            title: End User Ids
            type: array
            items:
              type: string
              format: uuid
        - name: direction
          in: query
          required: false
          schema:
            title: Direction
            $ref: '#/components/schemas/TransactionDirection'
        - description: >-
            State of the transaction. Can be one of:<ul> <li>`pending`</li>
            <li>`finalized`, which can be one of: <ul><li>`completed` </li>
            <li>`aborted` </li>  <li>`error_pushing_to_blockchain` </li>
            <li>`reverted`  </li> <li>`accelerated` </li>  <li>`canceled` </li> 
            </ul><li>`approved` </li> </ul>
          name: states
          in: query
          required: false
          schema:
            title: States
            description: >-
              State of the transaction. Can be one of:<ul> <li>`pending`</li>
              <li>`finalized`, which can be one of: <ul><li>`completed` </li>
              <li>`aborted` </li>  <li>`error_pushing_to_blockchain` </li>
              <li>`reverted`  </li> <li>`accelerated` </li>  <li>`canceled`
              </li>  </ul><li>`approved` </li> </ul>
            type: array
            items:
              $ref: '#/components/schemas/TransactionState'
        - name: is_hidden
          in: query
          required: false
          schema:
            title: Is Hidden
            type: boolean
        - name: include_full_response
          in: query
          required: false
          schema:
            title: Include Full Response
            type: boolean
            default: true
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/TransactionSortableFields'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
    post:
      tags:
        - Transactions
      summary: Create Transaction
      operationId: Transactions_createNewTransaction
      description: Create a new transaction.
      parameters:
        - description: >-
            Signature of the body. Base64 encoded string. If the request is made
            programatically by an API user, signing of the request is required
            and is intended to protect you from malicious backends. 
          name: x-signature
          in: header
          required: false
          schema:
            title: X-Signature
            description: >-
              Signature of the body. Base64 encoded string. If the request is
              made programatically by an API user, signing of the request is
              required and is intended to protect you from malicious backends. 
            type: string
            example: SGVsbG8=
        - description: >-
            Timestamp of the signature. Integer. Specify an Epoch date. If the
            request is made programatically by an API user, the timestamp of the
            request is required and is intended to protect you from replay
            attacks.
          name: x-timestamp
          in: header
          required: false
          schema:
            title: X-Timestamp
            description: >-
              Timestamp of the signature. Integer. Specify an Epoch date. If the
              request is made programatically by an API user, the timestamp of
              the request is required and is intended to protect you from replay
              attacks.
            type: integer
        - description: Optional idempotence ID of a transaction.
          name: x-idempotence-id
          in: header
          required: false
          schema:
            title: X-Idempotence-Id
            description: Optional idempotence ID of a transaction.
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_CreateTransactionErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/transactions/{id}/approve:
    post:
      tags:
        - Transactions
      summary: Approve Transaction
      operationId: Transactions_approveTransaction
      description: >-
        Approve a transaction.


        A transaction awaits approval when the caller API user has been
        specified as a

        potential approver in the policy and the transaction

        is in the `waiting_for_approval` state.
      parameters:
        - description: ID of the transaction to approve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the transaction to approve.
            type: string
            format: uuid
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_ApproveTransactionErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/transactions/{id}/abort:
    post:
      tags:
        - Transactions
      summary: Abort Transaction
      operationId: Transactions_abortTransactionAndShowBalanceChange
      description: >-
        Abort a transaction.


        Abort is possible only for a transaction that is in one of the following
        states:
           <ul>
           <li>Waiting for approval
           <li>Approved
           </ul>

        The aborting user must be one of the following:

        <ul>

        <li>The user who created the transaction

        <li>An admin

        <li>A legitimate approver

        </ul>


        API users can abort only the transactions they created.
      parameters:
        - description: ID of the transaction to abort.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the transaction to abort.
            type: string
            format: uuid
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_AbortTransactionErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/transactions/{id}/release:
    post:
      tags:
        - Transactions
      summary: Release Transaction
      operationId: Transactions_releaseTransaction
      description: Release a transaction.
      parameters:
        - description: ID of the transaction to release.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the transaction to release.
            type: string
            format: uuid
        - description: >-
            Signature of the body. Base64 encoded string. If the request is made
            programatically by an API user, signing of the request is required
            and is intended to protect you from malicious backends. 
          name: x-signature
          in: header
          required: false
          schema:
            title: X-Signature
            description: >-
              Signature of the body. Base64 encoded string. If the request is
              made programatically by an API user, signing of the request is
              required and is intended to protect you from malicious backends. 
            type: string
            example: SGVsbG8=
        - description: >-
            Timestamp of the signature. Integer. Specify an Epoch date. If the
            request is made programatically by an API user, the timestamp of the
            request is required and is intended to protect you from replay
            attacks.
          name: x-timestamp
          in: header
          required: false
          schema:
            title: X-Timestamp
            description: >-
              Timestamp of the signature. Integer. Specify an Epoch date. If the
              request is made programatically by an API user, the timestamp of
              the request is required and is intended to protect you from replay
              attacks.
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseEvmTransactionRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_ReleaseTransactionErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/transactions/describe:
    post:
      tags:
        - Transactions
      summary: Describe Transaction
      operationId: Transactions_getBlockchainFeePriceAndEstimateTransactionFee
      description: >-
        Get the current blockchain fee price and estimate the total transaction
        fee.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTransactionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_CreateTransactionErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/transactions/predict:
    post:
      tags:
        - Transactions
      summary: Predict Transaction
      operationId: Transactions_simulateTransactionAndShowBalanceChange
      description: >-
        Simulate the transaction and show the exact token's balance change, in
        addition to the fee estimation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictTransactionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_PredictTransactionErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/transactions/{id}/update-spam-state:
    put:
      tags:
        - Transactions
      summary: Update Transaction Spam State
      operationId: Transactions_updateSpamState
      description: Update transaction's spam state.
      parameters:
        - description: ID of the transaction to update spam state.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the transaction to update spam state.
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransactionSpamStateRequest'
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/addressbook/contacts:
    get:
      tags:
        - Address Book
      summary: List Contacts
      operationId: AddressBook_listContacts
      description: Get a list of all contacts in an organization.
      parameters:
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/ContactSortableFields'
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - description: The contact IDs to filter by.
          name: contact_ids
          in: query
          required: false
          schema:
            title: Contact Ids
            description: The contact IDs to filter by.
            type: array
            items:
              type: string
              format: uuid
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
        - description: The states to filter by.
          name: states
          in: query
          required: false
          schema:
            title: States
            description: The states to filter by.
            type: array
            items:
              $ref: '#/components/schemas/AddressBookContactState'
        - description: The chain types to filter by.
          name: chain_types
          in: query
          required: false
          schema:
            title: Chain Types
            description: The chain types to filter by.
            type: array
            items:
              $ref: '#/components/schemas/ChainType'
        - description: The chain unique ids to filter by.
          name: chains
          in: query
          required: false
          schema:
            title: Chains
            description: The chain unique ids to filter by.
            type: array
            items:
              $ref: '#/components/schemas/ChainUniqueId'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAddressBookContactResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/webhooks/test:
    post:
      tags:
        - Webhooks
      summary: Test Webhook
      operationId: Webhooks_testWebhook
      description: Test a webhook.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestWebhookRequest'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_TestWebhookErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
      callbacks:
        webhook_event:
          '{$request.body.url}':
            post:
              tags:
                - Webhooks
              summary: Webhook Event
              operationId: webhook_event__request_body_url__post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/WebhookTransactionStatusChangeEvent'
                required: true
              responses:
                '200':
                  description: Successful Response
                  content:
                    application/json:
                      schema: {}
                '422':
                  description: Validation Error
  /api/v1/webhooks/trigger/transaction/{id}:
    post:
      tags:
        - Webhooks
      summary: Trigger Transaction Webhook
      operationId: Webhooks_triggerTransaction
      description: Trigger transaction create and latest state via webhooks.
      parameters:
        - description: ID of the transaction to send events for.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the transaction to send events for.
            type: string
            format: uuid
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/keysets:
    get:
      tags:
        - Keysets
      summary: List Keysets
      operationId: Keysets_getAll
      description: Get a list of all keysets.
      parameters:
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - name: keyset_ids
          in: query
          required: false
          schema:
            title: Keyset Ids
            type: array
            items:
              type: string
              format: uuid
        - name: user_ids
          in: query
          required: false
          schema:
            title: User Ids
            type: array
            items:
              type: string
              format: uuid
        - name: scopes
          in: query
          required: false
          schema:
            title: Scopes
            type: array
            items:
              $ref: '#/components/schemas/KeysetScope'
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/KeysetSortableFields'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKeysetsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
    post:
      tags:
        - Keysets
      summary: Create Keyset
      operationId: Keysets_createKeyset
      description: Create a new keyset.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeysetRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKeysetResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_CreateKeysetErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '409':
          description: Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/keysets/{id}:
    get:
      tags:
        - Keysets
      summary: Get Keyset
      operationId: Keysets_getDetails
      description: Retrieve keyset details.
      parameters:
        - description: ID of the keyset to retrieve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the keyset to retrieve.
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKeysetResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/end-users:
    get:
      tags:
        - End Users
      summary: List End Users
      operationId: EndUsers_getList
      description: Get a list of end users in the organization.
      parameters:
        - name: sort_by
          in: query
          required: false
          schema:
            title: Sort By
            type: array
            items:
              $ref: '#/components/schemas/EndUserSortableFields'
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - name: search
          in: query
          required: false
          schema:
            title: Search
            type: string
        - description: The unique identifiers of the users.
          name: user_ids
          in: query
          required: false
          schema:
            title: User Ids
            description: The unique identifiers of the users.
            type: array
            items:
              type: string
              format: uuid
        - name: external_id
          in: query
          required: false
          schema:
            title: External Id
            type: string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndUsersResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
    post:
      tags:
        - End Users
      summary: Create End User
      operationId: EndUsers_createNewUser
      description: Create a new end user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndUserRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEndUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_CreateEndUserErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '409':
          description: Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/end-users/{id}:
    get:
      tags:
        - End Users
      summary: Get End User
      operationId: EndUsers_getUserById
      description: Gets the end user that corresponds to the given ID.
      parameters:
        - description: ID of the end user to retrieve.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the end user to retrieve.
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEndUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/authorization-tokens:
    post:
      tags:
        - Authorization Tokens
      summary: Issue Authorization Token
      operationId: AuthorizationTokens_issueToken
      description: Issue authorization token for an end user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueEndUserAuthTokenRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueEndUserAuthTokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DefinedPreconditionError_IssueEndUserAuthTokenErrorType_
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
    get:
      tags:
        - Authorization Tokens
      summary: List Authorization Tokens
      operationId: AuthorizationTokens_list
      description: List authorization tokens of end users.
      parameters:
        - description: The page number to fetch.
          name: page
          in: query
          required: false
          schema:
            title: Page
            description: The page number to fetch.
            type: integer
            minimum: 1
            default: 1
        - description: The number of items per page.
          name: size
          in: query
          required: false
          schema:
            title: Size
            description: The number of items per page.
            type: integer
            maximum: 100
            minimum: 1
            default: 50
        - description: The unique identifiers of the users.
          name: user_ids
          in: query
          required: false
          schema:
            title: User Ids
            description: The unique identifiers of the users.
            type: array
            items:
              type: string
              format: uuid
        - description: User types to filter. Only end users are currently supported.
          name: user_types
          in: query
          required: false
          schema:
            title: User Types
            description: User types to filter. Only end users are currently supported.
            type: array
            items:
              const: end_user
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthTokensResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
  /api/v1/authorization-tokens/{id}:
    delete:
      tags:
        - Authorization Tokens
      summary: Delete Authorization Token
      operationId: AuthorizationTokens_deleteToken
      description: Delete authorization token of an end user.
      parameters:
        - description: ID of the authorization token to delete.
          name: id
          in: path
          required: true
          schema:
            title: Id
            description: ID of the authorization token to delete.
            type: string
            format: uuid
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '403':
          description: Forbidden User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceError'
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
components:
  schemas:
    AbortTransactionErrorType:
      title: AbortTransactionErrorType
      type: string
      enum:
        - invalid_transaction_state
        - non_managed_transaction
        - transactions_already_aborted
        - transaction_is_in_batch
    ActionSigner:
      title: ActionSigner
      description: Represents a single signer in an action
      properties:
        user:
          $ref: '#/components/schemas/UserRef'
        modified_at:
          title: Modified At
          description: When the signer received/signed the action
          type: string
          format: date-time
        has_signed:
          title: Has Signed
          description: Whether the signer signed the action
          type: boolean
      type: object
      required:
        - user
        - modified_at
        - has_signed
      x-konfig-properties:
        user:
          description: Possible signer user
    ActionSigningRequest:
      title: ActionSigningRequest
      description: Represents a device sign request for an action in the Foredefi platform
      properties:
        signers:
          title: Signers
          description: >-
            A list of required signers. A signer can be a person or an API
            Signer.
          items:
            $ref: '#/components/schemas/ActionSigner'
          type: array
      type: object
      required:
        - signers
    AddressBookContact:
      title: AddressBookContact
      description: Represents a contact in the Fordefi platform
      oneOf:
        - $ref: '#/components/schemas/CosmosAddressBookContact'
        - $ref: '#/components/schemas/EVMAddressBookContact'
        - $ref: '#/components/schemas/SolanaAddressBookContact'
        - $ref: '#/components/schemas/UtxoAddressBookContact'
      discriminator:
        propertyName: chain_type
        mapping:
          cosmos: '#/components/schemas/CosmosAddressBookContact'
          evm: '#/components/schemas/EVMAddressBookContact'
          solana: '#/components/schemas/SolanaAddressBookContact'
          utxo: '#/components/schemas/UtxoAddressBookContact'
    AddressBookContactChangeReason:
      title: AddressBookContactChangeReason
      type: string
      enum:
        - creation
        - modification
    AddressBookContactChanges:
      title: AddressBookContactChanges
      description: Represents pending changes for a contact in the Fordefi platform
      properties:
        is_being_edited:
          title: Is Being Edited
          description: '`True` if the contact is being edited, `False` otherwise.'
          type: boolean
          deprecated: true
        change_request_id:
          title: Change Request Id
          description: The change request ID of the contact.
          type: string
          format: uuid
        change_request_reason:
          $ref: '#/components/schemas/AddressBookContactChangeReason'
      type: object
      required:
        - is_being_edited
        - change_request_reason
      x-konfig-properties:
        change_request_reason:
          description: The reason for the change request.
    AddressBookContactState:
      title: AddressBookContactState
      type: string
      enum:
        - pending
        - active
        - deleted
    AddressLookupTableState:
      title: AddressLookupTableState
      properties:
        addresses:
          title: Addresses
          description: The addresses that are stored in the table.
          items:
            $ref: '#/components/schemas/EnrichedSolanaAddress'
          type: array
        authority:
          description: The authority address which must sign for each modification.
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        deactivation_slot:
          title: Deactivation Slot
          description: >-
            The table can be closed when the deactivation slot is no longer the
            recent slot.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        last_extended_slot:
          title: Last Extended Slot
          description: >-
            The number of the last slot in which a change constitutes an
            extension of the table.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        last_extended_slot_start_index:
          title: Last Extended Slot Start Index
          description: >-
            The start index where the table was last extended from during the
            `last_extended_slot`.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - addresses
        - deactivation_slot
        - last_extended_slot
        - last_extended_slot_start_index
    AllowanceDetails:
      title: AllowanceDetails
      properties:
        type:
          title: Type
          description: 'A transaction involving an allowance. '
          const: allowance
        spender:
          $ref: '#/components/schemas/EnrichedEvmAddress'
      type: object
      required:
        - type
        - spender
    AllowanceEffect:
      title: AllowanceEffect
      oneOf:
        - $ref: '#/components/schemas/Erc20AllowanceChange'
        - $ref: '#/components/schemas/Erc721AllowanceChange'
        - $ref: '#/components/schemas/Erc721AllowanceForAllChange'
        - $ref: '#/components/schemas/Erc1155AllowanceForAllChange'
      discriminator:
        propertyName: type
        mapping:
          erc1155_for_all: '#/components/schemas/Erc1155AllowanceForAllChange'
          erc20: '#/components/schemas/Erc20AllowanceChange'
          erc721: '#/components/schemas/Erc721AllowanceChange'
          erc721_for_all: '#/components/schemas/Erc721AllowanceForAllChange'
    AminoMessage:
      title: AminoMessage
      properties:
        type:
          title: Type
          description: Message type.
          type: string
        value:
          title: Value
          description: Message value.
          type: string
      type: object
      required:
        - type
        - value
    AminoMessagesList:
      title: AminoMessagesList
      properties:
        format:
          title: Format
          const: amino
        messages:
          title: Messages
          description: List of messages in amino format.
          items:
            $ref: '#/components/schemas/AminoMessage'
          type: array
      type: object
      required:
        - format
        - messages
    AminoRequestData:
      title: AminoRequestData
      properties:
        format:
          title: Format
          const: amino
        messages:
          title: Messages
          description: List of messages in amino format.
          items:
            $ref: '#/components/schemas/AminoMessage'
          type: array
        memo:
          title: Memo
          description: Transaction memo.
          default: ''
          type: string
        std_fee:
          $ref: '#/components/schemas/StdFeeRequest'
        timeout_height:
          title: Timeout Height
          description: Timeout height for this transaction.
          type: integer
          minimum: 0
          default: 0
      type: object
      required:
        - format
        - messages
        - std_fee
      x-konfig-properties:
        std_fee:
          description: Fee info for this transaction.
    AminoSignDoc:
      title: AminoSignDoc
      properties:
        format:
          title: Format
          const: amino
        sign_doc:
          $ref: '#/components/schemas/StdSignDoc'
      type: object
      required:
        - format
        - sign_doc
      x-konfig-properties:
        sign_doc:
          description: Sign doc for amino format.
    ApiSigner:
      title: ApiSigner
      description: Represents an API Signer in the Fordefi platform.
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        user_type:
          title: User Type
          description: The type of the user.
          const: api_signer
        name:
          title: Name
          description: The name of the user.
          type: string
          example: John Doe
        state:
          title: State
          description: >-
            The state of the user. Is one of: <ul><li>`active`: The user can
            perform all actions in the Fordefi platform.<li>`onboarding`: The
            user has been approved but still needs to activate the
            account.<li>`deleted`: The user has been deleted.</ul>
          type: string
          enum:
            - active
            - onboarding
            - deleted
        last_keep_alive_at:
          title: Last Keep Alive At
          description: The last date and time when API Signer sent a keep-alive.
          type: string
          format: date-time
      type: object
      required:
        - id
        - created_at
        - modified_at
        - user_type
        - name
        - state
    ApiSignerRef:
      title: ApiSignerRef
      properties:
        id:
          title: Id
          description: The unique identifier of the user in the Fordefi platform.
          type: string
          format: uuid
        user_type:
          title: User Type
          description: The type of the user.
          const: api_signer
        name:
          title: Name
          description: The name of the user.
          type: string
        state:
          title: State
          description: The state of the user.
          type: string
          enum:
            - active
            - onboarding
            - deleted
      type: object
      required:
        - id
        - user_type
        - name
        - state
    ApiUser:
      title: ApiUser
      description: Represents an API user in the Fordefi platform.
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        user_type:
          title: User Type
          description: The type of the user.
          const: api_user
        name:
          title: Name
          description: The name of the user.
          type: string
          example: John Doe
        state:
          title: State
          description: >-
            The state of the user. Is one of: <ul><li>`active`: The user can
            perform all actions in the Fordefi platform.<li>`deleted`: The user
            has been deleted.</ul>
          type: string
          enum:
            - active
            - deleted
        role:
          $ref: '#/components/schemas/UserRole'
        user_groups:
          title: User Groups
          description: The groups the user belongs to.
          items:
            $ref: '#/components/schemas/UserGroupRef'
          type: array
        pending_addition_to_user_groups:
          title: Pending Addition To User Groups
          description: The groups the user is pending to be added to.
          items:
            $ref: '#/components/schemas/UserGroupRef'
          type: array
        pending_removal_from_user_groups:
          title: Pending Removal From User Groups
          description: The groups the user is pending to be removed from.
          items:
            $ref: '#/components/schemas/UserGroupRef'
          type: array
      type: object
      required:
        - id
        - created_at
        - modified_at
        - user_type
        - name
        - state
        - role
      x-konfig-properties:
        role:
          description: The role of the user.
    ApiUserRef:
      title: ApiUserRef
      properties:
        id:
          title: Id
          description: The unique identifier of the user in the Fordefi platform.
          type: string
          format: uuid
        user_type:
          title: User Type
          description: The type of the user.
          const: api_user
        name:
          title: Name
          description: The name of the user.
          type: string
        state:
          title: State
          description: The state of the user.
          type: string
          enum:
            - active
            - deleted
        role:
          $ref: '#/components/schemas/UserRole'
      type: object
      required:
        - id
        - user_type
        - name
        - state
        - role
      x-konfig-properties:
        role:
          description: The role of the user.
    ApprovalDecision:
      title: ApprovalDecision
      description: Represents a decision state of a single approver
      type: string
      enum:
        - pending
        - approve
        - not_participated
    ApprovalRequest:
      title: ApprovalRequest
      description: Represents an approval request for an action in the Fordefi platform
      properties:
        state:
          $ref: '#/components/schemas/ApprovalRequestState'
        quorum_size:
          title: Quorum Size
          description: The number of approvers required to approve the transaction.
          type: integer
        approvers:
          title: Approvers
          description: A list of the possible approvers.
          items:
            $ref: '#/components/schemas/RequestApprover'
          type: array
        approval_groups:
          title: Approval Groups
          description: A list of the possible approvers from different groups.
          items:
            $ref: '#/components/schemas/ApprovalRequestGroup'
          type: array
        error_message:
          title: Error Message
          description: The error message if the request failed.
          type: string
      type: object
      required:
        - state
        - quorum_size
        - approvers
      x-konfig-properties:
        state:
          description: The state of the approval request.
    ApprovalRequestGroup:
      title: ApprovalRequestGroup
      properties:
        quorum_size:
          title: Quorum Size
          description: The number of approvers required to approve the transaction.
          type: integer
        approvers:
          title: Approvers
          description: A list of the possible approvers.
          items:
            $ref: '#/components/schemas/RequestApprover'
          type: array
      type: object
      required:
        - quorum_size
        - approvers
    ApprovalRequestState:
      title: ApprovalRequestState
      description: Represents the whole approval request state
      type: string
      enum:
        - created
        - approved
        - insufficient_approvers
        - auto_approved
        - failed
    ApprovalState:
      title: ApprovalState
      description: Represents an approval state of a single approver
      type: string
      enum:
        - pending
        - approved
        - unauthorized
        - not_participated
    ApproveTransactionErrorType:
      title: ApproveTransactionErrorType
      type: string
      enum:
        - invalid_transaction_state
        - non_managed_transaction
    Asset:
      title: Asset
      oneOf:
        - $ref: '#/components/schemas/CosmosAsset'
        - $ref: '#/components/schemas/EvmAsset'
        - $ref: '#/components/schemas/SolanaAsset'
        - $ref: '#/components/schemas/UtxoAsset'
      discriminator:
        propertyName: type
        mapping:
          cosmos_asset: '#/components/schemas/CosmosAsset'
          evm_asset: '#/components/schemas/EvmAsset'
          solana_asset: '#/components/schemas/SolanaAsset'
          utxo_asset: '#/components/schemas/UtxoAsset'
    AssetIdentifierRequest:
      title: AssetIdentifierRequest
      oneOf:
        - $ref: '#/components/schemas/CosmosAssetIdentifierRequest'
        - $ref: '#/components/schemas/EvmAssetIdentifierRequest'
        - $ref: '#/components/schemas/SolanaAssetIdentifierRequest'
        - $ref: '#/components/schemas/UtxoAssetIdentifierRequest'
      discriminator:
        propertyName: type
        mapping:
          cosmos: '#/components/schemas/CosmosAssetIdentifierRequest'
          evm: '#/components/schemas/EvmAssetIdentifierRequest'
          solana: '#/components/schemas/SolanaAssetIdentifierRequest'
          utxo: '#/components/schemas/UtxoAssetIdentifierRequest'
    AuthToken:
      title: AuthToken
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        user_id:
          title: User Id
          description: ID of the end user the authorization token is issued for.
          type: string
          format: uuid
        expired_at:
          title: Expired At
          description: Token expiration time.
          type: string
          format: date-time
        user_type:
          title: User Type
          description: Type of the user the authorization token is issued for.
          const: end_user
      type: object
      required:
        - id
        - created_at
        - modified_at
        - user_id
        - expired_at
        - user_type
    Balances:
      title: Balances
      description: The cryptocurrency balances of the asset.
      properties:
        mined:
          title: Mined
          description: The cryptocurrency mined balance of the asset.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        pending_incoming:
          title: Pending Incoming
          description: The cryptocurrency pending balance of the asset.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - mined
        - pending_incoming
    BaseError:
      title: BaseError
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
      type: object
      required:
        - title
        - detail
    BatchData:
      title: BatchData
      properties:
        batch_id:
          title: Batch Id
          description: The unique identifier of the batch.
          type: string
          format: uuid
        index_in_batch:
          title: Index In Batch
          description: Index of transaction in the batch.
          type: integer
        batch_size:
          title: Batch Size
          description: The number of transactions in the batch.
          type: integer
      type: object
      required:
        - batch_id
        - index_in_batch
        - batch_size
    BinaryHashPayload:
      title: BinaryHashPayload
      properties:
        format:
          title: Format
          description: ''
          const: hash_binary
        hash_binary:
          title: Hash Binary
          description: >-
            The payload to sign, according to the standard ECDSA binary
            representation, encoded in base64 format. Reference:
            https://www.rfc-editor.org/rfc/rfc6979#section-2.3.2
          type: string
          minLength: 1
          example: SGVsbG8=
      type: object
      required:
        - format
        - hash_binary
    BitcoinVaultCreateAddressType:
      title: BitcoinVaultCreateAddressType
      type: string
      enum:
        - legacy
        - segwit
    BlackBoxSignature:
      title: BlackBoxSignature
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        managed_transaction_data:
          $ref: '#/components/schemas/ManagedTransactionData'
        signatures:
          title: Signatures
          description: The transaction signatures.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        type:
          title: Type
          description: Black Box signature type.
          const: black_box_signature
        state:
          $ref: '#/components/schemas/BlackBoxSignatureState'
        state_changes:
          title: State Changes
          description: The state changes of the black box signature.
          items:
            $ref: '#/components/schemas/BlackBoxSignatureStateChange'
          type: array
        payload:
          title: Payload
          description: The payload requested to be signed, represented in base64 format.
          type: string
          minLength: 1
          example: SGVsbG8=
        vault:
          $ref: '#/components/schemas/VaultRef'
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/BlackBoxSignatureEcdsaStarkDetails'
            - $ref: '#/components/schemas/BlackBoxSignatureEcdsaSecp256k1Details'
          discriminator:
            propertyName: type
            mapping:
              ecdsa_secp256k1: '#/components/schemas/BlackBoxSignatureEcdsaSecp256k1Details'
              ecdsa_stark: '#/components/schemas/BlackBoxSignatureEcdsaStarkDetails'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - managed_transaction_data
        - signatures
        - direction
        - type
        - state
        - state_changes
        - payload
        - vault
        - details
      x-konfig-properties:
        managed_transaction_data:
          description: >-
            Managed transaction data. Presented if the transaction was initiated
            from the Fordefi system itself, in contrast to unmanaged
            transactions (which are, for example, transfers of funds into a
            vault visible to Fordefi). 
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
          default: unset
        direction:
          description: The direction of the transaction.
        state:
          description: The state of the black box signature.
        vault:
          description: The vault whose key has been used for signing.
    BlackBoxSignatureEcdsaSecp256k1Details:
      title: BlackBoxSignatureEcdsaSecp256k1Details
      properties:
        signature:
          description: The ECDSA signature.
          $ref: '#/components/schemas/EcdsaSignature'
        hash_binary:
          title: Hash Binary
          description: >-
            The payload to sign, according to the standard ECDSA binary
            representation, encoded in base64 format. Reference:
            https://www.rfc-editor.org/rfc/rfc6979#section-2.3.2
          type: string
          minLength: 1
          example: SGVsbG8=
        hash_integer:
          title: Hash Integer
          description: The payload to sign, as a big-endian integer.
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
        type:
          title: Type
          description: ECDSA over the secp256k1 curve signature.
          const: ecdsa_secp256k1
      type: object
      required:
        - hash_binary
        - hash_integer
        - type
    BlackBoxSignatureEcdsaStarkDetails:
      title: BlackBoxSignatureEcdsaStarkDetails
      properties:
        signature:
          description: The ECDSA signature.
          $ref: '#/components/schemas/EcdsaSignature'
        hash_binary:
          title: Hash Binary
          description: >-
            The payload to sign, according to the standard ECDSA binary
            representation, encoded in base64 format. Reference:
            https://www.rfc-editor.org/rfc/rfc6979#section-2.3.2
          type: string
          minLength: 1
          example: SGVsbG8=
        hash_integer:
          title: Hash Integer
          description: The payload to sign, as a big-endian integer.
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
        type:
          title: Type
          description: ECDSA over the Stark curve signature.
          const: ecdsa_stark
      type: object
      required:
        - hash_binary
        - hash_integer
        - type
    BlackBoxSignatureState:
      title: BlackBoxSignatureState
      type: string
      enum:
        - waiting_for_approval
        - approved
        - signed
        - completed
        - error_signing
        - aborted
    BlackBoxSignatureStateChange:
      title: BlackBoxSignatureStateChange
      properties:
        changed_at:
          title: Changed At
          description: The date and time when the state was changed.
          type: string
          format: date-time
        previous_state:
          description: The previous state of the black box signature.
          $ref: '#/components/schemas/BlackBoxSignatureState'
        new_state:
          $ref: '#/components/schemas/BlackBoxSignatureState'
      type: object
      required:
        - changed_at
        - new_state
      x-konfig-properties:
        new_state:
          description: The new state of the black box signature.
    BlackBoxVault:
      title: BlackBoxVault
      description: Represents a Black Box vault in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the vault.
          type: string
        created_by:
          $ref: '#/components/schemas/UserRef'
        derivation_path:
          title: Derivation Path
          description: The BIP 44 derivation path of the vault.
          type: string
          deprecated: true
          example: m/44/60/0/0/0
        public_key_compressed:
          title: Public Key Compressed
          description: >-
            The compressed public key of the vault. As defined in the SEC1
            standard: https://www.secg.org/SEC1-Ver-1.0.pdf.
          type: string
          example: SGVsbG8=
        derivation_info:
          $ref: '#/components/schemas/VaultDerivationInfo'
        keyset:
          $ref: '#/components/schemas/KeysetRef'
        key_holder:
          description: >-
            The user who owns the keyset of the vault. If not provided, the
            vault is owned by the organization.
          $ref: '#/components/schemas/EndUserRef'
        vault_group:
          $ref: '#/components/schemas/VaultGroupRef'
        pending_vault_group_action:
          title: Pending Vault Group Action
          description: Details of pending vault movement to another vault group.
          oneOf:
            - $ref: '#/components/schemas/PendingVaultGroupActionAdd'
            - $ref: '#/components/schemas/PendingVaultGroupActionRemove'
          discriminator:
            propertyName: type
            mapping:
              add: '#/components/schemas/PendingVaultGroupActionAdd'
              remove: '#/components/schemas/PendingVaultGroupActionRemove'
        state:
          $ref: '#/components/schemas/VaultState'
        type:
          title: Type
          description: Black Box vault type.
          const: black_box
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/EcdsaStarkBlackBoxVault'
            - $ref: '#/components/schemas/EcdsaSecp256k1BlackBoxVault'
          discriminator:
            propertyName: type
            mapping:
              ecdsa_secp256k1: '#/components/schemas/EcdsaSecp256k1BlackBoxVault'
              ecdsa_stark: '#/components/schemas/EcdsaStarkBlackBoxVault'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - created_by
        - derivation_path
        - public_key_compressed
        - derivation_info
        - keyset
        - vault_group
        - state
        - type
        - details
      x-konfig-properties:
        created_by:
          description: Details of the vault creator.
        derivation_info:
          description: The derivation info of the vault.
        keyset:
          description: The keyset of the vault.
        vault_group:
          description: The vault group this vault belongs to.
        state:
          description: State of the vault.
    BlockchainExplorer:
      title: BlockchainExplorer
      description: A blockchain explorer entry point.
      properties:
        transaction_url:
          title: Transaction Url
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          example: https://etherscan.io/tx/
        address_url:
          title: Address Url
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          example: https://etherscan.io/address/
        root_url:
          title: Root Url
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          example: https://etherscan.io/
        transaction_format_url:
          title: Transaction Format Url
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          example: https://etherscan.io/tx/%s
        address_format_url:
          title: Address Format Url
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          example: https://etherscan.io/address/%s
      type: object
      required:
        - transaction_url
        - address_url
        - root_url
        - transaction_format_url
        - address_format_url
    BridgeDetails:
      title: BridgeDetails
      properties:
        type:
          title: Type
          description: >-
            A transaction involving the transfer of funds from one blockchain to
            another.
          const: cross_chain_bridge
        bridge_effect:
          $ref: '#/components/schemas/EvmBridgeEffect'
      type: object
      required:
        - type
        - bridge_effect
      x-konfig-properties:
        bridge_effect:
          description: The bridge effects of the transaction.
    ChainType:
      title: ChainType
      type: string
      enum:
        - cosmos
        - evm
        - solana
        - utxo
    ChainUniqueId:
      title: ChainUniqueId
      type: string
      enum:
        - cosmos_akashnet-2
        - cosmos_archway-1
        - cosmos_axelar-dojo-1
        - cosmos_celestia
        - cosmos_cosmoshub-4
        - cosmos_dydx-mainnet-1
        - cosmos_dydx-testnet-4
        - cosmos_dymension_1100-1
        - cosmos_noble-1
        - cosmos_osmosis-1
        - cosmos_pacific-1
        - cosmos_stride-1
        - evm_1
        - evm_5
        - evm_10
        - evm_56
        - evm_100
        - evm_137
        - evm_169
        - evm_250
        - evm_324
        - evm_1030
        - evm_1100
        - evm_1101
        - evm_2222
        - evm_4200
        - evm_5000
        - evm_7700
        - evm_8453
        - evm_17000
        - evm_80001
        - evm_42161
        - evm_43114
        - evm_59144
        - evm_81457
        - evm_11155111
        - evm_arbitrum_mainnet
        - evm_avalanche_chain
        - evm_base_mainnet
        - evm_blast_mainnet
        - evm_bsc_mainnet
        - evm_canto_mainnet
        - evm_conflux_mainnet
        - evm_dymension_mainnet
        - evm_ethereum_goerli
        - evm_ethereum_holesky
        - evm_ethereum_mainnet
        - evm_ethereum_sepolia
        - evm_fantom_mainnet
        - evm_gnosis_mainnet
        - evm_kava_mainnet
        - evm_linea_mainnet
        - evm_optimism_mainnet
        - evm_manta_pacific_mainnet
        - evm_mantle_mainnet
        - evm_merlin_mainnet
        - evm_polygon_mainnet
        - evm_polygon_mumbai
        - evm_polygon_zkevm_mainnet
        - evm_zksync_era_mainnet
        - solana_mainnet
        - solana_devnet
        - bitcoin_mainnet
        - bitcoin_testnet
    ContactRef:
      title: ContactRef
      description: >-
        Represents a reference to an address book contact in the Fordefi
        platform.
      properties:
        id:
          title: Id
          description: >-
            The unique identifier of the address book contact in the Fordefi
            platform.
          type: string
          format: uuid
        name:
          title: Name
          description: The name of the contact.
          type: string
        address_ref:
          title: Address Ref
          oneOf:
            - $ref: '#/components/schemas/CosmosAddressBookContactAddressRef'
            - $ref: '#/components/schemas/EVMAddressBookContactAddressRef'
            - $ref: '#/components/schemas/SolanaAddressBookContactAddressRef'
            - $ref: '#/components/schemas/UtxoAddressBookContactAddressRef'
          discriminator:
            propertyName: chain_type
            mapping:
              cosmos: '#/components/schemas/CosmosAddressBookContactAddressRef'
              evm: '#/components/schemas/EVMAddressBookContactAddressRef'
              solana: '#/components/schemas/SolanaAddressBookContactAddressRef'
              utxo: '#/components/schemas/UtxoAddressBookContactAddressRef'
      type: object
      required:
        - id
        - name
        - address_ref
    ContactSortableFields:
      title: ContactSortableFields
      type: string
      enum:
        - created_at_asc
        - created_at_desc
        - modified_at_asc
        - modified_at_desc
        - name_asc
        - name_desc
    ContractCallDetails:
      title: ContractCallDetails
      properties:
        type:
          title: Type
          description: A transaction involving a generic call to a smart contract.
          const: contract_call
      type: object
      required:
        - type
    CosmosAddressBookContact:
      title: CosmosAddressBookContact
      description: Represents a contact in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the contact.
          type: string
        modified_by:
          $ref: '#/components/schemas/UserRef'
        state:
          $ref: '#/components/schemas/AddressBookContactState'
        groups:
          title: Groups
          description: List of contact's groups.
          items:
            $ref: '#/components/schemas/GroupRef'
          type: array
        pending_changes:
          description: Pending changes for the contact.
          $ref: '#/components/schemas/AddressBookContactChanges'
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: cosmos
        address:
          title: Address
          description: The address on the cosmos chain.
          type: string
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - modified_by
        - state
        - groups
        - chain_type
        - address
        - chain
      x-konfig-properties:
        modified_by:
          description: Address last modifier.
        state:
          description: The state of the contact.
        chain:
          description: The chain the contact belongs to.
    CosmosAddressBookContactAddressRef:
      title: CosmosAddressBookContactAddressRef
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: cosmos
        address:
          title: Address
          description: The address on the cosmos chain.
          type: string
          example: cosmos1tdk0g5d4ry9lq0erejttyufqcvwpqdj6tdql38
        chain:
          $ref: '#/components/schemas/CosmosChain'
      type: object
      required:
        - chain_type
        - address
        - chain
      x-konfig-properties:
        chain:
          description: The chain the contact belongs to.
    CosmosArbitraryMessageRequest:
      title: CosmosArbitraryMessageRequest
      properties:
        type:
          title: Type
          description: Arbitrary message standard.
          const: arbitrary_message_type
        chain:
          $ref: '#/components/schemas/CosmosChainUniqueId'
        data:
          $ref: '#/components/schemas/CosmosMessageData'
      type: object
      required:
        - type
        - chain
        - data
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
        data:
          description: The message to be signed.
    CosmosAsset:
      title: CosmosAsset
      properties:
        id:
          title: Id
          description: The asset ID.
          type: string
          format: uuid
        decimals:
          title: Decimals
          type: integer
          minimum: 0
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        name:
          title: Name
          description: The name of the asset.
          type: string
        symbol:
          title: Symbol
          description: The symbol (ticker) of the asset.
          type: string
        hidden:
          title: Hidden
          description: '`True` if this asset was set to be hidden, `False` otherwise.'
          type: boolean
        verified:
          title: Verified
          description: '`True` if this asset is verified by Fordefi, `False` otherwise.'
          type: boolean
        asset_identifier:
          $ref: '#/components/schemas/EnrichedAssetIdentifier'
        metadata_uri:
          title: Metadata Uri
          description: The URI of the asset metadata.
          type: string
        type:
          title: Type
          description: Cosmos asset type.
          const: cosmos_asset
          deprecated: true
        details:
          title: Details
          anyOf:
            - $ref: '#/components/schemas/CosmosNativeAsset'
            - $ref: '#/components/schemas/CosmosTokenAsset'
          deprecated: true
      type: object
      required:
        - id
        - decimals
        - name
        - symbol
        - hidden
        - verified
        - asset_identifier
        - type
        - details
      x-konfig-properties:
        asset_identifier:
          description: The asset identifier.
    CosmosAssetIdentifierRequest:
      title: CosmosAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: Cosmos asset identifier type.
          const: cosmos
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/CosmosNativeAssetIdentifierRequest'
            - $ref: '#/components/schemas/CosmosTokenAssetIdentifierRequest'
          discriminator:
            propertyName: type
            mapping:
              native: '#/components/schemas/CosmosNativeAssetIdentifierRequest'
              token: '#/components/schemas/CosmosTokenAssetIdentifierRequest'
      type: object
      required:
        - type
        - details
    CosmosBalanceChangeEffect:
      title: CosmosBalanceChangeEffect
      oneOf:
        - $ref: '#/components/schemas/CosmosNativeBalanceChange'
        - $ref: '#/components/schemas/CosmosTokenBalanceChange'
      discriminator:
        propertyName: type
        mapping:
          native: '#/components/schemas/CosmosNativeBalanceChange'
          token: '#/components/schemas/CosmosTokenBalanceChange'
    CosmosBech32Prefix:
      title: CosmosBech32Prefix
      type: string
      enum:
        - akash
        - archway
        - axelar
        - celestia
        - cosmos
        - dydx
        - dym
        - inj
        - noble
        - osmo
        - sei
        - stride
    CosmosBechAddress:
      title: CosmosBechAddress
      properties:
        chain:
          $ref: '#/components/schemas/CosmosChainUniqueId'
        address:
          title: Address
          description: The address as bech32
          type: string
          example: cosmos1tdk0g5d4ry9lq0erejttyufqcvwpqdj6tdql38
      type: object
      required:
        - chain
        - address
      x-konfig-properties:
        chain:
          description: The Cosmos chain.
    CosmosBechAddressEnrichedChain:
      title: CosmosBechAddressEnrichedChain
      properties:
        address:
          title: Address
          description: The address as bech32
          type: string
        chain:
          description: The Cosmos chain.
          deprecated: true
          $ref: '#/components/schemas/CosmosChainUniqueId'
        enriched_chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
      type: object
      required:
        - address
        - enriched_chain
      x-konfig-properties:
        enriched_chain:
          description: Enriched chain of the address.
    CosmosChain:
      title: CosmosChain
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: cosmos
        unique_id:
          $ref: '#/components/schemas/CosmosChainUniqueId'
      type: object
      required:
        - chain_type
        - unique_id
      x-konfig-properties:
        unique_id:
          description: The Cosmos chain unique id.
    CosmosChainUniqueId:
      title: CosmosChainUniqueId
      type: string
      enum:
        - cosmos_akashnet-2
        - cosmos_archway-1
        - cosmos_axelar-dojo-1
        - cosmos_celestia
        - cosmos_cosmoshub-4
        - cosmos_dydx-mainnet-1
        - cosmos_dydx-testnet-4
        - cosmos_dymension_1100-1
        - cosmos_noble-1
        - cosmos_osmosis-1
        - cosmos_pacific-1
        - cosmos_stride-1
    CosmosCoinWithAmount:
      title: CosmosCoinWithAmount
      properties:
        coin_with_amount:
          title: Coin With Amount
          description: The coin info.
          oneOf:
            - $ref: '#/components/schemas/CosmosNativeCoinWithAmount'
            - $ref: '#/components/schemas/CosmosTokenWithAmount'
          discriminator:
            propertyName: type
            mapping:
              native: '#/components/schemas/CosmosNativeCoinWithAmount'
              token: '#/components/schemas/CosmosTokenWithAmount'
      type: object
      required:
        - coin_with_amount
    CosmosEffects:
      title: CosmosEffects
      properties:
        balance_changes:
          title: Balance Changes
          description: The aggregated balance changes of addresses.
          items:
            $ref: '#/components/schemas/CosmosBalanceChangeEffect'
          type: array
        transfers:
          title: Transfers
          description: The transfer events of the transaction.
          items:
            $ref: '#/components/schemas/CosmosTransferEffect'
          type: array
      type: object
      required:
        - balance_changes
        - transfers
    CosmosGasDebit:
      title: CosmosGasDebit
      properties:
        gas_used:
          title: Gas Used
          description: Gas used while processing the transaction.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        total_fee:
          title: Total Fee
          description: The total fee paid.
          items:
            $ref: '#/components/schemas/CosmosCoinWithAmount'
          type: array
        fiat_prices:
          title: Fiat Prices
          description: The prices of the coins used to pay the fee.
          items:
            $ref: '#/components/schemas/Price'
          type: array
      type: object
      required:
        - gas_used
        - total_fee
        - fiat_prices
    CosmosMessage:
      title: CosmosMessage
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        managed_transaction_data:
          description: >-
            Managed transaction data. Presented if the transaction was initiated
            from the Fordefi system itself, in contrast to unmanaged
            transactions (which are, for example, transfers of funds into a
            vault visible to Fordefi). 
          $ref: '#/components/schemas/ManagedTransactionData'
        signatures:
          title: Signatures
          description: The transaction signatures.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        type:
          title: Type
          description: Cosmos message type.
          const: cosmos_message
        cosmos_message_type:
          $ref: '#/components/schemas/CosmosMessageType'
        state:
          $ref: '#/components/schemas/CosmosMessageState'
        state_changes:
          title: State Changes
          description: The state changes of the message.
          items:
            $ref: '#/components/schemas/CosmosMessageStateChange'
          type: array
        data:
          $ref: '#/components/schemas/CosmosMessageData'
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - signatures
        - direction
        - type
        - cosmos_message_type
        - state
        - state_changes
        - data
        - chain
      x-konfig-properties:
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
          default: unset
        direction:
          description: The direction of the transaction.
        cosmos_message_type:
          description: The type of the Cosmos message.
        state:
          description: The state of the message.
        data:
          description: >-
            The raw data of the message, encoded in base64 if bytes, else plain
            string.
        chain:
          description: The details of the chain that this message is on.
    CosmosMessageBase64Data:
      title: CosmosMessageBase64Data
      properties:
        type:
          title: Type
          description: The type of the Cosmos message data.
          const: base64
        data:
          title: Data
          description: The data encoded in base64.
          type: string
          example: SGVsbG8=
      type: object
      required:
        - type
        - data
    CosmosMessageData:
      title: CosmosMessageData
      oneOf:
        - $ref: '#/components/schemas/CosmosMessageStrData'
        - $ref: '#/components/schemas/CosmosMessageBase64Data'
      discriminator:
        propertyName: type
        mapping:
          base64: '#/components/schemas/CosmosMessageBase64Data'
          string: '#/components/schemas/CosmosMessageStrData'
    CosmosMessageState:
      title: CosmosMessageState
      type: string
      enum:
        - waiting_for_approval
        - approved
        - signed
        - completed
        - error_signing
        - aborted
    CosmosMessageStateChange:
      title: CosmosMessageStateChange
      properties:
        changed_at:
          title: Changed At
          description: The date and time when the state was changed.
          type: string
          format: date-time
        previous_state:
          description: The previous state of the message.
          $ref: '#/components/schemas/CosmosMessageState'
        new_state:
          $ref: '#/components/schemas/CosmosMessageState'
      type: object
      required:
        - changed_at
        - new_state
      x-konfig-properties:
        new_state:
          description: The new state of the message.
    CosmosMessageStrData:
      title: CosmosMessageStrData
      properties:
        type:
          title: Type
          description: The type of the Cosmos message data.
          const: string
        data:
          title: Data
          description: The data as plain string.
          type: string
      type: object
      required:
        - type
        - data
    CosmosMessageType:
      title: CosmosMessageType
      type: string
      const: arbitrary_message_type
    CosmosMultipleMessagesTransactionDetails:
      title: CosmosMultipleMessagesTransactionDetails
      properties:
        transaction_data:
          $ref: '#/components/schemas/MessagesList'
        type:
          title: Type
          description: A transaction of multiple messages.
          const: messages
      type: object
      required:
        - transaction_data
        - type
      x-konfig-properties:
        transaction_data:
          description: List of transaction's messages.
    CosmosNativeAsset:
      title: CosmosNativeAsset
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
        type:
          title: Type
          description: Cosmos asset type.
          const: cosmos_native_asset
      type: object
      required:
        - chain
        - type
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    CosmosNativeAssetIdentifierRequest:
      title: CosmosNativeAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: Cosmos asset identifier type.
          const: native
        chain:
          $ref: '#/components/schemas/CosmosChainUniqueId'
      type: object
      required:
        - type
        - chain
      x-konfig-properties:
        chain:
          description: The unique id of the chain of the asset.
    CosmosNativeBalanceChange:
      title: CosmosNativeBalanceChange
      properties:
        owner:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        diff:
          title: Diff
          description: >-
            The amount of native currency that was added or deducted from the
            owner's balance. If the amount was deducted, the value is negative;
            if the amount was added, the value is positive.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        type:
          title: Type
          const: native
        coin_info:
          $ref: '#/components/schemas/CosmosNativeCoinInfo'
      type: object
      required:
        - owner
        - diff
        - type
        - coin_info
      x-konfig-properties:
        owner:
          description: The address affected by the balance change.
        coin_info:
          description: The native coin that was added or deducted from the owner's balance.
    CosmosNativeCoin:
      title: CosmosNativeCoin
      properties:
        description:
          title: Description
          description: The description of the coin.
          default: ''
          deprecated: true
          type: string
        name:
          title: Name
          description: The name of the coin.
          type: string
        symbol:
          title: Symbol
          description: The symbol of the coin.
          type: string
        display:
          title: Display
          description: The display string of the coin.
          default: ''
          deprecated: true
          type: string
        base_denom:
          title: Base Denom
          description: The base denom of the coin.
          type: string
        denom:
          title: Denom
          description: The denom of the coin.
          type: string
        decimals:
          title: Decimals
          description: The decimals relative to the base coin.
          type: integer
        logo_url:
          title: Logo Url
          description: The coin logo url.
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        explorer_url:
          title: Explorer Url
          description: The explorer url of the coin.
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        type:
          title: Type
          const: native
      type: object
      required:
        - name
        - symbol
        - base_denom
        - denom
        - decimals
        - type
    CosmosNativeCoinInfo:
      title: CosmosNativeCoinInfo
      properties:
        is_verified:
          title: Is Verified
          description: '`True` if the contract is verified, `False` otherwise.'
          type: boolean
        coin:
          $ref: '#/components/schemas/CosmosNativeCoin'
      type: object
      required:
        - is_verified
        - coin
    CosmosNativeCoinWithAmount:
      title: CosmosNativeCoinWithAmount
      properties:
        amount:
          title: Amount
          description: The amount of the coin in base unit (for example uatom).
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        type:
          title: Type
          const: native
        coin:
          $ref: '#/components/schemas/CosmosNativeCoin'
      type: object
      required:
        - amount
        - type
        - coin
      x-konfig-properties:
        coin:
          description: The coin.
    CosmosNativeTransfer:
      title: CosmosNativeTransfer
      properties:
        from:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        to:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        amount:
          title: Amount
          description: The amount of the transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        type:
          title: Type
          const: native
        coin_info:
          $ref: '#/components/schemas/CosmosNativeCoinInfo'
      type: object
      required:
        - from
        - to
        - amount
        - type
        - coin_info
      x-konfig-properties:
        from:
          description: The sender of the transfer.
        to:
          description: The receiver of the transfer.
        coin_info:
          description: The native coin that was transferred.
    CosmosNativeTransferDetails:
      title: CosmosNativeTransferDetails
      properties:
        transaction_data:
          $ref: '#/components/schemas/MessagesList'
        direction:
          $ref: '#/components/schemas/TransferDirection'
        sender:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        recipient:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        is_internal:
          title: Is Internal
          description: >-
            Is this transfer an internal transfer between two vaults. None if
            the transaction is incoming.
          type: boolean
        type:
          title: Type
          description: >-
            A transaction involving a native transfer from one address to
            another.
          const: native_transfer
      type: object
      required:
        - transaction_data
        - direction
        - sender
        - recipient
        - type
      x-konfig-properties:
        transaction_data:
          description: List of transaction's messages.
        direction:
          description: The direction of the movement of funds, in case of a transfer.
          deprecated: true
        sender:
          description: The sender.
        recipient:
          description: The recipient.
    CosmosSuggestedFees:
      title: CosmosSuggestedFees
      properties:
        type:
          title: Type
          description: The type of the chain.
          const: cosmos
        chain_unique_id:
          $ref: '#/components/schemas/CosmosChainUniqueId'
        fee_per_signature:
          title: Fee Per Signature
          description: The fee paid for each signature in the transaction.
          type: number
      type: object
      required:
        - type
        - chain_unique_id
      x-konfig-properties:
        chain_unique_id:
          description: The cosmos chain unique id.
    CosmosToken:
      title: CosmosToken
      properties:
        description:
          title: Description
          description: The description of the coin.
          default: ''
          deprecated: true
          type: string
        name:
          title: Name
          description: The name of the coin.
          type: string
        symbol:
          title: Symbol
          description: The symbol of the coin.
          type: string
        display:
          title: Display
          description: The display string of the coin.
          default: ''
          deprecated: true
          type: string
        base_denom:
          title: Base Denom
          description: The base denom of the coin.
          type: string
        denom:
          title: Denom
          description: The denom of the coin.
          type: string
        decimals:
          title: Decimals
          description: The decimals relative to the base coin.
          type: integer
        logo_url:
          title: Logo Url
          description: The coin logo url.
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        explorer_url:
          title: Explorer Url
          description: The explorer url of the coin.
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        type:
          title: Type
          const: token
      type: object
      required:
        - name
        - symbol
        - base_denom
        - denom
        - decimals
        - type
    CosmosTokenAsset:
      title: CosmosTokenAsset
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
        type:
          title: Type
          description: Cosmos asset type.
          const: cosmos_token_asset
      type: object
      required:
        - chain
        - type
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    CosmosTokenAssetIdentifierRequest:
      title: CosmosTokenAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: Token asset identifier type.
          const: token
        chain:
          $ref: '#/components/schemas/CosmosChainUniqueId'
        denom:
          title: Denom
          description: The denom of the asset.
          type: string
      type: object
      required:
        - type
        - chain
        - denom
      x-konfig-properties:
        chain:
          description: The unique id of the chain of the asset.
    CosmosTokenBalanceChange:
      title: CosmosTokenBalanceChange
      properties:
        owner:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        diff:
          title: Diff
          description: >-
            The amount of native currency that was added or deducted from the
            owner's balance. If the amount was deducted, the value is negative;
            if the amount was added, the value is positive.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        type:
          title: Type
          const: token
        coin_info:
          $ref: '#/components/schemas/CosmosTokenInfo'
      type: object
      required:
        - owner
        - diff
        - type
        - coin_info
      x-konfig-properties:
        owner:
          description: The address affected by the balance change.
        coin_info:
          description: The coin that was added or deducted from the owner's balance.
    CosmosTokenInfo:
      title: CosmosTokenInfo
      properties:
        is_verified:
          title: Is Verified
          description: '`True` if the contract is verified, `False` otherwise.'
          type: boolean
        coin:
          $ref: '#/components/schemas/CosmosToken'
      type: object
      required:
        - is_verified
        - coin
    CosmosTokenTransfer:
      title: CosmosTokenTransfer
      properties:
        from:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        to:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        amount:
          title: Amount
          description: The amount of the transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        type:
          title: Type
          const: token
        coin_info:
          $ref: '#/components/schemas/CosmosTokenInfo'
      type: object
      required:
        - from
        - to
        - amount
        - type
        - coin_info
      x-konfig-properties:
        from:
          description: The sender of the transfer.
        to:
          description: The receiver of the transfer.
        coin_info:
          description: The coin that was transferred.
    CosmosTokenTransferDetails:
      title: CosmosTokenTransferDetails
      properties:
        transaction_data:
          $ref: '#/components/schemas/MessagesList'
        direction:
          $ref: '#/components/schemas/TransferDirection'
        sender:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        recipient:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        is_internal:
          title: Is Internal
          description: >-
            Is this transfer an internal transfer between two vaults. None if
            the transaction is incoming.
          type: boolean
        type:
          title: Type
          description: >-
            A transaction involving a token transfer from one address to
            another.
          const: token_transfer
      type: object
      required:
        - transaction_data
        - direction
        - sender
        - recipient
        - type
      x-konfig-properties:
        transaction_data:
          description: List of transaction's messages.
        direction:
          description: The direction of the movement of funds, in case of a transfer.
          deprecated: true
        sender:
          description: The sender.
        recipient:
          description: The recipient.
    CosmosTokenWithAmount:
      title: CosmosTokenWithAmount
      properties:
        amount:
          title: Amount
          description: The amount of the coin in base unit (for example uatom).
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        type:
          title: Type
          const: token
        coin:
          $ref: '#/components/schemas/CosmosToken'
      type: object
      required:
        - amount
        - type
        - coin
      x-konfig-properties:
        coin:
          description: The coin.
    CosmosTransaction:
      title: CosmosTransaction
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        managed_transaction_data:
          description: >-
            Managed transaction data. Presented if the transaction was initiated
            from the Fordefi system itself, in contrast to unmanaged
            transactions (which are, for example, transfers of funds into a
            vault visible to Fordefi). 
          $ref: '#/components/schemas/ManagedTransactionData'
        signatures:
          title: Signatures
          description: The transaction signatures.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        cosmos_transaction_type_details:
          $ref: '#/components/schemas/CosmosTransactionTypeDetails'
        memo:
          title: Memo
          description: Transaction memo.
          type: string
          default: ''
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
        from:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        sender:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        type:
          title: Type
          description: The type of the transaction.
          const: cosmos_transaction
        hash:
          title: Hash
          description: The hash of the transaction.
          type: string
          maxLength: 64
          minLength: 64
          pattern: ^[a-fA-F0-9]+$
          example: 12BE33E7F1B6CA644CC006FB8CBD0C4C7C95B1072DA90E9F4C39CB837072BBF5
        explorer_url:
          title: Explorer Url
          description: The URL of this transaction in a blockchain explorer.
          example: >-
            https://www.mintscan.io/cosmos/txs/65A22C9050C8A29DE15CD8D0D08C847766B734403008C428C3148A23137ED3EF
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        state:
          $ref: '#/components/schemas/CosmosTransactionState'
        state_changes:
          title: State Changes
          description: The state changes of the transaction.
          items:
            $ref: '#/components/schemas/CosmosTransactionStateChange'
          type: array
        signers_info:
          title: Signers Info
          description: List of signers info.
          items:
            $ref: '#/components/schemas/SignerInfo'
          type: array
        expected_result:
          description: The expected result of the transaction in case it is mined.
          $ref: '#/components/schemas/CosmosTransactionResult'
        mined_result:
          description: The result of the transaction after it was mined.
          $ref: '#/components/schemas/CosmosTransactionResult'
        sign_doc:
          description: The signed document of the transaction.
          $ref: '#/components/schemas/SignDoc'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - signatures
        - direction
        - cosmos_transaction_type_details
        - chain
        - from
        - sender
        - type
        - state
        - state_changes
        - signers_info
      x-konfig-properties:
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
          default: unset
        direction:
          description: The direction of the transaction.
        cosmos_transaction_type_details:
          description: Transaction details
        chain:
          description: The details of the chain this transaction is on
        from:
          description: The address that originated the transaction.
          deprecated: true
        sender:
          description: The address that originated the transaction.
        state:
          description: The state of the transaction.
    CosmosTransactionResult:
      title: CosmosTransactionResult
      properties:
        message:
          title: Message
          description: In case of error, the message describes what failed.
          type: string
        gas_debit:
          $ref: '#/components/schemas/CosmosGasDebit'
        effects:
          $ref: '#/components/schemas/CosmosEffects'
      type: object
      required:
        - gas_debit
        - effects
      x-konfig-properties:
        gas_debit:
          description: The gas debit of the transaction.
        effects:
          description: The effects of the transaction.
    CosmosTransactionState:
      title: CosmosTransactionState
      type: string
      enum:
        - waiting_for_approval
        - approved
        - signed
        - pushed_to_blockchain
        - mined
        - completed
        - aborted
        - error_pushing_to_blockchain
        - mined_reverted
        - completed_reverted
        - stuck
    CosmosTransactionStateChange:
      title: CosmosTransactionStateChange
      properties:
        changed_at:
          title: Changed At
          description: The date and time when the state was changed.
          type: string
          format: date-time
        previous_state:
          description: The previous state of the transaction.
          $ref: '#/components/schemas/CosmosTransactionState'
        new_state:
          $ref: '#/components/schemas/CosmosTransactionState'
      type: object
      required:
        - changed_at
        - new_state
      x-konfig-properties:
        new_state:
          description: The new state of the transaction.
    CosmosTransactionType:
      title: CosmosTransactionType
      type: string
      enum:
        - messages
        - native_transfer
        - token_transfer
    CosmosTransactionTypeDetails:
      title: CosmosTransactionTypeDetails
      oneOf:
        - $ref: '#/components/schemas/CosmosMultipleMessagesTransactionDetails'
        - $ref: '#/components/schemas/CosmosNativeTransferDetails'
        - $ref: '#/components/schemas/CosmosTokenTransferDetails'
      discriminator:
        propertyName: type
        mapping:
          messages: '#/components/schemas/CosmosMultipleMessagesTransactionDetails'
          native_transfer: '#/components/schemas/CosmosNativeTransferDetails'
          token_transfer: '#/components/schemas/CosmosTokenTransferDetails'
    CosmosTransferEffect:
      title: CosmosTransferEffect
      oneOf:
        - $ref: '#/components/schemas/CosmosNativeTransfer'
        - $ref: '#/components/schemas/CosmosTokenTransfer'
      discriminator:
        propertyName: type
        mapping:
          native: '#/components/schemas/CosmosNativeTransfer'
          token: '#/components/schemas/CosmosTokenTransfer'
    CosmosTransferToAddressRequest:
      title: CosmosTransferToAddressRequest
      properties:
        type:
          title: Type
          const: address
        address:
          $ref: '#/components/schemas/CosmosBechAddress'
      type: object
      required:
        - type
        - address
      x-konfig-properties:
        address:
          description: The cosmos bech32 to transfer to.
    CosmosTransferToVaultIdRequest:
      title: CosmosTransferToVaultIdRequest
      properties:
        type:
          title: Type
          const: vault_id
        vault_id:
          title: Vault Id
          description: The ID of the vault to transfer to.
          type: string
          format: uuid
      type: object
      required:
        - type
        - vault_id
    CosmosVault:
      title: CosmosVault
      description: Represents a Cosmos vault in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the vault.
          type: string
        created_by:
          $ref: '#/components/schemas/UserRef'
        derivation_path:
          title: Derivation Path
          description: The BIP 44 derivation path of the vault.
          type: string
          deprecated: true
          example: m/44/60/0/0/0
        public_key_compressed:
          title: Public Key Compressed
          description: >-
            The compressed public key of the vault. As defined in the SEC1
            standard: https://www.secg.org/SEC1-Ver-1.0.pdf.
          type: string
          example: SGVsbG8=
        derivation_info:
          $ref: '#/components/schemas/VaultDerivationInfo'
        keyset:
          $ref: '#/components/schemas/KeysetRef'
        key_holder:
          description: >-
            The user who owns the keyset of the vault. If not provided, the
            vault is owned by the organization.
          $ref: '#/components/schemas/EndUserRef'
        vault_group:
          $ref: '#/components/schemas/VaultGroupRef'
        pending_vault_group_action:
          title: Pending Vault Group Action
          description: Details of pending vault movement to another vault group.
          oneOf:
            - $ref: '#/components/schemas/PendingVaultGroupActionAdd'
            - $ref: '#/components/schemas/PendingVaultGroupActionRemove'
          discriminator:
            propertyName: type
            mapping:
              add: '#/components/schemas/PendingVaultGroupActionAdd'
              remove: '#/components/schemas/PendingVaultGroupActionRemove'
        state:
          $ref: '#/components/schemas/VaultState'
        type:
          title: Type
          description: Cosmos vault type.
          const: cosmos
        main_address:
          title: Main Address
          description: >-
            The address of the vault on Cosmos chains (hex representation
            without chain prefix).
          type: string
          maxLength: 40
          minLength: 40
          pattern: ^[a-fA-F0-9]+$
          example: DBCE78FD2D006A3BAC2C548D93271ABA3D63F01E
        evm_address:
          title: Evm Address
          description: >-
            The address of the vault on Cosmos chains that uses ethermint public
            key format, (hex representation without 0x).
          type: string
          pattern: ^[a-fA-F0-9]+$
        chains_addresses:
          title: Chains Addresses
          description: >-
            List of addresses of the vault on each chain (bech32 format) with
            chain info.
          items:
            $ref: '#/components/schemas/CosmosBechAddressEnrichedChain'
          type: array
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - created_by
        - derivation_path
        - public_key_compressed
        - derivation_info
        - keyset
        - vault_group
        - state
        - type
        - main_address
        - evm_address
        - chains_addresses
      x-konfig-properties:
        created_by:
          description: Details of the vault creator.
        derivation_info:
          description: The derivation info of the vault.
        keyset:
          description: The keyset of the vault.
        vault_group:
          description: The vault group this vault belongs to.
        state:
          description: State of the vault.
    CreateBlackBoxSignatureRequest:
      title: CreateBlackBoxSignatureRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        note:
          title: Note
          description: An optional transaction note.
          type: string
        signer_type:
          $ref: '#/components/schemas/SignerType'
        type:
          title: Type
          description: Black Box signature type.
          const: black_box_signature
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/BinaryHashPayload'
            - $ref: '#/components/schemas/IntegerHashPayload'
          discriminator:
            propertyName: format
            mapping:
              hash_binary: '#/components/schemas/BinaryHashPayload'
              hash_integer: '#/components/schemas/IntegerHashPayload'
      type: object
      required:
        - vault_id
        - type
        - details
      x-konfig-properties:
        signer_type:
          description: >-
            The signer of the transaction. Can be: <ul><li>`initiator`: The
            creator of the transaction (default).<li>`api_signer`: A service
            that you run on your own network or cloud environment.
            <li>`end_user`: A mobile device using Fordefi's SDK.</ul>
          default: initiator
    CreateBlackBoxVaultRequest:
      title: CreateBlackBoxVaultRequest
      properties:
        name:
          title: Name
          description: The name of the vault.
          type: string
          minLength: 1
        keyset_id:
          title: Keyset Id
          description: >-
            The keyset id of the vault. This field is required for end-user
            vault creation, otherwise, it's optional. If not provided, the
            organization's default keyset will be used.
          type: string
          format: uuid
        vault_group_id:
          title: Vault Group Id
          description: >-
            The group to add this vault to. If not provided, the vault will be
            created in the Default vault group.
          type: string
          format: uuid
        type:
          title: Type
          description: Black Box vault type.
          const: black_box
        key_type:
          title: Key Type
          description: >-
            The key type of the signing scheme used by the vault. Can be: <ul>  
            <li>`ecdsa_stark`</li>   <li>`ecdsa_secp256k1`</li></ul>
          type: string
          enum:
            - ecdsa_stark
            - ecdsa_secp256k1
      type: object
      required:
        - name
        - type
        - key_type
    CreateCosmosMessageRequest:
      title: CreateCosmosMessageRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        note:
          title: Note
          description: An optional transaction note.
          type: string
        signer_type:
          $ref: '#/components/schemas/SignerType'
        type:
          title: Type
          description: Cosmos message type.
          const: cosmos_message
        details:
          $ref: '#/components/schemas/CosmosArbitraryMessageRequest'
      type: object
      required:
        - vault_id
        - type
        - details
      x-konfig-properties:
        signer_type:
          description: >-
            The signer of the transaction. Can be: <ul><li>`initiator`: The
            creator of the transaction (default).<li>`api_signer`: A service
            that you run on your own network or cloud environment.
            <li>`end_user`: A mobile device using Fordefi's SDK.</ul>
          default: initiator
    CreateCosmosTransactionRequest:
      title: CreateCosmosTransactionRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        note:
          title: Note
          description: An optional transaction note.
          type: string
        signer_type:
          $ref: '#/components/schemas/SignerType'
        type:
          title: Type
          description: Cosmos transaction type.
          const: cosmos_transaction
        details:
          title: Details
          description: Transaction details.
          oneOf:
            - $ref: '#/components/schemas/TypedCosmosRawTransactionRequest'
            - $ref: '#/components/schemas/TypedCosmosTransferRequest'
          discriminator:
            propertyName: type
            mapping:
              cosmos_raw_transaction: '#/components/schemas/TypedCosmosRawTransactionRequest'
              cosmos_transfer: '#/components/schemas/TypedCosmosTransferRequest'
      type: object
      required:
        - vault_id
        - type
        - details
      x-konfig-properties:
        signer_type:
          description: >-
            The signer of the transaction. Can be: <ul><li>`initiator`: The
            creator of the transaction (default).<li>`api_signer`: A service
            that you run on your own network or cloud environment.
            <li>`end_user`: A mobile device using Fordefi's SDK.</ul>
          default: initiator
    CreateCosmosTransferRequestExplicitValue:
      title: CreateCosmosTransferRequestExplicitValue
      properties:
        type:
          title: Type
          const: value
        value:
          title: Value
          description: The explicit number of units of currency to transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - value
    CreateCosmosTransferRequestMaxValue:
      title: CreateCosmosTransferRequestMaxValue
      properties:
        type:
          title: Type
          description: The maximum available currency to transfer.
          const: max
      type: object
      required:
        - type
    CreateCosmosVaultRequest:
      title: CreateCosmosVaultRequest
      properties:
        name:
          title: Name
          description: The name of the vault.
          type: string
          minLength: 1
        keyset_id:
          title: Keyset Id
          description: >-
            The keyset id of the vault. This field is required for end-user
            vault creation, otherwise, it's optional. If not provided, the
            organization's default keyset will be used.
          type: string
          format: uuid
        vault_group_id:
          title: Vault Group Id
          description: >-
            The group to add this vault to. If not provided, the vault will be
            created in the Default vault group.
          type: string
          format: uuid
        type:
          title: Type
          description: Cosmos vault type.
          const: cosmos
      type: object
      required:
        - name
        - type
    CreateEndUserErrorType:
      title: CreateEndUserErrorType
      type: string
      enum:
        - unsupported_organization
        - backup_not_ready
    CreateEndUserRequest:
      title: CreateEndUserRequest
      properties:
        external_id:
          title: External Id
          description: The ID that you assign to an end user.
          type: string
      type: object
      required:
        - external_id
    CreateEndUserResponse:
      title: CreateEndUserResponse
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        external_id:
          title: External Id
          description: The ID that you assigned to the end user.
          type: string
          example: user|1234
        last_login_at:
          title: Last Login At
          description: The timestamp when the end user last logged into the mobile SDK.
          type: string
          format: date-time
      type: object
      required:
        - id
        - created_at
        - modified_at
        - external_id
        - last_login_at
    CreateEvmMessageRequest:
      title: CreateEvmMessageRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        note:
          title: Note
          description: An optional transaction note.
          type: string
        signer_type:
          $ref: '#/components/schemas/SignerType'
        type:
          title: Type
          description: EVM message type.
          const: evm_message
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/CreateEvmTypedMessageRequest'
            - $ref: '#/components/schemas/CreateEvmPersonalMessageRequest'
          discriminator:
            propertyName: type
            mapping:
              personal_message_type: '#/components/schemas/CreateEvmPersonalMessageRequest'
              typed_message_type: '#/components/schemas/CreateEvmTypedMessageRequest'
      type: object
      required:
        - vault_id
        - type
        - details
      x-konfig-properties:
        signer_type:
          description: >-
            The signer of the transaction. Can be: <ul><li>`initiator`: The
            creator of the transaction (default).<li>`api_signer`: A service
            that you run on your own network or cloud environment.
            <li>`end_user`: A mobile device using Fordefi's SDK.</ul>
          default: initiator
    CreateEvmPersonalMessageRequest:
      title: CreateEvmPersonalMessageRequest
      properties:
        type:
          title: Type
          description: Personal message standard.
          const: personal_message_type
        chain:
          $ref: '#/components/schemas/EvmChainRequest'
        raw_data:
          title: Raw Data
          description: >-
            The raw data of the message to be signed, provided as a string or
            hex-encoded.
          type: string
          minLength: 1
      type: object
      required:
        - type
        - chain
        - raw_data
      x-konfig-properties:
        chain:
          description: >-
            The EVM chain that this message is intended for. Specify either the
            chain ID (for example `1` for `ethereum_mainnet`) or the chain name
            (for example, `ethereum_goerli`).
    CreateEvmRawTransactionRequest:
      title: CreateEvmRawTransactionRequest
      properties:
        type:
          title: Type
          description: >-
            An EVM raw transaction receives raw data and is for general
            transactions.
          const: evm_raw_transaction
        use_secure_node:
          title: Use Secure Node
          description: >-
            Use a secure node to send the transaction. By using a secure node,
            you avoid maximal extractable value (MEV) attacks.
          type: boolean
          default: false
        gas:
          title: Gas
          description: >-
            The gas details of the transaction. The details depend on which
            option you choose:<ul><li>Gas Priority or <li>Custom Gas Request
            </ul>
          oneOf:
            - $ref: '#/components/schemas/GasPriorityRequest'
            - $ref: '#/components/schemas/CustomGasRequest'
          discriminator:
            propertyName: type
            mapping:
              custom: '#/components/schemas/CustomGasRequest'
              priority: '#/components/schemas/GasPriorityRequest'
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if transaction creation should fail in case prediction
            failed, `False` otherwise.
          type: boolean
          default: true
        skip_prediction:
          title: Skip Prediction
          description: >-
            `True` to create a transaction without prediction, `False`
            otherwise.
          type: boolean
          default: false
        push_mode:
          $ref: '#/components/schemas/PushMode'
        funder:
          title: Funder
          description: >-
            The unique identifier of the vault that pays the fee for this
            transaction.
          type: string
          format: uuid
        chain:
          $ref: '#/components/schemas/EvmChainRequest'
        to:
          title: To
          description: The recipient of the transaction.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
        value:
          title: Value
          description: The value of the transaction.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        data:
          description: >-
            The format of the data request. The following formats are
            available:<ul><li>Base64 raw data<li>Hex raw data<li>Smart contract
            call of method and arguments
          $ref: '#/components/schemas/EvmDataRequest'
      type: object
      required:
        - type
        - gas
        - chain
        - to
        - value
      x-konfig-properties:
        push_mode:
          description: >-
            The push mode of the transaction. It can be one of the
            following:<ul><li>`auto`: The transaction is pushed automatically by
            Fordefi. <li>`manual`: The transaction should be pushed manually by
            the user using a 3rd party.</ul> 
          default: auto
        chain:
          description: >-
            The chain that this transaction is on. Specify either the chain ID
            (for example `evm.1` for `ethereum_mainnet`) or the chain name (for
            example, `evm.ethereum_goerli`).
    CreateEvmRevokeAllowanceRequest:
      title: CreateEvmRevokeAllowanceRequest
      properties:
        type:
          title: Type
          description: >-
            An EVM revoke allowance transaction is for revoking a spender's
            allowance for a specific token.
          const: evm_revoke_allowance
        use_secure_node:
          title: Use Secure Node
          description: >-
            Use a secure node to send the transaction. By using a secure node,
            you avoid maximal extractable value (MEV) attacks.
          type: boolean
          default: false
        gas:
          title: Gas
          description: >-
            The gas details of the transaction. The details depend on which
            option you choose:<ul><li>Gas Priority or <li>Custom Gas Request
            </ul>
          oneOf:
            - $ref: '#/components/schemas/GasPriorityRequest'
            - $ref: '#/components/schemas/CustomGasRequest'
          discriminator:
            propertyName: type
            mapping:
              custom: '#/components/schemas/CustomGasRequest'
              priority: '#/components/schemas/GasPriorityRequest'
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if transaction creation should fail in case prediction
            failed, `False` otherwise.
          type: boolean
          default: true
        skip_prediction:
          title: Skip Prediction
          description: >-
            `True` to create a transaction without prediction, `False`
            otherwise.
          type: boolean
          default: false
        push_mode:
          $ref: '#/components/schemas/PushMode'
        funder:
          title: Funder
          description: >-
            The unique identifier of the vault that pays the fee for this
            transaction.
          type: string
          format: uuid
        chain:
          $ref: '#/components/schemas/EvmChainRequest'
        token:
          title: Token
          description: The ERC-20 token contract for which to revoke allowance.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
        spender:
          title: Spender
          description: >-
            The EOA or contract address of the spender for whom to revoke
            allowance.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
      type: object
      required:
        - type
        - gas
        - chain
        - token
        - spender
      x-konfig-properties:
        push_mode:
          description: >-
            The push mode of the transaction. It can be one of the
            following:<ul><li>`auto`: The transaction is pushed automatically by
            Fordefi. <li>`manual`: The transaction should be pushed manually by
            the user using a 3rd party.</ul> 
          default: auto
        chain:
          description: >-
            The chain that this transaction is on. Specify either the chain ID
            (for example `evm.1` for `ethereum_mainnet`) or the chain name (for
            example, `evm.ethereum_goerli`).
    CreateEvmTransactionRequest:
      title: CreateEvmTransactionRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        note:
          title: Note
          description: An optional transaction note.
          type: string
        signer_type:
          $ref: '#/components/schemas/SignerType'
        type:
          title: Type
          description: EVM transaction type.
          const: evm_transaction
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/CreateEvmRawTransactionRequest'
            - $ref: '#/components/schemas/CreateEvmTransferRequest'
            - $ref: '#/components/schemas/CreateEvmRevokeAllowanceRequest'
          discriminator:
            propertyName: type
            mapping:
              evm_raw_transaction: '#/components/schemas/CreateEvmRawTransactionRequest'
              evm_revoke_allowance: '#/components/schemas/CreateEvmRevokeAllowanceRequest'
              evm_transfer: '#/components/schemas/CreateEvmTransferRequest'
      type: object
      required:
        - vault_id
        - type
        - details
      x-konfig-properties:
        signer_type:
          description: >-
            The signer of the transaction. Can be: <ul><li>`initiator`: The
            creator of the transaction (default).<li>`api_signer`: A service
            that you run on your own network or cloud environment.
            <li>`end_user`: A mobile device using Fordefi's SDK.</ul>
          default: initiator
    CreateEvmTransferRequest:
      title: CreateEvmTransferRequest
      properties:
        type:
          title: Type
          description: >-
            An EVM transfer transaction is for transferring native currency or a
            token.
          const: evm_transfer
        use_secure_node:
          title: Use Secure Node
          description: >-
            Use a secure node to send the transaction. By using a secure node,
            you avoid maximal extractable value (MEV) attacks.
          type: boolean
          default: false
        gas:
          title: Gas
          description: >-
            The gas details of the transaction. The details depend on which
            option you choose:<ul><li>Gas Priority or <li>Custom Gas Request
            </ul>
          oneOf:
            - $ref: '#/components/schemas/GasPriorityRequest'
            - $ref: '#/components/schemas/CustomGasRequest'
          discriminator:
            propertyName: type
            mapping:
              custom: '#/components/schemas/CustomGasRequest'
              priority: '#/components/schemas/GasPriorityRequest'
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if transaction creation should fail in case prediction
            failed, `False` otherwise.
          type: boolean
          default: true
        skip_prediction:
          title: Skip Prediction
          description: >-
            `True` to create a transaction without prediction, `False`
            otherwise.
          type: boolean
          default: false
        push_mode:
          $ref: '#/components/schemas/PushMode'
        funder:
          title: Funder
          description: >-
            The unique identifier of the vault that pays the fee for this
            transaction.
          type: string
          format: uuid
        to:
          title: To
          description: >-
            The recipient of the transfer. Specify either a general address (a
            hex string of length 42 characters) or the ID of another vault (a
            UUID string).
          anyOf:
            - type: string
              maxLength: 42
              minLength: 42
              pattern: ^0[xX][a-fA-F0-9]+$
              example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
            - type: string
              format: uuid
        chain:
          description: >-
            The chain that this transaction is on. Specify either the chain ID
            (for example `evm.1` for `ethereum_mainnet`) or the chain name (for
            example, `evm.ethereum_goerli`).
          deprecated: true
          $ref: '#/components/schemas/EvmChainRequest'
        token:
          title: Token
          description: >-
            The ERC-20 token contract (a hex string of length 42 characters) to
            transfer. If you do not specify a value for `token`, the assumption
            is that you are transferring units in the native currency of the
            chain.
          deprecated: true
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
        asset_identifier:
          description: The asset to be transfered.
          $ref: '#/components/schemas/EvmAssetIdentifierRequest'
        value:
          title: Value
          description: 'Specify one of the following: <ul><li>`value`<li>`max`</ul>'
          oneOf:
            - $ref: '#/components/schemas/CreateEvmTransferRequestExplicitValue'
            - $ref: '#/components/schemas/CreateEvmTransferRequestMaxValue'
          discriminator:
            propertyName: type
            mapping:
              max: '#/components/schemas/CreateEvmTransferRequestMaxValue'
              value: '#/components/schemas/CreateEvmTransferRequestExplicitValue'
      type: object
      required:
        - type
        - gas
        - to
        - value
      x-konfig-properties:
        push_mode:
          description: >-
            The push mode of the transaction. It can be one of the
            following:<ul><li>`auto`: The transaction is pushed automatically by
            Fordefi. <li>`manual`: The transaction should be pushed manually by
            the user using a 3rd party.</ul> 
          default: auto
    CreateEvmTransferRequestExplicitValue:
      title: CreateEvmTransferRequestExplicitValue
      properties:
        type:
          title: Type
          const: value
        value:
          title: Value
          description: The explicit number of units of currency to transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - value
    CreateEvmTransferRequestMaxValue:
      title: CreateEvmTransferRequestMaxValue
      properties:
        type:
          title: Type
          description: >-
            The maximum available currency to transfer. <ul><li>In the case of
            an ERC-20 token contract, the full balance is transferred.<li>In the
            case of native currency, the full balance less the minimum gas fee
            is transferred.</ul>
          const: max
      type: object
      required:
        - type
    CreateEvmTypedMessageRequest:
      title: CreateEvmTypedMessageRequest
      properties:
        type:
          title: Type
          description: Typed message standard.
          const: typed_message_type
        chain:
          $ref: '#/components/schemas/EvmChainRequest'
        raw_data:
          title: Raw Data
          description: >-
            The raw data of the message to be signed, provided as a string or
            hex-encoded.
          type: string
          minLength: 1
      type: object
      required:
        - type
        - chain
        - raw_data
      x-konfig-properties:
        chain:
          description: >-
            The EVM chain that this message is intended for. Specify either the
            chain ID (for example `1` for `ethereum_mainnet`) or the chain name
            (for example, `ethereum_goerli`).
    CreateEvmVaultRequest:
      title: CreateEvmVaultRequest
      properties:
        name:
          title: Name
          description: The name of the vault.
          type: string
          minLength: 1
        keyset_id:
          title: Keyset Id
          description: >-
            The keyset id of the vault. This field is required for end-user
            vault creation, otherwise, it's optional. If not provided, the
            organization's default keyset will be used.
          type: string
          format: uuid
        vault_group_id:
          title: Vault Group Id
          description: >-
            The group to add this vault to. If not provided, the vault will be
            created in the Default vault group.
          type: string
          format: uuid
        type:
          title: Type
          description: EVM vault type.
          const: evm
      type: object
      required:
        - name
        - type
    CreateKeysetErrorType:
      title: CreateKeysetErrorType
      type: string
      enum:
        - cannot_create_keyset_for_user_id
        - cannot_create_keyset_for_user_type
    CreateKeysetRequest:
      title: CreateKeysetRequest
      properties:
        user_id:
          title: User Id
          description: End user ID
          type: string
          format: uuid
        name:
          title: Name
          description: Keyset name
          type: string
          minLength: 1
      type: object
      required:
        - user_id
        - name
    CreateKeysetResponse:
      title: CreateKeysetResponse
      oneOf:
        - $ref: '#/components/schemas/OrganizationKeyset'
        - $ref: '#/components/schemas/UserKeyset'
      discriminator:
        propertyName: scope
        mapping:
          organization: '#/components/schemas/OrganizationKeyset'
          user: '#/components/schemas/UserKeyset'
    CreateSolanaMessageRequest:
      title: CreateSolanaMessageRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        note:
          title: Note
          description: An optional transaction note.
          type: string
        signer_type:
          $ref: '#/components/schemas/SignerType'
        type:
          title: Type
          description: Solana message type.
          const: solana_message
        details:
          $ref: '#/components/schemas/SolanaPersonalMessageRequest'
      type: object
      required:
        - vault_id
        - type
        - details
      x-konfig-properties:
        signer_type:
          description: >-
            The signer of the transaction. Can be: <ul><li>`initiator`: The
            creator of the transaction (default).<li>`api_signer`: A service
            that you run on your own network or cloud environment.
            <li>`end_user`: A mobile device using Fordefi's SDK.</ul>
          default: initiator
    CreateSolanaRawTransactionRequest:
      title: CreateSolanaRawTransactionRequest
      properties:
        version:
          $ref: '#/components/schemas/SolanaMessageVersion'
        instructions:
          title: Instructions
          description: The instructions of the transaction.
          items:
            $ref: '#/components/schemas/SolanaCompiledInstructionRequest'
          type: array
        accounts:
          title: Accounts
          description: Accounts used in the transaction.
          items:
            $ref: '#/components/schemas/SolanaTransactionAccountRequest'
          type: array
        address_table_lookups:
          title: Address Table Lookups
          description: Lookup tables of accounts used in the transaction.
          items:
            $ref: '#/components/schemas/SolanaMessageAddressTableLookupRequest'
          type: array
        signatures:
          title: Signatures
          description: Any partial signatures on the transaction.
          items:
            $ref: '#/components/schemas/SolanaTransactionSignaturesRequest'
          type: array
        recent_blockhash:
          title: Recent Blockhash
          description: The transaction nonce (a recently processed blockhash).
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZAMdL4VZHirAn
        type:
          title: Type
          description: A Solana raw transaction is for any operation.
          const: solana_raw_transaction
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if the request should fail in case simulation failed, `False`
            otherwise.
          type: boolean
          default: true
        push_mode:
          $ref: '#/components/schemas/PushMode'
        skip_prediction:
          title: Skip Prediction
          description: >-
            `True` to create a transaction without prediction, `False`
            otherwise.
          type: boolean
          default: false
        chain:
          $ref: '#/components/schemas/SolanaChainUniqueId'
      type: object
      required:
        - version
        - instructions
        - accounts
        - address_table_lookups
        - type
        - chain
      x-konfig-properties:
        version:
          description: The version of the transaction message.
        push_mode:
          description: >-
            The push mode of the transaction. It can be one of the
            following:<ul><li>`auto`: The transaction is pushed automatically by
            Fordefi. <li>`manual`: The transaction should be pushed manually by
            the user using a 3rd party.</ul> 
          default: auto
    CreateSolanaTransactionRequest:
      title: CreateSolanaTransactionRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        note:
          title: Note
          description: An optional transaction note.
          type: string
        signer_type:
          $ref: '#/components/schemas/SignerType'
        type:
          title: Type
          description: Solana transaction type.
          const: solana_transaction
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/CreateSolanaTransferRequest'
            - $ref: '#/components/schemas/CreateSolanaRawTransactionRequest'
          discriminator:
            propertyName: type
            mapping:
              solana_raw_transaction: '#/components/schemas/CreateSolanaRawTransactionRequest'
              solana_transfer: '#/components/schemas/CreateSolanaTransferRequest'
      type: object
      required:
        - vault_id
        - type
        - details
      x-konfig-properties:
        signer_type:
          description: >-
            The signer of the transaction. Can be: <ul><li>`initiator`: The
            creator of the transaction (default).<li>`api_signer`: A service
            that you run on your own network or cloud environment.
            <li>`end_user`: A mobile device using Fordefi's SDK.</ul>
          default: initiator
    CreateSolanaTransferRequest:
      title: CreateSolanaTransferRequest
      properties:
        type:
          title: Type
          description: >-
            A Solana transfer transaction is for transferring native currency or
            a token.
          const: solana_transfer
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if the request should fail in case simulation failed, `False`
            otherwise.
          type: boolean
          default: true
        push_mode:
          $ref: '#/components/schemas/PushMode'
        skip_prediction:
          title: Skip Prediction
          description: >-
            `True` to create a transaction without prediction, `False`
            otherwise.
          type: boolean
          default: false
        to:
          title: To
          description: >-
            The recipient of the transfer. Specify either a general address (a
            base58 string) or the id of another vault (a UUID string).
          anyOf:
            - type: string
              maxLength: 44
              minLength: 32
              pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
              example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
            - type: string
              format: uuid
        value:
          title: Value
          description: The number of units of currency to transfer.
          oneOf:
            - $ref: '#/components/schemas/CreateSolanaTransferRequestExplicitAmount'
            - $ref: '#/components/schemas/CreateSolanaTransferRequestMaxAmount'
          discriminator:
            propertyName: type
            mapping:
              max: '#/components/schemas/CreateSolanaTransferRequestMaxAmount'
              value: '#/components/schemas/CreateSolanaTransferRequestExplicitAmount'
        asset_identifier:
          $ref: '#/components/schemas/SolanaAssetIdentifierRequest'
      type: object
      required:
        - type
        - to
        - value
        - asset_identifier
      x-konfig-properties:
        push_mode:
          description: >-
            The push mode of the transaction. It can be one of the
            following:<ul><li>`auto`: The transaction is pushed automatically by
            Fordefi. <li>`manual`: The transaction should be pushed manually by
            the user using a 3rd party.</ul> 
          default: auto
        asset_identifier:
          description: The Solana asset identifier to transfer.
    CreateSolanaTransferRequestExplicitAmount:
      title: CreateSolanaTransferRequestExplicitAmount
      properties:
        type:
          title: Type
          const: value
        value:
          title: Value
          description: The amount of the transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - value
    CreateSolanaTransferRequestMaxAmount:
      title: CreateSolanaTransferRequestMaxAmount
      properties:
        type:
          title: Type
          const: max
      type: object
      required:
        - type
    CreateSolanaVaultRequest:
      title: CreateSolanaVaultRequest
      properties:
        name:
          title: Name
          description: The name of the vault.
          type: string
          minLength: 1
        keyset_id:
          title: Keyset Id
          description: >-
            The keyset id of the vault. This field is required for end-user
            vault creation, otherwise, it's optional. If not provided, the
            organization's default keyset will be used.
          type: string
          format: uuid
        vault_group_id:
          title: Vault Group Id
          description: >-
            The group to add this vault to. If not provided, the vault will be
            created in the Default vault group.
          type: string
          format: uuid
        type:
          title: Type
          description: Solana vault type.
          const: solana
      type: object
      required:
        - name
        - type
    CreateTransactionErrorType:
      title: CreateTransactionErrorType
      type: string
      enum:
        - reverted_transaction
        - partial_signed_raw_request
        - blocked_by_policy
        - transaction_contains_restricted_addresses
        - vault_not_found
        - missing_signed_raw_request
        - redundant_signed_raw_request
        - transfer_to_self
        - transaction_to_non_contract
        - insecure_stark_key_derivation
        - invalid_signed_raw_request
        - invalid_signer_type
        - invalid_evm_message
        - invalid_evm_transaction_data
        - insufficient_funds
        - vault_type_mismatch
        - invalid_creator_type
        - invalid_recipient
        - dust_not_allowed
        - invalid_gas_type
        - insufficient_approvers
        - funding_blocked_by_policy
        - funder_not_allowed_for_transaction_type
        - origin_vault_used_as_funder
        - mixed_secure_and_non_secure_transactions
        - invalid_push_mode
        - chain_does_not_support_secure_node
        - invalid_solana_secret_key
    CreateTransactionRequest:
      title: CreateTransactionRequest
      oneOf:
        - $ref: '#/components/schemas/CreateBlackBoxSignatureRequest'
        - $ref: '#/components/schemas/CreateCosmosTransactionRequest'
        - $ref: '#/components/schemas/CreateCosmosMessageRequest'
        - $ref: '#/components/schemas/CreateEvmMessageRequest'
        - $ref: '#/components/schemas/CreateEvmTransactionRequest'
        - $ref: '#/components/schemas/CreateSolanaMessageRequest'
        - $ref: '#/components/schemas/CreateSolanaTransactionRequest'
        - $ref: '#/components/schemas/CreateUtxoTransactionRequest'
      discriminator:
        propertyName: type
        mapping:
          black_box_signature: '#/components/schemas/CreateBlackBoxSignatureRequest'
          cosmos_message: '#/components/schemas/CreateCosmosMessageRequest'
          cosmos_transaction: '#/components/schemas/CreateCosmosTransactionRequest'
          evm_message: '#/components/schemas/CreateEvmMessageRequest'
          evm_transaction: '#/components/schemas/CreateEvmTransactionRequest'
          solana_message: '#/components/schemas/CreateSolanaMessageRequest'
          solana_transaction: '#/components/schemas/CreateSolanaTransactionRequest'
          utxo_transaction: '#/components/schemas/CreateUtxoTransactionRequest'
    CreateTransactionResponse:
      title: CreateTransactionResponse
      oneOf:
        - $ref: '#/components/schemas/BlackBoxSignature'
        - $ref: '#/components/schemas/CosmosTransaction'
        - $ref: '#/components/schemas/CosmosMessage'
        - $ref: '#/components/schemas/EvmMessage'
        - $ref: '#/components/schemas/EvmTransaction'
        - $ref: '#/components/schemas/SolanaMessage'
        - $ref: '#/components/schemas/SolanaTransaction'
        - $ref: '#/components/schemas/UtxoTransaction'
      discriminator:
        propertyName: type
        mapping:
          black_box_signature: '#/components/schemas/BlackBoxSignature'
          cosmos_message: '#/components/schemas/CosmosMessage'
          cosmos_transaction: '#/components/schemas/CosmosTransaction'
          evm_message: '#/components/schemas/EvmMessage'
          evm_transaction: '#/components/schemas/EvmTransaction'
          solana_message: '#/components/schemas/SolanaMessage'
          solana_transaction: '#/components/schemas/SolanaTransaction'
          utxo_transaction: '#/components/schemas/UtxoTransaction'
    CreateUtxoTransactionRequest:
      title: CreateUtxoTransactionRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        note:
          title: Note
          description: An optional transaction note.
          type: string
        signer_type:
          $ref: '#/components/schemas/SignerType'
        type:
          title: Type
          description: UTXO transaction type.
          const: utxo_transaction
        details:
          $ref: '#/components/schemas/TransactionDetailsUtxoTransferRequest'
      type: object
      required:
        - vault_id
        - type
        - details
      x-konfig-properties:
        signer_type:
          description: >-
            The signer of the transaction. Can be: <ul><li>`initiator`: The
            creator of the transaction (default).<li>`api_signer`: A service
            that you run on your own network or cloud environment.
            <li>`end_user`: A mobile device using Fordefi's SDK.</ul>
          default: initiator
        details:
          description: Transaction details.
    CreateUtxoVaultAddressRequest:
      title: CreateUtxoVaultAddressRequest
      properties:
        name:
          title: Name
          description: The name of the address.
          type: string
          minLength: 1
        address_type:
          $ref: '#/components/schemas/BitcoinVaultCreateAddressType'
      type: object
      x-konfig-properties:
        address_type:
          description: The type of the address.
          default: segwit
    CreateUtxoVaultRequest:
      title: CreateUtxoVaultRequest
      properties:
        name:
          title: Name
          description: The name of the vault.
          type: string
          minLength: 1
        keyset_id:
          title: Keyset Id
          description: >-
            The keyset id of the vault. This field is required for end-user
            vault creation, otherwise, it's optional. If not provided, the
            organization's default keyset will be used.
          type: string
          format: uuid
        vault_group_id:
          title: Vault Group Id
          description: >-
            The group to add this vault to. If not provided, the vault will be
            created in the Default vault group.
          type: string
          format: uuid
        type:
          title: Type
          description: UTXO vault type.
          const: utxo
        chain:
          $ref: '#/components/schemas/UtxoChainUniqueId'
      type: object
      required:
        - name
        - type
        - chain
      x-konfig-properties:
        chain:
          description: The UTXO chain type.
    CreateVaultAddressErrorType:
      title: CreateVaultAddressErrorType
      type: string
      const: invalid_vault_type
    CreateVaultErrorType:
      title: CreateVaultErrorType
      type: string
      enum:
        - cosmos_not_supported
        - max_vaults_reached
        - mpc_key_is_missing
        - keyset_is_missing
        - user_keyset_is_required_for_organization
        - keyset_not_ready
    CreateVaultRequest:
      title: CreateVaultRequest
      oneOf:
        - $ref: '#/components/schemas/CreateBlackBoxVaultRequest'
        - $ref: '#/components/schemas/CreateCosmosVaultRequest'
        - $ref: '#/components/schemas/CreateEvmVaultRequest'
        - $ref: '#/components/schemas/CreateSolanaVaultRequest'
        - $ref: '#/components/schemas/CreateUtxoVaultRequest'
      discriminator:
        propertyName: type
        mapping:
          black_box: '#/components/schemas/CreateBlackBoxVaultRequest'
          cosmos: '#/components/schemas/CreateCosmosVaultRequest'
          evm: '#/components/schemas/CreateEvmVaultRequest'
          solana: '#/components/schemas/CreateSolanaVaultRequest'
          utxo: '#/components/schemas/CreateUtxoVaultRequest'
    CreateVaultResponse:
      title: CreateVaultResponse
      oneOf:
        - $ref: '#/components/schemas/BlackBoxVault'
        - $ref: '#/components/schemas/CosmosVault'
        - $ref: '#/components/schemas/EvmVault'
        - $ref: '#/components/schemas/SolanaVault'
        - $ref: '#/components/schemas/UtxoVault'
      discriminator:
        propertyName: type
        mapping:
          black_box: '#/components/schemas/BlackBoxVault'
          cosmos: '#/components/schemas/CosmosVault'
          evm: '#/components/schemas/EvmVault'
          solana: '#/components/schemas/SolanaVault'
          utxo: '#/components/schemas/UtxoVault'
    CustomFeeRequest:
      title: CustomFeeRequest
      properties:
        type:
          title: Type
          const: custom
        fee_per_byte:
          title: Fee Per Byte
          description: The fee per byte.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - fee_per_byte
    CustomGasRequest:
      title: CustomGasRequest
      properties:
        gas_limit:
          title: Gas Limit
          description: >-
            The gas limit of the transaction, that is, the number of gas units
            you are willing to use for mining the transaction.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        type:
          title: Type
          const: custom
        details:
          title: Details
          description: >-
            Using the Custom Gas Request option, you specify `gas_limit`, as
            well as the following gas details: <ul><li>If you choose `legacy`
            (meaning a chain where gas price can specified exactly), you must
            specify only the `price` of a gas unit. <li>If you choose `dynamic`
            (meaning a chain where gas price can be determined dynamically), you
            must specify two additional values:
            <ul><li>`max_priority_fee_per_gas`, the maximum tip amount for
            mining your transaction <li> `max_fee_per_gas`, the maximum amount
            you are willing to pay for the fee (ultimately, either you'll pay
            this amount, or less, depending on the network base fee). </ul>
          oneOf:
            - $ref: '#/components/schemas/LegacyGasRequest'
            - $ref: '#/components/schemas/DynamicGasRequest'
          discriminator:
            propertyName: type
            mapping:
              dynamic: '#/components/schemas/DynamicGasRequest'
              legacy: '#/components/schemas/LegacyGasRequest'
      type: object
      required:
        - type
        - details
    Dapp:
      title: Dapp
      properties:
        id:
          title: Id
          description: The unique identifier of this DApp.
          type: string
          format: uuid
        name:
          title: Name
          description: The name of the DApp.
          type: string
        url:
          title: Url
          description: The URL of the DApp.
          type: string
          minLength: 1
          format: uri
        logo_url:
          title: Logo Url
          description: The logo URL of the DApp.
          type: string
          minLength: 1
          format: uri
      type: object
      required:
        - id
        - name
    DefinedPreconditionError_AbortTransactionErrorType_:
      title: DefinedPreconditionError[AbortTransactionErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/AbortTransactionErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_ApproveTransactionErrorType_:
      title: DefinedPreconditionError[ApproveTransactionErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/ApproveTransactionErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_CreateEndUserErrorType_:
      title: DefinedPreconditionError[CreateEndUserErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/CreateEndUserErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_CreateKeysetErrorType_:
      title: DefinedPreconditionError[CreateKeysetErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/CreateKeysetErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_CreateTransactionErrorType_:
      title: DefinedPreconditionError[CreateTransactionErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/CreateTransactionErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_CreateVaultAddressErrorType_:
      title: DefinedPreconditionError[CreateVaultAddressErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/CreateVaultAddressErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_CreateVaultErrorType_:
      title: DefinedPreconditionError[CreateVaultErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/CreateVaultErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_IssueEndUserAuthTokenErrorType_:
      title: DefinedPreconditionError[IssueEndUserAuthTokenErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/IssueEndUserAuthTokenErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_PredictTransactionErrorType_:
      title: DefinedPreconditionError[PredictTransactionErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/PredictTransactionErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_ReleaseTransactionErrorType_:
      title: DefinedPreconditionError[ReleaseTransactionErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/ReleaseTransactionErrorType'
      type: object
      required:
        - title
        - detail
    DefinedPreconditionError_TestWebhookErrorType_:
      title: DefinedPreconditionError[TestWebhookErrorType]
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
        error_type:
          $ref: '#/components/schemas/TestWebhookErrorType'
      type: object
      required:
        - title
        - detail
    DescribeTransactionRequest:
      title: DescribeTransactionRequest
      oneOf:
        - $ref: '#/components/schemas/TransactionDetailsCosmosTransactionRequest'
        - $ref: '#/components/schemas/TransactionDetailsCosmosMessageRequest'
        - $ref: '#/components/schemas/TransactionDetailsEvmMessageRequest'
        - $ref: '#/components/schemas/TransactionDetailsEvmTransactionRequest'
        - $ref: '#/components/schemas/TransactionDetailsSolanaMessageRequest'
        - $ref: '#/components/schemas/TransactionDetailsSolanaTransactionRequest'
      discriminator:
        propertyName: type
        mapping:
          cosmos_message: '#/components/schemas/TransactionDetailsCosmosMessageRequest'
          cosmos_transaction: '#/components/schemas/TransactionDetailsCosmosTransactionRequest'
          evm_message: '#/components/schemas/TransactionDetailsEvmMessageRequest'
          evm_transaction: '#/components/schemas/TransactionDetailsEvmTransactionRequest'
          solana_message: '#/components/schemas/TransactionDetailsSolanaMessageRequest'
          solana_transaction: '#/components/schemas/TransactionDetailsSolanaTransactionRequest'
    DescribeTransactionResponse:
      title: DescribeTransactionResponse
      oneOf:
        - $ref: '#/components/schemas/DescribedCosmosTransaction'
        - $ref: '#/components/schemas/DescribedCosmosMessage'
        - $ref: '#/components/schemas/DescribedEvmMessage'
        - $ref: '#/components/schemas/DescribedEvmTransaction'
        - $ref: '#/components/schemas/DescribedSolanaMessage'
        - $ref: '#/components/schemas/DescribedSolanaTransaction'
      discriminator:
        propertyName: type
        mapping:
          cosmos_message: '#/components/schemas/DescribedCosmosMessage'
          cosmos_transaction: '#/components/schemas/DescribedCosmosTransaction'
          evm_message: '#/components/schemas/DescribedEvmMessage'
          evm_transaction: '#/components/schemas/DescribedEvmTransaction'
          solana_message: '#/components/schemas/DescribedSolanaMessage'
          solana_transaction: '#/components/schemas/DescribedSolanaTransaction'
    DescribedCosmosMessage:
      title: DescribedCosmosMessage
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: cosmos_message
        vault:
          $ref: '#/components/schemas/VaultRef'
        cosmos_message_type:
          $ref: '#/components/schemas/CosmosMessageType'
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
        data:
          $ref: '#/components/schemas/CosmosMessageData'
      type: object
      required:
        - type
        - vault
        - cosmos_message_type
        - chain
        - data
      x-konfig-properties:
        vault:
          description: The vault creating the message.
        cosmos_message_type:
          description: The type of the Cosmos message.
        chain:
          description: The details of the chain that this message is on.
        data:
          description: The message to be signed.
    DescribedCosmosTransaction:
      title: DescribedCosmosTransaction
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: cosmos_transaction
        cosmos_transaction_type_details:
          $ref: '#/components/schemas/CosmosTransactionTypeDetails'
        memo:
          title: Memo
          description: Transaction memo.
          default: ''
          type: string
        sender:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
        gas_debit:
          $ref: '#/components/schemas/CosmosGasDebit'
        suggested_fees:
          $ref: '#/components/schemas/CosmosSuggestedFees'
      type: object
      required:
        - type
        - cosmos_transaction_type_details
        - sender
        - chain
        - gas_debit
        - suggested_fees
      x-konfig-properties:
        cosmos_transaction_type_details:
          description: Transaction details
        sender:
          description: The sender.
        chain:
          description: The details of the chain this transaction is on
        gas_debit:
          description: The gas debit of the transaction.
        suggested_fees:
          description: The suggested fees.
    DescribedEvmMessage:
      title: DescribedEvmMessage
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: evm_message
        vault:
          $ref: '#/components/schemas/VaultRef'
        evm_message_type:
          $ref: '#/components/schemas/EvmMessageType'
        typed_data:
          title: Typed Data
          description: The typed data of the messages.
          oneOf:
            - $ref: '#/components/schemas/UnknownTypedMessageEvmMessage'
            - $ref: '#/components/schemas/PermitTypedMessageEvmMessage'
            - $ref: '#/components/schemas/Permit2TypedMessageEvmMessage'
          discriminator:
            propertyName: type
            mapping:
              permit: '#/components/schemas/PermitTypedMessageEvmMessage'
              permit2: '#/components/schemas/Permit2TypedMessageEvmMessage'
              unknown: '#/components/schemas/UnknownTypedMessageEvmMessage'
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        raw_data:
          title: Raw Data
          description: The raw data of the message.
          type: string
      type: object
      required:
        - type
        - vault
        - evm_message_type
        - chain
        - raw_data
      x-konfig-properties:
        vault:
          description: The vault creating the message.
        evm_message_type:
          description: The type of the EVM message.
        chain:
          description: The details of the chain that this message is on.
    DescribedEvmTransaction:
      title: DescribedEvmTransaction
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: evm_transaction
        evm_transaction_type_details:
          title: Evm Transaction Type Details
          description: Details of EVM transaction based on its type.
          oneOf:
            - $ref: '#/components/schemas/EvmNativeTransferDetails'
            - $ref: '#/components/schemas/TokenTransferDetails'
            - $ref: '#/components/schemas/AllowanceDetails'
            - $ref: '#/components/schemas/ContractCallDetails'
            - $ref: '#/components/schemas/BridgeDetails'
          discriminator:
            propertyName: type
            mapping:
              allowance: '#/components/schemas/AllowanceDetails'
              contract_call: '#/components/schemas/ContractCallDetails'
              cross_chain_bridge: '#/components/schemas/BridgeDetails'
              native_transfer: '#/components/schemas/EvmNativeTransferDetails'
              token_transfer: '#/components/schemas/TokenTransferDetails'
        parsed_data:
          $ref: '#/components/schemas/EvmTransactionParsedData'
        gas_limit:
          title: Gas Limit
          description: The gas limit.
          deprecated: true
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        gas_estimation:
          description: The gas estimation.
          $ref: '#/components/schemas/EvmGasEstimation'
        suggested_fees:
          $ref: '#/components/schemas/EvmSuggestedFees'
        from:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        to:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        hex_data:
          title: Hex Data
          description: >-
            The hex data of the contract call, as a serialized method-call with
            its arguments.
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
      type: object
      required:
        - type
        - evm_transaction_type_details
        - parsed_data
        - suggested_fees
        - from
        - to
        - chain
      x-konfig-properties:
        parsed_data:
          description: The parsed data of the transaction.
        suggested_fees:
          description: The suggested fees.
        from:
          description: The sender of the transaction.
        to:
          description: The recipient of the transaction.
        chain:
          description: The details of the chain this transaction is on
    DescribedSolanaMessage:
      title: DescribedSolanaMessage
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: solana_message
        vault:
          $ref: '#/components/schemas/VaultRef'
        solana_message_type:
          $ref: '#/components/schemas/SolanaMessageType'
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
        raw_data:
          title: Raw Data
          description: The message.
          type: string
      type: object
      required:
        - type
        - vault
        - solana_message_type
        - chain
        - raw_data
      x-konfig-properties:
        vault:
          description: The vault creating the message.
        solana_message_type:
          description: The type of the Solana message.
        chain:
          description: The details of the chain that this message is on.
    DescribedSolanaTransaction:
      title: DescribedSolanaTransaction
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: solana_transaction
        solana_transaction_type_details:
          title: Solana Transaction Type Details
          description: Details of Solana transaction based on its type.
          oneOf:
            - $ref: '#/components/schemas/SolanaNativeTransferDetails'
            - $ref: '#/components/schemas/SolanaTokenTransferDetails'
            - $ref: '#/components/schemas/SolanaRawTransactionDetails'
          discriminator:
            propertyName: type
            mapping:
              native_transfer: '#/components/schemas/SolanaNativeTransferDetails'
              raw_transaction: '#/components/schemas/SolanaRawTransactionDetails'
              token_transfer: '#/components/schemas/SolanaTokenTransferDetails'
        sender:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
        fee:
          title: Fee
          description: The fee of the transaction (in lamports).
          type: string
          pattern: ^0*[1-9]\d*$
          deprecated: true
          example: '1000000000000000000'
        enriched_fee:
          $ref: '#/components/schemas/SolanaFee'
        suggested_fees:
          $ref: '#/components/schemas/SolanaSuggestedFees'
        instructions:
          title: Instructions
          description: The instructions of the transaction.
          items:
            $ref: '#/components/schemas/SolanaCompiledInstruction'
          type: array
      type: object
      required:
        - type
        - solana_transaction_type_details
        - sender
        - chain
        - fee
        - enriched_fee
        - suggested_fees
        - instructions
      x-konfig-properties:
        sender:
          description: The sender of the transaction.
        chain:
          description: The details of the chain this transaction is on
        enriched_fee:
          description: The fee of the transaction.
        suggested_fees:
          description: The suggested fees.
    DirectMessage:
      title: DirectMessage
      properties:
        type:
          title: Type
          description: Message type.
          type: string
        value:
          title: Value
          description: Message bytes, encoded in base64 format.
          type: string
          example: SGVsbG8=
      type: object
      required:
        - type
        - value
    DirectMessagesList:
      title: DirectMessagesList
      properties:
        format:
          title: Format
          const: direct
        messages:
          title: Messages
          description: List of messages in direct format.
          items:
            $ref: '#/components/schemas/DirectMessage'
          type: array
      type: object
      required:
        - format
        - messages
    DirectRequestData:
      title: DirectRequestData
      properties:
        format:
          title: Format
          const: direct
        body:
          title: Body
          description: Body bytes, encoded in base64 format.
          type: string
          example: SGVsbG8=
        auth_info:
          title: Auth Info
          description: AuthInfo bytes, encoded in base64 format.
          type: string
          example: SGVsbG8=
        account_number:
          title: Account Number
          description: Account number of signer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - format
        - body
        - auth_info
    DirectSignDoc:
      title: DirectSignDoc
      properties:
        format:
          title: Format
          const: direct
        body:
          title: Body
          description: Body bytes, encoded in base64 format.
          type: string
          example: SGVsbG8=
        auth_info:
          title: Auth Info
          description: Auth info bytes, encoded in base64 format.
          type: string
          example: SGVsbG8=
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
        account_number:
          title: Account Number
          description: The account number.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        signed_body:
          title: Signed Body
          description: >-
            Actual body bytes that were used when signing the transaction,
            encoded in base64 format.
          type: string
          example: SGVsbG8=
        signed_auth_info:
          title: Signed Auth Info
          description: >-
            Actual auth info that was used when signing the transaction, encoded
            in base64 format.
          type: string
          example: SGVsbG8=
      type: object
      required:
        - format
        - body
        - auth_info
        - chain
        - account_number
        - signed_body
        - signed_auth_info
      x-konfig-properties:
        chain:
          description: The chain the transaction is signed on.
    DynamicGas:
      title: DynamicGas
      properties:
        max_priority_fee_per_gas:
          title: Max Priority Fee Per Gas
          description: The maximum tip amount for mining the transaction.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        max_fee_per_gas:
          title: Max Fee Per Gas
          description: The maximum amount paid for the fee.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        priority:
          $ref: '#/components/schemas/GasPriorityLevel'
        limit:
          title: Limit
          description: The gas limit.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        type:
          title: Type
          description: The type of gas data.
          const: dynamic
      type: object
      required:
        - max_priority_fee_per_gas
        - max_fee_per_gas
        - priority
        - limit
        - type
      x-konfig-properties:
        priority:
          description: The gas priority.
    DynamicGasFields:
      title: DynamicGasFields
      properties:
        max_priority_fee_per_gas:
          title: Max Priority Fee Per Gas
          description: The maximum tip amount for mining the transaction.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        max_fee_per_gas:
          title: Max Fee Per Gas
          description: The maximum amount paid for the fee.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - max_priority_fee_per_gas
        - max_fee_per_gas
    DynamicGasRequest:
      title: DynamicGasRequest
      properties:
        type:
          title: Type
          description: The type of gas data.
          const: dynamic
        max_priority_fee_per_gas:
          title: Max Priority Fee Per Gas
          description: Max priority fee per gas.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        max_fee_per_gas:
          title: Max Fee Per Gas
          description: Max fee per gas.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - max_priority_fee_per_gas
        - max_fee_per_gas
    EVMAddressBookContact:
      title: EVMAddressBookContact
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the contact.
          type: string
        modified_by:
          $ref: '#/components/schemas/UserRef'
        state:
          $ref: '#/components/schemas/AddressBookContactState'
        groups:
          title: Groups
          description: List of contact's groups.
          items:
            $ref: '#/components/schemas/GroupRef'
          type: array
        pending_changes:
          description: Pending changes for the contact.
          $ref: '#/components/schemas/AddressBookContactChanges'
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: evm
        address:
          title: Address
          description: TThe address of the contact.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
        chains:
          title: Chains
          description: The chains the contact belongs to.
          items:
            $ref: '#/components/schemas/EnrichedEvmChain'
          type: array
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - modified_by
        - state
        - groups
        - chain_type
        - address
        - chains
      x-konfig-properties:
        modified_by:
          description: Address last modifier.
        state:
          description: The state of the contact.
    EVMAddressBookContactAddressRef:
      title: EVMAddressBookContactAddressRef
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: evm
        address:
          title: Address
          description: The address of the contact.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
        chains:
          title: Chains
          description: The chains the contact belongs to.
          items:
            $ref: '#/components/schemas/EvmChain'
          type: array
      type: object
      required:
        - chain_type
        - address
        - chains
    EcdsaSecp256k1BlackBoxVault:
      title: EcdsaSecp256k1BlackBoxVault
      properties:
        type:
          title: Type
          description: ECDSA over the secp256k1 curve signing scheme.
          const: ecdsa_secp256k1
      type: object
      required:
        - type
    EcdsaSignature:
      title: EcdsaSignature
      properties:
        r:
          title: R
          description: >-
            The x-coordinate of the point on the curve, represented in hex
            format.
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
        s:
          title: S
          description: >-
            The scalar, known as the "signature proof", represented in hex
            format.
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
        v:
          title: V
          description: The recovery id, only relevant for Ethereum signtures.
          type: integer
      type: object
      required:
        - r
        - s
        - v
    EcdsaStarkBlackBoxVault:
      title: EcdsaStarkBlackBoxVault
      properties:
        type:
          title: Type
          description: ECDSA over the Stark curve signing scheme.
          const: ecdsa_stark
        public_key:
          title: Public Key
          description: The stark public key, represented in hex format.
          type: string
          maxLength: 66
          pattern: ^0[xX][a-fA-F0-9]+$
          deprecated: true
          example: '0x19c78df8f4ff31e78de58575487ce1eaf19922ad9b8a714e61a441c12e0c8b2'
        stark_key:
          title: Stark Key
          description: The stark public key, represented in hex format.
          type: string
          maxLength: 66
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x19c78df8f4ff31e78de58575487ce1eaf19922ad9b8a714e61a441c12e0c8b2'
      type: object
      required:
        - type
        - public_key
        - stark_key
    EncryptedDeviceSharesBackup:
      title: EncryptedDeviceSharesBackup
      properties:
        id:
          title: Id
          description: The ID of the backup. Not provided for organization keysets.
          type: string
        created_at:
          title: Created At
          description: The time the backup was created.
          type: string
          format: date-time
        ecdsa:
          title: Ecdsa
          description: Device ECDSA encrypted share
          type: string
          example: SGVsbG8=
        eddsa:
          title: Eddsa
          description: Device EdDSA encrypted share
          type: string
          example: SGVsbG8=
        ecdsa_stark:
          title: Ecdsa Stark
          description: Device ECDSA stark encrypted share
          type: string
          example: SGVsbG8=
      type: object
      required:
        - created_at
    EndUser:
      title: EndUser
      description: Represents an end user in the Fordefi platform.
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        external_id:
          title: External Id
          description: The ID that you assigned to the end user.
          type: string
          example: user|1234
        last_login_at:
          title: Last Login At
          description: The timestamp when the end user last logged into the mobile SDK.
          type: string
          format: date-time
      type: object
      required:
        - id
        - created_at
        - modified_at
        - external_id
        - last_login_at
    EndUserRef:
      title: EndUserRef
      properties:
        id:
          title: Id
          description: The unique identifier of the user in the Fordefi platform.
          type: string
          format: uuid
        user_type:
          title: User Type
          description: The type of the user.
          const: end_user
        external_id:
          title: External Id
          description: External id of the user.
          type: string
          example: user|1234
        state:
          title: State
          description: The state of the user.
          type: string
          enum:
            - active
            - deleted
      type: object
      required:
        - id
        - user_type
        - external_id
        - state
    EndUserSortableFields:
      title: EndUserSortableFields
      type: string
      enum:
        - created_asc
        - created_desc
        - end_user_last_login_asc
        - end_user_last_login_desc
    EnrichedAssetIdentifier:
      title: EnrichedAssetIdentifier
      oneOf:
        - $ref: '#/components/schemas/EnrichedCosmosAssetIdentifier'
        - $ref: '#/components/schemas/EnrichedEvmAssetIdentifier'
        - $ref: '#/components/schemas/EnrichedSolanaAssetIdentifier'
        - $ref: '#/components/schemas/EnrichedUtxoAssetIdentifier'
      discriminator:
        propertyName: type
        mapping:
          cosmos: '#/components/schemas/EnrichedCosmosAssetIdentifier'
          evm: '#/components/schemas/EnrichedEvmAssetIdentifier'
          solana: '#/components/schemas/EnrichedSolanaAssetIdentifier'
          utxo: '#/components/schemas/EnrichedUtxoAssetIdentifier'
    EnrichedChain:
      title: EnrichedChain
      description: A blockchain with metadata.
      oneOf:
        - $ref: '#/components/schemas/EnrichedCosmosChain'
        - $ref: '#/components/schemas/EnrichedEvmChain'
        - $ref: '#/components/schemas/EnrichedSolanaChain'
        - $ref: '#/components/schemas/EnrichedUtxoChain'
      discriminator:
        propertyName: chain_type
        mapping:
          cosmos: '#/components/schemas/EnrichedCosmosChain'
          evm: '#/components/schemas/EnrichedEvmChain'
          solana: '#/components/schemas/EnrichedSolanaChain'
          utxo: '#/components/schemas/EnrichedUtxoChain'
    EnrichedCosmosAssetIdentifier:
      title: EnrichedCosmosAssetIdentifier
      properties:
        type:
          title: Type
          description: Asset identifier type.
          const: cosmos
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/EnrichedCosmosNativeAssetIdentifier'
            - $ref: '#/components/schemas/EnrichedCosmosTokenAssetIdentifier'
          discriminator:
            propertyName: type
            mapping:
              native: '#/components/schemas/EnrichedCosmosNativeAssetIdentifier'
              token: '#/components/schemas/EnrichedCosmosTokenAssetIdentifier'
      type: object
      required:
        - type
        - details
    EnrichedCosmosBechAddress:
      title: EnrichedCosmosBechAddress
      properties:
        vault:
          description: The vault corresponding to this address.
          $ref: '#/components/schemas/VaultRef'
        explorer_url:
          title: Explorer Url
          description: >-
            The URL of a blockchain explorer that provides real-time information
            about the address.
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        contact:
          description: The contact details of this address.
          $ref: '#/components/schemas/ContactRef'
        address:
          $ref: '#/components/schemas/CosmosBechAddress'
      type: object
      required:
        - address
      x-konfig-properties:
        address:
          description: The Bech32 address.
    EnrichedCosmosChain:
      title: EnrichedCosmosChain
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: cosmos
        unique_id:
          $ref: '#/components/schemas/CosmosChainUniqueId'
        name:
          title: Name
          description: The full blockchain name.
          type: string
          minLength: 1
        native_currency_symbol:
          title: Native Currency Symbol
          description: The native currency symbol.
          type: string
          minLength: 1
          example: ETH
        native_currency_name:
          title: Native Currency Name
          description: The native currency name.
          type: string
          minLength: 1
          example: Ether
        blockchain_explorer:
          $ref: '#/components/schemas/BlockchainExplorer'
        base_denom:
          title: Base Denom
          description: The base denom of the chain.
          type: string
        bech32_prefix:
          $ref: '#/components/schemas/CosmosBech32Prefix'
      type: object
      required:
        - chain_type
        - unique_id
        - name
        - native_currency_symbol
        - native_currency_name
        - blockchain_explorer
        - base_denom
        - bech32_prefix
      x-konfig-properties:
        unique_id:
          description: The Cosmos chain unique id.
        bech32_prefix:
          description: The bech32 prefix for addresses on the chain.
    EnrichedCosmosNativeAssetIdentifier:
      title: EnrichedCosmosNativeAssetIdentifier
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
        type:
          title: Type
          description: Cosmos native asset type.
          const: native
        coin:
          $ref: '#/components/schemas/CosmosNativeCoin'
      type: object
      required:
        - chain
        - type
        - coin
      x-konfig-properties:
        chain:
          description: The details of the chain of the asset.
        coin:
          description: The details of the coin.
    EnrichedCosmosTokenAssetIdentifier:
      title: EnrichedCosmosTokenAssetIdentifier
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
        type:
          title: Type
          description: Cosmos token asset type.
          const: token
        coin:
          $ref: '#/components/schemas/CosmosToken'
      type: object
      required:
        - chain
        - type
        - coin
      x-konfig-properties:
        chain:
          description: The details of the chain of the asset.
        coin:
          description: The details of the coin.
    EnrichedEvmAddress:
      title: EnrichedEvmAddress
      properties:
        vault:
          description: The vault corresponding to this address.
          $ref: '#/components/schemas/VaultRef'
        explorer_url:
          title: Explorer Url
          description: >-
            The URL of a blockchain explorer that provides real-time information
            about the address.
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        contact:
          description: The contact details of this address.
          $ref: '#/components/schemas/ContactRef'
        address:
          title: Address
          description: The EVM address.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
        contract:
          description: The contract details corresponding to this address.
          $ref: '#/components/schemas/EvmContractMetadata'
      type: object
      required:
        - address
    EnrichedEvmAssetIdentifier:
      title: EnrichedEvmAssetIdentifier
      properties:
        type:
          title: Type
          description: Asset identifier type.
          const: evm
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/EnrichedEvmNativeAssetIdentifier'
            - $ref: '#/components/schemas/EnrichedEvmErc20AssetIdentifier'
            - $ref: '#/components/schemas/EnrichedEvmErc721AssetIdentifier'
            - $ref: '#/components/schemas/EnrichedEvmErc1155AssetIdentifier'
          discriminator:
            propertyName: type
            mapping:
              erc1155: '#/components/schemas/EnrichedEvmErc1155AssetIdentifier'
              erc20: '#/components/schemas/EnrichedEvmErc20AssetIdentifier'
              erc721: '#/components/schemas/EnrichedEvmErc721AssetIdentifier'
              native: '#/components/schemas/EnrichedEvmNativeAssetIdentifier'
      type: object
      required:
        - type
        - details
    EnrichedEvmChain:
      title: EnrichedEvmChain
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: evm
        named_chain_id:
          $ref: '#/components/schemas/EvmChainName'
        chain_id:
          $ref: '#/components/schemas/EvmChainId'
        unique_id:
          $ref: '#/components/schemas/EvmChainUniqueId'
        name:
          title: Name
          description: The full blockchain name.
          type: string
          minLength: 1
        native_currency_symbol:
          title: Native Currency Symbol
          description: The native currency symbol.
          type: string
          minLength: 1
          example: ETH
        native_currency_name:
          title: Native Currency Name
          description: The native currency name.
          type: string
          minLength: 1
          example: Ether
        blockchain_explorer:
          $ref: '#/components/schemas/BlockchainExplorer'
        gas_type:
          $ref: '#/components/schemas/GasType'
        supports_secure_node:
          title: Supports Secure Node
          description: '`True` if the chain supports secure nodes, `False` otherwise.'
          type: boolean
          default: false
      type: object
      required:
        - chain_type
        - named_chain_id
        - chain_id
        - unique_id
        - name
        - native_currency_symbol
        - native_currency_name
        - blockchain_explorer
        - gas_type
      x-konfig-properties:
        named_chain_id:
          description: The EVM chain name.
        chain_id:
          description: >-
            The EVM chain id. <ul>
            <li>1=`ethereum_mainnet`<li>5=`ethereum_goerli`<li>10=`optimism_mainnet`<li>56=`bsc_mainnet`<li>100=`gnosis_mainnet`<li>137=`polygon`<li>169=`manta_pacific_mainnet`<li>250=`fantom_mainnet`<li>324=`zksync_era_mainnet`<li>1030=`conflux_espace_mainnet`<li>1100=`dymension_mainnet`<li>1101=`polygon_zkevm_mainnet`<li>2222=`kava_mainnet`<li>4200=`merlin_mainnet`<li>5000=`mantle_mainnet`<li>7700=`canto_mainnet`<li>8453=`base_mainnet`<li>17000=`holesky_mainnet`<li>80001=`polygon_mumbai`<li>42161=`arbitrum_mainnet`<li>43114=`avalanche_mainnet`<li>59144=`linea_mainnet`<li>81457=`blast_mainnet`<li>11155111=`ethereum_sepolia`</ul>
        unique_id:
          description: The EVM chain unique id.
        gas_type:
          description: The type of gas used by the chain.
    EnrichedEvmErc1155AssetIdentifier:
      title: EnrichedEvmErc1155AssetIdentifier
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        type:
          title: Type
          description: EVM asset identifier type.
          const: erc1155
        token:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token_id:
          title: Token Id
          description: The token id of the ERC-1155 token.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - chain
        - type
        - token
        - token_id
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
        token:
          description: The ERC-1155 token contract.
    EnrichedEvmErc20AssetIdentifier:
      title: EnrichedEvmErc20AssetIdentifier
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        type:
          title: Type
          description: EVM asset identifier type.
          const: erc20
        token:
          $ref: '#/components/schemas/EnrichedEvmAddress'
      type: object
      required:
        - chain
        - type
        - token
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
        token:
          description: The ERC-20 token contract.
    EnrichedEvmErc721AssetIdentifier:
      title: EnrichedEvmErc721AssetIdentifier
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        type:
          title: Type
          description: EVM asset identifier type.
          const: erc721
        token:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token_id:
          title: Token Id
          description: The token id of the ERC-721 token.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - chain
        - type
        - token
        - token_id
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
        token:
          description: The ERC-721 token contract.
    EnrichedEvmNativeAssetIdentifier:
      title: EnrichedEvmNativeAssetIdentifier
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        type:
          title: Type
          description: EVM asset identifier type.
          const: native
      type: object
      required:
        - chain
        - type
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    EnrichedSolanaAddress:
      title: EnrichedSolanaAddress
      properties:
        vault:
          description: The vault corresponding to this address.
          $ref: '#/components/schemas/VaultRef'
        explorer_url:
          title: Explorer Url
          description: >-
            The URL of a blockchain explorer that provides real-time information
            about the address.
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        contact:
          description: The contact details of this address.
          $ref: '#/components/schemas/ContactRef'
        address:
          title: Address
          description: The Solana address represented in Base58 format.
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
        contract:
          description: The details of the contract corresponding to this address.
          $ref: '#/components/schemas/SolanaContractMetadata'
      type: object
      required:
        - address
    EnrichedSolanaAssetIdentifier:
      title: EnrichedSolanaAssetIdentifier
      properties:
        type:
          title: Type
          description: Asset identifier type.
          const: solana
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/EnrichedSolanaNativeAssetIdentifier'
            - $ref: '#/components/schemas/EnrichedSolanaSplTokenAssetIdentifier'
          discriminator:
            propertyName: type
            mapping:
              native: '#/components/schemas/EnrichedSolanaNativeAssetIdentifier'
              spl_token: '#/components/schemas/EnrichedSolanaSplTokenAssetIdentifier'
      type: object
      required:
        - type
        - details
    EnrichedSolanaChain:
      title: EnrichedSolanaChain
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: solana
        unique_id:
          $ref: '#/components/schemas/SolanaChainUniqueId'
        name:
          title: Name
          description: The full blockchain name.
          type: string
          minLength: 1
        native_currency_symbol:
          title: Native Currency Symbol
          description: The native currency symbol.
          type: string
          minLength: 1
          example: ETH
        native_currency_name:
          title: Native Currency Name
          description: The native currency name.
          type: string
          minLength: 1
          example: Ether
        blockchain_explorer:
          $ref: '#/components/schemas/BlockchainExplorer'
      type: object
      required:
        - chain_type
        - unique_id
        - name
        - native_currency_symbol
        - native_currency_name
        - blockchain_explorer
      x-konfig-properties:
        unique_id:
          description: The type of the Solana-based chain.
    EnrichedSolanaNativeAssetIdentifier:
      title: EnrichedSolanaNativeAssetIdentifier
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
        type:
          title: Type
          description: Solana asset type.
          const: native
      type: object
      required:
        - chain
        - type
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    EnrichedSolanaSplTokenAssetIdentifier:
      title: EnrichedSolanaSplTokenAssetIdentifier
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
        type:
          title: Type
          description: Solana asset type.
          const: spl_token
        token:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
      type: object
      required:
        - chain
        - type
        - token
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
        token:
          description: The SPL token minter address.
    EnrichedUtxoAddress:
      title: EnrichedUtxoAddress
      properties:
        vault:
          description: The vault corresponding to this address.
          $ref: '#/components/schemas/VaultRef'
        explorer_url:
          title: Explorer Url
          description: >-
            The URL of a blockchain explorer that provides real-time information
            about the address.
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        contact:
          description: The contact details of this address.
          $ref: '#/components/schemas/ContactRef'
        address:
          $ref: '#/components/schemas/UtxoAddress'
        vault_address:
          description: The vault address corresponding to this address.
          $ref: '#/components/schemas/VaultAddressRef'
      type: object
      required:
        - address
      x-konfig-properties:
        address:
          description: The UTXO address.
    EnrichedUtxoAssetIdentifier:
      title: EnrichedUtxoAssetIdentifier
      properties:
        type:
          title: Type
          description: Asset identifier type.
          const: utxo
        details:
          $ref: '#/components/schemas/EnrichedUtxoNativeAssetIdentifier'
      type: object
      required:
        - type
        - details
    EnrichedUtxoChain:
      title: EnrichedUtxoChain
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: utxo
        unique_id:
          $ref: '#/components/schemas/UtxoChainUniqueId'
        name:
          title: Name
          description: The full blockchain name.
          type: string
          minLength: 1
        native_currency_symbol:
          title: Native Currency Symbol
          description: The native currency symbol.
          type: string
          minLength: 1
          example: ETH
        native_currency_name:
          title: Native Currency Name
          description: The native currency name.
          type: string
          minLength: 1
          example: Ether
        blockchain_explorer:
          $ref: '#/components/schemas/BlockchainExplorer'
      type: object
      required:
        - chain_type
        - unique_id
        - name
        - native_currency_symbol
        - native_currency_name
        - blockchain_explorer
      x-konfig-properties:
        unique_id:
          description: The UTXO chain unique ID.
    EnrichedUtxoNativeAssetIdentifier:
      title: EnrichedUtxoNativeAssetIdentifier
      properties:
        type:
          title: Type
          description: UTXO asset type.
          const: native
        chain:
          $ref: '#/components/schemas/EnrichedUtxoChain'
      type: object
      required:
        - type
        - chain
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    Erc1155:
      title: Erc1155
      properties:
        address:
          $ref: '#/components/schemas/EvmAddress'
        name:
          title: Name
          description: The token name
          type: string
        symbol:
          title: Symbol
          description: The token symbol or ticker
          type: string
        type:
          title: Type
          description: The type of the token
          const: erc1155
      type: object
      required:
        - address
        - name
        - symbol
        - type
      x-konfig-properties:
        address:
          description: The token address
    Erc1155AllowanceForAllChange:
      title: Erc1155AllowanceForAllChange
      properties:
        type:
          title: Type
          const: erc1155_for_all
        owner:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        operator:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        approved:
          title: Approved
          description: >-
            `True` if the operator is approved to spend the tokens, `False`
            otherwise.
          type: boolean
        token_contract:
          $ref: '#/components/schemas/Erc1155Contract'
      type: object
      required:
        - type
        - owner
        - operator
        - approved
        - token_contract
      x-konfig-properties:
        owner:
          description: The owner giving the allowance.
        operator:
          description: The operator receiving the allowance.
        token_contract:
          description: The address of the ERC-1155 token.
    Erc1155BalanceChange:
      title: Erc1155BalanceChange
      properties:
        type:
          title: Type
          const: erc1155
        owner:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token_id:
          title: Token Id
          description: The token ID that's being transfered.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        diff:
          title: Diff
          description: >-
            The number of tokens that were added to or deducted from the owner's
            balance.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        token_contract:
          $ref: '#/components/schemas/Erc1155Contract'
      type: object
      required:
        - type
        - owner
        - token_id
        - diff
        - token_contract
      x-konfig-properties:
        owner:
          description: The address effected by the balance change.
        token_contract:
          description: The address of the ERC-1155 token.
    Erc1155Contract:
      title: Erc1155Contract
      properties:
        name:
          title: Name
          description: The name of the contract.
          type: string
        dapp:
          description: The DApp details of the contract.
          $ref: '#/components/schemas/Dapp'
        is_verified:
          title: Is Verified
          description: '`True` if the contract is verified, `False` otherwise.'
          type: boolean
        token:
          $ref: '#/components/schemas/Erc1155'
      type: object
      required:
        - is_verified
        - token
      x-konfig-properties:
        token:
          description: The token details of the contract.
    Erc1155Transfer:
      title: Erc1155Transfer
      properties:
        type:
          title: Type
          const: erc1155
        from:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        to:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token_id:
          title: Token Id
          description: The token ID that's being transferred.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        amount:
          title: Amount
          description: The amount of the ERC-1155 transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        token_contract:
          $ref: '#/components/schemas/Erc1155Contract'
      type: object
      required:
        - type
        - from
        - to
        - token_id
        - amount
        - token_contract
      x-konfig-properties:
        from:
          description: The sender of the ERC-1155 transfer.
        to:
          description: The receiver of the ERC-1155 transfer.
        token_contract:
          description: The address of the ERC-1155 token.
    Erc20:
      title: Erc20
      description: An ERC-20 token.
      properties:
        address:
          $ref: '#/components/schemas/EvmAddress'
        name:
          title: Name
          description: The token name
          type: string
        symbol:
          title: Symbol
          description: The token symbol or ticker
          type: string
        type:
          title: Type
          description: The type of the token
          const: erc20
        decimals:
          title: Decimals
          description: The token decimals
          type: integer
        logo_url:
          title: Logo Url
          description: The token logo url
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
      type: object
      required:
        - address
        - name
        - symbol
        - type
        - decimals
      x-konfig-properties:
        address:
          description: The token address
    Erc20AllowanceChange:
      title: Erc20AllowanceChange
      properties:
        type:
          title: Type
          const: erc20
        owner:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        spender:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        amount:
          title: Amount
          description: The amount of allowance.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        token_contract:
          $ref: '#/components/schemas/Erc20Contract'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - owner
        - spender
        - amount
        - token_contract
      x-konfig-properties:
        owner:
          description: The owner giving the allowance.
        spender:
          description: The spender receiving the allowance.
        token_contract:
          description: The ERC-20 token contract.
    Erc20BalanceChange:
      title: Erc20BalanceChange
      properties:
        type:
          title: Type
          const: erc20
        owner:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        diff:
          title: Diff
          description: >-
            The number of tokens that were added to or deducted from the owner's
            balance.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        token_contract:
          $ref: '#/components/schemas/Erc20Contract'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - owner
        - diff
        - token_contract
      x-konfig-properties:
        owner:
          description: The address effected by the balance change.
        token_contract:
          description: The ERC-20 token contract.
    Erc20Contract:
      title: Erc20Contract
      properties:
        name:
          title: Name
          description: The name of the contract.
          type: string
        dapp:
          description: The DApp details of the contract.
          $ref: '#/components/schemas/Dapp'
        is_verified:
          title: Is Verified
          description: '`True` if the contract is verified, `False` otherwise.'
          type: boolean
        token:
          $ref: '#/components/schemas/Erc20'
      type: object
      required:
        - is_verified
        - token
      x-konfig-properties:
        token:
          description: The token details of the contract.
    Erc20Transfer:
      title: Erc20Transfer
      properties:
        type:
          title: Type
          const: erc20
        from:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        to:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        amount:
          title: Amount
          description: The amount of the ERC-20 transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        token_contract:
          $ref: '#/components/schemas/Erc20Contract'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - from
        - to
        - amount
        - token_contract
      x-konfig-properties:
        from:
          description: The sender of the ERC-20 transfer.
        to:
          description: The receiver of the ERC-20 transfer.
        token_contract:
          description: The ERC-20 token contract.
    Erc721:
      title: Erc721
      properties:
        address:
          $ref: '#/components/schemas/EvmAddress'
        name:
          title: Name
          description: The token name
          type: string
        symbol:
          title: Symbol
          description: The token symbol or ticker
          type: string
        type:
          title: Type
          description: The type of the token
          const: erc721
      type: object
      required:
        - address
        - name
        - symbol
        - type
      x-konfig-properties:
        address:
          description: The token address
    Erc721AllowanceChange:
      title: Erc721AllowanceChange
      properties:
        type:
          title: Type
          const: erc721
        owner:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        operator:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token_id:
          title: Token Id
          description: The token ID that's being approved.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        token_contract:
          $ref: '#/components/schemas/Erc721Contract'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - owner
        - operator
        - token_id
        - token_contract
      x-konfig-properties:
        owner:
          description: The owner giving the allowance.
        operator:
          description: The operator receiving the allowance.
        token_contract:
          description: The address of the ERC-721 token.
    Erc721AllowanceForAllChange:
      title: Erc721AllowanceForAllChange
      properties:
        type:
          title: Type
          const: erc721_for_all
        owner:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        operator:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        approved:
          title: Approved
          description: >-
            `True` if the operator is approved to spend the tokens, `False'
            otherwise.
          type: boolean
        token_contract:
          $ref: '#/components/schemas/Erc721Contract'
      type: object
      required:
        - type
        - owner
        - operator
        - approved
        - token_contract
      x-konfig-properties:
        owner:
          description: The owner giving the allowance.
        operator:
          description: The operator receiving the allowance.
        token_contract:
          description: The address of the ERC-721 token.
    Erc721Contract:
      title: Erc721Contract
      properties:
        name:
          title: Name
          description: The name of the contract.
          type: string
        dapp:
          description: The DApp details of the contract.
          $ref: '#/components/schemas/Dapp'
        is_verified:
          title: Is Verified
          description: '`True` if the contract is verified, `False` otherwise.'
          type: boolean
        token:
          $ref: '#/components/schemas/Erc721'
      type: object
      required:
        - is_verified
        - token
      x-konfig-properties:
        token:
          description: The token details of the contract.
    Erc721OwnershipChange:
      title: Erc721OwnershipChange
      properties:
        type:
          title: Type
          const: erc721
        owner:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token_id:
          title: Token Id
          description: The token ID that's being transfered.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        owned:
          title: Owned
          description: '`True` if this token is owned, `False` otherwise.'
          type: boolean
        token_contract:
          $ref: '#/components/schemas/Erc721Contract'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - owner
        - token_id
        - owned
        - token_contract
      x-konfig-properties:
        owner:
          description: The address effected by the balance change.
        token_contract:
          description: The address of the ERC-721 token.
    Erc721Transfer:
      title: Erc721Transfer
      properties:
        type:
          title: Type
          const: erc721
        from:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        to:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token_id:
          title: Token Id
          description: The token ID that's being transferred.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        token_contract:
          $ref: '#/components/schemas/Erc721Contract'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - from
        - to
        - token_id
        - token_contract
      x-konfig-properties:
        from:
          description: The sender of the erc721 transfer.
        to:
          description: The receiver of the erc721 transfer.
        token_contract:
          description: The address of the ERC-721 token.
    EvmAddress:
      title: EvmAddress
      description: Address represents an EVM blockchain address.
      properties:
        chain:
          $ref: '#/components/schemas/EvmChain'
        hex_repr:
          title: Hex Repr
          description: Hexadecimal representation of the address in the chain.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
      type: object
      required:
        - chain
        - hex_repr
    EvmAddressRequest:
      title: EvmAddressRequest
      description: Address represents a blockchain address.
      properties:
        chain:
          $ref: '#/components/schemas/EvmChainUniqueId'
        hex_repr:
          title: Hex Repr
          description: Hexadecimal representation of the address in the chain.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
      type: object
      required:
        - chain
        - hex_repr
      x-konfig-properties:
        chain:
          description: The chain details this address is of.
    EvmAsset:
      title: EvmAsset
      properties:
        id:
          title: Id
          description: The asset ID.
          type: string
          format: uuid
        decimals:
          title: Decimals
          type: integer
          minimum: 0
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        name:
          title: Name
          description: The name of the asset.
          type: string
        symbol:
          title: Symbol
          description: The symbol (ticker) of the asset.
          type: string
        hidden:
          title: Hidden
          description: '`True` if this asset was set to be hidden, `False` otherwise.'
          type: boolean
        verified:
          title: Verified
          description: '`True` if this asset is verified by Fordefi, `False` otherwise.'
          type: boolean
        asset_identifier:
          $ref: '#/components/schemas/EnrichedAssetIdentifier'
        metadata_uri:
          title: Metadata Uri
          description: The URI of the asset metadata.
          type: string
        type:
          title: Type
          description: EVM asset type.
          const: evm_asset
          deprecated: true
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/EvmNativeAsset'
            - $ref: '#/components/schemas/EvmErc20Asset'
            - $ref: '#/components/schemas/EvmErc721Asset'
            - $ref: '#/components/schemas/EvmErc1155Asset'
          deprecated: true
          discriminator:
            propertyName: type
            mapping:
              evm_erc1155_asset: '#/components/schemas/EvmErc1155Asset'
              evm_erc20_asset: '#/components/schemas/EvmErc20Asset'
              evm_erc721_asset: '#/components/schemas/EvmErc721Asset'
              evm_native_asset: '#/components/schemas/EvmNativeAsset'
      type: object
      required:
        - id
        - decimals
        - name
        - symbol
        - hidden
        - verified
        - asset_identifier
        - type
        - details
      x-konfig-properties:
        asset_identifier:
          description: The asset identifier.
    EvmAssetIdentifierRequest:
      title: EvmAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: Asset identifier type.
          const: evm
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/EvmNativeAssetIdentifierRequest'
            - $ref: '#/components/schemas/EvmErc20AssetIdentifierRequest'
            - $ref: '#/components/schemas/EvmErc721AssetIdentifierRequest'
            - $ref: '#/components/schemas/EvmErc1155AssetIdentifierRequest'
          discriminator:
            propertyName: type
            mapping:
              erc1155: '#/components/schemas/EvmErc1155AssetIdentifierRequest'
              erc20: '#/components/schemas/EvmErc20AssetIdentifierRequest'
              erc721: '#/components/schemas/EvmErc721AssetIdentifierRequest'
              native: '#/components/schemas/EvmNativeAssetIdentifierRequest'
      type: object
      required:
        - type
        - details
    EvmBalanceChangeEffect:
      title: EvmBalanceChangeEffect
      oneOf:
        - $ref: '#/components/schemas/EvmNativeCurrencyBalanceChange'
        - $ref: '#/components/schemas/Erc20BalanceChange'
        - $ref: '#/components/schemas/Erc721OwnershipChange'
        - $ref: '#/components/schemas/Erc1155BalanceChange'
      discriminator:
        propertyName: type
        mapping:
          erc1155: '#/components/schemas/Erc1155BalanceChange'
          erc20: '#/components/schemas/Erc20BalanceChange'
          erc721: '#/components/schemas/Erc721OwnershipChange'
          native: '#/components/schemas/EvmNativeCurrencyBalanceChange'
    EvmBlockData:
      title: EvmBlockData
      properties:
        number:
          title: Number
          description: The block number.
          type: integer
        hash:
          title: Hash
          description: The block hash.
          type: string
          maxLength: 66
          minLength: 66
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x780f21260f89d610f24eed21b34d29229611a37e0003e83dd0da91981d7131ae'
        mined_at:
          title: Mined At
          description: The date and time when this block was mined.
          type: string
          format: date-time
      type: object
      required:
        - number
        - hash
        - mined_at
    EvmBridgeEffect:
      title: EvmBridgeEffect
      properties:
        bridge_name:
          title: Bridge Name
          description: The name of the bridge.
          type: string
        source:
          title: Source
          description: The source details of the bridge transaction.
          oneOf:
            - $ref: '#/components/schemas/EvmBridgeEffectSourceNative'
            - $ref: '#/components/schemas/EvmBridgeEffectSourceErc20'
          discriminator:
            propertyName: type
            mapping:
              erc20: '#/components/schemas/EvmBridgeEffectSourceErc20'
              native: '#/components/schemas/EvmBridgeEffectSourceNative'
        destination:
          title: Destination
          description: The source details of the bridge transaction.
          oneOf:
            - $ref: '#/components/schemas/EvmBridgeEffectKnownDestination'
            - $ref: '#/components/schemas/EvmBridgeEffectUnknownDestination'
          discriminator:
            propertyName: type
            mapping:
              known_target_chain: '#/components/schemas/EvmBridgeEffectKnownDestination'
              unknown_target_chain: '#/components/schemas/EvmBridgeEffectUnknownDestination'
        amount:
          title: Amount
          description: The amount of the bridge transaction.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - bridge_name
        - source
        - destination
        - amount
    EvmBridgeEffectKnownDestination:
      title: EvmBridgeEffectKnownDestination
      properties:
        type:
          title: Type
          description: The type of the effect destination.
          const: known_target_chain
        dest_address:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        dest_chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
      type: object
      required:
        - type
        - dest_address
        - dest_chain
      x-konfig-properties:
        dest_address:
          description: The destination address of the bridge transaction.
        dest_chain:
          description: The destination chain of the bridge transaction.
    EvmBridgeEffectSourceErc20:
      title: EvmBridgeEffectSourceErc20
      properties:
        type:
          title: Type
          description: The type of bridge effect.
          const: erc20
        source_address:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token:
          $ref: '#/components/schemas/Erc20'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - source_address
        - token
      x-konfig-properties:
        source_address:
          description: The source address of the bridge transaction.
        token:
          description: The ERC-20 token being transferred in the bridge transaction.
    EvmBridgeEffectSourceNative:
      title: EvmBridgeEffectSourceNative
      properties:
        type:
          title: Type
          description: The type of bridge effect.
          const: native
        source_address:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - source_address
      x-konfig-properties:
        source_address:
          description: The source address of the bridge transaction.
    EvmBridgeEffectUnknownDestination:
      title: EvmBridgeEffectUnknownDestination
      properties:
        type:
          title: Type
          description: The type of the effect destination.
          const: unknown_target_chain
        dest_address:
          title: Dest Address
          description: The destination address of the bridge transaction.
          type: string
        dest_chain:
          title: Dest Chain
          description: The destination chain of the bridge transaction.
          type: string
      type: object
      required:
        - type
        - dest_chain
    EvmChain:
      title: EvmChain
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: evm
        named_chain_id:
          $ref: '#/components/schemas/EvmChainName'
        chain_id:
          $ref: '#/components/schemas/EvmChainId'
        unique_id:
          $ref: '#/components/schemas/EvmChainUniqueId'
      type: object
      required:
        - chain_type
        - named_chain_id
        - chain_id
        - unique_id
      x-konfig-properties:
        named_chain_id:
          description: The EVM chain name.
        chain_id:
          description: >-
            The EVM chain id. <ul>
            <li>1=`ethereum_mainnet`<li>5=`ethereum_goerli`<li>10=`optimism_mainnet`<li>56=`bsc_mainnet`<li>100=`gnosis_mainnet`<li>137=`polygon`<li>169=`manta_pacific_mainnet`<li>250=`fantom_mainnet`<li>324=`zksync_era_mainnet`<li>1030=`conflux_espace_mainnet`<li>1100=`dymension_mainnet`<li>1101=`polygon_zkevm_mainnet`<li>2222=`kava_mainnet`<li>4200=`merlin_mainnet`<li>5000=`mantle_mainnet`<li>7700=`canto_mainnet`<li>8453=`base_mainnet`<li>17000=`holesky_mainnet`<li>80001=`polygon_mumbai`<li>42161=`arbitrum_mainnet`<li>43114=`avalanche_mainnet`<li>59144=`linea_mainnet`<li>81457=`blast_mainnet`<li>11155111=`ethereum_sepolia`</ul>
        unique_id:
          description: The EVM chain unique id.
    EvmChainId:
      title: EvmChainId
      type: integer
      enum:
        - 1
        - 5
        - 10
        - 56
        - 100
        - 137
        - 169
        - 250
        - 324
        - 1030
        - 1100
        - 1101
        - 2222
        - 4200
        - 5000
        - 7700
        - 8453
        - 17000
        - 80001
        - 42161
        - 43114
        - 59144
        - 81457
        - 11155111
    EvmChainName:
      title: EvmChainName
      type: string
      enum:
        - arbitrum_mainnet
        - avalanche_chain
        - base_mainnet
        - blast_mainnet
        - bsc_mainnet
        - canto_mainnet
        - conflux_mainnet
        - dymension_mainnet
        - ethereum_goerli
        - ethereum_holesky
        - ethereum_mainnet
        - ethereum_sepolia
        - fantom_mainnet
        - gnosis_mainnet
        - kava_mainnet
        - linea_mainnet
        - optimism_mainnet
        - manta_pacific_mainnet
        - mantle_mainnet
        - merlin_mainnet
        - polygon_mainnet
        - polygon_mumbai
        - polygon_zkevm_mainnet
        - zksync_era_mainnet
    EvmChainRequest:
      title: EvmChainRequest
      anyOf:
        - $ref: '#/components/schemas/EvmChainName'
        - $ref: '#/components/schemas/EvmChainId'
        - $ref: '#/components/schemas/EvmChainUniqueId'
    EvmChainUniqueId:
      title: EvmChainUniqueId
      type: string
      enum:
        - evm_1
        - evm_5
        - evm_10
        - evm_56
        - evm_100
        - evm_137
        - evm_169
        - evm_250
        - evm_324
        - evm_1030
        - evm_1100
        - evm_1101
        - evm_2222
        - evm_4200
        - evm_5000
        - evm_7700
        - evm_8453
        - evm_17000
        - evm_80001
        - evm_42161
        - evm_43114
        - evm_59144
        - evm_81457
        - evm_11155111
        - evm_arbitrum_mainnet
        - evm_avalanche_chain
        - evm_base_mainnet
        - evm_blast_mainnet
        - evm_bsc_mainnet
        - evm_canto_mainnet
        - evm_conflux_mainnet
        - evm_dymension_mainnet
        - evm_ethereum_goerli
        - evm_ethereum_holesky
        - evm_ethereum_mainnet
        - evm_ethereum_sepolia
        - evm_fantom_mainnet
        - evm_gnosis_mainnet
        - evm_kava_mainnet
        - evm_linea_mainnet
        - evm_optimism_mainnet
        - evm_manta_pacific_mainnet
        - evm_mantle_mainnet
        - evm_merlin_mainnet
        - evm_polygon_mainnet
        - evm_polygon_mumbai
        - evm_polygon_zkevm_mainnet
        - evm_zksync_era_mainnet
    EvmContractMetadata:
      title: EvmContractMetadata
      properties:
        name:
          title: Name
          description: The name of the contract.
          type: string
        dapp:
          description: The DApp details of the contract.
          $ref: '#/components/schemas/Dapp'
        is_verified:
          title: Is Verified
          description: '`True` if the contract is verified, `False` otherwise.'
          type: boolean
        token:
          title: Token
          description: The token details of the contract.
          oneOf:
            - $ref: '#/components/schemas/Erc20'
            - $ref: '#/components/schemas/Erc721'
            - $ref: '#/components/schemas/Erc1155'
          discriminator:
            propertyName: type
            mapping:
              erc1155: '#/components/schemas/Erc1155'
              erc20: '#/components/schemas/Erc20'
              erc721: '#/components/schemas/Erc721'
      type: object
      required:
        - is_verified
    EvmDataRequest:
      title: EvmDataRequest
      oneOf:
        - $ref: '#/components/schemas/EvmDataRequestBase64'
        - $ref: '#/components/schemas/EvmDataRequestFullDetails'
        - $ref: '#/components/schemas/EvmDataRequestHex'
      discriminator:
        propertyName: type
        mapping:
          base64: '#/components/schemas/EvmDataRequestBase64'
          full_details: '#/components/schemas/EvmDataRequestFullDetails'
          hex: '#/components/schemas/EvmDataRequestHex'
    EvmDataRequestBase64:
      title: EvmDataRequestBase64
      properties:
        type:
          title: Type
          description: Base64 raw format.
          const: base64
        raw_data:
          title: Raw Data
          description: >-
            The base64 raw data of the transaction, as a serialized method-call
            with its arguments. See [data field format for transactions on
            Ethereum](https://ethereum.org/en/developers/docs/transactions/#the-data-field).
          type: string
          example: SGVsbG8=
      type: object
      required:
        - type
        - raw_data
    EvmDataRequestFullDetails:
      title: EvmDataRequestFullDetails
      properties:
        type:
          title: Type
          description: Method-and-arguments format.
          const: full_details
        method_name:
          title: Method Name
          description: The method to call in the smart contract.
          type: string
        method_arguments:
          title: Method Arguments
          description: The arguments to pass into the method, as `key:value` pairs.
          type: object
      type: object
      required:
        - type
        - method_name
        - method_arguments
    EvmDataRequestHex:
      title: EvmDataRequestHex
      properties:
        type:
          title: Type
          description: Hex raw format.
          const: hex
        hex_data:
          title: Hex Data
          description: >-
            The hex data of the contract call, as a serialized method-call with
            its arguments.See [data field format for transactions on
            Ethereum](https://ethereum.org/en/developers/docs/transactions/#the-data-field).
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
      type: object
      required:
        - type
        - hex_data
    EvmDynamicSuggestedFees:
      title: EvmDynamicSuggestedFees
      properties:
        type:
          title: Type
          const: dynamic
        low:
          $ref: '#/components/schemas/DynamicGasFields'
        medium:
          $ref: '#/components/schemas/DynamicGasFields'
        high:
          $ref: '#/components/schemas/DynamicGasFields'
      type: object
      required:
        - type
        - low
        - medium
        - high
      x-konfig-properties:
        low:
          description: The low suggested gas fees.
        medium:
          description: The medium suggested gas fees.
        high:
          description: The high suggested gas fees.
    EvmEffects:
      title: EvmEffects
      properties:
        balance_changes:
          title: Balance Changes
          description: >-
            The aggregated balance changes at the addresses that are involved in
            the transaction. Values are indicated for all currency components of
            the transactions: native, ERC-20, ERC-721, and ERC-1155.
          items:
            $ref: '#/components/schemas/EvmBalanceChangeEffect'
          type: array
        transfers:
          title: Transfers
          description: The transfer events of the transaction.
          items:
            $ref: '#/components/schemas/EvmTransferEffect'
          type: array
        allowances:
          title: Allowances
          description: The allowance events of the transaction.
          items:
            $ref: '#/components/schemas/AllowanceEffect'
          type: array
        bridge:
          title: Bridge
          description: The bridge effects of the transaction.
          items:
            $ref: '#/components/schemas/EvmBridgeEffect'
          type: array
      type: object
      required:
        - balance_changes
        - transfers
        - allowances
        - bridge
    EvmErc1155Asset:
      title: EvmErc1155Asset
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        type:
          title: Type
          description: EVM asset type.
          const: evm_erc1155_asset
        token:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token_id:
          title: Token Id
          description: The token id of the ERC-1155 token.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - chain
        - type
        - token
        - token_id
      x-konfig-properties:
        chain:
          description: The details of the chain.
        token:
          description: The address of the ERC-1155 token.
    EvmErc1155AssetIdentifierRequest:
      title: EvmErc1155AssetIdentifierRequest
      properties:
        type:
          title: Type
          description: EVM asset identifier type.
          const: erc1155
        token:
          $ref: '#/components/schemas/EvmAddressRequest'
        token_id:
          title: Token Id
          description: The token id of the ERC-1155 token.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - token
        - token_id
      x-konfig-properties:
        token:
          description: The ERC-1155 token contract.
    EvmErc20Asset:
      title: EvmErc20Asset
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        type:
          title: Type
          description: EVM asset type.
          const: evm_erc20_asset
        token:
          $ref: '#/components/schemas/EnrichedEvmAddress'
      type: object
      required:
        - chain
        - type
        - token
      x-konfig-properties:
        chain:
          description: The details of the chain.
        token:
          description: The ERC-20 token contract.
    EvmErc20AssetIdentifierRequest:
      title: EvmErc20AssetIdentifierRequest
      properties:
        type:
          title: Type
          description: EVM asset identifier type.
          const: erc20
        token:
          $ref: '#/components/schemas/EvmAddressRequest'
      type: object
      required:
        - type
        - token
      x-konfig-properties:
        token:
          description: The ERC-20 token contract.
    EvmErc721Asset:
      title: EvmErc721Asset
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        type:
          title: Type
          description: EVM asset type.
          const: evm_erc721_asset
        token:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        token_id:
          title: Token Id
          description: The token ID of the ERC-721 token.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - chain
        - type
        - token
        - token_id
      x-konfig-properties:
        chain:
          description: The details of the chain.
        token:
          description: The address of the ERC-721 token.
    EvmErc721AssetIdentifierRequest:
      title: EvmErc721AssetIdentifierRequest
      properties:
        type:
          title: Type
          description: EVM asset identifier type.
          const: erc721
        token:
          $ref: '#/components/schemas/EvmAddressRequest'
        token_id:
          title: Token Id
          description: The token id of the ERC-721 token.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - token
        - token_id
      x-konfig-properties:
        token:
          description: The ERC-721 token contract.
    EvmGasEstimation:
      title: EvmGasEstimation
      properties:
        gas_limit:
          title: Gas Limit
          description: The gas limit.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        fiat_price:
          description: The price of the asset used to pay the fee.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - gas_limit
    EvmLegacySuggestedFees:
      title: EvmLegacySuggestedFees
      properties:
        type:
          title: Type
          const: legacy
        low:
          $ref: '#/components/schemas/LegacyGasFields'
        medium:
          $ref: '#/components/schemas/LegacyGasFields'
        high:
          $ref: '#/components/schemas/LegacyGasFields'
      type: object
      required:
        - type
        - low
        - medium
        - high
      x-konfig-properties:
        low:
          description: The low suggested gas fees.
        medium:
          description: The medium suggested gas fees.
        high:
          description: The high suggested gas fees.
    EvmMessage:
      title: EvmMessage
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        managed_transaction_data:
          description: >-
            Managed transaction data. Presented if the transaction was initiated
            from the Fordefi system itself, in contrast to unmanaged
            transactions (which are, for example, transfers of funds into a
            vault visible to Fordefi). 
          $ref: '#/components/schemas/ManagedTransactionData'
        signatures:
          title: Signatures
          description: The transaction signatures.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        type:
          title: Type
          description: EVM message type.
          const: evm_message
        evm_message_type:
          $ref: '#/components/schemas/EvmMessageType'
        state:
          $ref: '#/components/schemas/EvmMessageState'
        state_changes:
          title: State Changes
          description: The state changes of the message.
          items:
            $ref: '#/components/schemas/EvmMessageStateChange'
          type: array
        raw_data:
          title: Raw Data
          description: The raw data of the message.
          type: string
        typed_data:
          title: Typed Data
          description: The typed data of the message.
          oneOf:
            - $ref: '#/components/schemas/UnknownTypedMessageEvmMessage'
            - $ref: '#/components/schemas/PermitTypedMessageEvmMessage'
            - $ref: '#/components/schemas/Permit2TypedMessageEvmMessage'
          discriminator:
            propertyName: type
            mapping:
              permit: '#/components/schemas/PermitTypedMessageEvmMessage'
              permit2: '#/components/schemas/Permit2TypedMessageEvmMessage'
              unknown: '#/components/schemas/UnknownTypedMessageEvmMessage'
        vault:
          $ref: '#/components/schemas/VaultRef'
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - signatures
        - direction
        - type
        - evm_message_type
        - state
        - state_changes
        - raw_data
        - vault
        - chain
      x-konfig-properties:
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
          default: unset
        direction:
          description: The direction of the transaction.
        evm_message_type:
          description: The type of the EVM message.
        state:
          description: The state of the message.
        vault:
          description: The vault creating the message.
        chain:
          description: The details of the chain that this message is on.
    EvmMessageDomainData:
      title: EvmMessageDomainData
      properties:
        version:
          title: Version
          description: The version
          type: string
        name:
          title: Name
          description: The name
          type: string
        chain_id:
          description: The chain id
          $ref: '#/components/schemas/EvmChainId'
        verifying_contract:
          description: The verifying contract
          $ref: '#/components/schemas/EnrichedEvmAddress'
        salt:
          title: Salt
          description: The salt
          type: string
          example: SGVsbG8=
      type: object
    EvmMessageState:
      title: EvmMessageState
      type: string
      enum:
        - waiting_for_approval
        - approved
        - signed
        - completed
        - error_signing
        - aborted
    EvmMessageStateChange:
      title: EvmMessageStateChange
      properties:
        changed_at:
          title: Changed At
          description: The date and time when the state was changed.
          type: string
          format: date-time
        prices:
          $ref: '#/components/schemas/EvmPrices'
        asset_prices:
          title: Asset Prices
          description: The prices at the time the state was changed.
          items:
            $ref: '#/components/schemas/PricedAsset'
          type: array
        previous_state:
          description: The previous state of the message.
          $ref: '#/components/schemas/EvmMessageState'
        new_state:
          $ref: '#/components/schemas/EvmMessageState'
      type: object
      required:
        - changed_at
        - prices
        - asset_prices
        - new_state
      x-konfig-properties:
        prices:
          description: The prices at the time the state was changed.
          deprecated: true
        new_state:
          description: The new state of the message.
    EvmMessageType:
      title: EvmMessageType
      type: string
      enum:
        - personal_message_type
        - typed_message_type
    EvmNativeAsset:
      title: EvmNativeAsset
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        type:
          title: Type
          description: EVM asset type.
          const: evm_native_asset
      type: object
      required:
        - chain
        - type
      x-konfig-properties:
        chain:
          description: The details of the chain.
    EvmNativeAssetIdentifierRequest:
      title: EvmNativeAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: EVM asset identifier type.
          const: native
        chain:
          $ref: '#/components/schemas/EvmChainUniqueId'
      type: object
      required:
        - type
        - chain
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    EvmNativeCurrencyBalanceChange:
      title: EvmNativeCurrencyBalanceChange
      properties:
        type:
          title: Type
          const: native
        address:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        diff:
          title: Diff
          description: >-
            The amount of native currency that was added or deducted from the
            owner's balance. If the amount was deducted, the value is negative;
            if the amount was added, the value is positive.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - address
        - diff
      x-konfig-properties:
        address:
          description: The address affected by the balance change.
    EvmNativeCurrencyTransfer:
      title: EvmNativeCurrencyTransfer
      properties:
        type:
          title: Type
          const: native
        from:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        to:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        amount:
          title: Amount
          description: The amount of the transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - from
        - to
        - amount
      x-konfig-properties:
        from:
          description: The sender of the transfer.
        to:
          description: The receiver of the transfer.
    EvmNativeTransferDetails:
      title: EvmNativeTransferDetails
      properties:
        type:
          title: Type
          description: >-
            A transaction involving the transfer of native currency from one
            address to another. 
          const: native_transfer
        direction:
          $ref: '#/components/schemas/TransferDirection'
        is_internal:
          title: Is Internal
          description: >-
            Is this transfer an internal transfer between two vaults. None if
            the transaction is incoming.
          type: boolean
      type: object
      required:
        - type
        - direction
      x-konfig-properties:
        direction:
          description: The direction of the movement of funds, in case of a transfer.
          deprecated: true
    EvmPrices:
      title: EvmPrices
      properties:
        native_currency_price:
          description: The price of the native currency.
          $ref: '#/components/schemas/Price'
        token_prices:
          title: Token Prices
          description: The price of the tokens.
          items:
            $ref: '#/components/schemas/PricedErc20'
          type: array
      type: object
      required:
        - token_prices
    EvmReversion:
      title: EvmReversion
      properties:
        state:
          $ref: '#/components/schemas/EvmReversionState'
        reason:
          title: Reason
          description: The reason for the reversion (additional information).
          type: string
      type: object
      required:
        - state
      x-konfig-properties:
        state:
          description: >-
            The state of the reversion. Is one of the
            following:<ul><li>`not_reverted`: No reversion, meaning, completed
            successfully.<li>`unknown_revert`: Fordefi does not know the reason
            for the reversion.<li>`contract_asserted`: The smart contract
            originally made an assertion that was later rejected and the
            transaction was halted. <li>`out_of_gas`: Gas is insufficient for
            the transaction. <li>`max_fee_less_than_block_base_fee`: The input
            parameter `max_fee_per_gas` (under custom gas details) is lower than
            the current base fee of the block, so the miner cannot include the
            transaction in the block. <li>`base_fee_exceeds_gas_limit`: The base
            fee that is always paid is set to 21000 gas units in Ethereum. If a
            gas limit that's lower than that was set, the transaction is
            rejected.<li>`insufficient_funds_gas_and_value`: A transaction was
            sent for which there were insufficient funds.<li>`invalid_input`: A
            general error that might occur for many different reasons, usually
            because of issues on the Fordefi side and not on the
            client's.<li>`transaction_rejected`: As for
            `invalid_input`.<li>`gas_limit_exceeds_block_limit`: There's a limit
            on gas consumption for the whole block, which no single transaction
            can pass.</ul>
    EvmReversionState:
      title: EvmReversionState
      type: string
      enum:
        - not_reverted
        - unknown_revert
        - contract_asserted
        - out_of_gas
        - max_fee_less_than_block_base_fee
        - base_fee_exceeds_gas_limit
        - insufficient_funds_gas_and_value
        - invalid_input
        - transaction_rejected
        - gas_limit_exceeds_block_limit
    EvmSuggestedFees:
      title: EvmSuggestedFees
      properties:
        type:
          title: Type
          description: The type of the chain.
          const: evm
        fees:
          title: Fees
          description: The suggested gas fees.
          oneOf:
            - $ref: '#/components/schemas/EvmLegacySuggestedFees'
            - $ref: '#/components/schemas/EvmDynamicSuggestedFees'
          discriminator:
            propertyName: type
            mapping:
              dynamic: '#/components/schemas/EvmDynamicSuggestedFees'
              legacy: '#/components/schemas/EvmLegacySuggestedFees'
        chain_unique_id:
          $ref: '#/components/schemas/EvmChainUniqueId'
      type: object
      required:
        - type
        - fees
        - chain_unique_id
      x-konfig-properties:
        chain_unique_id:
          description: The EVM chain unique id.
    EvmTransaction:
      title: EvmTransaction
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        managed_transaction_data:
          description: >-
            Managed transaction data. Presented if the transaction was initiated
            from the Fordefi system itself, in contrast to unmanaged
            transactions (which are, for example, transfers of funds into a
            vault visible to Fordefi). 
          $ref: '#/components/schemas/ManagedTransactionData'
        signatures:
          title: Signatures
          description: The transaction signatures.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        type:
          title: Type
          description: EVM transaction type.
          const: evm_transaction
        evm_transaction_type_details:
          title: Evm Transaction Type Details
          description: Details of EVM transaction based on its type.
          oneOf:
            - $ref: '#/components/schemas/EvmNativeTransferDetails'
            - $ref: '#/components/schemas/TokenTransferDetails'
            - $ref: '#/components/schemas/AllowanceDetails'
            - $ref: '#/components/schemas/ContractCallDetails'
            - $ref: '#/components/schemas/BridgeDetails'
          discriminator:
            propertyName: type
            mapping:
              allowance: '#/components/schemas/AllowanceDetails'
              contract_call: '#/components/schemas/ContractCallDetails'
              cross_chain_bridge: '#/components/schemas/BridgeDetails'
              native_transfer: '#/components/schemas/EvmNativeTransferDetails'
              token_transfer: '#/components/schemas/TokenTransferDetails'
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        from:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        to:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        value:
          title: Value
          description: The value of the transaction.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        data:
          title: Data
          description: >-
            The Base64 data of the contract call, as a serialized method-call
            with its arguments. See [data field format for transactions on
            Ethereum](https://ethereum.org/en/developers/docs/transactions/#the-data-field).
          type: string
          example: SGVsbG8=
        hex_data:
          title: Hex Data
          description: >-
            The hex data of the contract call, as a serialized method-call with
            its arguments.
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
        parsed_data:
          $ref: '#/components/schemas/EvmTransactionParsedData'
        hash:
          title: Hash
          description: The hash of the transaction.
          type: string
          maxLength: 66
          minLength: 66
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x780f21260f89d610f24eed21b34d29229611a37e0003e83dd0da91981d7131ae'
        nonce:
          title: Nonce
          description: The nonce of the transaction.
          type: integer
        block:
          description: Details of the block the transaction was mined in.
          $ref: '#/components/schemas/EvmBlockData'
        expected_result:
          description: The expected (simulated) result of the transaction.
          $ref: '#/components/schemas/EvmTransactionResult'
        simulation_status_result:
          description: Whether simulation succeeded, reverted or failed.
          $ref: '#/components/schemas/SimulationStatusResult'
        mined_result:
          description: The result of the transaction after it was mined.
          $ref: '#/components/schemas/EvmTransactionResult'
        gas_submitted:
          title: Gas Submitted
          description: The gas details submitted for the transaction.
          oneOf:
            - $ref: '#/components/schemas/LegacyGas'
            - $ref: '#/components/schemas/DynamicGas'
          discriminator:
            propertyName: type
            mapping:
              dynamic: '#/components/schemas/DynamicGas'
              legacy: '#/components/schemas/LegacyGas'
        state:
          $ref: '#/components/schemas/EvmTransactionState'
        state_changes:
          title: State Changes
          description: The state changes of the transaction.
          items:
            $ref: '#/components/schemas/EvmTransactionStateChange'
          type: array
        parent_transaction_id:
          title: Parent Transaction Id
          description: >-
            The unique identifier of the parent transaction. Parent and child
            transactions form in cases where a transaction become stuck and is
            then either canceled or accelerated. If, for example, the original
            transaction (`t1`) is the parent and the related, adjustment
            transaction is the child (`t2`), then relative to itself, the parent
            field of `t1` is `null` and the child field is `t2_id`. Compare with
            field `child_transaction_id`.
          type: string
          format: uuid
        child_transaction_id:
          title: Child Transaction Id
          description: >-
            The unique identifier of the child transaction. Compare with field
            `parent_transaction_id`. Relative to itself, the parent field of
            transaction `t2` would aquire the identifier `t1_id` and the child
            field of `t2` would be `null`. 
          type: string
          format: uuid
        funding_for_transaction_id:
          title: Funding For Transaction Id
          description: Funding transaction ID.
          type: string
          format: uuid
        funded_by_transaction_id:
          title: Funded By Transaction Id
          description: Funded transaction ID.
          type: string
          format: uuid
        funded_by_vault:
          description: Funding vault.
          $ref: '#/components/schemas/VaultRef'
        current_preceding_pushed_to_blockchain_transaction_id:
          title: Current Preceding Pushed To Blockchain Transaction Id
          description: >-
            The unique identifier of the transaction that was pushed to the
            blockchain, In case this transaction is QUEUED.
          type: string
          format: uuid
        is_cancelation:
          title: Is Cancelation
          description: >-
            `True` if this transaction is a cancelation of a previous
            transaction, `False` otherwise. 
          type: boolean
        is_acceleration:
          title: Is Acceleration
          description: >-
            `True` if this transaction is an acceleration of a previous
            transaction, `False` otherwise.
          type: boolean
        use_secure_node:
          title: Use Secure Node
          description: >-
            `True` if Fordefi sends this transaction through a secure node,
            `False` otherwise. By using a secure node, you avoid maximal
            extractable value (MEV) attacks.
          type: boolean
        explorer_url:
          title: Explorer Url
          description: The URL of this transaction in a blockchain explorer.
          example: https://etherscan.io/tx/0x123
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        raw_transaction:
          title: Raw Transaction
          description: The raw transaction data, encoded as a hex string.
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
      type: object
      required:
        - id
        - created_at
        - modified_at
        - signatures
        - direction
        - type
        - evm_transaction_type_details
        - chain
        - from
        - to
        - value
        - data
        - parsed_data
        - gas_submitted
        - state
        - state_changes
        - is_cancelation
        - is_acceleration
        - use_secure_node
      x-konfig-properties:
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
          default: unset
        direction:
          description: The direction of the transaction.
        chain:
          description: The details of the chain this transaction is on
        from:
          description: The sender of the transaction.
        to:
          description: The recipient of the transaction.
        parsed_data:
          description: The parsed data of the transaction.
        state:
          description: >-
            The current status of the transaction. Can be one of the following:
            <ul><li>`waiting_for_approval`: If a transaction has not been
            auto-approved, it waits in this state until it has received all the
            required approvals.<li>`approved`: The transaction moves into this
            state on approval. Then, a notification is sent to the mobile device
            of the creator of the transaction for signing or to the API Signer
            (depending on the flow that was defined). The transaction remains in
            this state until it is signed.<li>`pushed_to_blockchain`: Once
            signed, the transaction is pushed to the blockchain, awaiting
            mining. From that moment, control of the transaction passes from
            Fordefi to the blockchain. This status resolves into one of the
            following: `completed`, `reverted`, `stuck`.<li>`completed`: The
            transaction was successfully mined into the
            blockchain.<li>`reverted`: The transaction was mined into the
            blockchain and was then reverted.<li>`stuck`: The transaction did
            not reach `completed` or `reverted` after 24
            hours.<li>`error_pushing_to_blockchain`: Failed to push the
            transaction to the blockchain.<li>`aborted`: Either the transaction
            was not approved or the transaction was approved but the creator
            aborted the process.</ul> For more information about statuses in the
            transaction lifecycle, see: [Transaction
            Lifecycle](https://docs.fordefi.com/docs/transaction-lifecycle). 
    EvmTransactionMethodArgument:
      title: EvmTransactionMethodArgument
      properties:
        name:
          title: Name
          description: The name of the argument.
          type: string
        type:
          title: Type
          description: The type of the argument.
          type: string
        value:
          title: Value
          description: The value of the argument.
          type: string
        enriched_address:
          description: Details of the address if it is an address.
          $ref: '#/components/schemas/EnrichedEvmAddress'
      type: object
      required:
        - name
        - type
        - value
    EvmTransactionParsedData:
      title: EvmTransactionParsedData
      properties:
        method:
          title: Method
          description: The method name, in case of contract call.
          type: string
        method_arguments:
          title: Method Arguments
          description: The method arguments, in case of contract call.
          items:
            $ref: '#/components/schemas/EvmTransactionMethodArgument'
          type: array
      type: object
      required:
        - method
        - method_arguments
    EvmTransactionResult:
      title: EvmTransactionResult
      properties:
        reversion:
          $ref: '#/components/schemas/EvmReversion'
        gas_debit:
          $ref: '#/components/schemas/GasDebit'
        effects:
          $ref: '#/components/schemas/EvmEffects'
      type: object
      required:
        - reversion
        - gas_debit
        - effects
      x-konfig-properties:
        reversion:
          description: Details whether the transaction was reverted or not.
        gas_debit:
          description: The gas debit of the transaction.
        effects:
          description: >-
            The effects (outcomes) of the transaction. A single transaction can
            have multiple effects, for example, a transferral of native funds:
            moving X ETH from Y to Z (here the effect will have a sender,
            receiver and amount). A more complex example is a transfer of a
            token, moving X USDC from X to Z (here, the effects are sender,
            receiver, amount, and token). 
    EvmTransactionState:
      title: EvmTransactionState
      type: string
      enum:
        - waiting_for_approval
        - approved
        - signed
        - pushed_to_blockchain
        - queued
        - mined
        - completed
        - aborting
        - dropped
        - aborted
        - error_signing
        - error_pushing_to_blockchain
        - mined_reverted
        - completed_reverted
        - stuck
        - accelerating
        - canceling
        - accelerated
        - cancelled
    EvmTransactionStateChange:
      title: EvmTransactionStateChange
      properties:
        changed_at:
          title: Changed At
          description: The date and time when the state was changed.
          type: string
          format: date-time
        prices:
          $ref: '#/components/schemas/EvmPrices'
        asset_prices:
          title: Asset Prices
          description: The prices at the time the state was changed.
          items:
            $ref: '#/components/schemas/PricedAsset'
          type: array
        previous_state:
          description: The previous state of the transaction.
          $ref: '#/components/schemas/EvmTransactionState'
        new_state:
          $ref: '#/components/schemas/EvmTransactionState'
      type: object
      required:
        - changed_at
        - prices
        - asset_prices
        - new_state
      x-konfig-properties:
        prices:
          description: The prices at the time the state was changed.
          deprecated: true
        new_state:
          description: The new state of the transaction.
    EvmTransactionType:
      title: EvmTransactionType
      type: string
      enum:
        - native_transfer
        - token_transfer
        - allowance
        - contract_call
        - cross_chain_bridge
    EvmTransferEffect:
      title: EvmTransferEffect
      oneOf:
        - $ref: '#/components/schemas/EvmNativeCurrencyTransfer'
        - $ref: '#/components/schemas/Erc20Transfer'
        - $ref: '#/components/schemas/Erc721Transfer'
        - $ref: '#/components/schemas/Erc1155Transfer'
      discriminator:
        propertyName: type
        mapping:
          erc1155: '#/components/schemas/Erc1155Transfer'
          erc20: '#/components/schemas/Erc20Transfer'
          erc721: '#/components/schemas/Erc721Transfer'
          native: '#/components/schemas/EvmNativeCurrencyTransfer'
    EvmVault:
      title: EvmVault
      description: Represents an EVM vault in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the vault.
          type: string
        created_by:
          $ref: '#/components/schemas/UserRef'
        derivation_path:
          title: Derivation Path
          description: The BIP 44 derivation path of the vault.
          type: string
          deprecated: true
          example: m/44/60/0/0/0
        public_key_compressed:
          title: Public Key Compressed
          description: >-
            The compressed public key of the vault. As defined in the SEC1
            standard: https://www.secg.org/SEC1-Ver-1.0.pdf.
          type: string
          example: SGVsbG8=
        derivation_info:
          $ref: '#/components/schemas/VaultDerivationInfo'
        keyset:
          $ref: '#/components/schemas/KeysetRef'
        key_holder:
          description: >-
            The user who owns the keyset of the vault. If not provided, the
            vault is owned by the organization.
          $ref: '#/components/schemas/EndUserRef'
        vault_group:
          $ref: '#/components/schemas/VaultGroupRef'
        pending_vault_group_action:
          title: Pending Vault Group Action
          description: Details of pending vault movement to another vault group.
          oneOf:
            - $ref: '#/components/schemas/PendingVaultGroupActionAdd'
            - $ref: '#/components/schemas/PendingVaultGroupActionRemove'
          discriminator:
            propertyName: type
            mapping:
              add: '#/components/schemas/PendingVaultGroupActionAdd'
              remove: '#/components/schemas/PendingVaultGroupActionRemove'
        state:
          $ref: '#/components/schemas/VaultState'
        type:
          title: Type
          description: EVM vault type.
          const: evm
        address:
          title: Address
          description: The address of the vault on EVM chain types.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - created_by
        - derivation_path
        - public_key_compressed
        - derivation_info
        - keyset
        - vault_group
        - state
        - type
        - address
      x-konfig-properties:
        created_by:
          description: Details of the vault creator.
        derivation_info:
          description: The derivation info of the vault.
        keyset:
          description: The keyset of the vault.
        vault_group:
          description: The vault group this vault belongs to.
        state:
          description: State of the vault.
    FeePriorityLevel:
      title: FeePriorityLevel
      type: string
      enum:
        - custom
        - low
        - medium
        - high
    FeePriorityLevelRequest:
      title: FeePriorityLevelRequest
      type: string
      enum:
        - low
        - medium
        - high
    FeePriorityRequest:
      title: FeePriorityRequest
      properties:
        type:
          title: Type
          const: priority
        priority_level:
          $ref: '#/components/schemas/FeePriorityLevelRequest'
      type: object
      required:
        - type
        - priority_level
      x-konfig-properties:
        priority_level:
          description: The priority level of the fee.
    FetchAssetPricesRequest:
      title: FetchAssetPricesRequest
      properties:
        asset_identifiers:
          title: Asset Identifiers
          description: The assets to price.
          items:
            $ref: '#/components/schemas/AssetIdentifierRequest'
          type: array
          minItems: 1
      type: object
      required:
        - asset_identifiers
    FetchAssetPricesResponse:
      title: FetchAssetPricesResponse
      properties:
        priced_assets:
          title: Priced Assets
          description: The priced assets.
          items:
            $ref: '#/components/schemas/PricedAsset'
          type: array
      type: object
      required:
        - priced_assets
    FiatCurrency:
      title: FiatCurrency
      properties:
        currency_symbol:
          $ref: '#/components/schemas/FiatCurrencySymbol'
        decimals:
          title: Decimals
          description: The number of decimals in the fiat currency.
          type: integer
          minimum: 0
      type: object
      required:
        - currency_symbol
        - decimals
      x-konfig-properties:
        currency_symbol:
          description: The symbol of the fiat currency.
    FiatCurrencySymbol:
      title: FiatCurrencySymbol
      description: FiatCurrencySymbol
      type: string
      const: usd
    GasDebit:
      title: GasDebit
      properties:
        gas_used:
          title: Gas Used
          description: The amount of gas used.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        gas_price:
          title: Gas Price
          description: The gas price.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        total_fee:
          title: Total Fee
          description: The total fee taken (`gas_used` * `gas_price`).
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        fiat_price:
          description: The price of the asset used to pay the fee.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - gas_used
        - gas_price
        - total_fee
    GasPriorityLevel:
      title: GasPriorityLevel
      type: string
      enum:
        - custom
        - low
        - medium
        - high
    GasPriorityLevelRequest:
      title: GasPriorityLevelRequest
      type: string
      enum:
        - low
        - medium
        - high
    GasPriorityRequest:
      title: GasPriorityRequest
      properties:
        gas_limit:
          title: Gas Limit
          description: >-
            The gas limit of the transaction, that is, the number of gas units
            you are willing to use for mining the transaction.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        type:
          title: Type
          const: priority
        priority_level:
          $ref: '#/components/schemas/GasPriorityLevelRequest'
      type: object
      required:
        - type
        - priority_level
      x-konfig-properties:
        priority_level:
          description: >-
            Using the Gas Priority option, you allocate gas according to
            `gas_limit` and `priority_level`, the range of fee you are willing
            to add: low, medium, or high. Fordefi then does its best to achieve
            success, based on these parameters.
    GasType:
      title: GasType
      type: string
      enum:
        - dynamic
        - legacy
    GetEndUserResponse:
      title: GetEndUserResponse
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        external_id:
          title: External Id
          description: The ID that you assigned to the end user.
          type: string
          example: user|1234
        last_login_at:
          title: Last Login At
          description: The timestamp when the end user last logged into the mobile SDK.
          type: string
          format: date-time
      type: object
      required:
        - id
        - created_at
        - modified_at
        - external_id
        - last_login_at
    GetKeysetResponse:
      title: GetKeysetResponse
      oneOf:
        - $ref: '#/components/schemas/OrganizationKeyset'
        - $ref: '#/components/schemas/UserKeyset'
      discriminator:
        propertyName: scope
        mapping:
          organization: '#/components/schemas/OrganizationKeyset'
          user: '#/components/schemas/UserKeyset'
    GetSuggestedFeesResponse:
      title: GetSuggestedFeesResponse
      properties:
        suggested_fees:
          title: Suggested Fees
          additionalProperties:
            $ref: '#/components/schemas/SuggestedFees'
          type: object
      type: object
      required:
        - suggested_fees
    GetTransactionResponse:
      title: GetTransactionResponse
      oneOf:
        - $ref: '#/components/schemas/BlackBoxSignature'
        - $ref: '#/components/schemas/CosmosTransaction'
        - $ref: '#/components/schemas/CosmosMessage'
        - $ref: '#/components/schemas/EvmMessage'
        - $ref: '#/components/schemas/EvmTransaction'
        - $ref: '#/components/schemas/SolanaMessage'
        - $ref: '#/components/schemas/SolanaTransaction'
        - $ref: '#/components/schemas/UtxoTransaction'
      discriminator:
        propertyName: type
        mapping:
          black_box_signature: '#/components/schemas/BlackBoxSignature'
          cosmos_message: '#/components/schemas/CosmosMessage'
          cosmos_transaction: '#/components/schemas/CosmosTransaction'
          evm_message: '#/components/schemas/EvmMessage'
          evm_transaction: '#/components/schemas/EvmTransaction'
          solana_message: '#/components/schemas/SolanaMessage'
          solana_transaction: '#/components/schemas/SolanaTransaction'
          utxo_transaction: '#/components/schemas/UtxoTransaction'
    GetUserGroupResponse:
      title: GetUserGroupResponse
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the user group.
          type: string
          minLength: 1
        users_count:
          title: Users Count
          description: The number of users in the group.
          type: integer
          minimum: 0
        state:
          $ref: '#/components/schemas/UserGroupState'
        modified_by:
          $ref: '#/components/schemas/UserRef'
        proposed_change:
          description: The change proposal for the group.
          $ref: '#/components/schemas/UserGroupChangeRequest'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - users_count
        - state
        - modified_by
      x-konfig-properties:
        state:
          description: The state of the user group.
        modified_by:
          description: Group last modifier.
    GetUserResponse:
      title: GetUserResponse
      oneOf:
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/ApiUser'
        - $ref: '#/components/schemas/ApiSigner'
      discriminator:
        propertyName: user_type
        mapping:
          api_signer: '#/components/schemas/ApiSigner'
          api_user: '#/components/schemas/ApiUser'
          person: '#/components/schemas/Person'
    GetVaultResponse:
      title: GetVaultResponse
      oneOf:
        - $ref: '#/components/schemas/BlackBoxVault'
        - $ref: '#/components/schemas/CosmosVault'
        - $ref: '#/components/schemas/EvmVault'
        - $ref: '#/components/schemas/SolanaVault'
        - $ref: '#/components/schemas/UtxoVault'
      discriminator:
        propertyName: type
        mapping:
          black_box: '#/components/schemas/BlackBoxVault'
          cosmos: '#/components/schemas/CosmosVault'
          evm: '#/components/schemas/EvmVault'
          solana: '#/components/schemas/SolanaVault'
          utxo: '#/components/schemas/UtxoVault'
    GroupRef:
      title: GroupRef
      description: Represents a reference to an address book group in the Fordefi platform.
      properties:
        id:
          title: Id
          description: >-
            The unique identifier of the address book group in the Fordefi
            platform.
          type: string
          format: uuid
        name:
          title: Name
          description: The name of the group.
          type: string
        contacts_count:
          title: Contacts Count
          description: The number of contacts in the group.
          type: integer
      type: object
      required:
        - id
        - name
        - contacts_count
    GroupUserRef:
      title: GroupUserRef
      description: Represents a reference to a group user in the Fordefi platform
      oneOf:
        - $ref: '#/components/schemas/PersonRef'
        - $ref: '#/components/schemas/ApiUserRef'
      discriminator:
        propertyName: user_type
        mapping:
          api_user: '#/components/schemas/ApiUserRef'
          person: '#/components/schemas/PersonRef'
    InstructionError:
      title: InstructionError
      properties:
        error_type:
          title: Error Type
          description: The type of the error of the instruction.
          type: string
        instruction_index:
          title: Instruction Index
          description: The index of the instruction.
          type: integer
        error_description:
          title: Error Description
          description: The description of the error of the instruction.
          type: string
      type: object
      required:
        - error_type
        - instruction_index
    IntegerHashPayload:
      title: IntegerHashPayload
      properties:
        format:
          title: Format
          description: ''
          const: hash_integer
        hash_integer:
          title: Hash Integer
          description: The payload to sign, as a big-endian integer.
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
      type: object
      required:
        - format
        - hash_integer
    IssueEndUserAuthTokenErrorType:
      title: IssueEndUserAuthTokenErrorType
      type: string
      const: cannot_issue_token_for_user_type
    IssueEndUserAuthTokenRequest:
      title: IssueEndUserAuthTokenRequest
      properties:
        user_type:
          title: User Type
          description: The type of the user.
          const: end_user
        user_id:
          title: User Id
          description: ID of the end user to issue the authorization token for.
          type: string
          format: uuid
      type: object
      required:
        - user_type
        - user_id
    IssueEndUserAuthTokenResponse:
      title: IssueEndUserAuthTokenResponse
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        user_id:
          title: User Id
          description: ID of the end user the authorization token is issued for.
          type: string
          format: uuid
        expired_at:
          title: Expired At
          description: Token expiration time.
          type: string
          format: date-time
        user_type:
          title: User Type
          description: The type of the user.
          const: end_user
        access_token:
          title: Access Token
          description: New access token for the user.
          type: string
      type: object
      required:
        - id
        - created_at
        - modified_at
        - user_id
        - expired_at
        - user_type
        - access_token
    KeyShares:
      title: KeyShares
      properties:
        device:
          title: Device
          description: Device latest encrypted share for the key.
          type: string
          example: SGVsbG8=
        platform:
          title: Platform
          description: >-
            Platform encrypted shares for the key. Whether it contains one or
            two shares depends on the backup type.
          items:
            type: string
            example: SGVsbG8=
          type: array
      type: object
    KeyType:
      title: KeyType
      type: string
      enum:
        - ecdsa_secp256k1
        - eddsa_ed25519
        - ecdsa_stark
    Keyset:
      title: Keyset
      description: Represents a keyset in the Fordefi platform
      oneOf:
        - $ref: '#/components/schemas/OrganizationKeyset'
        - $ref: '#/components/schemas/UserKeyset'
      discriminator:
        propertyName: scope
        mapping:
          organization: '#/components/schemas/OrganizationKeyset'
          user: '#/components/schemas/UserKeyset'
    KeysetKey:
      title: KeysetKey
      properties:
        id:
          title: Id
          description: The ID of the key.
          type: string
          format: uuid
        xpub:
          title: Xpub
          description: >-
            The xpub encoding of the key. For more details, see
            https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#serialization-format
          type: string
        encrypted_shares:
          $ref: '#/components/schemas/KeyShares'
        chain_code:
          title: Chain Code
          description: The chain code of the key. It is used to derive child keys.
          type: string
          example: SGVsbG8=
      type: object
      required:
        - id
        - xpub
        - encrypted_shares
        - chain_code
      x-konfig-properties:
        encrypted_shares:
          description: Encrypted shares for the key.
    KeysetRef:
      title: KeysetRef
      description: Represents a reference to a keyset in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the keyset in the Fordefi platform.
          type: string
          format: uuid
        name:
          title: Name
          description: The name of the keyset.
          type: string
          minLength: 1
        scope:
          $ref: '#/components/schemas/KeysetScope'
      type: object
      required:
        - id
        - name
        - scope
      x-konfig-properties:
        scope:
          description: The scope of the keyset.
    KeysetScope:
      title: KeysetScope
      description: Represents a keyset scope in the Fordefi platform
      type: string
      enum:
        - organization
        - user
    KeysetSortableFields:
      title: KeysetSortableFields
      type: string
      enum:
        - created_at_asc
        - created_at_desc
        - name_asc
        - name_desc
        - user_id_asc
        - user_id_desc
    LegacyGas:
      title: LegacyGas
      properties:
        price:
          title: Price
          description: The price of a gas unit.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        priority:
          $ref: '#/components/schemas/GasPriorityLevel'
        limit:
          title: Limit
          description: The gas limit.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        type:
          title: Type
          description: The type of gas data.
          const: legacy
      type: object
      required:
        - price
        - priority
        - limit
        - type
      x-konfig-properties:
        priority:
          description: The gas priority.
    LegacyGasFields:
      title: LegacyGasFields
      properties:
        price:
          title: Price
          description: The price of a gas unit.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - price
    LegacyGasRequest:
      title: LegacyGasRequest
      properties:
        type:
          title: Type
          description: The type of gas data.
          const: legacy
        price:
          title: Price
          description: The price of a gas unit.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - price
    ListAddressBookContactResponse:
      title: ListAddressBookContactResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        contacts:
          title: Contacts
          items:
            $ref: '#/components/schemas/AddressBookContact'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - contacts
    ListAuthTokensResponse:
      title: ListAuthTokensResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        auth_tokens:
          title: Auth Tokens
          description: Authorization tokens list.
          items:
            $ref: '#/components/schemas/AuthToken'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - auth_tokens
    ListBlockchainsResponse:
      title: ListBlockchainsResponse
      description: A list of blockchains.
      properties:
        chains:
          title: Chains
          items:
            $ref: '#/components/schemas/EnrichedChain'
          type: array
      type: object
      required:
        - chains
    ListEndUsersResponse:
      title: ListEndUsersResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        end_users:
          title: End Users
          items:
            $ref: '#/components/schemas/EndUser'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - end_users
    ListKeysetsResponse:
      title: ListKeysetsResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        keysets:
          title: Keysets
          items:
            $ref: '#/components/schemas/Keyset'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - keysets
    ListOwnedAssetsResponse:
      title: ListOwnedAssetsResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        owned_assets:
          title: Owned Assets
          items:
            $ref: '#/components/schemas/OwnedAsset'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - owned_assets
    ListTransactionResponse:
      title: ListTransactionResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        transactions:
          title: Transactions
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - transactions
    ListUserGroupsResponse:
      title: ListUserGroupsResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        user_groups:
          title: User Groups
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - user_groups
    ListUsersResponse:
      title: ListUsersResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        users:
          title: Users
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - users
    ListVaultAddressesResponse:
      title: ListVaultAddressesResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        addresses:
          title: Addresses
          items:
            $ref: '#/components/schemas/UtxoVaultAddress'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - addresses
    ListVaultGroupsFilterByAccessLevel:
      title: ListVaultGroupsFilterByAccessLevel
      type: string
      enum:
        - view
        - create_edit
        - all
    ListVaultGroupsResponse:
      title: ListVaultGroupsResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        vault_groups:
          title: Vault Groups
          items:
            $ref: '#/components/schemas/VaultGroup'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - vault_groups
    ListVaultsResponse:
      title: ListVaultsResponse
      properties:
        total:
          title: Total
          type: integer
        page:
          title: Page
          type: integer
        size:
          title: Size
          type: integer
        vaults:
          title: Vaults
          items:
            $ref: '#/components/schemas/Vault'
          type: array
      type: object
      required:
        - total
        - page
        - size
        - vaults
    ManagedTransactionData:
      title: ManagedTransactionData
      properties:
        created_by:
          $ref: '#/components/schemas/UserRef'
        aborted_by:
          description: >-
            The user who aborted the transaction, `null` if the transaction was
            not aborted.
          $ref: '#/components/schemas/UserRef'
        device_signing_request:
          $ref: '#/components/schemas/ActionSigningRequest'
        approval_request:
          description: The approval request.
          $ref: '#/components/schemas/ApprovalRequest'
        policy_match:
          description: The policy match.
          $ref: '#/components/schemas/PolicyMatch'
        signed_create_request:
          $ref: '#/components/schemas/SignedRawData'
        signer_type:
          $ref: '#/components/schemas/SignerType'
        risks:
          title: Risks
          description: The list of risks associated with this transaction.
          items:
            $ref: '#/components/schemas/TransactionRisk'
          type: array
        error_pushing_to_blockchain_message:
          title: Error Pushing To Blockchain Message
          description: >-
            The translated error message received from the node if it was
            rejected by it.
          type: string
        original_error_pushing_to_blockchain_message:
          title: Original Error Pushing To Blockchain Message
          description: The error message received from the node if it was rejected by it.
          type: string
        vault:
          $ref: '#/components/schemas/VaultRef'
        idempotence_id:
          title: Idempotence Id
          description: Optional idempotence ID of a transaction.
          type: string
          format: uuid
        has_current_user_vault_permissions:
          title: Has Current User Vault Permissions
          description: >-
            Does current user has permissions to the origin vault according to
            its vault group permissions.
          type: boolean
        batch_data:
          description: Batch data if the transaction is part of a batch.
          $ref: '#/components/schemas/BatchData'
        push_mode:
          description: >-
            The push mode of the transaction. It can be one of the
            following:<ul><li>`auto`: The transaction is pushed automatically by
            Fordefi. <li>`manual`: The transaction should be pushed manually by
            the user using a 3rd party.<li>`deferred`: The transaction is pushed
            by Fordefi after a certain time, if by that time it wasn't pushed
            manually by a 3rd party.</ul> 
          $ref: '#/components/schemas/PushMode'
      type: object
      required:
        - created_by
        - signer_type
        - risks
        - vault
        - has_current_user_vault_permissions
      x-konfig-properties:
        created_by:
          description: The user who created the transaction.
        signer_type:
          description: >-
            The type of signer of the transaction. Can be one of the following:
            <ul><li>`initiator`: The creator of the transaction (default).
            <li>`api_signer`: An API Signer - a service that you run on your own
            network or cloud environment. <li>`end_user`: An end user - a
            signature by a mobile device with a third-party app that uses
            Fordefi's Mobile SDK. </ul>In the case of `initiator`, a
            notification is expected to be sent to the initiator's mobile device
            for approval of the transaction. <br><br>Currently, only
            `api_signer` is supported for API calls.
        vault:
          description: The vault creating the transaction.
    MasterPublicKey:
      title: MasterPublicKey
      properties:
        id:
          title: Id
          description: The ID of the key.
          type: string
          format: uuid
        xpub:
          title: Xpub
          description: >-
            The xpub encoding of the key. For more details, see
            https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#serialization-format
          type: string
      type: object
      required:
        - id
        - xpub
    MessagesList:
      title: MessagesList
      oneOf:
        - $ref: '#/components/schemas/AminoMessagesList'
        - $ref: '#/components/schemas/DirectMessagesList'
        - $ref: '#/components/schemas/MinedMessagesList'
      discriminator:
        propertyName: format
        mapping:
          amino: '#/components/schemas/AminoMessagesList'
          direct: '#/components/schemas/DirectMessagesList'
          mined: '#/components/schemas/MinedMessagesList'
    MinedMessagesList:
      title: MinedMessagesList
      properties:
        format:
          title: Format
          const: mined
        messages:
          title: Messages
          description: List of messages of non-managed transaction.
          type: string
      type: object
      required:
        - format
        - messages
    MinedSignDoc:
      title: MinedSignDoc
      properties:
        format:
          title: Format
          const: mined
        messages:
          title: Messages
          description: The messages of the transaction.
          type: string
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
      type: object
      required:
        - format
        - messages
        - chain
      x-konfig-properties:
        chain:
          description: The chain the transaction is signed on.
    OrganizationKeyset:
      title: OrganizationKeyset
      description: Represents an organization keyset in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: Keyset name.
          type: string
          minLength: 1
        desired_key_types:
          title: Desired Key Types
          description: >-
            Desired key types. For an organization type keyset, this field is
            populated with all supported key types during creation. for a user
            type keyset, this field is populated by the user during keyset
            generation.
          items:
            $ref: '#/components/schemas/KeyType'
          type: array
        ecdsa:
          description: >-
            ECDSA key. The key is used to generate ECDSA-based vaults (for
            example, EVM vaults).
          $ref: '#/components/schemas/KeysetKey'
        eddsa:
          description: >-
            EdDSA key. The key is used to generate EdDSA-based vaults (for
            example, Solana vaults).
          $ref: '#/components/schemas/KeysetKey'
        ecdsa_stark:
          description: >-
            ECDSA-Stark key. The key is used to generate ECDSA-Stark-based
            vaults (for example, Stark Blackbox vaults).
          $ref: '#/components/schemas/KeysetKey'
        encrypted_device_shares_backups:
          title: Encrypted Device Shares Backups
          description: Encrypted device shares backups.
          items:
            $ref: '#/components/schemas/EncryptedDeviceSharesBackup'
          type: array
        scope:
          title: Scope
          description: Organization keyset scope.
          const: organization
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - scope
    OwnedAsset:
      title: OwnedAsset
      description: Represents an owned asset on Fordefi's platform
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        balance:
          title: Balance
          description: The cryptocurrency balance of the asset.
          type: string
          pattern: ^\d+$
          deprecated: true
          example: '1000000000000000000'
        balances:
          $ref: '#/components/schemas/Balances'
      type: object
      required:
        - asset
        - balance
        - balances
    OwnedAssetsSortableFields:
      title: OwnedAssetsSortableFields
      type: string
      enum:
        - asset_name_asc
        - asset_name_desc
        - chain_identifier_asc
        - chain_identifier_desc
        - balance_asc
        - balance_desc
        - market_value_asc
        - market_value_desc
        - price_asc
        - price_desc
    PendingUserChangeRef:
      title: PendingUserChangeRef
      properties:
        new_role:
          title: New Role
          description: The new role of the user.
          type: string
          enum:
            - admin
            - trader
        change_request_id:
          title: Change Request Id
          description: The unique identifier of the change request.
          type: string
          format: uuid
      type: object
      required:
        - new_role
        - change_request_id
    PendingVaultGroupActionAdd:
      title: PendingVaultGroupActionAdd
      properties:
        type:
          title: Type
          description: Add vault pending action type.
          const: add
        vault_group_id:
          title: Vault Group Id
          description: The ID of the vault group this vault will be moved to.
          type: string
          format: uuid
        vault_group_name:
          title: Vault Group Name
          description: The Name of the vault group this vault will be moved to.
          type: string
      type: object
      required:
        - type
        - vault_group_id
        - vault_group_name
    PendingVaultGroupActionRemove:
      title: PendingVaultGroupActionRemove
      properties:
        type:
          title: Type
          description: Remove vault pending action type.
          const: remove
      type: object
      required:
        - type
    Permit2TypedMessageEvmMessage:
      title: Permit2TypedMessageEvmMessage
      properties:
        domain:
          $ref: '#/components/schemas/EvmMessageDomainData'
        type:
          title: Type
          description: The typed message type.
          const: permit2
        spender:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        deadline:
          title: Deadline
          description: Signature deadline.
          type: string
          format: date-time
        token:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        value:
          title: Value
          description: The amount to permit.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        expiration:
          title: Expiration
          description: Expiration of the permit.
          type: string
          format: date-time
        nonce:
          title: Nonce
          description: The nonce.
          type: integer
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - domain
        - type
        - spender
        - deadline
        - token
        - value
        - expiration
        - nonce
      x-konfig-properties:
        domain:
          description: The domain data.
        spender:
          description: The spender.
        token:
          description: The token for which the permission is required
    PermitTypedMessageEvmMessage:
      title: PermitTypedMessageEvmMessage
      properties:
        domain:
          $ref: '#/components/schemas/EvmMessageDomainData'
        type:
          title: Type
          description: The typed message type.
          const: permit
        owner:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        spender:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        value:
          title: Value
          description: The value.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        deadline:
          title: Deadline
          description: The deadline.
          type: string
          format: date-time
        nonce:
          title: Nonce
          description: The nonce.
          type: integer
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - domain
        - type
        - owner
        - spender
        - value
        - deadline
        - nonce
      x-konfig-properties:
        domain:
          description: The domain data.
        owner:
          description: The owner.
        spender:
          description: The spender.
    Person:
      title: Person
      description: Represents a human user in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        user_type:
          title: User Type
          description: The type of the user.
          const: person
        name:
          title: Name
          description: The name of the user.
          example: John Doe
          type: string
        email:
          title: Email
          description: The email of the user.
          type: string
        state:
          $ref: '#/components/schemas/UserState'
        is_new_device_provisioning:
          title: Is New Device Provisioning
          description: >-
            `True` if the user is provisioning a new device, or is onboarding
            into an organization; `False` otherwise.
          type: boolean
        welcome_message_acknowledged_at:
          title: Welcome Message Acknowledged At
          description: The time when welcome message was displayed and acknowledge.
          type: string
          format: date-time
        role:
          $ref: '#/components/schemas/UserRole'
        user_groups:
          title: User Groups
          description: The groups the user belongs to.
          items:
            $ref: '#/components/schemas/UserGroupRef'
          type: array
        pending_addition_to_user_groups:
          title: Pending Addition To User Groups
          description: The groups the user is pending to be added to.
          items:
            $ref: '#/components/schemas/UserGroupRef'
          type: array
        pending_removal_from_user_groups:
          title: Pending Removal From User Groups
          description: The groups the user is pending to be removed from.
          items:
            $ref: '#/components/schemas/UserGroupRef'
          type: array
        pending_change:
          description: The pending change of the user.
          $ref: '#/components/schemas/PendingUserChangeRef'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - user_type
        - email
        - state
        - is_new_device_provisioning
        - welcome_message_acknowledged_at
        - role
      x-konfig-properties:
        state:
          description: >-
            The state of the user. Is one of: <ul><li>`active`: The user can
            perform all actions in the Fordefi platform.<li>`onboarding`: The
            user has been approved but still needs to activate the
            account.<li>`pending_approval`: The user has been invited but not
            yet approved.<li>`deleted`: The user has been deleted.</ul>
        role:
          description: The role of the user.
    PersonRef:
      title: PersonRef
      properties:
        id:
          title: Id
          description: The unique identifier of the user in the Fordefi platform.
          type: string
          format: uuid
        user_type:
          title: User Type
          description: >-
            The type of user. Can be a person, or (in programmatic scenarios) an
            API user or API Signer.
          const: person
        name:
          title: Name
          description: The name of the user.
          example: John Doe
          type: string
        email:
          title: Email
          description: The email of the user.
          type: string
        state:
          $ref: '#/components/schemas/UserState'
        role:
          $ref: '#/components/schemas/UserRole'
      type: object
      required:
        - id
        - user_type
        - email
        - state
        - role
      x-konfig-properties:
        state:
          description: The state of the user in the organization.
        role:
          description: The role of the user.
    PolicyMatch:
      title: PolicyMatch
      properties:
        is_default:
          title: Is Default
          description: '`True` if this is the default rule, `False` otherwise.'
          type: boolean
        rule_id:
          title: Rule Id
          description: The unique identifier of the rule.
          type: string
          format: uuid
        rule_name:
          title: Rule Name
          description: The name of the rule.
          type: string
        action_type:
          $ref: '#/components/schemas/TransactionPolicyMatchActionType'
      type: object
      required:
        - is_default
        - rule_id
        - rule_name
        - action_type
      x-konfig-properties:
        action_type:
          description: >-
            The action taken in the event of a policy match. Can be: <ul><li>
            Allow automatically<li> Block<li> Require express approval</ul>
    PreconditionFailedError:
      title: PreconditionFailedError
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        system_error_code:
          title: System Error Code
          description: An additional system error code in Fordefi.
          type: string
      type: object
      required:
        - title
        - detail
    PredictTransactionErrorType:
      title: PredictTransactionErrorType
      type: string
      enum:
        - vault_not_found
        - invalid_evm_message
        - invalid_evm_transaction_data
        - reverted_transaction
        - transaction_to_non_contract
        - vault_type_mismatch
        - dust_not_allowed
    PredictTransactionRequest:
      title: PredictTransactionRequest
      oneOf:
        - $ref: '#/components/schemas/TransactionDetailsCosmosTransactionRequest'
        - $ref: '#/components/schemas/TransactionDetailsCosmosMessageRequest'
        - $ref: '#/components/schemas/TransactionDetailsEvmMessageRequest'
        - $ref: '#/components/schemas/TransactionDetailsEvmTransactionRequest'
        - $ref: '#/components/schemas/TransactionDetailsSolanaMessageRequest'
        - $ref: '#/components/schemas/TransactionDetailsSolanaTransactionRequest'
        - $ref: '#/components/schemas/TransactionDetailsUtxoTransactionRequest'
      discriminator:
        propertyName: type
        mapping:
          cosmos_message: '#/components/schemas/TransactionDetailsCosmosMessageRequest'
          cosmos_transaction: '#/components/schemas/TransactionDetailsCosmosTransactionRequest'
          evm_message: '#/components/schemas/TransactionDetailsEvmMessageRequest'
          evm_transaction: '#/components/schemas/TransactionDetailsEvmTransactionRequest'
          solana_message: '#/components/schemas/TransactionDetailsSolanaMessageRequest'
          solana_transaction: '#/components/schemas/TransactionDetailsSolanaTransactionRequest'
          utxo_transaction: '#/components/schemas/TransactionDetailsUtxoTransactionRequest'
    PredictTransactionResponse:
      title: PredictTransactionResponse
      oneOf:
        - $ref: '#/components/schemas/PredictedCosmosTransaction'
        - $ref: '#/components/schemas/PredictedCosmosMessage'
        - $ref: '#/components/schemas/PredictedEvmMessage'
        - $ref: '#/components/schemas/PredictedEvmTransaction'
        - $ref: '#/components/schemas/PredictedSolanaMessage'
        - $ref: '#/components/schemas/PredictedSolanaTransaction'
        - $ref: '#/components/schemas/PredictedUtxoTransaction'
      discriminator:
        propertyName: type
        mapping:
          cosmos_message: '#/components/schemas/PredictedCosmosMessage'
          cosmos_transaction: '#/components/schemas/PredictedCosmosTransaction'
          evm_message: '#/components/schemas/PredictedEvmMessage'
          evm_transaction: '#/components/schemas/PredictedEvmTransaction'
          solana_message: '#/components/schemas/PredictedSolanaMessage'
          solana_transaction: '#/components/schemas/PredictedSolanaTransaction'
          utxo_transaction: '#/components/schemas/PredictedUtxoTransaction'
    PredictedCosmosMessage:
      title: PredictedCosmosMessage
      properties:
        policy_match:
          $ref: '#/components/schemas/PolicyMatch'
        approval_request:
          description: The approval request.
          $ref: '#/components/schemas/ApprovalRequest'
        risks:
          title: Risks
          description: The list of risks associated with this transaction.
          items:
            $ref: '#/components/schemas/TransactionRisk'
          type: array
        type:
          title: Type
          description: The type of the transaction.
          const: cosmos_message
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
      type: object
      required:
        - policy_match
        - risks
        - type
        - chain
      x-konfig-properties:
        policy_match:
          description: The policy match.
        chain:
          description: The details of the chain that this message is on.
    PredictedCosmosTransaction:
      title: PredictedCosmosTransaction
      properties:
        policy_match:
          $ref: '#/components/schemas/PolicyMatch'
        approval_request:
          description: The approval request.
          $ref: '#/components/schemas/ApprovalRequest'
        risks:
          title: Risks
          description: The list of risks associated with this transaction.
          items:
            $ref: '#/components/schemas/TransactionRisk'
          type: array
        type:
          title: Type
          description: The type of the transaction.
          const: cosmos_transaction
        expected_result:
          $ref: '#/components/schemas/CosmosTransactionResult'
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
      type: object
      required:
        - policy_match
        - risks
        - type
        - expected_result
        - chain
      x-konfig-properties:
        policy_match:
          description: The policy match.
        expected_result:
          description: The expected result of the transaction in case it is mined.
        chain:
          description: The details of the chain this transaction is on
    PredictedEvmMessage:
      title: PredictedEvmMessage
      properties:
        policy_match:
          $ref: '#/components/schemas/PolicyMatch'
        approval_request:
          description: The approval request.
          $ref: '#/components/schemas/ApprovalRequest'
        risks:
          title: Risks
          description: The list of risks associated with this transaction.
          items:
            $ref: '#/components/schemas/TransactionRisk'
          type: array
        type:
          title: Type
          description: The type of the transaction.
          const: evm_message
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
      type: object
      required:
        - policy_match
        - risks
        - type
        - chain
      x-konfig-properties:
        policy_match:
          description: The policy match.
        chain:
          description: The details of the chain that this message is on.
    PredictedEvmTransaction:
      title: PredictedEvmTransaction
      properties:
        policy_match:
          $ref: '#/components/schemas/PolicyMatch'
        approval_request:
          description: The approval request.
          $ref: '#/components/schemas/ApprovalRequest'
        risks:
          title: Risks
          description: The list of risks associated with this transaction.
          items:
            $ref: '#/components/schemas/TransactionRisk'
          type: array
        type:
          title: Type
          description: The type of the transaction.
          const: evm_transaction
        expected_result:
          $ref: '#/components/schemas/EvmTransactionResult'
        chain:
          $ref: '#/components/schemas/EnrichedEvmChain'
        simulation_status_result:
          $ref: '#/components/schemas/SimulationStatusResult'
      type: object
      required:
        - policy_match
        - risks
        - type
        - expected_result
        - chain
        - simulation_status_result
      x-konfig-properties:
        policy_match:
          description: The policy match.
        expected_result:
          description: The expected result of the transaction in case it is mined.
        chain:
          description: The details of the chain that this message is on.
        simulation_status_result:
          description: Whether simulation succeeded, reverted or failed.
    PredictedSolanaMessage:
      title: PredictedSolanaMessage
      properties:
        policy_match:
          $ref: '#/components/schemas/PolicyMatch'
        approval_request:
          description: The approval request.
          $ref: '#/components/schemas/ApprovalRequest'
        risks:
          title: Risks
          description: The list of risks associated with this transaction.
          items:
            $ref: '#/components/schemas/TransactionRisk'
          type: array
        type:
          title: Type
          description: The type of the transaction.
          const: solana_message
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
      type: object
      required:
        - policy_match
        - risks
        - type
        - chain
      x-konfig-properties:
        policy_match:
          description: The policy match.
        chain:
          description: The details of the chain that this message is on.
    PredictedSolanaTransaction:
      title: PredictedSolanaTransaction
      properties:
        policy_match:
          $ref: '#/components/schemas/PolicyMatch'
        approval_request:
          description: The approval request.
          $ref: '#/components/schemas/ApprovalRequest'
        risks:
          title: Risks
          description: The list of risks associated with this transaction.
          items:
            $ref: '#/components/schemas/TransactionRisk'
          type: array
        type:
          title: Type
          description: The type of the transaction.
          const: solana_transaction
        expected_result:
          $ref: '#/components/schemas/SolanaTransactionResult'
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
        simulation_status_result:
          $ref: '#/components/schemas/SimulationStatusResult'
      type: object
      required:
        - policy_match
        - risks
        - type
        - expected_result
        - chain
        - simulation_status_result
      x-konfig-properties:
        policy_match:
          description: The policy match.
        expected_result:
          description: The expected result of the transaction in case it is mined.
        chain:
          description: The details of the chain that this message is on.
        simulation_status_result:
          description: Whether simulation succeeded, reverted or failed.
    PredictedUtxoTransaction:
      title: PredictedUtxoTransaction
      properties:
        policy_match:
          $ref: '#/components/schemas/PolicyMatch'
        approval_request:
          description: The approval request.
          $ref: '#/components/schemas/ApprovalRequest'
        risks:
          title: Risks
          description: The list of risks associated with this transaction.
          items:
            $ref: '#/components/schemas/TransactionRisk'
          type: array
        type:
          title: Type
          description: The type of the transaction.
          const: utxo_transaction
        chain:
          $ref: '#/components/schemas/EnrichedUtxoChain'
        expected_result:
          $ref: '#/components/schemas/UtxoTransactionResult'
      type: object
      required:
        - policy_match
        - risks
        - type
        - chain
        - expected_result
      x-konfig-properties:
        policy_match:
          description: The policy match.
        chain:
          description: Details of the chain this transaction is on.
        expected_result:
          description: The expected result of the transaction in case it is mined.
    Price:
      title: Price
      description: Price represents a price in a given FiatCurrency.
      properties:
        price:
          title: Price
          description: The price in the given fiat currency.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        fiat_currency:
          $ref: '#/components/schemas/FiatCurrency'
      type: object
      required:
        - price
        - fiat_currency
    PricedAsset:
      title: PricedAsset
      properties:
        asset_identifier:
          $ref: '#/components/schemas/EnrichedAssetIdentifier'
        price:
          description: The price of the asset (if it exists in the system).
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - asset_identifier
      x-konfig-properties:
        asset_identifier:
          description: A unique asset identifier of the asset.
    PricedErc20:
      title: PricedErc20
      description: An ERC-20 token with price.
      properties:
        price:
          title: Price
          description: The price in the given fiat currency.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        fiat_currency:
          $ref: '#/components/schemas/FiatCurrency'
        token:
          $ref: '#/components/schemas/Erc20'
      type: object
      required:
        - price
        - fiat_currency
        - token
    PushMode:
      title: PushMode
      type: string
      enum:
        - auto
        - manual
        - deferred
    RateLimitError:
      title: RateLimitError
      properties: {}
      type: object
    ReleaseEvmTransactionRequest:
      title: ReleaseEvmTransactionRequest
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: evm_transaction
        release_type:
          $ref: '#/components/schemas/ReleaseType'
        signer_type:
          $ref: '#/components/schemas/SignerType'
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if transaction creation should fail in case prediction
            failed, `False` otherwise.
          type: boolean
          default: true
      type: object
      required:
        - type
        - release_type
      x-konfig-properties:
        release_type:
          description: The type of the release.
        signer_type:
          description: Set who should sign the transaction.
          default: initiator
    ReleaseTransactionErrorType:
      title: ReleaseTransactionErrorType
      type: string
      enum:
        - partial_signed_raw_request
        - invalid_transaction_state
        - invalid_transaction_type
        - missing_signed_raw_request
        - redundant_signed_raw_request
        - non_managed_transaction
        - invalid_signed_raw_request
        - invalid_signer_type
        - reverted_transaction
        - transaction_uses_secure_node
    ReleaseTransactionResponse:
      title: ReleaseTransactionResponse
      oneOf:
        - $ref: '#/components/schemas/BlackBoxSignature'
        - $ref: '#/components/schemas/CosmosTransaction'
        - $ref: '#/components/schemas/CosmosMessage'
        - $ref: '#/components/schemas/EvmMessage'
        - $ref: '#/components/schemas/EvmTransaction'
        - $ref: '#/components/schemas/SolanaMessage'
        - $ref: '#/components/schemas/SolanaTransaction'
        - $ref: '#/components/schemas/UtxoTransaction'
      discriminator:
        propertyName: type
        mapping:
          black_box_signature: '#/components/schemas/BlackBoxSignature'
          cosmos_message: '#/components/schemas/CosmosMessage'
          cosmos_transaction: '#/components/schemas/CosmosTransaction'
          evm_message: '#/components/schemas/EvmMessage'
          evm_transaction: '#/components/schemas/EvmTransaction'
          solana_message: '#/components/schemas/SolanaMessage'
          solana_transaction: '#/components/schemas/SolanaTransaction'
          utxo_transaction: '#/components/schemas/UtxoTransaction'
    ReleaseType:
      title: ReleaseType
      type: string
      enum:
        - cancel
        - accelerate
    RenameVaultRequest:
      title: RenameVaultRequest
      properties:
        name:
          title: Name
          description: The new name for the vault.
          type: string
          minLength: 1
      type: object
      required:
        - name
    RequestApprover:
      title: RequestApprover
      description: Represents a single approver in an approval request
      properties:
        user:
          title: User
          oneOf:
            - $ref: '#/components/schemas/PersonRef'
            - $ref: '#/components/schemas/ApiUserRef'
          discriminator:
            propertyName: user_type
            mapping:
              api_user: '#/components/schemas/ApiUserRef'
              person: '#/components/schemas/PersonRef'
        modified_at:
          title: Modified At
          description: The date and time when this approval was modified.
          type: string
          format: date-time
        decision:
          $ref: '#/components/schemas/ApprovalDecision'
        state:
          $ref: '#/components/schemas/ApprovalState'
      type: object
      required:
        - user
        - modified_at
        - decision
        - state
      x-konfig-properties:
        decision:
          description: The decision of the approver.
          deprecated: true
        state:
          description: The state of the approval request for this approver.
    Resource:
      title: Resource
      type: string
      enum:
        - user
        - user_change_proposals
        - user_group
        - user_group_change_proposal
        - vault
        - vault_address
        - vault_group
        - transaction
        - batch_transaction
        - path
        - keyset
        - auth_token
        - access_token
    ResourceError:
      title: ResourceError
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          description: Detailed error message.
          type: string
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
        resource:
          description: The type of resource.
          $ref: '#/components/schemas/Resource'
      type: object
      required:
        - title
        - detail
    SignDoc:
      title: SignDoc
      oneOf:
        - $ref: '#/components/schemas/AminoSignDoc'
        - $ref: '#/components/schemas/DirectSignDoc'
        - $ref: '#/components/schemas/MinedSignDoc'
      discriminator:
        propertyName: format
        mapping:
          amino: '#/components/schemas/AminoSignDoc'
          direct: '#/components/schemas/DirectSignDoc'
          mined: '#/components/schemas/MinedSignDoc'
    Signature:
      title: Signature
      properties:
        data:
          title: Data
          description: Signature on the data, encoded in base64 format.
          type: string
          example: SGVsbG8=
        signed_by:
          title: Signed By
          description: >-
            The user who created this signature, `null` if the signature wasn’t
            created by a Fordefi user.
          oneOf:
            - $ref: '#/components/schemas/PersonRef'
            - $ref: '#/components/schemas/ApiSignerRef'
            - $ref: '#/components/schemas/EndUserRef'
          discriminator:
            propertyName: user_type
            mapping:
              api_signer: '#/components/schemas/ApiSignerRef'
              end_user: '#/components/schemas/EndUserRef'
              person: '#/components/schemas/PersonRef'
      type: object
      required:
        - data
    SignedRawData:
      title: SignedRawData
      description: SignedRawData represents signed raw data with timestamp and URL.
      properties:
        raw_data:
          title: Raw Data
          description: The data that has been signed.
          type: string
          example: SGVsbG8=
        timestamp_signature:
          $ref: '#/components/schemas/TimestampedSignature'
        url_path:
          title: Url Path
          description: The endpoint URL path where the transaction was requested from.
          type: string
      type: object
      required:
        - raw_data
        - timestamp_signature
        - url_path
      x-konfig-properties:
        timestamp_signature:
          description: The signature of the data and timestamp.
    SignerInfo:
      title: SignerInfo
      properties:
        signer_address:
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        public_key:
          title: Public Key
          description: Public key in its compressed format
          type: string
          pattern: ^[a-fA-F0-9]+$
        account:
          title: Account
          description: The account number assigned by the chain.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        sequence:
          title: Sequence
          description: The sequence of this transaction.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
      type: object
      required:
        - signer_address
        - public_key
        - account
        - sequence
      x-konfig-properties:
        signer_address:
          description: The address of the signer (in bech32 format).
    SignerType:
      title: SignerType
      type: string
      enum:
        - initiator
        - api_signer
        - end_user
    SimulationStatus:
      title: SimulationStatus
      type: string
      enum:
        - success
        - failed
        - reverted
        - skipped
    SimulationStatusResult:
      title: SimulationStatusResult
      properties:
        simulation_status:
          description: The status of simulation result.
          $ref: '#/components/schemas/SimulationStatus'
        details:
          title: Details
          description: Details about transaction reversion if occurred.
          type: string
      type: object
      required:
        - details
    SolanaAddress:
      title: SolanaAddress
      description: Address represents an EVM blockchain address.
      properties:
        chain:
          $ref: '#/components/schemas/SolanaChain'
        base58_repr:
          title: Base58 Repr
          description: Base58 representation of the address in the chain.
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
      type: object
      required:
        - chain
        - base58_repr
    SolanaAddressBookContact:
      title: SolanaAddressBookContact
      description: Represents a contact in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the contact.
          type: string
        modified_by:
          $ref: '#/components/schemas/UserRef'
        state:
          $ref: '#/components/schemas/AddressBookContactState'
        groups:
          title: Groups
          description: List of contact's groups.
          items:
            $ref: '#/components/schemas/GroupRef'
          type: array
        pending_changes:
          description: Pending changes for the contact.
          $ref: '#/components/schemas/AddressBookContactChanges'
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: solana
        address:
          title: Address
          description: The address on the solana chain.
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
        chains:
          title: Chains
          description: The chains the contact belongs to.
          items:
            $ref: '#/components/schemas/EnrichedSolanaChain'
          type: array
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - modified_by
        - state
        - groups
        - chain_type
        - address
        - chains
      x-konfig-properties:
        modified_by:
          description: Address last modifier.
        state:
          description: The state of the contact.
    SolanaAddressBookContactAddressRef:
      title: SolanaAddressBookContactAddressRef
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: solana
        address:
          title: Address
          description: The address on the Solana chain.
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
        chains:
          title: Chains
          description: The chains the contact belongs to.
          items:
            $ref: '#/components/schemas/SolanaChain'
          type: array
      type: object
      required:
        - chain_type
        - address
        - chains
    SolanaAddressRequest:
      title: SolanaAddressRequest
      description: Address represents a blockchain address.
      properties:
        chain:
          $ref: '#/components/schemas/SolanaChainUniqueId'
        base58_repr:
          title: Base58 Repr
          description: Base58 representation of the address in the chain.
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
      type: object
      required:
        - chain
        - base58_repr
      x-konfig-properties:
        chain:
          description: The chain details this address is of.
    SolanaAsset:
      title: SolanaAsset
      properties:
        id:
          title: Id
          description: The asset ID.
          type: string
          format: uuid
        decimals:
          title: Decimals
          type: integer
          minimum: 0
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        name:
          title: Name
          description: The name of the asset.
          type: string
        symbol:
          title: Symbol
          description: The symbol (ticker) of the asset.
          type: string
        hidden:
          title: Hidden
          description: '`True` if this asset was set to be hidden, `False` otherwise.'
          type: boolean
        verified:
          title: Verified
          description: '`True` if this asset is verified by Fordefi, `False` otherwise.'
          type: boolean
        asset_identifier:
          $ref: '#/components/schemas/EnrichedAssetIdentifier'
        metadata_uri:
          title: Metadata Uri
          description: The URI of the asset metadata.
          type: string
        type:
          title: Type
          description: Solana asset type.
          const: solana_asset
          deprecated: true
        details:
          title: Details
          anyOf:
            - $ref: '#/components/schemas/SolanaNativeAsset'
            - $ref: '#/components/schemas/SolanaSplTokenAsset'
          deprecated: true
      type: object
      required:
        - id
        - decimals
        - name
        - symbol
        - hidden
        - verified
        - asset_identifier
        - type
        - details
      x-konfig-properties:
        asset_identifier:
          description: The asset identifier.
    SolanaAssetIdentifierRequest:
      title: SolanaAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: Solana asset identifier type.
          const: solana
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/SolanaNativeAssetIdentifierRequest'
            - $ref: '#/components/schemas/SolanaSplTokenAssetIdentifierRequest'
          discriminator:
            propertyName: type
            mapping:
              native: '#/components/schemas/SolanaNativeAssetIdentifierRequest'
              spl_token: '#/components/schemas/SolanaSplTokenAssetIdentifierRequest'
      type: object
      required:
        - type
        - details
    SolanaBalanceChangeEffect:
      title: SolanaBalanceChangeEffect
      oneOf:
        - $ref: '#/components/schemas/SolanaNativeCurrencyBalanceChange'
        - $ref: '#/components/schemas/SolanaTokenBalanceChange'
      discriminator:
        propertyName: type
        mapping:
          native: '#/components/schemas/SolanaNativeCurrencyBalanceChange'
          spl_token: '#/components/schemas/SolanaTokenBalanceChange'
    SolanaBlockData:
      title: SolanaBlockData
      properties:
        slot:
          title: Slot
          description: The slot number.
          type: integer
        hash:
          title: Hash
          description: The block hash.
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZAMdL4VZHirAn
        mined_at:
          title: Mined At
          description: The date and time this block was mined.
          type: string
          format: date-time
      type: object
      required:
        - slot
        - hash
        - mined_at
    SolanaChain:
      title: SolanaChain
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: solana
        unique_id:
          $ref: '#/components/schemas/SolanaChainUniqueId'
      type: object
      required:
        - chain_type
        - unique_id
      x-konfig-properties:
        unique_id:
          description: The type of the Solana-based chain.
    SolanaChainUniqueId:
      title: SolanaChainUniqueId
      type: string
      enum:
        - solana_mainnet
        - solana_devnet
    SolanaCompiledInstruction:
      title: SolanaCompiledInstruction
      properties:
        program_index:
          title: Program Index
          description: The program index.
          type: integer
        data:
          title: Data
          description: The instruction data in Base64 format.
          type: string
          example: SGVsbG8=
        account_indexes:
          title: Account Indexes
          description: >-
            The indexes of the instruction accounts in the transaction accounts
            list.
          items:
            type: integer
          type: array
        program:
          description: The address of the program account.
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        base58_data:
          title: Base58 Data
          description: The instruction data encoded in Base58 format.
          type: string
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
      type: object
      required:
        - program_index
        - data
        - account_indexes
    SolanaCompiledInstructionRequest:
      title: SolanaCompiledInstructionRequest
      properties:
        program_index:
          title: Program Index
          description: The program index.
          type: integer
        data:
          title: Data
          description: The instruction data in Base64 format.
          type: string
          example: SGVsbG8=
        account_indexes:
          title: Account Indexes
          description: >-
            The indexes of the instruction accounts in the transaction accounts
            list.
          items:
            type: integer
          type: array
      type: object
      required:
        - program_index
        - data
        - account_indexes
    SolanaContractMetadata:
      title: SolanaContractMetadata
      properties:
        name:
          title: Name
          description: The name of the contract.
          type: string
        dapp:
          description: The DApp details of the contract.
          $ref: '#/components/schemas/Dapp'
        is_verified:
          title: Is Verified
          description: '`True` if the contract is verified, `False` otherwise.'
          type: boolean
        token:
          description: The token details of the contract.
          $ref: '#/components/schemas/SplToken'
      type: object
      required:
        - is_verified
    SolanaEffects:
      title: SolanaEffects
      properties:
        balance_changes:
          title: Balance Changes
          description: The aggregated balance changes of addresses.
          items:
            $ref: '#/components/schemas/SolanaBalanceChangeEffect'
          type: array
        transfers:
          title: Transfers
          description: The transfer events of the transaction.
          items:
            $ref: '#/components/schemas/SolanaTransferEffect'
          type: array
      type: object
      required:
        - balance_changes
        - transfers
    SolanaEnrichedMessageAddressTableLookup:
      title: SolanaEnrichedMessageAddressTableLookup
      properties:
        account_key:
          $ref: '#/components/schemas/SolanaAddress'
        writable_indexes:
          title: Writable Indexes
          description: Indexes of writable accounts in the lookup table.
          items:
            type: integer
          type: array
        readonly_indexes:
          title: Readonly Indexes
          description: Indexes of read-only accounts in the lookup table.
          items:
            type: integer
          type: array
        state:
          $ref: '#/components/schemas/AddressLookupTableState'
      type: object
      required:
        - account_key
        - writable_indexes
        - readonly_indexes
        - state
      x-konfig-properties:
        account_key:
          description: The address of the lookup table.
        state:
          description: The state of the lookup table.
    SolanaFee:
      title: SolanaFee
      properties:
        fee:
          title: Fee
          description: The fee of the transaction (in lamports).
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        fiat_price:
          description: The price of the asset used to pay the fee.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - fee
    SolanaMessage:
      title: SolanaMessage
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        managed_transaction_data:
          description: >-
            Managed transaction data. Presented if the transaction was initiated
            from the Fordefi system itself, in contrast to unmanaged
            transactions (which are, for example, transfers of funds into a
            vault visible to Fordefi). 
          $ref: '#/components/schemas/ManagedTransactionData'
        signatures:
          title: Signatures
          description: The transaction signatures.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        type:
          title: Type
          description: Solana message type.
          const: solana_message
        solana_message_type:
          $ref: '#/components/schemas/SolanaMessageType'
        state:
          $ref: '#/components/schemas/SolanaMessageState'
        state_changes:
          title: State Changes
          description: The state changes of the message.
          items:
            $ref: '#/components/schemas/SolanaMessageStateChange'
          type: array
        string_data:
          title: String Data
          description: The message as a string.
          type: string
        raw_data:
          title: Raw Data
          description: The raw data of the message, encoded in base64
          type: string
          example: SGVsbG8=
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - signatures
        - direction
        - type
        - solana_message_type
        - state
        - state_changes
        - string_data
        - raw_data
        - chain
      x-konfig-properties:
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
          default: unset
        direction:
          description: The direction of the transaction.
        solana_message_type:
          description: The type of the Solana message.
        state:
          description: The state of the message.
        chain:
          description: The details of the chain that this message is on.
    SolanaMessageAddressTableLookupRequest:
      title: SolanaMessageAddressTableLookupRequest
      properties:
        account_key:
          title: Account Key
          description: The address of the lookup table.
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
        writable_indexes:
          title: Writable Indexes
          description: Indexes of writable accounts in the lookup table.
          items:
            type: integer
          type: array
        readonly_indexes:
          title: Readonly Indexes
          description: Indexes of read-only accounts in the lookup table.
          items:
            type: integer
          type: array
      type: object
      required:
        - account_key
        - writable_indexes
        - readonly_indexes
    SolanaMessageState:
      title: SolanaMessageState
      type: string
      enum:
        - waiting_for_approval
        - approved
        - signed
        - completed
        - error_signing
        - aborted
    SolanaMessageStateChange:
      title: SolanaMessageStateChange
      properties:
        changed_at:
          title: Changed At
          description: The date and time when the state was changed.
          type: string
          format: date-time
        asset_prices:
          title: Asset Prices
          description: The prices at the time the state was changed.
          items:
            $ref: '#/components/schemas/PricedAsset'
          type: array
        previous_state:
          description: The previous state of the message.
          $ref: '#/components/schemas/SolanaMessageState'
        new_state:
          $ref: '#/components/schemas/SolanaMessageState'
      type: object
      required:
        - changed_at
        - asset_prices
        - new_state
      x-konfig-properties:
        new_state:
          description: The new state of the message.
    SolanaMessageType:
      title: SolanaMessageType
      type: string
      const: personal_message_type
    SolanaMessageVersion:
      title: SolanaMessageVersion
      type: string
      enum:
        - legacy
        - v0
    SolanaNativeAsset:
      title: SolanaNativeAsset
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
        type:
          title: Type
          description: Solana asset type.
          const: solana_native_asset
      type: object
      required:
        - chain
        - type
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    SolanaNativeAssetIdentifierRequest:
      title: SolanaNativeAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: Solana asset identifier type.
          const: native
        chain:
          $ref: '#/components/schemas/SolanaChainUniqueId'
      type: object
      required:
        - type
        - chain
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    SolanaNativeCurrencyBalanceChange:
      title: SolanaNativeCurrencyBalanceChange
      properties:
        type:
          title: Type
          const: native
        address:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        diff:
          title: Diff
          description: >-
            The amount of native currency that was added or deducted from the
            owner's balance. If the amount was deducted, the value is negative;
            if the amount was added, the value is positive.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - address
        - diff
      x-konfig-properties:
        address:
          description: The address affected by the balance change.
    SolanaNativeCurrencyTransfer:
      title: SolanaNativeCurrencyTransfer
      properties:
        type:
          title: Type
          const: native
        from:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        to:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        amount:
          title: Amount
          description: The amount of the transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - type
        - from
        - to
        - amount
      x-konfig-properties:
        from:
          description: The sender of the transfer.
        to:
          description: The receiver of the transfer.
    SolanaNativeTransferDetails:
      title: SolanaNativeTransferDetails
      properties:
        type:
          title: Type
          description: >-
            A transaction involving the transfer of native currency from one
            address to another. 
          const: native_transfer
        direction:
          $ref: '#/components/schemas/TransferDirection'
        sender:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        recipient:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        is_internal:
          title: Is Internal
          description: >-
            Is this transfer an internal transfer between two vaults. None if
            the transaction is incoming.
          type: boolean
      type: object
      required:
        - type
        - direction
        - sender
        - recipient
      x-konfig-properties:
        direction:
          description: The direction of the movement of funds, in case of a transfer.
          deprecated: true
        sender:
          description: The sender of the tokens.
        recipient:
          description: The recipient of the tokens.
    SolanaPersonalMessageRequest:
      title: SolanaPersonalMessageRequest
      properties:
        type:
          title: Type
          description: Personal message standard.
          const: personal_message_type
        chain:
          $ref: '#/components/schemas/SolanaChainUniqueId'
        raw_data:
          title: Raw Data
          description: Base64 of the message to be signed.
          type: string
          example: SGVsbG8=
      type: object
      required:
        - type
        - chain
        - raw_data
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    SolanaRawTransactionDetails:
      title: SolanaRawTransactionDetails
      properties:
        type:
          title: Type
          description: A transaction capable of any operation.
          const: raw_transaction
      type: object
      required:
        - type
    SolanaReversion:
      title: SolanaReversion
      properties:
        state:
          $ref: '#/components/schemas/SolanaReversionState'
        reason:
          title: Reason
          description: The reason for the reversion (additional information).
          type: string
      type: object
      required:
        - state
      x-konfig-properties:
        state:
          description: >-
            The state of the reversion. Is one of the
            following:<ul><li>`not_reverted`: No reversion, meaning, completed
            successfully.<li>`unknown_revert`: Fordefi does not know the reason
            for the reversion.<li>`contract_asserted`: The smart contract
            originally made an assertion that was later rejected and the
            transaction was halted. <li>`insufficient_funds_gas_and_value`: A
            transaction was sent for which there were insufficient
            funds.<li>`insufficient_funds_for_rent`: There is not enough SOL in
            the account to pay for the rent.</ul>
    SolanaReversionState:
      title: SolanaReversionState
      type: string
      enum:
        - not_reverted
        - unknown_revert
        - contract_asserted
        - insufficient_funds_gas_and_value
        - insufficient_funds_for_rent
    SolanaSplTokenAsset:
      title: SolanaSplTokenAsset
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
        type:
          title: Type
          description: Solana asset type.
          const: solana_spl_token_asset
      type: object
      required:
        - chain
        - type
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    SolanaSplTokenAssetIdentifierRequest:
      title: SolanaSplTokenAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: SPL token asset identifier type.
          const: spl_token
        token:
          $ref: '#/components/schemas/SolanaAddressRequest'
      type: object
      required:
        - type
        - token
      x-konfig-properties:
        token:
          description: The SPL token details.
    SolanaSuggestedFees:
      title: SolanaSuggestedFees
      properties:
        type:
          title: Type
          description: The type of the chain.
          const: solana
        chain_unique_id:
          $ref: '#/components/schemas/SolanaChainUniqueId'
        fee_per_signature:
          title: Fee Per Signature
          description: >-
            The fee paid for each signature in the transaction, denominated in
            lamports.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - chain_unique_id
        - fee_per_signature
      x-konfig-properties:
        chain_unique_id:
          description: The Solana chain unique id.
    SolanaTokenBalanceChange:
      title: SolanaTokenBalanceChange
      properties:
        type:
          title: Type
          const: spl_token
        owner:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        diff:
          title: Diff
          description: >-
            The amount of native currency that was added or deducted from the
            owner's balance. If the amount was deducted, the value is negative;
            if the amount was added, the value is positive.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        token_contract:
          $ref: '#/components/schemas/SplTokenContract'
      type: object
      required:
        - type
        - owner
        - diff
        - token_contract
      x-konfig-properties:
        owner:
          description: The address affected by the balance change.
        token_contract:
          description: The SPL token contract.
    SolanaTokenTransfer:
      title: SolanaTokenTransfer
      properties:
        type:
          title: Type
          const: spl_token
        from:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        to:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        amount:
          title: Amount
          description: The amount of the transfer.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        token_contract:
          $ref: '#/components/schemas/SplTokenContract'
      type: object
      required:
        - type
        - from
        - to
        - amount
        - token_contract
      x-konfig-properties:
        from:
          description: The sender of the transfer.
        to:
          description: The receiver of the transfer.
        token_contract:
          description: The SPL token contract.
    SolanaTokenTransferDetails:
      title: SolanaTokenTransferDetails
      properties:
        type:
          title: Type
          description: >-
            A transaction involving the transfer of native currency from one
            address to another. 
          const: token_transfer
        direction:
          $ref: '#/components/schemas/TransferDirection'
        sender:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        recipient:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        is_internal:
          title: Is Internal
          description: >-
            Is this transfer an internal transfer between two vaults. None if
            the transaction is incoming.
          type: boolean
      type: object
      required:
        - type
        - direction
        - sender
        - recipient
      x-konfig-properties:
        direction:
          description: The direction of the movement of funds, in case of a transfer.
          deprecated: true
        sender:
          description: The sender of the tokens.
        recipient:
          description: The recipient of the tokens.
    SolanaTransaction:
      title: SolanaTransaction
      properties:
        version:
          $ref: '#/components/schemas/SolanaMessageVersion'
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        managed_transaction_data:
          description: >-
            Managed transaction data. Presented if the transaction was initiated
            from the Fordefi system itself, in contrast to unmanaged
            transactions (which are, for example, transfers of funds into a
            vault visible to Fordefi). 
          $ref: '#/components/schemas/ManagedTransactionData'
        signatures:
          title: Signatures
          description: The transaction signatures.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        type:
          title: Type
          description: The type of the transaction.
          const: solana_transaction
        solana_transaction_type_details:
          title: Solana Transaction Type Details
          description: Details of Solana transaction based on its type.
          oneOf:
            - $ref: '#/components/schemas/SolanaNativeTransferDetails'
            - $ref: '#/components/schemas/SolanaTokenTransferDetails'
            - $ref: '#/components/schemas/SolanaRawTransactionDetails'
          discriminator:
            propertyName: type
            mapping:
              native_transfer: '#/components/schemas/SolanaNativeTransferDetails'
              raw_transaction: '#/components/schemas/SolanaRawTransactionDetails'
              token_transfer: '#/components/schemas/SolanaTokenTransferDetails'
        chain:
          $ref: '#/components/schemas/EnrichedSolanaChain'
        state:
          $ref: '#/components/schemas/SolanaTransactionState'
        state_changes:
          title: State Changes
          description: The state changes of the transaction.
          items:
            $ref: '#/components/schemas/SolanaTransactionStateChange'
          type: array
        instructions:
          title: Instructions
          description: The instructions of the transaction.
          items:
            $ref: '#/components/schemas/SolanaCompiledInstruction'
          type: array
        accounts:
          title: Accounts
          description: Accounts used in the transaction.
          items:
            $ref: '#/components/schemas/SolanaTransactionAccount'
          type: array
        address_table_lookups:
          title: Address Table Lookups
          description: Lookup tables of accounts used in the transaction.
          items:
            $ref: '#/components/schemas/SolanaEnrichedMessageAddressTableLookup'
          type: array
        sender:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        raw_transaction:
          title: Raw Transaction
          description: The serialized transaction encoded as a base64 string
          type: string
          example: SGVsbG8=
        hash:
          title: Hash
          description: The first signature of the transaction.
          type: string
          maxLength: 88
          minLength: 64
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: >-
            FAWA66fudpiwdRDDQ4DRxdJsRvawvauwg4vQkm98ZHFpXmW5N7xzRiTRpt8QiZ19s1aVbzKgXW6kEZanwHeDFNS
        recent_blockhash:
          title: Recent Blockhash
          description: The transaction nonce (last block hash).
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZAMdL4VZHirAn
        block:
          description: Details of the block the transaction was mined in.
          $ref: '#/components/schemas/SolanaBlockData'
        expected_result:
          description: The expected result of the transaction in case it is mined.
          $ref: '#/components/schemas/SolanaTransactionResult'
        simulation_status_result:
          $ref: '#/components/schemas/SimulationStatusResult'
        mined_result:
          description: The result of the transaction after it was mined.
          $ref: '#/components/schemas/SolanaTransactionResult'
        explorer_url:
          title: Explorer Url
          description: >-
            The URL of this transaction in a blockchain explorer. For example,
            Solscan.
          example: https://solscan.io/tx/FAWA66f...6kEZanwHeDFNS
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
      type: object
      required:
        - id
        - created_at
        - modified_at
        - signatures
        - direction
        - type
        - solana_transaction_type_details
        - chain
        - state
        - state_changes
        - version
        - instructions
        - accounts
        - address_table_lookups
        - sender
        - simulation_status_result
      x-konfig-properties:
        version:
          description: The version of the transaction message.
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
          default: unset
        direction:
          description: The direction of the transaction.
        chain:
          description: The details of the chain this transaction is on
        state:
          description: The current state of the transaction.
        sender:
          description: The sender of the transaction.
        simulation_status_result:
          description: Whether simulation succeeded or failed.
    SolanaTransactionAccount:
      title: SolanaTransactionAccount
      properties:
        address:
          $ref: '#/components/schemas/EnrichedSolanaAddress'
        writable:
          title: Writable
          description: >-
            Indicates if this account is writable in the context of the
            transaction.
          type: boolean
        signer:
          title: Signer
          description: Indicates if this account is a signer of the transaction.
          type: boolean
      type: object
      required:
        - address
        - writable
        - signer
      x-konfig-properties:
        address:
          description: The address of the account.
    SolanaTransactionAccountRequest:
      title: SolanaTransactionAccountRequest
      properties:
        address:
          title: Address
          description: The address of the account.
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
        writable:
          title: Writable
          description: >-
            Indicates if this account is writable in the context of the
            transaction.
          type: boolean
        signer:
          title: Signer
          description: Indicates if this account is a signer of the transaction.
          type: boolean
        ephemeral_key:
          title: Ephemeral Key
          description: A 64-byte Solana secret key of the account, encoded in base-64.
          type: string
          maxLength: 88
          minLength: 88
          example: lnNyP8kFPEaVpvUo/SIlhdZlzhPU8r7yT/h0gG5ajzQ=
      type: object
      required:
        - address
        - writable
        - signer
    SolanaTransactionResult:
      title: SolanaTransactionResult
      properties:
        reversion:
          $ref: '#/components/schemas/SolanaReversion'
        transaction_error:
          title: Transaction Error
          description: The description of the error of the transaction.
          type: string
        fee:
          title: Fee
          description: The fee of the transaction (in lamports).
          type: string
          pattern: ^0*[1-9]\d*$
          deprecated: true
          example: '1000000000000000000'
        enriched_fee:
          $ref: '#/components/schemas/SolanaFee'
        effects:
          $ref: '#/components/schemas/SolanaEffects'
        instruction_error:
          description: The description of the error of the instruction.
          $ref: '#/components/schemas/InstructionError'
      type: object
      required:
        - reversion
        - fee
        - enriched_fee
        - effects
      x-konfig-properties:
        reversion:
          description: Details whether the transaction was reverted or not.
        enriched_fee:
          description: The fee of the transaction.
        effects:
          description: The effects of the transaction.
    SolanaTransactionSignaturesRequest:
      title: SolanaTransactionSignaturesRequest
      properties:
        data:
          title: Data
          description: Signature on the data, encoded in base64 format.
          type: string
          example: SGVsbG8=
      type: object
    SolanaTransactionState:
      title: SolanaTransactionState
      type: string
      enum:
        - waiting_for_approval
        - approved
        - signed
        - pushed_to_blockchain
        - mined
        - completed
        - aborted
        - error_pushing_to_blockchain
        - mined_reverted
        - completed_reverted
        - error_signing
        - dropped
    SolanaTransactionStateChange:
      title: SolanaTransactionStateChange
      properties:
        changed_at:
          title: Changed At
          description: The date and time when the state was changed.
          type: string
          format: date-time
        asset_prices:
          title: Asset Prices
          description: The prices at the time the state was changed.
          items:
            $ref: '#/components/schemas/PricedAsset'
          type: array
        previous_state:
          description: The previous state of the transaction.
          $ref: '#/components/schemas/SolanaTransactionState'
        new_state:
          $ref: '#/components/schemas/SolanaTransactionState'
      type: object
      required:
        - changed_at
        - asset_prices
        - new_state
      x-konfig-properties:
        new_state:
          description: The new state of the transaction.
    SolanaTransactionType:
      title: SolanaTransactionType
      type: string
      enum:
        - native_transfer
        - token_transfer
        - raw_transaction
    SolanaTransferEffect:
      title: SolanaTransferEffect
      oneOf:
        - $ref: '#/components/schemas/SolanaNativeCurrencyTransfer'
        - $ref: '#/components/schemas/SolanaTokenTransfer'
      discriminator:
        propertyName: type
        mapping:
          native: '#/components/schemas/SolanaNativeCurrencyTransfer'
          spl_token: '#/components/schemas/SolanaTokenTransfer'
    SolanaVault:
      title: SolanaVault
      description: Represents a Solana vault in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the vault.
          type: string
        created_by:
          $ref: '#/components/schemas/UserRef'
        derivation_path:
          title: Derivation Path
          description: The BIP 44 derivation path of the vault.
          type: string
          deprecated: true
          example: m/44/60/0/0/0
        public_key_compressed:
          title: Public Key Compressed
          description: >-
            The compressed public key of the vault. As defined in the SEC1
            standard: https://www.secg.org/SEC1-Ver-1.0.pdf.
          type: string
          example: SGVsbG8=
        derivation_info:
          $ref: '#/components/schemas/VaultDerivationInfo'
        keyset:
          $ref: '#/components/schemas/KeysetRef'
        key_holder:
          description: >-
            The user who owns the keyset of the vault. If not provided, the
            vault is owned by the organization.
          $ref: '#/components/schemas/EndUserRef'
        vault_group:
          $ref: '#/components/schemas/VaultGroupRef'
        pending_vault_group_action:
          title: Pending Vault Group Action
          description: Details of pending vault movement to another vault group.
          oneOf:
            - $ref: '#/components/schemas/PendingVaultGroupActionAdd'
            - $ref: '#/components/schemas/PendingVaultGroupActionRemove'
          discriminator:
            propertyName: type
            mapping:
              add: '#/components/schemas/PendingVaultGroupActionAdd'
              remove: '#/components/schemas/PendingVaultGroupActionRemove'
        state:
          $ref: '#/components/schemas/VaultState'
        type:
          title: Type
          description: Solana vault type.
          const: solana
        address:
          title: Address
          description: The address of the vault in the Solana blockchain.
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - created_by
        - derivation_path
        - public_key_compressed
        - derivation_info
        - keyset
        - vault_group
        - state
        - type
        - address
      x-konfig-properties:
        created_by:
          description: Details of the vault creator.
        derivation_info:
          description: The derivation info of the vault.
        keyset:
          description: The keyset of the vault.
        vault_group:
          description: The vault group this vault belongs to.
        state:
          description: State of the vault.
    SplToken:
      title: SplToken
      properties:
        type:
          title: Type
          description: The type of the token
          const: spl_token
        address:
          $ref: '#/components/schemas/SolanaAddress'
        name:
          title: Name
          description: The token name
          type: string
        symbol:
          title: Symbol
          description: The token symbol or ticker
          type: string
        decimals:
          title: Decimals
          description: The token decimals
          type: integer
        logo_url:
          title: Logo Url
          description: The token logo url
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
      type: object
      required:
        - type
        - address
        - name
        - symbol
        - decimals
      x-konfig-properties:
        address:
          description: The token address
    SplTokenContract:
      title: SplTokenContract
      properties:
        name:
          title: Name
          description: The name of the contract.
          type: string
        dapp:
          description: The DApp details of the contract.
          $ref: '#/components/schemas/Dapp'
        is_verified:
          title: Is Verified
          description: '`True` if the contract is verified, `False` otherwise.'
          type: boolean
        token:
          $ref: '#/components/schemas/SplToken'
      type: object
      required:
        - is_verified
        - token
      x-konfig-properties:
        token:
          description: The token details of the contract.
    StdCoin:
      title: StdCoin
      properties:
        denom:
          title: Denom
          description: Denom of this coin.
          type: string
        amount:
          title: Amount
          description: Amount of this coin.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
      type: object
      required:
        - denom
        - amount
    StdFee:
      title: StdFee
      properties:
        coins:
          title: Coins
          items:
            $ref: '#/components/schemas/CosmosCoinWithAmount'
          type: array
        gas:
          title: Gas
          description: The gas amount.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        payer:
          description: The payer.
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        granter:
          description: The granter.
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
        fee_payer:
          description: The fee payer.
          $ref: '#/components/schemas/EnrichedCosmosBechAddress'
      type: object
      required:
        - coins
        - gas
    StdFeeRequest:
      title: StdFeeRequest
      properties:
        amount:
          title: Amount
          description: List of coins to pay for this transaction.
          items:
            $ref: '#/components/schemas/StdCoin'
          type: array
        gas:
          title: Gas
          description: Gas wanted for this transaction.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        payer:
          title: Payer
          description: Payer for this transaction.
          default: ''
          type: string
        granter:
          title: Granter
          description: Granger for this transaction.
          default: ''
          type: string
        fee_payer:
          title: Fee Payer
          description: Fee Payer for this transaction.
          default: ''
          type: string
      type: object
      required:
        - amount
        - gas
    StdSignDoc:
      title: StdSignDoc
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedCosmosChain'
        account_number:
          title: Account Number
          description: The account number of the signer of the transaction.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        sequence:
          title: Sequence
          description: The sequence of the signer of the transaction.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        timeout_height:
          title: Timeout Height
          description: The timeout height for the signed transaction.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
        fee:
          $ref: '#/components/schemas/StdFee'
        messages:
          $ref: '#/components/schemas/AminoMessagesList'
        memo:
          title: Memo
          description: The memo of the signed transaction.
          type: string
      type: object
      required:
        - chain
        - account_number
        - sequence
        - fee
        - messages
        - memo
      x-konfig-properties:
        chain:
          description: The chain the transaction is signed on.
        fee:
          description: The fee of the signed transaction.
        messages:
          description: The messages of the signed transaction.
    SuggestedFees:
      title: SuggestedFees
      oneOf:
        - $ref: '#/components/schemas/CosmosSuggestedFees'
        - $ref: '#/components/schemas/EvmSuggestedFees'
        - $ref: '#/components/schemas/SolanaSuggestedFees'
        - $ref: '#/components/schemas/UtxoSuggestedFees'
      discriminator:
        propertyName: type
        mapping:
          cosmos: '#/components/schemas/CosmosSuggestedFees'
          evm: '#/components/schemas/EvmSuggestedFees'
          solana: '#/components/schemas/SolanaSuggestedFees'
          utxo: '#/components/schemas/UtxoSuggestedFees'
    TestWebhookErrorType:
      title: TestWebhookErrorType
      type: string
      enum:
        - http_error
        - server_disconnected
        - timeout
        - client_connection_error
        - unexpected_error
    TestWebhookRequest:
      title: TestWebhookRequest
      properties:
        url:
          title: Url
          description: The URL of the webhook endpoint.
          type: string
          minLength: 1
          format: uri
      type: object
      required:
        - url
    TimestampedSignature:
      title: TimestampedSignature
      properties:
        signature:
          title: Signature
          type: string
          example: SGVsbG8=
        timestamp:
          title: Timestamp
          type: integer
      type: object
      required:
        - signature
        - timestamp
    TokenTransferDetails:
      title: TokenTransferDetails
      properties:
        type:
          title: Type
          description: >-
            A transaction involving the transfer of a token from one address to
            another.
          const: token_transfer
        direction:
          $ref: '#/components/schemas/TransferDirection'
        recipient:
          $ref: '#/components/schemas/EnrichedEvmAddress'
        is_internal:
          title: Is Internal
          description: >-
            Is this transfer an internal transfer between two vaults. None if
            the transaction is incoming.
          type: boolean
      type: object
      required:
        - type
        - direction
        - recipient
      x-konfig-properties:
        direction:
          description: The direction of funds movement, in case of a transfer.
          deprecated: true
    Transaction:
      title: Transaction
      oneOf:
        - $ref: '#/components/schemas/BlackBoxSignature'
        - $ref: '#/components/schemas/CosmosTransaction'
        - $ref: '#/components/schemas/CosmosMessage'
        - $ref: '#/components/schemas/EvmMessage'
        - $ref: '#/components/schemas/EvmTransaction'
        - $ref: '#/components/schemas/SolanaMessage'
        - $ref: '#/components/schemas/SolanaTransaction'
        - $ref: '#/components/schemas/UtxoTransaction'
      discriminator:
        propertyName: type
        mapping:
          black_box_signature: '#/components/schemas/BlackBoxSignature'
          cosmos_message: '#/components/schemas/CosmosMessage'
          cosmos_transaction: '#/components/schemas/CosmosTransaction'
          evm_message: '#/components/schemas/EvmMessage'
          evm_transaction: '#/components/schemas/EvmTransaction'
          solana_message: '#/components/schemas/SolanaMessage'
          solana_transaction: '#/components/schemas/SolanaTransaction'
          utxo_transaction: '#/components/schemas/UtxoTransaction'
    TransactionDetailsCosmosMessageRequest:
      title: TransactionDetailsCosmosMessageRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        type:
          title: Type
          description: The type of the transaction.
          const: cosmos_message
        details:
          $ref: '#/components/schemas/CosmosArbitraryMessageRequest'
      type: object
      required:
        - vault_id
        - type
        - details
    TransactionDetailsCosmosTransactionRequest:
      title: TransactionDetailsCosmosTransactionRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        type:
          title: Type
          description: The type of the transaction.
          const: cosmos_transaction
        details:
          title: Details
          description: Transaction details.
          oneOf:
            - $ref: '#/components/schemas/TypedCosmosRawTransactionRequest'
            - $ref: '#/components/schemas/TypedCosmosTransferRequest'
          discriminator:
            propertyName: type
            mapping:
              cosmos_raw_transaction: '#/components/schemas/TypedCosmosRawTransactionRequest'
              cosmos_transfer: '#/components/schemas/TypedCosmosTransferRequest'
      type: object
      required:
        - vault_id
        - type
        - details
    TransactionDetailsEvmMessageRequest:
      title: TransactionDetailsEvmMessageRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        type:
          title: Type
          description: The type of the transaction.
          const: evm_message
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/TransactionDetailsEvmTypedMessageRequest'
            - $ref: '#/components/schemas/TransactionDetailsEvmPersonalMessageRequest'
          discriminator:
            propertyName: type
            mapping:
              personal_message_type: '#/components/schemas/TransactionDetailsEvmPersonalMessageRequest'
              typed_message_type: '#/components/schemas/TransactionDetailsEvmTypedMessageRequest'
      type: object
      required:
        - vault_id
        - type
        - details
    TransactionDetailsEvmPersonalMessageRequest:
      title: TransactionDetailsEvmPersonalMessageRequest
      properties:
        type:
          title: Type
          description: The type of the EVM message.
          const: personal_message_type
        chain:
          $ref: '#/components/schemas/EvmChainRequest'
        raw_data:
          title: Raw Data
          description: >-
            The raw data of the message to be signed, provided as a string or
            hex-encoded.
          type: string
      type: object
      required:
        - type
        - chain
        - raw_data
      x-konfig-properties:
        chain:
          description: The evm chain this message is intended for.
    TransactionDetailsEvmRawTransactionRequest:
      title: TransactionDetailsEvmRawTransactionRequest
      properties:
        type:
          title: Type
          description: >-
            An EVM raw transaction receives raw data and is for general
            transactions.
          const: evm_raw_transaction
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if the request should fail in case simulation failed, `False`
            otherwise.
          type: boolean
          default: true
        skip_simulation:
          title: Skip Simulation
          description: '`True` to perform the action without simulation, `False` otherwise.'
          type: boolean
          default: false
        chain:
          $ref: '#/components/schemas/EvmChainRequest'
        to:
          title: To
          description: The recipient of the transaction.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
        value:
          title: Value
          description: The value of the transaction.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        data:
          description: The data of the transaction.
          $ref: '#/components/schemas/EvmDataRequest'
      type: object
      required:
        - type
        - chain
        - to
        - value
      x-konfig-properties:
        chain:
          description: >-
            The chain that this transaction is on. Specify either the chain ID
            (for example `1` for `ethereum_mainnet`)or the chain name (for
            example, `ethereum_goerli`).
    TransactionDetailsEvmRevokeAllowanceRequest:
      title: TransactionDetailsEvmRevokeAllowanceRequest
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: evm_revoke_allowance
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if the request should fail in case simulation failed, `False`
            otherwise.
          type: boolean
          default: true
        skip_simulation:
          title: Skip Simulation
          description: '`True` to perform the action without simulation, `False` otherwise.'
          type: boolean
          default: false
        chain:
          $ref: '#/components/schemas/EvmChainRequest'
        token:
          title: Token
          description: The address of the token to revoke allowance for.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
        spender:
          title: Spender
          description: The address of the spender to revoke allowance for.
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
      type: object
      required:
        - type
        - chain
        - token
        - spender
      x-konfig-properties:
        chain:
          description: >-
            The chain that this transaction is on.Specify either the chain ID
            (for example `1` for `ethereum_mainnet`)or the chain name (for
            example, `ethereum_goerli`).
    TransactionDetailsEvmTransactionRequest:
      title: TransactionDetailsEvmTransactionRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        type:
          title: Type
          description: The type of the transaction.
          const: evm_transaction
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/TransactionDetailsEvmRawTransactionRequest'
            - $ref: '#/components/schemas/TransactionDetailsEvmTransferRequest'
            - $ref: '#/components/schemas/TransactionDetailsEvmRevokeAllowanceRequest'
          discriminator:
            propertyName: type
            mapping:
              evm_raw_transaction: '#/components/schemas/TransactionDetailsEvmRawTransactionRequest'
              evm_revoke_allowance: '#/components/schemas/TransactionDetailsEvmRevokeAllowanceRequest'
              evm_transfer: '#/components/schemas/TransactionDetailsEvmTransferRequest'
      type: object
      required:
        - vault_id
        - type
        - details
    TransactionDetailsEvmTransferRequest:
      title: TransactionDetailsEvmTransferRequest
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: evm_transfer
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if the request should fail in case simulation failed, `False`
            otherwise.
          type: boolean
          default: true
        skip_simulation:
          title: Skip Simulation
          description: '`True` to perform the action without simulation, `False` otherwise.'
          type: boolean
          default: false
        chain:
          description: >-
            The chain that this transaction is on. Specify either the chain ID
            (for example `1` for `ethereum_mainnet`)or the chain name (for
            example, `ethereum_goerli`).
          deprecated: true
          $ref: '#/components/schemas/EvmChainRequest'
        to:
          title: To
          description: 'The recipient of the transfer: either an address or a vault ID.'
          anyOf:
            - type: string
              maxLength: 42
              minLength: 42
              pattern: ^0[xX][a-fA-F0-9]+$
              example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
            - type: string
              format: uuid
        token:
          title: Token
          description: >-
            The ERC-20 token contract to transfer, as a hex string of length 42
            characters.
          deprecated: true
          type: string
          maxLength: 42
          minLength: 42
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
        asset_identifier:
          description: The asset to be transfered.
          $ref: '#/components/schemas/EvmAssetIdentifierRequest'
        value:
          title: Value
          description: >-
            The number of units of currency to transfer. If you do not specify a
            value for `token`, the assumption is that you are transferring units
            in the native currency of the chain.
          oneOf:
            - $ref: '#/components/schemas/CreateEvmTransferRequestExplicitValue'
            - $ref: '#/components/schemas/CreateEvmTransferRequestMaxValue'
          discriminator:
            propertyName: type
            mapping:
              max: '#/components/schemas/CreateEvmTransferRequestMaxValue'
              value: '#/components/schemas/CreateEvmTransferRequestExplicitValue'
      type: object
      required:
        - type
        - to
        - value
    TransactionDetailsEvmTypedMessageRequest:
      title: TransactionDetailsEvmTypedMessageRequest
      properties:
        type:
          title: Type
          description: The type of the EVM message.
          const: typed_message_type
        chain:
          $ref: '#/components/schemas/EvmChainRequest'
        raw_data:
          title: Raw Data
          description: >-
            The raw data of the message to be signed, provided as a string or
            hex-encoded.
          type: string
      type: object
      required:
        - type
        - chain
        - raw_data
      x-konfig-properties:
        chain:
          description: The evm chain this message is intended for.
    TransactionDetailsSolanaMessageRequest:
      title: TransactionDetailsSolanaMessageRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        type:
          title: Type
          description: The type of the transaction.
          const: solana_message
        details:
          $ref: '#/components/schemas/SolanaPersonalMessageRequest'
      type: object
      required:
        - vault_id
        - type
        - details
    TransactionDetailsSolanaRawTransactionRequest:
      title: TransactionDetailsSolanaRawTransactionRequest
      properties:
        version:
          $ref: '#/components/schemas/SolanaMessageVersion'
        instructions:
          title: Instructions
          description: The instructions of the transaction.
          items:
            $ref: '#/components/schemas/SolanaCompiledInstructionRequest'
          type: array
        accounts:
          title: Accounts
          description: Accounts used in the transaction.
          items:
            $ref: '#/components/schemas/SolanaTransactionAccountRequest'
          type: array
        address_table_lookups:
          title: Address Table Lookups
          description: Lookup tables of accounts used in the transaction.
          items:
            $ref: '#/components/schemas/SolanaMessageAddressTableLookupRequest'
          type: array
        signatures:
          title: Signatures
          description: Any partial signatures on the transaction.
          items:
            $ref: '#/components/schemas/SolanaTransactionSignaturesRequest'
          type: array
        recent_blockhash:
          title: Recent Blockhash
          description: The transaction nonce (a recently processed blockhash).
          type: string
          maxLength: 44
          minLength: 32
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: 4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZAMdL4VZHirAn
        type:
          title: Type
          description: The type of the transaction.
          const: solana_raw_transaction
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if the request should fail in case simulation failed, `False`
            otherwise.
          type: boolean
          default: true
        skip_simulation:
          title: Skip Simulation
          description: '`True` to perform the action without simulation, `False` otherwise.'
          type: boolean
          default: false
        chain:
          $ref: '#/components/schemas/SolanaChainUniqueId'
      type: object
      required:
        - version
        - instructions
        - accounts
        - address_table_lookups
        - type
        - chain
      x-konfig-properties:
        version:
          description: The version of the transaction message.
    TransactionDetailsSolanaTransactionRequest:
      title: TransactionDetailsSolanaTransactionRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        type:
          title: Type
          description: The type of the transaction.
          const: solana_transaction
        details:
          title: Details
          oneOf:
            - $ref: '#/components/schemas/TransactionDetailsSolanaTransferRequest'
            - $ref: >-
                #/components/schemas/TransactionDetailsSolanaRawTransactionRequest
          discriminator:
            propertyName: type
            mapping:
              solana_raw_transaction: >-
                #/components/schemas/TransactionDetailsSolanaRawTransactionRequest
              solana_transfer: '#/components/schemas/TransactionDetailsSolanaTransferRequest'
      type: object
      required:
        - vault_id
        - type
        - details
    TransactionDetailsSolanaTransferRequest:
      title: TransactionDetailsSolanaTransferRequest
      properties:
        type:
          title: Type
          description: The type of the transaction.
          const: solana_transfer
        fail_on_prediction_failure:
          title: Fail On Prediction Failure
          description: >-
            `True` if the request should fail in case simulation failed, `False`
            otherwise.
          type: boolean
          default: true
        skip_simulation:
          title: Skip Simulation
          description: '`True` to perform the action without simulation, `False` otherwise.'
          type: boolean
          default: false
        to:
          title: To
          description: 'The recipient of the transfer: either an address or a vault ID.'
          anyOf:
            - type: string
              maxLength: 44
              minLength: 32
              pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
              example: 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
            - type: string
              format: uuid
        value:
          title: Value
          description: The number of units of currency to transfer.
          oneOf:
            - $ref: '#/components/schemas/CreateSolanaTransferRequestExplicitAmount'
            - $ref: '#/components/schemas/CreateSolanaTransferRequestMaxAmount'
          discriminator:
            propertyName: type
            mapping:
              max: '#/components/schemas/CreateSolanaTransferRequestMaxAmount'
              value: '#/components/schemas/CreateSolanaTransferRequestExplicitAmount'
        asset_identifier:
          $ref: '#/components/schemas/SolanaAssetIdentifierRequest'
      type: object
      required:
        - type
        - to
        - value
        - asset_identifier
      x-konfig-properties:
        asset_identifier:
          description: The Solana asset identifier to transfer.
    TransactionDetailsUtxoTransactionRequest:
      title: TransactionDetailsUtxoTransactionRequest
      properties:
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault.
          type: string
          format: uuid
        type:
          title: Type
          description: The type of the transaction.
          const: utxo_transaction
        details:
          $ref: '#/components/schemas/TransactionDetailsUtxoTransferRequest'
      type: object
      required:
        - vault_id
        - type
        - details
      x-konfig-properties:
        details:
          description: Transaction details.
    TransactionDetailsUtxoTransferRequest:
      title: TransactionDetailsUtxoTransferRequest
      properties:
        type:
          title: Type
          description: A UTXO transfer transaction.
          const: utxo_transfer
        outputs:
          title: Outputs
          items:
            $ref: '#/components/schemas/UtxoOutputRequest'
          type: array
        fee_per_byte:
          title: Fee Per Byte
          description: >-
            The fee details of the transaction. The details depend on which
            option you choose:<ul><li>Fee Priority or <li>Custom Fee Request
            </ul>
          oneOf:
            - $ref: '#/components/schemas/FeePriorityRequest'
            - $ref: '#/components/schemas/CustomFeeRequest'
          discriminator:
            propertyName: type
            mapping:
              custom: '#/components/schemas/CustomFeeRequest'
              priority: '#/components/schemas/FeePriorityRequest'
      type: object
      required:
        - type
        - outputs
        - fee_per_byte
    TransactionDirection:
      title: TransactionDirection
      type: string
      enum:
        - outgoing
        - incoming
    TransactionPolicyMatchActionType:
      title: TransactionPolicyMatchActionType
      type: string
      enum:
        - allow
        - block
        - require_approval
    TransactionRisk:
      title: TransactionRisk
      properties:
        title:
          title: Title
          description: The title of the risk.
          type: string
        description:
          title: Description
          description: A detailed description of the risk.
          type: string
        type:
          $ref: '#/components/schemas/TransactionRiskType'
        severity:
          $ref: '#/components/schemas/TransactionRiskSeverity'
      type: object
      required:
        - type
        - severity
        - title
        - description
      x-konfig-properties:
        type:
          description: >-

            Fordefi has detected that one or more of the following risks are
            associated with the requested transaction:<ul><li>The user is
            transferring tokens to an ERC-20 contract
            (`transfer_to_erc20_contract`).<li>The allowance transaction is
            requesting to approve a non-contract address
            (`allowance_to_eoa`).<li>Allowance has been granted for an unlimited
            amount (`unlimited_allowance`).<li>This bridge transaction sends
            funds to an address that is not the sender's
            (`bridge_dest_differ_from_sender`).<li>This is the first time the
            organization is interacting with this address
            (`organization_not_interacted_with_address`).<li>This is the first
            time this vault is interacting with this address
            (`vault_not_interacted_with_address`).<li>Trying to interact with a
            contract that is not verified (`contract_not_verified`).<li>Approve
            for all NFT in a collection (`nft_approve_for_all`).<li>The
            simulation for this transaction failed
            (`missing_simulation`).<li>The simulation for this transaction is
            unsupported for this chain (`unsupported_simulation`).</ul>
        severity:
          description: The severity of the risk.
    TransactionRiskSeverity:
      title: TransactionRiskSeverity
      type: string
      enum:
        - low
        - medium
        - high
    TransactionRiskType:
      title: TransactionRiskType
      type: string
      enum:
        - transfer_to_erc20_contract
        - organization_not_interacted_with_address
        - vault_not_interacted_with_address
        - allowance_to_eoa
        - unlimited_allowance
        - contract_not_verified
        - bridge_dest_differ_from_sender
        - nft_approve_for_all
        - missing_simulation
        - unsupported_simulation
    TransactionSortableFields:
      title: TransactionSortableFields
      type: string
      enum:
        - created_at_asc
        - created_at_desc
        - modified_at_asc
        - modified_at_desc
        - type_asc
        - type_desc
        - chains_asc
        - chains_desc
        - initiators_asc
        - initiators_desc
        - state_asc
        - state_desc
    TransactionSpamState:
      title: TransactionSpamState
      type: string
      enum:
        - unset
        - manually_set
        - automatically_set
    TransactionState:
      title: TransactionState
      type: string
      enum:
        - pending
        - finalized
        - approved
        - stuck
        - completed
        - completed_reverted
    TransactionSubType:
      title: TransactionSubType
      type: string
      enum:
        - transfer
        - allowance
        - cross_chain_bridge
        - transaction
        - contract_call
        - message_signature
        - allowance_signature
    TransactionType:
      title: TransactionType
      type: string
      enum:
        - black_box_signature
        - cosmos_message
        - cosmos_transaction
        - evm_message
        - evm_transaction
        - solana_message
        - solana_transaction
        - utxo_transaction
    TransferDirection:
      title: TransferDirection
      type: string
      enum:
        - outgoing
        - incoming
        - internal
    TypedCosmosRawTransactionRequest:
      title: TypedCosmosRawTransactionRequest
      properties:
        type:
          title: Type
          description: A cosmos raw transaction is for any operation.
          const: cosmos_raw_transaction
        chain:
          $ref: '#/components/schemas/CosmosChainUniqueId'
        request_data:
          title: Request Data
          description: Request data.
          oneOf:
            - $ref: '#/components/schemas/AminoRequestData'
            - $ref: '#/components/schemas/DirectRequestData'
          discriminator:
            propertyName: format
            mapping:
              amino: '#/components/schemas/AminoRequestData'
              direct: '#/components/schemas/DirectRequestData'
      type: object
      required:
        - type
        - chain
        - request_data
      x-konfig-properties:
        chain:
          description: Chain id on which the transaction will be processed.
    TypedCosmosTransferRequest:
      title: TypedCosmosTransferRequest
      properties:
        type:
          title: Type
          description: A cosmos raw transaction is for any operation.
          const: cosmos_transfer
        to:
          title: To
          description: >-
            The recipient of the transfer. Specify either a general address  or
            the ID of another vault (a UUID string).
          oneOf:
            - $ref: '#/components/schemas/CosmosTransferToAddressRequest'
            - $ref: '#/components/schemas/CosmosTransferToVaultIdRequest'
          discriminator:
            propertyName: type
            mapping:
              address: '#/components/schemas/CosmosTransferToAddressRequest'
              vault_id: '#/components/schemas/CosmosTransferToVaultIdRequest'
        asset_identifier:
          $ref: '#/components/schemas/CosmosAssetIdentifierRequest'
        value:
          title: Value
          description: 'Specify one of the following: <ul><li>`value`<li>`max`</ul>'
          oneOf:
            - $ref: '#/components/schemas/CreateCosmosTransferRequestExplicitValue'
            - $ref: '#/components/schemas/CreateCosmosTransferRequestMaxValue'
          discriminator:
            propertyName: type
            mapping:
              max: '#/components/schemas/CreateCosmosTransferRequestMaxValue'
              value: '#/components/schemas/CreateCosmosTransferRequestExplicitValue'
        memo:
          title: Memo
          description: Transaction memo.
          type: string
      type: object
      required:
        - type
        - to
        - asset_identifier
        - value
      x-konfig-properties:
        asset_identifier:
          description: The asset to be transferred.
    UnknownTypedMessageEvmMessage:
      title: UnknownTypedMessageEvmMessage
      properties:
        domain:
          $ref: '#/components/schemas/EvmMessageDomainData'
        type:
          title: Type
          description: The typed message type.
          const: unknown
      type: object
      required:
        - domain
        - type
      x-konfig-properties:
        domain:
          description: The domain data.
    UpdateAssetConfiguration:
      title: UpdateAssetConfiguration
      properties:
        asset:
          $ref: '#/components/schemas/AssetIdentifierRequest'
        hidden:
          title: Hidden
          description: '`True` to hide the token when listing assets, `False` otherwise.'
          type: boolean
      type: object
      required:
        - asset
        - hidden
      x-konfig-properties:
        asset:
          description: The address of the ERC-20 asset to update.
    UpdateTransactionSpamStateRequest:
      title: UpdateTransactionSpamStateRequest
      properties:
        is_spam:
          title: Is Spam
          type: boolean
      type: object
      required:
        - is_spam
    User:
      title: User
      description: Represents a user in the Fordefi platform
      oneOf:
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/ApiUser'
        - $ref: '#/components/schemas/ApiSigner'
      discriminator:
        propertyName: user_type
        mapping:
          api_signer: '#/components/schemas/ApiSigner'
          api_user: '#/components/schemas/ApiUser'
          person: '#/components/schemas/Person'
    UserGroup:
      title: UserGroup
      description: Represents a user group in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the user group.
          type: string
          minLength: 1
        users_count:
          title: Users Count
          description: The number of users in the group.
          type: integer
          minimum: 0
        state:
          $ref: '#/components/schemas/UserGroupState'
        modified_by:
          $ref: '#/components/schemas/UserRef'
        proposed_change:
          description: The change proposal for the group.
          $ref: '#/components/schemas/UserGroupChangeRequest'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - users_count
        - state
        - modified_by
      x-konfig-properties:
        state:
          description: The state of the user group.
        modified_by:
          description: Group last modifier.
    UserGroupChangeRequest:
      title: UserGroupChangeRequest
      description: Represents a user group change proposal in the Fordefi platform
      properties:
        id:
          title: Id
          description: The ID of the change proposal.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The time the change proposal was created.
          type: string
          format: date-time
        created_by:
          $ref: '#/components/schemas/UserRef'
        new_name:
          title: New Name
          description: The new name of the group if it is changed.
          type: string
        added_users:
          title: Added Users
          description: The users added to the group.
          items:
            $ref: '#/components/schemas/GroupUserRef'
          type: array
        removed_users:
          title: Removed Users
          description: The users removed from the group.
          items:
            $ref: '#/components/schemas/GroupUserRef'
          type: array
      type: object
      required:
        - id
        - created_at
        - created_by
      x-konfig-properties:
        created_by:
          description: The user who created the change proposal.
    UserGroupRef:
      title: UserGroupRef
      properties:
        id:
          title: Id
          description: The unique identifier of user group in the Fordefi platform.
          type: string
          format: uuid
        name:
          title: Name
          description: The name of the user group.
          type: string
          minLength: 1
        users_count:
          title: Users Count
          description: The number of users in the group.
          type: integer
          minimum: 0
        state:
          $ref: '#/components/schemas/UserGroupState'
      type: object
      required:
        - id
        - name
        - users_count
        - state
      x-konfig-properties:
        state:
          description: The state of the user group.
    UserGroupSortableFields:
      title: UserGroupSortableFields
      type: string
      enum:
        - created_at_asc
        - created_at_desc
        - modified_at_asc
        - modified_at_desc
        - name_asc
        - name_desc
        - users_count_asc
        - users_count_desc
    UserGroupState:
      title: UserGroupState
      description: Represents a user group state in the Fordefi platform
      type: string
      enum:
        - active
        - deleted
    UserKeyset:
      title: UserKeyset
      description: Represents a user keyset in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: Keyset name.
          type: string
          minLength: 1
        desired_key_types:
          title: Desired Key Types
          description: >-
            Desired key types. For an organization type keyset, this field is
            populated with all supported key types during creation. for a user
            type keyset, this field is populated by the user during keyset
            generation.
          items:
            $ref: '#/components/schemas/KeyType'
          type: array
        ecdsa:
          description: >-
            ECDSA key. The key is used to generate ECDSA-based vaults (for
            example, EVM vaults).
          $ref: '#/components/schemas/KeysetKey'
        eddsa:
          description: >-
            EdDSA key. The key is used to generate EdDSA-based vaults (for
            example, Solana vaults).
          $ref: '#/components/schemas/KeysetKey'
        ecdsa_stark:
          description: >-
            ECDSA-Stark key. The key is used to generate ECDSA-Stark-based
            vaults (for example, Stark Blackbox vaults).
          $ref: '#/components/schemas/KeysetKey'
        encrypted_device_shares_backups:
          title: Encrypted Device Shares Backups
          description: Encrypted device shares backups.
          items:
            $ref: '#/components/schemas/EncryptedDeviceSharesBackup'
          type: array
        scope:
          title: Scope
          description: User keyset scope.
          const: user
        user:
          $ref: '#/components/schemas/EndUserRef'
        last_backup_at:
          title: Last Backup At
          description: The last time this keyset was backed up.
          type: string
          format: date-time
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - scope
        - user
        - last_backup_at
      x-konfig-properties:
        user:
          description: User that owns the keyset.
    UserRef:
      title: UserRef
      description: Represents a reference to a user in the Fordefi platform
      oneOf:
        - $ref: '#/components/schemas/PersonRef'
        - $ref: '#/components/schemas/ApiUserRef'
        - $ref: '#/components/schemas/ApiSignerRef'
        - $ref: '#/components/schemas/EndUserRef'
      discriminator:
        propertyName: user_type
        mapping:
          api_signer: '#/components/schemas/ApiSignerRef'
          api_user: '#/components/schemas/ApiUserRef'
          end_user: '#/components/schemas/EndUserRef'
          person: '#/components/schemas/PersonRef'
    UserRole:
      title: UserRole
      type: string
      enum:
        - admin
        - trader
        - viewer
    UserSortableFields:
      title: UserSortableFields
      type: string
      enum:
        - role_asc
        - role_desc
        - email_asc
        - email_desc
        - created_asc
        - created_desc
        - name_asc
        - name_desc
        - last_keep_alive_asc
        - last_keep_alive_desc
        - state_asc
        - state_desc
        - type_asc
        - type_desc
    UserState:
      title: UserState
      type: string
      enum:
        - active
        - onboarding
        - pending_approval
        - deleted
    UserStateOnGroup:
      title: UserStateOnGroup
      type: string
      enum:
        - active
        - pending_addition
        - pending_removal
    UserType:
      title: UserType
      type: string
      enum:
        - person
        - api_signer
        - api_user
    UtxoAddress:
      title: UtxoAddress
      properties:
        address:
          title: Address
          description: The UTXO string address.
          type: string
          maxLength: 74
          minLength: 14
          example: bc1qar0srrr7xfkvy5l643lydnw9re59gtzzwf5mdq
        address_type:
          $ref: '#/components/schemas/UtxoAddressType'
        chain:
          $ref: '#/components/schemas/UtxoChain'
      type: object
      required:
        - address
        - address_type
        - chain
      x-konfig-properties:
        address_type:
          description: The type of the address.
        chain:
          description: The UTXO chain unique ID.
    UtxoAddressBookContact:
      title: UtxoAddressBookContact
      description: Represents a contact in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the contact.
          type: string
        modified_by:
          $ref: '#/components/schemas/UserRef'
        state:
          $ref: '#/components/schemas/AddressBookContactState'
        groups:
          title: Groups
          description: List of contact's groups.
          items:
            $ref: '#/components/schemas/GroupRef'
          type: array
        pending_changes:
          description: Pending changes for the contact.
          $ref: '#/components/schemas/AddressBookContactChanges'
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: utxo
        address:
          title: Address
          description: The address on the utxo chain.
          type: string
          maxLength: 74
          minLength: 14
          example: bc1qar0srrr7xfkvy5l643lydnw9re59gtzzwf5mdq
        chain:
          $ref: '#/components/schemas/EnrichedUtxoChain'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - modified_by
        - state
        - groups
        - chain_type
        - address
        - chain
      x-konfig-properties:
        modified_by:
          description: Address last modifier.
        state:
          description: The state of the contact.
        chain:
          description: The chain the contact belongs to.
    UtxoAddressBookContactAddressRef:
      title: UtxoAddressBookContactAddressRef
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: utxo
        address:
          title: Address
          description: The address on the utxo chain.
          type: string
          maxLength: 74
          minLength: 14
          example: bc1qar0srrr7xfkvy5l643lydnw9re59gtzzwf5mdq
        chain:
          $ref: '#/components/schemas/UtxoChain'
      type: object
      required:
        - chain_type
        - address
        - chain
      x-konfig-properties:
        chain:
          description: The chain the contact belongs to.
    UtxoAddressType:
      title: UtxoAddressType
      type: string
      enum:
        - legacy
        - p2sh
        - segwit
        - taproot
    UtxoAsset:
      title: UtxoAsset
      properties:
        id:
          title: Id
          description: The asset ID.
          type: string
          format: uuid
        decimals:
          title: Decimals
          type: integer
          minimum: 0
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
        name:
          title: Name
          description: The name of the asset.
          type: string
        symbol:
          title: Symbol
          description: The symbol (ticker) of the asset.
          type: string
        hidden:
          title: Hidden
          description: '`True` if this asset was set to be hidden, `False` otherwise.'
          type: boolean
        verified:
          title: Verified
          description: '`True` if this asset is verified by Fordefi, `False` otherwise.'
          type: boolean
        asset_identifier:
          $ref: '#/components/schemas/EnrichedAssetIdentifier'
        metadata_uri:
          title: Metadata Uri
          description: The URI of the asset metadata.
          type: string
        type:
          title: Type
          description: Utxo asset type.
          const: utxo_asset
          deprecated: true
        details:
          $ref: '#/components/schemas/UtxoNativeAsset'
      type: object
      required:
        - id
        - decimals
        - name
        - symbol
        - hidden
        - verified
        - asset_identifier
        - type
        - details
      x-konfig-properties:
        asset_identifier:
          description: The asset identifier.
        details:
          deprecated: true
    UtxoAssetIdentifierRequest:
      title: UtxoAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: Utxo asset identifier type.
          const: utxo
        details:
          $ref: '#/components/schemas/UtxoNativeAssetIdentifierRequest'
      type: object
      required:
        - type
        - details
    UtxoBalanceChangeEffect:
      title: UtxoBalanceChangeEffect
      properties:
        type:
          title: Type
          description: The type of the balance change.
          const: native
        vault:
          $ref: '#/components/schemas/VaultRef'
        diff:
          title: Diff
          description: >-
            The amount of native currency that was added or deducted from the
            owner's balance. If the amount was deducted, the value is negative;
            if the amount was added, the value is positive.
          type: string
          pattern: ^-?\d+$
          example: '1000000000000000000'
      type: object
      required:
        - type
        - vault
        - diff
      x-konfig-properties:
        vault:
          description: The vault affected by the balance change.
    UtxoBlockData:
      title: UtxoBlockData
      properties:
        number:
          title: Number
          description: The block number.
          type: integer
        hash:
          title: Hash
          description: The block hash.
          type: string
        mined_at:
          title: Mined At
          description: The date and time when this block was mined.
          type: string
          format: date-time
      type: object
      required:
        - number
        - hash
        - mined_at
    UtxoChain:
      title: UtxoChain
      properties:
        chain_type:
          title: Chain Type
          description: The type of the chain.
          const: utxo
        unique_id:
          $ref: '#/components/schemas/UtxoChainUniqueId'
      type: object
      required:
        - chain_type
        - unique_id
      x-konfig-properties:
        unique_id:
          description: The UTXO chain unique ID.
    UtxoChainUniqueId:
      title: UtxoChainUniqueId
      type: string
      enum:
        - bitcoin_mainnet
        - bitcoin_testnet
    UtxoEffects:
      title: UtxoEffects
      properties:
        inputs:
          title: Inputs
          description: The inputs of the transaction.
          items:
            $ref: '#/components/schemas/UtxoInput'
          type: array
        outputs:
          title: Outputs
          description: The outputs of the transaction.
          items:
            $ref: '#/components/schemas/UtxoOutput'
          type: array
        balance_changes:
          title: Balance Changes
          description: The aggregated balance changes of vaults.
          items:
            $ref: '#/components/schemas/UtxoBalanceChangeEffect'
          type: array
        total_value:
          title: Total Value
          description: The total value of the transaction.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        price:
          description: The price of the asset.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - inputs
        - outputs
        - balance_changes
        - total_value
    UtxoFees:
      title: UtxoFees
      properties:
        priority:
          $ref: '#/components/schemas/FeePriorityLevel'
        fee_per_byte:
          title: Fee Per Byte
          description: The fee per byte.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        total_fee:
          title: Total Fee
          description: The total fee paid.
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
        fiat_price:
          description: The price of the asset used to pay the fee.
          $ref: '#/components/schemas/Price'
      type: object
      required:
        - priority
        - fee_per_byte
        - total_fee
      x-konfig-properties:
        priority:
          description: The priority level.
    UtxoInput:
      title: UtxoInput
      properties:
        address:
          $ref: '#/components/schemas/EnrichedUtxoAddress'
        value:
          title: Value
          description: The value of the input.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
      type: object
      required:
        - address
        - value
      x-konfig-properties:
        address:
          description: The address of the input.
    UtxoNativeAsset:
      title: UtxoNativeAsset
      properties:
        chain:
          $ref: '#/components/schemas/EnrichedUtxoChain'
        type:
          title: Type
          description: Utxo asset type.
          const: utxo_native_asset
      type: object
      required:
        - chain
        - type
      x-konfig-properties:
        chain:
          description: The details of the chain of the native asset.
    UtxoNativeAssetIdentifierRequest:
      title: UtxoNativeAssetIdentifierRequest
      properties:
        type:
          title: Type
          description: Utxo asset identifier type.
          const: native
        chain:
          $ref: '#/components/schemas/UtxoChainUniqueId'
      type: object
      required:
        - type
        - chain
      x-konfig-properties:
        chain:
          description: The unique id of the chain of the asset.
    UtxoNativeTransferDetails:
      title: UtxoNativeTransferDetails
      properties:
        type:
          title: Type
          description: >-
            A transaction involving the transfer of native currency from one or
            moreaddresses to one or more addresses.
          const: native_transfer
        direction:
          $ref: '#/components/schemas/TransferDirection'
        is_internal:
          title: Is Internal
          description: >-
            Is this transfer an internal transfer between two vaults. None if
            the transaction is incoming.
          type: boolean
      type: object
      required:
        - type
        - direction
      x-konfig-properties:
        direction:
          description: The direction of the movement of funds, in case of a transfer.
          deprecated: true
    UtxoOutput:
      title: UtxoOutput
      properties:
        address:
          $ref: '#/components/schemas/EnrichedUtxoAddress'
        value:
          title: Value
          description: The value of the output.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        is_change_address:
          title: Is Change Address
          description: Whether the output is a change address.
          type: boolean
      type: object
      required:
        - address
        - value
      x-konfig-properties:
        address:
          description: The address of the output.
    UtxoOutputRequest:
      title: UtxoOutputRequest
      properties:
        to:
          title: To
          oneOf:
            - $ref: '#/components/schemas/UtxoOutputToAddressRequest'
            - $ref: '#/components/schemas/UtxoOutputToVaultAddressIdRequest'
            - $ref: '#/components/schemas/UtxoOutputToVaultIdRequest'
          discriminator:
            propertyName: type
            mapping:
              address: '#/components/schemas/UtxoOutputToAddressRequest'
              vault_address_id: '#/components/schemas/UtxoOutputToVaultAddressIdRequest'
              vault_id: '#/components/schemas/UtxoOutputToVaultIdRequest'
        value:
          title: Value
          type: string
          pattern: ^0*[1-9]\d*$
          example: '1000000000000000000'
      type: object
      required:
        - to
        - value
    UtxoOutputToAddressRequest:
      title: UtxoOutputToAddressRequest
      properties:
        type:
          title: Type
          const: address
        address:
          title: Address
          type: string
          maxLength: 74
          minLength: 14
          example: bc1qar0srrr7xfkvy5l643lydnw9re59gtzzwf5mdq
      type: object
      required:
        - type
        - address
    UtxoOutputToVaultAddressIdRequest:
      title: UtxoOutputToVaultAddressIdRequest
      properties:
        type:
          title: Type
          const: vault_address_id
        vault_address_id:
          title: Vault Address Id
          type: string
          format: uuid
      type: object
      required:
        - type
        - vault_address_id
    UtxoOutputToVaultIdRequest:
      title: UtxoOutputToVaultIdRequest
      properties:
        type:
          title: Type
          const: vault_id
        vault_id:
          title: Vault Id
          type: string
          format: uuid
      type: object
      required:
        - type
        - vault_id
    UtxoSuggestedFees:
      title: UtxoSuggestedFees
      properties:
        type:
          title: Type
          description: The type of the chain.
          const: utxo
        low:
          title: Low
          description: The low suggested fee per byte.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        medium:
          title: Medium
          description: The medium suggested fee per byte.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        high:
          title: High
          description: The high suggested fee per byte.
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        chain_unique_id:
          $ref: '#/components/schemas/UtxoChainUniqueId'
      type: object
      required:
        - type
        - low
        - medium
        - high
        - chain_unique_id
      x-konfig-properties:
        chain_unique_id:
          description: The UTXO chain unique id.
    UtxoTransaction:
      title: UtxoTransaction
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        managed_transaction_data:
          description: >-
            Managed transaction data. Presented if the transaction was initiated
            from the Fordefi system itself, in contrast to unmanaged
            transactions (which are, for example, transfers of funds into a
            vault visible to Fordefi). 
          $ref: '#/components/schemas/ManagedTransactionData'
        signatures:
          title: Signatures
          description: The transaction signatures.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        type:
          title: Type
          description: The type of the transaction.
          const: utxo_transaction
        utxo_transaction_type_details:
          $ref: '#/components/schemas/UtxoNativeTransferDetails'
        chain:
          $ref: '#/components/schemas/EnrichedUtxoChain'
        hash:
          title: Hash
          description: The hash of the transaction.
          type: string
        explorer_url:
          title: Explorer Url
          description: The URL of this transaction in a blockchain explorer.
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
        state:
          $ref: '#/components/schemas/UtxoTransactionState'
        state_changes:
          title: State Changes
          description: The state changes of the transaction.
          items:
            $ref: '#/components/schemas/UtxoTransactionStateChange'
          type: array
        block:
          description: Details of the block the transaction was mined in.
          $ref: '#/components/schemas/UtxoBlockData'
        expected_result:
          description: The expected result of the transaction in case it is mined.
          $ref: '#/components/schemas/UtxoTransactionResult'
        mined_result:
          description: The result of the transaction after it was mined.
          $ref: '#/components/schemas/UtxoTransactionResult'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - signatures
        - direction
        - type
        - utxo_transaction_type_details
        - chain
        - state
        - state_changes
      x-konfig-properties:
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
          default: unset
        direction:
          description: The direction of the transaction.
        utxo_transaction_type_details:
          description: Details of UTXO transaction, based on its type.
        chain:
          description: Details of the chain this transaction is on.
        state:
          description: The state of the transaction.
    UtxoTransactionResult:
      title: UtxoTransactionResult
      properties:
        fees:
          $ref: '#/components/schemas/UtxoFees'
        effects:
          $ref: '#/components/schemas/UtxoEffects'
      type: object
      required:
        - fees
        - effects
      x-konfig-properties:
        fees:
          description: The fees of the transaction.
        effects:
          description: The effects of the transaction.
    UtxoTransactionState:
      title: UtxoTransactionState
      type: string
      enum:
        - waiting_for_approval
        - approved
        - signed
        - pushed_to_blockchain
        - mined
        - completed
        - aborted
        - error_signing
        - error_pushing_to_blockchain
        - stuck
        - insufficient_funds
    UtxoTransactionStateChange:
      title: UtxoTransactionStateChange
      properties:
        changed_at:
          title: Changed At
          description: The date and time when the state was changed.
          type: string
          format: date-time
        previous_state:
          description: The previous state of the transaction.
          $ref: '#/components/schemas/UtxoTransactionState'
        new_state:
          $ref: '#/components/schemas/UtxoTransactionState'
        asset_prices:
          title: Asset Prices
          description: The prices at the time the state was changed.
          items:
            $ref: '#/components/schemas/PricedAsset'
          type: array
      type: object
      required:
        - changed_at
        - new_state
        - asset_prices
      x-konfig-properties:
        new_state:
          description: The new state of the transaction.
    UtxoTransactionType:
      title: UtxoTransactionType
      type: string
      const: native_transfer
    UtxoVault:
      title: UtxoVault
      description: Represents a Utxo vault in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the vault.
          type: string
        created_by:
          $ref: '#/components/schemas/UserRef'
        derivation_path:
          title: Derivation Path
          description: The BIP 44 derivation path of the vault.
          type: string
          deprecated: true
          example: m/44/60/0/0/0
        public_key_compressed:
          title: Public Key Compressed
          description: >-
            The compressed public key of the vault. As defined in the SEC1
            standard: https://www.secg.org/SEC1-Ver-1.0.pdf.
          type: string
          example: SGVsbG8=
        derivation_info:
          $ref: '#/components/schemas/VaultDerivationInfo'
        keyset:
          $ref: '#/components/schemas/KeysetRef'
        key_holder:
          description: >-
            The user who owns the keyset of the vault. If not provided, the
            vault is owned by the organization.
          $ref: '#/components/schemas/EndUserRef'
        vault_group:
          $ref: '#/components/schemas/VaultGroupRef'
        pending_vault_group_action:
          title: Pending Vault Group Action
          description: Details of pending vault movement to another vault group.
          oneOf:
            - $ref: '#/components/schemas/PendingVaultGroupActionAdd'
            - $ref: '#/components/schemas/PendingVaultGroupActionRemove'
          discriminator:
            propertyName: type
            mapping:
              add: '#/components/schemas/PendingVaultGroupActionAdd'
              remove: '#/components/schemas/PendingVaultGroupActionRemove'
        state:
          $ref: '#/components/schemas/VaultState'
        type:
          title: Type
          description: UTXO vault type.
          const: utxo
        chain:
          $ref: '#/components/schemas/EnrichedUtxoChain'
        default_address:
          $ref: '#/components/schemas/UtxoVaultAddress'
        default_next_address_name:
          title: Default Next Address Name
          description: The default name of the next address to be created.
          type: string
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - created_by
        - derivation_path
        - public_key_compressed
        - derivation_info
        - keyset
        - vault_group
        - state
        - type
        - chain
        - default_address
        - default_next_address_name
      x-konfig-properties:
        created_by:
          description: Details of the vault creator.
        derivation_info:
          description: The derivation info of the vault.
        keyset:
          description: The keyset of the vault.
        vault_group:
          description: The vault group this vault belongs to.
        state:
          description: State of the vault.
        chain:
          description: The UTXO chain.
        default_address:
          description: The default address of the vault on the chain.
    UtxoVaultAddress:
      title: UtxoVaultAddress
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        vault:
          $ref: '#/components/schemas/VaultRef'
        name:
          title: Name
          description: The name of the address.
          type: string
        balance:
          title: Balance
          description: The balance of the address.
          deprecated: true
          type: string
          pattern: ^\d+$
          example: '1000000000000000000'
        balances:
          $ref: '#/components/schemas/Balances'
        public_key_compressed:
          title: Public Key Compressed
          description: >-
            The compressed public key of the address. As defined in the SEC1
            standard: https://www.secg.org/SEC1-Ver-1.0.pdf.
          type: string
          example: SGVsbG8=
        type:
          title: Type
          description: The type of the vault address.
          const: utxo
        address:
          $ref: '#/components/schemas/UtxoAddress'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - vault
        - name
        - balances
        - public_key_compressed
        - type
        - address
      x-konfig-properties:
        vault:
          description: The vault this address belongs to.
        balances:
          description: The balances of the address.
        address:
          description: The address on the chain.
    ValidationError:
      title: ValidationError
      properties:
        title:
          title: Title
          description: Human-readable error message.
          type: string
        detail:
          title: Detail
          items:
            $ref: '#/components/schemas/ValidationErrorDetail'
          type: array
        request_id:
          title: Request Id
          description: Request ID - for debugging purposes.
          type: string
      type: object
      required:
        - title
        - detail
    ValidationErrorDetail:
      title: ValidationErrorDetail
      properties:
        loc:
          title: Location
          items:
            anyOf:
              - type: integer
              - type: string
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      type: object
      required:
        - loc
        - msg
        - type
    Vault:
      title: Vault
      description: Represents a vault in the Fordefi platform
      oneOf:
        - $ref: '#/components/schemas/BlackBoxVault'
        - $ref: '#/components/schemas/CosmosVault'
        - $ref: '#/components/schemas/EvmVault'
        - $ref: '#/components/schemas/SolanaVault'
        - $ref: '#/components/schemas/UtxoVault'
      discriminator:
        propertyName: type
        mapping:
          black_box: '#/components/schemas/BlackBoxVault'
          cosmos: '#/components/schemas/CosmosVault'
          evm: '#/components/schemas/EvmVault'
          solana: '#/components/schemas/SolanaVault'
          utxo: '#/components/schemas/UtxoVault'
    VaultAddressRef:
      title: VaultAddressRef
      description: Represents a reference to a vault address in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the vault address in the Fordefi platform.
          type: string
          format: uuid
        vault_id:
          title: Vault Id
          description: The unique identifier of the vault this address belongs to.
          type: string
          format: uuid
        name:
          title: Name
          description: The name of the vault address.
          type: string
        address:
          title: Address
          description: The address of the vault address.
          type: string
      type: object
      required:
        - id
        - vault_id
        - name
        - address
    VaultAddressSortableFields:
      title: VaultAddressSortableFields
      type: string
      enum:
        - created_at_asc
        - created_at_desc
        - name_asc
        - name_desc
    VaultDerivationInfo:
      title: VaultDerivationInfo
      properties:
        derivation_path:
          title: Derivation Path
          description: The BIP 44 derivation path of the vault.
          type: string
          pattern: ^m/44/[0-9]+/[0-9]+/[0-9]+/[0-9]+$
          example: m/44/60/0/0/0
        master_public_key:
          $ref: '#/components/schemas/MasterPublicKey'
      type: object
      required:
        - derivation_path
        - master_public_key
      x-konfig-properties:
        master_public_key:
          description: The public key of the vault.
    VaultGroup:
      title: VaultGroup
      description: Represents a vault group in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The date and time when the object was created.
          type: string
          format: date-time
        modified_at:
          title: Modified At
          description: >-
            The date and time when the object was last modified. Any change to
            any field of the resource is considered a modification.
          type: string
          format: date-time
        name:
          title: Name
          description: The name of the vault group.
          type: string
          minLength: 2
        created_by:
          description: Details of the vault group creator. None for Default vault group.
          $ref: '#/components/schemas/UserRef'
        vault_count:
          title: Vault Count
          description: The number of vaults in the group.
          type: integer
        permissions:
          $ref: '#/components/schemas/VaultGroupPermissions'
        owner:
          $ref: '#/components/schemas/VaultGroupOwner'
        modified_by:
          description: >-
            Details of the vault group last editor. None for Default vault
            group.
          $ref: '#/components/schemas/UserRef'
        pending_change_request:
          description: >-
            Info on pending change request. None if there is no pending change
            request.
          $ref: '#/components/schemas/VaultGroupPendingChangeRequestInfo'
        state:
          $ref: '#/components/schemas/VaultGroupState'
      type: object
      required:
        - id
        - created_at
        - modified_at
        - name
        - vault_count
        - permissions
        - owner
        - state
      x-konfig-properties:
        permissions:
          description: The permissions of the vault group
        owner:
          description: The owner type of the vault group.
        state:
          description: The state of the vault group.
    VaultGroupAccessPermissions:
      title: VaultGroupAccessPermissions
      description: The access type of the permissions.
      oneOf:
        - $ref: '#/components/schemas/VaultGroupAccessPermissionsAll'
        - $ref: '#/components/schemas/VaultGroupAccessPermissionsPermitted'
      discriminator:
        propertyName: access_type
        mapping:
          all: '#/components/schemas/VaultGroupAccessPermissionsAll'
          permitted: '#/components/schemas/VaultGroupAccessPermissionsPermitted'
    VaultGroupAccessPermissionsAll:
      title: VaultGroupAccessPermissionsAll
      properties:
        access_type:
          title: Access Type
          description: access type
          const: all
      type: object
      required:
        - access_type
    VaultGroupAccessPermissionsPermitted:
      title: VaultGroupAccessPermissionsPermitted
      properties:
        access_type:
          title: Access Type
          description: access type
          const: permitted
        user_groups:
          title: User Groups
          description: The list of permitted user group
          items:
            $ref: '#/components/schemas/UserGroupRef'
          type: array
        users:
          title: Users
          description: The list of permitted users
          items:
            $ref: '#/components/schemas/UserRef'
          type: array
      type: object
      required:
        - access_type
        - user_groups
        - users
    VaultGroupOwner:
      title: VaultGroupOwner
      type: string
      enum:
        - system
        - user
    VaultGroupPendingChangeRequestInfo:
      title: VaultGroupPendingChangeRequestInfo
      properties:
        id:
          title: Id
          description: ID of a pending change request.
          type: string
          format: uuid
        new_name:
          title: New Name
          description: >-
            New proposed name of the pending change request. None if there is no
            pending change request or no new name is proposed.
          type: string
        created_by:
          $ref: '#/components/schemas/UserRef'
        created_at:
          title: Created At
          description: The date and time when change request was initiated.
          type: string
          format: date-time
      type: object
      required:
        - id
        - new_name
        - created_by
        - created_at
      x-konfig-properties:
        created_by:
          description: The user who initiated the change request
    VaultGroupPermissions:
      title: VaultGroupPermissions
      properties:
        access_permissions:
          $ref: '#/components/schemas/VaultGroupAccessPermissions'
        can_non_admins_create_or_edit_vaults:
          title: Can Non Admins Create Or Edit Vaults
          description: >-
            True to give create or edit permissions to the user groups. False to
            allow only admins
          type: boolean
        can_current_user_create_or_edit_vaults:
          title: Can Current User Create Or Edit Vaults
          description: >-
            Can the current user create or edit vaults in the group's based on
            the group permissions
          type: boolean
      type: object
      required:
        - access_permissions
        - can_non_admins_create_or_edit_vaults
        - can_current_user_create_or_edit_vaults
      x-konfig-properties:
        access_permissions:
          description: the access permissions for this vault group
    VaultGroupRef:
      title: VaultGroupRef
      description: Represents a reference to a vault group in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the vault group in the Fordefi platform.
          type: string
          format: uuid
        name:
          title: Name
          description: The name of the vault group.
          type: string
        vault_count:
          title: Vault Count
          description: The number of vaults in the group.
          type: integer
        can_current_user_create_or_edit_vaults:
          title: Can Current User Create Or Edit Vaults
          description: >-
            Can the current user create or edit vaults in the group's based on
            the group permissions
          type: boolean
      type: object
      required:
        - id
        - name
        - vault_count
        - can_current_user_create_or_edit_vaults
    VaultGroupSortableFields:
      title: VaultGroupSortableFields
      type: string
      enum:
        - created_at_asc
        - created_at_desc
        - name_asc
        - name_desc
        - vault_count_asc
        - vault_count_desc
    VaultGroupState:
      title: VaultGroupState
      type: string
      enum:
        - pending_approval
        - active
    VaultRef:
      title: VaultRef
      description: Represents a reference to a vault in the Fordefi platform
      properties:
        id:
          title: Id
          description: The unique identifier of the vault in the Fordefi platform.
          type: string
          format: uuid
        name:
          title: Name
          description: The name of the vault.
          type: string
        address:
          title: Address
          description: The address of the vault.
          type: string
        state:
          $ref: '#/components/schemas/VaultState'
        end_user:
          description: >-
            The end user that owns this vault if it is in a Consumer Wallet
            organization. `None` otherwise.
          $ref: '#/components/schemas/EndUserRef'
      type: object
      required:
        - id
        - name
        - state
      x-konfig-properties:
        state:
          description: State of the vault.
    VaultSortableFields:
      title: VaultSortableFields
      type: string
      enum:
        - created_at_asc
        - created_at_desc
        - name_asc
        - name_desc
        - vault_type_asc
        - vault_type_desc
    VaultState:
      title: VaultState
      type: string
      enum:
        - active
        - archived
    VaultType:
      title: VaultType
      type: string
      enum:
        - evm
        - solana
        - black_box
        - cosmos
        - utxo
    WebhookBlackBoxSignatureStatusChangeEvent:
      title: WebhookBlackBoxSignatureStatusChangeEvent
      properties:
        transaction_id:
          title: Transaction Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        is_managed_transaction:
          title: Is Managed Transaction
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to unmanaged transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
          type: boolean
          deprecated: true
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        type:
          title: Type
          description: The type of the transaction.
          const: black_box_signature
        state:
          $ref: '#/components/schemas/BlackBoxSignatureState'
      type: object
      required:
        - transaction_id
        - is_managed_transaction
        - direction
        - spam_state
        - type
        - state
      x-konfig-properties:
        direction:
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to incoming transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
        state:
          description: The current state of the message.
    WebhookCosmosMessageStatusChangeEvent:
      title: WebhookCosmosMessageStatusChangeEvent
      properties:
        transaction_id:
          title: Transaction Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        is_managed_transaction:
          title: Is Managed Transaction
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to unmanaged transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
          type: boolean
          deprecated: true
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        type:
          title: Type
          description: The type of the transaction.
          const: cosmos_message
        cosmos_message_type:
          $ref: '#/components/schemas/CosmosMessageType'
        state:
          $ref: '#/components/schemas/CosmosMessageState'
        chain:
          $ref: '#/components/schemas/CosmosChain'
      type: object
      required:
        - transaction_id
        - is_managed_transaction
        - direction
        - spam_state
        - type
        - cosmos_message_type
        - state
        - chain
      x-konfig-properties:
        direction:
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to incoming transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
        cosmos_message_type:
          description: The type of the Cosmos message.
        state:
          description: The current state of the message.
        chain:
          description: The chain type this transaction is on.
    WebhookCosmosTransactionStatusChangeEvent:
      title: WebhookCosmosTransactionStatusChangeEvent
      properties:
        transaction_id:
          title: Transaction Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        is_managed_transaction:
          title: Is Managed Transaction
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to unmanaged transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
          type: boolean
          deprecated: true
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        type:
          title: Type
          description: The type of the transaction.
          const: cosmos_transaction
        cosmos_transaction_type:
          $ref: '#/components/schemas/CosmosTransactionType'
        state:
          $ref: '#/components/schemas/CosmosTransactionState'
        hash:
          title: Hash
          description: The hash of the transaction.
          type: string
          maxLength: 64
          minLength: 64
          pattern: ^[a-fA-F0-9]+$
          example: 12BE33E7F1B6CA644CC006FB8CBD0C4C7C95B1072DA90E9F4C39CB837072BBF5
        chain:
          $ref: '#/components/schemas/CosmosChain'
      type: object
      required:
        - transaction_id
        - is_managed_transaction
        - direction
        - spam_state
        - type
        - cosmos_transaction_type
        - state
        - chain
      x-konfig-properties:
        direction:
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to incoming transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
        cosmos_transaction_type:
          description: The type of the Cosmos transaction.
        state:
          description: The current state of the transaction.
        chain:
          description: The chain id this transaction is on.
    WebhookEvmMessageStatusChangeEvent:
      title: WebhookEvmMessageStatusChangeEvent
      properties:
        transaction_id:
          title: Transaction Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        is_managed_transaction:
          title: Is Managed Transaction
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to unmanaged transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
          type: boolean
          deprecated: true
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        type:
          title: Type
          description: The type of the transaction.
          const: evm_message
        evm_message_type:
          $ref: '#/components/schemas/EvmMessageType'
        state:
          $ref: '#/components/schemas/EvmMessageState'
        chain:
          $ref: '#/components/schemas/EvmChain'
      type: object
      required:
        - transaction_id
        - is_managed_transaction
        - direction
        - spam_state
        - type
        - evm_message_type
        - state
        - chain
      x-konfig-properties:
        direction:
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to incoming transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
        evm_message_type:
          description: The type of the EVM message.
        state:
          description: The current state of the message.
        chain:
          description: The details of the chain that this message is on.
    WebhookEvmTransactionStatusChangeEvent:
      title: WebhookEvmTransactionStatusChangeEvent
      properties:
        transaction_id:
          title: Transaction Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        is_managed_transaction:
          title: Is Managed Transaction
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to unmanaged transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
          type: boolean
          deprecated: true
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        type:
          title: Type
          description: The type of the transaction.
          const: evm_transaction
        evm_transaction_type:
          $ref: '#/components/schemas/EvmTransactionType'
        state:
          $ref: '#/components/schemas/EvmTransactionState'
        hash:
          title: Hash
          description: The hash of the transaction.
          type: string
          maxLength: 66
          minLength: 66
          pattern: ^0[xX][a-fA-F0-9]+$
          example: '0x780f21260f89d610f24eed21b34d29229611a37e0003e83dd0da91981d7131ae'
        raw_transaction:
          title: Raw Transaction
          description: The raw transaction data, encoded as a hex string.
          type: string
          pattern: ^0[xX][a-fA-F0-9]+$
        chain:
          $ref: '#/components/schemas/EvmChain'
      type: object
      required:
        - transaction_id
        - is_managed_transaction
        - direction
        - spam_state
        - type
        - evm_transaction_type
        - state
        - chain
      x-konfig-properties:
        direction:
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to incoming transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
        evm_transaction_type:
          description: The type of the EVM transaction.
        state:
          description: The current state of the transaction.
        chain:
          description: The details of the chain this transaction is on
    WebhookSolanaMessageStatusChangeEvent:
      title: WebhookSolanaMessageStatusChangeEvent
      properties:
        transaction_id:
          title: Transaction Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        is_managed_transaction:
          title: Is Managed Transaction
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to unmanaged transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
          type: boolean
          deprecated: true
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        type:
          title: Type
          description: The type of the transaction.
          const: solana_message
        solana_message_type:
          $ref: '#/components/schemas/SolanaMessageType'
        state:
          $ref: '#/components/schemas/SolanaMessageState'
        chain:
          $ref: '#/components/schemas/SolanaChain'
      type: object
      required:
        - transaction_id
        - is_managed_transaction
        - direction
        - spam_state
        - type
        - solana_message_type
        - state
        - chain
      x-konfig-properties:
        direction:
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to incoming transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
        solana_message_type:
          description: The type of the Solana message.
        state:
          description: The current state of the message.
        chain:
          description: The chain type this transaction is on.
    WebhookSolanaTransactionStatusChangeEvent:
      title: WebhookSolanaTransactionStatusChangeEvent
      properties:
        transaction_id:
          title: Transaction Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        is_managed_transaction:
          title: Is Managed Transaction
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to unmanaged transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
          type: boolean
          deprecated: true
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        type:
          title: Type
          description: The type of the transaction.
          const: solana_transaction
        solana_transaction_type:
          $ref: '#/components/schemas/SolanaTransactionType'
        state:
          $ref: '#/components/schemas/SolanaTransactionState'
        hash:
          title: Hash
          description: The hash of the transaction.
          type: string
          maxLength: 88
          minLength: 64
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
          example: >-
            FAWA66fudpiwdRDDQ4DRxdJsRvawvauwg4vQkm98ZHFpXmW5N7xzRiTRpt8QiZ19s1aVbzKgXW6kEZanwHeDFNS
        raw_transaction:
          title: Raw Transaction
          description: The serialized transaction encoded as a base64 string
          type: string
          example: SGVsbG8=
        chain:
          $ref: '#/components/schemas/SolanaChain'
      type: object
      required:
        - transaction_id
        - is_managed_transaction
        - direction
        - spam_state
        - type
        - solana_transaction_type
        - state
        - chain
      x-konfig-properties:
        direction:
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to incoming transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
        solana_transaction_type:
          description: The type of the Solana transaction.
        state:
          description: The current state of the transaction.
        chain:
          description: The chain type this transaction is on.
    WebhookTransactionStatusChangeEvent:
      title: WebhookTransactionStatusChangeEvent
      properties:
        webhook_id:
          title: Webhook Id
          type: string
          format: uuid
        created_at:
          title: Created At
          description: The time of the webhook event creation in UTC.
          type: string
          format: date-time
        event_id:
          title: Event Id
          description: The unique ID of this event.
          type: string
          format: uuid
        attempt:
          title: Attempt
          description: The attempt number of this event.
          type: integer
          minimum: 1
        sent_at:
          title: Sent At
          description: The time the current event was sent in UTC.
          type: string
          format: date-time
        event:
          title: Event
          oneOf:
            - $ref: '#/components/schemas/WebhookBlackBoxSignatureStatusChangeEvent'
            - $ref: '#/components/schemas/WebhookCosmosMessageStatusChangeEvent'
            - $ref: '#/components/schemas/WebhookCosmosTransactionStatusChangeEvent'
            - $ref: '#/components/schemas/WebhookEvmMessageStatusChangeEvent'
            - $ref: '#/components/schemas/WebhookEvmTransactionStatusChangeEvent'
            - $ref: '#/components/schemas/WebhookSolanaMessageStatusChangeEvent'
            - $ref: '#/components/schemas/WebhookSolanaTransactionStatusChangeEvent'
            - $ref: '#/components/schemas/WebhookUtxoTransactionStatusChangeEvent'
          discriminator:
            propertyName: type
            mapping:
              black_box_signature: '#/components/schemas/WebhookBlackBoxSignatureStatusChangeEvent'
              cosmos_message: '#/components/schemas/WebhookCosmosMessageStatusChangeEvent'
              cosmos_transaction: '#/components/schemas/WebhookCosmosTransactionStatusChangeEvent'
              evm_message: '#/components/schemas/WebhookEvmMessageStatusChangeEvent'
              evm_transaction: '#/components/schemas/WebhookEvmTransactionStatusChangeEvent'
              solana_message: '#/components/schemas/WebhookSolanaMessageStatusChangeEvent'
              solana_transaction: '#/components/schemas/WebhookSolanaTransactionStatusChangeEvent'
              utxo_transaction: '#/components/schemas/WebhookUtxoTransactionStatusChangeEvent'
        event_type:
          title: Event Type
          description: The type of the event.
          const: transaction_state_update
      type: object
      required:
        - webhook_id
        - created_at
        - event_id
        - attempt
        - sent_at
        - event
        - event_type
    WebhookUtxoTransactionStatusChangeEvent:
      title: WebhookUtxoTransactionStatusChangeEvent
      properties:
        transaction_id:
          title: Transaction Id
          description: The unique identifier of the object in the Fordefi platform.
          type: string
          format: uuid
        is_managed_transaction:
          title: Is Managed Transaction
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to unmanaged transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
          type: boolean
          deprecated: true
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        note:
          title: Note
          description: An optional transaction note.
          type: string
        spam_state:
          $ref: '#/components/schemas/TransactionSpamState'
        type:
          title: Type
          description: The type of the transaction.
          const: utxo_transaction
        utxo_transaction_type:
          $ref: '#/components/schemas/UtxoTransactionType'
        state:
          $ref: '#/components/schemas/UtxoTransactionState'
        hash:
          title: Hash
          description: The hash of the transaction.
          type: string
        chain:
          $ref: '#/components/schemas/UtxoChain'
      type: object
      required:
        - transaction_id
        - is_managed_transaction
        - direction
        - spam_state
        - type
        - utxo_transaction_type
        - state
        - chain
      x-konfig-properties:
        direction:
          description: >-
            Indicates whether the transaction was initiated from the Fordefi
            system itself, in contrast to incoming transactions (which are, for
            example, transfers of funds into a vault visible to Fordefi).
        spam_state:
          description: >-
            `automatically_set` if the transaction was automatically set as spam
            by Fordefi, `manually_set` if the transaction was manually set as
            spam by a user, and `unset` if the transaction was not set as spam.
        utxo_transaction_type:
          description: The type of the Utxo transaction.
        state:
          description: The current state of the transaction.
        chain:
          description: The chain this transaction is on.
    VaultsExportWithAssetsResponse:
      type: string
    TransactionsExportCsvListResponse:
      type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
