openapi: 3.0.0
info:
  title: Notabene
  description: >
    The Notabene API is organized around
    [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer).

    Our API accepts [JSON-encoded](http://www.json.org/) request bodies, returns
    [JSON-encoded](http://www.json.org/) responses, and uses standard [HTTP
    status codes](https://httpstatuses.com/) and verbs.


    All requests to the Notabene API should be made to one of the following root
    URLs:


    * Test: https://api.notabene.dev

    * Live: https://api.notabene.id


    All API requests must be made over HTTPS; calls made over plain HTTP will
    fail. API requests without authentication will also fail - see the
    Authentication section for information on correctly authenticating calls to
    the Notabene API.


    ### Just getting started?


    Check out our [DevX](https://devx.notabene.id) guides for more information
    about how best to integrate with Notabene.
  version: 1.0.0
  contact:
    name: API Support
    email: tech@notabene.id
    url: https://doc.notabene.id
  x-logo:
    url: >-
      https://uploads-ssl.webflow.com/5e68f0772de982756aa8c1a4/5eee5fb470215e6ecdc34b94_Full_transparent_black_1280x413.svg
    altText: Notabene logo
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - description: Production
    url: https://api.notabene.id
  - description: Test
    url: https://api.notabene.dev
tags:
  - description: >
      Transfers represent blockchain transfers sent by or to your VASP.


      ## IVMS101


      Notabene utilizes the IVMS 101 interVASP messaging standard to transmit
      required originator and beneficiary information.


      **More information: [IVMS 101](https://intervasp.org/)**


      <SchemaDefinition schemaRef="#/components/schemas/IVMS101" />
    name: Transactions
  - description: >
      The Notabene Trust Framework refers to the network of VASPs that send and
      receive transfers.


      You can browse through the [Notabene
      Directory](https://app.notabene.id/directory) to see more information
      about which VASPs are receiving Travel Rule transfers and the protocols
      they follow.
    name: TrustFramework
  - name: Chainalysis
  - description: >
      Various documents can be uploaded using the Notabene API such as
      certificates of incorporation, due-dilligence questionnaires etc.
    name: Documents
  - name: Address Book
  - name: LexisNexis
  - name: TRM
  - name: TRMSanctions
  - name: Coinfirm
  - name: Bitgo
  - name: ComplyAdvantage
  - name: Refinitiv
  - name: MerkleScience
  - name: Elliptic
  - name: ProtocolAgents
  - description: >
      VASPs can be administered using the Notabene API. Users can be added or
      removed from a VASP allowing them to login to the [Notabene
      Dashboard](http://app.notabene.id) to manage transfers, rules,
      integrations and more.


      ## VASP


      <SchemaDefinition schemaRef="#/components/schemas/VASPInfo" />
    name: VASPAdmin
    x-displayName: VASP Administration
  - description: >
      Setting up transfer rules makes accepting and declining incoming transfers
      manageable at scale. Rules can be setup to automatically accept or decline
      transfers based on sanctions checks, wallet address queries and more.
    name: Rules
  - name: Webhooks
  - name: Credentials
  - description: >
      The Notabene API uses API tokens to authenticate requests.


      Authentication to the API is performed via [bearer
      auth](https://swagger.io/docs/specification/authentication/bearer-authentication/),
      so require an `Authorization: Bearer TOKEN` HTTP header.
    name: authentication
    x-displayName: Authentication
  - description: The customer represents the originator of the transfer.
    name: Customer
  - name: Address webhook
  - name: Transaction webhook
  - name: Protocol Gateways
  - name: Settings
  - name: Providers
  - name: Chainalysis2
  - name: Trust Framework
  - name: Jurisdictions
  - description: >
      The Notabene API takes advantage of [Decentralized
      Identifiers](https://www.w3.org/TR/did-core/#dfn-decentralized-identifiers)
      (DIDs) that enable
      [verifiable](https://en.wikipedia.org/wiki/Verifiable_credentials),
      decentralized [digital
      identity](https://en.wikipedia.org/wiki/Digital_identity).
    name: did_model
    x-displayName: DIDs
  - description: >
      Errors in the Notabene API follow conventional HTTP response codes to
      indicate errors. Generally, `2xx` response codes indicate success, `4xx`
      response codes indicate client error, and `5xx` errors indicate errors
      with the Notabene API.


      ### Response Code Summary

      - **200 - OK** - The request was successfully handled

      - **400 - Bad Request** - The API could not process the request due to an
      incorrect request

      - **401 - Unauthorized** - The user of the API was not authenticated

      - **403 - Forbidden** - The user of the API was not authorized to make the
      request

      - **404 - Not Found** - The requested resource could not be found

      - **500, 502, 503, 504 - Server Errors** - Something went wrong with the
      Notabene API
    name: errors
    x-displayName: Errors
paths:
  /address/upload/{vaspDID}:
    get:
      tags:
        - Address Book
      summary: Get upload URL
      operationId: AddressBook_requestUploadUrl
      security:
        - bearerAuth: []
      description: >
        To upload an address book you must first request a URL to uploda to.
        Upload URLs are short-lived AWS S3 bucket URLs.
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: URL where to upload the address list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common_UploadURLInfo'
  /address/registerCustomer:
    post:
      tags:
        - Address Book
      summary: Register address
      operationId: AddressBook_registerCustomer
      security:
        - bearerAuth: []
      description: |
        Registers the blockchain address of a customer in your address book.
      requestBody:
        description: Customer Address Info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCustomerInput'
      responses:
        '200':
          description: Addess Owner is already registered?
  /v1/addresses/address-ownerships/{address}:
    get:
      tags:
        - Address Book
      summary: Get address ownership information
      operationId: AddressBook_getOwnershipInfo
      security:
        - bearerAuth: []
      description: |
        Get the ownership information about a customer blockchain address.
      parameters:
        - name: address
          in: path
          schema:
            $ref: '#/components/schemas/BlockchainAddress'
          required: true
        - description: VASP DID
          name: vasp_did
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/common_DID'
        - name: asset
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Asset'
      responses:
        '200':
          description: Address Ownership Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressOwnershipResponse'
        '404':
          description: Address Ownership Information Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/addresses:
    get:
      tags:
        - Address Book
      summary: Get addresses registered
      operationId: AddressBook_getRegisteredAddresses
      security:
        - bearerAuth: []
      description: |
        Get the addresses registered for a VASP.
      parameters:
        - description: VASP DID
          name: vasp_did
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/common_DID'
        - name: source
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/BlockchainAddressQuerySource'
        - name: source_type
          in: query
          schema:
            $ref: '#/components/schemas/QuerySourceType'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PaginationPage'
        - name: per_page
          in: query
          schema:
            maximum: 1000
            $ref: '#/components/schemas/PaginationPerPage'
      responses:
        '200':
          description: Addresses Registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressesResponse'
    delete:
      tags:
        - Address Book
      summary: Delete addresses
      operationId: AddressBook_removeAddress
      security:
        - bearerAuth: []
      description: |
        Delete addresses previously added to the address book.
      parameters:
        - description: Comma-separated list of addresses to delete
          name: addresses
          in: query
          required: true
          schema:
            type: string
            pattern: ^([^,]+,)*([^,]+)$
            example: 0x123,0x456
        - description: VASP DID
          name: vasp_did
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '202':
          description: Addresses Deletion Processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressBookRemoveAddressResponse'
  /auth/customerToken:
    post:
      tags:
        - authentication
      summary: Get customer access token
      operationId: Authentication_getCustomerAccessToken
      security:
        - bearerAuth: []
      description: |
        Get a Notabene API access token on behalf of a customer
      requestBody:
        description: Customer Token information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_CustomerTokenInput'
      responses:
        '200':
          description: API Token
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AuthenticationGetCustomerAccessTokenResponse
  /auth/userinfo/update:
    post:
      tags:
        - authentication
      summary: Update user
      operationId: Authentication_updateUser
      security:
        - bearerAuth: []
      description: |
        Updates the currently authenticated user
      requestBody:
        description: User Info update information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_UserInfoUpdate'
      responses:
        '200':
          description: User info updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_UserInfo'
  /auth/credentials/{vaspDID}:
    post:
      tags:
        - Credentials
      summary: Create new API credentials
      operationId: Credentials_createNewApi
      security:
        - bearerAuth: []
      description: Create new auth0 API credentials
      parameters:
        - in: path
          name: vaspDID
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      requestBody:
        description: Additional options
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsCreateNewApiRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsCreateNewApiResponse'
    delete:
      tags:
        - Credentials
      summary: Delete API credentials
      operationId: Credentials_deleteAuth0ApiCredentials
      security:
        - bearerAuth: []
      description: Delete auth0 API credentials
      parameters:
        - in: path
          name: vaspDID
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: auth0 clientId
          name: clientid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
    get:
      tags:
        - Credentials
      summary: Get API credentials
      operationId: Credentials_getAuth0Credentials
      security:
        - bearerAuth: []
      description: Get auth0 API credentials
      parameters:
        - in: path
          name: vaspDID
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGetAuth0CredentialsResponse'
  /auth/vaspUsers/{vaspDID}:
    get:
      tags:
        - VASPAdmin
      summary: List VASP users
      operationId: VaspAdmin_listVaspUsers
      security:
        - bearerAuth: []
      description: >
        Returns an array of users and their roles that have been added to manage
        a VASP.
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: VASP users list with their roles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaspAdminListVaspUsersResponse'
  /auth/addusertovasp:
    post:
      tags:
        - VASPAdmin
      summary: Add user to VASP
      operationId: VaspAdmin_addUserToVasp
      security:
        - bearerAuth: []
      description: >
        Adds a user to a VASP by email. Added users will be sent an email to
        accept the invite.
      requestBody:
        description: New user information"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_AddUserToVASPInput'
      responses:
        '200':
          description: User added and email sent to user
  /auth/removeuserfromvasp:
    post:
      tags:
        - VASPAdmin
      summary: Remove user from VASP
      operationId: VaspAdmin_removeUserFromVasp
      security:
        - bearerAuth: []
      description: >
        Remove a user from a VASP. The removed user will no longer be able to
        login to the dashboard to manage the VASP.
      requestBody:
        description: Remove user data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_RemoveUserFromVASPInput'
      responses:
        '200':
          description: User removed from VASP
  /auth/customer:
    post:
      tags:
        - Customer
      summary: Create customer
      operationId: Customer_createNewCustomer
      security:
        - bearerAuth: []
      description: |
        Creates a new customer
      requestBody:
        description: Customer info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomerInput'
      responses:
        '200':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /auth/customer/{vaspDID}/{customerDID}:
    get:
      tags:
        - Customer
      summary: Get customer
      operationId: Customer_getByDids
      security:
        - bearerAuth: []
      description: |
        Returns a customer of a VASP by customer DID
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: Customer DID
          name: customerDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: Customer info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /integrations/{vaspDID}/address-query-webhook:
    post:
      tags:
        - Address webhook
      summary: Register a Webhook for querying addresses
      operationId: AddressWebhook_registerQuery
      security:
        - bearerAuth: []
      description: |
        Register a Webhook for querying addresses
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      requestBody:
        description: Register Webhook Input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationsRegisterAddressWebhookInput'
      responses:
        '200':
          description: Secret to validate Notabene's request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common_RegisterAddressWebhookResponse'
    delete:
      tags:
        - Address webhook
      summary: Delete a Webhook for querying addresses
      operationId: AddressWebhook_deleteWebhook
      security:
        - bearerAuth: []
      description: |
        Delete a Webhook for querying addresses
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: Delete message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common_DeleteAddressWebhookResponse'
  /integrations/config/txnotification:
    post:
      tags:
        - Transaction webhook
      summary: Create a notification webhook
      operationId: TransactionWebhook_createCallbackUrl
      security:
        - bearerAuth: []
      description: >
        Creates a webhook for the passed callback URL that will be notified
        every time a transfer changes state.
      requestBody:
        description: Tx Notification Config Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationConfigTxNotificationInput'
      responses:
        '200':
          description: Config saved
      deprecated: true
  /integrations/txnotification/{vaspDID}:
    get:
      tags:
        - Transaction webhook
      summary: Get a notification webhook
      operationId: TransactionWebhook_getNotificationWebhook
      security:
        - bearerAuth: []
      description: |
        Returns a webhook that has been setup for your account.
      parameters:
        - in: path
          name: vaspDID
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: Tx Notification Config Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationInfoTxNotification'
  /integrations/providers/{vaspDID}:
    get:
      tags:
        - Providers
      summary: Get Third Party Providers
      operationId: Providers_getConfigured
      security:
        - bearerAuth: []
      description: |
        Retrieve all of the third party providers configured for the VASP.
      parameters:
        - in: path
          name: vaspDID
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: Get Third Party Providers Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsGetThirdPartyProviders'
  /integrations/chainalysis/addressinfo:
    post:
      tags:
        - Chainalysis
      summary: Chainalysis address info
      operationId: Chainalysis_getAddressInfo
      security:
        - bearerAuth: []
      description: Chainalysis address info
      requestBody:
        description: Chainalysis address info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChainalysisGetAddressInfoRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainalysisGetAddressInfoResponse'
  /integrations/chainalysis/credentials:
    put:
      tags:
        - Chainalysis
      summary: Set Chainalysis credentials
      operationId: Chainalysis_setCredentials
      security:
        - bearerAuth: []
      description: Set Chainalysis credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set Chainalysis credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChainalysisSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainalysisSetCredentialsResponse'
    delete:
      tags:
        - Chainalysis
      summary: Delete Chainalysis credentials
      operationId: Chainalysis_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete Chainalysis credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainalysisDeleteCredentialsResponse'
    get:
      tags:
        - Chainalysis
      summary: Check Chainalysis credentials
      operationId: Chainalysis_checkCredentials
      security:
        - bearerAuth: []
      description: Check Chainalysis credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainalysisCheckCredentialsResponse'
  /integrations/chainalysis2/addressinfo:
    post:
      tags:
        - Chainalysis2
      summary: Chainalysis v2 address info
      operationId: Chainalysis2_getAddressInfo
      security:
        - bearerAuth: []
      description: Chainalysis v2 address info
      requestBody:
        description: Chainalysis v2 address info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chainalysis2GetAddressInfoRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chainalysis2GetAddressInfoResponse'
  /integrations/chainalysis2/credentials:
    put:
      tags:
        - Chainalysis
      summary: Set Chainalysis credentials
      operationId: Chainalysis_setCredentials
      security:
        - bearerAuth: []
      description: Set Chainalysis credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set Chainalysis credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChainalysisSetCredentialsRequest1'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainalysisSetCredentials200Response'
    delete:
      tags:
        - Chainalysis
      summary: Delete Chainalysis credentials
      operationId: Chainalysis_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete Chainalysis credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainalysisDeleteCredentials200Response'
    get:
      tags:
        - Chainalysis
      summary: Check Chainalysis credentials
      operationId: Chainalysis_checkCredentials
      security:
        - bearerAuth: []
      description: Check Chainalysis credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainalysisCheckCredentials200Response'
  /integrations/lexisnexis/sanctions:
    post:
      tags:
        - LexisNexis
      summary: LexisNexis sanctions check
      operationId: LexisNexis_performSanctionsCheck
      security:
        - bearerAuth: []
      description: LexisNexis sanctions check
      requestBody:
        description: LexisNexis sanctions check
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LexisNexisPerformSanctionsCheckRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexisNexisPerformSanctionsCheckResponse'
  /integrations/lexisnexis/credentials:
    put:
      tags:
        - LexisNexis
      summary: Set LexisNexis credentials
      operationId: LexisNexis_setCredentials
      security:
        - bearerAuth: []
      description: Set LexisNexis credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set LexisNexis credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LexisNexisSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexisNexisSetCredentialsResponse'
    delete:
      tags:
        - LexisNexis
      summary: Delete LexisNexis credentials
      operationId: LexisNexis_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete LexisNexis credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexisNexisDeleteCredentialsResponse'
    get:
      tags:
        - LexisNexis
      summary: Check LexisNexis credentials
      operationId: LexisNexis_checkCredentials
      security:
        - bearerAuth: []
      description: Check LexisNexis credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexisNexisCheckCredentialsResponse'
  /integrations/trm/addressinfo:
    post:
      tags:
        - TRM
      summary: TRM address info
      operationId: Trm_getAddressInfo
      security:
        - bearerAuth: []
      description: TRM address info
      requestBody:
        description: TRM address info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrmGetAddressInfoRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrmGetAddressInfoResponse'
  /integrations/trm/credentials:
    put:
      tags:
        - TRM
      summary: Set TRM credentials
      operationId: Trm_setCredentials
      security:
        - bearerAuth: []
      description: Set TRM credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set TRM credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrmSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrmSetCredentialsResponse'
    delete:
      tags:
        - TRM
      summary: Delete TRM credentials
      operationId: Trm_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete TRM credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrmDeleteCredentialsResponse'
    get:
      tags:
        - TRM
      summary: Check TRM credentials
      operationId: Trm_checkCredentials
      security:
        - bearerAuth: []
      description: Check TRM credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrmCheckCredentialsResponse'
  /integrations/trmsanctions/sanctions:
    post:
      tags:
        - TRMSanctions
      summary: TRMSanctions sanctions check
      operationId: TrmSanctions_sanctionsCheck
      security:
        - bearerAuth: []
      description: TRMSanctions sanctions check
      requestBody:
        description: TRMSanctions sanctions check
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrmSanctionsSanctionsCheckRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrmSanctionsSanctionsCheckResponse'
  /integrations/trmsanctions/credentials:
    put:
      tags:
        - TRMSanctions
      summary: Set TRMSanctions credentials
      operationId: TrmSanctions_setCredentials
      security:
        - bearerAuth: []
      description: Set TRMSanctions credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set TRMSanctions credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrmSanctionsSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrmSanctionsSetCredentialsResponse'
    delete:
      tags:
        - TRMSanctions
      summary: Delete TRMSanctions credentials
      operationId: TrmSanctions_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete TRMSanctions credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrmSanctionsDeleteCredentialsResponse'
    get:
      tags:
        - TRMSanctions
      summary: Check TRMSanctions credentials
      operationId: TrmSanctions_checkCredentials
      security:
        - bearerAuth: []
      description: Check TRMSanctions credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrmSanctionsCheckCredentialsResponse'
  /integrations/coinfirm/addressinfo:
    post:
      tags:
        - Coinfirm
      summary: Coinfirm address info
      operationId: Coinfirm_getAddressInfo
      security:
        - bearerAuth: []
      description: Coinfirm address info
      requestBody:
        description: Coinfirm address info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoinfirmGetAddressInfoRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinfirmGetAddressInfoResponse'
  /integrations/coinfirm/credentials:
    put:
      tags:
        - Coinfirm
      summary: Set Coinfirm credentials
      operationId: Coinfirm_setCredentials
      security:
        - bearerAuth: []
      description: Set Coinfirm credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set Coinfirm credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoinfirmSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinfirmSetCredentialsResponse'
    delete:
      tags:
        - Coinfirm
      summary: Delete Coinfirm credentials
      operationId: Coinfirm_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete Coinfirm credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinfirmDeleteCredentialsResponse'
    get:
      tags:
        - Coinfirm
      summary: Check Coinfirm credentials
      operationId: Coinfirm_checkCredentials
      security:
        - bearerAuth: []
      description: Check Coinfirm credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinfirmCheckCredentialsResponse'
  /integrations/bitgo/addressinfo:
    post:
      tags:
        - Bitgo
      summary: Bitgo address info
      operationId: Bitgo_getAddressInfo
      security:
        - bearerAuth: []
      description: Bitgo address info
      requestBody:
        description: Bitgo address info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BitgoGetAddressInfoRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BitgoGetAddressInfoResponse'
  /integrations/bitgo/credentials:
    put:
      tags:
        - Bitgo
      summary: Set Bitgo credentials
      operationId: Bitgo_setCredentials
      security:
        - bearerAuth: []
      description: Set Bitgo credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set Bitgo credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BitgoSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BitgoSetCredentialsResponse'
    delete:
      tags:
        - Bitgo
      summary: Delete Bitgo credentials
      operationId: Bitgo_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete Bitgo credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BitgoDeleteCredentialsResponse'
    get:
      tags:
        - Bitgo
      summary: Check Bitgo credentials
      operationId: Bitgo_checkCredentials
      security:
        - bearerAuth: []
      description: Check Bitgo credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BitgoCheckCredentialsResponse'
  /integrations/complyadvantage/sanctions:
    post:
      tags:
        - ComplyAdvantage
      summary: ComplyAdvantage sanctions check
      operationId: ComplyAdvantage_sanctionsCheck
      security:
        - bearerAuth: []
      description: ComplyAdvantage sanctions check
      requestBody:
        description: ComplyAdvantage sanctions check
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplyAdvantageSanctionsCheckRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplyAdvantageSanctionsCheckResponse'
  /integrations/complyadvantage/credentials:
    put:
      tags:
        - ComplyAdvantage
      summary: Set ComplyAdvantage credentials
      operationId: ComplyAdvantage_setCredentials
      security:
        - bearerAuth: []
      description: Set ComplyAdvantage credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set ComplyAdvantage credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplyAdvantageSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplyAdvantageSetCredentialsResponse'
    delete:
      tags:
        - ComplyAdvantage
      summary: Delete ComplyAdvantage credentials
      operationId: ComplyAdvantage_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete ComplyAdvantage credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplyAdvantageDeleteCredentialsResponse'
    get:
      tags:
        - ComplyAdvantage
      summary: Check ComplyAdvantage credentials
      operationId: ComplyAdvantage_checkCredentials
      security:
        - bearerAuth: []
      description: Check ComplyAdvantage credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplyAdvantageCheckCredentialsResponse'
  /integrations/refinitiv/sanctions:
    post:
      tags:
        - Refinitiv
      summary: Refinitiv sanctions check
      operationId: Refinitiv_sanctionsCheck
      security:
        - bearerAuth: []
      description: Refinitiv sanctions check
      requestBody:
        description: Refinitiv sanctions check
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefinitivSanctionsCheckRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefinitivSanctionsCheckResponse'
  /integrations/refinitiv/credentials:
    put:
      tags:
        - Refinitiv
      summary: Set Refinitiv credentials
      operationId: Refinitiv_setCredentials
      security:
        - bearerAuth: []
      description: Set Refinitiv credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set Refinitiv credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefinitivSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefinitivSetCredentialsResponse'
    delete:
      tags:
        - Refinitiv
      summary: Delete Refinitiv credentials
      operationId: Refinitiv_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete Refinitiv credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefinitivDeleteCredentialsResponse'
    get:
      tags:
        - Refinitiv
      summary: Check Refinitiv credentials
      operationId: Refinitiv_checkCredentials
      security:
        - bearerAuth: []
      description: Check Refinitiv credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefinitivCheckCredentialsResponse'
  /integrations/merklescience/addressinfo:
    post:
      tags:
        - MerkleScience
      summary: MerkleScience address info
      operationId: MerkleScience_getAddressInfo
      security:
        - bearerAuth: []
      description: MerkleScience address info
      requestBody:
        description: MerkleScience address info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerkleScienceGetAddressInfoRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerkleScienceGetAddressInfoResponse'
  /integrations/merklescience/credentials:
    put:
      tags:
        - MerkleScience
      summary: Set MerkleScience credentials
      operationId: MerkleScience_setCredentials
      security:
        - bearerAuth: []
      description: Set MerkleScience credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set MerkleScience credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerkleScienceSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerkleScienceSetCredentialsResponse'
    delete:
      tags:
        - MerkleScience
      summary: Delete MerkleScience credentials
      operationId: MerkleScience_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete MerkleScience credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerkleScienceDeleteCredentialsResponse'
    get:
      tags:
        - MerkleScience
      summary: Check MerkleScience credentials
      operationId: MerkleScience_checkCredentials
      security:
        - bearerAuth: []
      description: Check MerkleScience credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerkleScienceCheckCredentialsResponse'
  /integrations/elliptic/addressinfo:
    post:
      tags:
        - Elliptic
      summary: Elliptic address info
      operationId: Elliptic_getAddressInfo
      security:
        - bearerAuth: []
      description: Elliptic address info
      requestBody:
        description: Elliptic address info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EllipticGetAddressInfoRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EllipticGetAddressInfoResponse'
  /integrations/elliptic/credentials:
    put:
      tags:
        - Elliptic
      summary: Set Elliptic credentials
      operationId: Elliptic_setCredentials
      security:
        - bearerAuth: []
      description: Set Elliptic credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      requestBody:
        description: Set Elliptic credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EllipticSetCredentialsRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EllipticSetCredentialsResponse'
    delete:
      tags:
        - Elliptic
      summary: Delete Elliptic credentials
      operationId: Elliptic_deleteCredentials
      security:
        - bearerAuth: []
      description: Delete Elliptic credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EllipticDeleteCredentialsResponse'
    get:
      tags:
        - Elliptic
      summary: Check Elliptic credentials
      operationId: Elliptic_checkCredentials
      security:
        - bearerAuth: []
      description: Check Elliptic credentials
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EllipticCheckCredentialsResponse'
  /protocol-agents:
    get:
      tags:
        - ProtocolAgents
      summary: Get the configured Protocol Agents for a given VASP
      operationId: ProtocolAgents_getConfiguredProtocolAgents
      security:
        - bearerAuth: []
      description: |
        Get the configured Protocol Agents for a given VASP
      parameters:
        - description: VASP DID
          name: vaspDID
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: All the configured Protocol Agents for a given VASP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResponse'
    post:
      tags:
        - ProtocolAgents
      summary: Register a Protocol Agent for a given VASP
      operationId: ProtocolAgents_registerForVasp
      security:
        - bearerAuth: []
      description: |
        Register a Protocol Agent for a given VASP
      requestBody:
        description: Payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
      responses:
        '200':
          description: All the configured Protocol Agents for a given VASP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResponse'
    delete:
      tags:
        - ProtocolAgents
      summary: Unregister a Protocol Agent for a given VASP
      operationId: ProtocolAgents_unregisterVasp
      security:
        - bearerAuth: []
      description: |
        Unregister a Protocol Agent for a given VASP
      requestBody:
        description: Payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
      responses:
        '200':
          description: All the configured Protocol Agents for a given VASP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResponse'
  /protocol-agents-message-handler:
    post:
      tags:
        - ProtocolAgents
      summary: Handle a Protocol Agent Message
      operationId: ProtocolAgents_handleAgentMessage
      security:
        - bearerAuth: []
      description: |
        Handle a Protocol Agent Message
      requestBody:
        description: Payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentAddressDiscoveryRequest'
      responses:
        '200':
          description: Message received
  /protocol-gateways/callbacks/address-confirmation/{transactionId}:
    post:
      tags:
        - Protocol Gateways
      summary: Address confirmation resolution
      operationId: ProtocolGateways_addressConfirmationResolution
      security:
        - bearerAuth: []
      description: >
        Address confirmation after callbackUrl is requested from the Protocol
        Gateways.
      parameters:
        - description: Transaction ID
          name: transactionId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        description: Address Confirmation Request Body
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ProtocolGatewaysAddressConfirmationResolutionRequest
      responses:
        '200':
          description: Address confirmation resolution processed
  /protocol-gateways/callbacks/receive-transfer/{transactionId}:
    post:
      tags:
        - Protocol Gateways
      summary: Receive Transfer resolution
      operationId: ProtocolGateways_receiveTransferCallback
      security:
        - bearerAuth: []
      description: >
        Receive Transfer after callbackUrl is requested from the Protocol
        Gateways.
      parameters:
        - description: Transaction ID
          name: transactionId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        description: Address Confirmation Request Body
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ProtocolGatewaysReceiveTransferCallbackRequest
      responses:
        '200':
          description: Receive transfer resolution processed
  /webhook:
    get:
      tags:
        - Webhooks
      summary: Get the registered multi-message Webhook URL for a given VASP.
      operationId: Webhooks_getRegistrationUrl
      security:
        - bearerAuth: []
      description: |
        Get the registered multi-message Webhook URL for a given VASP.
      parameters:
        - description: The VASP DID
          name: vaspDID
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Config saved
        '404':
          description: No webhook registered
    post:
      tags:
        - Webhooks
      summary: Register the multi-message Webhook URL for a given VASP.
      operationId: Webhooks_registerMultiMessageUrl
      security:
        - bearerAuth: []
      description: |
        Register the multi-message Webhook URL for a given VASP.
      requestBody:
        description: Payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetWebhookInput'
      responses:
        '200':
          description: Config saved
    delete:
      tags:
        - Webhooks
      summary: Unregister the multi-message Webhook for a given VASP.
      operationId: Webhooks_unregisterVasp
      security:
        - bearerAuth: []
      description: |
        Unregister the multi-message Webhook for a given VASP.
      requestBody:
        description: Payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWebhookInput'
      responses:
        '200':
          description: Config saved
  /tf/vasps/create:
    post:
      tags:
        - TrustFramework
      summary: Create VASP
      operationId: TrustFramework_initiateVaspCreation
      description: |
        To begin accepting transactions as a VASP, you first create a VASP.
      parameters:
        - description: ChallengeToken
          in: query
          name: challengeToken
          schema:
            type: string
          required: true
      requestBody:
        description: Create User and VASP through light onboarding
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tf_UserVASPCreate'
      responses:
        '200':
          description: User info created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tf_VASPInfo'
  /tf/simple/vasps/{vaspDID}:
    get:
      tags:
        - TrustFramework
      summary: Get VASP
      operationId: TrustFramework_getVaspInformation
      security:
        - bearerAuth: []
        - {}
      description: >
        Returns information about a VASP that has the specified
        [DID](https://www.w3.org/TR/did-core/#identifier).
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: csv of fields to return
          name: fields
          in: query
          schema:
            type: string
        - description: include reviewed vasps for specified did
          name: reviewedByVaspDID
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
        - description: include jurisdiction status information
          name: showJurisdictionStatus
          in: query
          schema:
            type: boolean
        - description: include subsidiaries of particular vasp
          name: includeSubsidiaries
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Simple VASP info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tf_VASPInfoSimple'
  /tf/simple/vasps:
    get:
      tags:
        - TrustFramework
      summary: List VASPs
      operationId: TrustFramework_listVasps
      security:
        - bearerAuth: []
        - {}
      description: >
        Returns a list of VASPs. VASPs can be searched and sorted and results
        are paginated.
      parameters:
        - description: string to query
          name: q
          in: query
          schema:
            type: string
        - description: filter on email domain
          name: emailDomain
          in: query
          schema:
            type: string
        - description: filter on chainalysis name
          name: chainalysisName
          in: query
          schema:
            type: string
        - description: filter on hasAdmin true or false
          name: hasAdmin
          in: query
          schema:
            type: boolean
        - description: filter by badge
          name: badge
          in: query
          schema:
            type: string
            enum:
              - super_vasp
              - verified
              - in_network
              - claimed
        - description: filter by jurisdictions
          name: jurisdictions
          in: query
          schema:
            type: string
        - description: csv of fields to return
          name: fields
          in: query
          schema:
            type: string
        - description: page number
          name: page
          in: query
          schema:
            type: integer
        - description: records per page
          name: per_page
          in: query
          schema:
            type: integer
        - description: field to order by
          name: order
          in: query
          schema:
            type: string
            pattern: ^([ A-Za-z]+(:(ASC|DESC))?(:NULLS (FIRST|LAST))?(,?))+$
        - description: return all records
          name: all
          in: query
          schema:
            type: boolean
        - description: >-
            Choose the way gateway VASPs and non-gateway VASPs are returned. By
            default, exclude_subsidiaries.
          name: listingType
          in: query
          schema:
            type: string
            enum:
              - exclude_subsidiaries
              - exclude_gateways
              - all
        - description: include vasps that have not been internally checked
          name: includeUncheckedVASPs
          in: query
          schema:
            type: boolean
            default: false
        - description: include only those vasps that are sending transactions
          name: includeActiveSendersOnly
          in: query
          schema:
            type: boolean
            default: false
        - description: include only those vasps that are receiving transactions
          name: includeActiveReceiversOnly
          in: query
          schema:
            type: boolean
            default: false
        - description: include only those vasps matching the specified regulatory status
          name: regulatoryStatus
          in: query
          schema:
            type: string
            default: false
            enum:
              - Exempt
              - No longer exempt
              - Not Regulated
              - No longer regulated
              - Pending
              - Regulated
        - description: asset symbol, provide when filtering by wallet
          name: asset
          in: query
          schema:
            type: string
        - description: include reviewed vasps for specified did
          name: reviewedByVaspDID
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
        - description: include jurisdiction status information
          name: showJurisdictionStatus
          in: query
          schema:
            type: boolean
        - description: include reviewed vasps containing specified value
          name: reviewValue
          in: query
          schema:
            type: string
            enum:
              - TRUSTED
              - BLOCKED
              - MANUAL
              - 'NULL'
        - description: filter by specified jurisdiction status
          name: filterByJurisdictionStatus
          in: query
          schema:
            type: string
            enum:
              - inForce
              - gracePeriodOngoing
              - limitedScope
              - plansAnnounced
              - notAvailable
      responses:
        '200':
          description: List of VASP (simple)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tf_VASPListSimple'
  /tf/vasps/{vaspDID}/VASPTravelRuleProtocols:
    get:
      tags:
        - TrustFramework
      summary: Get VASP Travel Rule protocols
      operationId: TrustFramework_getTravelRuleProtocols
      description: |
        Returns the Travel Rule protocols the VASP uses.
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: VASP Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tf_VASPInfo'
  /tf/vasps/update:
    post:
      tags:
        - TrustFramework
      summary: Update VASP
      operationId: TrustFramework_updateVasp
      security:
        - bearerAuth: []
      description: |
        Updates a VASP with the provided parameters.
      requestBody:
        description: VASP update information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tf_VASPUpdate'
      responses:
        '200':
          description: User info updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tf_VASPInfo'
  /tf/vasps/delete/{vaspDID}:
    get:
      tags:
        - TrustFramework
      summary: Delete VASP
      operationId: TrustFramework_deleteVasp
      security:
        - bearerAuth: []
        - {}
      description: >
        Deletes a VASP that has the specified
        [DID](https://www.w3.org/TR/did-core/#identifier).
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: VASP DID to redirect transactions to
          name: redirectDID
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkDeleteVaspResponse'
  /tf/vasps/{vaspDID}/review:
    post:
      tags:
        - TrustFramework
      summary: Review VASP
      operationId: TrustFramework_markVaspReview
      security:
        - bearerAuth: []
      description: |
        Mark a VASP as TRUSTED, BLOCKED, or MANUAL
      parameters:
        - description: The VASP who is adding to their review list
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustFrameworkMarkVaspReviewRequest'
      responses:
        '200':
          description: VASP review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkMarkVaspReviewResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkMarkVaspReview401Response'
  /tf/vasps/userVASPList:
    get:
      tags:
        - Trust Framework
      summary: Get VASPs associated with user
      operationId: TrustFramework_getUserVaspList
      security:
        - bearerAuth: []
      parameters:
        - description: csv of fields to return
          name: fields
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserVASPList'
        '400':
          description: Invalid user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkGetUserVaspListResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkGetUserVaspList401Response'
  /tf/vasps/did:
    post:
      tags:
        - TrustFramework
      summary: Create a VASP did
      operationId: TrustFramework_createVaspDid
      security:
        - bearerAuth: []
      description: |
        Generate a VASP did.
      responses:
        '200':
          description: User info created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkCreateVaspDidResponse'
  /tf/vasps/top-counterparties:
    get:
      tags:
        - TrustFramework
      summary: Get top counterparty data
      operationId: TrustFramework_getTopCounterpartyData
      security:
        - bearerAuth: []
      description: |
        Get VASP data for top 20 counterparties
      parameters:
        - name: vaspDID
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
      responses:
        '200':
          description: Top 20 counterparty data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TrustFrameworkGetTopCounterpartyDataResponse
  /tf/vasps/{vaspDID}/settings:
    put:
      tags:
        - Settings
      summary: Update a VASP's settings
      operationId: Settings_updateVaspSettings
      security:
        - bearerAuth: []
      description: |
        Update a VASP's settings.
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      requestBody:
        description: Settings to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      responses:
        '200':
          description: Updated settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
  /tf/vasps/{vaspDID}/getSettings:
    get:
      tags:
        - Settings
      summary: Get a VASP's settings
      operationId: Settings_get
      security:
        - bearerAuth: []
      description: |
        Get a VASP's settings
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: Stored settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
  /tf/vasps/upload/{vaspDID}:
    get:
      tags:
        - Documents
      summary: Get upload URL
      operationId: Documents_getUploadUrl
      security:
        - bearerAuth: []
      description: >
        To upload a document you must first request a URL to upload to. Upload
        URLs are short-lived AWS S3 bucket upload URLs.
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: documentType
          name: documentType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: URL where to upload the document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common_UploadURLInfo'
  /tf/vasps/download/{vaspDID}:
    get:
      tags:
        - Documents
      summary: Get document
      operationId: Documents_getLocation
      security:
        - bearerAuth: []
      description: |
        Returns the location of the uploaded document stored in AWS S3
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: S3 URL where the document is located
          name: s3URL
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Document downloaded
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/DocumentsGetLocationResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsGetLocation400Response'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsGetLocation401Response'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsGetLocation404Response'
        '503':
          description: The service is unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsGetLocation503Response'
  /tf/vasps/document/delete/{vaspDID}:
    post:
      tags:
        - Documents
      summary: Delete document
      operationId: Documents_deleteDocument
      security:
        - bearerAuth: []
      description: |
        Deletes the document stored in AWS S3
      parameters:
        - description: VASP DID
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: S3 URL where the document is located
          name: s3URL
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Document deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsDeleteDocumentResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsDeleteDocument401Response'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsDeleteDocument404Response'
        '503':
          description: The service is unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsDeleteDocument503Response'
  /tf/vasps/{vaspDID}/documents/requests:
    post:
      tags:
        - Documents
      summary: Request, Accept, Reject or Revoke Document Access
      operationId: Documents_requestAccess
      security:
        - bearerAuth: []
      description: >
        Request, Accept, Reject or Revoke Document Access. For example, you can
        use this API endpoint to request access to a counterparty VASPs
        due-dilligence document.
      parameters:
        - description: vaspDID of document owner
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: vaspDID of party subject to document access
          name: requestingVASPdid
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: type of the document
          name: documentType
          in: query
          schema:
            $ref: '#/components/schemas/DocumentType'
          required: true
        - description: access action
          name: accessAction
          in: query
          schema:
            $ref: '#/components/schemas/DocumentAccessAction'
          required: true
        - description: metadata (eg. reason for decline/revoke)
          name: metadata
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Document requested successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsRequestAccessResponse'
        '400':
          description: One of the VASP dids does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkVASPNotFoundError'
        '401':
          description: Not a user of the VASP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkUserDoesNotExistOnVASP'
    get:
      tags:
        - Documents
      summary: Get document requests
      operationId: Documents_listRequests
      security:
        - bearerAuth: []
      description: |
        Lists all requests from counterparty VASPS to your documents
      parameters:
        - description: DID of the VASP who's doc is being requested
          name: vaspDID
          in: path
          schema:
            oneOf:
              - $ref: '#/components/schemas/common_DID'
              - $ref: '#/components/schemas/OutgoingRequests'
          required: true
        - description: (optional) DID of the VASP who is requesting the document
          name: requestingVASPdid
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
          required: false
      responses:
        '200':
          description: List of document requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsListRequestsResponse'
        '400':
          description: One of the VASP dids does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkVASPNotFoundError'
        '401':
          description: Not a user of the VASP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustFrameworkUserDoesNotExistOnVASP'
  /tf/vasps/{vaspDID}/documents/ddq:
    get:
      tags:
        - Documents
      summary: Get DDQ document of vaspDID
      operationId: Documents_getDdqDocument
      security:
        - bearerAuth: []
      description: Get DDQ document of vaspDID
      parameters:
        - description: DID of the VASP who's doc is being requested
          name: vaspDID
          in: path
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - description: DID of the VASP who is requesting the document
          name: requestingVASPdid
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
          required: false
      responses:
        '200':
          description: DDQ data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsGetDdqDocumentResponse'
  /tx/info:
    get:
      tags:
        - Transactions
      summary: Get transfer
      operationId: Transactions_getTransferDetails
      security:
        - bearerAuth: []
      description: >
        Gets the detail of a transfer that has been created based on the passed
        transfer ID.
      parameters:
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/TransactionID'
          required: true
      responses:
        '200':
          description: Transfer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/query:
    get:
      tags:
        - Transactions
      summary: Search transfer
      operationId: Transactions_searchTransfer
      security:
        - bearerAuth: []
      description: >
        Searches for transfers based on transfer hash, destination blockchain
        address or Bitcoin vout.
      parameters:
        - description: Transaction txHash
          in: query
          name: txHash
          required: false
          schema:
            type: string
        - description: Destination Address
          in: query
          name: destination
          required: false
          schema:
            type: string
        - description: Bitcoin vout
          in: query
          name: vout
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Transfer Query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsSearchTransferResponse'
  /tx/listBeneficiaryOriginator:
    get:
      tags:
        - Transactions
      summary: >-
        List the transactions of a VASP. The transactions are grouped by
        beneficiary and originator.
      operationId: Transactions_listBeneficiaryOriginator
      security:
        - bearerAuth: []
      description: >
        Fetches a list of transactions belonging to a VASP. The transactions
        will be grouped showing when the VASP is beneficiary and/or originator.
      parameters:
        - description: vaspDID to get list for
          name: vaspDID
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: List of TransferInformation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsList'
  /tx/list:
    get:
      tags:
        - Transactions
      summary: List transactions
      operationId: Transactions_getList
      security:
        - bearerAuth: []
      description: >
        Fetches a list of transactions belonging to a VASP. Transactions can be
        sorted, filtered, and searched and results are paginated.
      parameters:
        - description: vaspDID to get list for
          name: vaspDID
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
        - name: sort
          in: query
          schema:
            $ref: '#/components/schemas/Sort'
        - description: Page number the user wants to retrieve, default value is 0
          name: page
          in: query
          example: 0
          schema:
            type: integer
            minimum: 0
        - description: Number of records to show per page, default value is 100
          name: resultsPerPage
          in: query
          example: 100
          schema:
            type: integer
            maximum: 100
        - name: txGroup
          in: query
          schema:
            $ref: '#/components/schemas/Group'
        - name: transactionAsset
          in: query
          schema:
            $ref: '#/components/schemas/TransactionAsset'
        - name: transactionType
          in: query
          schema:
            $ref: '#/components/schemas/common_TransactionType'
        - name: transactionRef
          in: query
          schema:
            type: string
        - description: Filter your transactions by status
          name: status
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Search term for transactions
          name: q
          in: query
          schema:
            type: string
        - name: txDirection
          in: query
          schema:
            $ref: '#/components/schemas/Direction'
        - description: Decrypt PII data
          name: decrypt
          in: query
          schema:
            type: boolean
            default: false
        - description: Get data in CSV format
          name: csv
          in: query
          schema:
            type: boolean
        - description: Include action data with the transactions
          name: includeActions
          in: query
          schema:
            type: boolean
        - description: Filter your transactions by jurisdictions
          name: jurisdictions
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Filter your transactions by vasps
          name: vasps
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Filter your transactions created after the specified date (included)
          name: start
          in: query
          schema:
            $ref: '#/components/schemas/common_Date'
        - description: >-
            Filter your transactions created before the specified date
            (included)
          name: end
          in: query
          schema:
            $ref: '#/components/schemas/common_Date'
        - description: Filter your transactions by wallet address
          name: wallet
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of TransferInformation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsList'
  /tx/validate:
    post:
      tags:
        - Transactions
      summary: Validate transfer
      operationId: Transactions_validateTransferFields
      security:
        - bearerAuth: []
      description: >
        Due to varying implementations of the Travel Rule across jurisdictions,
        transfers can be validated ahead of time to evaluate which transfer
        fields are required.
      requestBody:
        description: Transfer Validations Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionValidateRequest'
            examples:
              below-threshold:
                summary: Below Threshold example
                value:
                  transactionAsset: ETH
                  destination: '0x00000000219ab540356cbb839cbe05303d7705fa'
                  transactionAmount: '1000000000'
                  originatorVASPdid: did:ethr:0xoriginatorDID
                  originatorEqualsBeneficiary: true
      responses:
        '200':
          description: Transfer validation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionValidationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TransactionsValidateTransferFieldsResponse
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
      deprecated: true
  /tx/validate/full:
    post:
      tags:
        - Transactions
      summary: Fully Validate transfer
      operationId: Transactions_fullyValidateTransfer
      security:
        - bearerAuth: []
      description: Fully Validate your transfer with this method
      requestBody:
        description: Full transfer Validations Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionValidateFullRequest'
      responses:
        '200':
          description: Full transfer validation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionFullValidationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsFullyValidateTransferResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /tx/create:
    post:
      tags:
        - Transactions
      summary: Create transfer
      operationId: Transactions_createTransfer
      security:
        - bearerAuth: []
      description: >
        Creates a new transfer. The fields required in a transfer differ
        depending on the jurisdiction of the originating VASP.

        Additional data may be provided to the beneficiary VASP depending on
        their jurisdiction.
      requestBody:
        description: Transfers Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreateRequest'
            examples:
              below-threshold:
                summary: Below Threshold example
                value:
                  transactionRef: a4de3f3f-668f-4844-995a-03ad1b73a54e
                  transactionAsset: ETH
                  transactionAmount: '10000000000000000'
                  originatorVASPdid: did:ethr:0xoriginatorDID
                  beneficiaryVASPdid: did:ethr:0xbeneficiaryVASPdid
                  transactionBlockchainInfo:
                    txHash: >-
                      0x8f1fd4a0a5f7388b049ccbb1f4108a675047b0faa0085ce009c0b36a0a9e6894
                    origin: '0xa40dfee99e1c85dc97fdc594b16a460717838703'
                    destination: '0x00000000219ab540356cbb839cbe05303d7705fa'
                  originator:
                    originatorPersons:
                      - naturalPerson:
                          name:
                            - nameIdentifier:
                                - primaryIdentifier: Frodo
                                  secondaryIdentifier: Baggins
                                  nameIdentifierType: LEGL
                          nationalIdentification:
                            nationalIdentifier: AABBCCDDEEFF0011223344
                            nationalIdentifierType: CCPT
                            countryOfIssue: NZ
                    accountNumber:
                      - '01234567890'
                  beneficiary:
                    beneficiaryPersons:
                      - naturalPerson:
                          name:
                            - nameIdentifier:
                                - primaryIdentifier: Bilbo
                                  secondaryIdentifier: Bolson
                                  nameIdentifierType: LEGL
                          nationalIdentification:
                            nationalIdentifier: AABBCCDDEEFF0011223344
                            nationalIdentifierType: CCPT
                            countryOfIssue: NZ
                    accountNumber:
                      - '0x00000000219ab540356cbb839cbe05303d7705fa'
      responses:
        '200':
          description: Transfer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCreateTransferResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /tx/approve:
    post:
      tags:
        - Transactions
      summary: Approve transfer
      operationId: Transactions_approveTransfer
      security:
        - bearerAuth: []
      description: >
        Approves an outgoing transfer. If the VASP is present in the [Notabene
        Directory](https://app.notabene.id/directory), approving a transfer will
        send the transfer to them and set the transfer status to `SENT`. If the
        VASP is not in the [Notabene
        Directory](https://app.notabene.id/directory), approving the transfer
        will set the status to `WAITING_FOR_INFORMATION`.
      parameters:
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/TransactionID'
          required: true
      responses:
        '200':
          description: Transfer Approved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsApproveTransferResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /tx/cancel:
    post:
      tags:
        - Transactions
      summary: Cancel transfer
      operationId: Transactions_cancelTransfer
      security:
        - bearerAuth: []
      description: |
        Cancels the transfer and sets the status to `CANCELLED`.
      requestBody:
        description: Transfer Cancel Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCancelRequest'
      responses:
        '200':
          description: Transfer Cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/update:
    post:
      tags:
        - Transactions
      summary: Update transfer
      operationId: Transactions_updateTransferDetails
      security:
        - bearerAuth: []
      description: |
        Update a transfer with the passed parameters.
      requestBody:
        description: Transfer Update Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdateRequest'
      responses:
        '200':
          description: Transfer Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsUpdateTransferDetailsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /tx/confirm:
    post:
      tags:
        - Transactions
      summary: Confirm transfer
      operationId: Transactions_confirmTransfer
      security:
        - bearerAuth: []
      description: >
        Confirms that the blockchain address of the transfer belongs to the
        beneficiary VASP. Confirming sets the status of a transfer to `ACK`.
      parameters:
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/TransactionID'
      responses:
        '200':
          description: Transfer Confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/notify:
    post:
      tags:
        - Transactions
      summary: Notify transfer
      operationId: Transactions_notifyTransfer
      security:
        - bearerAuth: []
      description: |
        Notifies the originator VASP of an incoming transfer on the blockchain.
      requestBody:
        description: Transfer Notify Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionNotifyRequest'
      responses:
        '200':
          description: Transfer Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/reject:
    post:
      tags:
        - Transactions
      summary: Reject transfer
      operationId: Transactions_transferReject
      security:
        - bearerAuth: []
      description: >
        Rejects a transfer indicating that the blockchain address is not owned
        by the beneficiary VASP. Rejecting sets the transfer status to
        `REJECTED`.
      requestBody:
        description: Transfer Reject Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRejectRequest'
      responses:
        '200':
          description: Transfer Rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/notReady:
    post:
      tags:
        - Transactions
      summary: Mark a transfer as not ready
      operationId: Transactions_markNotReady
      security:
        - bearerAuth: []
      description: >
        Marks a transfer as not ready, as the VASP is not ready yet to respond.
        The transfer status is `NOT_READY`.
      requestBody:
        description: Transfer Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionNotReadyRequest'
      responses:
        '200':
          description: Transfer marked as not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/accept:
    post:
      tags:
        - Transactions
      summary: Accept transfer
      operationId: Transactions_acceptTransfer
      security:
        - bearerAuth: []
      description: >
        Accepts a transfer setting the status to `ACCEPTED`. Transfers can be
        automatically accepted by setting rules in the rules engine or manually
        using this endpoint.
      parameters:
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/TransactionID'
          required: true
      responses:
        '200':
          description: Transfer Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/decline:
    post:
      tags:
        - Transactions
      summary: Decline transfer
      operationId: Transactions_declineTransfer
      security:
        - bearerAuth: []
      description: >
        Declines a transfer setting the status to `DECLINED`. Transfers can be
        automatically declined by setting rules in the rules engine or manually
        using this endpoint.
      requestBody:
        description: Transfer Decline Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionDeclineRequest'
      responses:
        '200':
          description: Transfer Declined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/redirect:
    post:
      tags:
        - Transactions
      summary: Redirect transfer
      operationId: Transactions_redirectTransfer
      security:
        - bearerAuth: []
      description: >
        Redirecting transfer allows beneficiary VASPs to route incoming
        transfers from one subsidiary to another.
      parameters:
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/TransactionID'
          required: true
        - in: query
          name: to
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: Transfer Redirected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsRedirectTransferResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /tx/bulk:
    post:
      tags:
        - Transactions
      summary: Bulk edit transfers
      operationId: Transactions_bulkEditTransfers
      security:
        - bearerAuth: []
      description: >
        Actions can be performed on transfers in bulk such as approving,
        cancelling, confirming, rejecting etc.
      requestBody:
        description: Bulk Transfer Input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionBulkRequest'
        required: false
      responses:
        '200':
          description: Affected transfers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsBulkEditTransfersResponse'
        '202':
          description: List of affected transfer ids (if any) - will process in background
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsBulkEditTransfers202Response'
  /tx/receive:
    post:
      tags:
        - Transactions
      summary: Receive transfer
      operationId: Transactions_receiveTransfer
      security:
        - bearerAuth: []
      description: |
        Receive a transfer from a segregated node.
      requestBody:
        description: Transfer Receive Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionReceiveRequest'
      responses:
        '200':
          description: Transfer Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/updateTR:
    post:
      tags:
        - Transactions
      summary: Update pending TR data
      operationId: Transactions_updatePendingData
      security:
        - bearerAuth: []
      description: |
        Update a transfer coming from another node.
      requestBody:
        description: Transfer Update TR Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdateTravelRuleDataRequest'
      responses:
        '200':
          description: Transfer Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /rules/get:
    get:
      tags:
        - Rules
      summary: List rules
      operationId: Rules_getList
      security:
        - bearerAuth: []
      description: |
        Returns a list of transfer rules that have been setup.
      parameters:
        - description: vaspDID to get list of transfer rules
          name: vaspDID
          in: query
          schema:
            $ref: '#/components/schemas/common_DID'
          required: true
      responses:
        '200':
          description: Transfer Rule List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRuleList'
  /rules/set/direction:
    post:
      tags:
        - Rules
      summary: Set rules
      operationId: Rules_setDirection
      security:
        - bearerAuth: []
      description: |
        Sets the transfer rules to be applied to transactions.
      requestBody:
        description: Set rules to rules engine input with direction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRuleCreateRequestWithDirection'
      responses:
        '201':
          description: Transfer Rule created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRuleList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotabeneRulesEngineError'
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotabeneRulesEngineError'
  /rules/delete:
    post:
      tags:
        - Rules
      summary: Deletes rules from the provided ids
      operationId: Rules_deleteByIds
      security:
        - bearerAuth: []
      description: |
        Deletes rules and Returns a list of transfer rules that have been setup.
      requestBody:
        description: Delete ids array
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RulesDeleteByIdsRequest'
        required: true
      responses:
        '200':
          description: Transfer Rule List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRuleList'
        '400':
          description: NotabeneRulesEngineIdsNotFoundError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesDeleteByIdsResponse'
  /jurisdictions:
    get:
      tags:
        - Jurisdictions
      summary: List all Jurisdictions
      operationId: Jurisdictions_listAll
      security:
        - bearerAuth: []
        - {}
      description: |
        Returns a list of juristicions.
      parameters:
        - description: Country code in ISO 3166-1 alpha-2 format
          name: countryCode
          in: query
          schema:
            type: string
        - description: >-
            If this is set to true, it will return FATF rules if no countryCode
            is found
          name: fallbackToFATF
          in: query
          schema:
            type: boolean
        - description: Division in ISO 3166-1 alpha-2 format
          name: division
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of jurisdictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JurisdictionList'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    HealthResponse:
      type: object
      properties:
        serverDate:
          type: string
          format: date
    AuthenticationData:
      type: object
      required:
        - email
      properties:
        email:
          description: |
            Email address to send a magic link to
          type: string
          format: email
        callback:
          description: |
            URL of the dashboard authentication callback endpoint
          type: string
          format: uri
        callbackExtra:
          description: |
            Additional parameters to send to the dashboard callback endpoint
          type: string
    CustomerTokenInput:
      type: object
      required:
        - vaspDID
        - customerRef
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        customerRef:
          type: string
    UserInfo:
      type: object
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/common_IdentityFields'
        vasps:
          type: array
          items:
            $ref: '#/components/schemas/common_DID'
    UserInfoPermissions:
      type: object
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        fields:
          $ref: '#/components/schemas/common_IdentityFields'
        vasps:
          type: array
          items:
            $ref: '#/components/schemas/common_DID'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/auth_RolesPermissionsOnVASP'
    RolesPermissionsOnVASP:
      type: object
      required:
        - vaspDID
        - permissions
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        role:
          type: string
        permissions:
          type: array
          items:
            type: string
    UserInfoUpdate:
      type: object
      required:
        - did
        - fields
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        fields:
          $ref: '#/components/schemas/common_IdentityFields'
    AddUserToVASPInput:
      type: object
      required:
        - email
        - vasp
      properties:
        email:
          type: string
          format: email
        vasp:
          type: string
          $ref: '#/components/schemas/common_DID'
        role:
          type: string
        callbackExtra:
          type: string
    RemoveUserFromVASPInput:
      type: object
      required:
        - userDID
        - vasp
      properties:
        userDID:
          $ref: '#/components/schemas/common_DID'
        vasp:
          type: string
          $ref: '#/components/schemas/common_DID'
    CreateIdentityInput:
      type: object
      properties:
        credentials:
          type: array
          items:
            type: object
            properties:
              property:
                description: The property name of the credential
                type: string
              value:
                description: The value of the credential
                type: string
              type:
                description: The type of credential
                type: string
                example: UserField
    DID:
      description: Decentralized Identifier
      type: string
      pattern: ^did:[a-zA-Z0-9]*:.*$
      example: did:methd:identifier
    IdentityFields:
      description: List of fields
      type: array
      items:
        description: Field
        type: object
        properties:
          fieldName:
            description: Name of field
            type: string
          values:
            description: History of values for the field. Last value first
            type: array
            items:
              description: Value of the field
              type: object
              properties:
                value:
                  description: Value of the field
                  $ref: '#/components/schemas/AnyObject'
                issuer:
                  $ref: '#/components/schemas/common_DID'
                issuanceDate:
                  type: string
                  format: date
                expirationDate:
                  type: string
                  format: date
    VaspFields:
      description: List of VASP fields
      type: object
      properties:
        companyName:
          description: Company name field
          type: string
        jurisdiction:
          description: Jurisdiction of the company
          type: string
    UserFields:
      description: List of User fields
      type: object
      properties:
        name:
          description: Name of the user
          type: string
    UploadURLInfo:
      type: object
      properties:
        uploadUrl:
          type: string
        uploadFields:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
    PaginationInformation:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PaginationPage'
        per_page:
          $ref: '#/components/schemas/PaginationPerPage'
        order:
          $ref: '#/components/schemas/PaginationOrder'
        total:
          type: integer
    Documents:
      description: List of documents
      type: array
      items:
        type: object
        properties:
          locationUrl:
            type: string
          mimeType:
            type: string
          name:
            type: string
    RegisterAddressWebhookResponse:
      type: object
      properties:
        secret:
          type: string
    GetAddressWebhookResponse:
      type: object
      properties:
        url:
          type: string
        params:
          type: string
        secret:
          type: string
    DeleteAddressWebhookResponse:
      type: object
      properties:
        isDeleted:
          type: boolean
        message:
          type: string
    VASPList:
      type: object
      properties:
        vasps:
          description: List of VASPInfo
          type: array
          items:
            $ref: '#/components/schemas/tf_VASPInfo'
        pagination:
          $ref: '#/components/schemas/PaginationInformation'
    VASPInfo:
      type: object
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        fields:
          $ref: '#/components/schemas/common_IdentityFields'
        documents:
          $ref: '#/components/schemas/common_Documents'
        hasAdmin:
          type: boolean
        isActiveSender:
          type: boolean
        isActiveReceiver:
          type: boolean
    VASPListSimple:
      type: object
      properties:
        vasps:
          description: List of VASPInfoSimple
          type: array
          items:
            $ref: '#/components/schemas/tf_VASPInfoSimple'
        pagination:
          $ref: '#/components/schemas/common_PaginationInformation'
    VASPInfoSimple:
      type: object
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        name:
          type: string
        website:
          type: string
        logo:
          type: string
        incorporationCountry:
          type: string
        documents:
          type: string
        hasAdmin:
          type: boolean
        isNotifiable:
          type: boolean
        isActiveSender:
          type: boolean
        isActiveReceiver:
          type: boolean
        issuers:
          type: string
    VASPUpdate:
      type: object
      required:
        - fields
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        fields:
          $ref: '#/components/schemas/common_IdentityFields'
    UserVASPCreate:
      type: object
      properties:
        vaspFields:
          $ref: '#/components/schemas/common_VaspFields'
        userFields:
          $ref: '#/components/schemas/common_UserFields'
    TrustVASP:
      type: object
      properties:
        threshold:
          description: Amount in USD-cents
          type: string
        notes:
          type: string
    TrustVASPInfo:
      type: object
      required:
        - vaspDID
        - trustedVaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/DID'
        trustedVaspDID:
          $ref: '#/components/schemas/DID'
        trusted:
          description: Is `trustedVaspDID` trusted by `vaspDID` ?
          type: boolean
        threshold:
          description: Amount in USD-cents
          type: string
        notes:
          type: string
        action:
          type: array
          items:
            $ref: '#/components/schemas/tf_TrustVASPAction'
    TrustVASPAction:
      type: object
      properties:
        hash:
          description: Credential Hash
          type: string
        issuerDID:
          $ref: '#/components/schemas/DID'
        action:
          description: Action executed
          type: string
        actionData:
          description: Action Data
          type: string
    UntrustVASP:
      type: object
      properties:
        notes:
          type: string
    VaspnetData:
      type: object
      properties:
        vaspResults:
          type: array
          items:
            type: object
    TravelRuleConfigInput:
      type: object
      required:
        - vaspDID
        - protocol
        - active
      properties:
        parameters:
          type: string
        vaspDID:
          $ref: '#/components/schemas/DID'
        protocol:
          $ref: '#/components/schemas/tr_TravelRuleProtocol'
        active:
          type: boolean
    TravelRuleConfig:
      type: object
      properties:
        vaspDID:
          $ref: '#/components/schemas/DID'
        TRLight:
          type: boolean
        TRLightParams:
          type: string
        TRP:
          type: boolean
        TPRParams:
          type: string
        OpenVASP:
          type: boolean
        OpenVASPParams:
          type: string
    TransferInformationID:
      description: Identifier of the TransferInformation
      type: string
      format: uuid
      example: 123e4567-e89b-12d3-a456-426614174000
    TransferInformation:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransferInformationID'
        protocol:
          $ref: '#/components/schemas/tr_TravelRuleProtocol'
        status:
          $ref: '#/components/schemas/tr_TransferInformationStatus'
        originatorVASPdid:
          $ref: '#/components/schemas/DID'
        beneficiaryVASPdid:
          $ref: '#/components/schemas/DID'
        ivms101:
          $ref: '#/components/schemas/ivms101_IVMS101'
        transaction:
          $ref: '#/components/schemas/tr_TransactionInformation'
        protocolData:
          $ref: '#/components/schemas/ProtocolData'
        chargedQuantity:
          description: Charged Quantity
          type: number
        actions:
          type: array
          items:
            $ref: '#/components/schemas/TransferInformationAction'
    TransferInformationStatus:
      description: >
        Status of the Transfer Information * `NEW` Transfer Information was
        created, but not sent yet.

        * `SENT` Transfer Information was sent (TRLight/TRP)

        * `REQUESTED` Destination address requested (OpenVASP/Sygna)

        * `REJECTED` Transfer rejected (TRP/Sygna)

        * `DECLINED` Transfer declined (TRP/Sygna)
      type: string
      enum:
        - NEW
        - SENT
        - REQUESTED
        - REJECTED
        - DECLINED
    TransferInformationCreateRequest:
      type: object
      required:
        - originatorVASPdid
        - transaction
      properties:
        protocol:
          $ref: '#/components/schemas/tr_TravelRuleProtocol'
        originatorVASPdid:
          $ref: '#/components/schemas/DID'
        beneficiaryVASPdid:
          $ref: '#/components/schemas/DID'
        notificationEmail:
          description: Beneficiary VASP Notification Email
          type: string
          format: email
        skipBeneficiaryDataValidation:
          description: Disable beneficiary data validation (opportunistic compliance)
          type: boolean
        beneficiaryVASPname:
          description: Beneficiary VASP name
          type: string
        originator:
          $ref: '#/components/schemas/ivms101_Originator'
        beneficiary:
          $ref: '#/components/schemas/ivms101_Beneficiary'
        transaction:
          $ref: '#/components/schemas/tr_TransactionInformation'
        encrypted:
          description: >-
            Encrypted Personal Identificable Information (obscure schema-less
            value)
          type: string
        onBehalfOfMyself:
          description: >-
            Autopopulate originator and beneficiary fields with institution's
            information
          type: boolean
    TransferInformationUpdateRequest:
      type: object
      required:
        - id
      properties:
        id:
          description: Identifier of the TransferInformation
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        notificationEmail:
          description: Beneficiary VASP Notification Email
          type: string
          format: email
    TransferInformationResolution:
      type: object
      required:
        - id
        - resolution
      properties:
        id:
          description: Identifier of the TransferInformation
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        resolution:
          description: >
            Resolution code

            * `APPROVE` Transfer Information is approved (OpenVASP/Sygna)

            * `REJECT` Transfer Information is rejected (OpenVASP/Sygna)

            * `DECLINE` Transfer Information is declined (OpenVASP/Sygna)

            * `ACK` Transfer Information is acknowledged / received
            (TRLight/TRP)
          type: string
          enum:
            - APPROVE
            - REJECT
            - DECLINE
            - ACK
        destination:
          description: Destination Blockchain Address (OpenVASP)
          type: string
          example: 0xdestinationAddress
    TransferInformationFinishData:
      type: object
      properties:
        id:
          description: Identifier of the TransferInformation
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        transaction:
          $ref: '#/components/schemas/tr_TransactionInformation'
    TransactionInformation:
      type: object
      properties:
        asset:
          description: Asset symbol (BTC,ETH)
          type: string
          example: ETH
        amount:
          description: Amount in base unit of the asset (satoshi, wei, etc)
          type: string
        blockchainInfo:
          description: Information about the transaction on the blockchain
          type: object
          properties:
            txHash:
              description: Transaction txHash
              type: string
            origin:
              description: Originator Address
              type: string
            destination:
              description: Destination Address
              type: string
          example:
            txHash: 0x00t0x0H0a0s0h0
            origin: 0xoriginAddress
            destination: 0xdestinationAddress
    TravelRuleProtocol:
      type: string
      enum:
        - TRLight
        - TRP
        - OpenVASP
      example: TRLight
    TransferInformationDirection:
      type: string
      enum:
        - INCOMING
        - OUTGOING
      example: INCOMING
    TransferInformationList:
      type: object
      properties:
        transferInformations:
          description: List of TransferInformation
          type: array
          items:
            $ref: '#/components/schemas/TransferInformation'
        pagination:
          $ref: '#/components/schemas/PaginationInformation'
    AccessLink:
      description: Identifier of the AccessLink
      type: string
      format: uuid
      example: 123e4567-e89b-12d3-a456-426614174000
    IVMS101:
      type: object
      properties:
        originator:
          $ref: '#/components/schemas/ivms101_Originator'
        beneficiary:
          $ref: '#/components/schemas/ivms101_Beneficiary'
        originatingVASP:
          $ref: '#/components/schemas/OriginatingVASP'
        beneficiaryVASP:
          $ref: '#/components/schemas/BeneficiaryVASP'
        transferPath:
          $ref: '#/components/schemas/TransferPath'
        payloadMetadata:
          $ref: '#/components/schemas/PayloadMetadata'
    Originator:
      description: >-
        The originator is defined in Section 1.1 as the account holder who
        allows the VA transfer from that account or, where there is no account,
        the natural or legal person that places the order with the originating
        VASP to perform the VA transfer.
      type: object
      required:
        - originatorPersons
      properties:
        originatorPersons:
          description: >-
            the account holder who allows the VA transfer from that account or,
            where there is no account, the natural or legal person that places
            the order with the originating VASP to perform the VA transfer.
          type: array
          items:
            $ref: '#/components/schemas/ivms101_Person'
        accountNumber:
          description: >-
            Identifier of an account that is used to process the transfer. The
            value for this element is case-sensitive.
          type: array
          items:
            $ref: '#/components/schemas/Text'
    Beneficiary:
      description: >-
        The beneficiary is defined in Section 1.1 as the natural or legal person
        or legal arrangement who is identified by the originator as the receiver
        of the requested VA transfer.
      type: object
      required:
        - beneficiaryPersons
      properties:
        beneficiaryPersons:
          description: >-
            the natural or legal person or legal arrangement who is identified
            by the originator as the receiver of the requested VA transfer.
          type: array
          items:
            $ref: '#/components/schemas/ivms101_Person'
        accountNumber:
          description: >-
            Identifier of an account that is used to process the transfer. The
            value for this element is case-sensitive.
          type: array
          items:
            $ref: '#/components/schemas/Text'
    Person:
      type: object
      properties:
        naturalPerson:
          $ref: '#/components/schemas/NaturalPerson'
        legalPerson:
          $ref: '#/components/schemas/LegalPerson'
    CountryCode:
      description: >-
        two alphabetic characters representing an ISO-3166 Alpha-2 country,
        including the code ‘XX’ to represent ‘an indicator for unknown States,
        other entities or organisations
      type: string
      pattern: ^[A-Z]{2}$
    Number:
      description: Number represented as an integer (18 digits)
      type: integer
      format: int64
    common_DID:
      description: Decentralized Identifier
      type: string
      pattern: ^did:[a-zA-Z0-9]*:.*$
      example: did:methd:identifier
    common_UploadURLInfo:
      type: object
      properties:
        uploadUrl:
          type: string
        uploadFields:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
    CAIP19:
      description: Object with property caip to hold the type of the asset
      type: object
      required:
        - caip19
      properties:
        caip19:
          description: CAIP-19 string that defines a type of asset
          type: string
          pattern: >-
            ^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}\/[-a-z0-9]{3,8}:[-.%a-zA-Z0-9]{1,128}$
    CoingeckoIdAndNetwork:
      description: Object containing coingeckoId and network of the asset
      type: object
      required:
        - coingeckoId
        - network
      properties:
        coingeckoId:
          description: String that represents an asset in Coingecko
          type: string
        network:
          description: String that represents a network in Notabene
          type: string
    RegisterCustomerInput:
      type: object
      required:
        - vaspDID
        - address
        - customerRef
      properties:
        vaspDID:
          type: string
          $ref: '#/components/schemas/common_DID'
        asset:
          oneOf:
            - description: Asset symbol (BTC,ETH)
              type: string
              example: ETH
            - $ref: '#/components/schemas/CAIP19'
            - $ref: '#/components/schemas/CoingeckoIdAndNetwork'
        address:
          type: string
        customerRef:
          type: string
    BlockchainAddress:
      description: Blockchain address
      type: string
      example: '0x489c818ca8b9251b393131b08a736a67ccb19298'
    Asset:
      description: Crypto currency
      type: string
      example: ETH
    BlockchainAddressInfoSource:
      description: |
        Source of address information
        * `UNKNOWN` Address is not kwown.
        * `ADDRESS_HASH` Notabene private address network.
        * `ADDRESS_GRAPH` Notabene address graph.
        * `CHAINALYSIS` Chainalysis
        * `ELLIPTIC` Elliptic
        * `CRYSTAL` Crystal
      type: string
      enum:
        - UNKNOWN
        - ADDRESS_HASH
        - ADDRESS_GRAPH
        - CHAINALYSIS
        - ELLIPTIC
    AddressOwnershipResponse:
      type: object
      properties:
        owner_vasp_did:
          type: string
        owner_vasp_name:
          type: string
          deprecated: true
        address:
          $ref: '#/components/schemas/BlockchainAddress'
        address_type:
          type: string
          enum:
            - HOSTED
            - UNHOSTED
        asset:
          $ref: '#/components/schemas/Asset'
        source:
          $ref: '#/components/schemas/BlockchainAddressInfoSource'
    Error:
      type: object
      properties:
        err:
          type: object
          properties:
            name:
              type: string
              example: NotabeneError
            code:
              type: number
              example: 404
            message:
              type: string
              example: Entity Not Found
            stack:
              type: string
    BlockchainAddressQuerySource:
      description: Blockchain address query sources available
      type: string
      enum:
        - ADDRESS_GRAPH
    QuerySourceType:
      description: |
        Query source types (if not provided, it will return all addresses):
          * `INTERNAL` - **Internal address book**: addresses owned by a VASP. It can be populated by uploading a CSV, confirming incoming transfers, registering addresses. It is used to confirm transfers.
          * `EXTERNAL` - **External address book**: addresses owned by counterparty VASPs. It is populated only when a counterparty VASP confirms a transfer that another VASP sent them. It is used to identify counterparty VASP via Validate / Widget / Network Discovery flows.
      type: string
      enum:
        - INTERNAL
        - EXTERNAL
    PaginationPage:
      description: Page number
      type: integer
    PaginationPerPage:
      description: Records per page
      type: integer
    Address:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/BlockchainAddress'
        owner_vasp_did:
          description: Custodial VASP DID
          type: string
        customer_did:
          description: Customer DID
          type: string
        customer_ref:
          description: Customer reference
          type: string
    AddressesResponse:
      type: object
      properties:
        pagination:
          type: object
          properties:
            page:
              $ref: '#/components/schemas/PaginationPage'
            per_page:
              $ref: '#/components/schemas/PaginationPerPage'
            total:
              type: integer
        metadata:
          type: object
          properties:
            source:
              $ref: '#/components/schemas/BlockchainAddressQuerySource'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    auth_CustomerTokenInput:
      type: object
      required:
        - vaspDID
        - customerRef
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        customerRef:
          type: string
    AnyObject: {}
    common_IdentityFields:
      description: List of fields
      type: array
      items:
        description: Field
        type: object
        properties:
          fieldName:
            description: Name of field
            type: string
          values:
            description: History of values for the field. Last value first
            type: array
            items:
              description: Value of the field
              type: object
              properties:
                value:
                  description: Value of the field
                  $ref: '#/components/schemas/AnyObject'
                issuer:
                  $ref: '#/components/schemas/common_DID'
                issuanceDate:
                  type: string
                  format: date
                expirationDate:
                  type: string
                  format: date
    auth_UserInfoUpdate:
      type: object
      required:
        - did
        - fields
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        fields:
          $ref: '#/components/schemas/common_IdentityFields'
    auth_UserInfo:
      type: object
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/common_IdentityFields'
        vasps:
          type: array
          items:
            $ref: '#/components/schemas/common_DID'
    Roles:
      description: |
        User roles
        * `admin` Admin user
        * `developer` Developer user
        * `compliance_officer` compliance officer
        * `compliance_agent` Compliance agent
        * `billing_customer admin` Billing customer admin
      type: string
      enum:
        - admin
        - developer
        - compliance_officer
        - compliance_agent
        - billing_customer_admin
    VASPuser:
      type: object
      required:
        - did
        - role
      properties:
        did:
          description: User DID
          type: string
          $ref: '#/components/schemas/common_DID'
        email:
          description: User email
          type: string
          format: email
        name:
          description: User Name
          type: string
        role:
          $ref: '#/components/schemas/Roles'
    auth_AddUserToVASPInput:
      type: object
      required:
        - email
        - vasp
      properties:
        email:
          type: string
          format: email
        vasp:
          type: string
          $ref: '#/components/schemas/common_DID'
        role:
          type: string
        callbackExtra:
          type: string
    auth_RemoveUserFromVASPInput:
      type: object
      required:
        - userDID
        - vasp
      properties:
        userDID:
          $ref: '#/components/schemas/common_DID'
        vasp:
          type: string
          $ref: '#/components/schemas/common_DID'
    NewCustomerInput:
      type: object
      required:
        - vaspDID
      properties:
        vaspDID:
          type: string
          $ref: '#/components/schemas/common_DID'
        customerRef:
          type: string
    Customer:
      type: object
      required:
        - did
        - vaspDID
      properties:
        id:
          description: Identifier of the Transfer
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        did:
          type: string
          $ref: '#/components/schemas/common_DID'
        vaspDID:
          type: string
          $ref: '#/components/schemas/common_DID'
        customerRef:
          type: string
    IntegrationsRegisterAddressWebhookInput:
      type: object
      required:
        - url
        - params
      properties:
        url:
          description: A URL with HTTPS protocol
          type: string
        params:
          description: All of the query params needed appended in string format
          type: string
          pattern: ^\?([\w-]+(=[\w-]*)?(&[\w-]+(=[\w-]*)?)*)?$
    common_RegisterAddressWebhookResponse:
      type: object
      properties:
        secret:
          type: string
    common_DeleteAddressWebhookResponse:
      type: object
      properties:
        isDeleted:
          type: boolean
        message:
          type: string
    IntegrationConfigTxNotificationInput:
      type: object
      required:
        - vaspDID
        - callbackUrl
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        callbackUrl:
          description: Callback URL
          type: string
    IntegrationInfoTxNotification:
      type: object
      required:
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        callbackUrl:
          description: Callback URL
          type: string
    BlockchainAnalyticsProviders:
      description: Blockchain Analytics Providers
      type: string
      enum:
        - CHAINALYSIS
        - ELLIPTIC
        - CRYSTAL
        - TRM
    SanctionListProviders:
      description: Sanction List Providers
      type: string
      enum:
        - REFINITIV
        - COMPLY_ADVANTAGE
        - LEXISNEXIS
        - TRM_SANCTIONS
    CustodianProviders:
      description: Custodian Providers
      type: string
      enum:
        - BITGO
    IntegrationsGetThirdPartyProviders:
      type: object
      properties:
        blockchainAnalyticsProviders:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainAnalyticsProviders'
        sanctionListProviders:
          type: array
          items:
            $ref: '#/components/schemas/SanctionListProviders'
        custodianProviders:
          type: array
          items:
            $ref: '#/components/schemas/CustodianProviders'
    GetResponse:
      type: object
      properties:
        url:
          description: Protocol Agent URL
          type: string
    PostRequest:
      type: object
      required:
        - vaspDID
        - url
      properties:
        vaspDID:
          description: VASP DID
          $ref: '#/components/schemas/common_DID'
        url:
          description: Protocol Agent URL
          type: string
    DeleteRequest:
      type: object
      required:
        - vaspDID
        - url
      properties:
        vaspDID:
          description: VASP DID
          $ref: '#/components/schemas/common_DID'
        url:
          description: Protocol Agent URL
          type: string
    AgentAddressDiscoveryRequest:
      type: object
      required:
        - id
        - message
        - payload
      properties:
        id:
          description: Address Discovery ID
          type: string
        message:
          description: Agent Message
          type: string
          enum:
            - address_discovery
        payload:
          description: Payload of the message
          type: object
          required:
            - address
            - asset
            - vaspDID
          properties:
            address:
              description: Blockchain address
              type: string
            asset:
              description: Asset type
              type: string
            vaspDID:
              description: Destination Address
              type: string
              nullable: true
    SetWebhookInput:
      type: object
      required:
        - vaspDID
        - url
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        url:
          description: Callback URL
          type: string
    DeleteWebhookInput:
      type: object
      required:
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
    common_VaspFields:
      description: List of VASP fields
      type: object
      properties:
        companyName:
          description: Company name field
          type: string
        jurisdiction:
          description: Jurisdiction of the company
          type: string
    common_UserFields:
      description: List of User fields
      type: object
      properties:
        name:
          description: Name of the user
          type: string
    tf_UserVASPCreate:
      type: object
      properties:
        vaspFields:
          $ref: '#/components/schemas/common_VaspFields'
        userFields:
          $ref: '#/components/schemas/common_UserFields'
    common_Documents:
      description: List of documents
      type: array
      items:
        type: object
        properties:
          locationUrl:
            type: string
          mimeType:
            type: string
          name:
            type: string
    tf_VASPInfo:
      type: object
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        fields:
          $ref: '#/components/schemas/common_IdentityFields'
        documents:
          $ref: '#/components/schemas/common_Documents'
        hasAdmin:
          type: boolean
        isActiveSender:
          type: boolean
        isActiveReceiver:
          type: boolean
    tf_VASPInfoSimple:
      type: object
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        name:
          type: string
        website:
          type: string
        logo:
          type: string
        incorporationCountry:
          type: string
        documents:
          type: string
        hasAdmin:
          type: boolean
        isNotifiable:
          type: boolean
        isActiveSender:
          type: boolean
        isActiveReceiver:
          type: boolean
        issuers:
          type: string
    PaginationOrder:
      description: Field to order by
      type: string
      pattern: ^([ A-Za-z]+(:(ASC|DESC))?(:NULLS (FIRST|LAST))?(,?))+$
    common_PaginationInformation:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PaginationPage'
        per_page:
          $ref: '#/components/schemas/PaginationPerPage'
        order:
          $ref: '#/components/schemas/PaginationOrder'
        total:
          type: integer
    tf_VASPListSimple:
      type: object
      properties:
        vasps:
          description: List of VASPInfoSimple
          type: array
          items:
            $ref: '#/components/schemas/tf_VASPInfoSimple'
        pagination:
          $ref: '#/components/schemas/common_PaginationInformation'
    tf_VASPUpdate:
      type: object
      required:
        - fields
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        fields:
          $ref: '#/components/schemas/common_IdentityFields'
    UserVASPList:
      type: object
      properties:
        claimable:
          description: List of VASPInfoSimple
          type: array
          items:
            $ref: '#/components/schemas/tf_VASPInfoSimple'
        joinable:
          description: List of VASPInfoSimple
          type: array
          items:
            $ref: '#/components/schemas/tf_VASPInfoSimple'
        loginable:
          description: List of VASPInfoSimple
          type: array
          items:
            $ref: '#/components/schemas/tf_VASPInfoSimple'
    VASPTopCounterParty:
      type: object
      properties:
        vaspDID:
          type: string
          $ref: '#/components/schemas/common_DID'
        vaspName:
          type: string
        vaspLogoURL:
          type: string
          nullable: true
        jurisdiction:
          type: string
          nullable: true
        totalIncomingTransactions:
          type: number
        totalOutgoingTransactions:
          type: number
        travelRuleIncomingTransactions:
          type: number
        travelRuleOutgoingTransactions:
          type: number
        sendsTravelRuleData:
          type: boolean
        repliesTravelRuleData:
          type: boolean
        isVerified:
          type: boolean
        isClaimed:
          type: boolean
        isInNetwork:
          type: boolean
    Settings:
      type: object
      properties:
        autoconfirm:
          type: boolean
        statusToProcessBlockchain:
          enum:
            - CREATED
            - SENT
            - ACK
            - ACCEPTED
            - null
          type: string
        vaspDiscoverability:
          type: boolean
        autoredirect:
          type: boolean
    OutgoingRequests:
      type: string
      enum:
        - outgoing-requests
    DocumentType:
      description: Accepted document type
      type: string
      enum:
        - DDQ for Travel Rule Data Sharing
    DocumentRequestStatus:
      description: Status of a document request
      type: string
      enum:
        - WAITING_FOR_INFORMATION
        - PENDING
        - APPROVED
        - DECLINED
        - REVOKED
    DocumentRequest:
      description: Document request
      type: object
      properties:
        documentType:
          $ref: '#/components/schemas/DocumentType'
        status:
          $ref: '#/components/schemas/DocumentRequestStatus'
    TrustFrameworkVASPNotFoundError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: TrustFrameworkVASPNotFoundError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: no VASP found with vaspDID
            stack:
              description: Error stack message
              type: string
    TrustFrameworkUserDoesNotExistOnVASP:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - vaspDID
          properties:
            name:
              description: Name of the error
              type: string
              example: TrustFrameworkUserDoesNotExistOnVASP
            code:
              description: HTTP status
              type: string
              example: 401
            message:
              description: Error message
              type: string
              example: Not a user of the VASP
            stack:
              description: Error stack message
              type: string
    DocumentAccessAction:
      type: string
      enum:
        - REQUEST
        - APPROVE
        - DECLINE
        - REVOKE
    TransactionID:
      description: Identifier of the Transfer
      type: string
      format: uuid
      example: 123e4567-e89b-12d3-a456-426614174000
    TransactionStatus:
      description: >
        Status of the Transfer

        * `SAVED` Transfer stored.

        * `MISSING_BENEFICIARY_DATA` TravelRule: Transfer Information is missing
        beneficiary data.

        * `NEW` TravelRule: Transfer Information was created, but not sent yet.

        * `WAITING_FOR_INFORMATION` TravelRule: Transfer Information is waiting
        for information to send.

        * `SENT` TravelRule: Transfer Information was sent (TRLight/TRP)

        * `REJECTED` TravelRule: Transfer rejected (TRP/Sygna)

        * `DECLINED` TravelRule: Transfer declined (TRP/Sygna)

        * `ACK` TravelRule: Destination blockchain address belongs to
        beneficiary confirmed.

        * `CANCELLED` Transfer cancelled.

        * `INCOMPLETE` Transfer created only with Blockchain Data (called by
        Beneficiary).

        * `ACCEPTED` Transfer accepted.

        * `NOT_READY` Transfer not ready.
      type: string
      enum:
        - SAVED
        - MISSING_BENEFICIARY_DATA
        - NEW
        - WAITING_FOR_INFORMATION
        - SENT
        - REJECTED
        - DECLINED
        - ACK
        - CANCELLED
        - INCOMPLETE
        - ACCEPTED
        - NOT_READY
    TransactionType:
      description: >
        Type of the Transfer

        * `BELOW_THRESHOLD` Transfer is below all threshold.

        * `NON_CUSTODIAL` Transfer is on a customer owned wallet. Proof
        required.

        * `TRAVELRULE` Transfer is between VASPs. TravelRule transfer created.

        * `UNKNOWN` Transfer with any missing information.
      type: string
      enum:
        - BELOW_THRESHOLD
        - NON_CUSTODIAL
        - TRAVELRULE
        - UNKNOWN
    TransactionBlockchainInfo:
      description: Information about the transaction on the blockchain
      type: object
      required:
        - destination
      properties:
        txHash:
          description: Transaction txHash
          type: string
        origin:
          description: Originator Address
          type: string
        destination:
          description: Destination Address
          type: string
    Text:
      description: A character string
      type: string
      pattern: ^.+$
    NaturalPersonNameTypeCode:
      description: >
        A single value corresponding to the nature of name being adopted.

        * `ALIA` Alias name  - A name other than the legal name by which a
        natural person is also known.

        * `BIRT` Name at birth - The name given to a natural person at birth.

        * `MAID` Maiden name - The original name of a natural person who has
        changed their name after marriage.

        * `LEGL` Legal name - The name that identifies a natural person for
        legal, official or administrative purposes.

        * `MISC` Unspecified - A name by which a natural person may be known but
        which cannot otherwise be categorized or the category of which the
        sender is unable to determine.
      type: string
      enum:
        - ALIA
        - BIRT
        - MAID
        - LEGL
        - MISC
    NaturalPersonNameID:
      type: object
      properties:
        primaryIdentifier:
          $ref: '#/components/schemas/Text'
        secondaryIdentifier:
          $ref: '#/components/schemas/Text'
        nameIdentifierType:
          $ref: '#/components/schemas/NaturalPersonNameTypeCode'
    LocalNaturalPersonNameID:
      type: object
      properties:
        primaryIdentifier:
          $ref: '#/components/schemas/Text'
        secondaryIdentifier:
          $ref: '#/components/schemas/Text'
        nameIdentifierType:
          $ref: '#/components/schemas/NaturalPersonNameTypeCode'
    NaturalPersonName:
      type: object
      required:
        - nameIdentifier
      properties:
        nameIdentifier:
          description: full name separated into primary and secondary identifier.
          type: array
          items:
            $ref: '#/components/schemas/NaturalPersonNameID'
        localNameIdentifier:
          description: >-
            full name separated into primary and secondary identifier using
            local characters.
          type: array
          items:
            $ref: '#/components/schemas/LocalNaturalPersonNameID'
        phoneticNameIdentifier:
          description: >-
            Alternate representation of a name that corresponds to the manner
            the name is pronounced.
          type: array
          items:
            $ref: '#/components/schemas/LocalNaturalPersonNameID'
    AddressTypeCode:
      description: >
        Identifies the nature of the address.

        * `HOME` Residential - Address is the home address.

        * `BIZZ` Business - Address is the business address.

        * `GEOG` Geographic - Address is the unspecified physical (geographical)
        address suitable for identification of the natural or legal person.
      type: string
      enum:
        - HOME
        - BIZZ
        - GEOG
    ivms101_CountryCode:
      description: >-
        two alphabetic characters representing an ISO-3166 Alpha-2 country,
        including the code ‘XX’ to represent ‘an indicator for unknown States,
        other entities or organisations
      type: string
      pattern: ^[A-Z]{2}$
    ivms101_Address:
      type: object
      properties:
        addressType:
          $ref: '#/components/schemas/AddressTypeCode'
        department:
          $ref: '#/components/schemas/Text'
        subDepartment:
          $ref: '#/components/schemas/Text'
        streetName:
          $ref: '#/components/schemas/Text'
        buildingNumber:
          $ref: '#/components/schemas/Text'
        buildingName:
          $ref: '#/components/schemas/Text'
        floor:
          $ref: '#/components/schemas/Text'
        postBox:
          $ref: '#/components/schemas/Text'
        room:
          $ref: '#/components/schemas/Text'
        postCode:
          $ref: '#/components/schemas/Text'
        townName:
          $ref: '#/components/schemas/Text'
        townLocationName:
          $ref: '#/components/schemas/Text'
        districtName:
          $ref: '#/components/schemas/Text'
        countrySubDivision:
          $ref: '#/components/schemas/Text'
        addressLine:
          description: >-
            Information that locates and identifies a specific address, as
            defined by postal services, presented in free format text.
          type: array
          items:
            $ref: '#/components/schemas/Text'
        country:
          $ref: '#/components/schemas/ivms101_CountryCode'
    NationalIdentifierTypeCode:
      description: >
        Identifies the national identification type.

        * `ARNU` Alien registration number - Number assigned by a government
        agency to identify foreign nationals.

        * `CCPT` Passport number - Number assigned by a passport authority.

        * `RAID` Registration authority identifier - Identifier of a legal
        entity as maintained by a registration authority.

        * `DRLC` Driver license number - Number assigned to a driver's license.

        * `FIIN` Foreign investment identity number - Number assigned to a
        foreign investor (other than the alien number).

        * `TXID` Tax identification number - Number assigned by a tax authority
        to an entity.

        * `SOCS` Social security number - Number assigned by a social security
        agency.

        * `IDCD` Identity card number - Number assigned by a national authority
        to an identity card.

        * `LEIX` Legal Entity Identifier - Legal Entity Identifier (LEI)
        assigned in accordance with ISO 17442 11 .

        * `MISC` Unspecified - A national identifier which may be known but
        which cannot otherwise be categorized or the category of which the
        sender is unable to determine.
      type: string
      enum:
        - ARNU
        - CCPT
        - RAID
        - DRLC
        - FIIN
        - TXID
        - SOCS
        - IDCD
        - LEIX
        - MISC
    NationalIdentification:
      type: object
      required:
        - nationalIdentifier
        - nationalIdentifierType
      properties:
        nationalIdentifier:
          $ref: '#/components/schemas/Text'
        nationalIdentifierType:
          $ref: '#/components/schemas/NationalIdentifierTypeCode'
        countryOfIssue:
          $ref: '#/components/schemas/ivms101_CountryCode'
        registrationAuthority:
          $ref: '#/components/schemas/Text'
    Date:
      description: >-
        A point in time, represented as a day within the calendar year.
        Compliant with ISO 8601. (YYYY-MM-DD)
      type: string
      pattern: ^([0-9]{4})-([0-9]{2})-([0-9]{2})$
    DateAndPlaceOfBirth:
      type: object
      required:
        - dateOfBirth
        - placeOfBirth
      properties:
        dateOfBirth:
          $ref: '#/components/schemas/Date'
        placeOfBirth:
          $ref: '#/components/schemas/Text'
    NaturalPerson:
      type: object
      required:
        - name
      properties:
        name:
          description: the distinct words used as identification for an individual
          type: array
          items:
            $ref: '#/components/schemas/NaturalPersonName'
        geographicAddress:
          description: >-
            the particulars of a location at which a person may be communicated
            with.
          type: array
          items:
            $ref: '#/components/schemas/ivms101_Address'
        nationalIdentification:
          $ref: '#/components/schemas/NationalIdentification'
        customerIdentification:
          $ref: '#/components/schemas/Text'
        dateAndPlaceOfBirth:
          $ref: '#/components/schemas/DateAndPlaceOfBirth'
        countryOfResidence:
          $ref: '#/components/schemas/ivms101_CountryCode'
    LegalPersonNameTypeCode:
      description: >
        A single value corresponding to the nature of name being specified for
        the legal person.

        * `LEGL` Legal name - Official name under which an organisation is
        registered.

        * `SHRT` Short name - Specifies the short name of the organisation.

        * `TRAD` Trading name - Name used by a business for commercial purposes,
        although its registered legal name, used for contracts and other formal
        situations, may be another.
      type: string
      enum:
        - LEGL
        - SHRT
        - TRAD
    LegalPersonNameID:
      type: object
      properties:
        legalPersonName:
          $ref: '#/components/schemas/Text'
        legalPersonNameIdentifierType:
          $ref: '#/components/schemas/LegalPersonNameTypeCode'
    LocalLegalPersonNameID:
      type: object
      properties:
        legalPersonName:
          $ref: '#/components/schemas/Text'
        legalPersonNameIdentifierType:
          $ref: '#/components/schemas/LegalPersonNameTypeCode'
    LegalPersonName:
      type: object
      required:
        - nameIdentifier
      properties:
        nameIdentifier:
          description: The name and type of name by which the legal person is known.
          type: array
          items:
            $ref: '#/components/schemas/LegalPersonNameID'
        localNameIdentifier:
          description: >-
            The name and type of name by which the legal person is known using
            local characters.
          type: array
          items:
            $ref: '#/components/schemas/LocalLegalPersonNameID'
        phoneticNameIdentifier:
          description: >-
            The name and type of name by which the legal person is known using
            local characters.
          type: array
          items:
            $ref: '#/components/schemas/LocalLegalPersonNameID'
    LegalPerson:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/LegalPersonName'
        geographicAddress:
          type: array
          items:
            $ref: '#/components/schemas/ivms101_Address'
        customerNumber:
          $ref: '#/components/schemas/Text'
        nationalIdentification:
          $ref: '#/components/schemas/NationalIdentification'
        dateOfRegistration:
          $ref: '#/components/schemas/Date'
        countryOfRegistration:
          $ref: '#/components/schemas/ivms101_CountryCode'
    ivms101_Person:
      type: object
      properties:
        naturalPerson:
          $ref: '#/components/schemas/NaturalPerson'
        legalPerson:
          $ref: '#/components/schemas/LegalPerson'
    ivms101_Originator:
      description: >-
        The originator is defined in Section 1.1 as the account holder who
        allows the VA transfer from that account or, where there is no account,
        the natural or legal person that places the order with the originating
        VASP to perform the VA transfer.
      type: object
      required:
        - originatorPersons
      properties:
        originatorPersons:
          description: >-
            the account holder who allows the VA transfer from that account or,
            where there is no account, the natural or legal person that places
            the order with the originating VASP to perform the VA transfer.
          type: array
          items:
            $ref: '#/components/schemas/ivms101_Person'
        accountNumber:
          description: >-
            Identifier of an account that is used to process the transfer. The
            value for this element is case-sensitive.
          type: array
          items:
            $ref: '#/components/schemas/Text'
    ivms101_Beneficiary:
      description: >-
        The beneficiary is defined in Section 1.1 as the natural or legal person
        or legal arrangement who is identified by the originator as the receiver
        of the requested VA transfer.
      type: object
      required:
        - beneficiaryPersons
      properties:
        beneficiaryPersons:
          description: >-
            the natural or legal person or legal arrangement who is identified
            by the originator as the receiver of the requested VA transfer.
          type: array
          items:
            $ref: '#/components/schemas/ivms101_Person'
        accountNumber:
          description: >-
            Identifier of an account that is used to process the transfer. The
            value for this element is case-sensitive.
          type: array
          items:
            $ref: '#/components/schemas/Text'
    OriginatingVASP:
      description: >-
        The originating VASP is defined in Section 1.1 as the VASP which
        initiates the VA transfer, and transfers the VA upon receiving the
        request for a VA transfer on behalf of the originator.
      type: object
      properties:
        originatingVASP:
          $ref: '#/components/schemas/ivms101_Person'
    BeneficiaryVASP:
      description: >-
        The beneficiary is defined in Section 1.1 as the VASP which receives the
        transfer of a virtual asset from the originating VASP directly or
        through an intermediary VASP and makes the funds available to the
        beneficiary.
      type: object
      properties:
        beneficiaryVASP:
          $ref: '#/components/schemas/ivms101_Person'
    ivms101_Number:
      description: Number represented as an integer (18 digits)
      type: integer
      format: int64
    IntermediaryVASP:
      type: object
      required:
        - intermediaryVASP
        - sequence
      properties:
        intermediaryVASP:
          $ref: '#/components/schemas/ivms101_Person'
        sequence:
          $ref: '#/components/schemas/ivms101_Number'
    TransferPath:
      description: >-
        The transfer path refers to the intermediary VASP(s) participating in a
        serial chain that receive(s) and retransmit(s) a VA transfer on behalf
        of the originating VASP and the beneficiary VASP, or another
        intermediary VASP, together with their corresponding sequence number.
      type: object
      properties:
        transferPath:
          description: >-
            the intermediary VASP(s) participating in a serial chain that
            receive and retransmit a VA transfer on behalf of the originating
            VASP and the beneficiary VASP, or another intermediary VASP,
            together with their corresponding sequence number.
          type: array
          items:
            $ref: '#/components/schemas/IntermediaryVASP'
    TransliterationMethodCode:
      description: >
        Identifies the national script from which transliteration to Latin
        script is applied.

        * `arab` Arabic (Arabic language) - ISO 233-2:1993

        * `aran` Arabic (Persian language) - ISO 233-3:1999

        * `armn` Armenian - ISO 9985:1996

        * `cyrl` Cyrillic - ISO 9:1995

        * `deva` Devanagari & related Indic - ISO 15919:2001

        * `geor` Georgian - ISO 9984:1996

        * `grek` Greek - ISO 843:1997

        * `hani` Han (Hanzi, Kanji, Hanja) - ISO 7098:2015

        * `hebr` Hebrew - ISO 259-2:1994

        * `kana` Kana - ISO 3602:1989

        * `kore` Korean - Revised Romanization of Korean

        * `thai` Thai - ISO 11940-2:2007

        * `othr` Script other than those listed above - Unspecified
      type: string
      enum:
        - arab
        - aran
        - armn
        - cyrl
        - deva
        - geor
        - grek
        - hani
        - hebr
        - kana
        - kore
        - thai
        - othr
    PayloadMetadata:
      description: Data describing the contents of the payload.
      type: object
      properties:
        transliterationMethod:
          description: >-
            the method used to map from a national system of writing to Latin
            script.
          type: array
          items:
            $ref: '#/components/schemas/TransliterationMethodCode'
    ivms101_IVMS101:
      type: object
      properties:
        originator:
          $ref: '#/components/schemas/ivms101_Originator'
        beneficiary:
          $ref: '#/components/schemas/ivms101_Beneficiary'
        originatingVASP:
          $ref: '#/components/schemas/OriginatingVASP'
        beneficiaryVASP:
          $ref: '#/components/schemas/BeneficiaryVASP'
        transferPath:
          $ref: '#/components/schemas/TransferPath'
        payloadMetadata:
          $ref: '#/components/schemas/PayloadMetadata'
    tr_TravelRuleProtocol:
      type: string
      enum:
        - TRLight
        - TRP
        - OpenVASP
      example: TRLight
    ProtocolData:
      type: object
      properties:
        trLightData:
          description: TRLight Procotol data
          type: object
          properties:
            notificationEmails:
              description: Notification emails
              type: array
              items:
                type: string
    OwnershipProof:
      description: Ownership Proof data
      type: object
      properties:
        type:
          description: Type
          type: string
        proof:
          description: Proof
          type: string
    TransactionAction:
      type: object
      properties:
        hash:
          description: Credential Hash
          type: string
        issuerDID:
          $ref: '#/components/schemas/common_DID'
        action:
          description: Action executed
          type: string
        actionData:
          description: Action Data
          type: string
    pii_NaturalPersonNameID:
      type: object
      properties:
        primaryIdentifier:
          $ref: '#/components/schemas/Text'
        secondaryIdentifier:
          $ref: '#/components/schemas/Text'
        nameIdentifierType:
          $ref: '#/components/schemas/Text'
    pii_LocalNaturalPersonNameID:
      type: object
      properties:
        primaryIdentifier:
          $ref: '#/components/schemas/Text'
        secondaryIdentifier:
          $ref: '#/components/schemas/Text'
        nameIdentifierType:
          $ref: '#/components/schemas/Text'
    pii_NaturalPersonName:
      type: object
      required:
        - nameIdentifier
      properties:
        nameIdentifier:
          description: full name separated into primary and secondary identifier.
          type: array
          items:
            $ref: '#/components/schemas/pii_NaturalPersonNameID'
        localNameIdentifier:
          description: >-
            full name separated into primary and secondary identifier using
            local characters.
          type: array
          items:
            $ref: '#/components/schemas/pii_LocalNaturalPersonNameID'
        phoneticNameIdentifier:
          description: >-
            Alternate representation of a name that corresponds to the manner
            the name is pronounced.
          type: array
          items:
            $ref: '#/components/schemas/pii_LocalNaturalPersonNameID'
    pii_Address:
      type: object
      properties:
        addressType:
          $ref: '#/components/schemas/Text'
        department:
          $ref: '#/components/schemas/Text'
        subDepartment:
          $ref: '#/components/schemas/Text'
        streetName:
          $ref: '#/components/schemas/Text'
        buildingNumber:
          $ref: '#/components/schemas/Text'
        buildingName:
          $ref: '#/components/schemas/Text'
        floor:
          $ref: '#/components/schemas/Text'
        postBox:
          $ref: '#/components/schemas/Text'
        room:
          $ref: '#/components/schemas/Text'
        postCode:
          $ref: '#/components/schemas/Text'
        townName:
          $ref: '#/components/schemas/Text'
        townLocationName:
          $ref: '#/components/schemas/Text'
        districtName:
          $ref: '#/components/schemas/Text'
        countrySubDivision:
          $ref: '#/components/schemas/Text'
        addressLine:
          description: >-
            Information that locates and identifies a specific address, as
            defined by postal services, presented in free format text.
          type: array
          items:
            $ref: '#/components/schemas/Text'
        country:
          $ref: '#/components/schemas/Text'
    pii_NationalIdentification:
      type: object
      required:
        - nationalIdentifier
        - nationalIdentifierType
      properties:
        nationalIdentifier:
          $ref: '#/components/schemas/Text'
        nationalIdentifierType:
          $ref: '#/components/schemas/Text'
        countryOfIssue:
          $ref: '#/components/schemas/Text'
        registrationAuthority:
          $ref: '#/components/schemas/Text'
    pii_DateAndPlaceOfBirth:
      type: object
      required:
        - dateOfBirth
        - placeOfBirth
      properties:
        dateOfBirth:
          $ref: '#/components/schemas/Text'
        placeOfBirth:
          $ref: '#/components/schemas/Text'
    pii_NaturalPerson:
      type: object
      required:
        - name
      properties:
        name:
          description: the distinct words used as identification for an individual
          type: array
          items:
            $ref: '#/components/schemas/pii_NaturalPersonName'
        geographicAddress:
          description: >-
            the particulars of a location at which a person may be communicated
            with.
          type: array
          items:
            $ref: '#/components/schemas/pii_Address'
        nationalIdentification:
          $ref: '#/components/schemas/pii_NationalIdentification'
        customerIdentification:
          $ref: '#/components/schemas/Text'
        dateAndPlaceOfBirth:
          $ref: '#/components/schemas/pii_DateAndPlaceOfBirth'
        countryOfResidence:
          $ref: '#/components/schemas/Text'
    pii_LegalPersonNameID:
      type: object
      properties:
        legalPersonName:
          $ref: '#/components/schemas/Text'
        legalPersonNameIdentifierType:
          $ref: '#/components/schemas/Text'
    pii_LocalLegalPersonNameID:
      type: object
      properties:
        legalPersonName:
          $ref: '#/components/schemas/Text'
        legalPersonNameIdentifierType:
          $ref: '#/components/schemas/Text'
    pii_LegalPersonName:
      type: object
      required:
        - nameIdentifier
      properties:
        nameIdentifier:
          description: The name and type of name by which the legal person is known.
          type: array
          items:
            $ref: '#/components/schemas/pii_LegalPersonNameID'
        localNameIdentifier:
          description: >-
            The name and type of name by which the legal person is known using
            local characters.
          type: array
          items:
            $ref: '#/components/schemas/pii_LocalLegalPersonNameID'
        phoneticNameIdentifier:
          description: >-
            The name and type of name by which the legal person is known using
            local characters.
          type: array
          items:
            $ref: '#/components/schemas/pii_LocalLegalPersonNameID'
    pii_LegalPerson:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/pii_LegalPersonName'
        geographicAddress:
          type: array
          items:
            $ref: '#/components/schemas/pii_Address'
        customerNumber:
          $ref: '#/components/schemas/Text'
        nationalIdentification:
          $ref: '#/components/schemas/pii_NationalIdentification'
        dateOfRegistration:
          $ref: '#/components/schemas/Text'
        countryOfRegistration:
          $ref: '#/components/schemas/Text'
    pii_Person:
      type: object
      properties:
        naturalPerson:
          $ref: '#/components/schemas/pii_NaturalPerson'
        legalPerson:
          $ref: '#/components/schemas/pii_LegalPerson'
    pii_Originator:
      description: >-
        The originator is defined in Section 1.1 as the account holder who
        allows the VA transfer from that account or, where there is no account,
        the natural or legal person that places the order with the originating
        VASP to perform the VA transfer.
      type: object
      required:
        - originatorPersons
      properties:
        originatorPersons:
          description: >-
            the account holder who allows the VA transfer from that account or,
            where there is no account, the natural or legal person that places
            the order with the originating VASP to perform the VA transfer.
          type: array
          items:
            $ref: '#/components/schemas/pii_Person'
        accountNumber:
          description: >-
            Identifier of an account that is used to process the transfer. The
            value for this element is case-sensitive.
          type: array
          items:
            $ref: '#/components/schemas/Text'
    pii_Beneficiary:
      description: >-
        The beneficiary is defined in Section 1.1 as the natural or legal person
        or legal arrangement who is identified by the originator as the receiver
        of the requested VA transfer.
      type: object
      required:
        - beneficiaryPersons
      properties:
        beneficiaryPersons:
          description: >-
            the natural or legal person or legal arrangement who is identified
            by the originator as the receiver of the requested VA transfer.
          type: array
          items:
            $ref: '#/components/schemas/pii_Person'
        accountNumber:
          description: >-
            Identifier of an account that is used to process the transfer. The
            value for this element is case-sensitive.
          type: array
          items:
            $ref: '#/components/schemas/Text'
    pii_OriginatingVASP:
      description: >-
        The originating VASP is defined in Section 1.1 as the VASP which
        initiates the VA transfer, and transfers the VA upon receiving the
        request for a VA transfer on behalf of the originator.
      type: object
      properties:
        originatingVASP:
          $ref: '#/components/schemas/pii_Person'
    pii_BeneficiaryVASP:
      description: >-
        The beneficiary is defined in Section 1.1 as the VASP which receives the
        transfer of a virtual asset from the originating VASP directly or
        through an intermediary VASP and makes the funds available to the
        beneficiary.
      type: object
      properties:
        beneficiaryVASP:
          $ref: '#/components/schemas/pii_Person'
    pii_IntermediaryVASP:
      type: object
      required:
        - intermediaryVASP
        - sequence
      properties:
        intermediaryVASP:
          $ref: '#/components/schemas/pii_Person'
        sequence:
          $ref: '#/components/schemas/Text'
    pii_TransferPath:
      description: >-
        The transfer path refers to the intermediary VASP(s) participating in a
        serial chain that receive(s) and retransmit(s) a VA transfer on behalf
        of the originating VASP and the beneficiary VASP, or another
        intermediary VASP, together with their corresponding sequence number.
      type: object
      properties:
        transferPath:
          description: >-
            the intermediary VASP(s) participating in a serial chain that
            receive and retransmit a VA transfer on behalf of the originating
            VASP and the beneficiary VASP, or another intermediary VASP,
            together with their corresponding sequence number.
          type: array
          items:
            $ref: '#/components/schemas/pii_IntermediaryVASP'
    pii_PayloadMetadata:
      description: Data describing the contents of the payload.
      type: object
      properties:
        transliterationMethod:
          description: >-
            the method used to map from a national system of writing to Latin
            script.
          type: array
          items:
            $ref: '#/components/schemas/Text'
    PII_IVMS:
      type: object
      properties:
        originator:
          $ref: '#/components/schemas/pii_Originator'
        beneficiary:
          $ref: '#/components/schemas/pii_Beneficiary'
        originatingVASP:
          $ref: '#/components/schemas/pii_OriginatingVASP'
        beneficiaryVASP:
          $ref: '#/components/schemas/pii_BeneficiaryVASP'
        transferPath:
          $ref: '#/components/schemas/pii_TransferPath'
        payloadMetadata:
          $ref: '#/components/schemas/pii_PayloadMetadata'
    Transaction:
      type: object
      required:
        - id
        - transactionType
        - transactionAsset
        - transactionAmount
        - chargedQuantity
        - beneficiaryDid
      properties:
        id:
          $ref: '#/components/schemas/TransactionID'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        transactionAsset:
          description: Asset symbol (BTC,ETH)
          type: string
          example: ETH
        transactionAmount:
          description: Amount in base unit of the asset (satoshi, wei, etc)
          type: string
          pattern: ^0*[1-9][0-9]*$
        chargedQuantity:
          description: Charged Quantity
          type: number
        amountInLocalCurrency:
          description: Amount in the local currency of the originator VASP's jurisdiction
          type: object
          properties:
            amountInLocalCurrency:
              description: >-
                Amount in the local currency of the originator VASP's
                jurisdiction
              type: number
            currency:
              description: Currency code
              type: string
        beneficiaryAmountInLocalCurrency:
          description: Amount in the local currency of the beneficiary VASP's jurisdiction
          type: object
          properties:
            amountInLocalCurrency:
              description: >-
                Amount in the local currency of the beneficiary VASP's
                jurisdiction
              type: number
            currency:
              description: Currency code
              type: string
        originatorDid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryDid:
          $ref: '#/components/schemas/common_DID'
        originatorVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPdid:
          $ref: '#/components/schemas/common_DID'
        transactionBlockchainInfo:
          $ref: '#/components/schemas/TransactionBlockchainInfo'
        ivms101:
          $ref: '#/components/schemas/ivms101_IVMS101'
        ivms101Encrypted:
          description: Encrypted IVMS101 data
          type: string
        protocol:
          $ref: '#/components/schemas/tr_TravelRuleProtocol'
        protocolData:
          $ref: '#/components/schemas/ProtocolData'
        originatorProof:
          $ref: '#/components/schemas/OwnershipProof'
        beneficiaryProof:
          $ref: '#/components/schemas/OwnershipProof'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionAction'
        pii:
          $ref: '#/components/schemas/PII_IVMS'
    TransactionResolved:
      type: object
      required:
        - id
        - transactionType
        - transactionAsset
        - transactionAmount
        - transactionAssetDecimals
        - chargedQuantity
        - beneficiaryDid
      properties:
        id:
          $ref: '#/components/schemas/TransactionID'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        transactionAsset:
          description: Asset symbol (BTC,ETH)
          type: string
          example: ETH
        transactionAssetDecimals:
          description: Transaction Asset Decimals (eg BTC has 8 decimals)
          type: number
        transactionAmount:
          description: Amount in base unit of the asset (satoshi, wei, etc)
          type: string
          pattern: ^0*[1-9][0-9]*$
        chargedQuantity:
          description: Charged Quantity
          type: number
        amountInLocalCurrency:
          description: Amount in the local currency of the originator VASP's jurisdiction
          type: object
          properties:
            amountInLocalCurrency:
              description: >-
                Amount in the local currency of the originator VASP's
                jurisdiction
              type: number
            currency:
              description: Currency code
              type: string
        originatorDid:
          $ref: '#/components/schemas/common_DID'
        originatorRef:
          description: Originator Customer Ref
          type: string
        beneficiaryDid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryRef:
          description: Beneficiary Customer Ref
          type: string
        originatorVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPdid:
          $ref: '#/components/schemas/common_DID'
        transactionBlockchainInfo:
          $ref: '#/components/schemas/TransactionBlockchainInfo'
        ivms101:
          $ref: '#/components/schemas/ivms101_IVMS101'
        ivms101Encrypted:
          description: Encrypted IVMS101 data
          type: string
        protocol:
          $ref: '#/components/schemas/tr_TravelRuleProtocol'
        protocolData:
          $ref: '#/components/schemas/ProtocolData'
        originatorProof:
          $ref: '#/components/schemas/OwnershipProof'
        beneficiaryProof:
          $ref: '#/components/schemas/OwnershipProof'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionAction'
    PaginateInfo:
      description: Pagination information
      type: object
      properties:
        totalItems:
          type: integer
        itemCount:
          type: integer
        itemsPerPage:
          type: integer
        totalPages:
          type: integer
        currentPage:
          type: integer
    TransactionsList:
      type: object
      properties:
        transactions:
          description: List of Transaction
          type: array
          items:
            $ref: '#/components/schemas/TransactionResolved'
        paginateInfo:
          $ref: '#/components/schemas/PaginateInfo'
    Sort:
      description: >-
        Pass one of the supported fields you want to sort and after the colon
        (:), the direction, ASC or DESC.
      type: string
      enum:
        - transactionAmount:ASC
        - transactionAmount:DESC
        - updatedAt:ASC
        - updatedAt:DESC
        - createdAt:ASC
        - createdAt:DESC
    Group:
      description: >-
        Pass INBOX here to return only the transfers available on your inbox, or
        remove the param to return all transfers
      type: string
      example: INBOX
    TransactionAsset:
      description: Filter your transfers by crypto currencies
      type: string
      example: ETH
    common_TransactionType:
      description: Filter your transfers by type
      type: string
      enum:
        - TRAVELRULE
        - BELOW_THRESHOLD
        - NON_CUSTODIAL
        - UNKNOWN
    Direction:
      description: >-
        Filter your transfers by direction, incoming, outgoing or internal
        transfers
      type: string
      enum:
        - incoming
        - outgoing
        - internal
    common_Date:
      type: string
      format: date
      example: '2023-07-20'
    TransactionValidateRequest:
      type: object
      required:
        - transactionAsset
        - destination
        - transactionAmount
        - originatorVASPdid
        - originatorEqualsBeneficiary
      properties:
        transactionAsset:
          description: Asset symbol (BTC,ETH)
          type: string
          example: ETH
        destination:
          description: Destination Address
          type: string
        transactionAmount:
          description: Amount in base unit of the asset (satoshi, wei, etc)
          type: string
          pattern: ^0*[1-9][0-9]*$
        originatorVASPdid:
          $ref: '#/components/schemas/common_DID'
        originatorEqualsBeneficiary:
          description: Originator and Benefiary are the same person?
          type: boolean
        beneficiaryVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPname:
          description: Beneficiary VASP Name
          type: string
        beneficiaryName:
          description: Beneficiary Name
          type: string
        beneficiaryAccountNumber:
          description: Beneficiary Account Number
          type: string
        beneficiaryAddress:
          $ref: '#/components/schemas/ivms101_Address'
        beneficiaryProof:
          $ref: '#/components/schemas/OwnershipProof'
        travelRuleBehavior:
          description: >-
            Should consider beneficiary's jurisdiction in determining if a
            transfer is of type TRAVEL_RULE
          type: boolean
        network:
          description: Chainalysis network
          type: string
    BlockchainAddressType:
      description: |
        Type of the Blockchain Address
        * `UNKNOWN` Address is not kwown.
        * `HOSTED` Address is hosted by a custodial service.
        * `UNHOSTED` Address is unhosted
      type: string
      enum:
        - UNKNOWN
        - HOSTED
        - UNHOSTED
    TransactionValidateErrors:
      description: >
        Type of the Transfer

        * `beneficiaryNameMissing` Boolean that represents the absence of the
        property `name` inside the beneficiaryPerson.

        * `beneficiaryAccountNumberMissing` Boolean that represents the absence
        of the property `accountNumber` inside the beneficiary object.

        * `beneficiaryAddressMissing` Boolean that represents the absence of the
        property `geographicAddress` inside the beneficiaryPerson.

        * `beneficiaryOwnershipProofMissing` Boolean that represents the absence
        of the property `beneficiaryProof` inside the root object.
      type: array
      enum:
        - beneficiaryNameMissing
        - beneficiaryAccountNumberMissing
        - beneficiaryAddressMissing
        - beneficiaryOwnershipProofMissing
      items:
        type: string
    TransactionValidationResult:
      type: object
      required:
        - isValid
        - type
      properties:
        isValid:
          description: Is transfer valid?
          type: boolean
        type:
          $ref: '#/components/schemas/TransactionType'
        beneficiaryAddressType:
          $ref: '#/components/schemas/BlockchainAddressType'
        addressSource:
          $ref: '#/components/schemas/BlockchainAddressInfoSource'
        beneficiaryVASPname:
          description: Name of the beneficiary VASP
          type: string
        beneficiaryVASPdid:
          description: Name of the beneficiary VASP
          type: string
        errors:
          $ref: '#/components/schemas/TransactionValidateErrors'
    NotabenePaymentError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabenePaymentError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: Problem with payment
            stack:
              description: Error stack message
              type: string
    UnauthorizedError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - message
          properties:
            message:
              description: Error message
              type: string
              example: User is not admin of VASP
    ValidatePartyFields:
      description: Validate transfers based on party
      type: string
      enum:
        - BENEFICIARY
        - ORIGINATOR
        - ALL
    TransactionValidateFullRequest:
      type: object
      required:
        - transactionAsset
        - transactionAmount
        - transactionBlockchainInfo
      properties:
        transactionAsset:
          description: Asset symbol (BTC,ETH)
          type: string
          example: ETH
        transactionAmount:
          description: Amount in base unit of the asset (satoshi, wei, etc)
          type: string
          pattern: ^0*[1-9][0-9]*$
        originatorDid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryDid:
          $ref: '#/components/schemas/common_DID'
        originatorVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPname:
          description: Beneficiary VASP Name
          type: string
        transactionBlockchainInfo:
          $ref: '#/components/schemas/TransactionBlockchainInfo'
        originator:
          $ref: '#/components/schemas/ivms101_Originator'
        beneficiary:
          $ref: '#/components/schemas/ivms101_Beneficiary'
        encrypted:
          description: >-
            Encrypted Personal Identificable Information (obscure schema-less
            value)
          type: string
        protocol:
          $ref: '#/components/schemas/tr_TravelRuleProtocol'
        notificationEmail:
          description: Beneficiary VASP Notification Email
          type: string
        skipBeneficiaryDataValidation:
          description: Disable beneficiary data validation (opportunistic compliance)
          type: boolean
        travelRuleBehavior:
          description: >-
            Should consider beneficiary's jurisdiction in determining if a
            transfer is of type TRAVEL_RULE
          type: boolean
        originatorProof:
          $ref: '#/components/schemas/OwnershipProof'
        beneficiaryProof:
          $ref: '#/components/schemas/OwnershipProof'
        pii:
          $ref: '#/components/schemas/PII_IVMS'
        network:
          description: Chainalysis network
          type: string
        validatePartyFields:
          type: string
          $ref: '#/components/schemas/ValidatePartyFields'
        onBehalfOfMyself:
          description: >-
            Autopopulate originator and beneficiary fields with institution's
            information
          type: boolean
    TransactionFullValidationResult:
      type: object
      required:
        - isValid
        - type
      properties:
        isValid:
          description: Is transfer valid?
          type: boolean
        type:
          $ref: '#/components/schemas/TransactionType'
        beneficiaryAddressType:
          $ref: '#/components/schemas/BlockchainAddressType'
        addressSource:
          $ref: '#/components/schemas/BlockchainAddressInfoSource'
        beneficiaryVASPname:
          description: Name of the beneficiary VASP
          type: string
        errors:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
    NotabeneTransactionError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabeneTransactionError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: TransactionError
            stack:
              description: Error stack message
              type: string
    UserDIDNotAdminforVASPError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: UserDIDNotAdminforVASPError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: User is not admin of VASP
            stack:
              description: Error stack message
              type: string
    NotabenePaymentNoCustomerError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabenePaymentNoCustomerError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: Vasp is not a customer (no customerID)
            stack:
              description: Error stack message
              type: string
    NotabenePaymentNoSubscriptionError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabenePaymentNoSubscriptionError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: Vasp has no subscription
            stack:
              description: Error stack message
              type: string
    NotabeneTransactionNoActiveSubscriptionError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabeneTransactionNoActiveSubscriptionError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: Vasp is not a customer (no customerID)
            stack:
              description: Error stack message
              type: string
    NotabeneTransactionValidationError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabeneTransactionValidationError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: List of missing fields
            stack:
              description: Error stack message
              type: string
    CustomAssetPrice:
      description: Object containing custom asset price if not available in Notabene
      type: object
      required:
        - priceUSD
        - decimals
      properties:
        priceUSD:
          description: Asset Price in USD
          type: number
        decimals:
          description: Asset decimals
          type: number
          example: 18
    DateTime:
      type: string
      format: date-time
    TransactionCreateRequest:
      type: object
      required:
        - transactionAsset
        - transactionAmount
        - originatorVASPdid
        - transactionBlockchainInfo
      properties:
        transactionRef:
          description: >-
            **Idempotency key**: to prevent duplicate transactions and
            proactively manage disruptions arising from the idempotency key
            becoming mandatory in the future, it is highly recommended to
            populate this field with a unique identifier for the transfer
          type: string
        transactionAsset:
          oneOf:
            - description: Asset symbol (BTC,ETH)
              type: string
              example: ETH
            - $ref: '#/components/schemas/CAIP19'
            - $ref: '#/components/schemas/CoingeckoIdAndNetwork'
        transactionAmount:
          description: Amount in base unit of the asset (satoshi, wei, etc)
          type: string
          pattern: ^0*[1-9][0-9]*$
        transactionAssetDecimals:
          description: Asset decimals
          type: number
          example: 18
        customAssetPrice:
          $ref: '#/components/schemas/CustomAssetPrice'
        originatorDid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryDid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryRef:
          type: string
        originatorRef:
          type: string
        originatorVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPdid:
          description: >-
            Beneficiary VASP did - If you do not have this data, we will try to
            resolve it.
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPname:
          description: >-
            Beneficiary VASP Name - If you do not have this data, we will try to
            resolve it.
          type: string
        transactionBlockchainInfo:
          $ref: '#/components/schemas/TransactionBlockchainInfo'
        originator:
          $ref: '#/components/schemas/ivms101_Originator'
        beneficiary:
          $ref: '#/components/schemas/ivms101_Beneficiary'
        encrypted:
          description: >-
            Encrypted Personal Identificable Information (obscure schema-less
            value)
          type: string
        protocol:
          $ref: '#/components/schemas/tr_TravelRuleProtocol'
        notificationEmail:
          description: Beneficiary VASP Notification Email
          type: string
        skipBeneficiaryDataValidation:
          description: Disable beneficiary data validation (opportunistic compliance)
          type: boolean
        travelRuleBehavior:
          description: >-
            Should consider beneficiary's jurisdiction in determining if a
            transfer is of type TRAVEL_RULE
          type: boolean
        originatorProof:
          $ref: '#/components/schemas/OwnershipProof'
        beneficiaryProof:
          $ref: '#/components/schemas/OwnershipProof'
        pii:
          $ref: '#/components/schemas/PII_IVMS'
        network:
          description: Chainalysis network
          type: string
        onBehalfOfMyself:
          description: >-
            Autopopulate originator and beneficiary fields with institution's
            information
          type: boolean
        blockchainTransactionTimestamp:
          $ref: '#/components/schemas/DateTime'
    NotabeneCryptoAssetNotAvailable:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabeneCryptoAssetNotAvailable
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: >-
                Notabene is currently not supporting this asset: WrongAssetName.
                Please contact Notabene customer service to request it.
            stack:
              description: Error stack message
              type: string
    NotabeneTransactionBelowThresholdError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabeneTransactionBelowThresholdError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: >-
                the transaction amount is below minimum threshold to be
                considered for Travel Rule in the current jurisdiction
            stack:
              description: Error stack message
              type: string
    NotabeneTransactionSunriseLimitReachedError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabeneTransactionSunriseLimitReachedError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: User has reached limits of Sunrise tier.
            stack:
              description: Error stack message
              type: string
    NotabeneTransactionInvalidStatusError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          required:
            - name
            - code
            - message
            - stack
          properties:
            name:
              description: Name of the error
              type: string
              example: NotabeneTransactionInvalidStatusError
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: status is not a valid status for action
            stack:
              description: Error stack message
              type: string
    TransactionCancelRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/TransactionID'
        vasp_did:
          $ref: '#/components/schemas/common_DID'
        reason:
          description: Cancel reason
          type: string
    TransactionUpdateRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/TransactionID'
        notificationEmail:
          description: Beneficiary VASP Notification Email
          type: string
          format: email
        txHash:
          description: Transaction txHash
          type: string
        destination:
          description: Destination Blockchain Address
          type: string
        origin:
          description: Origin Blockchain Address
          type: string
        beneficiaryDid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPdid:
          $ref: '#/components/schemas/common_DID'
        originatorVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPname:
          description: Beneficiary VASP Name
          type: string
        beneficiary:
          $ref: '#/components/schemas/ivms101_Beneficiary'
        beneficiaryProof:
          $ref: '#/components/schemas/OwnershipProof'
        originatorDid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryRef:
          type: string
        originatorRef:
          type: string
        originator:
          $ref: '#/components/schemas/ivms101_Originator'
        originatorProof:
          $ref: '#/components/schemas/OwnershipProof'
        protocol:
          $ref: '#/components/schemas/tr_TravelRuleProtocol'
        skipBeneficiaryDataValidation:
          description: Disable beneficiary data validation (opportunistic compliance)
          type: boolean
        isNonCustodial:
          description: Is a Non Custodial Transfer
          type: boolean
        pii:
          $ref: '#/components/schemas/PII_IVMS'
        onBehalfOfMyself:
          description: >-
            Autopopulate originator and beneficiary fields with institution's
            information
          type: boolean
        blockchainTransactionTimestamp:
          $ref: '#/components/schemas/DateTime'
    TransactionNotifyRequest:
      type: object
      required:
        - txHash
        - transactionAmount
        - transactionAsset
        - destination
        - beneficiaryVASPdid
      properties:
        txHash:
          description: Transaction hash
          type: string
        transactionAmount:
          description: Amount in base unit of the asset (satoshi, wei, etc)
          type: string
          pattern: ^0*[1-9][0-9]*$
        transactionAsset:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/CAIP19'
            - $ref: '#/components/schemas/CoingeckoIdAndNetwork'
        transactionAssetDecimals:
          description: Asset decimals
          type: number
          example: 18
        beneficiaryVASPdid:
          description: BeneficiaryVASP did
          type: string
        destination:
          description: Destination Address
          type: string
        origin:
          description: Origin Address
          type: string
        customerRef:
          description: VASP Customer Reference Id
          type: string
        network:
          description: Chainalysis network
          type: string
    TransactionRejectRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/TransactionID'
        reason:
          description: Reject reason
          type: string
    TransactionNotReadyRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/TransactionID'
        reason:
          description: Reason to mark the transfer as not ready
          type: string
    TransactionDeclineRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/TransactionID'
        reason:
          description: Decline reason
          type: string
    BulkAction:
      description: Available bulk actions to take on transactions
      type: string
      enum:
        - accept
        - approve
        - cancel
        - confirm
        - decline
        - reject
        - notReady
        - redirect
    TransactionBulkRequest:
      type: object
      required:
        - action
        - originatorVASPdid
        - beneficiaryVASPdid
      properties:
        action:
          $ref: '#/components/schemas/BulkAction'
        originatorVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPdid:
          $ref: '#/components/schemas/common_DID'
        originAddress:
          description: >-
            (Optional) Limit bulk operations to transactions originating from
            specified blockchain address
          type: string
        destinationAddress:
          description: >-
            (Optional) Limit bulk operations to transactions being sent to
            specified blockchain address
          type: string
        reason:
          description: (Optional) Cancel/Decline/Reject reason
          type: string
        beneficiaryVASPdidTo:
          description: >-
            (Optional) Used for transaction redirection, did of VASP to redirect
            to.
          $ref: '#/components/schemas/common_DID'
    TransactionReceiveRequest:
      type: object
      required:
        - transactionId
        - address
        - asset
        - originatorVASPdid
        - beneficiaryVASPdid
      properties:
        transactionId:
          description: Transaction id
          type: string
        address:
          description: Blockchain address
          type: string
        asset:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/CAIP19'
            - $ref: '#/components/schemas/CoingeckoIdAndNetwork'
        originatorVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPdid:
          $ref: '#/components/schemas/common_DID'
    TransactionUpdateTravelRuleDataRequest:
      type: object
      required:
        - transactionId
        - destinationAddress
        - assetType
        - amount
        - originatorVASPdid
        - beneficiaryVASPdid
      properties:
        transactionId:
          description: Transaction id
          type: string
        destinationAddress:
          description: Blockchain address
          type: string
        assetType:
          description: Notabene Asset Symbol
          type: string
        amount:
          description: Transaction amount
          type: string
        pii:
          $ref: '#/components/schemas/PII_IVMS'
        originatorVASPdid:
          $ref: '#/components/schemas/common_DID'
        beneficiaryVASPdid:
          $ref: '#/components/schemas/common_DID'
    VaspInfo:
      type: object
      required:
        - did
        - name
      properties:
        did:
          $ref: '#/components/schemas/common_DID'
        name:
          description: Name of the VASP
          type: string
          example: Example VASP
    TransactionRuleList:
      type: array
      required:
        - id
        - vaspDID
        - order
        - actionRule
        - ruleCheck
        - ruleValue
        - source
        - createdAt
        - createdBy
      items:
        type: object
        properties:
          id:
            description: Identifier of the transfer Rule
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          vaspDID:
            $ref: '#/components/schemas/common_DID'
          order:
            description: Number that represents the order we should apply a rule per VASP
            type: number
          actionRule:
            description: Action of the rule
            type: string
            enum:
              - APPROVE
              - REJECT
              - NOT_READY
              - SEND_TO_INBOX
          ruleCheck:
            description: Condition to meet to have the action rule set
            type: string
            enum:
              - ALL
              - VASP
              - REVIEWED_VASP_LIST
              - JURISDICTION
              - RISK_SCORE
              - SANCTION_LIST_CHECK
              - TRANSACTION_AMOUNT
              - TRANSACTION_CREATION_TIME
          ruleValue:
            description: Value of the choosen rule
            type: string
          source:
            description: >-
              In the case of rule value beeing riskScore or sanctionListCheck,
              this is the field to fill with service provider
            type: string
          vasps:
            description: >-
              If ruleCheck is of type VASP, all of the vasps involved in the
              rule will be returned
            type: array
            items:
              $ref: '#/components/schemas/VaspInfo'
          jurisdictions:
            description: >-
              If ruleCheck is of type JURISDICTION, the list of jurisdictions
              involved in the rule will be returned
            type: array
            items:
              type: string
              example: US,SG,BR
    Ruleset:
      type: object
      required:
        - order
        - actionRule
        - ruleCheck
        - ruleValue
      properties:
        order:
          description: Number that represents the order we should apply a rule per VASP
          type: number
        actionRule:
          description: Action of the rule
          type: string
          enum:
            - APPROVE
            - REJECT
            - NOT_READY
            - SEND_TO_INBOX
        ruleCheck:
          description: Condition to meet to have the action rule set
          type: string
          enum:
            - ALL
            - VASP
            - REVIEWED_VASP_LIST
            - JURISDICTION
            - RISK_SCORE
            - SANCTION_LIST_CHECK
            - TRANSACTION_AMOUNT
            - TRANSACTION_CREATION_TIME
        ruleValue:
          description: >-
            Value of the choosen rule - For VASP and JURISDICTION, it is
            possible to send multiple values, separated by comma
          type: string
        source:
          description: >-
            In the case of rule value beeing riskScore or sanctionListCheck,
            this is the field to fill with service provider
          type: string
          nullable: true
    TransactionRuleCreateRequestWithDirection:
      type: object
      required:
        - vaspDID
        - ruleSet
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        ruleSet:
          description: Incoming and Outgoing set of rules
          type: object
          properties:
            incoming:
              description: Incoming set of rules
              type: array
              items:
                $ref: '#/components/schemas/Ruleset'
            outgoing:
              description: Outgoing set of rules
              type: array
              items:
                $ref: '#/components/schemas/Ruleset'
    NotabeneRulesEngineError:
      type: object
      required:
        - err
      properties:
        err:
          type: object
          properties:
            name:
              description: Name of the error
              type: string
              example: TrustFrameworkUserDoesNotExistOnVASP
            code:
              description: HTTP status
              type: string
              example: 400
            message:
              description: Error message
              type: string
              example: There are duplicated VASP dids in the request
            stack:
              description: Error stack message
              type: string
    Field:
      description: Field used by the rule
      type: object
      properties:
        field:
          description: Name of the Field
          type: string
    Condition:
      properties:
        type:
          description: Type of the Condition
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
    Rule:
      type: object
      properties:
        type:
          description: Type of the Condition
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
    Threshold:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        threshold:
          description: Threshold of the rule
          type: number
    JurisdictionList:
      type: array
      items:
        type: object
        required:
          - thresholds
          - countryCode
          - currency
        properties:
          thresholds:
            type: array
            items:
              $ref: '#/components/schemas/Threshold'
          countryCode:
            description: Country code in ISO 3166-1 alpha-2 format
            type: string
          currency:
            description: Currency of the country
            type: string
    auth_RolesPermissionsOnVASP:
      type: object
      required:
        - vaspDID
        - permissions
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        role:
          type: string
        permissions:
          type: array
          items:
            type: string
    tf_TrustVASPAction:
      type: object
      properties:
        hash:
          description: Credential Hash
          type: string
        issuerDID:
          $ref: '#/components/schemas/DID'
        action:
          description: Action executed
          type: string
        actionData:
          description: Action Data
          type: string
    tr_TransferInformationStatus:
      description: >
        Status of the Transfer Information * `NEW` Transfer Information was
        created, but not sent yet.

        * `SENT` Transfer Information was sent (TRLight/TRP)

        * `REQUESTED` Destination address requested (OpenVASP/Sygna)

        * `REJECTED` Transfer rejected (TRP/Sygna)

        * `DECLINED` Transfer declined (TRP/Sygna)
      type: string
      enum:
        - NEW
        - SENT
        - REQUESTED
        - REJECTED
        - DECLINED
    tr_TransactionInformation:
      type: object
      properties:
        asset:
          description: Asset symbol (BTC,ETH)
          type: string
          example: ETH
        amount:
          description: Amount in base unit of the asset (satoshi, wei, etc)
          type: string
        blockchainInfo:
          description: Information about the transaction on the blockchain
          type: object
          properties:
            txHash:
              description: Transaction txHash
              type: string
            origin:
              description: Originator Address
              type: string
            destination:
              description: Destination Address
              type: string
          example:
            txHash: 0x00t0x0H0a0s0h0
            origin: 0xoriginAddress
            destination: 0xdestinationAddress
    TransferInformationAction:
      type: object
      properties:
        hash:
          description: Credential Hash
          type: string
        issuerDID:
          $ref: '#/components/schemas/DID'
        action:
          description: Action executed
          type: string
        actionData:
          description: Action Data
          type: string
    CredentialsCreateNewApiRequest:
      type: object
      properties:
        delegateToGateway:
          type: boolean
        limited:
          type: boolean
    ChainalysisGetAddressInfoRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - address
            - asset
          properties:
            address:
              type: string
            asset:
              type: string
            customerDID:
              type: string
            network:
              type: string
    ChainalysisSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - apiKey
          properties:
            apiKey:
              type: string
    Chainalysis2GetAddressInfoRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - address
            - asset
            - assetAmount
          properties:
            address:
              type: string
            asset:
              type: string
            assetAmount:
              type: string
            customerDID:
              type: string
            network:
              type: string
    ChainalysisSetCredentialsRequest1:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - apiKey
          properties:
            apiKey:
              type: string
    LexisNexisPerformSanctionsCheckRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - searchTerm
          properties:
            searchTerm:
              type: string
            entityType:
              type: string
              enum:
                - Individual
                - Business
                - Unknown
            transactionId:
              type: string
    LexisNexisSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - environment
            - clientID
            - userID
            - userPassword
            - apiKey
            - predefinedSearchName
          properties:
            environment:
              type: string
            clientID:
              type: string
            userID:
              type: string
            userPassword:
              type: string
            apiKey:
              type: string
            predefinedSearchName:
              type: string
    TrmGetAddressInfoRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - address
            - asset
          properties:
            address:
              type: string
            asset:
              type: string
    TrmSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - apiKey
          properties:
            apiKey:
              type: string
    TrmSanctionsSanctionsCheckRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - searchTerm
          properties:
            searchTerm:
              type: string
            transactionId:
              type: string
    TrmSanctionsSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - apiKey
          properties:
            apiKey:
              type: string
    CoinfirmGetAddressInfoRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - address
            - asset
          properties:
            address:
              type: string
            asset:
              type: string
            customerDID:
              type: string
    CoinfirmSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - apiKey
          properties:
            apiKey:
              type: string
    BitgoGetAddressInfoRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - address
            - asset
          properties:
            address:
              type: string
            asset:
              type: string
            customerDID:
              type: string
    BitgoSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - apiKey
          properties:
            apiKey:
              type: string
    ComplyAdvantageSanctionsCheckRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - searchTerm
          properties:
            searchTerm:
              type: string
            transactionId:
              type: string
    ComplyAdvantageSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - apiKey
          properties:
            apiKey:
              type: string
            search_profile:
              type: string
            fuzziness:
              type: string
            regionURL:
              description: >
                Use the appropriate ComplyAdvantage root regional, see
                docs[https://docs.complyadvantage.com/api-docs/?javascript#introduction]:
                  * `https://api.complyadvantage.com` - For EU
                  * `https://api.us.complyadvantage.com` - For US
                  * `https://api.ap.complyadvantage.com` - For APAC
                Defaults to EU
              type: string
              enum:
                - https://api.complyadvantage.com
                - https://api.us.complyadvantage.com
                - https://api.ap.complyadvantage.com
    RefinitivSanctionsCheckRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - searchTerm
          properties:
            searchTerm:
              type: string
            entityType:
              type: string
              enum:
                - INDIVIDUAL
                - ORGANISATION
            transactionId:
              type: string
    RefinitivSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - apiKey
            - apiSecret
          properties:
            apiKey:
              type: string
            apiSecret:
              type: string
            groupId:
              type: string
            useClientWatchlist:
              type: boolean
            customFields:
              type: array
              items:
                type: object
                required:
                  - typeId
                  - value
                properties:
                  typeId:
                    type: string
                  value:
                    type: string
    MerkleScienceGetAddressInfoRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - address
            - asset
          properties:
            address:
              type: string
            asset:
              type: string
            customerDID:
              type: string
    MerkleScienceSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - apiKey
          properties:
            apiKey:
              type: string
    EllipticGetAddressInfoRequest:
      type: object
      required:
        - data
        - vaspDID
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        data:
          type: object
          required:
            - address
            - asset
          properties:
            address:
              type: string
            asset:
              type: string
            customerDID:
              type: string
    EllipticSetCredentialsRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - accessKey
            - accessSecret
          properties:
            accessKey:
              type: string
            accessSecret:
              type: string
    ProtocolGatewaysAddressConfirmationResolutionRequest:
      type: object
      required:
        - resolvedVASPdid
      properties:
        requester_vasp_did:
          description: Notabene VASP DID creating the address confirmation request
          $ref: '#/components/schemas/common_DID'
    ProtocolGatewaysReceiveTransferCallbackRequest:
      type: object
      required:
        - status
      properties:
        status:
          description: Status of the transfer resolution in the Protocol Gateways
          type: string
        reason:
          description: Reason for the rejection of the transfer in the Protocol Gateways
          type: string
    TrustFrameworkMarkVaspReviewRequest:
      type: object
      required:
        - reviewedVaspDID
        - reviewValue
      properties:
        reviewedVaspDID:
          description: The VASP being reviewed
          $ref: '#/components/schemas/common_DID'
        reviewValue:
          description: The review value
          type: string
          enum:
            - TRUSTED
            - BLOCKED
            - MANUAL
        note:
          description: Review note
          type: string
    RulesDeleteByIdsRequest:
      type: object
      required:
        - vaspDID
        - ids
      properties:
        vaspDID:
          type: string
        ids:
          type: array
          items:
            type: string
    AddressBookRemoveAddressResponse:
      type: object
      properties: {}
      example: {}
    AuthenticationGetCustomerAccessTokenResponse:
      description: API Token
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        scope:
          type: string
    CredentialsGetAuth0CredentialsResponse:
      type: object
      properties:
        clientId:
          type: string
        delegatedToGateway:
          type: string
    CredentialsCreateNewApiResponse:
      type: object
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
    VaspAdminListVaspUsersResponse:
      description: List of users
      type: array
      items:
        $ref: '#/components/schemas/VASPuser'
    ChainalysisGetAddressInfoResponse:
      type: object
      properties:
        address:
          type: string
        addressType:
          type: string
        asset:
          type: string
        source:
          type: string
        metadata:
          type: object
        custodialVASPdid:
          type: string
        custodialVASPname:
          type: string
        score:
          type: string
    ChainalysisDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    ChainalysisCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    ChainalysisSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    Chainalysis2GetAddressInfoResponse:
      type: object
      properties:
        address:
          type: string
        addressType:
          type: string
        asset:
          type: string
        source:
          type: string
        metadata:
          type: object
        custodialVASPdid:
          type: string
        custodialVASPname:
          type: string
        score:
          type: string
    ChainalysisDeleteCredentials200Response:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    ChainalysisCheckCredentials200Response:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    ChainalysisSetCredentials200Response:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    LexisNexisPerformSanctionsCheckResponse:
      type: object
      properties:
        hasMatches:
          type: boolean
        metadata:
          type: object
        matches:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              score:
                type: string
              reasons:
                type: array
                items:
                  type: string
              comments:
                type: array
                items:
                  type: string
              metadata:
                type: array
                items:
                  type: object
    LexisNexisDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    LexisNexisCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    LexisNexisSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    TrmGetAddressInfoResponse:
      type: object
      properties:
        address:
          type: string
        addressType:
          type: string
        asset:
          type: string
        source:
          type: string
        metadata:
          type: object
        custodialVASPdid:
          type: string
        custodialVASPname:
          type: string
        score:
          type: string
    TrmDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    TrmCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    TrmSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    TrmSanctionsSanctionsCheckResponse:
      type: object
      properties:
        hasMatches:
          type: boolean
        metadata:
          type: object
        matches:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              score:
                type: string
              reasons:
                type: array
                items:
                  type: string
              comments:
                type: array
                items:
                  type: string
              metadata:
                type: array
                items:
                  type: object
    TrmSanctionsDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    TrmSanctionsCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    TrmSanctionsSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    CoinfirmGetAddressInfoResponse:
      type: object
      properties:
        address:
          type: string
        addressType:
          type: string
        asset:
          type: string
        source:
          type: string
        metadata:
          type: object
        custodialVASPdid:
          type: string
        custodialVASPname:
          type: string
        score:
          type: string
    CoinfirmDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    CoinfirmCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    CoinfirmSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    BitgoGetAddressInfoResponse:
      type: object
      properties:
        address:
          type: string
        addressType:
          type: string
        asset:
          type: string
        source:
          type: string
        metadata:
          type: object
        custodialVASPdid:
          type: string
        custodialVASPname:
          type: string
    BitgoDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    BitgoCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    BitgoSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    ComplyAdvantageSanctionsCheckResponse:
      type: object
      properties:
        hasMatches:
          type: boolean
        metadata:
          type: object
        matches:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              score:
                type: string
              reasons:
                type: array
                items:
                  type: string
              comments:
                type: array
                items:
                  type: string
              metadata:
                type: array
                items:
                  type: object
    ComplyAdvantageDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    ComplyAdvantageCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    ComplyAdvantageSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    RefinitivSanctionsCheckResponse:
      type: object
      properties:
        hasMatches:
          type: boolean
        metadata:
          type: object
        matches:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              score:
                type: string
              reasons:
                type: array
                items:
                  type: string
              comments:
                type: array
                items:
                  type: string
              metadata:
                type: array
                items:
                  type: object
    RefinitivDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    RefinitivCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    RefinitivSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    MerkleScienceGetAddressInfoResponse:
      type: object
      properties:
        address:
          type: string
        addressType:
          type: string
        asset:
          type: string
        source:
          type: string
        metadata:
          type: object
        custodialVASPdid:
          type: string
        custodialVASPname:
          type: string
        score:
          type: string
    MerkleScienceDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    MerkleScienceCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    MerkleScienceSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    EllipticGetAddressInfoResponse:
      type: object
      properties:
        address:
          type: string
        addressType:
          type: string
        asset:
          type: string
        source:
          type: string
        metadata:
          type: object
        custodialVASPdid:
          type: string
        custodialVASPname:
          type: string
        score:
          type: string
    EllipticDeleteCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenDeleted:
          type: boolean
        message:
          type: string
    EllipticCheckCredentialsResponse:
      type: object
      properties:
        hasApiCredentials:
          type: boolean
        message:
          type: string
    EllipticSetCredentialsResponse:
      type: object
      properties:
        hasCredentialsBeenStored:
          type: boolean
        message:
          type: string
    TrustFrameworkDeleteVaspResponse:
      type: object
      properties:
        deletedVASP:
          description: Has the VASP been deleted?
          type: boolean
        message:
          description: Success message
          type: string
    TrustFrameworkMarkVaspReviewResponse:
      type: object
      properties:
        vaspDID:
          $ref: '#/components/schemas/common_DID'
        reviewedVaspDID:
          $ref: '#/components/schemas/common_DID'
        reviewValue:
          type: string
        note:
          type: string
        createdAt:
          type: string
        createdBy:
          $ref: '#/components/schemas/common_DID'
    TrustFrameworkMarkVaspReview401Response:
      type: object
      properties:
        message:
          description: Not authorized
    TrustFrameworkGetUserVaspListResponse:
      type: object
      properties:
        message:
          description: Invalid user
    TrustFrameworkGetUserVaspList401Response:
      type: object
      properties:
        message:
          description: Not authorized
    TrustFrameworkCreateVaspDidResponse:
      type: object
      properties:
        did:
          type: string
          $ref: '#/components/schemas/common_DID'
    TrustFrameworkGetTopCounterpartyDataResponse:
      type: object
      properties:
        lastUpdated:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/VASPTopCounterParty'
    DocumentsGetLocationResponse:
      type: string
      format: binary
    DocumentsGetLocation400Response:
      type: object
      properties:
        message:
          description: Invalid VaspDID, invalid S3Key
    DocumentsGetLocation401Response:
      type: object
      properties:
        message:
          description: User is not authorized to download the document
    DocumentsGetLocation404Response:
      type: object
      properties:
        message:
          description: The specified key does not belong to a document
    DocumentsGetLocation503Response:
      type: object
      properties:
        message:
          description: The service is unavailable at the moment
    DocumentsDeleteDocumentResponse:
      type: object
      properties:
        message:
          description: Invalid VaspDID, invalid S3Key
    DocumentsDeleteDocument401Response:
      type: object
      properties:
        message:
          description: User is not authorized to delete the document
    DocumentsDeleteDocument404Response:
      type: object
      properties:
        message:
          description: The specified key does not belong to a document
    DocumentsDeleteDocument503Response:
      type: object
      properties:
        message:
          description: The service is unavailable at the moment
    DocumentsListRequestsResponse:
      type: array
      items:
        $ref: '#/components/schemas/DocumentRequest'
    DocumentsRequestAccessResponse:
      type: object
      properties:
        message:
          description: Success message
        status:
          $ref: '#/components/schemas/DocumentRequestStatus'
    DocumentsGetDdqDocumentResponse:
      type: object
      properties: {}
      example: {}
    TransactionsSearchTransferResponse:
      type: array
      items:
        $ref: '#/components/schemas/Transaction'
    TransactionsValidateTransferFieldsResponse:
      oneOf:
        - $ref: '#/components/schemas/NotabenePaymentError'
        - $ref: '#/components/schemas/TrustFrameworkVASPNotFoundError'
    TransactionsFullyValidateTransferResponse:
      oneOf:
        - $ref: '#/components/schemas/NotabenePaymentError'
        - $ref: '#/components/schemas/NotabeneTransactionError'
        - $ref: '#/components/schemas/TrustFrameworkVASPNotFoundError'
        - $ref: '#/components/schemas/UserDIDNotAdminforVASPError'
        - $ref: '#/components/schemas/NotabenePaymentNoCustomerError'
        - $ref: '#/components/schemas/NotabenePaymentNoSubscriptionError'
        - $ref: '#/components/schemas/NotabeneTransactionNoActiveSubscriptionError'
        - $ref: '#/components/schemas/NotabeneTransactionValidationError'
    TransactionsCreateTransferResponse:
      oneOf:
        - $ref: '#/components/schemas/NotabeneTransactionError'
        - $ref: '#/components/schemas/UserDIDNotAdminforVASPError'
        - $ref: '#/components/schemas/NotabenePaymentNoCustomerError'
        - $ref: '#/components/schemas/NotabenePaymentNoSubscriptionError'
        - $ref: '#/components/schemas/NotabeneTransactionNoActiveSubscriptionError'
        - $ref: '#/components/schemas/NotabeneCryptoAssetNotAvailable'
        - $ref: '#/components/schemas/NotabeneTransactionValidationError'
        - $ref: '#/components/schemas/NotabeneTransactionBelowThresholdError'
        - $ref: '#/components/schemas/NotabeneTransactionSunriseLimitReachedError'
    TransactionsApproveTransferResponse:
      oneOf:
        - $ref: '#/components/schemas/UserDIDNotAdminforVASPError'
        - $ref: '#/components/schemas/NotabeneTransactionInvalidStatusError'
    TransactionsUpdateTransferDetailsResponse:
      type: object
      properties:
        message:
          description: Invalid transfer
    TransactionsRedirectTransferResponse:
      oneOf:
        - $ref: '#/components/schemas/UserDIDNotAdminforVASPError'
        - $ref: '#/components/schemas/NotabeneTransactionInvalidStatusError'
        - $ref: '#/components/schemas/NotabeneTransactionError'
    TransactionsBulkEditTransfersResponse:
      type: array
      items:
        $ref: '#/components/schemas/Transaction'
    TransactionsBulkEditTransfers202Response:
      type: array
      items:
        $ref: '#/components/schemas/TransactionID'
    RulesDeleteByIdsResponse:
      type: object
      properties:
        message:
          description: 'There are ids that were not found: ["id1", "id2"]'
x-tagGroups:
  - tags:
      - did_model
      - errors
      - authentication
    name: Introduction
  - tags:
      - VASPAdmin
      - Customer
      - Transactions
      - TrustFramework
      - Documents
      - Address Book
      - Rules
      - Settings
    name: Core Resources
  - tags:
      - Transaction webhook
      - Address webhook
      - LexisNexis
      - Chainalysis
      - Elliptic
      - Crystal
      - Refinitiv
      - TRM
      - TRMSanctions
      - Coinfirm
      - MerkleScience
      - Bitgo
      - ComplyAdvantage
    name: Integrations
