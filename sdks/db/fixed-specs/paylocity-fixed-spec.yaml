openapi: 3.0.1
info:
  title: WebLink API
  description: >-
    For documentation about this API, please visit
    https://developer.paylocity.com/integrations/reference/weblink-overview
  version: v2
  x-logo:
    url: paylocityLogo.png
  contact:
    email: webservices@paylocity.com
  x-konfig-ignore:
    potential-incorrect-type: true
servers:
  - url: https://apisandbox.paylocity.com/api
tags:
  - name: Earnings
  - name: Payroll/HR
  - name: Deductions
  - name: Client Onboarding
  - name: Job Codes
  - name: Local Tax
  - name: Screening Package
  - name: Deduction
  - name: Employee
  - name: Local Taxes
  - name: PayStatements
  - name: Subscription
  - name: Documents
  - name: Employee (v1)
  - name: Employees
  - name: Sensitive Data
  - description: creates punch import CSV that will be uploaded to FTP server
    name: Punch Import
  - name: Candidate Screening Order
  - name: Company Information
  - name: Pay Entry
  - name: Retirement contributions
  - name: Onboarding
  - name: Additional Rates
  - name: Client Credentials
  - name: Company Codes
  - name: Company-Specific Schema
  - name: Custom Fields
  - name: Direct Deposit
  - name: Emergency Contacts
  - name: Employee Benefit Setup
  - name: Employee Staging
  - name: Non-Primary State Tax
  - name: Primary State Tax
paths:
  /compliance/v1/companies/b6001/clientOnboarding/status:
    post:
      tags:
        - Client Onboarding
      summary: Upsert onboarding status
      operationId: ClientOnboarding_upsertOnboardingStatus
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        This endpoint upserts the status of the integration with companyId
        specified in the body


        **Use Cases**


        - Partner receives a new client intake form and sends the ‘in progress’
        status to Paylocity

        - Partner and client already have an existing relationship, partner
        sends the ‘approved’ status for client to have access to ordering in the
        recruiting UI 

        - Client initiates a new client intake form. Client and partner decide
        not to move forward with the relationship. Partner sends the ‘rejected’
        status  
      parameters:
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      requestBody:
        description: The onboarding details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientOnboardingUpsertRequest'
      responses:
        '200':
          description: Returns details of the upsert operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientOnboardingUpsertResponse'
        '400':
          description: Bad Request Error - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '401':
          description: Unauthorized
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /compliance/v1/companies/{companyId}/clientOnboarding/billing:
    post:
      tags:
        - Client Onboarding
      summary: Add billing codes
      operationId: ClientOnboarding_insertBillingCodes
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        This endpoint inserts the billing code and its status by companyId for a
        given client


        **Use Cases**


        - Partner wants to send over one or multiple billing codes for a client,
        can be when onboarding a new client, or can be when client adds new
        billing codes to their company

        - Partner wants to make bulk changes to billing codes to make them
        either active or inactive for a client
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      requestBody:
        description: Billing codes request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBillingCodeRequest'
      responses:
        '201':
          description: Created entity.
        '400':
          description: Bad Request Error - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '401':
          description: Unauthorized
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /compliance/v1/companies/{companyId}/clientOnboarding/billing/{billingCode}:
    delete:
      tags:
        - Client Onboarding
      summary: Delete billing code
      operationId: ClientOnboarding_deleteBillingCode
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This is used to delete an already registered billing code, either active
        or inactive, by companyId and specific billing code for a given client


        **Use Cases**


        - Partner wants to permanently delete this billing code for a client
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: Billing code to be deleted.
          name: billingCode
          in: path
          required: true
          schema:
            type: string
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '204':
          description: Returns confirmation that billing code has been deleted
        '400':
          description: Bad Request Error - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found - Billing code has not been found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    patch:
      tags:
        - Client Onboarding
      summary: Updates billing code status
      operationId: ClientOnboarding_updateBillingStatus
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This is used to update an already registered billing code’s status by
        companyId and specific billing code for a given client


        **Use Cases**


        - Partner wants to update the status of a specific billing code for a
        client to either make active or inactive
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: >-
            Billing code associated with the screening order. This billing code
            is created on the partner side for a specific company.
          name: billingCode
          in: path
          required: true
          schema:
            type: string
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      requestBody:
        description: Billing code request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBillingCodeRequest'
      responses:
        '204':
          description: Returns confirmation that billing code has been updated
        '400':
          description: Bad Request Error - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found - Billing code has not been found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /compliance/v1/companies/b6001/backgroundCheck/candidateScreeningOrders/subscription:
    get:
      tags:
        - Subscription
      summary: >-
        Returns the webhook for the subscription of a new candidate screening
        order
      operationId: Subscription_newCandidateScreeningOrderWebhook
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        Returns the webhook for the subscription of a new candidate screening
        order
      parameters:
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Returns the subscription callback details
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CandidateScreeningOrdersSubscriptionResponse
        '400':
          description: Bad Request Error - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
        - Subscription
      summary: >-
        Register the webhook URL for the subscription of new
        CandidateScreeningOrder
      operationId: Subscription_registerWebhookUrl
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        Register the webhook URL for the subscription of new
        CandidateScreeningOrder


        **Use Cases**


        - Partner provides the webhook URL for new candidate orders
      parameters:
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      requestBody:
        description: The callback information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeNewCandidateScreeningOrderRequest'
      responses:
        '200':
          description: Returns the details of the registration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscribeNewCandidateScreeningOrderResponse
        '400':
          description: Bad Request Error - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Unauthorized
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
      callbacks:
        New candidateScreeningOrder background check request:
          https://example.com:
            post:
              summary: >-
                This is a webhook that occurs when new request for
                candidateScreeningOrder background checks occurs
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: >-
                        #/components/schemas/NewCandidateScreeningOrderEventPayloadData
              responses:
                '200':
                  description: >-
                    Your server implementation should return this HTTP status
                    code if the data was received successfully
                '400':
                  description: >-
                    If your server returns an HTTP status code indicating it
                    does not understand the format of the payload the delivery
                    will be treated as a failure. No retries are attempted.
                '500':
                  description: >-
                    If your server returns an HTTP status code indicating a
                    server-side error the delivery will be treated as a failure.
                    No retries are attempted.
  /compliance/v1/companies/b6001/backgroundCheck/candidateScreeningOrders/subscription/{callbackId}:
    delete:
      tags:
        - Subscription
      summary: Deletes the webhook
      operationId: Subscription_deleteWebhook
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: |+
        **Summary Description**

        Deletes the webhook

      parameters:
        - description: The GUID of the Callback URL returned by the POST or GET method
          name: callbackId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Returns the details of the delete operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubscriptionResponse'
        '400':
          description: Bad Request Error - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '401':
          description: Unauthorized
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /compliance/v1/companies/{companyId}/backgroundCheck/screeningPackages:
    get:
      tags:
        - Screening Package
      summary: Returns screening packages
      operationId: ScreeningPackage_listForCompany
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        Returns the screening packages for the companyId


        **Use Cases**


        - Partner needs to confirm that package information with Paylocity is
        correct and calls for the package information for a specific company ID
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Returns the screening packages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningPackagesResponse'
        '400':
          description: Bad Request Error - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '401':
          description: Unauthorized
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
        - Screening Package
      summary: Bulk Upsert
      operationId: ScreeningPackage_bulkUpsert
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        Bulk Upsert information about screening packages


        **Use Cases**


        - Partner wants to send over multiple screening packages for a client,
        can be when onboarding a new client, or can be when client adds new
        packages to their company 

        - Partner wants to make bulk changes to screening packages to make them
        either active or inactive for a client 

        - Partner wants to update the prices of a client’s screening packages 

        - Partner wants to bulk add services to a packages 

        - Partner wants to add a billing code to correlate to a specific BGC
        package
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      requestBody:
        description: The Package information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreeningPackageBulkUpsertRequest'
      responses:
        '200':
          description: Returns the deatils of the Bulk upsert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningPackageUpsertResponse'
        '400':
          description: Bad Request Error - Returns the details of the error
        '401':
          description: Unauthorized
        '415':
          description: Unsupported Media Type - Returns the details of the error
  /compliance/v1/companies/{companyId}/backgroundCheck/screeningPackages/{packageId}:
    post:
      tags:
        - Screening Package
      summary: Upserts screening package
      operationId: ScreeningPackage_upsertPackageInfo
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        Upserts information about screening packages for the companyId


        **Use Cases**


        - Partner wants to send over a screening package for a client, can be
        when onboarding a new client, or can be when client adds a new package
        to their company

        - Partner wants to make a specific screening package either active or
        inactive for a client 

        - Partner wants to update the price of a client’s screening package 

        - Partner wants to add services to a package 

        - Partner wants to add a billing code to correlate to a specific BGC
        package
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "The Id of the Screening Package.\r\n                **Allowable Values:**\r\n                36 char max"
          name: packageId
          in: path
          required: true
          schema:
            type: string
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      requestBody:
        description: The Package data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreeningPackageUpsertRequest'
      responses:
        '200':
          description: Returns the details of the upsert operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningPackageUpsertResponse'
        '400':
          description: Bad Request Error - Returns the details of the error
        '401':
          description: Unauthorized
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    delete:
      tags:
        - Screening Package
      summary: Deletes screening package
      operationId: ScreeningPackage_deletePackage
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        Deletes screening package


        **Use Cases**


        - Partner does not want this package to be displayed in the UI for the
        client 
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: The Id of the Screening Package.
          name: packageId
          in: path
          required: true
          schema:
            type: string
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Returns the deatils of the delete operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageResponse'
        '400':
          description: Bad Request Error - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /compliance/v1/companies/{companyId}/backgroundCheck/candidateScreeningOrders/status:
    patch:
      tags:
        - Candidate Screening Order
      summary: Updates the Screening Order status
      operationId: CandidateScreeningOrder_updateStatus
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        This endpoint updates the Screening Order status for the given companyId
        and candidateScreeningOrderId. The patch operation on the candidate
        status endpoint allows you to update the status of the overall screening
        order and the related services. You can also send the URL where the
        recruiter can view the complete screening result. 


        **Use Cases**


        - Partner sends the initial status of the order and services, i.e.
        Ordered and Pending 

        - Partner needs to update the status of an order or services of an order
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
      requestBody:
        description: The data of the update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateScreeningOrderStatusUpdateRequest'
      responses:
        '200':
          description: Returns the screening order id and status that were updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CandidateScreeningOrderStatusUpdateResponse
        '400':
          description: Bad Request Error - Returns the details of the error
        '401':
          description: Unauthorized
        '415':
          description: Unsupported Media Type - Returns the details of the error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /apiHub/corehr/v1/companies/{companyId}:
    get:
      tags:
        - Company Information
      summary: GET a single Company Information
      operationId: CompanyInformation_getDetails
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The Get Company Information API endpoint provides access to specific
        company details. Users can retrieve a wide range of company information,
        including: company name, address, industry, (EIN) Employer
        Identification Number, and more.


        **Use Cases**


        - Once the developer has company information, they can update their
        system with the latest earning codes. To update the earning codes in
        their system and they need to know what earning codes are available in
        Paylocity.

        - After getting company data, clients are use the company specific
        schema to pull the information into their UI to expose to a user.

        - Once the developer has company information, developers can add a New
        Employee to Paylocity and the system requires them to include the
        Benefit Class assigned in Paylocity for the New Employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInformationDto'
  /apiHub/corehr/v1/companies/{companyId}/workLocations:
    get:
      tags:
        - Payroll/HR
      summary: GET a list of Work Locations by Company ID
      operationId: PayrollHr_getWorkLocationsByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Work Location list by Company ID endpoint allows users to fetch
        a list of work location details from a client's Paylocity instance. Work
        locations, referred to as geographic or location codes, serve as
        designations employed by corporations to specify particular physical or
        geographic places where their personnel are stationed. These codes
        fulfill several crucial functions in the domains of human resources,
        operations, and management. To use this endpoint, the Paylocity Company
        ID and “workLocations” parameter must be specified.


        **Use Cases**


        - Locations are addresses used as work or hiring locations. Each worker
        should have an assigned work location. The purpose of a work location is
        to verify workers' taxes. Work locations in HR & Payroll will show in
        Paylocity's Recruiting platform when creating job postings.

        - This information will also transfer to external job sites if using
        Recruiting Enhanced Features. Currently, only one work location can be
        added to each job listing.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayrollHrGetWorkLocationsByCompanyIdResponse
  /apiHub/corehr/v1/companies/{companyId}/rateCodes:
    get:
      tags:
        - Payroll/HR
      summary: GET a list of Rate Codes by Company ID
      operationId: PayrollHr_listRateCodesByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Rate Codes by list by Company ID endpoint allows users to
        retrieve a comprehensive list of Rate Codes details from a client's
        Paylocity instance. To use this endpoint, the Paylocity “rateCodes”
        parameter must be specified. Rate Codes are employed throughout multiple
        businesses to denote precise pricing or rate frameworks. Rate codes are
        vital for monitoring and overseeing various pricing alternatives,
        employee pay rates, packages, or promotions offered by businesses. These
        codes facilitate the optimization of pricing management, reservations,
        and financial transactions.


        **Use Cases**


        - Hotel room rates are typically categorized and differentiated using
        rate codes in the hospitality business. Each rate code corresponds to a
        distinct kind of room (such as standard, deluxe, or suite) or a special
        price arrangement (such as non-refundable, corporate, or promotional).
         -Seasonal Pricing: Rate codes can be utilized to enforce fluctuations in pricing based on different seasons. For instance, a hotel may utilize distinct rate codes to distinguish between rates during peak season and rates during off-peak season. 
         -Businesses frequently generate rate codes to facilitate special deals, packages, or promotions. These codes may encompass reductions, free perks, or combined offerings (e.g., "bed and breakfast" packages).
        - A business would like to have different codes per shift work.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollHrListRateCodesByCompanyIdResponse'
  /apiHub/corehr/v1/companies/{companyId}/costCentersAndLevels:
    get:
      tags:
        - Payroll/HR
      summary: GET a list of Cost Centers by Company ID
      operationId: PayrollHr_getCostCenterListByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Cost Center List by Company ID endpoint, retrieves a
        comprehensive list of Cost Center from the Paylocity system with each
        call. To use this endpoint, the Paylocity “costCentersAndLevels”
        parameter must be specified. Cost centers are distinct entities or
        divisions within an organization that bear expenses as a result of their
        activities. These cost centers are crucial for monitoring and
        controlling expenses, allocating funds, and evaluating the efficiency of
        various departments within the firm. Cost centers are predominantly
        employed in managerial accounting and financial management to apportion
        expenses and evaluate resource utilization. Typical instances of cost
        centers encompass production departments, marketing teams, research and
        development units, and administrative offices.


        **Use Cases**


        - Cost allocation refers to the process of assigning costs that have
        been incurred by a specific cost center to that same center. The costs
        encompass staff remuneration, utility bills, rental fees, supplies, and
        any additional expenses related to the activities of the cost center.

        - Budgeting: Cost centers are essential in the process of creating a
        budget. Organizations distribute budgets among several cost centers and
        then compare the actual expenses of each center to their allocated
        budget. This facilitates cost management and performance assessment. 

        - Performance Evaluation: Cost centers are assessed according to their
        capacity to effectively control costs while attaining their goals.
        Performance metrics may encompass indicators such as the cost incurred
        for each unit of output, the cost incurred for each employee, or other
        pertinent measures. 

        - Cost Reporting: Organizations frequently produce reports for
        individual cost centers, providing a comprehensive breakdown of their
        expenditures and operational effectiveness. Management utilizes these
        reports to evaluate the financial well-being and effectiveness of each
        cost center.


        **Note**


        - A company cannot delete Cost Centers. The Cost Center is editable
        after use, but the chosen Code for the Cost Center is permanent.

        - To ensure cross-product compatibility, Cost Center Codes should not
        contain leading zeros or special characters. Cost Center codes must be
        numeric only if employees transfer using time clocks or kiosk tablets.

        - A company cannot delete Cost Centers. The Cost Center is editable
        after use, but the chosen Code for the Cost Center is permanent.

        - A Country selection is necessary before being able to enter
        information into the Zip and State fields when selecting the Override
        Company Check Printing Address option.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayrollHrGetCostCenterListByCompanyIdResponse
  /apiHub/payroll/v1/companies/{companyId}/earnings:
    get:
      tags:
        - Payroll/HR
      summary: GET a List of Earning Codes by Company ID
      operationId: PayrollHr_getEarningCodesByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Earning Codes List by Company ID endpoint, retrieves a
        comprehensive list of Earning Codes from the Paylocity system with each
        call. Earning codes, also known as earning kinds or pay codes, are
        alphanumeric or numeric labels employed by organizations to classify and
        monitor various forms of earnings or income that employees get as part
        of their compensation. These codes have multiple crucial applications in
        payroll management, accounting, and compensation administration.
        Pagination can be achieved by using the "earnings" parameter and
        specifying the values of "limit" and "offset" to decide the quantity of
        records to be retrieved. The utilization of the "limit" option permits
        the user to restrict the quantity of rows that are retrieved from a
        query, whereas the "offset" option enables the omission of a designated
        number of rows preceding the commencement of the result set. The
        utilization of both the limit and offset parameters in a query allows
        for the skipping of rows as well as the restriction of the number of
        rows returned.


        **Use Cases**


        - The API enables payroll departments to oversee earning codes linked to
        various forms of compensation, such as standard salary, overtime,
        bonuses, and incentives. This guarantees precise and effective payroll
        computations.

        - Compensation Management: HR teams can employ the API to view earning
        codes for diverse work titles and staff groups. This allows firms to
        maintain alignment with compensation policies and industry norms.

        - Benefits Administration involves the inclusion of earning codes that
        contain not just wage components but also other benefits like as health
        insurance, retirement contributions, and stock options. The API
        facilitates the monitoring and administration of these varied
        compensation components.

        - Time and Attendance Integration: By integrating with time and
        attendance systems, the API may automate the computation of earnings
        using data on hours worked, shifts, and attendance.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: >-
            A boolean value representing whether the API should return the total
            number of resources available (even though only a subset may be
            returned). When includeTotalCount=true, then the X-Pcty-Total-Count
            response header should be added to the response and will specify the
            total number of records available. APIs that support
            X-Pcty-Total-Count should include this parameter in their
            specification.
          name: includeTotalCount
          in: query
          schema:
            type: boolean
            default: true
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
        - description: "Number of earning codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
          example: 5
        - description: Pagination offset.
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayrollHrGetEarningCodesByCompanyIdResponse
  /apiHub/payroll/v1/companies/{companyId}/deductions:
    get:
      tags:
        - Payroll/HR
      summary: "GET a list of Deduction Codes by Company ID\r\n"
      operationId: PayrollHr_getDeductionCodesByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Deduction Codes by list by Company ID endpoint allows users to
        retrieve a comprehensive list of  Deduction Codes details from a
        client's Paylocity instance. To use this endpoint, the Paylocity
        “deductions” parameter must be specified. Deduction Codes are
        alphanumeric or numeric identifiers used in financial and accounting
        systems to categorize and track various types of deductions. These
        deductions can include expenses, withholdings, reductions in pay, or
        other adjustments made to an individual's or organization's financial
        records. Pagination can be achieved by using the "deductions" parameter
        and specifying the values of "limit" and "offset" to decide the quantity
        of records to be retrieved. The utilization of the "limit" option
        permits the user to restrict the quantity of rows that are retrieved
        from a query, whereas the "offset" option enables the omission of a
        designated number of rows preceding the commencement of the result set.
        The utilization of both the limit and offset parameters in a query
        allows for the skipping of rows as well as the restriction of the number
        of rows returned.


        **Use Cases**


        - Accounts Receivable: Deduction codes can be utilized to monitor
        discounts, allowances, or modifications applied to invoices or accounts
        payable.

        - Taxes: Various tax jurisdictions employ deduction codes to describe
        the specific sort of tax being subtracted, such as federal income tax,
        state income tax, or local taxes.

        - Advantages: Deduction codes can be utilized to classify deductions
        associated with employee benefits like as health insurance, dental
        coverage, or retirement plans.

        - Loans and Debts: Lenders and financial organizations utilize deduction
        codes to precisely indicate the reason for deductions made for loan
        repayments, interest, or fees.

        - Expense Reporting: Deduction codes are utilized in company cost
        reporting to classify and monitor several types of spending, including
        travel, meals, entertainment, and office supplies.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: >-
            A boolean value representing whether the API should return the total
            number of resources available (even though only a subset may be
            returned). When includeTotalCount=true, then the X-Pcty-Total-Count
            response header should be added to the response and will specify the
            total number of records available. APIs that support
            X-Pcty-Total-Count should include this parameter in their
            specification.
          name: includeTotalCount
          in: query
          schema:
            type: boolean
            default: true
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
        - description: Pagination offset.
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "Number of deduction codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 50
          example: 5
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayrollHrGetDeductionCodesByCompanyIdResponse
  /apiHub/payroll/v1/companies/{companyId}/payFrequencies:
    get:
      tags:
        - Payroll/HR
      summary: "GET Pay Frequency Code by list by Company ID\r\n"
      operationId: PayrollHr_listPayFrequenciesByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: "**Summary Description**\n\nThe GET Pay Frequency Code by list by Company ID endpoint allows users to retrieve a comprehensive list of Pay Frequency Code details from a client's Paylocity instance. To use this endpoint, the Paylocity “payFrequencies” parameter must be specified. A Frequency Code in HR & Payroll determines the criteria for applying an Earning, Deduction, or Agency Code during payroll processing. Pagination can be achieved by using the \"payFrequencies\" parameter and specifying the values of \"limit\" and \"offset\" to decide the quantity of records to be retrieved. The utilization of the \"limit\" option permits the user to restrict the quantity of rows that are retrieved from a query, whereas the \"offset\" option enables the omission of a designated number of rows preceding the commencement of the result set. The utilization of both the limit and offset parameters in a query allows for the skipping of rows as well as the restriction of the number of rows returned. “includeTotalCount” parameter can also be used to return the total number of resources available (even though only a subset may be returned).\n\n**Use Cases**\n\n- A company uses pay frequency code to determine how often pay is distributed to employees whether it be Daily, Weekly, Bi-Weekly, or Semi-Monthly. In order for an Earning/Deduction/Agency related with a company's Weekly payroll frequency to trigger again, there must be a minimum of 5 days between Check Dates. The subsequent Check Date will be determined by adding 6 days to the date of the previous Check Date when the deduction took place.\n  - If the frequency of Earning/Deduction/Agency includes a Block Week, and the subsequent Check Date that qualifies comes within the blocked week, HR & Payroll will prevent the deduction.\n  - If the frequency is Bi-Weekly or Semi-Monthly, a minimum of 10 days must elapse between Check Dates. The deduction will occur again on the 10th day after the last Check Date.\r\nThe following frequencies are exempt from cool down intervals. The Payroll and HR department considers the utilization of deductions in the current month and the activation status of a Block Week.\n  - The frequency of the Monthly take Last Week (ML) will only be applied if the date corresponds to the last Check Date on the calendar and the Earning/Deduction/Agency Code has not yet been applied for the month.\n- The Q1W frequency will only be applicable if the payroll is the initial payroll of the quarter and the Earning/Deduction/Agency Code has not been applied for the quarter yet.\r\nThe frequency of Block Week 5 (BL5) will be applicable only if the Check Date occurs on or before the 28th and there has been a gap of more than 5 days since the last Check Date for the Earning/Deduction/Agency Code to be applied.\n- The company operates on a biweekly pay schedule with a check date occurring every five out of four weeks. Subsequently, the corporation implements a Bi-Weekly deduction frequency, commencing 2 days after the initial deduction. If a Check Date occurs on 5/11, the deduction will still be processed, regardless of the fact that there is less than a 10-day gap between Check Dates. If a check with a date of 5/17 is processed, the deduction will not be subtracted.\n"
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayrollHrListPayFrequenciesByCompanyIdResponse
  /apiHub/payroll/v1/companies/{companyId}/taxes:
    get:
      tags:
        - Payroll/HR
      summary: "GET a list of Tax Codes by Company ID\r\n"
      operationId: PayrollHr_getTaxCodesByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: "**Summary Description**\n\nThe GET Tax Codes by list by Company ID endpoint allows users to retrieve a comprehensive list of Tax Codes details from a client's Paylocity instance. To use this endpoint, the Paylocity “taxes” parameter must be specified. Tax codes serve as a means for tax authorities and organizations to categorize various forms of taxes and tax-related data. These codes facilitate precise computation, reporting, and adherence to diverse tax responsibilities. Tax codes are jurisdiction-specific and can vary substantially between different locations.\r\n\r\nPagination can be achieved by using the \"taxes\" parameter and specifying the values of \"limit\" and \"offset\" to decide the quantity of records to be retrieved. The utilization of the \"limit\" option permits the user to restrict the quantity of rows that are retrieved from a query, whereas the \"offset\" option enables the omission of a designated number of rows preceding the commencement of the result set. The utilization of both the limit and offset parameters in a query allows for the skipping of rows as well as the restriction of the number of rows returned. “includeTotalCount” parameter can also be used to return the total number of resources available (even though only a subset may be returned).\n\n**Use Cases**\n\n- The process of calculating income tax involves the utilization of tax codes, which serve to calculate the appropriate income tax rates and brackets for both people and businesses. Distinct tax codes may be applicable to different income thresholds, filing statuses, and categories of income (such as capital gains and dividends).\n- Payroll Deductions: Employers utilize tax codes to accurately compute and retain the appropriate amount of income tax, Social Security tax, and Medicare tax from employees' wages. These codes serve to guarantee that employees have the accurate amount of tax deducted throughout the year.\n "
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
        - description: >-
            A boolean value representing whether the API should return the total
            number of resources available (even though only a subset may be
            returned). When includeTotalCount=true, then the X-Pcty-Total-Count
            response header should be added to the response and will specify the
            total number of records available. APIs that support
            X-Pcty-Total-Count should include this parameter in their
            specification.
          name: includeTotalCount
          in: query
          schema:
            type: boolean
            default: true
        - description: Pagination offset.
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "Number of tax codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 50
          example: 5
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollHrGetTaxCodesByCompanyIdResponse'
  /apiHub/positionManagement/v1/companies/{companyId}/workerCompensationCodes:
    get:
      tags:
        - Payroll/HR
      summary: GET a List of Workers Compensation Codes by Company ID
      operationId: PayrollHr_listWorkerCompensationCodesByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Workers Compensation Codes List by Company ID endpoint,
        retrieves a comprehensive list of Workers Compensation Codes from the
        Paylocity system with each call. Workers' compensation codes, also known
        as workers' compensation class codes or class codes, are standardized
        numeric or alphanumeric identifiers utilized to define and categorize
        various work kinds or job duties inside the workers' compensation
        insurance system. Workers' compensation insurance offers compensation to
        employees who experience work-related injuries or illnesses, and these
        codes are essential in determining insurance rates and processing
        claims.

        Pagination can be achieved by using the "workerCompensationCodes"
        parameter and specifying the values of "limit" and "offset" to decide
        the quantity of records to be retrieved. The utilization of the "limit"
        option permits the user to restrict the quantity of rows that are
        retrieved from a query, whereas the "offset" option enables the omission
        of a designated number of rows preceding the commencement of the result
        set. The utilization of both the limit and offset parameters in a query
        allows for the skipping of rows as well as the restriction of the number
        of rows returned.


        **Use Cases**


        - Locations are addresses used as work or hiring locations. Each worker
        should have an assigned work location. The purpose of a work location is
        to verify workers' taxes. Work locations in HR & Payroll will show in
        Paylocity's Recruiting platform when creating job postings.

        - This information will also transfer to external job sites if using
        Recruiting Enhanced Features. Currently, only one work location can be
        added to each job listing.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: >-
            A boolean value representing whether the API should return the total
            number of resources available (even though only a subset may be
            returned). When includeTotalCount=true, then the X-Pcty-Total-Count
            response header should be added to the response and will specify the
            total number of records available. APIs that support
            X-Pcty-Total-Count should include this parameter in their
            specification.
          name: includeTotalCount
          in: query
          schema:
            type: boolean
            default: true
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
        - description: "Number of workers compensation codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
          example: 5
        - description: Pagination offset.
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayrollHrListWorkerCompensationCodesByCompanyIdResponse
  /apiHub/positionManagement/v1/companies/{companyId}/positions:
    get:
      tags:
        - Payroll/HR
      summary: GET a List of Position Codes by Company ID
      operationId: PayrollHr_listPositionCodesByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Position Codes List by Company ID endpoint, retrieves a
        comprehensive list of Position Codes from the Paylocity system with each
        call. Position codes are alphanumeric or numeric designations employed
        by corporations to classify and oversee various job responsibilities and
        positions within their workforce. These codes fulfill several crucial
        functions in the domains of human resources, talent management, and
        organizational structure.

        Pagination can be achieved by using the "positions" parameter and
        specifying the values of "limit" and "offset" to decide the quantity of
        records to be retrieved. The utilization of the "limit" option permits
        the user to restrict the quantity of rows that are retrieved from a
        query, whereas the "offset" option enables the omission of a designated
        number of rows preceding the commencement of the result set. The
        utilization of both the limit and offset parameters in a query allows
        for the skipping of rows as well as the restriction of the number of
        rows returned.


        **Use Cases**


        - Human Resources Management: HR departments often use position codes to
        categorize and manage job roles within an organization. The API can
        facilitate the creation, updating, and retrieval of position codes,
        ensuring that job roles are accurately documented and maintained.

        - Payroll and Compensation Management: Position codes are crucial for
        determining salary scales and compensation packages. The API can be used
        to link position codes with salary information, simplifying payroll
        processing and compensation management.

        - Recruitment and Onboarding: When hiring new employees, organizations
        can use the API to identify vacant positions and manage the recruitment
        process more efficiently. It can help HR teams keep track of available
        job roles and their requirements.

        - Compliance and Reporting: Many regulatory agencies require
        organizations to report on specific job roles and positions. The API can
        assist in generating compliance reports by providing access to accurate
        position code data.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: >-
            A boolean value representing whether the API should return the total
            number of resources available (even though only a subset may be
            returned). When includeTotalCount=true, then the X-Pcty-Total-Count
            response header should be added to the response and will specify the
            total number of records available. APIs that support
            X-Pcty-Total-Count should include this parameter in their
            specification.
          name: includeTotalCount
          in: query
          schema:
            type: boolean
            default: true
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
        - description: "Number of position codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
          example: 5
        - description: Pagination offset.
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayrollHrListPositionCodesByCompanyIdResponse
  /apiHub/positionManagement/v1/companies/{companyId}/payGrades:
    get:
      tags:
        - Payroll/HR
      summary: GET a List of Pay Grades by Company ID
      operationId: PayrollHr_getPayGradesByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Pay Grades List by Company ID endpoint, retrieves a
        comprehensive list of Pay Grades  from the Paylocity system with each
        call. Pay grades, commonly referred to as pay scales or wage ranges, are
        numerical or alphanumeric categorizations employed by corporations to
        classify tasks or positions according to their relative worth or
        intricacy within the organization. Pay grades are commonly linked to a
        spectrum of salaries and fulfill various crucial functions in human
        resources and pay administration.

        Pagination can be achieved by using the "payGrades" parameter and
        specifying the values of "limit" and "offset" to decide the quantity of
        records to be retrieved. The utilization of the "limit" option permits
        the user to restrict the quantity of rows that are retrieved from a
        query, whereas the "offset" option enables the omission of a designated
        number of rows preceding the commencement of the result set. The
        utilization of both the limit and offset parameters in a query allows
        for the skipping of rows as well as the restriction of the number of
        rows returned.

        Pay Grades are otherwise optional in HR & Payroll and do not affect any
        rate calculations that will cause changes in payroll.


        **Use Cases**


        - Configure and specify Current Pay Rates for employees in HR & Payroll.
        Certain reports, such as the CMS PBJ Report, also known as the Centers
        for Medicare & Medicaid Services Payroll-Based Journal Report, and other
        specially configured Custom Reports reference Pay Grades.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: >-
            A boolean value representing whether the API should return the total
            number of resources available (even though only a subset may be
            returned). When includeTotalCount=true, then the X-Pcty-Total-Count
            response header should be added to the response and will specify the
            total number of records available. APIs that support
            X-Pcty-Total-Count should include this parameter in their
            specification.
          name: includeTotalCount
          in: query
          schema:
            type: boolean
            default: true
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
        - description: "Number of pay grades per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
          example: 5
        - description: Pagination offset.
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollHrGetPayGradesByCompanyIdResponse'
  /apiHub/payroll/v1/companies/{companyId}/jobs:
    get:
      tags:
        - Job Codes
      summary: GET a list of Job Codes by Company ID
      operationId: JobCodes_listByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Job Code List by Company ID endpoint, retrieves a comprehensive
        list of Job Codes from the Paylocity system with each call. Pagination
        can be achieved by using the "jobs" parameter and specifying the values
        of "limit" and "offset" to decide the quantity of records to be
        retrieved. The utilization of the "limit" option permits the user to
        restrict the quantity of rows that are retrieved from a query, whereas
        the "offset" option enables the omission of a designated number of rows
        preceding the commencement of the result set. The utilization of both
        the limit and offset parameters in a query allows for the skipping of
        rows as well as the restriction of the number of rows returned


        **Use Cases**


        - The GET a list of Job Codes API endpoint allows users to fetch
        specific Job Code details from a client's Paylocity instance. To use
        this endpoint, the Paylocity Company ID must be specified

        - The 'Get Job Codes List by Company ID' endpoint empowers API users to
        fetch a comprehensive list of Job Codes alongside their relevant data
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
        - description: >-
            The API Filter, by defining specific conditions, enables developers
            to fine-tune data from API calls for more precise results, enhancing
            application efficiency and user-friendliness. For more information
            review the Filtering page
          name: filter
          in: query
          schema:
            type: string
        - description: "Number of jobs per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
          example: 5
        - description: Pagination offset
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCodesListByCompanyIdResponse'
    post:
      tags:
        - Job Codes
      summary: Create a single Job Code
      operationId: JobCodes_createSingleJobCode
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The POST Single Job Code endpoint enables users to create precise values
        regarding Job Codes from the Paylocity instance of a client. In order to
        utilize this endpoint, it is necessary to provide the payload values in
        accordance with the established standards of the Paylocity API, as
        specified for the respective object type and description. It is required
        to provide the Company ID in the endpoint and the specifications of the
        Job Code in the payload body


        **Use Cases**


        - This API endpoint will allow an API user to create a Job Code record
        for a specific company ID

        - Job Codes must be added before running payroll
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
      requestBody:
        description: Job Code data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobCodeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateJobCodeDto'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateJobCodeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateJobCodeDto'
      responses:
        '200':
          description: Success
  /apiHub/payroll/v1/companies/{companyId}/jobs/{jobCode}:
    get:
      tags:
        - Job Codes
      summary: GET a single Job Code
      operationId: JobCodes_getSingleJobCodeDetails
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET Single Job Code API endpoint allows users to fetch specific Job
        Code details from a client's Paylocity instance. To use this endpoint,
        the Paylocity Company ID and Job Code must be specified


        **Use Cases**


        - This API endpoint will allow an API user to retrieve a Job Code record
        for a specific company ID and Job Code ID
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A specific identifier or label assigned to individual tasks, projects, or assignments within a company.\r\n                **Allowable Values:**\r\n                A Job Code may contain up to 10 alpha-numeric characters. Spaces or special characters are not allowed"
          name: jobCode
          in: path
          required: true
          schema:
            type: string
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCodeDto'
    put:
      tags:
        - Job Codes
      summary: Update a single Job Code
      operationId: JobCodes_updateSingleJobCode
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The PUT Job Code endpoint enables users to update precise values
        regarding Job Codes from the Paylocity instance of a client. In order to
        utilize this endpoint, it is necessary to provide the payload values in
        accordance with the established standards of the Paylocity API, as
        specified for the respective object type and description.  It is
        required to provide both the Company ID and the Job Code ID in the
        endpoint


        **Use Cases**


        - This API endpoint will allow an API user to update a Job Code record
        for a specific company ID and Job Code ID

        - Job Codes must be added before running payroll
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A specific identifier or label assigned to individual tasks, projects, or assignments within a company.\r\n                **Allowable Values:**\r\n                A Job Code may contain up to 10 alpha-numeric characters. Spaces or special characters are not allowed"
          name: jobCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Job Code data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeDto'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Job Codes
      summary: Delete a single Job Code
      operationId: JobCodes_deleteSingleJobCode
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The DELETE Job Code endpoint enables users to delete a single job code
        and it’s values from the Paylocity instance of a client. In order to
        utilize this endpoint, it is required to provide both the Company ID and
        the Job Code ID in the endpoint


        **Best Practice Notice:** If you delete a job code which has been used
        in payroll, your reports may be impacted. The best practice is to make
        the job code inactive instead of deleting the entire job code


        **Use Cases**


        - This API endpoint will allow an API user to delete a Job Code record
        for a specific company ID and Job Code ID
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A specific identifier or label assigned to individual tasks, projects, or assignments within a company.\r\n                **Allowable Values:**\r\n                A Job Code may contain up to 10 alpha-numeric characters. Spaces or special characters are not allowed"
          name: jobCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /documents/v1/companies/{companyId}/companyDocuments:
    get:
      tags:
        - Documents
      summary: Get a list of documents for a company
      operationId: Documents_listCompanyDocuments
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        The GET company documents resource will return a list of documents for a
        specified company ID.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Allows for an equals comparison to the uploadedDate field. Time
            portion of the input is ignored.
          name: uploadedDate
          in: query
          allowEmptyValue: true
          schema:
            type: string
            format: date-time
        - description: >-
            Allows for a Less Than Or Equal (<=) comparison to the uploadedDate
            field. Time portion of the input is ignored.
          name: uploadedDate.lessThanOrEqualTo
          in: query
          allowEmptyValue: true
          schema:
            type: string
            format: date-time
        - description: >-
            Allows for a Greater Than Or Equal (>=) comparison to the
            uploadedDate field. Time portion of the input is ignored.
          name: uploadedDate.greaterThanOrEqualTo
          in: query
          allowEmptyValue: true
          schema:
            type: string
            format: date-time
        - description: >-
            Requests that the response include the Pcty-Total-Count header
            containing the total number of objects that match the request.  This
            may be useful if requesting a small [limit].
          name: includeTotalCount
          in: query
          allowEmptyValue: true
          schema:
            type: boolean
        - description: Defines the maximum number of items to be returned in the response.
          name: limit
          in: query
          allowEmptyValue: true
          schema:
            type: integer
            format: int32
        - description: >-
            Defines the start location to return.  Ex. offset=100 means starting
            at item 100, return the next [limit] items.
          name: offset
          in: query
          allowEmptyValue: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsListCompanyDocumentsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentsListCompanyDocuments200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsListCompanyDocuments400Response'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentsListCompanyDocuments400Response'
        '401':
          description: Unauthorized
          content: {}
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsListCompanyDocuments500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentsListCompanyDocuments500Response'
  /documents/v1/companies/{companyId}/employeeDocuments:
    get:
      tags:
        - Documents
      summary: Get a list of documents filtered by employee for a company
      operationId: Documents_listEmployeeFilteredDocuments
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        This resource allows for looking up documents with additional filters
        such as employee, upload date, and max number of records to return.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Allows for an equals comparison to the employeeId field.
          name: employeeId
          in: query
          allowEmptyValue: true
          schema:
            type: string
        - description: >-
            Allows for an equals comparison to the uploadedDate field. Time
            portion of the input is ignored.
          name: uploadedDate
          in: query
          allowEmptyValue: true
          schema:
            type: string
            format: date-time
        - description: >-
            Allows for a Less Than Or Equal (<=) comparison to the uploadedDate
            field. Time portion of the input is ignored.
          name: uploadedDate.lessThanOrEqualTo
          in: query
          allowEmptyValue: true
          schema:
            type: string
            format: date-time
        - description: >-
            Allows for a Greater Than Or Equal (>=) comparison to the
            uploadedDate field. Time portion of the input is ignored.
          name: uploadedDate.greaterThanOrEqualTo
          in: query
          allowEmptyValue: true
          schema:
            type: string
            format: date-time
        - description: >-
            Requests that the response include the Pcty-Total-Count header
            containing the total number of objects that match the request.  This
            may be useful if requesting a small [limit].
          name: includeTotalCount
          in: query
          allowEmptyValue: true
          schema:
            type: boolean
        - description: Defines the maximum number of items to be returned in the response.
          name: limit
          in: query
          allowEmptyValue: true
          schema:
            type: integer
            format: int32
        - description: >-
            Defines the start location to return.  Ex. offset=100 means starting
            at item 100, return the next [limit] items.
          name: offset
          in: query
          allowEmptyValue: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsListEmployeeFilteredDocumentsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsListEmployeeFilteredDocuments200Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsListEmployeeFilteredDocuments400Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsListEmployeeFilteredDocuments400Response
        '401':
          description: Unauthorized
          content: {}
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsListEmployeeFilteredDocuments500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsListEmployeeFilteredDocuments500Response
  /documents/v1/companies/{companyId}/documents/{documentId}/downloads:
    post:
      tags:
        - Documents
      summary: Retrieve a document download URL
      operationId: Documents_createDocumentDownloadUrl
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        **Summary Description**


        This will create a new document downloadURL for the specified company
        ID.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            The Paylocity Document Identifier. This is the unique value provided
            by Paylocity to each specific Document object.
          name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDownloadModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentDownloadModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsCreateDocumentDownloadUrlResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsCreateDocumentDownloadUrl400Response
        '401':
          description: Unauthorized
          content: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsCreateDocumentDownloadUrl500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentsCreateDocumentDownloadUrl500Response
  /coreHr/v1/companies/{companyId}/employees:
    get:
      tags:
        - Employees
      summary: Gets a list of employees by company ID
      operationId: Employees_listByCompanyId
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        The GET Employee List by Company ID API endpoint provides a list of up
        to 20 employees per call from the Paylocity system. Designed for the
        initial population of user systems with Paylocity's employee data, it
        supports pagination for easy navigation through results. The 'include'
        parameter enables selective retrieval of payload elements, while the
        'Active Only' filter helps obtain only those employees with an 'Active'
        Employee Status Type. This makes the endpoint highly flexible and
        capable of delivering tailored listings to meet specific user
        requirements.


        **GET Employee List by Company ID - Use Cases:**


        - The 'Get Employee List by Company ID' endpoint empowers API users to
        fetch a comprehensive list of employees alongside their relevant data.
        Ideal for initial data loads.


        - The recommended best practice to track employee demographic changes is
        not through regular polling of this endpoint. Instead, utilize our
        employee webhooks in conjunction with the 'GET Single Employee by
        Company and Employee ID' endpoint.
      parameters:
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "Number of employees per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 20"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
          example: 5
        - description: Next token for the page.
          name: nextToken
          in: query
          schema:
            type: string
        - description: "Comma separated list of data to be included\r\n                **Allowable Values:**\r\n                info, position, status, payrate and futurePayrates."
          name: include
          in: query
          schema:
            type: string
          example: info,position,status,payrate,futurePayrates
        - description: "Filter only active emplooyes.\r\n                **Allowable Values:**\r\n                true, false"
          name: activeOnly
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePage'
  /coreHr/v1/companies/{companyId}/employees/{employeeId}:
    get:
      tags:
        - Employees
      summary: Gets a single employee by company and employee IDs
      operationId: Employees_getSingleEmployeeDetails
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        The GET Single Employee API endpoint allows users to fetch specific
        employee details from a client's Paylocity instance. To use this
        endpoint, the Paylocity Company ID and the Employee ID must be
        specified. The endpoint also offers an 'include' parameter for selective
        data retrieval, enabling users to choose specific payload elements to
        retrieve.


        **GET Specific Employee - Use Cases:**


        - This API endpoint will allow an API user to retrieve an employee
        record for a specific employee ID.


        - For optimal use, pair this API endpoint with the Paylocity Employee
        Change Web Hook. This ensures that you get notified whenever there's a
        change in the employee's data in Paylocity. Along with the notification,
        you will receive the Paylocity Company ID and Employee ID corresponding
        to the employee whose data has been modified. You can then utilize the
        GET Specific Employee API endpoint to access the most recent version of
        the updated employee record.
      parameters:
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: "Comma separated list of data to be included\r\n                **Allowable Values:**\r\n                info, position, status, payrate and futurePayrates."
          name: include
          in: query
          schema:
            type: string
          example: info,position,status,payrate,futurePayrates
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
  /apiHub/security/v1/companies/b6001/companyOnboardingStatuses:
    put:
      tags:
        - Client Onboarding
      summary: Upsert onboarding status
      operationId: ClientOnboarding_upsertIntegrationStatus
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >
        > 🚧 Beta Phase

        > 

        > This resource is in closed beta.  Contact the marketplace team to
        explore early adopter opportunities at
        [marketplaceapisupport@paylocity.com](mailto:marketplaceapisupport@paylocity.com) 


        **Summary Description**


        The new Partner Onboarding API is designed to enable our partners to
        onboard customers through our Paylocity Marketplace-initiated workflow.
        Approved partners will utilize the API to provision a client onto a
        specific integration. This API provides an endpoint that allows partners
        to upsert the status of the integration, using the Paylocity companyId
        specified in the request body. Partners can update the
        companyOnboardingStatus to one of three options: InProgress, Approved,
        or Rejected. If approved the partner will be able to sync the requested
        client data through the API.
      parameters:
        - description: If true all responses are mocked and generated randomly.
          name: testMode
          in: header
          schema:
            type: boolean
            default: false
      requestBody:
        description: Payload of query.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertCompanyOnboardingDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpsertCompanyOnboardingDto'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpsertCompanyOnboardingDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpsertCompanyOnboardingDto'
      responses:
        '200':
          description: Returns the upsert response details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertResultDto'
        '400':
          description: Bad Request Error - Returns the details of the error.
        '404':
          description: Returns the details of the error.
        '415':
          description: Unsupported Media Type - Returns the details of the error.
  /payroll/v2/companies/{companyId}/payEntryImport:
    post:
      tags:
        - Pay Entry
      summary: Create New Payroll Batch
      operationId: PayEntryV2_GetPayEntryImport
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: |-
        **Summary Description**

         The Paylocity Pay Entry API is a powerful tool designed to streamline and automate payroll processes. It enables API users to transmit crucial payroll data, such as time tracking, earnings, deductions, and taxes. A batch is posted to Paylocity and is added to the Pay Entry Screen for the corresponding check date. This API Endpoint ensures accuracy and efficiency in the payroll process and reduces manual importing, making it a valuable tool for streamlining inputting Payroll data from an external system. 

         **Pay Entry Use Cases:** 

         - One of the key applications of the Pay Entry API is to facilitate the transmission of payroll batch data from a third-party system to Paylocity's Pay Entry. From here, users can set up a payroll for a specific check date and process it, incorporating the batch data transmitted via the API.
      parameters:
        - description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity
          name: companyId
          in: path
          required: true
          schema: {}
      requestBody:
        description: pay entry request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayEntry'
        required: true
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: invalid body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
      x-codegen-request-body-name: body
  /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions:
    get:
      tags:
        - Deductions
      summary: GET Employee Deduction List
      operationId: Deductions_listEmployeeDeductions
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to GET a list of all active
        deductions associated with the employee record.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
        - description: >-
            The API Filter, by defining specific conditions, enables developers
            to fine-tune data from API calls for more precise results, enhancing
            application efficiency and user-friendliness. For more information
            review the Filtering page
          name: filter
          in: query
          schema:
            type: string
        - description: "Number of results per page.\r\n                **Default Value:** 250\r\n                **Maximum Value:** 250"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
          example: 5
        - description: Pagination offset
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeductionsListEmployeeDeductionsResponse'
    post:
      tags:
        - Deductions
      summary: Create new Recurring Employee Deduction
      operationId: Deductions_createNewRecurringEmployeeDeduction
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: |-
        **Summary Description**

         This function will allow the API user to create a new deduction on the employee record.
        Garnishments cannot be created using the Deduction endpoints.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          A Payroll Deduction code is a unique identifier used by payroll
          systems to categorize and track specific deductions from an employee's
          paycheck. These deductions can include taxes, health insurance
          premiums, retirement contributions, loan repayments, and more. Each
          type of deduction has its own unique code that allows it to be easily
          identified and processed by the payroll system. This not only ensures
          accurate calculations and disbursements, but also helps with
          record-keeping and reporting requirements.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeductionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateDeductionDto'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateDeductionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateDeductionDto'
      responses:
        '200':
          description: Success
  /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}:
    get:
      tags:
        - Deductions
      summary: GET Recurring Deduction Detail
      operationId: Deductions_getDetail
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to get the details for a specific
        deduction code on an employee record.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Deduction Code
          name: deductionCode
          in: path
          required: true
          schema:
            type: string
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeductionsGetDetailResponse'
  /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{resourceId}:
    get:
      tags:
        - Deductions
      summary: >-
        GET Recurring Deduction Details for a specific past/present/future
        deduction
      operationId: Deductions_getRecurringDeductionDetails
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to get details for a particular
        deduction code that occurs in the past/present/future.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Deduction Code
          name: deductionCode
          in: path
          required: true
          schema:
            type: string
        - description: Resource ID of the record
          name: resourceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeductionDto'
    put:
      tags:
        - Deductions
      summary: >-
        Update Recurring Deduction Details for a specific past/present/future
        deduction
      operationId: Deductions_updateRecurringDetails
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to update details for a particular
        deduction code that occurs in the past/present/future. Garnishments
        cannot be updated using the Deduction endpoints.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Deduction Code
          name: deductionCode
          in: path
          required: true
          schema:
            type: string
        - description: Resource ID of the record
          name: resourceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: >-
          A Payroll Deduction code is a unique identifier used by payroll
          systems to categorize and track specific deductions from an employee's
          paycheck. These deductions can include taxes, health insurance
          premiums, retirement contributions, loan repayments, and more. Each
          type of deduction has its own unique code that allows it to be easily
          identified and processed by the payroll system. This not only ensures
          accurate calculations and disbursements, but also helps with
          record-keeping and reporting requirements.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeductionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateDeductionDto'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateDeductionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDeductionDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Deductions
      summary: DELETE Recurring Deduction Code on the Employee Record
      operationId: Deductions_deleteRecurringDeductionCode
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to DELETE a particular deduction
        code that occurs in the past/present/future.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Deduction Code
          name: deductionCode
          in: path
          required: true
          schema:
            type: string
        - description: Resource ID of the record
          name: resourceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings:
    get:
      tags:
        - Earnings
      summary: GET Employee Earnings List
      operationId: Earnings_getEmployeeEarnings
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to GET a list of all active
        earnings associated with the employee record.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
        - description: >-
            The API Filter, by defining specific conditions, enables developers
            to fine-tune data from API calls for more precise results, enhancing
            application efficiency and user-friendliness. For more information
            review the Filtering page
          name: filter
          in: query
          schema:
            type: string
        - description: "Number of results per page.\r\n                **Default Value:** 250\r\n                **Maximum Value:** 250"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
          example: 5
        - description: Pagination offset
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsGetEmployeeEarningsResponse'
    post:
      tags:
        - Earnings
      summary: Create new Recurring Employee Earning
      operationId: Earnings_createRecurringEmployeeEarning
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to create a new earning on the
        employee record.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          A Payroll Earning Code is a specific classification used in payroll
          systems to categorize the different types of income an employee
          receives. These codes denote various earnings such as regular hours
          worked, overtime, bonuses, commissions, or holiday pay, among others.
          The purpose of these codes is to streamline the payroll process,
          making it easier to track, manage, and report different types of
          income. They are essential for accurate payroll calculations and
          compliance with tax and labor laws.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEarningDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateEarningDto'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateEarningDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateEarningDto'
      responses:
        '200':
          description: Success
  /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}:
    get:
      tags:
        - Earnings
      summary: GET Recurring Earning Detail
      operationId: Earnings_getRecurringDetail
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to get the details for a specific
        deduction code on an employee record.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Earning Code
          name: earningCode
          in: path
          required: true
          schema:
            type: string
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsGetRecurringDetailResponse'
  /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{resourceId}:
    get:
      tags:
        - Earnings
      summary: GET Recurring Earning Details for a specific past/present/future earning
      operationId: Earnings_getEarningDetails
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to get details for a particular
        earning code that occurs in the past/present/future.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Earning Code
          name: earningCode
          in: path
          required: true
          schema:
            type: string
        - description: Resource ID of the record
          name: resourceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: If true all responses are mocked and generated randomly
          name: testMode
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEarningDto'
    put:
      tags:
        - Earnings
      summary: >-
        Update Recurring Earning Details for a specific past/present/future
        earning
      operationId: Earnings_updateRecurringEarningDetails
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to update details for a particular
        earning code that occurs in the past/present/future.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Earning Code
          name: earningCode
          in: path
          required: true
          schema:
            type: string
        - description: Resource ID of the record
          name: resourceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: >-
          A Payroll Earning Code is a specific classification used in payroll
          systems to categorize the different types of income an employee
          receives. These codes denote various earnings such as regular hours
          worked, overtime, bonuses, commissions, or holiday pay, among others.
          The purpose of these codes is to streamline the payroll process,
          making it easier to track, manage, and report different types of
          income. They are essential for accurate payroll calculations and
          compliance with tax and labor laws.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEarningDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateEarningDto'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateEarningDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateEarningDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Earnings
      summary: DELETE Recurring Earning Code on the Employee Record
      operationId: Earnings_deleteRecurringEarning
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: >-
        **Summary Description**


        This function will allow the API user to DELETE a particular earning
        code that occurs in the past/present/future.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: A12345
        - description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Earning Code
          name: earningCode
          in: path
          required: true
          schema:
            type: string
        - description: Resource ID of the record
          name: resourceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /time/v2/companies/{companyId}/punchImport:
    post:
      tags:
        - Punch Import
      summary: Create Punch Import
      operationId: PunchImport_fromExternalSource
      security:
        - Bearer: []
        - JWTAuthorization: []
        - paylocity_auth: []
      description: |-
        **Summary Description**

         The Paylocity Punch Import API is an integral part of the Paylocity Time & Labor module, designed to streamline the process of importing time data from external systems. This robust API offers a method for importing punch data, complementing the other two methods: File Import through UX and File Import via SFTP. The API allows a 62-day window for importing punch data - it accepts data for the previous 31 days, given that the pay periods are open and for the upcoming 31 days. Any punches outside this timeframe will not be accepted. This feature allows users to seamlessly integrate their time-tracking systems with the Paylocity platform, enhancing efficiency and data accuracy. 

         **Punch Import API Use Cases:** 

         - An API user who wants to import punches from an external source, pushing them into Paylocity Time & Labor, allowing the Paylocity rules engine to calculate hours worked.
      parameters:
        - description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity
          name: companyId
          in: path
          required: true
          schema: {}
      requestBody:
        description: punch import request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PunchImport'
        required: true
      responses:
        '202':
          description: Successful operation.
      x-codegen-request-body-name: body
  /apiHub/benefits/v1/companies/{companyId}/retirementPlans/{planId}/checks/{checkDate}:
    get:
      tags:
        - Retirement contributions
      summary: Gets Retirement Contributions
      operationId: RetirementContributions_getPlanChecksByDate
      security:
        - JWTAuthorization: []
      description: >-
        **Summary Description**


        The GET Retirement Contributions endpoint provides deferrals, loan
        payments, employer match. The endpoint also provides employee
        compensation, plan compensation and YTD amounts for each money source.
        For smooth data transmission, it's essential to configure your payroll
        code groups within the Payroll/HR system. This configuration must be
        done prior to extracting any data via the API. API users can call the
        API using either the payroll process date or the payroll check date.
        When the API is called, API users will provide three key pieces of
        information: the Paylocity Company ID, the Plan ID, and the Check Date
        they wish to retrieve data for. This information is provided to the API
        user when using our Retirement Webhook solution.


        **The Paylocity Retirement Platform use cases:**

        - The Retirement Contributions endpoint serves to extract data related
        to employee retirement plan contributions and compensation.

        - To use the Retirement Contributions Endpoint, an API user must provide
        the Paylocity Company ID, the Plan ID, and the Check Date for which they
        need data. The returned response will include all employees with
        applicable payroll information.

        - Clients must first set up their Paylocity Payroll Code Groups before
        they can utilize this API endpoint.

        - The optimal solution recommended by Paylocity involves using our
        Retirement Web Hook. This Web Hook equips the API user with necessary
        details such as the Paylocity Company ID, the Plan ID, and the Check
        Date to call the API. This data can then be used to retrieve the most
        recent employee retirement information.
      parameters:
        - description: >-
            The Paylocity Company ID. This is the unique value provided by
            Paylocity to each specific Payroll Entity
          name: companyId
          in: path
          required: true
          schema:
            type: string
          example: WP5239
        - description: >-
            The Plan ID from the retirement plan provider. This would match the
            value provided by the record keeper to the customer
          name: planId
          in: path
          required: true
          schema:
            type: string
          example: SS5693
        - description: "The Check Date from the Paylocity Payroll Calendar \r\n            **Allowable Values:**\r\n            Format: yyyy-MM-dd"
          name: checkDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
          example: '2023-05-16'
        - description: "The number of contribution statements to return. \r\n **Default Value:**\r\n 10\r\n **Maximum Value:**\r\n 100"
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            example: 10
          example: 10
        - description: "The number of contribution statements to skip, if requesting subsequent pages.\r\n**Allowable Values:**\r\n Any integer"
          name: offset
          in: query
          schema:
            type: integer
            format: int32
            example: 10
          example: 10
        - description: "A comma separated list of fields to use for sorting. \r\nFields can be sorted descending by appending :desc to the field name.\r\n\r\n**Allowable Values:**\r\nemployeeId, beginDate, endDate, grossEarnings, hours"
          name: sort
          in: query
          schema:
            type: string
            example: hours:desc,employeeId
          example: hours:desc,employeeId
        - description: A filter to use to limit results to a specific employee.
          name: employeeId
          in: query
          schema:
            type: string
            example: ABCD
          example: ABCD
        - description: >-
            A filter used to limit results to a specific payroll process,
            commonly used when pulling data due to a web hook callback after a
            payroll is processed.
          name: processId
          in: query
          schema:
            type: string
            example: '2023051601'
          example: '2023051601'
        - description: A Boolean value that, when set to "true", returns mock data.
          name: testFlag
          in: query
          schema:
            type: string
            example: 'false'
          example: 'false'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RetirementContributionsGetPlanChecksByDateResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '500':
          description: Server Error
  /v1/employee:
    post:
      tags:
        - Employee (v1)
      summary: Add new employee
      operationId: EmployeeV1_createNewEmployeeRecord
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >
        This resource allows for the creation of a new employee record for a
        specified companyID.  Additional field objects may need to be added for
        companies that use the New Hire Template in the Paylocity HCM solution
        when hiring employees and have additional required fields.
         
        > 🚧 Maintenance Mode

        > 

        > _This resource version is in a limited support mode and should not be
        used for new integrations.  Please use the latest version._
      parameters: []
      requestBody:
        description: New Employee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeV1CreateNewEmployeeRecordRequest'
        required: true
      responses:
        '201':
          description: Successfully added
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        '403':
          description: Forbidden
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /v1/company/{companyId}/employee/{employeeId}:
    get:
      tags:
        - Employee (v1)
      summary: Get Employee
      operationId: EmployeeV1_getEmployeeData
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >
        Get Employee API will return employee data currently available in
        Paylocity Payroll/HR solution.
         
        > 🚧 Maintenance Mode

        > 

        > _This resource version is in a limited support mode and should not be
        used for new integrations.  Please use the latest version._
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employeeV1'
        '403':
          description: Forbidden
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
  /v1/update-employee:
    post:
      tags:
        - Employee (v1)
      summary: Update employee
      operationId: EmployeeV1_updateEmployeeDataToPaylocity
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >
        Update Employee API sends updates to employee data to Paylocity
        Payroll/HR solution.
         
        > 🚧 Maintenance Mode

        > 

        > _This resource version is in a limited support mode and should not be
        used for new integrations.  Please use the latest version._
      parameters: []
      requestBody:
        description: UpdateEmployee
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/EmployeeV1UpdateEmployeeDataToPaylocityRequest
        required: true
      responses:
        '200':
          description: Successfully updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        '403':
          description: Forbidden
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /v1/deduction:
    post:
      tags:
        - Deduction
      summary: Add / Update Deduction
      operationId: Deduction_addOrUpdateDeduction
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Add/Update Deduction API sends new or updated employee deduction
        information directly to Paylocity Payroll/HR solution.
      parameters: []
      requestBody:
        description: Deduction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeductionAddOrUpdateDeductionRequest'
        required: true
      responses:
        '200':
          description: Successfully processed
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        '403':
          description: Forbidden
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{startDate}:
    delete:
      tags:
        - Deduction
      summary: Delete deduction for deduction code / start date
      operationId: Deduction_removeDeductionByCodeAndStartDate
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Delete Deduction API deletes an incorrect deduction from Paylocity
        Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Deduction Code
          name: deductionCode
          in: path
          required: true
          schema:
            type: string
        - description: Start Date
          name: startDate
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully Deleted
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
  /v1/companies/{companyId}/employees/{employeeId}/deductions:
    get:
      tags:
        - Deduction
      summary: Get All Deductions
      operationId: Deduction_getAllDeductions
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: Get All Deductions returns all deductions for the selected employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeductionGetAllDeductionsResponse'
        '403':
          description: Forbidden
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
  /v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}:
    get:
      tags:
        - Deduction
      summary: Get Deduction for Deduction Code
      operationId: Deduction_getByCode
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get Deduction for Deduction Code returns records for a specific
        deduction for the selected employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Deduction Code
          name: deductionCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deduction'
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
  /v1/companies/{companyId}/onboarding/employees:
    post:
      tags:
        - Onboarding
      summary: Add Employee to Onboarding
      operationId: Onboarding_addEmployeeToOnboarding
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Onboarding API sends employee data into Paylocity Onboarding to help
        ensure an easy and accurate hiring process for subsequent completion
        into Paylocity Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: onboarding Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding'
        required: true
      responses:
        '201':
          description: Successfully Added
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        '403':
          description: Forbidden
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      x-codegen-request-body-name: body
  /v1/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}:
    get:
      tags:
        - Local Tax
      summary: Get Local Tax for Tax Code
      operationId: LocalTax_getForTaxCode
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get Local Tax for Tax Code returns local tax information for the
        specific tax code for the selected employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Tax Code
          name: taxCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/localTax'
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
    put:
      tags:
        - Local Tax
      summary: Update Local Tax
      operationId: LocalTax_updateForTaxCode
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Update Local Tax sends updated local tax code information for the
        selected employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Tax Code
          name: taxCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          localTax Model (Note: taxCode can be included in the localTax model
          but will be ignored)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/localTax'
        required: true
      responses:
        '204':
          description: Successfully Updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Local Tax
      summary: Delete Local Tax for Tax Code
      operationId: LocalTax_removeForTaxCode
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Delete Local Tax for Tax Code deletes the local tax code from Paylocity
        Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Tax Code
          name: taxCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully Deleted
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
  /v1/companies/{companyId}/employees/{employeeId}/localTaxes:
    get:
      tags:
        - Local Tax
      summary: Get All Local Taxes
      operationId: LocalTax_getAllTaxesForEmployee
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get All Local Taxes returns all local tax information for the selected
        employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalTaxGetAllTaxesForEmployeeResponse'
        '403':
          description: Forbidden
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
    post:
      tags:
        - Local Tax
      summary: Add Local Tax
      operationId: LocalTax_createOrUpdateLocalTaxes
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Add Local Tax sends new local tax information directly to Paylocity
        Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: localTax Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/localTax'
        required: true
      responses:
        '201':
          description: Successfully Added
          headers:
            location:
              description: The URI to the newly created local tax
              schema:
                type: string
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        '403':
          description: Forbidden
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      x-codegen-request-body-name: body
  /v2/companies/{companyId}/employees/{employeeId}/additionalRates:
    put:
      tags:
        - Additional Rates
      summary: Add/update additional rates
      operationId: AdditionalRates_updateEmployeeAdditionalRates
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Sends new or updated employee additional rates information directly to
        Paylocity Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Additional Rate Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/additionalRate'
        required: true
      responses:
        '200':
          description: Successfully added or updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AdditionalRatesUpdateEmployeeAdditionalRatesResponse
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AdditionalRatesUpdateEmployeeAdditionalRates500Response
      x-codegen-request-body-name: json
  /v2/credentials/secrets:
    post:
      tags:
        - Client Credentials
      summary: Obtain new client secret.
      operationId: ClientCredentials_obtainNewClientSecret
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Obtain new client secret for Paylocity-issued client id. See Weblink
        Authentication section for details.
      requestBody:
        description: Add Client Secret Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addClientSecret'
        required: true
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ClientCredentialsObtainNewClientSecretResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ClientCredentialsObtainNewClientSecret400Response
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ClientCredentialsObtainNewClientSecret500Response
      x-codegen-request-body-name: json
  /v2/companies/{companyId}/codes/{codeResource}:
    get:
      tags:
        - Company Codes
      summary: Get All Company Codes
      operationId: CompanyCodes_getAllByResource
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: "Get All Company Codes for the selected company and resource.\n \n> 🚧 Maintenance Mode\n> \n> _This API is in a limited support mode and certain resources will be moved to a sunset status in the next 18-24 months._\n> \r\n> The [Company Level Information API](ref:get_apihub-payroll-v1-companies-companyid-jobs) should be used when possible in place of Company Codes resource of this API"
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Type of Company Code. Common values costcenter1, costcenter2,
            costcenter3, deductions, earnings, taxes, paygrade, positions.
          name: codeResource
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCodesGetAllByResourceResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Invalid Code Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCodesGetAllByResource404Response'
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCodesGetAllByResource500Response'
  /v2/companies/{companyId}/openapi:
    get:
      tags:
        - Company-Specific Schema
      summary: Get Company-Specific Open API Documentation
      operationId: CompanySpecificSchema_getOpenApiDoc
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        The company-specific Open API endpoint allows the client to GET an Open
        API document for the Paylocity API that is customized with
        company-specific resource schemas. These customized resource schemas
        define certain properties as enumerations of pre-defined values that
        correspond to the company's setup with Paylocity Payroll/HR solution.
        The customized schemas also indicate which properties are required by
        the company within Paylocity Payroll/HR solution.<br  />To learn more
        about Open API, click [here](https://www.openapis.org/)
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanySpecificSchemaGetOpenApiDocResponse
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanySpecificSchemaGetOpenApiDoc500Response
  /v2/companies/{companyId}/customfields/{category}:
    get:
      tags:
        - Custom Fields
      summary: Get All Custom Fields
      operationId: CustomFields_getAllByCategory
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: Get All Custom Fields for the selected company
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Custom Fields Category
          name: category
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldsGetAllByCategoryResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Invalid Category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldsGetAllByCategory404Response'
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldsGetAllByCategory500Response'
  /v2/companies/{companyId}/employees/{employeeId}/directDeposit:
    get:
      tags:
        - Direct Deposit
      summary: Get All Direct Deposit
      operationId: DirectDeposit_getAllDirectDeposits
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get All Direct Deposit returns main direct deposit and all additional
        direct depositsfor the selected employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositGetAllDirectDepositsResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The employee, or direct deposit does not exist
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositGetAllDirectDeposits404Response
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositGetAllDirectDeposits500Response
  /v2/companies/{companyId}/employees/{employeeId}/earnings:
    get:
      tags:
        - Earnings
      summary: Get All Earnings
      operationId: Earnings_getAll
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: Get All Earnings returns all earnings for the selected employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsGetAllResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The employee does not exist
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsGetAll500Response'
    put:
      tags:
        - Earnings
      summary: Add/Update Earning
      operationId: Earnings_addOrUpdateEarning
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Add/Update Earning API sends new or updated employee earnings
        information directly to Paylocity Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Earning Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/earning'
        required: true
      responses:
        '200':
          description: Successfully added or updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsAddOrUpdateEarningResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsAddOrUpdateEarning500Response'
      x-codegen-request-body-name: json
  /v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{startDate}:
    get:
      tags:
        - Earnings
      summary: Get Earning by Earning Code and Start Date
      operationId: Earnings_getByCodeAndStart
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get Earnings returns the single earning with the provided earning code
        and start date for the selected employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Earning Code
          name: earningCode
          in: path
          required: true
          schema:
            type: string
        - description: Start Date
          name: startDate
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/earning'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: >-
            The employee does not exist, or the specified earningCode-startDate
            combination does not exist
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsGetByCodeAndStartResponse'
    delete:
      tags:
        - Earnings
      summary: Delete Earning by Earning Code and Start Date
      operationId: Earnings_deleteByCodeAndStart
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: Delete Earning by Earning Code and Start Date
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Earning Code
          name: earningCode
          in: path
          required: true
          schema:
            type: string
        - description: Start Date
          name: startDate
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsDeleteByCodeAndStartResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: >-
            The employee does not exist, or the specified earningCode-startDate
            combination does not exist
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsDeleteByCodeAndStart500Response'
  /v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}:
    get:
      tags:
        - Earnings
      summary: Get Earnings by Earning Code
      operationId: Earnings_getByEarningCode
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get Earnings returns all earnings with the provided earning code for the
        selected employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Earning Code
          name: earningCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsGetByEarningCodeResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The employee does not exist
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsGetByEarningCode500Response'
  /v2/companies/{companyId}/employees/{employeeId}/emergencyContacts:
    put:
      tags:
        - Emergency Contacts
      summary: Add/update emergency contacts
      operationId: EmergencyContacts_addOrUpdate
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Sends new or updated employee emergency contacts directly to Paylocity
        Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Emergency Contact Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emergencyContact'
        required: true
      responses:
        '200':
          description: Successfully added or updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContactsAddOrUpdateResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContactsAddOrUpdate500Response'
      x-codegen-request-body-name: json
  /v2/companies/{companyId}/employees/{employeeId}/benefitSetup:
    put:
      tags:
        - Employee Benefit Setup
      summary: Add/update employee's benefit setup
      operationId: EmployeeBenefitSetup_addOrUpdateBenefitSetup
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Sends new or updated employee benefit setup information directly to
        Paylocity Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: BenefitSetup Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/benefitSetup'
        required: true
      responses:
        '200':
          description: Successfully added or updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeBenefitSetupAddOrUpdateBenefitSetupResponse
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeBenefitSetupAddOrUpdateBenefitSetup500Response
      x-codegen-request-body-name: json
  /v2/weblinkstaging/companies/{companyId}/employees/newemployees:
    post:
      tags:
        - Employee Staging
      summary: Add new employee to Web Link
      operationId: EmployeeStaging_addNewEmployeeToWebLink
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Add new employee to Web Link will send partially completed or
        potentially erroneous new hire record to Web Link, where it can be
        corrected and competed by company administrator or authorized Paylocity
        Service Bureau employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: StagedEmployee Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stagedEmployee'
        required: true
      responses:
        '201':
          description: Successfully Added
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeStagingAddNewEmployeeToWebLinkResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeStagingAddNewEmployeeToWebLink400Response
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeStagingAddNewEmployeeToWebLink500Response
      x-codegen-request-body-name: json
  /v2/companies/{companyId}/employees:
    get:
      tags:
        - Employee
      summary: Get all employees
      operationId: Employee_getAllEmployees
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: "Get All Employees API will return employee data currently available in Paylocity Payroll/HR solution.\n \n> 🚧 Maintenance Mode\n> \n> _This API is in a limited support mode and certain resources will be moved to a sunset status in the next 18-24 months._\n> \r\n> The [Employee Demographic API](ref:get_corehr-v1-companies-companyid-employees) should be used when possible in place of the Employee resources of this API"
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Number of records per page. Default value is 25.
          name: pagesize
          in: query
          schema:
            type: integer
        - description: >-
            Page number to retrieve; page numbers are 0-based (so to get the
            first page of results, pass pagenumber=0). Default value is 0.
          name: pagenumber
          in: query
          schema:
            type: integer
        - description: >-
            Whether to include the total record count in the header's
            X-Pcty-Total-Count property. Default value is true.
          name: includetotalcount
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetAllEmployeesResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The company does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetAllEmployees404Response'
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetAllEmployees500Response'
    post:
      tags:
        - Employee
      summary: Add new employee
      operationId: Employee_addToPaylocity
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        New Employee API sends new employee data directly to Paylocity
        Payroll/HR solution. Companies who use the New Hire Template in
        Paylocity Payroll/HR solution may require additional fields when hiring
        employees. New Employee API Requests will honor these required fields.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Employee Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee'
        required: true
      responses:
        '201':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeAddToPaylocityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeAddToPaylocity400Response'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeAddToPaylocity500Response'
      x-codegen-request-body-name: json
  /v2/companies/{companyId}/employees/{employeeId}:
    get:
      tags:
        - Employee
      summary: Get employee
      operationId: Employee_getEmployeeData
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: "Get Employee API will return employee data currently available in Paylocity Payroll/HR solution.\n \n> 🚧 Maintenance Mode\n> \n> _This API is in a limited support mode and certain resources will be moved to a sunset status in the next 18-24 months._\n> \r\n> The [Employee Demographic API](ref:get_corehr-v1-companies-companyid-employees-employeeid) should be used when possible in place of the Employee resources of this API"
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetEmployeeDataResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The employee does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetEmployeeData404Response'
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetEmployeeData500Response'
    patch:
      tags:
        - Employee
      summary: Update employee
      operationId: Employee_updateEmployeeData
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: Update Employee API will update existing employee data in WebPay.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Employee Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee'
        required: true
      responses:
        '200':
          description: Successfully Updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeUpdateEmployeeDataResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeUpdateEmployeeData500Response'
      x-codegen-request-body-name: json
  /v2/companies/{companyId}/employees/{employeeId}/localTaxes:
    get:
      tags:
        - Local Taxes
      summary: Get all local taxes
      operationId: LocalTaxes_getAllForEmployee
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: Returns all local taxes for the selected employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalTaxesGetAllForEmployeeResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The employee does not exist
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalTaxesGetAllForEmployee500Response'
    post:
      tags:
        - Local Taxes
      summary: Add new local tax
      operationId: LocalTaxes_addNewTax
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Sends new employee local tax information directly to Paylocity
        Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: LocalTax Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/localTax'
        required: true
      responses:
        '201':
          description: Successfully added
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalTaxesAddNewTaxResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalTaxesAddNewTax500Response'
      x-codegen-request-body-name: json
  /v2/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}:
    get:
      tags:
        - Local Taxes
      summary: Get local taxes by tax code
      operationId: LocalTaxes_getByTaxCode
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Returns all local taxes with the provided tax code for the selected
        employee.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Tax Code
          name: taxCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalTaxesGetByTaxCodeResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: >-
            The employee does not exist, or the specified tax code does not
            exist
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalTaxesGetByTaxCode500Response'
    delete:
      tags:
        - Local Taxes
      summary: Delete local tax by tax code
      operationId: LocalTaxes_deleteByTaxCode
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: Delete local tax by tax code
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Tax Code
          name: taxCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalTaxesDeleteByTaxCodeResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: >-
            The employee does not exist, or the specified tax code does not
            exist
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalTaxesDeleteByTaxCode500Response'
  /v2/companies/{companyId}/employees/{employeeId}/nonprimaryStateTax:
    put:
      tags:
        - Non-Primary State Tax
      summary: Add/update non-primary state tax
      operationId: NonPrimaryStateTax_addOrUpdateStateTax
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Sends new or updated employee non-primary state tax information directly
        to Paylocity Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Non-Primary State Tax Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nonPrimaryStateTax'
        required: true
      responses:
        '200':
          description: Successfully added or updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NonPrimaryStateTaxAddOrUpdateStateTaxResponse
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NonPrimaryStateTaxAddOrUpdateStateTax500Response
      x-codegen-request-body-name: json
  /v2/companies/{companyId}/employees/{employeeId}/paystatement/details/{year}/{checkDate}:
    get:
      tags:
        - PayStatements
      summary: >-
        Get employee pay statement details data for the specified year and check
        date.
      operationId: PayStatements_getDetailsByYearAndCheckDate
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get pay statement details API will return employee pay statement detail
        data currently available in Paylocity Payroll/HR solution for the
        specified year and check date.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The year for which to retrieve pay statement data
          name: year
          in: path
          required: true
          schema:
            type: string
        - description: The check date for which to retrieve pay statement data
          name: checkDate
          in: path
          required: true
          schema:
            type: string
        - description: Number of records per page. Default value is 25.
          name: pagesize
          in: query
          schema:
            type: integer
        - description: >-
            Page number to retrieve; page numbers are 0-based (so to get the
            first page of results, pass pagenumber=0). Default value is 0.
          name: pagenumber
          in: query
          schema:
            type: integer
        - description: >-
            Whether to include the total record count in the header's
            X-Pcty-Total-Count property. Default value is true.
          name: includetotalcount
          in: query
          schema:
            type: boolean
        - description: >-
            Retrieve pay statement details related to specific deduction,
            earning or tax types. Common values include 401k, Memo, Reg, OT,
            Cash Tips, FED and SITW.
          name: codegroup
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayStatementsGetDetailsByYearAndCheckDateResponse
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The employee, specified year, or check date does not exist
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayStatementsGetDetailsByYearAndCheckDate404Response
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayStatementsGetDetailsByYearAndCheckDate500Response
  /v2/companies/{companyId}/employees/{employeeId}/paystatement/details/{year}:
    get:
      tags:
        - PayStatements
      summary: Get employee pay statement details data for the specified year.
      operationId: PayStatements_getDetailsByYear
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get pay statement details API will return employee pay statement details
        data currently available in Paylocity Payroll/HR solution for the
        specified year.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The year for which to retrieve pay statement data
          name: year
          in: path
          required: true
          schema:
            type: string
        - description: Number of records per page. Default value is 25.
          name: pagesize
          in: query
          schema:
            type: integer
        - description: >-
            Page number to retrieve; page numbers are 0-based (so to get the
            first page of results, pass pagenumber=0). Default value is 0.
          name: pagenumber
          in: query
          schema:
            type: integer
        - description: >-
            Whether to include the total record count in the header's
            X-Pcty-Total-Count property. Default value is true.
          name: includetotalcount
          in: query
          schema:
            type: boolean
        - description: >-
            Retrieve pay statement details related to specific deduction,
            earning or tax types. Common values include 401k, Memo, Reg, OT,
            Cash Tips, FED and SITW.
          name: codegroup
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayStatementsGetDetailsByYearResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The employee, specified year, or check date does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayStatementsGetDetailsByYear404Response'
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayStatementsGetDetailsByYear500Response'
  /v2/companies/{companyId}/employees/{employeeId}/paystatement/summary/{year}/{checkDate}:
    get:
      tags:
        - PayStatements
      summary: >-
        Get employee pay statement summary data for the specified year and check
        date.
      operationId: PayStatements_getSummaryData
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get pay statement summary API will return employee pay statement summary
        data currently available in Paylocity Payroll/HR solution for the
        specified year and check date.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The year for which to retrieve pay statement data
          name: year
          in: path
          required: true
          schema:
            type: string
        - description: The check date for which to retrieve pay statement data
          name: checkDate
          in: path
          required: true
          schema:
            type: string
        - description: Number of records per page. Default value is 25.
          name: pagesize
          in: query
          schema:
            type: integer
        - description: >-
            Page number to retrieve; page numbers are 0-based (so to get the
            first page of results, pass pagenumber=0). Default value is 0.
          name: pagenumber
          in: query
          schema:
            type: integer
        - description: >-
            Whether to include the total record count in the header's
            X-Pcty-Total-Count property. Default value is true.
          name: includetotalcount
          in: query
          schema:
            type: boolean
        - description: >-
            Retrieve pay statement details related to specific deduction,
            earning or tax types. Common values include 401k, Memo, Reg, OT,
            Cash Tips, FED and SITW.
          name: codegroup
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayStatementsGetSummaryDataResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The employee, specified year, or check date does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayStatementsGetSummaryData404Response'
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayStatementsGetSummaryData500Response'
  /v2/companies/{companyId}/employees/{employeeId}/paystatement/summary/{year}:
    get:
      tags:
        - PayStatements
      summary: Get employee pay statement summary data for the specified year.
      operationId: PayStatements_getSummaryByYear
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Get pay statement summary API will return employee pay statement summary
        data currently available in Paylocity Payroll/HR solution for the
        specified year.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The year for which to retrieve pay statement data
          name: year
          in: path
          required: true
          schema:
            type: string
        - description: Number of records per page. Default value is 25.
          name: pagesize
          in: query
          schema:
            type: integer
        - description: >-
            Page number to retrieve; page numbers are 0-based (so to get the
            first page of results, pass pagenumber=0). Default value is 0.
          name: pagenumber
          in: query
          schema:
            type: integer
        - description: >-
            Whether to include the total record count in the header's
            X-Pcty-Total-Count property. Default value is true.
          name: includetotalcount
          in: query
          schema:
            type: boolean
        - description: >-
            Retrieve pay statement details related to specific deduction,
            earning or tax types. Common values include 401k, Memo, Reg, OT,
            Cash Tips, FED and SITW.
          name: codegroup
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayStatementsGetSummaryByYearResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The employee, specified year, or check date does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayStatementsGetSummaryByYear404Response'
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayStatementsGetSummaryByYear500Response'
  /v2/companies/{companyId}/employees/{employeeId}/primaryStateTax:
    put:
      tags:
        - Primary State Tax
      summary: Add/update primary state tax
      operationId: PrimaryStateTax_addOrUpdateTax
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Sends new or updated employee primary state tax information directly to
        Paylocity Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Primary State Tax Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stateTax'
        required: true
      responses:
        '200':
          description: Successfully added or updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimaryStateTaxAddOrUpdateTaxResponse'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimaryStateTaxAddOrUpdateTax500Response'
      x-codegen-request-body-name: json
  /v2/companies/{companyId}/employees/{employeeId}/sensitivedata:
    get:
      tags:
        - Sensitive Data
      summary: Get sensitive data
      operationId: SensitiveData_getEmployeeSensitiveData
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Gets employee sensitive data information directly from Paylocity
        Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SensitiveDataGetEmployeeSensitiveDataResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SensitiveDataGetEmployeeSensitiveData400Response
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SensitiveDataGetEmployeeSensitiveData500Response
    put:
      tags:
        - Sensitive Data
      summary: Add/update sensitive data
      operationId: SensitiveData_addOrUpdateEmployeeSensitiveData
      security:
        - paylocity_auth:
            - WebLinkAPI
      description: >-
        Sends new or updated employee sensitive data information directly to
        Paylocity Payroll/HR solution.
      parameters:
        - description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Sensitive Data Model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sensitiveData'
        required: true
      responses:
        '200':
          description: Successfully added or updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SensitiveDataAddOrUpdateEmployeeSensitiveDataResponse
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SensitiveDataAddOrUpdateEmployeeSensitiveData500Response
      x-codegen-request-body-name: json
components:
  schemas:
    AddBillingCodeRequest:
      description: Billing code request payload.
      type: object
      properties:
        billingCodes:
          description: Array of billing codes.
          type: array
          items:
            $ref: '#/components/schemas/BillingCodeDto'
          nullable: true
    BillingCodeDto:
      description: Billing code DTO payload.
      type: object
      properties:
        billingCode:
          description: >-
            Billing code associated with the screening order. This billing code
            is created on the partner side for a specific company.
          type: string
          nullable: true
        isActive:
          description: "(Optional, if not provided – TRUE) A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
          type: boolean
    CallbackDetailsDto:
      description: Callback Details
      type: object
      properties:
        successCallbackUrl:
          description: "Your callback POST endpoint URL where you will receive new screening orders.\r\n    **Allowable Values:**\r\n    256 char max"
          type: string
          nullable: true
        errorCallbackUrl:
          description: "Optional. Your callback POST endpoint where you will receive errors occured during the POST a new screening order.\r\n    **Allowable Values:**\r\n    256 char max"
          type: string
          nullable: true
    CallerDetailsDto:
      type: object
      properties:
        callerName:
          description: "This is a field used to identify the partner, this typically is the company name.\r\n    **Allowable Values:**\r\n    50 char max"
          type: string
          nullable: true
    CandidateExternalDto:
      type: object
      properties:
        title:
          description: Holds the title of the candidate, e.g., Mr., Ms., Dr.
          type: string
          nullable: true
        firstName:
          description: Candidate's first name.
          type: string
          nullable: true
        middleName:
          description: Candidate's middle name.
          type: string
          nullable: true
        lastName:
          description: Candidate's last name.
          type: string
          nullable: true
        email:
          description: Candidate's email address.
          type: string
          nullable: true
        mobile:
          description: Candidate's mobile phone number.
          type: string
          nullable: true
        location:
          description: Location of the candidate.
          type: string
          nullable: true
    CandidateScreeningOrderStatusUpdateRequest:
      description: The update information for the screening order
      type: object
      properties:
        candidateScreeningOrderId:
          description: Unique identifier of the screening order that was sent to you.
          type: string
          format: uuid
          example: e72f7918-20c5-4bd2-9a5f-9bee67bd304d
        updatedAt:
          description: 'The date time of the update.Example: 2023-01-04T04:23:11.586Z'
          type: string
          format: date-time
          example: '2023-01-04T04:23:11.586Z'
        oldStatus:
          description: The previous status of the screening order.
          enum:
            - Ordered
            - WaitingOnCandidate
            - InProgress
            - Hold
            - Complete
            - PreAdverseActionSent
            - AdverseActionCancelled
            - Dispute
            - AdverseActionSent
          type: string
          nullable: true
        newStatus:
          description: The new status of the screening order.
          enum:
            - Ordered
            - WaitingOnCandidate
            - InProgress
            - Hold
            - Complete
            - PreAdverseActionSent
            - AdverseActionCancelled
            - Dispute
            - AdverseActionSent
          type: string
          nullable: true
        services:
          description: >-
            The array of services in scope of which the screening order will be
            processed
          type: array
          items:
            $ref: '#/components/schemas/ServiceStatusUpdateDto'
          nullable: true
        screeningReportDocuments:
          description: >-
            An array of strings representing the URL of the screening report
            that can be viewed on the partner’s web application.
          type: array
          items:
            type: string
          nullable: true
    CandidateScreeningOrderStatusUpdateResponse:
      description: The response of the update screening order
      type: object
      properties:
        candidateScreeningOrderId:
          description: The Id of the screening order that was updated
          type: string
          format: uuid
          example: 9de5efb4-3ede-4b92-97f7-71389c31abff
        status:
          description: The updated status
          type: string
          nullable: true
          example: >-
            Ordered, WaitingOnCandidate, InProgress, Hold, Complete,
            PreAdverseActionSent, AdverseActionCancelled, Dispute,
            AdverseActionSent
    CandidateScreeningOrdersSubscriptionResponse:
      description: Callback informations.
      type: object
      properties:
        webhookCallbackId:
          description: The GUID of the Callback URL.
          type: string
          format: uuid
        apiKey:
          description: The API Key you specfied when you created the Callback URL.
          type: string
          nullable: true
        callbackDetails:
          $ref: '#/components/schemas/CallbackDetailsDto'
        callerDetails:
          $ref: '#/components/schemas/CallerDetailsDto'
    ClientOnboardingUpsertRequest:
      description: The onboarding request.
      type: object
      properties:
        companyId:
          description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity. \r\n    **Allowable Values:**\r\n    9 char max"
          type: string
          nullable: true
          example: ' A00123'
        status:
          description: >-
            The status to indicate the onboarding stage for a customer where the
            account form was filled up and is currently under review by your
            team.
          enum:
            - InProgress
            - Approved
            - Rejected
          type: string
          nullable: true
    ClientOnboardingUpsertResponse:
      description: Onboarding Response
      type: object
      properties:
        upsertResult:
          $ref: '#/components/schemas/UpsertResultDto'
    DeletePackageResponse:
      description: The response of the delete operation.
      type: object
      properties:
        packageId:
          description: The id of the deleted screening package.
          type: string
          nullable: true
        status:
          description: The status of the delete operation.
          type: string
          nullable: true
    DeleteSubscriptionResponse:
      type: object
      properties:
        status:
          description: Status of the delete subscription operation.
          type: string
          nullable: true
        callbackId:
          description: The GUID of the Callback URL deleted.
          type: string
          format: uuid
    ErrorDto:
      type: object
      properties:
        code:
          description: Error code associated with the error.
          type: string
          nullable: true
        message:
          description: Descriptive message detailing the error.
          type: string
          nullable: true
    GenericErrorResponse:
      type: object
      properties:
        correlationId:
          description: A unique identifier used for tracing and correlation purposes.
          type: string
          nullable: true
        value:
          $ref: '#/components/schemas/ErrorDto'
    NewCandidateScreeningOrderEventPayloadData:
      type: object
      properties:
        candidateScreeningOrder:
          $ref: '#/components/schemas/PartnerCandidateScreeningOrderDto'
    PartnerCandidateScreeningOrderDto:
      type: object
      properties:
        candidateScreeningOrderId:
          description: Unique identifier for the candidate screening order.
          type: string
          format: uuid
        candidate:
          $ref: '#/components/schemas/CandidateExternalDto'
        companyId:
          description: Identifier for the company associated with the screening.
          type: string
          nullable: true
        packageId:
          description: Identifier for the screening package selected.
          type: string
          nullable: true
        billingCode:
          description: Billing code associated with the screening order.
          type: string
          nullable: true
        location:
          description: Location associated with the screening order.
          type: string
          nullable: true
        recruiter:
          $ref: '#/components/schemas/RecruiterDto'
    PriceDto:
      description: An object representing the price of the package.
      type: object
      properties:
        value:
          description: The value amount, or cost, for the package.
          type: number
          format: double
        currency:
          description: "The currency of the price.\r\n    **Allowable Values:**\r\n    USD, EUR, GBP, CAD"
          type: string
          nullable: true
    RecruiterDto:
      type: object
      properties:
        recruiterId:
          description: Unique identifier for the recruiter.
          type: string
          nullable: true
        firstName:
          description: First name of the recruiter.
          type: string
          nullable: true
        lastName:
          description: Last name of the recruiter.
          type: string
          nullable: true
        email:
          description: Email address of the recruiter.
          type: string
          nullable: true
        certificationDateTime:
          description: >-
            The date and time when the recruiter was certified. Date format in
            ISO 8601.
          type: string
          format: date-time
    ScreeningPackageBulkUpsertDto:
      description: Screening Package information
      type: object
      properties:
        packageId:
          description: "The Id of the Screening Package.\r\n    **Allowable Values:**\r\n    36 char max"
          type: string
          nullable: true
        isActive:
          description: "A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
          type: boolean
        packageSummary:
          description: "A detailed description of the background check package and what is included in the package.\r\n    **Allowable Values:**\r\n    250 char max"
          type: string
          nullable: true
        packageName:
          description: "The name of the specific background check package that the users will see.\r\n    **Allowable Values:**\r\n    250 char max"
          type: string
          nullable: true
        services:
          description: >-
            An array of objects representing the underlying services that are
            included in the background check package.
          type: array
          items:
            $ref: '#/components/schemas/ServiceDto'
          nullable: true
        price:
          $ref: '#/components/schemas/PriceDto'
        billingCode:
          description: Partner billing code
          type: string
          nullable: true
    ScreeningPackageBulkUpsertRequest:
      description: Screening Package Upsert Request.
      type: object
      properties:
        packages:
          description: The list of screening packages to be upserted.
          type: array
          items:
            $ref: '#/components/schemas/ScreeningPackageBulkUpsertDto'
          nullable: true
    ScreeningPackageDto:
      description: Screening Package Information
      type: object
      properties:
        isActive:
          description: "A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
          type: boolean
        packageSummary:
          description: "A detailed description of the background check package and what is included in the package.\r\n    **Allowable Values:**\r\n    250 char max"
          type: string
          nullable: true
        packageName:
          description: "The name of the specific background check package that the users will see.\r\n    **Allowable Values:**\r\n    250 char max"
          type: string
          nullable: true
        services:
          description: >-
            An array of objects representing the underlying services that are
            included in the background check package.
          type: array
          items:
            $ref: '#/components/schemas/ServiceDto'
          nullable: true
        price:
          $ref: '#/components/schemas/PriceDto'
        billingCode:
          description: >-
            Billing code created by a client that can be associated with an
            order (optional).
          type: string
          nullable: true
        packageId:
          description: The Id of the Screening Package.
          type: string
          nullable: true
        createdAt:
          description: The date when the Screening Package was created.
          type: string
          nullable: true
        updatedAt:
          description: The date when the Screening Package was updated.
          type: string
          nullable: true
        partnerName:
          description: Related Partner name.
          type: string
          nullable: true
    ScreeningPackageUpsertRequest:
      description: Screening package Upsert Request.
      type: object
      properties:
        isActive:
          description: "A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
          type: boolean
        packageSummary:
          description: "A detailed description of the background check package and what is included in the package.\r\n    **Allowable Values:**\r\n    250 char max"
          type: string
          nullable: true
        packageName:
          description: "The name of the specific background check package that the users will see.\r\n    **Allowable Values:**\r\n    250 char max"
          type: string
          nullable: true
        services:
          description: >-
            An array of objects representing the underlying services that are
            included in the background check package.
          type: array
          items:
            $ref: '#/components/schemas/ServiceDto'
          nullable: true
        price:
          $ref: '#/components/schemas/PriceDto'
        billingCode:
          description: >-
            Billing code created by a client that can be associated with an
            order (optional).
          type: string
          nullable: true
    ScreeningPackageUpsertResponse:
      description: Screening Package Upserted Response
      type: object
      properties:
        upsertResult:
          $ref: '#/components/schemas/UpsertResultDto'
    ScreeningPackagesResponse:
      type: object
      properties:
        count:
          description: Gets the count of items in the Values list.
          type: integer
          format: int32
          readOnly: true
        values:
          description: A list of items.
          type: array
          items:
            $ref: '#/components/schemas/ScreeningPackageDto'
          nullable: true
    ServiceDto:
      type: object
      properties:
        serviceName:
          description: "The name of the specific service within a background check package that the users will see.\r\n    **Allowable Values:**\r\n    50 char max"
          type: string
          nullable: true
        serviceSummary:
          description: "A detailed description of the underlying service in a package.\r\n    **Allowable Values:**\r\n    250 char max"
          type: string
          nullable: true
    ServiceStatusUpdateDto:
      type: object
      properties:
        serviceName:
          description: "The name of the specific service within a background check package that the users will see.\r\n    **Allowable Values:**\r\n    50 char max"
          type: string
          nullable: true
        oldStatus:
          description: The previous status of the service.
          enum:
            - Pending
            - InProgress
            - Completed
          type: string
          nullable: true
        newStatus:
          description: The new status of the service.
          enum:
            - Pending
            - InProgress
            - Completed
          type: string
          nullable: true
        note:
          description: "This is an optional field if the partner needs to send additional details with status of a service \r\n    **Allowable Values:**\r\n    250 char max"
          type: string
          nullable: true
    SubscribeNewCandidateScreeningOrderRequest:
      type: object
      properties:
        apiKey:
          description: "Optional. The value of the x-api-key header to utilize while executing the callback.\r\n                **Allowable Values:**\r\n                50 char max"
          type: string
          nullable: true
        callbackDetails:
          $ref: '#/components/schemas/CallbackDetailsDto'
        callerDetails:
          $ref: '#/components/schemas/CallerDetailsDto'
    SubscribeNewCandidateScreeningOrderResponse:
      description: Response of successfully registed webhook.
      type: object
      properties:
        status:
          description: Status
          type: string
          nullable: true
        webhookCallbackId:
          description: GUID of the callback.
          type: string
          format: uuid
        requestObject:
          $ref: '#/components/schemas/SubscribeNewCandidateScreeningOrderRequest'
    UpdateBillingCodeRequest:
      description: Update billing code request payload.
      type: object
      properties:
        isActive:
          description: "A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
          type: boolean
    UpsertResultDto:
      description: Upsert response.
      type: object
      properties:
        inserted:
          description: True if it was inserted, false if it was updated
          type: boolean
        updated:
          description: True if it was updated, false if it was inserted
          type: boolean
      additionalProperties:
        type: object
        nullable: true
    ValidationErrorDto:
      type: object
      properties:
        code:
          description: Error code associated with the error.
          type: string
          nullable: true
        message:
          description: Descriptive message detailing the error.
          type: string
          nullable: true
        fields:
          description: A string detailing the fields involved in the validation error.
          type: string
          nullable: true
    ValidationErrorResponse:
      type: object
      properties:
        count:
          description: Gets the count of items in the Values list.
          type: integer
          format: int32
          readOnly: true
        values:
          description: A list of items.
          type: array
          items:
            $ref: '#/components/schemas/ValidationErrorDto'
          nullable: true
        correlationId:
          description: A unique identifier used for tracing and correlation purposes.
          type: string
          nullable: true
    CareerLevelDto:
      type: object
      properties:
        description:
          description: Description of the career level.
          type: string
          nullable: true
        careerLevelKey:
          description: Career level key.
          type: integer
          format: int32
          nullable: true
        clientId:
          description: Client ID associated with career level.
          type: integer
          format: int32
          nullable: true
        code:
          description: Career level code.
          type: string
          nullable: true
        name:
          description: Name of the career level.
          type: string
          nullable: true
        positionsAssigned:
          description: Number of positions assigned to the career level.
          type: integer
          format: int32
          nullable: true
        active:
          description: Indicates if the career level code is active.
          type: boolean
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CompanyDeductionTypeDto:
      type: object
      properties:
        code:
          description: >-
            A unique code representing a specific classification, allowing for
            efficient categorization and differentiation.
          type: string
          nullable: true
        category:
          description: >-
            A descriptor indicating the category to which an entity or item
            belongs, enhancing its classification and understanding.
          type: string
          nullable: true
        calculationCode:
          description: The code used for calculating the deduction type.
          type: string
          nullable: true
        overrideCalculationCode:
          description: >-
            A code that overrides standard calculation rules or algorithms,
            enabling customized calculations for specific scenarios.
          type: string
          nullable: true
        w2Box:
          description: >-
            A reference to a specific box on a W-2 tax form, aiding in the
            accurate reporting of various types of income and deductions.
          type: string
          nullable: true
        isGarnishmentDedType:
          description: >-
            An indicator specifying whether an entity or item is categorized as
            a garnishment deduction type, aiding in payroll and deduction
            management.
          type: boolean
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CompanyEarningTypeDto:
      type: object
      properties:
        description:
          description: The category to which the earning type belongs.
          type: string
          nullable: true
        code:
          description: The code representing the earning type.
          type: string
          nullable: true
        calculationCode:
          description: The code used for calculating the earning type.
          type: string
          nullable: true
        overrideCalculationCode:
          description: The overridden calculation code for the earning type.
          type: string
          nullable: true
        w2Box:
          description: The W-2 box associated with the earning type.
          type: string
          nullable: true
        isFringeBenefit:
          description: Indicates whether the earning type is a garnishment.
          type: boolean
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CompanyInformationAddressDto:
      type: object
      properties:
        type:
          description: >-
            Specifies the type of address, such as "Home," "Work," "Billing," or
            "Shipping." It helps categorize and differentiate between different
            address entries.
          type: string
          nullable: true
        label:
          description: >-
            Allows users to assign a custom label or name to the address entry
            for easy reference. It can be used for additional context or
            organization, such as "Home Office" or "Office Address."
          type: string
          nullable: true
        line1:
          description: >-
            This field represents the first line of the street address,
            including the house or building number and the street name. It is an
            essential part of any physical address.
          type: string
          nullable: true
        line2:
          description: >-
            Optional field that allows for additional address information, such
            as an apartment number, suite, or any other details that help
            further pinpoint the location.
          type: string
          nullable: true
        mailStopCode:
          description: >-
            Represents the specific alphanumeric code or identifier assigned to
            a mail stop within an organization or institution. Mail stop codes
            are often used to route internal or interoffice mail to the correct
            destination.
          type: string
          nullable: true
        locality:
          description: Area or neighborhood.
          type: string
          nullable: true
        state:
          description: >-
            Represents the state, region, or province in which the locality is
            located. It provides additional context for the geographical
            location and is especially relevant in larger countries or regions.
          type: string
          nullable: true
        postalCode:
          description: >-
            Contains the alphanumeric or numeric code that uniquely identifies a
            specific postal or ZIP code. Postal codes are used for mail sorting
            and delivery, helping postal services direct mail to the correct
            geographic.
          type: string
          nullable: true
        country:
          description: >-
            Indicates the name of the country where the locality is situated. It
            specifies the broader national context for the locality.
          type: string
          nullable: true
        county:
          description: >-
            Contains the name of the county, which is a specific administrative
            or geographical region within a larger state or country. Counties
            are often used for administrative and geographical purposes.
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CompanyInformationDto:
      type: object
      properties:
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity.
          type: string
          nullable: true
        companyName:
          description: >-
            Represents the official name of the company or organization. It
            typically includes the full legal name of the company and is used to
            uniquely identify the entity.
          type: string
          nullable: true
        phone:
          description: >-
            Contains the numerical digits that make up the phone number. It
            represents the unique identifier for contacting an individual or
            entity by phone.
          type: string
          nullable: true
        webTimeCo:
          description: The web time company ID.
          type: string
          nullable: true
        clientId:
          description: >-
            ClientId is the company set ID when the client is a company set. If
            the client is a standalone company, then clientId will be the same
            as the companyId.
          type: integer
          format: int32
          nullable: true
        parentCompanySetId:
          description: >-
            Indicates the company set to which the company belongs. It helps
            organize and categorize companies into sets or groups.
          type: string
          nullable: true
        serviceStartDate:
          description: >-
            Represents the date when the company's services or operations
            officially commenced. It is useful for tracking the start of
            business activities.
          type: string
          format: date-time
          nullable: true
        ein:
          description: >-
            Stands for Employee Identification Number, a unique identifier
            assigned to businesses for tax purposes in the United States. It
            helps identify the company for tax reporting.
          type: string
          nullable: true
        dba:
          description: >-
            Represents the Doing Business As (DBA) name of the company. It is
            the name under which the company conducts business if it differs
            from its legal name.
          type: string
          nullable: true
        naics:
          description: >-
            Refers to the North American Industry Classification System (NAICS)
            code. It classifies the company's primary industry or business
            sector.
          type: integer
          format: int32
          nullable: true
        industryType:
          description: >-
            Provides information about the type or category of industry in which
            the company operates. It helps categorize businesses further.
          type: string
          nullable: true
        accessEndDate:
          description: >-
            Specifies the date when access to a particular system or service
            will expire for the company.
          type: string
          format: date-time
          nullable: true
        endDate:
          description: >-
            Represents the date when a specific service or agreement with the
            company will conclude or expire.
          type: string
          format: date-time
          nullable: true
        firstCheckDate:
          description: >-
            First Check Date refers to the day a company's initial billing
            begins.
          type: string
          format: date-time
          nullable: true
        status:
          description: >-
            Indicates whether the company is currently active or inactive. It
            serves as a binary indicator of the company's operational status.
          type: string
          nullable: true
        entityType:
          description: >-
            Specifies the legal type of entity to which the company belongs.
            Common entity types include "Corporation," "Limited Liability
            Company (LLC)," and others.
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/CompanyInformationAddressDto'
        relationships:
          description: >-
            Refers to the company relationships model, which may encompass
            various connections or associations between the company and other
            entities.
          type: array
          items:
            $ref: '#/components/schemas/RelationshipDto'
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CostCenterLevelModelDto:
      type: object
      properties:
        description:
          description: >-
            A detailed textual explanation or label that provides additional
            context and meaning to the cost center, enhancing understanding and
            clarity regarding its purpose and role.
          type: string
          nullable: true
        id:
          description: >-
            A unique identifier for a cost center, serving as a reference key
            for identification and association with specific financial or
            organizational entities.
          type: integer
          format: int32
          nullable: true
        level:
          description: >-
            The level or rank of the cost center within the organizational
            hierarchy, indicating its position and importance within the
            organization's structure.
          type: integer
          format: int32
          nullable: true
        costCenters:
          description: An array of objects containing cost center details.
          type: array
          items:
            $ref: '#/components/schemas/CostCenterModelDto'
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CostCenterModelDto:
      type: object
      properties:
        id:
          description: >-
            A unique identifier for a specific cost center within the
            organizational structure, allowing for precise identification and
            association with financial data and operations.
          type: integer
          format: int32
          nullable: true
        code:
          description: >-
            A code or label representing the cost center, aiding in its
            categorization and differentiation within the organization's
            financial and operational framework.
          type: string
          nullable: true
        name:
          description: >-
            The name or title of the cost center, offering a clear and
            descriptive label for easy recognition and understanding of its role
            and responsibilities.
          type: string
          nullable: true
        isActive:
          description: >-
            An indicator denoting the current status or active state of the cost
            center, assisting in management and decision-making regarding
            financial operations and allocation.
          type: boolean
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    DeductionCodeDto:
      type: object
      properties:
        description:
          description: >-
            A detailed textual explanation or label providing additional context
            and meaning to the associated code or entity.
          type: string
          nullable: true
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity.
          type: string
          nullable: true
        code:
          description: >-
            A distinct code representing a specific entity or item, serving as a
            concise reference for accurate identification and categorization.
          type: string
          nullable: true
        checkStubDescription:
          description: >-
            A descriptive text that appears on an employee's check stub,
            offering transparency and clarity regarding payment details.
          type: string
          nullable: true
        priority:
          description: >-
            An indicator defining the priority or ranking of an item, allowing
            for prioritization and sorting within a specific context.
          type: integer
          format: int32
          nullable: true
        w2Box:
          description: The W2 box code associated with the deduction.
          type: string
          nullable: true
        printOnCheckStub:
          description: >-
            An indicator specifying whether the associated information or
            description should be printed on an employee's check stub.
          type: boolean
          nullable: true
        payPeriodMaximum:
          description: The maximum amount deducted per pay period.
          type: number
          format: double
          nullable: true
        payPeriodMinimum:
          description: The minimum amount deducted per pay period.
          type: number
          format: double
          nullable: true
        annualMaximum:
          description: The maximum annual deduction amount.
          type: number
          format: double
          nullable: true
        rate:
          description: >-
            A numerical representation of a specific rate or value, often
            utilized in financial calculations and compensation structures.
          type: number
          format: double
          nullable: true
        frequency:
          description: The frequency of the deduction (e.g., monthly, weekly).
          type: string
          nullable: true
        calculationCode:
          description: >-
            A code used in calculations to determine specific values or
            outcomes, aiding in complex computation scenarios.
          type: string
          nullable: true
        amount:
          description: The fixed amount of the deduction.
          type: number
          format: double
          nullable: true
        kCode:
          description: >-
            A code or identifier, often unique to a particular context,
            facilitating specialized categorization or classification.
          type: string
          nullable: true
        agency:
          description: The agency or entity responsible for the deduction.
          type: string
          nullable: true
        takePartial:
          description: >-
            An indicator specifying whether partial deductions or actions should
            be taken, allowing for nuanced processing.
          type: boolean
          nullable: true
        autoMakeup:
          description: >-
            An indicator defining whether automatic makeup or adjustments should
            be applied under specific conditions or criteria.
          type: boolean
          nullable: true
        isActive:
          description: >-
            An indicator denoting the current status or active state of an
            entity or item, aiding in management and decision-making.
          type: boolean
          nullable: true
        includeOnYtdCompChart:
          description: >-
            An indicator specifying whether the data should be included on a
            year-to-date compensation chart or report.
          type: boolean
          nullable: true
        source:
          description: >-
            The origin or source of data, indicating where the information was
            derived or obtained from within the system.
          type: integer
          format: int32
          nullable: true
        wasUsedInPayroll:
          description: >-
            An indicator confirming whether the data was utilized in payroll
            processing, ensuring transparency in payroll calculations.
          type: boolean
          nullable: true
        benefitType:
          description: The type or category of the deduction (e.g., health, retirement).
          type: string
          nullable: true
        selfInsured:
          description: >-
            An indicator indicating whether an entity or item is self-insured,
            meaning it assumes responsibility for insurance coverage.
          type: boolean
          nullable: true
        isEmployerPaidMedicalLeave:
          description: >-
            An indicator specifying whether an entity or item is related to
            employer-paid medical leave, offering clarity on benefit coverage.
          type: boolean
          nullable: true
        exemptTaxes:
          description: >-
            A field indicating which taxes are exempted or excluded in specific
            scenarios, aiding in tax-related calculations and reporting.
          type: array
          items:
            type: string
          nullable: true
        blockedTaxes:
          description: >-
            A field specifying taxes that are blocked or restricted from certain
            calculations or processes, ensuring accurate taxation.
          type: array
          items:
            type: string
          nullable: true
        type:
          $ref: '#/components/schemas/CompanyDeductionTypeDto'
      additionalProperties:
        type: object
        nullable: true
    EarningCodesDto:
      type: object
      properties:
        description:
          description: >-
            A detailed textual explanation or label that provides additional
            context and meaning to the associated code or entity.
          type: string
          nullable: true
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity.
          type: string
          nullable: true
        code:
          description: >-
            Unique identifier for specific types of earnings associated with
            employees' compensation packages. It plays a crucial role in
            accurately calculating, categorizing, and recording various forms of
            income and compensation.
          type: string
          nullable: true
        checkStubDescription:
          description: >-
            A descriptive text that appears on an employee's check stub,
            offering transparency and clarity regarding the payment.
          type: string
          nullable: true
        w2Box:
          description: >-
            A reference to a specific box on a W-2 tax form, aiding in the
            accurate reporting of various types of income and deductions.
          type: string
          nullable: true
        printOnCheckStub:
          description: >-
            An indicator specifying whether the associated information or
            description should be printed on an employee's check stub.
          type: string
          nullable: true
        payPeriodMaximum:
          description: >-
            The maximum limit or threshold applicable to a pay period, often
            used to define the upper limit of compensation within a specific
            period.
          type: number
          format: double
          nullable: true
        payPeriodMinimum:
          description: >-
            The minimum threshold or floor amount for compensation within a pay
            period, ensuring that compensation meets a minimum standard.
          type: number
          format: double
          nullable: true
        annualMaximum:
          description: >-
            The highest allowable amount or limit for compensation within an
            annual period, setting an upper boundary for earnings.
          type: number
          format: double
          nullable: true
        overrideRate:
          description: An overridden rate for the earning.
          type: number
          format: double
          nullable: true
        addToRate:
          description: >-
            A field indicating whether a specific amount should be added to an
            existing rate or compensation structure.
          type: number
          format: double
          nullable: true
        rateMultiplier:
          description: >-
            A numerical multiplier used to calculate rates or compensation,
            allowing for flexible rate adjustments.
          type: number
          format: double
          nullable: true
        calculationCode:
          description: >-
            A code used in calculations to determine specific values or
            outcomes, assisting in complex computation scenarios.
          type: string
          nullable: true
        rateCode:
          description: The code associated with the earning rate.
          type: string
          nullable: true
        amount:
          description: >-
            The numerical value representing a specific amount, often used in
            financial calculations and compensation.
          type: number
          format: double
          nullable: true
        frequency:
          description: The frequency at which the earning is taken (e.g., weekly, monthly).
          type: string
          nullable: true
        rate:
          description: >-
            The rate of compensation associated with a particular entity or
            item, indicating payment per unit of time or work.
          type: number
          format: double
          nullable: true
        agency:
          description: The agency or organization associated with the earning.
          type: string
          nullable: true
        relatedDeductionCode:
          description: The code of the related deduction, if applicable.
          type: string
          nullable: true
        reduceAutoPay:
          description: >-
            An indicator specifying whether automatic payments should be reduced
            based on certain conditions or criteria.
          type: boolean
          nullable: true
        exemptTaxes:
          description: An array of tax codes from which the earning is exempt.
          type: array
          items:
            type: string
          nullable: true
        blockedTaxes:
          description: An array of tax codes that are blocked from applying to the earning.
          type: array
          items:
            type: string
          nullable: true
        costCenterMatrixId:
          description: >-
            An identifier that associates an entity or item with a cost center
            matrix, facilitating cost allocation and tracking.
          type: integer
          format: int32
          nullable: true
        isActive:
          description: >-
            An indicator denoting the current status or active state of an
            entity or item, assisting in management and decision-making.
          type: boolean
          nullable: true
        includeInHoursWorked:
          description: >-
            An indicator specifying whether the associated data should be
            included in calculations related to hours worked.
          type: boolean
          nullable: true
        includeOnYtdCompChart:
          description: >-
            An indicator specifying whether the data should be included on a
            year-to-date compensation chart or report.
          type: boolean
          nullable: true
        source:
          description: >-
            The origin or source of data, indicating where the information was
            derived or obtained from within the system.
          type: integer
          format: int32
          nullable: true
        wasUsedInPayroll:
          description: >-
            An indicator confirming whether the data was utilized in payroll
            processing, ensuring transparency in payroll calculations.
          type: boolean
          nullable: true
        benefitType:
          description: The type of benefit associated with the earning.
          type: string
          nullable: true
        selfInsured:
          description: >-
            An indicator indicating whether an entity or item is self-insured,
            meaning it assumes responsibility for insurance coverage.
          type: boolean
          nullable: true
        isEmployerPaidMedicalLeave:
          description: >-
            An indicator specifying whether an entity or item is related to
            employer-paid medical leave, offering clarity on benefit coverage.
          type: boolean
          nullable: true
        classificationCode:
          description: The classification code associated with the earning.
          type: string
          nullable: true
        wageType:
          description: The type of wage associated with the earning.
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/CompanyEarningTypeDto'
      additionalProperties:
        type: object
        nullable: true
    EeoClassDto:
      type: object
      properties:
        description:
          description: Description of EEO class.
          type: string
          nullable: true
        eeoClassKey:
          description: Unique identifier for EEO class.
          type: integer
          format: int32
          nullable: true
        legacyEEOClassId:
          description: Legacy EEO class identifier.
          type: integer
          format: int32
          nullable: true
        clientId:
          description: >-
            Client identifier for EEO class. ClientId is the company set ID when
            the client is a company set. If the client is a standalone company,
            then clientId will be the same as the companyId.
          type: integer
          format: int32
          nullable: true
        code:
          description: Code representing EEO class.
          type: string
          nullable: true
        active:
          description: Indicator of EEO class activity.
          type: boolean
          nullable: true
        positionsAssigned:
          description: Number of positions assigned to EEO class.
          type: integer
          format: int32
          nullable: true
        eeoClassCompanies:
          description: List of EEO class companies.
          type: array
          items:
            $ref: '#/components/schemas/ResourceCompanyDto'
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    PayFrequencyDto:
      type: object
      properties:
        description:
          description: >-
            A detailed textual explanation or label that offers additional
            context and meaning to the associated code or entity.
          type: string
          nullable: true
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity.
          type: string
          nullable: true
        code:
          description: >-
            A distinct code representing a specific entity or item, providing a
            concise reference for accurate identification and categorization.
          type: string
          nullable: true
        baseFrequency:
          description: >-
            A descriptor specifying the foundational or default frequency used
            as a basis for calculations or scheduling, aiding in data
            interpretation and consistency.
          type: string
          nullable: true
        firstOfFlag:
          description: >-
            An indicator or flag denoting the "first of" occurrence or action
            within a specific context or process, offering a clear reference
            point for unique occurrences.
          type: boolean
          nullable: true
        blockWeek1:
          description: >-
            A field indicating whether the first week within a defined timeframe
            or schedule is blocked or restricted for certain actions or
            activities.
          type: boolean
          nullable: true
        blockWeek2:
          description: >-
            A field indicating whether the second week within a defined
            timeframe or schedule is blocked or restricted for certain actions
            or activities.
          type: boolean
          nullable: true
        blockWeek3:
          description: >-
            A field indicating whether the third week within a defined timeframe
            or schedule is blocked or restricted for certain actions or
            activities.
          type: boolean
          nullable: true
        blockWeek4:
          description: >-
            A field indicating whether the fourth week within a defined
            timeframe or schedule is blocked or restricted for certain actions
            or activities.
          type: boolean
          nullable: true
        blockWeek5:
          description: >-
            A field indicating whether the fifth week within a defined timeframe
            or schedule is blocked or restricted for certain actions or
            activities.
          type: boolean
          nullable: true
        blockLastWeek:
          description: >-
            A field indicating whether the last week within a defined timeframe
            or schedule is blocked or restricted for certain actions or
            activities.
          type: boolean
          nullable: true
        allowMakeup:
          description: >-
            An indicator specifying whether makeup or corrective actions are
            allowed within the defined context, facilitating flexibility and
            scheduling adjustments.
          type: boolean
          nullable: true
        hardCoded:
          description: >-
            An indicator denoting whether a particular element or entity
            contains hardcoded, predetermined values or configurations,
            providing insights into data structure and management.
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    PayGradeCompaniesDto:
      type: object
      properties:
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity.
          type: string
          nullable: true
        active:
          description: >-
            An indicator denoting the active state of the company's association
            with the pay grade (True or False).
          type: boolean
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    PayGradeDto:
      type: object
      properties:
        description:
          description: >-
            A detailed textual explanation or label for the pay grade, providing
            additional context and meaning.
          type: string
          nullable: true
        payGradeKey:
          description: >-
            A unique identifier associated with the pay grade, serving as a
            primary reference for identification.
          type: integer
          format: int32
          nullable: true
        legacyPayGradeId:
          description: >-
            An identifier representing the pay grade in legacy systems, aiding
            in data migration and compatibility.
          type: integer
          format: int32
          nullable: true
        clientId:
          description: >-
            ClientId is the company set ID when the client is a company set. If
            the client is a standalone company, then clientId will be the same
            as the companyId.
          type: integer
          format: int32
          nullable: true
        active:
          description: >-
            An indicator denoting the current status or active state of the pay
            grade.
          type: boolean
          nullable: true
        code:
          description: >-
            A code representing the pay grade, offering a concise reference for
            identification and categorization.
          type: string
          nullable: true
        minimum:
          description: The minimum value associated with the pay grade.
          type: number
          format: double
          nullable: true
        maximum:
          description: The maximum value associated with the pay grade.
          type: number
          format: double
          nullable: true
        midpoint:
          description: >-
            The midpoint value within the pay grade range, helping to define
            salary structures and compensation levels.
          type: number
          format: double
          nullable: true
        positionsAssigned:
          description: >-
            The number of positions assigned to the pay grade, indicating the
            extent of its use within the organization.
          type: integer
          format: int32
          nullable: true
        payGradeCompanies:
          description: >-
            Companies associated with the pay grade, identified by their unique
            "companyId."
          type: array
          items:
            $ref: '#/components/schemas/PayGradeCompaniesDto'
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    PositionFamilyDto:
      type: object
      properties:
        description:
          description: Description of the position family.
          type: string
          nullable: true
        positionFamilyKey:
          description: Unique identifier for position family.
          type: integer
          format: int32
          nullable: true
        clientId:
          description: >-
            ClientId is the company set ID when the client is a company set. If
            the client is a standalone company, then clientId will be the same
            as the companyId.
          type: integer
          format: int32
          nullable: true
        code:
          description: Code representing position family.
          type: string
          nullable: true
        active:
          description: Indicator of position family activity.
          type: boolean
          nullable: true
        name:
          description: Name of the position family.
          type: string
          nullable: true
        positionsAssigned:
          description: Number of positions assigned to position family.
          type: integer
          format: int32
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    PositionsDto:
      type: object
      properties:
        title:
          description: Title or name of the position.
          type: string
          nullable: true
        flsaOvertimeExempt:
          description: Indicator of overtime exemption.
          type: boolean
          nullable: true
        fte:
          description: Full-time equivalent value.
          type: number
          format: double
          nullable: true
        approvedDate:
          description: Date when the position was approved.
          type: string
          format: date-time
          nullable: true
        effectiveDate:
          description: Effective date of the position.
          type: string
          format: date-time
          nullable: true
        closedDate:
          description: Date when the position was closed.
          type: string
          format: date-time
          nullable: true
        supervisorPosition:
          description: Indicator of supervisor position.
          type: boolean
          nullable: true
        code:
          description: Code representing the position.
          type: string
          nullable: true
        eeoClass:
          $ref: '#/components/schemas/EeoClassDto'
        workersCompensationCode:
          $ref: '#/components/schemas/WorkersCompensationCodeDto'
        careerLevel:
          $ref: '#/components/schemas/CareerLevelDto'
        families:
          description: List of position families.
          type: array
          items:
            $ref: '#/components/schemas/PositionFamilyDto'
          nullable: true
        standardOccupationalClassification:
          $ref: '#/components/schemas/StandardOccupationalClassificationDto'
      additionalProperties:
        type: object
        nullable: true
    RateCodeDto:
      type: object
      properties:
        description:
          description: >-
            The description of the rate code, providing additional context and
            meaning to the code, enhancing understanding and clarity regarding
            the purpose and significance of the rate.
          type: string
          nullable: true
        code:
          description: >-
            The value of the rate code, which serves as a unique identifier or
            label for specific rates associated with compensation or pricing,
            aiding in categorization and differentiation.
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    RelationshipDto:
      type: object
      properties:
        description:
          description: >-
            Provides a textual description of the relationship between the
            company and other entities. It offers additional context or details
            about the nature of the connection.
          type: string
          nullable: true
        relationshipType:
          description: >-
            Describes the type of relationship that the company has with other
            entities. It can be categorized as "unknown" or "Payroll”.
          enum:
            - Unknown
            - Payroll
          type: string
      additionalProperties:
        type: object
        nullable: true
    ResourceCompanyDto:
      type: object
      properties:
        companyId:
          description: Company ID associated with the EEO class company.
          type: string
          nullable: true
        active:
          description: Indicates if the EEO class company is active.
          type: boolean
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    StandardOccupationalClassificationDto:
      type: object
      properties:
        title:
          description: Title of the standard occupational classification.
          type: string
          nullable: true
        standardOccupationalClassificationKey:
          description: Standard occupational classification key.
          type: integer
          format: int32
          nullable: true
        group:
          description: Group associated with the standard occupational classification.
          type: string
          nullable: true
        code:
          description: Standard occupational classification code.
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    TaxCodeCustomFieldDto:
      type: object
      properties:
        type:
          description: Type of the custom field.
          type: string
          nullable: true
        index:
          description: Index of the custom field.
          type: integer
          format: int32
          nullable: true
        label:
          description: Label for the custom field.
          type: string
          nullable: true
        value:
          description: Value of the custom field.
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    TaxCodeDto:
      type: object
      properties:
        description:
          description: >-
            A detailed textual explanation or label that offers additional
            context and meaning to the associated code or entity.
          type: string
          nullable: true
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity.
          type: string
          nullable: true
        code:
          description: >-
            A distinct code representing a specific entity or item, providing a
            concise reference for accurate identification and categorization.
          type: string
          nullable: true
        ein:
          description: >-
            The Employee Identification Number (EIN) is a unique identifier
            assigned to businesses and organizations for tax-related purposes.
          type: string
          nullable: true
        startDate:
          description: >-
            The date on which a specific process, program, or activity begins,
            serving as a reference point for timeline-related data.
          type: string
          format: date-time
          nullable: true
        endDate:
          description: End date of the tax code.
          type: string
          format: date-time
          nullable: true
        depositFrequency:
          description: >-
            A descriptor specifying the frequency at which deposits or
            transactions are made, aiding in financial planning and management.
          type: string
          nullable: true
        depositMethod:
          description: >-
            A method or approach used for making deposits or financial
            transactions, offering flexibility and customization options.
          type: string
          nullable: true
        type:
          description: >-
            A categorical label defining the type or category to which an entity
            or item belongs, enhancing organizational classification.
          type: string
          nullable: true
        depositWith:
          description: >-
            A descriptor indicating the entity or account with which deposits or
            financial transactions are associated, providing clarity on
            financial relationships.
          type: string
          nullable: true
        isEmployeeTax:
          description: >-
            An indicator specifying whether a particular element or entity is
            related to employee taxation, aiding in tax-related management and
            reporting.
          type: boolean
          nullable: true
        isExempt:
          description: Indicates if the tax code is exempt.
          type: boolean
          nullable: true
        isSuiReimbursable:
          description: >-
            An indicator indicating whether an item or entity is eligible for
            State Unemployment Insurance (SUI) reimbursement, providing clarity
            on financial considerations.
          type: boolean
          nullable: true
        isActive:
          description: >-
            An indicator denoting the current status or active state of an
            entity or item, facilitating management and decision-making
            processes.
          type: boolean
          nullable: true
        isFiledWithAgency:
          description: >-
            An indicator specifying whether an entity or item is filed with a
            regulatory agency, ensuring compliance and reporting transparency.
          type: boolean
          nullable: true
        workPsdCode:
          description: Work PSD (Payment Service Delivery) code for the tax code.
          type: string
          nullable: true
        customFields:
          description: Array of custom fields associated with the tax code.
          type: array
          items:
            $ref: '#/components/schemas/TaxCodeCustomFieldDto'
          nullable: true
        rules:
          $ref: '#/components/schemas/TaxCodeRulesDto'
      additionalProperties:
        type: object
        nullable: true
    TaxCodeRulesDto:
      type: object
      properties:
        options:
          description: >-
            Custom options or settings applicable to the entity, providing
            flexibility and customization capabilities.
          type: string
          nullable: true
        roundingMethod:
          description: Rounding method for tax code calculations.
          type: string
          nullable: true
        requiresVarianceCalc:
          description: >-
            An indicator specifying whether the entity or item requires variance
            calculations, aiding in financial analysis and reporting.
          type: integer
          format: int32
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    WorkLocationDto:
      type: object
      properties:
        workLocationId:
          description: >-
            The unique identifier associated with the work location, used for
            internal reference and identification purposes.
          type: string
          nullable: true
        companyId:
          description: >-
            The identifier of the company to which this work location belongs,
            serving as a reference to the specific payroll entity.
          type: string
          nullable: true
        name:
          description: >-
            The name or label assigned to the work location, providing a
            human-readable identifier for easy recognition.
          type: string
          nullable: true
        address1:
          description: >-
            The first line of the physical address associated with the work
            location, specifying the primary point of contact.
          type: string
          nullable: true
        address2:
          description: >-
            The second line of the physical address associated with the work
            location, specifying the primary point of contact.
          type: string
          nullable: true
        city:
          description: >-
            The city or locality where the work location is situated, enhancing
            geographical identification.
          type: string
          nullable: true
        state:
          description: >-
            The state or administrative region in which the work location is
            located, contributing to precise regional categorization.
          type: string
          nullable: true
        zip:
          description: >-
            The ZIP code associated with the work location, facilitating postal
            and logistical processes and ensuring accurate addressing.
          type: string
          nullable: true
        county:
          description: >-
            The country code representing the country in which the work location
            is situated, aiding in international categorization and geographical
            reference.
          type: string
          nullable: true
        countryCode:
          description: The country code for the work location.
          type: string
          nullable: true
        defaultCurrencyCode:
          description: The default currency code for the work location.
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    WorkersCompensationCodeDto:
      type: object
      properties:
        description:
          description: Detailed label providing context to the client.
          type: string
          nullable: true
        clientId:
          description: >-
            ClientId is the company set ID when the client is a company set. If
            the client is a standalone company, then clientId will be the same
            as the companyId.
          type: integer
          format: int32
          nullable: true
        code:
          description: Code representing a specific category.
          type: string
          nullable: true
        active:
          description: Indicator of the client's active status.
          type: boolean
          nullable: true
        positionsAssigned:
          description: Number of positions assigned to the client.
          type: integer
          format: int32
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CompanyAddressDto:
      description: Address
      type: object
      properties:
        line1:
          description: The address where the job code will be used
          type: string
          nullable: true
        line2:
          description: The address where the job code will be used
          type: string
          nullable: true
        city:
          description: The city where the job code will be used
          type: string
          nullable: true
        state:
          description: The state where the job code will be used
          type: string
          nullable: true
        zip:
          description: The zip code where the job code will be used
          type: string
          nullable: true
        county:
          description: The county where the job code will be used
          type: string
          nullable: true
        country:
          description: The country where the job code will be used
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CreateJobCodeDto:
      description: Job Details
      type: object
      properties:
        description:
          description: >-
            The Job Code description may contain up to 40 alpha-numeric
            characters. Spaces or special characters are not allowed
          type: string
          nullable: true
        isActive:
          description: Active (Yes/No). The job code is currently active or inactive
          type: boolean
          nullable: true
        isCertified:
          description: >-
            Certified Job (Yes/No). This is a certified job code as per the CMS
            PBJ Report (Centers for Medicare and Medicaid Services Payroll Based
            Journal) job costing report by industry
          type: boolean
          nullable: true
        payEntry:
          $ref: '#/components/schemas/PayEntryDto'
        address:
          $ref: '#/components/schemas/CompanyAddressDto'
        payrollBasedJournal:
          $ref: '#/components/schemas/PayrollBasedJournalDto'
        code:
          description: >-
            A Job Code may contain up to 10 alpha-numeric characters. Spaces or
            special characters are not allowed
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    JobCodeDto:
      description: Job Details
      type: object
      properties:
        description:
          description: >-
            The Job Code description may contain up to 40 alpha-numeric
            characters. Spaces or special characters are not allowed
          type: string
          nullable: true
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity
          type: string
          nullable: true
        code:
          description: >-
            A Job Code may contain up to 10 alpha-numeric characters. Spaces or
            special characters are not allowed
          type: string
          nullable: true
        isActive:
          description: Active (Yes/No). The job code is currently active or inactive
          type: boolean
          nullable: true
        isCertified:
          description: >-
            Certified Job (Yes/No). This is a certified job code as per the CMS
            PBJ Report (Centers for Medicare and Medicaid Services Payroll Based
            Journal) job costing report by industry
          type: boolean
          nullable: true
        payEntry:
          $ref: '#/components/schemas/PayEntryDto'
        address:
          $ref: '#/components/schemas/CompanyAddressDto'
        payrollBasedJournal:
          $ref: '#/components/schemas/PayrollBasedJournalDto'
      additionalProperties:
        type: object
        nullable: true
    PayEntryDto:
      description: Override Pay Entry Only
      type: object
      properties:
        shift:
          description: >-
            This field is used to enter an override company-defined shift code
            to be charged by the employee
          type: string
          nullable: true
        rateCode:
          description: >-
            The employee’s pay rate. If no rate is entered, the employees base
            rate will be used
          type: string
          nullable: true
        rate:
          description: The rate of pay for the job code
          type: number
          format: double
          nullable: true
        addingRateConstant:
          description: >-
            Rate + or + Is employee pay rate + the SD Schedule Differential plus
            or times the bonus
          type: number
          format: double
          nullable: true
        multiplyingRateConstant:
          description: >-
            Rate X or + Is employee pay rate X the SD Schedule Differential plus
            or times the bonus
          type: number
          format: double
          nullable: true
        workerComputedCode:
          description: >-
            The company defined workers comp code for work performed by the
            employee
          type: string
          nullable: true
        tax:
          $ref: '#/components/schemas/TaxDto'
      additionalProperties:
        type: object
        nullable: true
    PayrollBasedJournalDto:
      description: CMS/PBJ Data Only
      type: object
      properties:
        jobTitleCode:
          description: >-
            This is a Job Title Code for which the certified job code CMS PBJ
            Report (Centers for Medicare and Medicaid Services Payroll Based
            Journal) will be utilized to calculate labor costs
          type: string
          nullable: true
        facilityId:
          description: >-
            This is a Facility id for which the certified job code CMS PBJ
            Report (Centers for Medicare and Medicaid Services Payroll Based
            Journal) will be utilized to calculate labor costs
          type: string
          nullable: true
        stateId:
          description: >-
            This is a State ID for which the certified job code CMS PBJ Report
            (Centers for Medicare and Medicaid Services Payroll Based Journal)
            will be utilized to calculate labor costs
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    TaxDto:
      description: State Tax
      type: object
      properties:
        state:
          description: State
          type: string
          nullable: true
        local1:
          description: This is the local tax code used for the job code
          type: string
          nullable: true
        local2:
          description: This  is the second local tax code used for the job code
          type: string
          nullable: true
        local3:
          description: This is the third local tax code  used for the job code
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    UpdateJobCodeDto:
      description: Job Details
      type: object
      properties:
        description:
          description: >-
            The Job Code description may contain up to 40 alpha-numeric
            characters. Spaces or special characters are not allowed
          type: string
          nullable: true
        isActive:
          description: Active (Yes/No). The job code is currently active or inactive
          type: boolean
          nullable: true
        isCertified:
          description: >-
            Certified Job (Yes/No). This is a certified job code as per the CMS
            PBJ Report (Centers for Medicare and Medicaid Services Payroll Based
            Journal) job costing report by industry
          type: boolean
          nullable: true
        payEntry:
          $ref: '#/components/schemas/PayEntryDto'
        address:
          $ref: '#/components/schemas/CompanyAddressDto'
        payrollBasedJournal:
          $ref: '#/components/schemas/PayrollBasedJournalDto'
      additionalProperties:
        type: object
        nullable: true
    CompanyDocumentModel:
      type: object
      properties:
        documentId:
          type: string
          format: uuid
        companyId:
          type: string
        displayName:
          type: string
        receivedDate:
          type: string
          format: date-time
        uploadedDate:
          type: string
          format: date-time
    DocumentDownloadModel:
      type: object
      properties:
        documentId:
          type: string
          format: uuid
        downloadUrl:
          type: string
        expiresIn:
          type: integer
          format: int32
    EmployeeDocumentModel:
      type: object
      properties:
        documentId:
          type: string
          format: uuid
        companyId:
          type: string
        displayName:
          type: string
        receivedDate:
          type: string
          format: date-time
        uploadedDate:
          type: string
          format: date-time
        employeeId:
          type: string
        category:
          type: string
        companyConfidential:
          type: boolean
        employeeConfidential:
          type: boolean
    Error400Model:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        moreInfoUrl:
          type: string
        exception:
          $ref: '#/components/schemas/ExceptionModel'
        fields:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/OptionModel'
    Error500Model:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        moreInfoUrl:
          type: string
        exception:
          $ref: '#/components/schemas/ExceptionModel'
        errorId:
          type: string
    ExceptionModel:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
        source:
          type: string
        stackTrace:
          type: string
        innerException:
          $ref: '#/components/schemas/ExceptionModel'
    OptionModel:
      type: object
      properties:
        description:
          type: string
        code:
          type: string
    ProblemDetails:
      type: object
      properties:
        title:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties:
        type: object
    Address:
      type: object
      properties:
        address1:
          description: Address1
          type: string
          nullable: true
        address2:
          description: Address2
          type: string
          nullable: true
        city:
          description: City
          type: string
          nullable: true
        state:
          description: State
          type: string
          nullable: true
        postalCode:
          description: PostalCode
          type: string
          nullable: true
        country:
          description: Country
          type: string
          nullable: true
        county:
          description: County
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CurrentEmployeeStatus:
      type: object
      properties:
        status:
          description: The description of the Employee Status.
          type: string
          nullable: true
        statusType:
          description: "The Employee Status Code.\r\n    **Allowable Values:**\r\n    A - Active\r\n    T - Terminated\r\n    L - Leave"
          type: string
          nullable: true
        effectiveDate:
          description: Effective date of the latest employee status change.
          type: string
          format: date-time
          nullable: true
        changeReason:
          description: Change reason description of the latest employee status change.
          type: string
          nullable: true
        changeReasonCode:
          description: Change reason code for the latest employee status change.
          type: integer
          format: int32
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CurrentPayRate:
      type: object
      properties:
        baseRate:
          description: Employee Base Pay Rate.
          type: number
          format: double
          nullable: true
        defaultHours:
          description: Default Hours for the Employee in the Pay Period.
          type: number
          format: double
          nullable: true
        salary:
          description: Per Check Salary Rate.
          type: number
          format: double
          nullable: true
        payFrequency:
          description: Pay Frequency.
          type: string
          nullable: true
        payGrade:
          description: Pay Grade.
          type: string
          nullable: true
        annualSalary:
          description: Annual Salary.
          type: number
          format: double
          nullable: true
        ratePer:
          description: Rate Per.
          type: string
          nullable: true
        effectiveDate:
          description: Effective date of the last employee rate change.
          type: string
          format: date-time
          nullable: true
        beginCheckDate:
          description: Begin Check date of the last employee rate change.
          type: string
          nullable: true
        isAutoPay:
          description: Auto Pay Employee Flag.
          type: boolean
          nullable: true
        payType:
          description: Hourly or Salary Pay Type
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    Employee:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/EmployeeInfo'
        id:
          description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          type: string
          nullable: true
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity.
          type: string
          nullable: true
        relationshipId:
          description: >-
            The Paylocity Identifier for a group of Company IDs. This is the
            unique value provided by Paylocity to each specific Payroll Group.
          type: string
          nullable: true
        lastName:
          description: Last Name.
          type: string
          nullable: true
        displayName:
          description: Display Name.
          type: string
          nullable: true
        status:
          description: >-
            The Employee Status Description, this value is customizable per
            client.
          type: string
          nullable: true
        statusType:
          description: "The Employee Status Type Description, this a system controlled value.\r\n    **Allowable Values:**\r\n    A - Active\r\n    T - Terminated\r\n    L - Leave"
          type: string
          nullable: true
        currentStatus:
          $ref: '#/components/schemas/CurrentEmployeeStatus'
        currentPayRate:
          $ref: '#/components/schemas/CurrentPayRate'
        position:
          $ref: '#/components/schemas/Position'
        futurePayRates:
          description: Future pay rates.
          type: array
          items:
            $ref: '#/components/schemas/PayRate'
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    EmployeeInfo:
      type: object
      properties:
        firstName:
          description: First Name.
          type: string
          nullable: true
        lastName:
          description: Last Name.
          type: string
          nullable: true
        displayName:
          description: Display Name.
          type: string
          nullable: true
        middleName:
          description: Middle Name.
          type: string
          nullable: true
        preferredName:
          description: Preferred Name.
          type: string
          nullable: true
        suffix:
          description: Suffix.
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
        homePhone:
          description: Home Phone Number.
          type: string
          nullable: true
        mobilePhone:
          description: Mobile Phone Number.
          type: string
          nullable: true
        personalEmail:
          description: Personal Email.
          type: string
          nullable: true
        ssn:
          description: "Social Security Number.\r\n**Allowable Values:**\r\n11 char max"
          type: string
          nullable: true
        dateOfBirth:
          description: "Date of Birth.\r\n**Allowable Values:**\r\nFormat: MM/DD/CCYY"
          type: string
          nullable: true
        maritalStatus:
          description: "Marital Status.\r\n**Allowable Values:**\r\n10 char max"
          type: string
          nullable: true
        ethnicityRace:
          description: "Ethnicity.\r\n**Allowable Values:**\r\n10 char max"
          type: string
          nullable: true
        gender:
          description: "Gender.\r\n**Allowable Values:**\r\n1 char max"
          type: string
          nullable: true
        hireDate:
          description: "Hire Date.\r\n**Allowable Values:**\r\nFormat: MM/DD/CCYY"
          type: string
          format: date-time
          nullable: true
        adjustedSeniorityDate:
          description: "Adjusted Seniority Date.\r\n**Allowable Values:**\r\nFormat: MM/DD/CCYY"
          type: string
          format: date-time
          nullable: true
        eligibleforRehire:
          description: Eligible for Rehire Flag.
          type: boolean
          nullable: true
        supervisorCo:
          description: Supervisor Paylocity Company ID.
          type: string
          nullable: true
        supervisor:
          description: Supervisor.
          type: string
          nullable: true
        isSupervisor:
          description: Is Supervisor / Reviewer? Flag.
          type: boolean
          nullable: true
        reviewerCo:
          description: Reviewer Paylocity Company ID.
          type: string
          nullable: true
        reviewer:
          description: Reviewer Employee ID.
          type: string
          nullable: true
        jobTitle:
          description: Job Title.
          type: string
          nullable: true
        eeoClass:
          description: EEO Class.
          type: string
          nullable: true
        wcc:
          description: Workers Compensation Code.
          type: string
          nullable: true
        shift:
          description: Home Shift.
          type: string
          nullable: true
        clockBadge:
          description: Clock / Badge Number.
          type: string
          nullable: true
        payGroup:
          description: Pay Group.
          type: string
          nullable: true
        otExempt:
          description: OT Exempt (Y/N).
          type: boolean
          nullable: true
        tipped:
          description: Tipped.
          type: string
          nullable: true
        minWageExempt:
          description: Minimum Wage Exempt.
          type: boolean
          nullable: true
        workLocation:
          $ref: '#/components/schemas/WorkLocation'
      additionalProperties:
        type: object
        nullable: true
    EmployeePage:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    PayRate:
      type: object
      properties:
        salary:
          description: Per Check Salary Rate.
          type: number
          format: double
          nullable: true
        payFrequency:
          description: Pay Frequency.
          type: string
          nullable: true
        changeReason:
          description: Change reason.
          type: string
          nullable: true
        annualSalary:
          description: Annual Salary.
          type: number
          format: double
          nullable: true
        effectiveDate:
          description: Effective date of the last employee rate change.
          type: string
          format: date-time
          nullable: true
        beginCheckDate:
          description: Begin Check date of the last employee rate change.
          type: string
          nullable: true
        isAutoPay:
          description: Auto Pay Employee Flag.
          type: boolean
          nullable: true
        payType:
          description: Hourly or Salary Pay Type.
          type: string
          nullable: true
        payRateDescription:
          description: Pay rate description.
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    Position:
      type: object
      properties:
        effectiveDate:
          description: Effective date of the last employee position change.
          type: string
          format: date-time
          nullable: true
        changeReason:
          description: Change Reason of last Position Change.
          type: string
          nullable: true
        costCenter1:
          description: Cost Center 1 Code.
          type: string
          nullable: true
        costCenter2:
          description: Cost Center 2 Code.
          type: string
          nullable: true
        costCenter3:
          description: Cost Center 3 Code.
          type: string
          nullable: true
        employeeType:
          description: Employee Type.
          type: string
          nullable: true
        positionCode:
          description: Position Code.
          type: string
          nullable: true
        positionDescription:
          description: Position Description.
          type: string
          nullable: true
        careerLevelCode:
          description: Career level code.
          type: string
          nullable: true
        careerLevelDescription:
          description: Career level description.
          type: string
          nullable: true
        positionFamilies:
          description: Position families.
          type: array
          items:
            $ref: '#/components/schemas/PositionFamily'
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    PositionFamily:
      type: object
      properties:
        description:
          description: Position family description.
          type: string
          nullable: true
        code:
          description: Position family code.
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    WorkLocation:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        phone:
          description: Phone.
          type: string
          nullable: true
        phoneExt:
          description: Phone Extension
          type: string
          nullable: true
        mobilePhone:
          description: Work Mobile Phone
          type: string
          nullable: true
        email:
          description: Work Email Address.
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    UpsertCompanyOnboardingDto:
      description: The onboarding details.
      type: object
      properties:
        companyId:
          description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity. \r\n    **Allowable Values:**\r\n    9 char max"
          type: string
          nullable: true
          example: ' A00123'
        onboardingStatus:
          description: >-
            The status to indicate the onboarding stage for a customer where the
            account form was filled up and is currently under review by your
            team.
          enum:
            - InProgress
            - Approved
            - Rejected
          type: string
      additionalProperties:
        type: object
        nullable: true
    PayEntry:
      type: object
      properties:
        autoAcknowledge:
          description: Auto Acknowledge the batch (True/False)
          type: boolean
        batchName:
          description: Name for the Payroll Batch you are creating
          type: string
        mergeBatchId:
          description: Merge Batch
          type: integer
          format: int32
        calendarId:
          description: Calendar ID
          type: integer
          format: int32
        payPeriodBeginDate:
          description: Pay Period Begin Date
          type: string
          format: date-time
        payPeriodEndDate:
          description: Pay Period End Date
          type: string
          format: date-time
        checkDate:
          description: Check Date for Payroll
          type: string
          format: date-time
        payEntries:
          type: array
          items:
            $ref: '#/components/schemas/PayEntries'
    PayEntries:
      type: object
      properties:
        employeeId:
          description: The employee's employee ID.
          type: string
        det:
          description: >-
            Identifies the type of record being imported. May be 'E' for
            earning, 'D' for deduction and 'A' for accrual balances.
          type: string
        detCode:
          description: >-
            The earning or deduction code. This must be a code currently defined
            on the company-level in Paylocity.
          type: string
        hours:
          description: >-
            The number of hours worked by the employee, or the used accrual
            hours.
          type: string
        amount:
          description: >-
            The dollar amount to pay the employee or the available accrual
            hours. If an amount is entered, any information entered in the
            hours, rate, and rateCode fields are ignored.
          type: string
        tempRate:
          description: Rate
          type: string
        rateCode:
          description: >-
            The employee’s pay rate. If no rate is entered, the employees base
            rate will be used.
          type: string
        costCenter1:
          description: >-
            This field is used to enter an override value for the first-level
            cost center charged by the employee.
          type: string
        costCenter2:
          description: >-
            This field is used to enter an override value for the second-level
            cost center charged by the employee.
          type: string
        costCenter3:
          description: >-
            This field is used to enter an override value for the third-level
            cost center charged by the employee.
          type: string
        jobCode:
          description: >-
            This field is used to enter an override company-defined job code to
            be charged by the employee.
          type: string
        shift:
          description: >-
            This field is used to enter an override company-defined shift code
            to be charged by the employee.
          type: string
        beginDate:
          description: Begin Date associated with this line item
          type: string
        endDate:
          description: End Date associated with this line item
          type: string
        workersCompCode:
          description: >-
            The company defined workers comp code for work performed by the
            employee.
          type: string
        tCode1:
          description: Not used.
          type: string
        tCode2:
          description: Not used.
          type: string
        tCode3:
          description: Not used.
          type: string
        tCode4:
          description: Not used.
          type: string
        sequence:
          description: >-
            This field is used to indicate multiple checks. For example, if an
            employee should have two checks, then the entries which should
            create the first check will have a sequence of 1. The second check
            will have a sequence of 2. Sequence may be any number between 1-9.
          type: string
        checkType:
          description: This field is used to indicate an override check Type.
          type: string
        checkNumber:
          description: >-
            This field is used to indicate an override check Number. It is only
            valid when check Type is Manual. Check number for regular checks is
            assigned during processing.
          type: string
    SuccessResponse:
      type: object
      properties:
        fileName:
          type: string
        timeImportFileTrackingId:
          type: string
        status:
          type: string
    ErrorResponse:
      type: object
      properties:
        Fields:
          type: string
        Code:
          type: integer
          format: int32
        Message:
          type: string
    Unauthorized:
      type: array
      items:
        type: object
        properties:
          Code:
            type: integer
            format: int32
          ErrorId:
            type: string
          Message:
            type: string
    Forbidden:
      type: object
      properties:
        Code:
          type: integer
          format: int32
        ErrorId:
          type: string
        Message:
          type: string
    CostCenterDto:
      description: >-
        Cost Centers are organizational units within a company. Typically
        clients will break out their employees using cost centers like
        divisions, location and department.
      type: object
      properties:
        level:
          description: Cost center level (Levels are 1-3)
          type: integer
          format: int32
          nullable: true
        code:
          description: >-
            Cost Center Code associated with the Level. This must match a
            Paylocity Cost Center Code
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CreateDeductionDto:
      description: "A Payroll Deduction code is a unique identifier used by payroll systems to categorize and track specific deductions from an employee's paycheck.\r\nThese deductions can include taxes, health insurance premiums, retirement contributions, loan repayments, and more.\r\nEach type of deduction has its own unique code that allows it to be easily identified and processed by the payroll system.\r\nThis not only ensures accurate calculations and disbursements, but also helps with record-keeping and reporting requirements."
      type: object
      properties:
        effectiveFrom:
          description: Effective Date of the Deduction
          type: string
          format: date-time
          nullable: true
        effectiveTo:
          description: End Date of the Deduction
          type: string
          format: date-time
          nullable: true
        calculationCode:
          description: Calculation Code that Applies to Deduction
          type: string
          nullable: true
        rate:
          description: Rate for the Deduction
          type: number
          format: double
          nullable: true
        frequency:
          description: >-
            Frequency determines how often the deduction Rate is applied in
            payroll
          type: string
          nullable: true
        agency:
          description: Agency Code. These are custom per client
          type: string
          nullable: true
        arrear:
          description: Money that is owed
          type: number
          format: double
          nullable: true
        miscellaneousInfo:
          description: Miscellaneous Information
          type: string
          nullable: true
        note:
          description: Deduction Notes
          type: string
          nullable: true
        selfInsured:
          description: >-
            Self-Insured Plan Flag. This will generate Part III of the
            employee's 1095-C Form
          type: boolean
          nullable: true
        priority:
          description: >-
            Priority determines the order in which a deduction is subtracted
            from gross pay. Priorities 1-4 are reserved for Statutory
            deductions(necessary by law), while 5-7 are reserved for Voluntary
            deductions(employee-elected).
          type: integer
          format: int32
          nullable: true
        loan401K:
          $ref: '#/components/schemas/Loan401KDto'
        costCenters:
          description: An array of objects representing the Cost Centers
          type: array
          items:
            $ref: '#/components/schemas/CostCenterDto'
          nullable: true
        limits:
          $ref: '#/components/schemas/CreateLimitsDto'
        code:
          description: Deduction Code
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CreateEarningDto:
      description: "A Payroll Earning Code is a specific classification used in payroll systems to categorize the different types of income an employee receives.\r\nThese codes denote various earnings such as regular hours worked, overtime, bonuses, commissions, or holiday pay, among others.\r\nThe purpose of these codes is to streamline the payroll process, making it easier to track, manage, and report different types of income.\r\nThey are essential for accurate payroll calculations and compliance with tax and labor laws."
      type: object
      properties:
        effectiveFrom:
          description: Effective Date of Earning
          type: string
          format: date-time
          nullable: true
        effectiveTo:
          description: End Date of Earning
          type: string
          format: date-time
          nullable: true
        amount:
          description: Amount of Earning
          type: number
          format: double
          nullable: true
        rate:
          description: Earning Code Rate
          type: number
          format: double
          nullable: true
        units:
          description: Hours or Units Worked
          type: number
          format: double
          nullable: true
        selfInsured:
          description: Self Insured Flag
          type: boolean
          nullable: true
        calculationCode:
          description: Earning Calculation Code
          type: string
          nullable: true
        frequency:
          description: >-
            Frequency determines how often the earning Amount is applied in
            payroll
          type: string
          nullable: true
        agency:
          description: Agency Code
          type: string
          nullable: true
        miscellaneousInfo:
          description: Miscellaneous Info
          type: string
          nullable: true
        rateCode:
          description: Rate Code
          type: string
          nullable: true
        distribution:
          $ref: '#/components/schemas/DistributionDto'
        limits:
          $ref: '#/components/schemas/CreateLimitsDto'
        code:
          description: Earning Code
          type: string
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    CreateLimitsDto:
      description: Limits are used to control the amount of an earning or deduction
      type: object
      properties:
        goal:
          description: "The Goal is the deduction/earning limit. When deductions/earnings have met the limit, the employee pay deductions/earnings will stop.\r\nFor payroll, this amount is the lifetime deduction/earning limit.\r\nFor benefits, this limit amount could be annual."
          type: number
          format: double
          nullable: true
        paidToDate:
          description: >-
            Paid to Date tracks the amount paid toward the Goal. The Paid to
            Date amount will never be more than the Goal amount
          type: number
          format: double
          nullable: true
        payPeriodMinimum:
          description: Minimum for the pay period
          type: number
          format: double
          nullable: true
        payPeriodMaximum:
          description: Maximum for the pay period
          type: number
          format: double
          nullable: true
        annualMaximum:
          description: "Entering an amount in the Annual Maximum field will override the system setting, and you'll need to manually manage the maximum each year.\r\nLeave this field blank to keep the system setting."
          type: number
          format: double
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    DistributionDto:
      description: >-
        Labor Distribution is the term for the system categorizing
        (distributing) payroll data among Cost Centers and Job Codes
      type: object
      properties:
        jobCode:
          description: Job Code Allocation
          type: string
          nullable: true
        costCenters:
          description: An array of objects representing the Cost Centers
          type: array
          items:
            $ref: '#/components/schemas/CostCenterDto'
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    GetDeductionDto:
      description: "A Payroll Deduction code is a unique identifier used by payroll systems to categorize and track specific deductions from an employee's paycheck.\r\nThese deductions can include taxes, health insurance premiums, retirement contributions, loan repayments, and more.\r\nEach type of deduction has its own unique code that allows it to be easily identified and processed by the payroll system.\r\nThis not only ensures accurate calculations and disbursements, but also helps with record-keeping and reporting requirements."
      type: object
      properties:
        id:
          description: Resource ID of the record
          type: string
          format: uuid
        employeeId:
          description: >-
            The Paylocity Employee ID. This is a unique value per Paylocity
            Company ID
          type: string
          nullable: true
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity
          type: string
          nullable: true
        code:
          description: Deduction Code
          type: string
          nullable: true
        type:
          description: Deduction Type
          type: string
          nullable: true
        rate:
          description: Rate for the Deduction
          type: number
          format: double
          nullable: true
        arrear:
          description: Money that is owed
          type: number
          format: double
          nullable: true
        frequency:
          description: >-
            Frequency determines how often the deduction Rate is applied in
            payroll
          type: string
          nullable: true
        calculationCode:
          description: Calculation Code that Applies to Deduction
          type: string
          nullable: true
        agencyCode:
          description: Agency Code. These are custom per client
          type: string
          nullable: true
        miscellaneousInfo:
          description: Miscellaneous Information
          type: string
          nullable: true
        priority:
          description: >-
            Priority determines the order in which a deduction is subtracted
            from gross pay. Priorities 1-4 are reserved for Statutory
            deductions(necessary by law), while 5-7 are reserved for Voluntary
            deductions(employee-elected).
          type: integer
          format: int32
          nullable: true
        selfInsured:
          description: >-
            Self-Insured Plan Flag. This will generate Part III of the
            employee's 1095-C Form
          type: boolean
          nullable: true
        recordType:
          description: "The recordType field in our API plays a vital role in defining the current state of the record under consideration. This attribute can hold three different values, each describing a distinct temporal stage of the record.\r\n1. **Historical**: If the recordType is set as 'Historical', it signifies that the record in question pertains to past data or events. This attribute is typically used for records that have been archived or are no longer active.\r\n2. **Current**: A 'Current' recordType indicates that the record is active and relevant to the present time. These records are currently in use and contain up-to-date information.\r\n3. **Future dated**: The 'Future dated' recordType is used for records that are scheduled for a future date. They represent planned or expected data or events.\r\nBy using the recordType field, users can accurately categorize their records based on their temporal status, making it easier to sort, manage, and analyze data effectively."
          enum:
            - Current
            - Future
            - Historical
            - Unknown
          type: string
          nullable: true
        note:
          description: Deduction Notes
          type: string
          nullable: true
        effectiveDate:
          description: Effective Date of the Deduction
          type: string
          format: date-time
          nullable: true
        beginCheckDate:
          description: Begin Check Date of the Deduction
          type: string
          format: date-time
          nullable: true
        endCheckDate:
          description: End Check Date of the Deduction
          type: string
          format: date-time
          nullable: true
        costCenters:
          description: An array of objects representing the Cost Centers
          type: array
          items:
            $ref: '#/components/schemas/CostCenterDto'
          nullable: true
        limits:
          $ref: '#/components/schemas/GetLimitsDto'
        loan401K:
          $ref: '#/components/schemas/Loan401KDto'
      additionalProperties:
        type: object
        nullable: true
    GetEarningDto:
      description: "A Payroll Earning Code is a specific classification used in payroll systems to categorize the different types of income an employee receives.\r\nThese codes denote various earnings such as regular hours worked, overtime, bonuses, commissions, or holiday pay, among others.\r\nThe purpose of these codes is to streamline the payroll process, making it easier to track, manage, and report different types of income.\r\nThey are essential for accurate payroll calculations and compliance with tax and labor laws."
      type: object
      properties:
        id:
          description: Resource ID of the record
          type: string
          format: uuid
        companyId:
          description: >-
            The Paylocity Company Identifier. This is the unique value provided
            by Paylocity to each specific Payroll Entity
          type: string
          nullable: true
        employeeId:
          description: >-
            The Paylocity Employee ID. This is a unique value per Paylocity
            Company ID
          type: string
          nullable: true
        code:
          description: Earning Code
          type: string
          nullable: true
        frequency:
          description: >-
            Frequency determines how often the earning amount is applied in
            payroll
          type: string
          nullable: true
        selfInsured:
          description: Self Insured Flag
          type: boolean
          nullable: true
        recordType:
          description: "The recordType field in our API plays a vital role in defining the current state of the record under consideration. This attribute can hold three different values, each describing a distinct temporal stage of the record.\r\n1. **Historical**: If the recordType is set as 'Historical', it signifies that the record in question pertains to past data or events. This attribute is typically used for records that have been archived or are no longer active.\r\n2. **Current**: A 'Current' recordType indicates that the record is active and relevant to the present time. These records are currently in use and contain up-to-date information.\r\n3. **Future dated**: The 'Future dated' recordType is used for records that are scheduled for a future date. They represent planned or expected data or events.\r\nBy using the recordType field, users can accurately categorize their records based on their temporal status, making it easier to sort, manage, and analyze data effectively."
          enum:
            - Current
            - Future
            - Historical
            - Unknown
          type: string
          nullable: true
        amount:
          description: Amount of Earning
          type: number
          format: double
          nullable: true
        rate:
          description: Earning Code Rate
          type: number
          format: double
          nullable: true
        calculationCode:
          description: Earning Calculation Code
          type: string
          nullable: true
        units:
          description: Hours or Units Worked
          type: number
          format: double
          nullable: true
        rateCode:
          description: Rate Code
          type: string
          nullable: true
        agency:
          description: Agency Code
          type: string
          nullable: true
        miscellaneousInfo:
          description: Miscellaneous Info
          type: string
          nullable: true
        effectiveDate:
          description: Effective Date of Earning
          type: string
          format: date-time
          nullable: true
        beginCheckDate:
          description: Begin Check Date of Earning
          type: string
          format: date-time
          nullable: true
        endCheckDate:
          description: >-
            The date you select will become the last date that this earning
            appears on the employee's paycheck
          type: string
          format: date-time
          nullable: true
        distribution:
          $ref: '#/components/schemas/DistributionDto'
        limits:
          $ref: '#/components/schemas/GetLimitsDto'
      additionalProperties:
        type: object
        nullable: true
    GetLimitsDto:
      description: Limits are used to control the amount of an earning or deduction
      type: object
      properties:
        goal:
          description: "The Goal is the deduction/earning limit. When deductions/earnings have met the limit, the employee pay deductions/earnings will stop.\r\nFor payroll, this amount is the lifetime deduction/earning limit.\r\nFor benefits, this limit amount could be annual."
          type: number
          format: double
          nullable: true
        paidToDate:
          description: >-
            Paid to Date tracks the amount paid toward the Goal. The Paid to
            Date amount will never be more than the Goal amount
          type: number
          format: double
          nullable: true
        payPeriodMinimum:
          description: Minimum for the pay period
          type: number
          format: double
          nullable: true
        payPeriodMaximum:
          description: Maximum for the pay period
          type: number
          format: double
          nullable: true
        annualMaximum:
          description: "Entering an amount in the Annual Maximum field will override the system setting, and you'll need to manually manage the maximum each year.\r\nLeave this field blank to keep the system setting."
          type: number
          format: double
          nullable: true
        paidYearToDate:
          description: Amount Paid Year to Date
          type: number
          format: double
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    Loan401KDto:
      description: >-
        A 401K loan is a type of loan that allows you to borrow money against
        the balance of your 401K retirement plan, up to a certain limit. It's a
        way for individuals to access their retirement savings without incurring
        early withdrawal penalties or taxes. The borrower is expected to repay
        the loan, typically over five years, through payroll deductions. The
        values to insert a loan, like Loan Number, and First Payment Date are
        provided by the record keeper.
      type: object
      properties:
        loanNumber:
          description: 401K Loan Number. Provided by Record Keeper
          type: string
          nullable: true
        issueDate:
          description: Date of 401K Loan Issued
          type: string
          format: date-time
          nullable: true
        firstPaymentDate:
          description: First Payment Date of 401K Loan
          type: string
          format: date-time
          nullable: true
      additionalProperties:
        type: object
        nullable: true
    UpdateDeductionDto:
      description: "A Payroll Deduction code is a unique identifier used by payroll systems to categorize and track specific deductions from an employee's paycheck.\r\nThese deductions can include taxes, health insurance premiums, retirement contributions, loan repayments, and more.\r\nEach type of deduction has its own unique code that allows it to be easily identified and processed by the payroll system.\r\nThis not only ensures accurate calculations and disbursements, but also helps with record-keeping and reporting requirements."
      type: object
      properties:
        effectiveFrom:
          description: Effective Date of the Deduction
          type: string
          format: date-time
          nullable: true
        effectiveTo:
          description: End Date of the Deduction
          type: string
          format: date-time
          nullable: true
        calculationCode:
          description: Calculation Code that Applies to Deduction
          type: string
          nullable: true
        rate:
          description: Rate for the Deduction
          type: number
          format: double
          nullable: true
        frequency:
          description: >-
            Frequency determines how often the deduction Rate is applied in
            payroll
          type: string
          nullable: true
        agency:
          description: Agency Code. These are custom per client
          type: string
          nullable: true
        arrear:
          description: Money that is owed
          type: number
          format: double
          nullable: true
        miscellaneousInfo:
          description: Miscellaneous Information
          type: string
          nullable: true
        note:
          description: Deduction Notes
          type: string
          nullable: true
        selfInsured:
          description: >-
            Self-Insured Plan Flag. This will generate Part III of the
            employee's 1095-C Form
          type: boolean
          nullable: true
        priority:
          description: >-
            Priority determines the order in which a deduction is subtracted
            from gross pay. Priorities 1-4 are reserved for Statutory
            deductions(necessary by law), while 5-7 are reserved for Voluntary
            deductions(employee-elected).
          type: integer
          format: int32
          nullable: true
        loan401K:
          $ref: '#/components/schemas/Loan401KDto'
        costCenters:
          description: An array of objects representing the Cost Centers
          type: array
          items:
            $ref: '#/components/schemas/CostCenterDto'
          nullable: true
        limits:
          $ref: '#/components/schemas/CreateLimitsDto'
      additionalProperties:
        type: object
        nullable: true
    UpdateEarningDto:
      description: "A Payroll Earning Code is a specific classification used in payroll systems to categorize the different types of income an employee receives.\r\nThese codes denote various earnings such as regular hours worked, overtime, bonuses, commissions, or holiday pay, among others.\r\nThe purpose of these codes is to streamline the payroll process, making it easier to track, manage, and report different types of income.\r\nThey are essential for accurate payroll calculations and compliance with tax and labor laws."
      type: object
      properties:
        effectiveFrom:
          description: Effective Date of Earning
          type: string
          format: date-time
          nullable: true
        effectiveTo:
          description: End Date of Earning
          type: string
          format: date-time
          nullable: true
        amount:
          description: Amount of Earning
          type: number
          format: double
          nullable: true
        rate:
          description: Earning Code Rate
          type: number
          format: double
          nullable: true
        units:
          description: Hours or Units Worked
          type: number
          format: double
          nullable: true
        selfInsured:
          description: Self Insured Flag
          type: boolean
          nullable: true
        calculationCode:
          description: Earning Calculation Code
          type: string
          nullable: true
        frequency:
          description: >-
            Frequency determines how often the earning Amount is applied in
            payroll
          type: string
          nullable: true
        agency:
          description: Agency Code
          type: string
          nullable: true
        miscellaneousInfo:
          description: Miscellaneous Info
          type: string
          nullable: true
        rateCode:
          description: Rate Code
          type: string
          nullable: true
        distribution:
          $ref: '#/components/schemas/DistributionDto'
        limits:
          $ref: '#/components/schemas/CreateLimitsDto'
      additionalProperties:
        type: object
        nullable: true
    PunchImport:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PunchImportEntries'
    PunchImportEntries:
      type: object
      properties:
        employeeId:
          description: 'The employee''s employee ID. '
          type: string
          example: '52225'
        lastName:
          description: >-
            Employees Last Name. NOTE: This is just for reference and will not
            be imported into the system.
          type: string
          example: Smith
        firstName:
          description: >-
            Employees First Name. NOTE: This is just for reference and will not
            be imported into the system.
          type: string
          example: John
        date:
          description: Punch Date. Use format MM/DD/YYYY
          type: string
          example: 1/1/2020
        time:
          description: >-
            Punch Time. Use 12 Hr Format or 24 Hr Format . In addition to Work
            times, a time is also required for  Durations/Dollars/Units entries
            like PTO, Sick, Bonus, and Mileage.  Please feel free to use 12:00
            AM in the event that no actual time is present in the system you are
            exporting from.
          type: string
          example: 8:00 AM
        recordType:
          description: >-
            In, Out, Transfer, EndLunch, StartLunch, EndBreak, StartBreak. These
            can be defined on the client level as well.
          type: string
          example: In
        hoursDollars:
          description: >-
            Total Pay Type Duration or Total Adjustment Amount. This should only
            be used when importing Duration/Dollars/Units based entries like
            PTO, Sick,  Bonus, Mileage, etc. This field should be left blank for
            punches.
          type: string
          example: 8.25 or 125
        employeeNote:
          description: >-
            Employee note associated with punch, pay type or adjustment
            transaction 
          type: string
          example: Late due to an appointment
        supervisorNote:
          description: >-
            Supervisor note associated with punch, pay type or adjustment
            transaction 
          type: string
          example: Employee called in to make us aware of impending tardiness
        payLevel:
          description: >-
            Pay level the hours are calculated towards. If left blank, the pay
            level will be calculated in Time & Labor based on the employee's
            payroll rules.
          type: string
          example: REG or OT1 or OT2 or Unpaid
        CC1:
          description: >-
            Override Value for Cost Center 1. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC2:
          description: >-
            Override Value for Cost Center 2. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: Corp
        CC3:
          description: >-
            Override Value for Cost Center 3. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '1000'
        CC4:
          description: >-
            Override Value for Cost Center 4. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC5:
          description: >-
            Override Value for Cost Center 5. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC6:
          description: >-
            Override Value for Cost Center 6. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC7:
          description: >-
            Override Value for Cost Center 7. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC8:
          description: >-
            Override Value for Cost Center 8. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC9:
          description: >-
            Override Value for Cost Center 9. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC10:
          description: >-
            Override Value for Cost Center 10. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC11:
          description: >-
            Override Value for Cost Center 11. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC12:
          description: >-
            Override Value for Cost Center 12. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC13:
          description: >-
            Override Value for Cost Center 13. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC14:
          description: >-
            Override Value for Cost Center 14. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
        CC15:
          description: >-
            Override Value for Cost Center 15. Leave blank for the employee's
            default Cost Center.  
          type: string
          example: '100'
    RetirementContribution:
      type: object
      properties:
        companyId:
          description: >-
            The Paylocity Company ID. This is the unique value provided by
            Paylocity to each specific Payroll Entity.
          type: string
          nullable: true
        employeeId:
          description: >-
            The Paylocity Employee ID. This is a unique value per Paylocity
            Company ID.
          type: string
          nullable: true
        year:
          description: The current retirement plan year
          type: integer
          format: int32
        planId:
          description: >-
            The Plan ID from the retirement plan provider. This would match the
            value provided by the record keeper to the customer.
          type: string
          nullable: true
        checkDate:
          description: The Check Date from the Paylocity Payroll Calendar.
          type: string
          format: date-time
          nullable: true
        beginDate:
          description: >-
            The Begin Date of the Pay Period, this is associated with the Check
            Date from the Paylocity Payroll Calendar.
          type: string
          format: date-time
          nullable: true
        endDate:
          description: >-
            The End Date of the Pay Period, this is associated with the Check
            Date from the Paylocity Payroll Calendar.
          type: string
          format: date-time
          nullable: true
        grossHours:
          description: Gross Hours
          type: number
          format: double
        grossEarnings:
          description: Gross Earnings
          type: number
          format: double
        planHours:
          description: Plan Hours
          type: number
          format: double
        planEarnings:
          description: Plan Earnings
          type: number
          format: double
        excludedEarnings:
          description: Excluded Earnings
          type: number
          format: double
        employeePreTax:
          description: Employee Pre-Tax
          type: number
          format: double
        employeePostTax:
          description: Employee Post-Tax
          type: number
          format: double
        employerMatch:
          description: Employer Match
          type: number
          format: double
        employeeSavings:
          description: Employee Savings
          type: number
          format: double
        source5:
          description: Total Amount for Source 5. This source is configurable per client.
          type: number
          format: double
        source6:
          description: Total Amount for Source 6.
          type: number
          format: double
        source7:
          description: Total Amount for Source 7.
          type: number
          format: double
        source8:
          description: Total Amount for Source 8.
          type: number
          format: double
        source9:
          description: Total Amount for Source 9.
          type: number
          format: double
        source10:
          description: Total Amount for Source 10.
          type: number
          format: double
        source11:
          description: Total Amount for Source 11.
          type: number
          format: double
        source12:
          description: Total Amount for Source 12.
          type: number
          format: double
        loans:
          description: List of Loans
          type: array
          items:
            $ref: '#/components/schemas/RetirementLoan'
          nullable: true
        ytd:
          $ref: '#/components/schemas/RetirementYtd'
    RetirementLoan:
      type: object
      properties:
        number:
          description: >-
            Loan Number. This should be the loan number provided by the record
            keeper. This can be set on the employee-level by the Payroll Admin
            or Retirement Provider
          type: string
          nullable: true
        payment:
          description: Loan Payment.
          type: number
          format: double
    RetirementYtd:
      type: object
      properties:
        grossHours:
          description: YTD Gross Hours
          type: number
          format: double
        grossEarnings:
          description: YTD Gross Earnings
          type: number
          format: double
        planHours:
          description: YTD Plan Hours
          type: number
          format: double
        planEarnings:
          description: YTD Plan Earnings
          type: number
          format: double
        excludedEarnings:
          description: YTD Excluded Earnings
          type: number
          format: double
        employeePreTax:
          description: YTD Employee PreTax
          type: number
          format: double
        employeePostTax:
          description: YTD Employee PostTax
          type: number
          format: double
        employerMatch:
          description: YTD Employer Match
          type: number
          format: double
        employeeSavings:
          description: YTD Employee Savings
          type: number
          format: double
        source5:
          description: YTD Amount for Source 5
          type: number
          format: double
        source6:
          description: YTD Amount for Source 6
          type: number
          format: double
        source7:
          description: YTD Amount for Source 7
          type: number
          format: double
        source8:
          description: YTD Amount for Source 8
          type: number
          format: double
        source9:
          description: YTD Amount for Source 9
          type: number
          format: double
        source10:
          description: YTD Amount for Source 10
          type: number
          format: double
        source11:
          description: YTD Amount for Source 11
          type: number
          format: double
        source12:
          description: YTD Amount for Source 12
          type: number
          format: double
    error:
      description: The error model
      type: object
      properties:
        field:
          description: >-
            The name of the field, or property in the request message that
            contains an error.
          type: string
        message:
          description: The error message.
          type: string
        options:
          description: >-
            A list of options associated with this error. These options may
            indicate valid values for the field, or property that contains an
            error.
          type: array
          items:
            description: The error option model
            type: object
            properties:
              description:
                description: The description of the option.
                type: string
              code:
                description: The code associated with this option.
                type: string
        path:
          description: >-
            The JSON path of the field, or property, that contains an error in
            the request message.
          type: string
    errors:
      type: array
      items:
        type: object
        properties:
          Path:
            type: string
          field:
            type: string
          message:
            type: string
          options:
            type: array
            items:
              type: object
    addClientSecret:
      description: The Add Client Secret Request Model
      required:
        - code
      type: object
      properties:
        code:
          description: >-
            A value sent with the 'ACTION NEEDED: Web Link API Credentials
            Expiring Soon.' email notification.
          type: string
    additionalRate:
      description: The additional pay rate model
      type: object
      properties:
        changeReason:
          description: >-
            Not required. If populated, must match one of the system coded
            values available in the Additional Rates Change Reason drop down.<br
            />
          type: object
        costCenter1:
          description: >-
            Not required. Valid values must match one of the system coded cost
            centers available in the Additional Rates Cost Center level 1 drop
            down. This cell must be in a text format.<br />
          type: object
        costCenter2:
          description: >-
            Not required. Valid values must match one of the system coded cost
            centers available in the Additional Rates Cost Center level 2 drop
            down. This cell must be in a text format.<br />
          type: object
        costCenter3:
          description: >-
            Not required. Valid values must match one of the system coded cost
            centers available in the Additional Rates Cost Center level 3 drop
            down. This cell must be in a text format.<br />
          type: object
        effectiveDate:
          description: Required. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />
          type: object
          format: paylocity-date
        endCheckDate:
          description: >-
            Not required. Must match one of the system coded check dates
            available in the Additional Rates End Check Date drop down. Common
            formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />
          type: object
          format: paylocity-date
        job:
          description: >-
            Not required. If populated, must match one of the system coded
            values available in the Additional Rates Job drop down.<br />
          type: object
        rate:
          description: >-
            Required. Enter dollar amount that corresponds to the Per
            selection.<br />
          type: object
        rateCode:
          description: >-
            Required. If populated, must match one of the system coded values
            available in the Additional Rates Rate Code drop down.<br />
          type: object
        rateNotes:
          description: 'Not required.<br  />Max length: 4000<br />'
          type: object
        ratePer:
          description: Required. Valid values are HOUR or WEEK.<br />
          type: object
        shift:
          description: >-
            Not required. If populated, must match one of the system coded
            values available in the Additional Rates Shift drop down.<br />
          type: object
    addUpdateDeduction:
      type: object
      properties:
        agency:
          description: >-
            Used to produce third-party checks for a specific agency. Must match
            Company setup.<br  />Max length: 5
          type: string
        annualMaximum:
          description: >-
            Year to Date dollar amount not to be exceeded for a deduction in the
            calendar year. <br  />Decimal(12,2)
          type: number
        calcCode:
          description: >-
            Defines how deductions are calculated. Common values are *%
            (percentage of gross), flat (flat dollar amount)*. Defaulted to the
            Company setup calcCode for deduction. <br  />Max length: 15
          type: string
        caseNo:
          description: >-
            Child Support Case Identifier number, case number or court order
            number.<br  />Max length: 20
          type: string
        companyNumber:
          description: 'Paylocity assigned company number. <br  />Max length: 9'
          type: string
        costCenter1:
          description: >-
            Cost Center associated with deduction. Must match Company setup.<br 
            /> Max length: 10
          type: string
        costCenter2:
          description: >-
            Cost Center associated with deduction. Must match Company setup.<br 
            /> Max length: 10
          type: string
        costCenter3:
          description: >-
            Cost Center associated with deduction. Must match Company setup.<br 
            /> Max length: 10
          type: string
        dcode:
          description: 'Deduction code. Must match Company setup. <br  />Max length: 5'
          type: string
        effectiveDate:
          description: >-
            Date deduction or benefit is active. Defaulted to run date or check
            date based on Company setup. Common formats are MM-DD-CCYY,
            CCYY-MM-DD
          type: string
          format: date
        employeeId:
          description: >-
            Either employee ID or employee SSN is required.<br  /> Max length:
            10
          type: string
        endDate:
          description: >-
            Stop date of a deduction or benefit. Common formats are MM-DD-CCYY,
            CCYY-MM-DD.
          type: string
          format: date
        fipsCode:
          description: >-
            Child support Federal Information Process Standard (FIPS) code. <br 
            />Max length: 7
          type: string
        frequency:
          description: >-
            Needed if deduction is applied differently from the payroll
            frequency (one time deduction for example).<br  /> Max length: 5
          type: string
        goal:
          description: >-
            Dollar amount. The employee deduction will stop when the goal amount
            is reached.<br  /> Decimal(12,2)
          type: number
        isSelfInsuredPlan:
          description: Used for ACA. If not entered, defaulted to Company deduction setup
          type: boolean
        loanFirstPaymentDate401K:
          description: >-
            401K loan first payment date. Common formats are MM-DD-CCYY,
            CCYY-MM-DD
          type: string
          format: date
        loanIssueDate401K:
          description: 401K loan issue date. Common formats are MM-DD-CCYY, CCYY-MM-DD
          type: string
          format: date
        loanNumber:
          description: >-
            401K Loan number, required for 401K Loan deduction types. <br  />
            Max length: 50
          type: string
        maximum:
          description: >-
            Maximum amount of the deduction on a single paycheck. <br  />
            Decimal(12,2)
          type: number
        medicalSupport:
          description: >-
            Indicates if the employee qualifies for medical benefits that can be
            used to cover the child
          type: boolean
        minimum:
          description: >-
            Minimum amount of the deduction on a single paycheck. <br  />
            Decimal(12,2)
          type: number
        miscInfo:
          description: >-
            Information to print on the check stub if agency check is set up for
            this deduction. <br  />Max length: 50
          type: string
        paidTowardsGoal:
          description: Amount already paid toward goal.<br  /> Decimal(12,2)
          type: number
        priority:
          description: >-
            Priority of a deduction within the deduction category. Common values
            are *0,1,2. <br  /> Max length: 2
          type: integer
        rate:
          description: >-
            Value to match the calcCode (percentage or amount). For example if
            calcCode = %, enter 10.00 to indicate 10%. <br  /> Decimal(12,2)
          type: number
        reportTerminated:
          description: Indicates whether agency needs to be reported on terminated employee
          type: boolean
        ssn:
          description: >-
            Either employee ID or employee SSN is required.<br  /> Max length:
            11
          type: string
        startDate:
          description: >-
            Start date of a deduction based on payroll calendar. Common formats
            are MM-DD-CCYY, CCYY-MM-DD
          type: string
          format: date
        stateAbbrev:
          description: 'State for child support.<br  /> Max length: 2'
          type: string
    benefitSetup:
      description: The benefit setup model
      type: object
      properties:
        benefitClass:
          description: >-
            Benefit Class code. Values are configured in Paylocity Payroll/HR
            solution Company > Setup > Benefits > Classes.<br  />Max length: 30
          type: object
        benefitClassEffectiveDate:
          description: >-
            Date when Benefit Class takes effect. Common formats include
            *MM-DD-CCYY*, *CCYY-MM-DD*.
          type: object
          format: paylocity-date
        benefitSalary:
          description: Salary used to configure benefits.<br  />Decimal(12,2)
          type: object
        benefitSalaryEffectiveDate:
          description: >-
            Date when Benefit Salary takes effect. Common formats include
            *MM-DD-CCYY*, *CCYY-MM-DD*.
          type: object
          format: paylocity-date
        doNotApplyAdministrativePeriod:
          description: >-
            Applicable only for HR Enhanced clients and Benefit Classes with ACA
            Employment Type of Full Time.
          type: object
        isMeasureAcaEligibility:
          description: >-
            Only valid for HR Enhanced clients and Benefit Classes that are ACA
            Employment Type of Full Time.
          type: object
    clientCredentialsResponse:
      description: The Client Credentials Response Model
      type: object
      properties:
        clientSecret:
          description: The client's secret
          type: object
        clientSecretExpirationDate:
          description: The client's secret expiration date
          type: object
          format: paylocity-date
    companyCodes:
      description: The Company Codes model
      type: object
      properties:
        description:
          description: 'Description. <br  /> Max length: 150'
          type: object
        code:
          description: 'Code.<br  /> Max length: 40'
          type: object
    customFieldDefinition:
      description: ''
      type: object
      properties:
        category:
          description: The custom field category.
          type: string
        defaultValue:
          description: Specifies the default value of the custom field.
          type: string
        isRequired:
          description: Indicates whether the custom field is required.
          type: boolean
        label:
          description: The custom field label.
          type: string
        type:
          description: The custom field type.
          type: string
        values:
          description: A set of values that are applicable to the custom field.
          type: array
          items:
            description: ''
            type: object
            properties:
              description:
                description: The custom field description.
                type: string
              code:
                description: The custom field code.
                type: string
    deduction:
      type: object
      properties:
        agency:
          description: >-
            Used to produce third-party checks for a specific agency. Must match
            Company setup.<br  />Max length: 5
          type: string
        annualMaximum:
          description: >-
            Year to Date dollar amount not to be exceeded for a deduction in the
            calendar year. <br  />Decimal(12,2)
          type: number
        calcCode:
          description: >-
            Defines how deductions are calculated. Common values are *%
            (percentage of gross), flat (flat dollar amount)*. Defaulted to the
            Company setup calcCode for deduction. <br  />Max length: 15
          type: string
        caseNo:
          description: >-
            Child Support Case Identifier number, case number or court order
            number.<br  />Max length: 20
          type: string
        costCenter1:
          description: >-
            Cost Center associated with deduction. Must match Company setup.<br 
            /> Max length: 10
          type: string
        costCenter2:
          description: >-
            Cost Center associated with deduction. Must match Company setup.<br 
            /> Max length: 10
          type: string
        costCenter3:
          description: >-
            Cost Center associated with deduction. Must match Company setup.<br 
            /> Max length: 10
          type: string
        dcode:
          description: 'Deduction code. Must match Company setup. <br  />Max length: 5'
          type: string
        effectiveDate:
          description: >-
            Date deduction or benefit is active. Defaulted to run date or check
            date based on Company setup. Common formats are MM-DD-CCYY,
            CCYY-MM-DD
          type: string
          format: date
        endDate:
          description: >-
            Stop date of a deduction or benefit. Common formats are MM-DD-CCYY,
            CCYY-MM-DD.
          type: string
          format: date
        fipsCode:
          description: >-
            Child support Federal Information Process Standard (FIPS) code. <br 
            />Max length: 7
          type: string
        frequency:
          description: >-
            Needed if deduction is applied differently from the payroll
            frequency (one time deduction for example).<br  /> Max length: 5
          type: string
        goal:
          description: >-
            Dollar amount. The employee deduction will stop when the goal amount
            is reached.<br  /> Decimal(12,2)
          type: number
        isSelfInsuredPlan:
          description: Used for ACA. If not entered, defaulted to Company deduction setup
          type: boolean
        loanFirstPaymentDate401K:
          description: >-
            401K loan first payment date. Common formats are MM-DD-CCYY,
            CCYY-MM-DD
          type: string
          format: date
        loanIssueDate401K:
          description: 401K loan issue date. Common formats are MM-DD-CCYY, CCYY-MM-DD
          type: string
          format: date
        loanNumber:
          description: >-
            401K Loan number, required for 401K Loan deduction types. <br  />
            Max length: 50
          type: string
        maximum:
          description: >-
            Maximum amount of the deduction on a single paycheck. <br  />
            Decimal(12,2)
          type: number
        medicalSupport:
          description: >-
            Indicates if the employee qualifies for medical benefits that can be
            used to cover the child
          type: boolean
        minimum:
          description: >-
            Minimum amount of the deduction on a single paycheck. <br  />
            Decimal(12,2)
          type: number
        miscInfo:
          description: >-
            Information to print on the check stub if agency check is set up for
            this deduction. <br  />Max length: 50
          type: string
        paidTowardsGoal:
          description: Amount already paid toward goal.<br  /> Decimal(12,2)
          type: number
        priority:
          description: >-
            Priority of a deduction within the deduction category. Common values
            are *0,1,2. <br  /> Max length: 2
          type: integer
        rate:
          description: >-
            Value to match the calcCode (percentage or amount). For example if
            calcCode = %, enter 10.00 to indicate 10%. <br  /> Decimal(12,2)
          type: number
        reportTerminated:
          description: Indicates whether agency needs to be reported on terminated employee
          type: boolean
        startDate:
          description: >-
            Start date of a deduction based on payroll calendar. Common formats
            are MM-DD-CCYY, CCYY-MM-DD
          type: string
          format: date
        stateAbbrev:
          description: 'State for child support.<br  /> Max length: 2'
          type: string
    departmentPosition:
      type: object
      properties:
        changeReason:
          description: >-
            Employee department/position change reason. Must match Company
            setup.<br  />Max length: 15
          type: string
        clockBadgeNumber:
          description: >-
            Employee clock badge number. Deafults to employeeId. <br  />Max
            length: 10
          type: string
        costCenter1:
          description: >-
            Employer defined location, like *branch, division, department*, etc.
            Must match Company setup. <br  />Max length: 10
          type: string
        costCenter2:
          description: >-
            Employer defined location, like *branch, division, department*, etc.
            Must match Company setup. <br  />Max length: 10
          type: string
        costCenter3:
          description: >-
            Employer defined location, like *branch, division, department*, etc.
            Must match Company setup. <br  />Max length: 10
          type: string
        effectiveDate:
          description: The date the position takes effect. (MM-DD-CCYY)
          type: string
          format: date
        employeeType:
          description: >-
            Employee current employment type. Common values *RFT (Regular Full
            Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full
            Time), TPT (Temporary Part Time)*. <br  />Max length: 10
          type: string
        equalEmploymentOpportunityClass:
          description: >-
            Values are configured in Company > Setup > HR > EEO Classes.<br  />
            Max length: 10
          type: string
        isSupervisorReviewer:
          description: Indicates if employee is a supervisor or reviewer.
          type: boolean
        jobTitle:
          description: 'Employee current job title. <br  />Max length: 50'
          type: string
        minimumWageExempt:
          description: Indicates if employee is exempt from minimum wage.
          type: boolean
        overtimeExempt:
          description: Indicates if employee is exempt from overtime.
          type: boolean
        payGroup:
          description: 'Employee pay group. Must match Company setup. <br  /> Max length: 20'
          type: string
        positionCode:
          description: >-
            Employee position code. Must match Company setup.<br  />Max length:
            20
          type: string
        shift:
          description: 'Employee work shift.<br  />Max length: 255'
          type: string
        supervisorCompanyNumber:
          description: >-
            Supervisor's company number. Defaults to employee company
            number.<br  />Max length: 9
          type: string
        supervisorEmployeeId:
          description: 'EmployeeId of the supervisor. <br  />Max length: 10'
          type: string
        tipped:
          description: Indicates if employee receives tips.
          type: string
        unionAffiliationDate:
          description: >-
            Employee union affiliation effective date. Common formats are
            *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
          format: date
        unionCode:
          description: 'Employee union code. Must match Company setup. <br  />Max length: 10'
          type: string
        unionDuesCollected:
          description: Indicates if union dues are collected.
          type: boolean
        unionInitiationCollected:
          description: Indicates if union initiation fees are collected
          type: boolean
        unionPosition:
          description: >-
            Employee union position. Must match Company setup. <br  />Max
            length: 30
          type: string
        workersComp:
          description: >-
            Employee worker compensation code. Must match Company setup.<br  />
            Max length: 10
          type: string
    directDeposit:
      description: The Direct Deposit model
      type: object
      properties:
        additionalDirectDeposit:
          description: Additional Direct Deposits that are not the main Direct Deposit.
          type: array
          items:
            description: The additional direct deposit model
            type: object
        mainDirectDeposit:
          description: The main Direct Deposit account.
          type: object
    earning:
      description: The employee earning model
      required:
        - earningCode
        - startDate
      type: object
      properties:
        agency:
          description: >-
            Third-party agency associated with earning. Must match Company
            setup.<br  />Max length: 10
          type: object
        amount:
          description: >-
            Value that matches CalculationCode to add to gross wages. For
            percentage (%), enter whole number (10 = 10%).  <br  />Decimal(12,2)
          type: object
        annualMaximum:
          description: >-
            Year to Date dollar amount not to be exceeded for an earning in the
            calendar year. Used only with company driven maximums. <br 
            />Decimal(12,2)
          type: object
        calculationCode:
          description: >-
            Defines how earnings are calculated. Common values are *%
            (percentage of gross), flat (flat dollar amount)*. Defaulted to the
            Company setup calcCode for earning. <br  />Max length: 20
          type: object
        costCenter1:
          description: >-
            Cost Center associated with earning. Must match Company setup.<br 
            /> Max length: 10
          type: object
        costCenter2:
          description: >-
            Cost Center associated with earning. Must match Company setup.<br 
            /> Max length: 10
          type: object
        costCenter3:
          description: >-
            Cost Center associated with earning. Must match Company setup.<br 
            /> Max length: 10
          type: object
        earningCode:
          description: 'Earning code. Must match Company setup. <br  />Max length: 10'
          type: object
        effectiveDate:
          description: >-
            Date earning is active. Defaulted to run date or check date based on
            Company setup. Common formats are MM-DD-CCYY, CCYY-MM-DD.
          type: object
          format: paylocity-date
        endDate:
          description: Stop date of an earning. Common formats are MM-DD-CCYY, CCYY-MM-DD.
          type: object
          format: paylocity-date
        frequency:
          description: >-
            Needed if earning is applied differently from the payroll frequency
            (one time earning for example).<br  /> Max length: 5
          type: object
        goal:
          description: >-
            Dollar amount. The employee earning will stop when the goal amount
            is reached.<br  /> Decimal(12,2)
          type: object
        hoursOrUnits:
          description: >-
            The value is used in conjunction with the Rate field. When entering
            Group Term Life Insurance (GTL), it should contain the full amount
            of the group term life insurance policy. <br  /> Decimal(12,2)
          type: object
        isSelfInsured:
          description: Used for ACA. If not entered, defaulted to Company earning setup.
          type: object
        jobCode:
          description: >-
            Job code associated with earnings. Must match Company setup.<br  />
            Max length: 20
          type: object
        miscellaneousInfo:
          description: >-
            Information to print on the check stub if agency is set up for this
            earning. <br  />Max length: 50
          type: object
        paidTowardsGoal:
          description: Amount already paid to employee toward goal. <br  /> Decimal(12,2)
          type: object
        payPeriodMaximum:
          description: >-
            Maximum amount of the earning on a single paycheck. <br  />
            Decimal(12,2)
          type: object
        payPeriodMinimum:
          description: >-
            Minimum amount of the earning on a single paycheck. <br  />
            Decimal(12,2)
          type: object
        rate:
          description: >-
            Rate is used in conjunction with the hoursOrUnits field. <br  />
            Decimal(12,2)
          type: object
        rateCode:
          description: >-
            Rate Code applies to additional pay rates entered for an employee.
            Must match Company setup. <br  /> Max length: 10
          type: object
        startDate:
          description: >-
            Start date of an earning based on payroll calendar. Common formats
            are MM-DD-CCYY, CCYY-MM-DD.
          type: object
          format: paylocity-date
    emergencyContact:
      description: The emergency contact model
      required:
        - firstName
        - lastName
      type: object
      properties:
        address1:
          description: 1st address line.
          type: object
        address2:
          description: 2nd address line.
          type: object
        city:
          description: City.
          type: object
        country:
          description: County.
          type: object
        county:
          description: >-
            Country.  Must be a valid 3 character country code.  Common values
            are *USA* (United States), *CAN* (Canada).
          type: object
        email:
          description: Contact email.  Must be valid email address format.
          type: object
        firstName:
          description: 'Required. Contact first name. <br  />Max length: 40'
          type: object
        homePhone:
          description: >-
            Contact Home Phone.  Valid phone format  *(###) #######* or
            *######-####* or *### ### ####* or *##########* or, if
            international, starts with *+#*, only spaces and digits allowed.
          type: object
        lastName:
          description: 'Required. Contact last name. <br  />Max length: 40'
          type: object
        mobilePhone:
          description: >-
            Contact Mobile Phone.  Valid phone format  *(###) #######* or
            *######-####* or *### ### ####* or *##########* or, if
            international, starts with *+#*, only spaces and digits allowed.
          type: object
        notes:
          description: 'Notes. <br  />Max length: 1000'
          type: object
        pager:
          description: >-
            Contact Pager.  Valid phone format  *(###) #######* or *######-####*
            or *### ### ####* or *##########* or, if international, starts with
            *+#*, only spaces and digits allowed.
          type: object
        primaryPhone:
          description: >-
            Required. Contact primary phone type.  Must match Company setup. 
            Valid  values are H (Home), M (Mobile), P (Pager), W (Work)
          type: object
        priority:
          description: >-
            Required. Contact priority. Valid values are *P* (Primary) or *S*
            (Secondary).
          type: object
        relationship:
          description: >-
            Required. Contact relationship.  Must match Company setup.  Common
            values are Spouse, Mother, Father.
          type: object
        state:
          description: >-
            State or Province.  If U.S. address, must be valid 2 character state
            code.  Common values are *IL* (Illinois), *CA* (California).
          type: object
        syncEmployeeInfo:
          description: Valid values are *true* or *false*.
          type: boolean
        workExtension:
          description: Work Extension.
          type: object
        workPhone:
          description: >-
            Contact Work Phone.  Valid phone format  *(###) #######* or
            *######-####* or *### ### ####* or *##########* or, if
            international, starts with *+#*, only spaces and digits allowed.
          type: object
        zip:
          description: Postal code.  If U.S. address, must be a valid zip code.
          type: object
    employeeV1:
      description: Employee
      type: object
      properties:
        address1:
          description: 'Employee home 1st address line. <br  />Max length: 40'
          type: string
        address2:
          description: 'Employee home 2nd address line. <br  />Max length: 40'
          type: string
        benefitSetup:
          description: Benefit Setup
          type: object
          properties:
            benefitClass:
              description: >-
                Benefit Class code. Values are configured in Paylocity
                Payroll/HR solution Company > Setup > Benefits > Classes.<br 
                />Max length: 30
              type: string
            benefitClassEffectiveDate:
              description: >-
                Date when Benefit Class takes effect. Common formats are
                *MM-DD-CCYY, CCYY-MM-DD*.
              type: string
            benefitSalary:
              description: Salary used to configure benefits.<br  />Decimal(12,2)
              type: number
            benefitSalaryEffectiveDate:
              description: >-
                Date when Benefit Salary takes effect. Common formats are
                *MM-DD-CCYY, CCYY-MM-DD*.
              type: string
            doNotApplyAdministrativePeriod:
              description: >-
                Applicable only for ACA Enhanced clients and Benefit Classes
                with ACA Employment Type of Full Time.
              type: boolean
            measureACAEligibility:
              description: >-
                Only valid for ACA Enhanced clients and Benefit Classes that are
                ACA Employment Type of Full Time.
              type: boolean
        birthDate:
          description: Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
        city:
          description: 'Employee home city. <br  />Max length: 40'
          type: string
        companyNumber:
          description: 'Paylocity assigned company number. <br  /> Max length: 9'
          type: string
        departmentPosition:
          description: Department Position
          type: object
          properties:
            costCenter1:
              description: >-
                Employer defined location, like *branch, division, department*,
                etc. Must match Company setup. <br  />Max length: 10
              type: string
            costCenter2:
              description: >-
                Employer defined location, like *branch, division, department*,
                etc. Must match Company setup. <br  />Max length: 10
              type: string
            costCenter3:
              description: >-
                Employer defined location, like *branch, division, department*,
                etc. Must match Company setup. <br  />Max length: 10
              type: string
            employeeType:
              description: >-
                Employee current employment type. Common values *RFT (Regular
                Full Time), RPT (Regular Part Time), SNL (Seasonal), TFT
                (Temporary Full Time), TPT (Temporary Part Time)*. <br  />Max
                length: 10
              type: string
            equalEmploymentOpportunityClass:
              description: >-
                Values are configured in Company > Setup > HR > EEO Classes.<br 
                /> Max length: 10
              type: string
            jobTitle:
              description: 'Employee current job title. <br  />Max length: 50'
              type: string
            payGroup:
              description: >-
                Employee pay group. Must match Company setup. <br  /> Max
                length: 20
              type: string
        employeeId:
          description: >-
            Leave blank to have Paylocity Payroll/HR solution automatically
            assign the next available employee ID.<br  /> Max length: 10
          type: string
        employeeStatus:
          description: Employee Status
          type: object
          properties:
            employeeStatusCode:
              description: >-
                Employee current work status. Common values are *A* (Active),
                *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20
              type: string
        ethnicity:
          description: 'Employee ethnicity.<br  /> Max length: 10'
          type: string
        firstName:
          description: 'Employee first name. <br  />Max length: 40'
          type: string
        gender:
          description: >-
            Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
            length: 1
          type: string
        highlyCompensatedEmployee:
          description: >-
            Indicates if employee meets the highly compensated employee
            criteria.
          type: boolean
        hireDate:
          description: Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
        homePhone:
          description: 'Employee home phone number.  <br  />Max length: 12'
          type: string
        lastName:
          description: 'Employee last name. <br  />Max length: 40'
          type: string
        maritalStatus:
          description: >-
            Employee marital status. Common values *D (Divorced), M (Married), S
            (Single), W (Widowed)*. <br  />Max length: 10
          type: string
        middleName:
          description: 'Employee middle name.<br  /> Max length: 20'
          type: string
        nickname:
          description: 'Employee preferred display name. <br  /> Max length: 20'
          type: string
        ownerPercent:
          description: >-
            Percentage of employee's ownership in the company, entered as a
            whole number . <br  /> Decimal (12,2)
          type: number
        personalEmailAddress:
          description: 'Employee personal email address. <br  />Max length: 50'
          type: string
        personalMobilePhone:
          description: 'Employee personal mobile phone number. <br  />Max length: 12'
          type: string
        position:
          description: >-
            Employee position code. Must match Company setup.<br  />Max length:
            20 
          type: string
        postalCode:
          description: 'Employee work zip code.<br  /> Max length: 10'
          type: string
        primaryPayRate:
          description: Primary Pay Rate
          type: object
          properties:
            annualSalary:
              description: Employee annual salary. <br  />Decimal (12,2)
              type: number
            baseRate:
              description: >-
                Employee base rate, used for Hourly employees. <br  />Decimal
                (12,2)
              type: number
            defaultHours:
              description: >-
                Employee default hours consistently worked. If autoPayType is
                set to D, employee will be paid hourly base rate for the
                defaultHours. <br  />Decimal (12,2)
              type: number
            payFrequency:
              description: >-
                Employee current pay frequency. Common values are *A (Annual), B
                (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q
                (Quarterly), W (Weekly)*. <br  />Max length: 5
              type: string
            payType:
              description: >-
                Employee pay type (rate code). Valid values are *Hourly* or
                *Salary*. <br  />Max length: 10
              type: string
            primaryPayRateEffectiveDate:
              description: The date the employee’s pay rate takes effect. (MM-DD-CCYY)
              type: string
            salary:
              description: >-
                Employee gross salary per pay period used with payType
                Salary.<br  />Decimal (12,2)
              type: number
        reHireDate:
          description: >-
            Rehire date if employee is rehired. Common formats are *MM-DD-CCYY,
            CCYY-MM-DD*.
          type: string
        ssn:
          description: >-
            Employee social security number. Leave it blank if valid social
            security number not available. <br  />Max length: 11
          type: string
        state:
          description: 'Employee home state. <br  />Max length: 2'
          type: string
        statutory:
          description: Indicates if employee is statutory.
          type: boolean
        supervisorCompanyNumber:
          description: >-
            Supervisor's company number. Defaults to employee company
            number.<br  />Max length: 9
          type: string
        supervisorEmployeeId:
          description: 'EmployeeId of the supervisor. <br  />Max length: 10'
          type: string
        taxForm:
          description: >-
            Employee tax form for reporting income. Valid values are *W2, 1099M,
            1099R*. Default is W2. <br  />Max length: 15
          type: string
        terminationDate:
          description: >-
            Date of emplyee termination. Common formats are *MM-DD-CCYY,
            CCYY-MM-DD*.
          type: string
        terminationReason:
          description: >-
            Employee termination reason. Must match Company setup for employee
            status.<br  />Max length: 15
          type: string
        workEmailAddress:
          description: 'Employee work email. <br  />Max length: 50'
          type: string
        workPhone:
          description: 'Employee work phone number.<br  /> Max length: 12'
          type: string
        workPhoneExt:
          description: 'Employee work phone extension number.<br  /> Max length: 10'
          type: string
    employee:
      description: The employee model
      type: object
      properties:
        additionalDirectDeposit:
          description: >-
            Add up to 19 direct deposit accounts in addition to the main direct
            deposit account. IMPORTANT: A direct deposit update will remove ALL
            existing main and additional direct deposit information in WebPay
            and replace with information provided on the request. GET API will
            not return direct deposit data.
          maxItems: 19
          type: array
          items:
            description: The additional direct deposit model
            type: object
        additionalRate:
          description: Add Additional Rates.
          type: array
          items:
            description: The additional pay rate model
            type: object
        benefitSetup:
          description: ' Add or update setup values used for employee benefits integration, insurance plan settings, and ACA reporting.'
          type: object
        birthDate:
          description: >-
            Employee birthdate. Common formats include *MM-DD-CCYY*,
            *CCYY-MM-DD*.
          type: object
          format: paylocity-date
        companyFEIN:
          description: >-
            Company FEIN as defined in Paylocity Payroll/HR solution, applicable
            with GET requests only.<br  /> Max length: 20
          type: object
        companyName:
          description: >-
            Company name as defined in Paylocity Payroll/HR solution, applicable
            with GET requests only.<br  /> Max length: 50
          type: object
        currency:
          description: 'Employee is paid in this currency. <br  />Max length: 30'
          type: object
        customBooleanFields:
          description: Up to 8 custom fields of boolean (checkbox) type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        customDateFields:
          description: Up to 8 custom fields of the date type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        customDropDownFields:
          description: Up to 8 custom fields of the dropdown type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        customNumberFields:
          description: Up to 8 custom fields of numeric type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        customTextFields:
          description: Up to 8 custom fields of text type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        departmentPosition:
          description: >-
            Add or update home department cost center, position, supervisor,
            reviewer, employment type, EEO class, pay settings, and union
            information.
          type: object
        disabilityDescription:
          description: Indicates if employee has disability status.
          type: object
        emergencyContacts:
          description: Add or update Emergency Contacts.
          type: array
          items:
            description: The emergency contact model
            type: object
        employeeId:
          description: >-
            Leave blank to have Paylocity Payroll/HR solution automatically
            assign the next available employee ID.<br  />Max length: 10
          type: object
        ethnicity:
          description: 'Employee ethnicity.<br  /> Max length: 10'
          type: object
        federalTax:
          description: >-
            Add or update federal tax amount type (taxCalculationCode), amount
            or percentage, filing status, and exemptions.
          type: object
        firstName:
          description: 'Employee first name. <br  />Max length: 40'
          type: object
        gender:
          description: >-
            Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
            length: 1
          type: object
        homeAddress:
          description: >-
            Add or update employee's home address, personal phone numbers, and
            personal email.
          type: object
        isHighlyCompensated:
          description: >-
            Indicates if employee meets the highly compensated employee
            criteria.
          type: boolean
        isSmoker:
          description: Indicates if employee is a smoker.
          type: boolean
        lastName:
          description: 'Employee last name. <br  />Max length: 40'
          type: object
        localTax:
          description: >-
            Add, update, or delete local tax code, filing status, and exemptions
            including  PA-PSD taxes.
          maxItems: 5
          type: array
          items:
            description: The Local Tax model
            type: object
        mainDirectDeposit:
          description: >-
            Add the main direct deposit account. After deposits are made to any
            additional direct deposit accounts, the remaining net check is
            deposited in the main direct deposit account. IMPORTANT: A direct
            deposit update will remove ALL existing main and additional direct
            deposit information in WebPay and replace with what is provided on
            the request. GET API will not return direct deposit data.
          type: object
        maritalStatus:
          description: >-
            Employee marital status. Common values *D (Divorced), M (Married), S
            (Single), W (Widowed)*. <br  />Max length: 10
          type: object
        middleName:
          description: 'Employee middle name.<br  /> Max length: 20'
          type: object
        nonPrimaryStateTax:
          description: >-
            Add or update non-primary state tax code, amount type
            (taxCalculationCode), amount or percentage, filing status,
            exemptions, supplemental check (specialCheckCalc), and reciprocity
            code information.
          type: object
        ownerPercent:
          description: >-
            Percentage of employee's ownership in the company, entered as a
            whole number. <br  /> Decimal (12,2)
          type: object
        preferredName:
          description: 'Employee preferred display name.<br  /> Max length: 20'
          type: object
        primaryPayRate:
          description: >-
            Add or update hourly or salary pay rate, effective date, and pay
            frequency.
          type: object
        primaryStateTax:
          description: >-
            Add or update primary state tax code, amount type
            (taxCalculationCode), amount or percentage, filing status,
            exemptions, and supplemental check (specialCheckCalc) information.
            Only one primary state is allowed. Sending an updated primary state
            will replace the current primary state.
          type: object
        priorLastName:
          description: 'Prior last name if applicable.<br  />Max length: 40'
          type: object
        salutation:
          description: 'Employee preferred salutation. <br  />Max length: 10'
          type: object
        ssn:
          description: >-
            Employee social security number. Leave it blank if valid social
            security number not available. <br  />Max length: 11
          type: object
        status:
          description: >-
            Add or update employee status, change reason, effective date, and
            adjusted seniority date. Note that companies that are still in
            Implementation cannot hire future employees.
          type: object
        suffix:
          description: >-
            Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max
            length: 30
          type: object
        taxSetup:
          description: >-
            Add tax form, 1099 exempt reasons and notes, and 943 agricultural
            employee information. Once the employee receives wages, this
            information cannot be updated. Add or update SUI tax state,
            retirement plan, and statutory information.
          type: object
        veteranDescription:
          description: Indicates if employee is a veteran.
          type: object
        webTime:
          description: >-
            Add or update Web Time badge number and charge rate and synchronize
            Paylocity Payroll/HR solution and Web Time employee data.
          type: object
        workAddress:
          description: >-
            Add or update employee's work address, phone numbers, and email.
            Work Location drop down field is not included.
          type: object
        workEligibility:
          description: Add or update I-9 work authorization information.
          type: object
    employeeIdResponse:
      description: The EmployeeId Response Model
      type: object
      properties:
        employeeId:
          description: The EmployeeId
          type: string
    employeeInfo:
      description: The employee info model
      type: object
      properties:
        employeeId:
          description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          type: object
        statusCode:
          description: >-
            Employee current work status. Common values are *A* (Active), *L*
            (Leave of Absence), *T* (Terminated). <br  />Max length: 20
          type: object
        statusTypeCode:
          description: 'Employee current work status type. <br  />Max length: 10'
          type: object
    localTax:
      description: The Local Tax model
      type: object
      properties:
        exemptions:
          description: Local tax exemptions value.<br  />Decimal (12,2)
          type: object
        exemptions2:
          description: Local tax exemptions 2 value.<br  />Decimal (12,2)
          type: object
        filingStatus:
          description: >-
            Employee local tax filing status. Must match specific local tax
            setup. <br  /> Max length: 50
          type: object
        residentPSD:
          description: >-
            Resident PSD (political subdivision code) applicable in PA. Must
            match Company setup.<br  /> Max length: 9
          type: object
        taxCode:
          description: 'Local tax code.<br  />Max length: 50'
          type: object
        workPSD:
          description: 'Work location PSD. Must match Company setup. <br  /> Max length: 9'
          type: object
    newAdditionalDirectDeposit:
      type: object
      properties:
        accountType:
          description: >-
            Account type. Valid values are *C* (Checking), *S* (Saving), *P*
            (Pay Card). <br   />Max length: 1<br /><small>new with Web Link 16.6
            release</small>
          type: string
        routingNumber:
          description: >-
            ABA Transit Routing Number, entered without dashes or spaces. <br 
            />Max length: 9<br /><small>new with Web Link 16.6 release</small>
          type: string
        accountNumber:
          description: >-
            Account number, entered without special characters and spaces. <br 
            />Max length: 17<br /><small>new with Web Link 16.6 release</small>
          type: string
        amountType:
          description: >-
            Amount type to indicate the context of the amount. Common values are
            *F* (FLAT), *F-* (Net Minus), *P* (Percent). <br  /> Max length:
            5<br /><small>new with Web Link 16.6 release</small>
          type: string
        amount:
          description: >-
            Amount value to be deposited to the account.<br  />Decimal (12,2)<br
            /><small>new with Web Link 16.6 release</small>
          type: number
        blockSpecial:
          description: >-
            Indicates if direct deposit should be blocked when special check
            types such as Bonus are processed.<br /><small>new with Web Link
            16.6 release</small>
          type: boolean
        nameOnAccount:
          description: >-
            Name on the bank account. Defaults to employee's name. <br  />Max
            length: 30<br /><small>new with Web Link 16.6 release</small>
          type: string
        skipPreNote:
          description: >-
            Indicates if account will not pre-note.<br /><small>new with Web
            Link 16.6 release</small>
          type: boolean
        preNoteDate:
          description: >-
            Date to end the pre-note of the account. Common formats are
            *MM-DD-CCYY, CCYY-MM-DD*.<br /><small>new with Web Link 16.6
            release</small>
          type: string
          format: date
    newBenefitClassSetup:
      required:
        - benefitClassSetupEffectiveDate
      type: object
      properties:
        benefitClass:
          description: >-
            Benefit Class code. Values are configured in Paylocity Payroll/HR
            solution Company > Setup > Benefits > Classes.<br  />Max length: 30
          type: string
        benefitClassSetupEffectiveDate:
          description: >-
            Date when Benefit Class takes effect. Common formats are MM-DD-CCYY,
            CCYY-MM-DD.
          type: string
          format: date
        benefitSalary:
          description: Salary used to configure benefits.<br  />Decimal(12,2)
          type: number
        benefitSalaryEffectiveDate:
          description: >-
            Date when Benefit Salary takes effect. Common formats are
            MM-DD-CCYY, CCYY-MM-DD.
          type: string
          format: date
        doNotApplyAdministrativePeriod:
          description: >-
            Applicable only for ACA Enhanced clients and Benefit Classes with
            ACA Employment Type of Full Time.
          type: boolean
        measureACAEligibility:
          description: >-
            Applicable only for ACA Enhanced clients and Benefit Classes with
            ACA Employment Type of Full Time.
          type: boolean
    newEmployee:
      required:
        - companyNumber
      type: object
      properties:
        title:
          description: 'Employee current job title.<br  />Max length: 50'
          type: string
        address1:
          description: 'Employee home 1st address line. <br  />Max length: 40'
          type: string
        address2:
          description: 'Employee home 2nd address line. <br  />Max length: 40'
          type: string
        adjSeniorityDate:
          description: >-
            Adjusted seniority date. Common formats are *MM-DD-CCYY,
            CCYY-MM-DD*.
          type: string
          format: date
        annualSalary:
          description: Employee annual salary. <br  />Decimal (12,2)
          type: number
        autoGenerateEmployeeId:
          description: >-
            *True* to have Paylocity Payroll/HR solution automatically assign
            the next available employee ID.<br  />*False* when providing a value
            in the employeeId field.
          type: boolean
        autoPay:
          description: >-
            If set to *True*, employee will be paid automatically using
            deafultHours.
          type: boolean
        autoPayType:
          description: >-
            Valid values are *N, D, S*. (N- employee won't automatically receive
            a salary or hours during payroll, D - employee will be automatically
            paid in defaultHours during payroll, S - employee will be
            automatically paid Salary
          type: string
        baseRate:
          description: Employee base rate, used for Hourly employees. <br  />Decimal (12,2)
          type: number
        birthDate:
          description: Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
          format: date
        city:
          description: 'Employee home city. <br  />Max length: 40'
          type: string
        clockBadge:
          description: >-
            Employee clock badge number. Deafults to employeeId. <br  />Max
            length: 10
          type: string
        companyNumber:
          description: 'Paylocity assigned company number.<br  /> Max length: 9'
          type: string
        costCenter1:
          description: >-
            Employer defined location, like *branch, division, department*, etc.
            Must match Company setup. <br  />Max length: 10
          type: string
        costCenter2:
          description: >-
            Employer defined location, like *branch, division, department*, etc.
            Must match Company setup. <br  />Max length: 10
          type: string
        costCenter3:
          description: >-
            Employer defined location, like *branch, division, department*, etc.
            Must match Company setup. <br  />Max length: 10
          type: string
        country:
          description: 'Employee country. <br  /> Max length: 30'
          type: string
        county:
          description: 'Employee county.<br  /> Max length: 30 '
          type: string
        defaultHours:
          description: >-
            Employee default hours consistently worked. If autoPayType is set to
            D, employee will be paid hourly base rate for the defaultHours. <br 
            />Decimal (12,2)
          type: number
        disability:
          description: Indicates if employee has disability status.
          type: boolean
        eligibleForRehire:
          description: Indicates if employee eligible for rehire.
          type: boolean
        employee943:
          description: Indicates if employee in agriculture or farming.
          type: boolean
        employeeId:
          description: >-
            Leave blank to have Paylocity Payroll/HR solution automatically
            assign the next available employee ID.<br  /> Max length: 10
          type: string
        employeeStatus:
          description: >-
            Employee current work status. Common values are *A* (Active), *L*
            (Leave of Absence), *T* (Terminated). <br  />Max length: 20
          type: string
        employmentType:
          description: >-
            Employee current employment type. Common values *RFT (Regular Full
            Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full
            Time), TPT (Temporary Part Time)*. <br  />Max length: 10
          type: string
        equalEmploymentOpportunityClass:
          description: >-
            Values are configured in Company > Setup > HR > EEO Classes.<br  />
            Max length: 10
          type: string
        ethnicity:
          description: 'Employee ethnicity.<br  /> Max length: 10'
          type: string
        firstName:
          description: 'Employee first name. <br  />Max length: 40'
          type: string
        fitwExempt:
          description: Indicates if employee exempt from federal income tax.
          type: boolean
        fitwExemptNotes:
          description: 'Notes for FITW exempt.<br  /> Max length: 250'
          type: string
        fitwExemptReason:
          description: >-
            Reason code for FITW exemption. Common values are *SE* (Statutory
            employee), *CR* (clergy/Religious). <br  /> Max length: 30
          type: string
        futaExempt:
          description: Indicates if employee is exempt from Federal Unemployment Tax Act.
          type: boolean
        futaExemptNotes:
          description: 'FUTA exempt note. <br  /> Max length: 250'
          type: string
        futaExemptReason:
          description: >-
            Reason code for FUTA exemption. Common values are *501* (5019c)(3)
            Organization), *IC* (Independent Contractor).<br  /> Max length: 30
          type: string
        hireDate:
          description: Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
          format: date
        homePhone:
          description: 'Employee home phone number.<br  />Max length: 12'
          type: string
        isSupervisorReviewer:
          description: Indicates if employee is a supervisor or reviewer.
          type: boolean
        lastName:
          description: 'Employee last name. <br  />Max length: 40'
          type: string
        maritalStatus:
          description: >-
            Employee marital status. Common values *D (Divorced), M (Married), S
            (Single), W (Widowed)*. <br  />Max length: 10
          type: string
        medExempt:
          description: Indicates if employee is Medicare exempt.
          type: boolean
        medExemptNotes:
          description: Notes for Medicare exempt.
          type: string
        medExemptReason:
          description: >-
            Reason code for Medicare exemption. Common values are *501*
            (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max
            length: 30
          type: string
        middleName:
          description: 'Employee middle name.<br  /> Max length: 20'
          type: string
        minimumWageExempt:
          description: Indicates if employee is exempt from minimum wage.
          type: boolean
        nickname:
          description: 'Employee preferred display name.<br  /> Max length: 20'
          type: string
        overrideTitle:
          description: >-
            Indicates override to the default Job Title. Use the title field to
            enter Employee job title.
          type: boolean
        overtimeExempt:
          description: Indicates if employee is exempt from overtime.
          type: boolean
        payFrequency:
          description: >-
            Employee current pay frequency. Common values are *A (Annual), B
            (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q
            (Quarterly), W (Weekly)*. <br  />Max length: 5
          type: string
        payGrade:
          description: 'Employee pay grade. Must match Company setup. <br  /> Max length: 10'
          type: string
        payGroup:
          description: 'Employee pay group. Must match Company setup. <br  /> Max length: 20'
          type: string
        payRateNote:
          description: 'Pay rate notes regarding employee.<br  /> Max length: 250'
          type: string
        pension:
          description: Indicates if employee is eligible for pension.
          type: boolean
        personalEmailAddress:
          description: 'Employee personal email address. <br  />Max length: 50'
          type: string
        personalMobilePhone:
          description: 'Employee personal mobile phone number. <br  />Max length: 12'
          type: string
        positionCode:
          description: >-
            Employee position code. Must match Company setup.<br  />Max length:
            20
          type: string
        primaryPayRateEffectiveDate:
          description: Primary Pay Rate EffectiveDate
          type: string
          format: date
        priorLastName:
          description: 'Prior last name if applicable.<br  />Max length: 40'
          type: string
        rateCode:
          description: >-
            Employee rate (pay type) code.  Valid values are *Hourly* or
            *Salary*. <br  />Max length: 10
          type: string
        ratePer:
          description: >-
            Employee base rate frequency used with payType Hourly. Common values
            are *Hour, Week*. Default is Hour. <br  />Max length: 10
          type: string
        reviewerCo:
          description: 'Company number of reviewer. <br  />Max length: 9'
          type: string
        reviewerId:
          description: 'Employee id of the reviewer. <br  />Max length: 10'
          type: string
        salary:
          description: >-
            Employee gross salary per pay period used with payType Salary.<br 
            />Decimal (12,2)
          type: number
        salutation:
          description: 'Employee preferred salutation. <br  />Max length: 10'
          type: string
        sex:
          description: >-
            Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
            length: 1
          type: string
        shift:
          description: 'Employee work shift.<br  />Max length: 255'
          type: string
        sitwExempt:
          description: Indicates if employee exempt from state income tax.
          type: boolean
        sitwExemptNotes:
          description: 'Notes for SITW exempt.<br  /> Max length: 250'
          type: string
        sitwExemptReason:
          description: >-
            Reason code for SITW exemption. Common values are *SE* (Statutory
            employee), *CR* (clergy/Religious). <br  /> Max length: 30
          type: string
        smoker:
          description: Indicates if employee is a smoker.
          type: boolean
        ssExempt:
          description: Indicates if employee is exempt from Social Security taxes.
          type: boolean
        ssExemptNotes:
          description: 'Notes for Socal Security exemptions.<br  /> Max length: 250'
          type: string
        ssExemptReason:
          description: >-
            Reason code for Social Security exemption. Common values are *SE*
            (Statutory employee), *CR* (clergy/Religious). <br  /> Max length:
            30
          type: string
        ssn:
          description: >-
            Employee social security number. Leave it blank if valid social
            security number not available. <br  />Max length: 11
          type: string
        state:
          description: 'Employee home state. <br  />Max length: 2'
          type: string
        statutory:
          description: Indicates if employee is statutory.
          type: boolean
        suffix:
          description: >-
            Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max
            length: 30
          type: string
        suiExempt:
          description: Indicates if employee is exempt from state unemployment insurance.
          type: boolean
        suiExemptNotes:
          description: 'Notes for SUI exempt.<br  /> Max length: 250'
          type: string
        suiExemptReason:
          description: >-
            Reason code for SUI exemption. Common values are *SE* (Statutory
            employee), *CR* (clergy/Religious). <br  /> Max length: 30
          type: string
        suiState:
          description: >-
            Employee SUI (State Unemployment Insurance) state. <br  />Max
            length: 2
          type: string
        supervisorCo:
          description: >-
            Supervisor's company number. Defaults to employee company
            number.<br  />Max length: 9
          type: string
        supervisorID:
          description: 'EmployeeId of the supervisor. <br  />Max length: 10'
          type: string
        taxDistributionCode1099R:
          description: >-
            Emplopyee 1099R distribution code. Common values are *7* (Normal
            Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1
          type: string
        taxForm:
          description: >-
            Employee tax form for reporting income. Valid values are *W2, 1099M,
            1099R*. Default is W2. <br  />Max length: 15
          type: string
        tipped:
          description: Indicates if employee receives tips.
          type: string
        unionCode:
          description: 'Employee union code. Must match Company setup. <br  />Max length: 10'
          type: string
        unionDate:
          description: >-
            Employee union affiliation effective date. Common formats are
            *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
          format: date
        unionDues:
          description: Indicates if union dues are collected.
          type: boolean
        unionInitFees:
          description: Indicates if initiations fees are collected.
          type: boolean
        unionPosition:
          description: >-
            Employee union position. Must match Company setup. <br  />Max
            length: 30
          type: string
        veteran:
          description: Indicates if employee is a veteran.
          type: boolean
        waliExempt:
          description: >-
            Indicates if employee is exempt from Washington state Liability
            Insurance.
          type: boolean
        waliExemptNotes:
          description: Notes for WALI exemption.
          type: string
        waliExemptReason:
          description: >-
            Reason code for WALI exemption. Common values are *SE* (Statutory
            employee), *CR* (clergy/Religious). <br  /> Max length: 30
          type: string
        workAddress1:
          description: 'Employee work 1st address line.<br  /> Max length: 40'
          type: string
        workAddress2:
          description: 'Employee work 2nd address line. <br  /> Max length: 40'
          type: string
        workCity:
          description: 'Employee work city.<br  /> Max length: 40'
          type: string
        workCountry:
          description: 'Employee work country.<br  /> Max length: 30'
          type: string
        workCounty:
          description: 'Employee work county.<br  /> Max length: 30'
          type: string
        workEmailAddress:
          description: 'Employee work email. <br  />Max length: 50'
          type: string
        workersComp:
          description: >-
            Employee worker compensation code. Must match Company setup.<br  />
            Max length: 10
          type: string
        workExt:
          description: 'Employee work phone extension number.<br  /> Max length: 10'
          type: string
        workLocation:
          description: 'Employee work location. <br  /> Max length: 50'
          type: string
        workMailStop:
          description: 'Employee physical mail box location.<br  /> Max length: 10'
          type: string
        workMobilePhone:
          description: 'Employee work mobile phone number.<br  /> Max length: 12'
          type: string
        workPager:
          description: 'Employee work pager number.<br  /> Max length: 20'
          type: string
        workPhone:
          description: 'Employee work phone number.<br  /> Max length: 12'
          type: string
        workState:
          description: 'Employee work state.<br  /> Max length: 2'
          type: string
        workZip:
          description: 'Employee work zip code.<br  /> Max length: 10'
          type: string
        zip:
          description: 'Employee home zip code. <br  />Max length: 10'
          type: string
        syncWebTimeRecord:
          description: If set to *True*, employee will be synced with Web Time.
          type: boolean
        newBenefitClassSetup:
          type: array
          items:
            $ref: '#/components/schemas/newBenefitClassSetup'
        newMainDirectDeposit:
          maxItems: 1
          type: array
          items:
            $ref: '#/components/schemas/newMainDirectDeposit'
        newAdditionalDirectDeposit:
          maxItems: 19
          type: array
          items:
            $ref: '#/components/schemas/newAdditionalDirectDeposit'
        newFedTax:
          type: array
          items:
            $ref: '#/components/schemas/newFedTax'
        newLocalTax:
          type: array
          items:
            $ref: '#/components/schemas/newLocalTax'
        newStateTax:
          type: array
          items:
            $ref: '#/components/schemas/newStateTax'
        newWorkEligibility:
          type: array
          items:
            $ref: '#/components/schemas/newWorkEligibility'
    newFedTax:
      type: object
      properties:
        amount:
          description: Tax amount. <br  />Decimal (12,2)
          type: number
        exemptions:
          description: Federal tax exemptions value. <br  />Decimal (12,2)
          type: number
        filingStatus:
          description: >-
            Employee federal filing status. Common values are *S* (Single), *M*
            (Married).<br  />Max length: 50
          type: string
        percentage:
          description: Tax percentage. <br  />Decimal (12,2)
          type: number
        taxCalcCode:
          description: >-
            Tax calculation code. Common values are *F* (Flat), *P*
            (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage).
            <br  />Max length: 10
          type: string
        tCode:
          description: 'Tax code. <br  /> Max length: 50'
          type: string
    newLocalTax:
      type: object
      properties:
        tCode:
          description: 'Local tax code.<br  />Max length: 50'
          type: string
        exemptions:
          description: Local tax exemptions value.<br  />Decimal (12,2)
          type: number
        exemptions2:
          description: Local tax exemptions 2 value.<br  />Decimal (12,2)
          type: number
        filingStatus:
          description: >-
            Employee local tax filing status. Must match specific local tax
            setup. <br  /> Max length: 50
          type: string
        residentPSD:
          description: >-
            Resident PSD (political subdivision code) applicable in PA. Must
            match Company setup.<br  /> Max length: 9
          type: string
        workPSD:
          description: 'Work location PSD. Must match Company setup. <br  /> Max length: 9'
          type: string
    newMainDirectDeposit:
      type: object
      properties:
        accountType:
          description: >-
            Account type. Valid values are *C* (Checking), *S* (Saving), *P*
            (Pay Card). <br   />Max length: 1<br /><small>new with Web Link 16.6
            release</small>
          type: string
        routingNumber:
          description: >-
            ABA Transit Routing Number, entered without dashes or spaces. <br 
            />Max length: 9<br /><small>new with Web Link 16.6 release</small>
          type: string
        accountNumber:
          description: >-
            Account number, entered without special characters and spaces. <br 
            />Max length: 17<br /><small>new with Web Link 16.6 release</small>
          type: string
        blockSpecial:
          description: >-
            Indicates if direct deposit should be blocked when special check
            types such as Bonus are processed.<br /><small>new with Web Link
            16.6 release</small>
          type: boolean
        nameOnAccount:
          description: >-
            Name on the bank account. Defaults to employee's name. <br  />Max
            length: 30<br /><small>new with Web Link 16.6 release</small>
          type: string
        skipPreNote:
          description: >-
            Indicates if account will not pre-note.<br /><small>new with Web
            Link 16.6 release</small>
          type: boolean
        preNoteDate:
          description: >-
            Date to end the pre-note of the account. Common formats are
            *MM-DD-CCYY, CCYY-MM-DD*.<br /><small>new with Web Link 16.6
            release</small>
          type: string
          format: date
    newStateTax:
      type: object
      properties:
        amount:
          description: 'State tax code.<br  /> Max length: 50'
          type: number
        exemptions:
          description: State tax exemptions value.<br  />Decimal (12,2)
          type: number
        exemptions2:
          description: State tax exemptions 2 value.<br  />Decimal (12,2)
          type: number
        filingStatus:
          description: >-
            Employee state tax filing status. Common values are *S* (Single),
            *M* (Married).<br  />Max length: 50
          type: string
        grossWagePercentage:
          description: Gross Wage Percentage value. <br  />Decimal (12,2)
          type: number
        percentage:
          description: State Tax percentage. <br  />Decimal (12,2)
          type: number
        primaryTax:
          description: Indicates if primary tax.
          type: boolean
        reciprocal:
          description: Indicates if state tax is reciprocal.
          type: string
        specialCheckCalc:
          description: >-
            Supplemental check calculation code. Common values are *Blocked*
            (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax
            Rate-Code). <br  />Max length: 10
          type: string
        taxCalcCode:
          description: >-
            Tax calculation code. Common values are *F* (Flat), *P*
            (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage).
            <br  />Max length: 10
          type: string
        tCode:
          description: 'State tax code.<br  /> Max length: 50'
          type: string
    newWorkEligibility:
      type: object
      properties:
        alienOrAdmissionDocumentNbr:
          description: >-
            Employee USCIS or Admission Number. <br  /> Must be 7-10 characters
            and may begin with an 'A'
          type: string
        i9DateVerified:
          description: >-
            The date Employee I9 was verified by the employer. Common formats
            are *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
          format: date
        i9Notes:
          description: 'Notes regarding employee''s I9.<br  /> Max length: 4000'
          type: string
        i9Verified:
          description: Indicates if employee I9 is verified.
          type: boolean
        sSNDateVerified:
          description: >-
            The date of employer verification of employee SSN. Common formats
            are *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
          format: date
        sSNNotes:
          description: 'Notes regarding employee''s SSN.<br  /> Max length: 4000'
          type: string
        sSNVerified:
          description: Indicates if employee SSN is verified.
          type: boolean
        visaType:
          description: >-
            Employee Visa type. Must match one of the system coded values.<br 
            /> Max length: 100
          type: string
        workAuthorization:
          description: >-
            Employee work authorization. Must match one of the system coded
            values.<br  /> Max length: 100
          type: string
        workUntil:
          description: >-
            End date of employee work eligibility. Common formats are
            *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
          format: date
        attestedDate:
          description: >-
            The date the I-9 Verification form was attested by Employer or
            Authorized representative. Common formats are *MM-DD-CCYY,
            CCYY-MM-DD*.
          type: string
          format: date
        i94AdmissionNumber:
          description: Form I-94 admission number.<br  /> Must be 11 numeric characters.
          type: string
        foreignPassportNumber:
          description: 'Foreign Passport Number.<br  /> Max length: 50'
          type: string
        countryOfIssuance:
          description: >-
            If Foreign Passport number is provided, provide its country of
            issuance. Must match Paylocity setup.<br  /> Max length: 30
          type: string
    nonPrimaryStateTax:
      description: The Non-Primary State Tax model
      type: object
      properties:
        amount:
          description: 'State tax code.<br  /> Max length: 50'
          type: object
        deductionsAmount:
          description: >-
            Box 4(b) on form W4 (year 2020 or later): Deductions amount. <br 
            />Decimal (12,2)
          type: number
        dependentsAmount:
          description: >-
            Box 3 on form W4 (year 2020 or later): Total dependents amount. <br 
            />Decimal (12,2)
          type: number
        exemptions:
          description: State tax exemptions value.<br  />Decimal (12,2)
          type: object
        exemptions2:
          description: State tax exemptions 2 value.<br  />Decimal (12,2)
          type: object
        filingStatus:
          description: >-
            Employee state tax filing status. Common values are *S* (Single),
            *M* (Married).<br  />Max length: 50
          type: object
        higherRate:
          description: >-
            Box 2(c) on form W4 (year 2020 or later): Multiple Jobs or Spouse
            Works. <br  />Boolean
          type: boolean
        otherIncomeAmount:
          description: >-
            Box 4(a) on form W4 (year 2020 or later): Other income amount. <br 
            />Decimal (12,2)
          type: number
        percentage:
          description: State Tax percentage. <br  />Decimal (12,2)
          type: object
        reciprocityCode:
          description: 'Non-primary state tax reciprocity code.<br  /> Max length: 50'
          type: object
        specialCheckCalc:
          description: >-
            Supplemental check calculation code. Common values are *Blocked*
            (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax
            Rate-Code). <br  />Max length: 10
          type: object
        taxCalculationCode:
          description: >-
            Tax calculation code. Common values are *F* (Flat), *P*
            (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage).
            <br  />Max length: 10
          type: object
        taxCode:
          description: 'State tax code.<br  /> Max length: 50'
          type: object
        w4FormYear:
          description: The state W4 form year <br  />Integer
          type: integer
    onboarding:
      required:
        - firstName
        - lastName
      type: object
      properties:
        employeeId:
          description: "(optional) The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          type: string
        address1:
          description: 'Employee home 1st address line. <br  />Max length: 40'
          type: string
        address2:
          description: 'Employee home 2nd address line. <br  />Max length: 40'
          type: string
        autoPayType:
          description: >-
            Valid values are *N, D, S. (N- employee won't automatically receive
            a salary or hours during payroll, D - employee will be automatically
            paid in defaultHours during payroll, S - employee will be
            automatically paid Salary amount during payroll)*. <br  />Max
            length: 3
          type: string
        baseRate:
          description: Employee base rate, used for Hourly employees. <br  />Decimal (12,2)
          type: number
        city:
          description: 'Employee home city. <br  />Max length: 40'
          type: string
        costCenter1:
          description: >-
            Employer defined location, like *branch, division, department, etc.*
            Must match Company setup. <br  />Max length: 10
          type: string
        costCenter2:
          description: >-
            Employer defined location, like *branch, division, department, etc.*
            Must match Company setup. <br  />Max length: 10
          type: string
        costCenter3:
          description: >-
            Employer defined location, like *branch, division, department, etc.*
            Must match Company setup. <br  />Max length: 10
          type: string
        defaultHours:
          description: >-
            Employee default hours consistently worked. If autoPayType is set to
            D, employee will be paid hourly base rate for the defaultHours. <br 
            />Decimal (12,2)
          type: number
        employeeStatus:
          description: >-
            Employee current work status. Common values are *A (Active), L
            (Leave of Absence), T (Terminated)*. <br  />Max length: 20
          type: string
        employmentType:
          description: >-
            Employee current employment type. Common values RFT *(Regular Full
            Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full
            Time), TPT (Temporary Part Time)*. <br  />Max length: 10
          type: string
        federalFilingStatus:
          description: >-
            Employee federal filing status. Common values *M (Married), S
            (Single)*. <br  />Max length: 10
          type: string
        firstName:
          description: 'Employee first name. <br  />Max length: 40'
          type: string
        sex:
          description: >-
            Employee gender. Common values *M (Male), F (Female)*. <br  />Max
            length: 1
          type: string
        hireDate:
          description: Employee hired date. Common formats are MM-DD-CCYY, CCYY-MM-DD
          type: string
        homePhone:
          description: 'Employee home phone number. <br  />Max length: 12'
          type: string
        lastName:
          description: 'Employee last name. <br  />Max length: 40'
          type: string
        maritalStatus:
          description: >-
            Employee marital status. Common values *D (Divorced), M (Married), S
            (Single), W (Widowed)*. <br  />Max length: 10
          type: string
        personalMobilePhone:
          description: 'Employee personal mobile phone number. <br  />Max length: 12'
          type: string
        payFrequency:
          description: >-
            Employee current pay frequency. Common values are *A (Annual), B
            (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q
            (Quarterly), W (Weekly)*. <br  />Max length: 5
          type: string
        personalEmailAddress:
          description: 'Employee personal email address. <br  />Max length: 50'
          type: string
        payType:
          description: >-
            Employee pay type. Valid values are *Hourly or Salary*. <br  />Max
            length: 10
          type: string
        ratePer:
          description: >-
            Employee base rate frequency used with payType Hourly. Common values
            are *Hour or Week*. Default is Hour <br  />Max length: 10
          type: string
        salary:
          description: >-
            Employee gross salary per pay period used with payType Salary. <br 
            />Decimal (12,2)
          type: number
        state:
          description: 'Employee home state. <br  />Max length: 2'
          type: string
        ssn:
          description: >-
            Employee social security number. Leave it blank if valid social
            security number not available. <br  />Max length: 11
          type: string
        stateFilingStatus:
          description: >-
            Employee state filing status. Common values are *M (Married), S
            (Single)*. <br  />Max length: 50
          type: string
        suiState:
          description: >-
            Employee SUI (State Unemployment Insurance) state. <br  />Max
            length: 2
          type: string
        taxForm:
          description: >-
            Employee tax form for reporting income. Valid values are *W2, 1099M,
            1099R*. Default is W2. <br  />Max length: 15
          type: string
        taxState:
          description: 'Employee primary tax state. <br  />Max Length: 2'
          type: string
        userName:
          description: >-
            Required. Employer assigned username to log into Onboarding.
            Duplicate usernames are not allowed. <br  />Must be between 3 and 20
            characters and cannot have special characters other than . (period)
            and _ (underscore)
          type: string
        workEmailAddress:
          description: 'Employee work email. <br  />Max length: 50'
          type: string
        zip:
          description: 'Employee home zip code. <br  />Max length: 10'
          type: string
    payStatementDetails:
      description: The pay statement details model
      type: object
      properties:
        amount:
          description: .<br />
          type: object
        checkDate:
          description: .<br />
          type: object
          format: paylocity-date
        det:
          description: .<br />
          type: object
        detCode:
          description: .<br />
          type: object
        detType:
          description: .<br />
          type: object
        eligibleCompensation:
          description: .<br />
          type: object
        hours:
          description: .<br />
          type: object
        rate:
          description: .<br />
          type: object
        transactionNumber:
          description: <br />
          type: integer
        transactionType:
          description: .<br />
          type: object
        year:
          description: .<br />
          type: integer
    payStatementSummary:
      description: The pay statement summary model
      type: object
      properties:
        autoPay:
          description: .<br />
          type: boolean
        beginDate:
          description: .<br />
          type: object
          format: paylocity-date
        checkDate:
          description: .<br />
          type: object
          format: paylocity-date
        checkNumber:
          description: .<br />
          type: integer
        directDepositAmount:
          description: .<br />
          type: object
        endDate:
          description: .<br />
          type: object
          format: paylocity-date
        grossPay:
          description: .<br />
          type: object
        hours:
          description: .<br />
          type: object
        netCheck:
          description: .<br />
          type: object
        netPay:
          description: .<br />
          type: object
        overtimeDollars:
          description: .<br />
          type: object
        overtimeHours:
          description: .<br />
          type: object
        process:
          description: .<br />
          type: integer
        regularDollars:
          description: .<br />
          type: object
        regularHours:
          description: .<br />
          type: object
        transactionNumber:
          description: <br />
          type: integer
        voucherNumber:
          description: .<br />
          type: integer
        workersCompCode:
          description: .<br />
          type: object
        year:
          description: .<br />
          type: integer
    primaryPayRate:
      type: object
      properties:
        autoPay:
          description: >-
            If set to *True*, employee will be paid automatically using
            deafultHours. 
          type: boolean
        baseRate:
          description: Employee base rate, used for Hourly employees. <br  />Decimal (12,2)
          type: number
        defaultHours:
          description: >-
            Employee default hours consistently worked. If autoPayType is set to
            D, employee will be paid hourly base rate for the defaultHours. <br 
            />Decimal (12,2)
          type: number
        effectiveDate:
          description: >-
            The date the employee’s pay rate takes effect. Common formats are
            *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
          format: date
        payFrequency:
          description: >-
            Employee current pay frequency. Common values are *A (Annual), B
            (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q
            (Quarterly), W (Weekly)*. <br  />Max length: 5
          type: string
        payGrade:
          description: 'Employee pay grade. Must match Company setup. <br  /> Max length: 10'
          type: string
        payType:
          description: >-
            Employee pay type (rate code). Valid values are *Hourly* or
            *Salary*. <br  />Max length: 10
          type: string
        ratePer:
          description: >-
            Employee base rate frequency used with payType Hourly. Common values
            are *Hour, Week*. Default is Hour. <br  />Max length: 10
          type: string
        reason:
          description: >-
            Primary Pay Rate change reason. Must match Company setup.<br  />Max
            length: 15
          type: string
        salary:
          description: >-
            Employee gross salary per pay period used with payType Salary.<br 
            />Decimal (12,2)
          type: number
    stateTax:
      description: The State Tax model
      type: object
      properties:
        amount:
          description: 'State tax code.<br  /> Max length: 50'
          type: object
        deductionsAmount:
          description: >-
            Box 4(b) on form W4 (year 2020 or later): Deductions amount. <br 
            />Decimal (12,2)
          type: number
        dependentsAmount:
          description: >-
            Box 3 on form W4 (year 2020 or later): Total dependents amount. <br 
            />Decimal (12,2)
          type: number
        exemptions:
          description: State tax exemptions value.<br  />Decimal (12,2)
          type: object
        exemptions2:
          description: State tax exemptions 2 value.<br  />Decimal (12,2)
          type: object
        filingStatus:
          description: >-
            Employee state tax filing status. Common values are *S* (Single),
            *M* (Married).<br  />Max length: 50
          type: object
        higherRate:
          description: >-
            Box 2(c) on form W4 (year 2020 or later): Multiple Jobs or Spouse
            Works. <br  />Boolean
          type: boolean
        otherIncomeAmount:
          description: >-
            Box 4(a) on form W4 (year 2020 or later): Other income amount. <br 
            />Decimal (12,2)
          type: number
        percentage:
          description: State Tax percentage. <br  />Decimal (12,2)
          type: object
        specialCheckCalc:
          description: >-
            Supplemental check calculation code. Common values are *Blocked*
            (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax
            Rate-Code). <br  />Max length: 10
          type: object
        taxCalculationCode:
          description: >-
            Tax calculation code. Common values are *F* (Flat), *P*
            (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage).
            <br  />Max length: 10
          type: object
        taxCode:
          description: 'State tax code.<br  /> Max length: 50'
          type: object
        w4FormYear:
          description: The state W4 form year <br  />Integer
          type: integer
    sensitiveData:
      description: The sensitive data model
      type: object
      properties:
        disability:
          description: Add or update disability data.
          type: object
        ethnicity:
          description: Add or update ethnicity data.
          type: object
        gender:
          description: Add or update gender data.
          type: object
        veteran:
          description: Add or update veteran data.
          type: object
    stagedEmployee:
      description: The staged employee model
      type: object
      properties:
        additionalDirectDeposit:
          description: >-
            Add up to 19 direct deposit accounts in addition to the main direct
            deposit account. IMPORTANT: A direct deposit update will remove ALL
            existing main and additional direct deposit information in WebPay
            and replace with information provided on the request. GET API will
            not return direct deposit data.
          maxItems: 4
          type: array
          items:
            description: The additional direct deposit model
            type: object
        benefitSetup:
          description: >-
            Add setup values used for employee benefits integration, insurance
            plan settings, and ACA reporting.
          maxItems: 1
          type: array
          items:
            description: The benefit setup model
            type: object
        birthDate:
          description: >-
            Employee birthdate. Common formats include *MM-DD-CCYY*,
            *CCYY-MM-DD*.
          type: object
          format: paylocity-date
        customBooleanFields:
          description: Up to 8 custom fields of boolean (checkbox) type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        customDateFields:
          description: Up to 8 custom fields of the date type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        customDropDownFields:
          description: Up to 8 custom fields of the dropdown type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        customNumberFields:
          description: Up to 8 custom fields of numeric type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        customTextFields:
          description: Up to 8 custom fields of text type value.
          maxItems: 8
          type: array
          items:
            description: ''
            type: object
        departmentPosition:
          description: >-
            Add home department cost center, position, supervisor, reviewer,
            employment type, EEO class, pay settings, and union information.
          maxItems: 1
          type: array
          items:
            description: The Department Position model
            type: object
        disabilityDescription:
          description: Indicates if employee has disability status.
          type: object
        employeeId:
          description: >-
            Leave blank to have Paylocity Payroll/HR solution automatically
            assign the next available employee ID.<br  /> Max length: 10
          type: object
        ethnicity:
          description: 'Employee ethnicity.<br  /> Max length: 10'
          type: object
        federalTax:
          description: >-
            Add federal tax amount type (taxCalculationCode), amount or
            percentage, filing status, and exemptions.
          maxItems: 1
          type: array
          items:
            description: The Federal Tax model
            type: object
        firstName:
          description: 'Employee first name. <br  />Max length: 40'
          type: object
        fitwExemptReason:
          description: >-
            Reason code for FITW exemption. Common values are *SE* (Statutory
            employee), *CR* (clergy/Religious). <br  /> Max length: 30
          type: object
        futaExemptReason:
          description: >-
            Reason code for FUTA exemption. Common values are *501* (5019c)(3)
            Organization), *IC* (Independent Contractor).<br  /> Max length: 30
          type: object
        gender:
          description: >-
            Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
            length: 1
          type: object
        homeAddress:
          description: >-
            Add employee's home address, personal phone numbers, and personal
            email.
          maxItems: 1
          type: array
          items:
            description: The address model
            type: object
        isEmployee943:
          description: Indicates if employee in agriculture or farming.
          type: object
        isSmoker:
          description: Indicates if employee is a smoker.
          type: object
        lastName:
          description: 'Employee last name. <br  />Max length: 40'
          type: object
        localTax:
          description: >-
            Add local tax code, filing status, and exemptions including PA-PSD
            taxes.
          maxItems: 5
          type: array
          items:
            description: The Local Tax model
            type: object
        mainDirectDeposit:
          description: >-
            Add the main direct deposit account. After deposits are made to any
            additional direct deposit accounts, the remaining net check is
            deposited in the main direct deposit account. IMPORTANT: A direct
            deposit update will remove ALL existing main and additional direct
            deposit information in WebPay and replace with what is provided on
            the request. GET API will not return direct deposit data.
          maxItems: 1
          type: array
          items:
            description: The Main Direct Deposit model
            type: object
        maritalStatus:
          description: >-
            Employee marital status. Common values *D (Divorced), M (Married), S
            (Single), W (Widowed)*. <br  />Max length: 10
          type: object
        medExemptReason:
          description: >-
            Reason code for Medicare exemption. Common values are *501*
            (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max
            length: 30
          type: object
        middleName:
          description: 'Employee middle name.<br  /> Max length: 20'
          type: object
        nonPrimaryStateTax:
          description: >-
            Add non-primary state tax code, amount type (taxCalculationCode),
            amount or percentage, filing status, exemptions, supplemental check
            (specialCheckCalc), and reciprocity code information.
          maxItems: 1
          type: array
          items:
            description: The Non-Primary State Tax model
            type: object
        preferredName:
          description: 'Employee preferred display name.<br  /> Max length: 20'
          type: object
        primaryPayRate:
          description: Add hourly or salary pay rate, effective date, and pay frequency.
          maxItems: 1
          type: array
          items:
            description: The Primary Pay Rate model
            type: object
        primaryStateTax:
          description: >-
            Add primary state tax code, amount type (taxCalculationCode), amount
            or percentage, filing status, exemptions, and supplemental check
            (specialCheckCalc) information. Only one primary state is allowed.
          maxItems: 1
          type: array
          items:
            description: The State Tax model
            type: object
        priorLastName:
          description: 'Prior last name if applicable.<br  />Max length: 40'
          type: object
        salutation:
          description: 'Employee preferred salutation. <br  />Max length: 10'
          type: object
        sitwExemptReason:
          description: >-
            Reason code for SITW exemption. Common values are *SE* (Statutory
            employee), *CR* (clergy/Religious). <br  /> Max length: 30
          type: object
        ssExemptReason:
          description: >-
            Reason code for Social Security exemption. Common values are *SE*
            (Statutory employee), *CR* (clergy/Religious). <br  /> Max length:
            30
          type: object
        ssn:
          description: >-
            Employee social security number. Leave it blank if valid social
            security number not available. <br  />Max length: 11
          type: object
        status:
          description: >-
            Add employee status, change reason, effective date, and adjusted
            seniority date. Note that companies that are still in Implementation
            cannot hire future employees.
          maxItems: 1
          type: array
          items:
            description: The employee status model
            type: object
        suffix:
          description: >-
            Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max
            length: 30
          type: object
        suiExemptReason:
          description: >-
            Reason code for SUI exemption. Common values are *SE* (Statutory
            employee), *CR* (clergy/Religious). <br  /> Max length: 30
          type: object
        suiState:
          description: >-
            Employee SUI (State Unemployment Insurance) state. <br  />Max
            length: 2
          type: object
        taxDistributionCode1099R:
          description: >-
            Employee 1099R distribution code. Common values are *7* (Normal
            Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1
          type: object
        taxForm:
          description: >-
            Employee tax form for reporting income. Valid values are *W2, 1099M,
            1099R*. Default is W2. <br  />Max length: 15
          type: object
        veteranDescription:
          description: Indicates if employee is a veteran.
          type: object
        webTime:
          description: >-
            Add Web Time badge number and charge rate and synchronize Paylocity
            Payroll/HR solution and Web Time employee data.
          type: object
        workAddress:
          description: >-
            Add employee's work address, phone numbers, and email. Work Location
            drop down field is not included.
          maxItems: 1
          type: array
          items:
            description: The address model
            type: object
        workEligibility:
          description: Add I-9 work authorization information.
          maxItems: 1
          type: array
          items:
            description: The Work Eligibility model
            type: object
    trackingNumberResponse:
      description: The Tracking Number Response model
      type: object
      properties:
        trackingNumber:
          description: The unique tracking number
          type: string
    updateEmployee:
      type: object
      properties:
        address1:
          description: 'Employee home 1st address line. <br  />Max length: 40'
          type: string
        address2:
          description: 'Employee home 2nd address line. <br  />Max length: 40'
          type: string
        adjSeniorityDate:
          description: >-
            Adjusted seniority date. Common formats are *MM-DD-CCYY,
            CCYY-MM-DD*.
          type: string
          format: date
        birthDate:
          description: Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
          format: date
        city:
          description: 'Employee home city. <br  />Max length: 40'
          type: string
        companyNumber:
          description: 'Paylocity assigned company number. <br  /> Max length: 9'
          type: string
        country:
          description: 'Employee country. <br  /> Max length: 30'
          type: string
        county:
          description: 'Employee county.<br  /> Max length: 30'
          type: string
        disability:
          description: Indicates if employee has disability status.
          type: string
        eligibleForRehire:
          description: Indicates if employee eligible for rehire.
          type: boolean
        employeeId:
          description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          type: string
        employeeStatus:
          description: >-
            Employee current work status. Common values are *A* (Active), *L*
            (Leave of Absence), *T* (Terminated). <br  />Max length: 20
          type: string
        empStatusChangeReason:
          description: >-
            Employee status change reason. Must match Company setup.<br  />Max
            length: 15
          type: string
        empStatusEffectiveDate:
          description: >-
            Effective date of employee status change, can be in the future.
            Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
          type: string
        ethnicity:
          description: 'Employee ethnicity.<br  /> Max length: 10'
          type: string
        firstName:
          description: 'Employee first name. <br  />Max length: 40'
          type: string
        homePhone:
          description: 'Employee home phone number.  <br  />Max length: 12'
          type: string
        lastName:
          description: 'Employee last name. <br  />Max length: 40'
          type: string
        maritalStatus:
          description: >-
            Employee marital status. Common values *D (Divorced), M (Married), S
            (Single), W (Widowed)*. <br  />Max length: 10
          type: string
        middleName:
          description: 'Employee middle name.<br  /> Max length: 20'
          type: string
        nickname:
          description: 'Employee preferred display name. <br  /> Max length: 20'
          type: string
        pager:
          description: 'Employee work pager number.<br  /> Max length: 20'
          type: string
        personalEmailAddress:
          description: 'Employee personal email address. <br  />Max length: 50'
          type: string
        personalMobilePhone:
          description: 'Employee personal mobile phone number. <br  />Max length: 12'
          type: string
        priorLastName:
          description: 'Prior last name if applicable.<br  />Max length: 40'
          type: string
        salutation:
          description: 'Employee preferred salutation. <br  />Max length: 10'
          type: string
        sex:
          description: >-
            Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
            length: 1
          type: string
        smoker:
          description: Indicates if employee is a smoker.
          type: boolean
        ssn:
          description: >-
            Employee social security number. Leave it blank if valid social
            security number not available. <br  />Max length: 11
          type: string
        state:
          description: 'Employee home state. <br  />Max length: 2'
          type: string
        suffix:
          description: >-
            Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max
            length: 30
          type: string
        suiExempt:
          description: Indicates if employee is exempt from state unemployment insurance.
          type: boolean
        suiExemptNotes:
          description: 'Notes for SUI exempt.<br  /> Max length: 250'
          type: string
        suiExemptReason:
          description: >-
            Reason code for SUI exemption. Common values are *SE* (Statutory
            employee), *CR* (Clergy/Religious). <br  /> Max length: 30
          type: string
        veteran:
          description: Indicates if employee is a veteran.
          type: string
        workAddress1:
          description: 'Employee work 1st address line.<br  /> Max length: 40'
          type: string
        workAddress2:
          description: 'Employee work 2nd address line. <br  /> Max length: 40'
          type: string
        workCity:
          description: 'Employee work city.<br  /> Max length: 40'
          type: string
        workCountry:
          description: 'Employee work country.<br  /> Max length: 30'
          type: string
        workCounty:
          description: 'Employee work county.<br  /> Max length: 30'
          type: string
        workEmailAddress:
          description: 'Employee work email. <br  />Max length: 50'
          type: string
        workMailStop:
          description: 'Employee physical mail box location.<br  /> Max length: 10'
          type: string
        workMobilePhone:
          description: 'Employee work mobile phone number.<br  /> Max length: 12'
          type: string
        workPager:
          description: 'Employee work pager number.<br  /> Max length: 20'
          type: string
        workPhone:
          description: 'Employee work phone number.<br  /> Max length: 12'
          type: string
        workPhoneExt:
          description: 'Employee work phone extension number.<br  /> Max length: 10'
          type: string
        workState:
          description: 'Employee work state.<br  /> Max length: 2'
          type: string
        workZip:
          description: 'Employee work zip code.<br  /> Max length: 10'
          type: string
        zip:
          description: 'Employee home zip code. <br  />Max length: 10'
          type: string
        benefitSetup:
          type: array
          items:
            $ref: '#/components/schemas/benefitSetup'
        departmentPosition:
          type: array
          items:
            $ref: '#/components/schemas/departmentPosition'
        primaryPayRate:
          type: array
          items:
            $ref: '#/components/schemas/primaryPayRate'
        webTime:
          type: array
          items:
            $ref: '#/components/schemas/webTime'
    webTime:
      type: object
      properties:
        syncWebTimeRecord:
          description: UpdateEmployeePreferences.SyncWebTimeRecord
          type: boolean
    EmployeeV1CreateNewEmployeeRecordRequest:
      type: object
      properties:
        newEmployee:
          $ref: '#/components/schemas/newEmployee'
    EmployeeV1UpdateEmployeeDataToPaylocityRequest:
      type: object
      properties:
        updateEmployee:
          $ref: '#/components/schemas/updateEmployee'
    DeductionAddOrUpdateDeductionRequest:
      type: object
      properties:
        deduction:
          $ref: '#/components/schemas/addUpdateDeduction'
    PayrollHrGetWorkLocationsByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/WorkLocationDto'
    PayrollHrListRateCodesByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/RateCodeDto'
    PayrollHrGetCostCenterListByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/CostCenterLevelModelDto'
    PayrollHrGetEarningCodesByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/EarningCodesDto'
    PayrollHrGetDeductionCodesByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/DeductionCodeDto'
    PayrollHrListPayFrequenciesByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/PayFrequencyDto'
    PayrollHrGetTaxCodesByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/TaxCodeDto'
    PayrollHrListWorkerCompensationCodesByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/WorkersCompensationCodeDto'
    PayrollHrListPositionCodesByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/PositionsDto'
    PayrollHrGetPayGradesByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/PayGradeDto'
    JobCodesListByCompanyIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/JobCodeDto'
    DocumentsListCompanyDocumentsResponse:
      type: array
      items:
        $ref: '#/components/schemas/CompanyDocumentModel'
    DocumentsListCompanyDocuments200Response:
      type: array
      items:
        $ref: '#/components/schemas/CompanyDocumentModel'
    DocumentsListCompanyDocuments400Response:
      type: array
      items:
        $ref: '#/components/schemas/Error400Model'
    DocumentsListCompanyDocuments500Response:
      type: array
      items:
        $ref: '#/components/schemas/Error500Model'
    DocumentsListEmployeeFilteredDocumentsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeDocumentModel'
    DocumentsListEmployeeFilteredDocuments200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeDocumentModel'
    DocumentsListEmployeeFilteredDocuments400Response:
      type: array
      items:
        $ref: '#/components/schemas/Error400Model'
    DocumentsListEmployeeFilteredDocuments500Response:
      type: array
      items:
        $ref: '#/components/schemas/Error500Model'
    DocumentsCreateDocumentDownloadUrlResponse:
      type: array
      items:
        $ref: '#/components/schemas/Error400Model'
    DocumentsCreateDocumentDownloadUrl400Response:
      type: array
      items:
        $ref: '#/components/schemas/Error400Model'
    DocumentsCreateDocumentDownloadUrl500Response:
      type: array
      items:
        $ref: '#/components/schemas/Error500Model'
    DeductionsListEmployeeDeductionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/GetDeductionDto'
    DeductionsGetDetailResponse:
      type: array
      items:
        $ref: '#/components/schemas/GetDeductionDto'
    EarningsGetEmployeeEarningsResponse:
      type: array
      items:
        $ref: '#/components/schemas/GetEarningDto'
    EarningsGetRecurringDetailResponse:
      type: array
      items:
        $ref: '#/components/schemas/GetEarningDto'
    RetirementContributionsGetPlanChecksByDateResponse:
      type: array
      items:
        $ref: '#/components/schemas/RetirementContribution'
    DeductionGetAllDeductionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/deduction'
    LocalTaxGetAllTaxesForEmployeeResponse:
      type: array
      items:
        $ref: '#/components/schemas/localTax'
    AdditionalRatesUpdateEmployeeAdditionalRatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    AdditionalRatesUpdateEmployeeAdditionalRates500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    ClientCredentialsObtainNewClientSecretResponse:
      type: array
      items:
        $ref: '#/components/schemas/clientCredentialsResponse'
    ClientCredentialsObtainNewClientSecret400Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    ClientCredentialsObtainNewClientSecret500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    CompanyCodesGetAllByResourceResponse:
      type: array
      items:
        $ref: '#/components/schemas/companyCodes'
    CompanyCodesGetAllByResource404Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    CompanyCodesGetAllByResource500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    CompanySpecificSchemaGetOpenApiDocResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    CompanySpecificSchemaGetOpenApiDoc500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    CustomFieldsGetAllByCategoryResponse:
      type: array
      items:
        $ref: '#/components/schemas/customFieldDefinition'
    CustomFieldsGetAllByCategory404Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    CustomFieldsGetAllByCategory500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    DirectDepositGetAllDirectDepositsResponse:
      type: array
      items:
        $ref: '#/components/schemas/directDeposit'
    DirectDepositGetAllDirectDeposits404Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    DirectDepositGetAllDirectDeposits500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EarningsGetAllResponse:
      type: array
      items:
        $ref: '#/components/schemas/earning'
    EarningsGetAll500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EarningsAddOrUpdateEarningResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EarningsAddOrUpdateEarning500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EarningsDeleteByCodeAndStartResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EarningsDeleteByCodeAndStart500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EarningsGetByCodeAndStartResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EarningsGetByEarningCodeResponse:
      type: array
      items:
        $ref: '#/components/schemas/earning'
    EarningsGetByEarningCode500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmergencyContactsAddOrUpdateResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmergencyContactsAddOrUpdate500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeBenefitSetupAddOrUpdateBenefitSetupResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeBenefitSetupAddOrUpdateBenefitSetup500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeStagingAddNewEmployeeToWebLinkResponse:
      type: array
      items:
        $ref: '#/components/schemas/trackingNumberResponse'
    EmployeeStagingAddNewEmployeeToWebLink400Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeStagingAddNewEmployeeToWebLink500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeGetAllEmployeesResponse:
      type: array
      items:
        $ref: '#/components/schemas/employeeInfo'
    EmployeeGetAllEmployees404Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeGetAllEmployees500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeAddToPaylocityResponse:
      type: array
      items:
        $ref: '#/components/schemas/employeeIdResponse'
    EmployeeAddToPaylocity400Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeAddToPaylocity500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeGetEmployeeDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/employee'
    EmployeeGetEmployeeData404Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeGetEmployeeData500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeUpdateEmployeeDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    EmployeeUpdateEmployeeData500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    LocalTaxesGetAllForEmployeeResponse:
      type: array
      items:
        $ref: '#/components/schemas/localTax'
    LocalTaxesGetAllForEmployee500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    LocalTaxesAddNewTaxResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    LocalTaxesAddNewTax500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    LocalTaxesDeleteByTaxCodeResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    LocalTaxesDeleteByTaxCode500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    LocalTaxesGetByTaxCodeResponse:
      type: array
      items:
        $ref: '#/components/schemas/localTax'
    LocalTaxesGetByTaxCode500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    NonPrimaryStateTaxAddOrUpdateStateTaxResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    NonPrimaryStateTaxAddOrUpdateStateTax500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PayStatementsGetDetailsByYearAndCheckDateResponse:
      type: array
      items:
        $ref: '#/components/schemas/payStatementDetails'
    PayStatementsGetDetailsByYearAndCheckDate404Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PayStatementsGetDetailsByYearAndCheckDate500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PayStatementsGetDetailsByYearResponse:
      type: array
      items:
        $ref: '#/components/schemas/payStatementDetails'
    PayStatementsGetDetailsByYear404Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PayStatementsGetDetailsByYear500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PayStatementsGetSummaryDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/payStatementSummary'
    PayStatementsGetSummaryData404Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PayStatementsGetSummaryData500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PayStatementsGetSummaryByYearResponse:
      type: array
      items:
        $ref: '#/components/schemas/payStatementSummary'
    PayStatementsGetSummaryByYear404Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PayStatementsGetSummaryByYear500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PrimaryStateTaxAddOrUpdateTaxResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    PrimaryStateTaxAddOrUpdateTax500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    SensitiveDataGetEmployeeSensitiveDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/sensitiveData'
    SensitiveDataGetEmployeeSensitiveData400Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    SensitiveDataGetEmployeeSensitiveData500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
    SensitiveDataAddOrUpdateEmployeeSensitiveDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/error'
    SensitiveDataAddOrUpdateEmployeeSensitiveData500Response:
      type: array
      items:
        $ref: '#/components/schemas/error'
  securitySchemes:
    Bearer:
      description: CC JWT Authorization header using the bearer scheme
      type: apiKey
      name: Authorization
      in: header
    JWTAuthorization:
      description: Paste JWT here.
      type: http
      scheme: bearer
      bearerFormat: JWT
    paylocity_auth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api.paylocity.com/IdentityServer/connect/token
          scopes:
            WebLinkAPI: Web Link Api
security:
  - Bearer: []
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 65f06151bd97e1001f425c39
x-original-swagger-version: '2.0'
