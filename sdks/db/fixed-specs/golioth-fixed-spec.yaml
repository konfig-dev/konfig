openapi: 3.0.0
info:
  title: golioth API
  description: >-
    Built IoT your way without the stress. Securely connect your MCU then
    capture and route sensor data anywhere with the Golioth SDK. Build secure,
    scalable, and innovative IoT in a fraction of the time.
  version: '1.0'
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: https://api.golioth.io
tags:
  - name: Integrations
  - name: LightDB
  - name: Access
  - name: Settings
  - name: Artifacts
  - name: Organizations
  - name: Projects
  - name: Blueprints
  - name: Devices
  - name: Releases
  - name: Tags
  - name: Credentials
  - name: LightDB Stream
  - name: API Keys
  - name: Certificates
  - name: Billing
  - name: Boards
  - name: Logs
  - name: Provisioning
  - name: Usage
  - name: Remote Procedure Call
  - name: Firmware
paths:
  /v1/artifacts:
    post:
      tags:
        - Artifacts
      operationId: Artifacts_Create
      requestBody:
        description: ' (streaming inputs)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothCreateArtifactRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateArtifactResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/billing/webhook:
    post:
      tags:
        - Billing
      operationId: Billing_PaymentWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingPaymentWebhookRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingPaymentWebhookResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/boards:
    get:
      tags:
        - Boards
      operationId: Boards_List
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: string
        - name: platform
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListBoardsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/boards/{id}:
    get:
      tags:
        - Boards
      operationId: Boards_Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetBoardsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/integration-types:
    get:
      tags:
        - Integrations
      operationId: Integrations_ListIntegrationTypes
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListIntegrationTypesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/organizations:
    get:
      tags:
        - Organizations
      operationId: Organizations_List
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListOrganizationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Organizations
      operationId: Organizations_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothCreateOrganizationRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateOrganizationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/organizations/{organizationId}:
    get:
      tags:
        - Organizations
      operationId: Organizations_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetOrganizationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Organizations
      operationId: Organizations_Update
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: updateMask
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothOrganizationUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateOrganizationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Organizations
      operationId: Organizations_Update2
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothOrganizationUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateOrganizationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/organizations/{organizationId}/checkout_sessions:
    post:
      tags:
        - Billing
      operationId: Billing_CreateCheckoutSession
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingCreateCheckoutSessionBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateCheckoutSessionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/organizations/{organizationId}/customer_portal_sessions:
    post:
      tags:
        - Billing
      operationId: Billing_CreateCustomerPortalSession
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingCreateCustomerPortalSessionBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateCustomerPortalResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/organizations/{organizationId}/quotas:
    get:
      tags:
        - Organizations
      operationId: Organizations_GetQuota
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetOrganizationQuotaResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/organizations/{organizationId}/usage:
    get:
      tags:
        - Usage
      operationId: Usage_List
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListUsageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects:
    get:
      tags:
        - Projects
      operationId: Projects_List
      parameters:
        - name: organizationId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListProjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Projects
      operationId: Projects_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothCreateProjectRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateProjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}:
    get:
      tags:
        - Projects
      operationId: Projects_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetProjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - Projects
      operationId: Projects_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Projects
      operationId: Projects_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: updateMask
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothProjectUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateProjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Projects
      operationId: Projects_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothProjectUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateProjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/apikeys:
    get:
      tags:
        - API Keys
      operationId: APIKeys_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListAPIKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - API Keys
      operationId: APIKeys_Create
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothAPIKeysCreateBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateAPIKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/apikeys/{apikeyId}:
    delete:
      tags:
        - API Keys
      operationId: APIKeys_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: apikeyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - API Keys
      operationId: APIKeys_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: apikeyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothAPIKeyUpdate'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateAPIKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/artifacts:
    get:
      tags:
        - Artifacts
      operationId: Artifacts_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: version
          in: query
          required: false
          schema:
            type: string
        - name: blueprintId
          in: query
          required: false
          schema:
            type: string
        - name: package
          in: query
          required: false
          schema:
            type: string
        - name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListArtifactResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/artifacts/{artifactId}:
    get:
      tags:
        - Artifacts
      operationId: Artifacts_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: artifactId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetArtifactResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - Artifacts
      operationId: Artifacts_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: artifactId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactsDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Artifacts
      operationId: Artifacts_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: artifactId
          in: path
          required: true
          schema:
            type: string
        - name: updateMask
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothArtifactUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateArtifactResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Artifacts
      operationId: Artifacts_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: artifactId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothArtifactUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateArtifactResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/blueprints:
    get:
      tags:
        - Blueprints
      operationId: Blueprints_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: blueprintName
          in: query
          required: false
          schema:
            type: string
        - name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: boardId
          in: query
          required: false
          schema:
            type: string
        - name: platform
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListBlueprintResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Blueprints
      operationId: Blueprints_Create
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothBlueprintsCreateBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateBlueprintResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/blueprints/{blueprintId}:
    get:
      tags:
        - Blueprints
      operationId: Blueprints_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: blueprintId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetBlueprintResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - Blueprints
      operationId: Blueprints_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: blueprintId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintsDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Blueprints
      operationId: Blueprints_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: blueprintId
          in: path
          required: true
          schema:
            type: string
        - name: updateMask
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothBlueprintUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateBlueprintResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Blueprints
      operationId: Blueprints_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: blueprintId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothBlueprintUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateBlueprintResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/certificates:
    get:
      tags:
        - Certificates
      operationId: Certificates_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            TODO: filter by: device_id, enabled/disabled, start/end expiration
            date, cert type, may increase filters in the future
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListCertificateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Certificates
      operationId: Certificates_Create
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothCertificatesCreateBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateCertificateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/certificates/{certificateId}:
    get:
      tags:
        - Certificates
      operationId: Certificates_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetCertificateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - Certificates
      operationId: Certificates_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificatesDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/credentials:
    post:
      tags:
        - Credentials
      operationId: Credentials_Create2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothCredentialsCreateBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateCredentialResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/credentials/{credentialId}:
    delete:
      tags:
        - Credentials
      operationId: Credentials_Delete2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: credentialId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsDelete2Response'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/device-activity-logs:
    get:
      tags:
        - Logs
      operationId: Logs_GetLatestDeviceActivityLogs
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/goliothGetLatestDeviceActivityLogsResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices:
    get:
      tags:
        - Devices
      operationId: Devices_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: deviceName
          in: query
          required: false
          schema:
            type: string
        - name: hardwareId
          in: query
          required: false
          schema:
            type: string
        - name: tags
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: blueprintId
          in: query
          required: false
          schema:
            type: string
        - name: statePath
          in: query
          required: false
          schema:
            type: string
        - name: streamPath
          in: query
          required: false
          schema:
            type: string
        - name: updatePath
          in: query
          required: false
          schema:
            type: string
        - name: term
          in: query
          required: false
          schema:
            type: string
        - name: enabled
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListDeviceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Devices
      operationId: Devices_Create
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothDevicesCreateBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateDeviceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices/{deviceId}:
    get:
      tags:
        - Devices
      operationId: Devices_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetDeviceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - Devices
      operationId: Devices_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicesDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Devices
      operationId: Devices_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: updateMask
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothDeviceUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateDeviceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Devices
      operationId: Devices_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothDeviceUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateDeviceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices/{deviceId}/credentials:
    get:
      tags:
        - Credentials
      operationId: Credentials_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListCredentialResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Credentials
      operationId: Credentials_Create
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothCredentialsCreateBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateCredentialResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices/{deviceId}/credentials/{credentialId}:
    delete:
      tags:
        - Credentials
      operationId: Credentials_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: credentialId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices/{deviceId}/data/{path}:
    get:
      tags:
        - LightDB
      operationId: DeviceState_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetDeviceStateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - LightDB
      operationId: DeviceState_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStateDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - LightDB
      operationId: DeviceState_Update3
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      requestBody:
        $ref: '#/components/requestBodies/DeviceState_Update3Value'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateDeviceStateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - LightDB
      operationId: DeviceState_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      requestBody:
        $ref: '#/components/requestBodies/DeviceState_Update3Value'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateDeviceStateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - LightDB
      operationId: DeviceState_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      requestBody:
        $ref: '#/components/requestBodies/DeviceState_Update3Value'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateDeviceStateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices/{deviceId}/provisioning:
    post:
      tags:
        - Provisioning
      operationId: Provisioning_ProvisionDevice2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ProvisioningProvisionDeviceBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothProvisionDeviceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices/{deviceId}/rpc:
    post:
      tags:
        - Remote Procedure Call
      operationId: DeviceRemoteProcedureCall_RemoteProcedureCall
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/DeviceRemoteProcedureCallRemoteProcedureCallBody
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothRemoteProcedureCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices/{deviceId}/settings:
    get:
      tags:
        - Settings
      operationId: Settings_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetSettingResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices/{deviceId}/stream:
    get:
      tags:
        - LightDB Stream
      operationId: DeviceStream_GetDeviceStream
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: encodedQuery
          in: query
          required: false
          schema:
            type: string
        - name: query.timeBucket
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetDeviceStreamResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - LightDB Stream
      operationId: DeviceStream_GetDeviceStream2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceStreamGetDeviceStreamBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetDeviceStreamResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devices/{deviceId}/stream/latest/{path}:
    get:
      tags:
        - LightDB Stream
      operationId: DeviceStream_GetLatestStream
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetDeviceStateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/devicesByTag/{tag}/data/{path}:
    delete:
      tags:
        - LightDB
      operationId: DeviceState_DeleteByTag
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStateDeleteByTagResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - LightDB
      operationId: DeviceState_UpdateByTag3
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      requestBody:
        $ref: '#/components/requestBodies/DeviceState_Update3Value'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateDeviceStateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - LightDB
      operationId: DeviceState_UpdateByTag
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      requestBody:
        $ref: '#/components/requestBodies/DeviceState_Update3Value'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateDeviceStateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - LightDB
      operationId: DeviceState_UpdateByTag2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .+
      requestBody:
        $ref: '#/components/requestBodies/DeviceState_Update3Value'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateDeviceStateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/firmware/logs:
    get:
      tags:
        - Firmware
      operationId: Firmwares_Logs
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: version
          in: query
          required: false
          schema:
            type: string
        - name: target
          in: query
          required: false
          schema:
            type: string
        - name: state
          in: query
          required: false
          schema:
            type: string
        - name: reason
          in: query
          required: false
          schema:
            type: string
        - name: deviceId
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListFirmwareLogsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/integrations:
    get:
      tags:
        - Integrations
      operationId: Integrations_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListIntegrationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Integrations
      operationId: Integrations_Create
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothIntegrationsCreateBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateIntegrationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/integrations/validate:
    post:
      tags:
        - Integrations
      operationId: Integrations_Validate
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationsValidateBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsValidateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/integrations/{integrationId}:
    get:
      tags:
        - Integrations
      operationId: Integrations_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetIntegrationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - Integrations
      operationId: Integrations_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Integrations
      operationId: Integrations_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
        - name: updateMask
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothIntegrationUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateIntegrationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Integrations
      operationId: Integrations_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothIntegrationUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateIntegrationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/integrations/{integrationId}/test:
    post:
      tags:
        - Integrations
      operationId: Integrations_Test
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationsTestBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothTestIntegrationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/logs:
    get:
      tags:
        - Logs
      operationId: Logs_GetLogs
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: query
          required: false
          schema:
            type: string
        - name: start
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: module
          in: query
          required: false
          schema:
            type: string
        - name: level
          in: query
          required: false
          schema:
            type: string
            enum:
              - NONE
              - DEBUG
              - INFO
              - WARN
              - ERROR
            default: NONE
        - name: term
          in: query
          required: false
          schema:
            type: string
        - name: tags
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetLogsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/permissions:
    get:
      tags:
        - Access
      operationId: Access_ListPermissions
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListPermissionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/policies:
    get:
      tags:
        - Access
      operationId: Access_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: userId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListPolicyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/policies/{policyId}:
    get:
      tags:
        - Access
      operationId: Access_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetPolicyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - Access
      operationId: Access_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Access
      operationId: Access_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: updateMask
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothPolicyUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdatePolicyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Access
      operationId: Access_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothPolicyUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdatePolicyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/provisioning:
    post:
      tags:
        - Provisioning
      operationId: Provisioning_ProvisionDevice
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ProvisioningProvisionDeviceBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothProvisionDeviceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/releases:
    get:
      tags:
        - Releases
      operationId: Releases_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: releaseTags
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: deviceTags
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: rollout
          in: query
          required: false
          schema:
            type: boolean
        - name: blueprintId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListReleaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Releases
      operationId: Releases_Create
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothReleasesCreateBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateReleaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/releases/{releaseId}:
    get:
      tags:
        - Releases
      operationId: Releases_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: releaseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetReleaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - Releases
      operationId: Releases_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: releaseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleasesDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Releases
      operationId: Releases_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: releaseId
          in: path
          required: true
          schema:
            type: string
        - name: updateMask
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothReleaseUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateReleaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Releases
      operationId: Releases_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: releaseId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothReleaseUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateReleaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/settings:
    get:
      tags:
        - Settings
      operationId: Settings_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: blueprintId
          in: query
          required: false
          schema:
            type: string
        - name: deviceId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListSettingResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Settings
      operationId: Settings_Create
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothSettingsCreateBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateSettingResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/settings/{settingId}:
    delete:
      tags:
        - Settings
      operationId: Settings_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: settingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Settings
      operationId: Settings_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: settingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothSettingUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateSettingResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Settings
      operationId: Settings_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: settingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothSettingUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateSettingResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/stream:
    get:
      tags:
        - LightDB Stream
      operationId: DeviceStream_GetProjectStream
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: encodedQuery
          in: query
          required: false
          schema:
            type: string
        - name: query.timeBucket
          in: query
          required: false
          schema:
            type: string
        - name: deviceId
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: tags
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetProjectStreamResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - LightDB Stream
      operationId: DeviceStream_GetProjectStream2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceStreamGetProjectStreamBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetProjectStreamResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/tags:
    get:
      tags:
        - Tags
      operationId: Tags_List
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: tagName
          in: query
          required: false
          schema:
            type: string
        - name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListTagResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
        - Tags
      operationId: Tags_Create
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goliothTagsCreateBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothCreateTagResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/tags/{tagId}:
    get:
      tags:
        - Tags
      operationId: Tags_Get
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: tagId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothGetTagResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    delete:
      tags:
        - Tags
      operationId: Tags_Delete
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: tagId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsDeleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    put:
      tags:
        - Tags
      operationId: Tags_Update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: tagId
          in: path
          required: true
          schema:
            type: string
        - name: updateMask
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothTagUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateTagResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    patch:
      tags:
        - Tags
      operationId: Tags_Update2
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: tagId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/goliothTagUpdate'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothUpdateTagResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/users:
    get:
      tags:
        - Access
      operationId: Access_ListUsers
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/projects/{projectId}/users/invitation:
    post:
      tags:
        - Access
      operationId: Access_InviteUser
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessInviteUserBody'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothInviteUserResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/roles:
    get:
      tags:
        - Access
      operationId: Access_ListRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goliothListRoleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/settings-data-types:
    get:
      tags:
        - Settings
      operationId: Settings_ListAllowedSettingsDataTypes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/goliothListAllowedSettingsDataTypesResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
components:
  requestBodies:
    goliothDeviceUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothDeviceUpdate'
      required: true
    goliothReleaseUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothReleaseUpdate'
      required: true
    goliothArtifactUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothArtifactUpdate'
      required: true
    ProvisioningProvisionDeviceBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvisioningProvisionDeviceBody'
      required: true
    goliothIntegrationUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothIntegrationUpdate'
      required: true
    goliothPolicyUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothPolicyUpdate'
      required: true
    goliothBlueprintUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothBlueprintUpdate'
      required: true
    goliothOrganizationUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothOrganizationUpdate'
      required: true
    goliothProjectUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothProjectUpdate'
      required: true
    goliothCredentialsCreateBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothCredentialsCreateBody'
      required: true
    DeviceState_Update3Value:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceStateUpdate2Request'
      required: true
    goliothSettingUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothSettingUpdate'
      required: true
    goliothTagUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/goliothTagUpdate'
      required: true
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
    API_Key:
      type: apiKey
      name: x-api-key
      in: header
  schemas:
    AccessInviteUserBody:
      type: object
      properties:
        email:
          type: string
    BillingCreateCheckoutSessionBody:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/goliothSubscriptionItem'
        callbackPath:
          type: string
    BillingCreateCustomerPortalSessionBody:
      type: object
      properties:
        callbackPath:
          type: string
    DeviceRemoteProcedureCallRemoteProcedureCallBody:
      type: object
      properties:
        method:
          type: string
        params:
          type: array
          items: {}
        timeout:
          type: integer
          format: int64
    DeviceStreamGetDeviceStreamBody:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        interval:
          type: string
        encodedQuery:
          type: string
        query:
          $ref: '#/components/schemas/goliothDeviceStreamQuery'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
    DeviceStreamGetProjectStreamBody:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        interval:
          type: string
        encodedQuery:
          type: string
        query:
          $ref: '#/components/schemas/goliothDeviceStreamQuery'
        deviceId:
          type: array
          items:
            type: string
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
    IntegrationsTestBody:
      type: object
      properties:
        data:
          type: object
    IntegrationsValidateBody:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        configuration:
          type: object
        enabled:
          type: boolean
    ProvisioningProvisionDeviceBody:
      type: object
      properties:
        hardwareIds:
          type: array
          items:
            type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/goliothCredentialType'
        identity:
          type: string
        preSharedKey:
          type: string
        tagIds:
          type: array
          items:
            type: string
        blueprintId:
          title: |-
            string publicKey
            string encryption
          type: string
    comgoliothTag:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    goliothAPIKey:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        createdAt:
          type: string
          format: date-time
        type:
          $ref: '#/components/schemas/goliothAPIKeyType'
        secret:
          type: string
        policyId:
          type: string
        roles:
          type: array
          items:
            type: string
        keyTags:
          type: array
          items:
            type: string
    goliothAPIKeyType:
      type: string
      enum:
        - API_KEY
        - JWT_KEY
      default: API_KEY
    goliothAPIKeyUpdate:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/goliothAPIKeyType'
        keyTags:
          type: array
          items:
            type: string
    goliothAPIKeysCreateBody:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/goliothAPIKeyType'
        keyTags:
          type: array
          items:
            type: string
    goliothArtifact:
      type: object
      properties:
        version:
          type: string
        id:
          type: string
        package:
          type: string
        blueprintId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        binaryInfo:
          type: object
        size:
          type: string
          format: uint64
    goliothArtifactUpdate:
      type: object
    goliothBlueprint:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        boardId:
          type: string
        platform:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    goliothBlueprintUpdate:
      type: object
      properties:
        name:
          type: string
        boardId:
          type: string
        platform:
          type: string
    goliothBlueprintsCreateBody:
      type: object
      properties:
        name:
          type: string
        boardId:
          type: string
        platform:
          type: string
    goliothBoard:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        arch:
          type: string
        platforms:
          type: array
          items:
            type: string
    goliothCertificate:
      type: object
      properties:
        id:
          type: string
        projectId:
          type: string
        enabled:
          type: boolean
        certType:
          type: string
        certificateContent:
          $ref: '#/components/schemas/goliothCertificateContent'
        createdAt:
          type: string
          format: date-time
    goliothCertificateContent:
      type: object
      properties:
        version:
          type: integer
          format: int64
        signature:
          type: string
          format: byte
        signatureAlgorithm:
          type: string
        publicKeyAlgorithm:
          type: string
        publicKey:
          type: string
          format: byte
        serialNumber:
          type: string
        issuer:
          type: string
        subject:
          type: string
        notBefore:
          type: string
          format: date-time
        notAfter:
          type: string
          format: date-time
        keyUsages:
          type: array
          items:
            type: string
    goliothCertificatesCreateBody:
      type: object
      properties:
        certFile:
          type: string
          format: byte
        certType:
          type: string
    goliothConditionalMap:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
    goliothCreateAPIKeyResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothAPIKey'
    goliothCreateArtifactRequest:
      type: object
      properties:
        version:
          type: string
        projectId:
          type: string
        content:
          type: string
          format: byte
        blueprintId:
          type: string
        package:
          type: string
    goliothCreateArtifactResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothArtifact'
    goliothCreateBlueprintResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothBlueprint'
    goliothCreateCertificateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothCertificate'
    goliothCreateCheckoutSessionResponse:
      type: object
      properties:
        url:
          type: string
    goliothCreateCredentialResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothCredential'
    goliothCreateCustomerPortalResponse:
      type: object
      properties:
        url:
          type: string
    goliothCreateDeviceResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothDevice'
    goliothCreateIntegrationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothIntegration'
    goliothCreateOrganizationRequest:
      type: object
      properties:
        name:
          type: string
        website:
          type: string
    goliothCreateOrganizationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothOrganization'
    goliothCreateProjectRequest:
      type: object
      properties:
        name:
          type: string
        organizationId:
          type: string
    goliothCreateProjectResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothProject'
    goliothCreateReleaseResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothRelease'
    goliothCreateSettingResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothSetting'
    goliothCreateTagResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/comgoliothTag'
    goliothCredential:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/goliothCredentialType'
        identity:
          type: string
        createdAt:
          type: string
          format: date-time
        preSharedKey:
          type: string
    goliothCredentialType:
      type: string
      enum:
        - PRE_SHARED_KEY
        - ASYMMETRIC_KEY_PAIR
      default: PRE_SHARED_KEY
    goliothCredentialsCreateBody:
      type: object
      properties:
        deviceId:
          type: string
        type:
          $ref: '#/components/schemas/goliothCredentialType'
        identity:
          type: string
        preSharedKey:
          type: string
    goliothDeleteAPIKeyResponse:
      type: object
    goliothDeleteArtifactResponse:
      type: object
    goliothDeleteBlueprintResponse:
      type: object
    goliothDeleteCertificateResponse:
      type: object
    goliothDeleteCredentialResponse:
      type: object
    goliothDeleteDeviceResponse:
      type: object
    goliothDeleteDeviceStateResponse:
      type: object
    goliothDeleteIntegrationResponse:
      type: object
    goliothDeletePolicyResponse:
      type: object
    goliothDeleteProjectResponse:
      type: object
    goliothDeleteReleaseResponse:
      type: object
    goliothDeleteSettingResponse:
      type: object
    goliothDeleteTagResponse:
      type: object
    goliothDevice:
      type: object
      properties:
        id:
          type: string
        hardwareIds:
          type: array
          items:
            type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        tagIds:
          type: array
          items:
            type: string
        blueprintId:
          type: string
        data:
          type: object
        lastReport:
          type: string
          format: date-time
        status:
          type: string
        metadata:
          $ref: '#/components/schemas/goliothDeviceMetadata'
        enabled:
          type: boolean
        certificateId:
          type: string
    goliothDeviceActivityLog:
      type: object
      properties:
        deviceId:
          type: string
        lastReport:
          type: string
          format: date-time
        id:
          type: string
        deviceName:
          type: string
        status:
          type: string
        lastSeenOnline:
          type: string
          format: date-time
        lastSeenOffline:
          type: string
          format: date-time
    goliothDeviceLogEntry:
      description: Event generated when a device sends logs.
      type: object
      example:
        device_id: 612d3cecf3ee17d321adbec6
        level: 2
        message: Hello
        metadata: {}
        module: default
        project_id: esp32-test
        timestamp:
          nanos: 250818000
          seconds: 1642796612
      properties:
        timestamp:
          type: string
          format: date-time
        type:
          $ref: '#/components/schemas/goliothDeviceLogType'
        level:
          $ref: '#/components/schemas/goliothDeviceLogLevel'
        module:
          type: string
        moduleId:
          type: string
        message:
          type: string
        metadata:
          type: object
        deviceId:
          type: string
    goliothDeviceLogLevel:
      type: string
      enum:
        - NONE
        - DEBUG
        - INFO
        - WARN
        - ERROR
      default: NONE
    goliothDeviceLogType:
      type: string
      enum:
        - LOGGING
        - DIAGNOSTICS
        - METRICS
      default: LOGGING
    goliothDeviceMetadata:
      type: object
      properties:
        update:
          type: object
        status:
          type: string
        lastReport:
          type: string
          format: date-time
        lastSeenOnline:
          type: string
          format: date-time
        lastSeenOffline:
          type: string
          format: date-time
        lastSettingsStatus:
          $ref: '#/components/schemas/goliothSettingsStatus'
    goliothDeviceStreamQuery:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/goliothQueryField'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/goliothQueryFilter'
        timeBucket:
          type: string
    goliothDeviceUpdate:
      type: object
      properties:
        name:
          type: string
        addHardwareId:
          type: array
          items:
            type: string
        removeHardwareId:
          type: array
          items:
            type: string
        hardwareIds:
          type: array
          items:
            type: string
        addTagId:
          type: array
          items:
            type: string
        removeTagId:
          type: array
          items:
            type: string
        blueprintId:
          type: string
        tagIds:
          type: array
          items:
            type: string
        enabled:
          type: boolean
    goliothDevicesCreateBody:
      type: object
      properties:
        name:
          type: string
        hardwareIds:
          type: array
          items:
            type: string
        tagIds:
          type: array
          items:
            type: string
        blueprintId:
          type: string
    goliothFirmwareLogEntry:
      type: object
      properties:
        version:
          type: string
        time:
          type: string
          format: date-time
        target:
          type: string
        stateCode:
          type: string
        state:
          type: string
        reasonCode:
          type: string
        reason:
          type: string
        deviceId:
          type: string
        package:
          type: string
    goliothGetArtifactResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothArtifact'
    goliothGetBlueprintResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothBlueprint'
    goliothGetBoardsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothBoard'
    goliothGetCertificateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothCertificate'
    goliothGetDeviceResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothDevice'
    goliothGetDeviceStateResponse:
      type: object
      properties:
        data: {}
    goliothGetDeviceStreamResponse:
      type: object
      properties:
        list:
          type: array
          items: {}
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothGetIntegrationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothIntegration'
    goliothGetLatestDeviceActivityLogsResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothDeviceActivityLog'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothGetLogsResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothDeviceLogEntry'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothGetOrganizationQuotaResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothOrganizationQuota'
    goliothGetOrganizationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothOrganization'
    goliothGetPolicyResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothPolicy'
    goliothGetProjectResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothProject'
    goliothGetProjectStreamResponse:
      type: object
      properties:
        list:
          type: array
          items: {}
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothGetReleaseResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothRelease'
    goliothGetSettingResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothSetting'
        total:
          type: integer
          format: int64
    goliothGetTagResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/comgoliothTag'
    goliothIntegration:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        configuration:
          type: object
        enabled:
          type: boolean
    goliothIntegrationType:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        type:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/goliothIntegrationTypeAttribute'
    goliothIntegrationTypeAttribute:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        type:
          type: string
        required:
          type: boolean
        displayName:
          type: string
    goliothIntegrationUpdate:
      type: object
      properties:
        name:
          type: string
        enabled:
          type: boolean
        configuration:
          type: object
    goliothIntegrationValidationResponse:
      type: object
    goliothIntegrationsCreateBody:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        configuration:
          type: object
        enabled:
          type: boolean
    goliothInviteUserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothPolicy'
    goliothListAPIKeyResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothAPIKey'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListAllowedSettingsDataTypesResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothSettingDataType'
        total:
          type: integer
          format: int64
    goliothListArtifactResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothArtifact'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListBlueprintResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothBlueprint'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListBoardsResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothBoard'
        total:
          type: integer
          format: int64
    goliothListCertificateResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothCertificate'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListCredentialResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothCredential'
    goliothListDeviceResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothDevice'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListFirmwareLogsResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothFirmwareLogEntry'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListIntegrationResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothIntegration'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListIntegrationTypesResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothIntegrationType'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListOrganizationResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothOrganization'
    goliothListPermissionResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothPermission'
    goliothListPolicyResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothPolicy'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListProjectResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothProject'
    goliothListReleaseResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothRelease'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListRoleResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothRole'
    goliothListSettingResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothSetting'
        total:
          type: integer
          format: int64
    goliothListTagResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/comgoliothTag'
        page:
          type: integer
          format: int64
        perPage:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    goliothListUsageResponse:
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/goliothUsageUnit'
        dates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/goliothUsageSummaries'
    goliothListUsersResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/goliothUser'
    goliothOrganization:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          type: array
          items:
            type: string
        tier:
          type: string
        paymentStatus:
          type: string
        website:
          type: string
    goliothOrganizationQuota:
      type: object
      properties:
        quotas:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/goliothQuota'
    goliothOrganizationUpdate:
      type: object
      properties:
        name:
          type: string
        website:
          type: string
    goliothPaymentWebhookResponse:
      type: object
    goliothPermission:
      type: object
      properties:
        resource:
          type: string
        action:
          type: string
    goliothPolicy:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        roles:
          type: array
          items:
            type: string
        resourceType:
          type: string
        resourceId:
          type: string
        conditionals:
          $ref: '#/components/schemas/goliothConditionalMap'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    goliothPolicyUpdate:
      type: object
      properties:
        addRoles:
          type: array
          items:
            type: string
        removeRoles:
          type: array
          items:
            type: string
        addTags:
          type: array
          items:
            type: string
        removeTags:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string
        tagIds:
          type: array
          items:
            type: string
    goliothProject:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          type: array
          items:
            type: string
        organizationId:
          type: string
    goliothProjectUpdate:
      type: object
      properties:
        name:
          type: string
    goliothProvisionData:
      type: object
      properties:
        deviceId:
          type: string
    goliothProvisionDeviceResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothProvisionData'
    goliothQueryField:
      type: object
      properties:
        path:
          type: string
        type:
          type: string
        alias:
          type: string
        agg:
          type: string
    goliothQueryFilter:
      type: object
      properties:
        path:
          type: string
        op:
          type: string
        value: {}
        filters:
          type: array
          items:
            $ref: '#/components/schemas/goliothQueryFilter'
    goliothQuota:
      type: object
      properties:
        current:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
    goliothRelease:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        releaseTags:
          type: array
          items:
            type: string
        deviceTagIds:
          type: array
          items:
            type: string
        suitManifest:
          type: object
        artifactIds:
          type: array
          items:
            type: string
        rollout:
          type: boolean
        sequenceNumber:
          type: string
          format: int64
        blueprintId:
          type: string
    goliothReleaseUpdate:
      type: object
      properties:
        addDeviceTagId:
          type: array
          items:
            type: string
        removeDeviceTagId:
          type: array
          items:
            type: string
        deviceTagIds:
          type: array
          items:
            type: string
        rollout:
          type: boolean
        addReleaseTag:
          type: array
          items:
            type: string
        removeReleaseTag:
          type: array
          items:
            type: string
        releaseTags:
          type: array
          items:
            type: string
    goliothReleasesCreateBody:
      type: object
      properties:
        releaseTags:
          type: array
          items:
            type: string
        deviceTagIds:
          type: array
          items:
            type: string
        artifactIds:
          type: array
          items:
            type: string
        rollout:
          type: boolean
    goliothRemoteProcedureCallResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int64
        detail: {}
    goliothRole:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        children:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/goliothPermission'
    goliothSetting:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        value: {}
        dataType:
          type: string
        projectId:
          type: string
        blueprintId:
          type: string
        deviceId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    goliothSettingDataType:
      type: object
      properties:
        type:
          type: string
    goliothSettingError:
      type: object
      properties:
        key:
          type: string
        code:
          type: integer
          format: int64
        codeDescription:
          type: string
        deviceDetails:
          type: string
    goliothSettingUpdate:
      type: object
      properties:
        value: {}
    goliothSettingsCreateBody:
      type: object
      properties:
        key:
          type: string
        dataType:
          type: string
        value: {}
        blueprintId:
          type: string
        deviceId:
          type: string
    goliothSettingsStatus:
      type: object
      properties:
        syncTime:
          type: string
          format: date-time
        reportedVersion:
          type: string
        status:
          type: string
        statusDetail:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/goliothSettingError'
    goliothSubscriptionItem:
      type: object
      properties:
        lookupKey:
          type: string
        quantity:
          type: string
          format: int64
    goliothTagUpdate:
      type: object
      properties:
        name:
          type: string
    goliothTagsCreateBody:
      type: object
      properties:
        name:
          type: string
    goliothTestIntegrationResponse:
      type: object
      properties:
        result:
          type: string
    goliothUpdateAPIKeyResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothAPIKey'
    goliothUpdateArtifactResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothArtifact'
    goliothUpdateBlueprintResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothBlueprint'
    goliothUpdateDeviceResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothDevice'
    goliothUpdateDeviceStateResponse:
      type: object
      properties:
        data: {}
    goliothUpdateIntegrationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothIntegration'
    goliothUpdateOrganizationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothOrganization'
    goliothUpdatePolicyResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothPolicy'
    goliothUpdateProjectResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothProject'
    goliothUpdateReleaseResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothRelease'
    goliothUpdateSettingResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/goliothSetting'
    goliothUpdateTagResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/comgoliothTag'
    goliothUsageSummaries:
      type: object
      properties:
        summaries:
          type: array
          items:
            $ref: '#/components/schemas/goliothUsageSummary'
    goliothUsageSummary:
      type: object
      properties:
        projectId:
          type: string
        service:
          type: string
        quantity:
          type: string
          format: uint64
    goliothUsageUnit:
      type: string
      enum:
        - KILOBYTES
      default: KILOBYTES
    goliothUser:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        profileUrl:
          type: string
        emailVerified:
          type: boolean
        policyId:
          type: string
        roles:
          type: array
          items:
            type: string
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties: {}
    protobufNullValue:
      description: >-
        `NullValue` is a singleton enumeration to represent the null value for
        the

        `Value` type union.


        The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      type: string
      enum:
        - NULL_VALUE
      default: NULL_VALUE
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    BillingPaymentWebhookRequest:
      type: string
      format: byte
    DeviceStateUpdate2Request: {}
    BillingPaymentWebhookResponse:
      type: object
      properties: {}
      example: {}
    ProjectsDeleteResponse:
      type: object
      properties: {}
      example: {}
    ApiKeysDeleteResponse:
      type: object
      properties: {}
      example: {}
    ArtifactsDeleteResponse:
      type: object
      properties: {}
      example: {}
    BlueprintsDeleteResponse:
      type: object
      properties: {}
      example: {}
    CertificatesDeleteResponse:
      type: object
      properties: {}
      example: {}
    CredentialsDelete2Response:
      type: object
      properties: {}
      example: {}
    DevicesDeleteResponse:
      type: object
      properties: {}
      example: {}
    CredentialsDeleteResponse:
      type: object
      properties: {}
      example: {}
    DeviceStateDeleteResponse:
      type: object
      properties: {}
      example: {}
    DeviceStateDeleteByTagResponse:
      type: object
      properties: {}
      example: {}
    IntegrationsValidateResponse:
      type: object
      properties: {}
      example: {}
    IntegrationsDeleteResponse:
      type: object
      properties: {}
      example: {}
    AccessDeleteResponse:
      type: object
      properties: {}
      example: {}
    ReleasesDeleteResponse:
      type: object
      properties: {}
      example: {}
    SettingsDeleteResponse:
      type: object
      properties: {}
      example: {}
    TagsDeleteResponse:
      type: object
      properties: {}
      example: {}
security:
  - Bearer: []
    API_Key: []
externalDocs:
  description: golioth API
  url: https://docs.golioth.io
