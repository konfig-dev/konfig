openapi: 3.0.0
info:
  title: proto/clarifai/api/service.proto
  description: >-
    Clarifai is an independent artificial intelligence company that specializes
    in computer vision, natural language processing, and audio recognition.  One
    of the first deep learning platforms having been founded in 2013, Clarifai
    provides an AI platform for unstructured image, video, text, and audio data.
    Its platform supports the full AI lifecycle for data exploration, data
    labeling, model training, evaluation, and inference around images, video,
    text, and audio data. Headquartered in Washington DC, Clarifai uses machine
    learning and deep neural networks to identify and analyze images, videos,
    text, and audio automatically. Clarifai enables users to implement AI
    technology into their products via API, Mobile SDK, and/or on-premise
    solutions.
  version: version not set
servers:
  - url: api.clarifia.com
tags:
  - name: V2
paths:
  /v2/annotation_filters:
    get:
      tags:
        - V2
      summary: List all the annotation filters.
      operationId: V2_ListAnnotationFilters2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationFilterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete one or more annotation filters in a single request.
      operationId: V2_DeleteAnnotationFilters2
      requestBody:
        description: Request to delete several annotation filters by list of ids.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteAnnotationFiltersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add annotation filters.
      operationId: V2_PostAnnotationFilters2
      requestBody:
        description: Request to add one or more annotation filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostAnnotationFiltersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationFilterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more annotation filters.
      operationId: V2_PatchAnnotationFilters2
      requestBody:
        description: Request to patch several annotation filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchAnnotationFiltersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationFilterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/annotation_filters/{annotationFilterId}:
    get:
      tags:
        - V2
      summary: Get a specific annotation filter.
      operationId: V2_GetAnnotationFilter2
      parameters:
        - description: Identify annotation filter by id.
          name: annotationFilterId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleAnnotationFilterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/annotations:
    get:
      tags:
        - V2
      summary: List all the annotation.
      operationId: V2_ListAnnotations2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: List annotations for these IDs
          name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            List annotations for these Input IDs

            Note that 'ids' are optional but if the are provided the number and
            order in

            'ids' and 'input_ids' should match

            If you do not specify 'ids' all the annotations for 'input_ids' are
            returned

            If a you do not specify both 'input_ids' and 'ids' all the
            annotations in the app are returned
          name: inputIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Only return the annotations that has one of these user IDs,
            effectively operating as an

            OR among them to filter down the results.

            If model_version_ids are also provided these user_ids are OR'd with
            them as well since

            annotations are either provided by users or model versions and we
            want the union of any

            provided user or model version annotations in the results of
            ListAnnotations request.

            If no user_ids are provided then annotations from all users are
            returned.
          name: userIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Only return the annotations that has one of these model version IDs,
            effectively operating as an

            OR among them to filter down the results.

            If user_ids are also provided these model_versions_ids are OR'd with
            them as well since

            annotations are either provided by users or model versions and we
            want the union of any

            provided user or model version annotations in the results of
            ListAnnotations request.

            If no model_version_ids are provided then annotations from all model
            versions are returned.
          name: modelVersionIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: |-
            Set this flag to list both trusted and not trusted annotations
            by default it's listing only trusted annotations
          name: listAllAnnotations
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Set this flag to return the model output for model annotations in
            the response.
          name: returnModelOutput
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Flag to filter annotations by task_id
          name: taskId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple annotations in one request.
      operationId: V2_DeleteAnnotations4
      requestBody:
        $ref: '#/components/requestBodies/apiDeleteAnnotationsRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Post annotations.
      operationId: V2_PostAnnotations2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostAnnotationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more annotations.
      operationId: V2_PatchAnnotations2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchAnnotationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/annotations/searches:
    post:
      tags:
        - V2
      summary: Execute a search over annotations
      operationId: V2_PostAnnotationsSearches2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostAnnotationsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch saved annotations searches by ids.
      operationId: V2_PatchAnnotationsSearches2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchAnnotationsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/annotations/searches/metrics:
    get:
      tags:
        - V2
      summary: List the evaluation results between two search requests
      operationId: V2_ListAnnotationSearchMetrics2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationSearchMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Evaluate the results of two search requests
      operationId: V2_PostAnnotationSearchMetrics2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostAnnotationSearchMetricsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationSearchMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/annotations/searches/metrics/{id}:
    get:
      tags:
        - V2
      summary: Get the evaluation results between two search requests
      operationId: V2_GetAnnotationSearchMetrics2
      parameters:
        - description: Unique custom facing id that identifies the eval to get
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationSearchMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: DeleteAnnotationSearchMetrics
      operationId: V2_DeleteAnnotationSearchMetrics2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/annotations/workers:
    get:
      tags:
        - V2
      summary: |-
        ListAnnotationWorkers lists users, models, and workflows (collectively
        known as "workers") that have added annotations to the application.
      operationId: V2_ListAnnotationWorkers2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response.

            Currently supported: all, names
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            (optional URL parameter) Only list workers that have created trusted
            annotations.
          name: trustedOnly
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkerResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/app:
    get:
      tags:
        - V2
      summary: Get a specific app from an app.
      operationId: V2_GetApp2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleAppResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/apps:
    get:
      tags:
        - V2
      summary: List all the apps.
      operationId: V2_ListApps2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the name
          name: sortByName
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to order by the modified_at time.

            If none of the sort options is set to true, will sort by
            modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the app
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: |-
            Filtering options:
            If true, we only return apps that are handpicked by clarifai staff
          name: featuredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: If true, we only return apps that are starred by the requesting user
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            If true, we only return apps that are marked as a template by the
            app owner.
          name: templateOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the application:
              - id
              - name
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Query various text fields (id, name, description, and notes) that
            can contain the words in the query string

            Deprecated: use search instead.
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the id, name and notes of the app. This supports wilcard
            queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: name
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the user-unique-id of the app. This supports wilcard
            queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAppResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/bulk_operations:
    get:
      tags:
        - V2
      summary: List all the bulk operations
      operationId: V2_ListBulkOperations2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiBulkOperationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: delete one or more terminated bulk operations
      operationId: V2_DeleteBulkOperations2
      requestBody:
        description: |-
          Request to delete the terminated bulk operations by ID
          Only operations in terminated state can be deleted.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteBulkOperationRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: >-
        Perform bulk operations on a list of inputs based on input source.

        Operation include add, update, delete of concepts, metadata and geo
        data.

        This is an Asynchronous process. Use ListBulkOperations or
        GetBulkOperation to check the status.
      operationId: V2_PostBulkOperations2
      requestBody:
        description: >-
          Request to perform bulk operations on a list of inputs based on input
          source.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostBulkOperationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiBulkOperationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Cancel one or more bulk operations
      operationId: V2_CancelBulkOperations2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiCancelBulkOperationRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiBulkOperationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/bulk_operations/{id}:
    get:
      tags:
        - V2
      summary: Get the bulk operation details by ID
      operationId: V2_GetBulkOperation2
      parameters:
        - description: The bulk operation id
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleBulkOperationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/collectors:
    get:
      tags:
        - V2
      summary: List all the collectors.
      operationId: V2_ListCollectors2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: >-
        Delete multiple collectors in one request.

        This call is asynchronous. Use DeleteCollector if you want a synchronous
        version.
      operationId: V2_DeleteCollectors2
      requestBody:
        description: Request to delete several things by the list of ids.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteCollectorsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: >-
        Add a list of Collectors to an app.

        In the handler of this endpoint we also check for all the scopes of the 
        POST /inputs

        endpoint.

        Those current scopes are listed here as a hard requirement.

        They are needed when adding the collectors just so we now that you have
        permission with

        that key at least to do the writing to this app with POST /inputs.
      operationId: V2_PostCollectors2
      requestBody:
        description: Request to create Collectors.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostCollectorsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more collectors.
      operationId: V2_PatchCollectors2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchCollectorsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/collectors/{collectorId}:
    get:
      tags:
        - V2
      summary: Get a specific collector from an app.
      operationId: V2_GetCollector2
      parameters:
        - name: collectorId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleCollectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/concepts:
    get:
      tags:
        - V2
      summary: List all the concepts.
      operationId: V2_ListConcepts2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Fuzzy match on concept ID
          name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add a concept to an app.
      operationId: V2_PostConcepts2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostConceptsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more concepts.
      operationId: V2_PatchConcepts2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchConceptsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/concepts/knowledge_graphs:
    get:
      tags:
        - V2
      summary: List all domain graphs.
      operationId: V2_ListKnowledgeGraphs2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiKnowledgeGraphResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Post domain graphs.
      operationId: V2_PostKnowledgeGraphs2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostKnowledgeGraphsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiKnowledgeGraphResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/concepts/mappings/jobs:
    post:
      tags:
        - V2
      summary: Start concept mapping jobs.
      operationId: V2_PostConceptMappingJobs2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostConceptMappingJobsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptMappingJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/concepts/searches:
    post:
      tags:
        - V2
      summary: |-
        Search over the concepts to find one or more you're looking for.
        This leverage the "body" parameter because we also have page and
        per_page as url query param variables in this request.
      operationId: V2_PostConceptsSearches2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostConceptsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/concepts/status:
    get:
      tags:
        - V2
      summary: List all the concepts with their positive and negative counts
      operationId: V2_GetConceptCounts2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/concepts/{conceptId}:
    get:
      tags:
        - V2
      summary: Get a specific concept from an app.
      operationId: V2_GetConcept2
      parameters:
        - description: The concept's id.
          name: conceptId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/concepts/{conceptId}/languages:
    get:
      tags:
        - V2
      summary: List the concept in all the translated languages.
      operationId: V2_ListConceptLanguages2
      parameters:
        - name: conceptId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add a new translation for this concept.
      operationId: V2_PostConceptLanguages2
      parameters:
        - name: conceptId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostConceptLanguages2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: >-
        Patch the name for a given language names by passing in a list of
        concepts with the new names

        for the languages.
      operationId: V2_PatchConceptLanguages2
      parameters:
        - name: conceptId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchConceptLanguages2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/concepts/{conceptId}/languages/{language}:
    get:
      tags:
        - V2
      summary: Get a specific concept from an app.
      operationId: V2_GetConceptLanguage2
      parameters:
        - name: conceptId
          in: path
          required: true
          schema:
            type: string
        - description: This is the language identifier.
          name: language
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleConceptLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/datasets:
    get:
      tags:
        - V2
      summary: List all the datasets.
      operationId: V2_ListDatasets3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the app
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: If neither sort option is set to true, will sort by modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the external id
          name: sortById
          in: query
          required: false
          schema:
            type: boolean
        - description: 'Filtering options:'
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter datasets by bookmark. If set, only return bookmarked
            datasets. Otherwise none bookmarked datasets only.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the dataset:
              - id
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: |-
            Fuzzy filter on dataset ID
            Deprecated: use search instead.
          name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete one or more datasets in a single request.
      operationId: V2_DeleteDatasets2
      requestBody:
        description: Request to delete several datasets by list of ids.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteDatasetsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: |-
        Add datasets to an app.
        The process is atomic, i.e. either all or no datasets are added.
        If there is an error for one dataset,
        the process will stop, revert the transaction and return the error.
      operationId: V2_PostDatasets2
      requestBody:
        description: Request to add one or more datasets.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostDatasetsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: |-
        Patch one or more datasets.
        The process is atomic, i.e. either all or no datasets are patched.
        If there is an error for one dataset,
        the process will stop, revert the transaction and return the error.
      operationId: V2_PatchDatasets2
      requestBody:
        description: Request to patch several datasets.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchDatasetsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/datasets/{datasetId}:
    get:
      tags:
        - V2
      summary: Get a specific dataset.
      operationId: V2_GetDataset2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleDatasetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/datasets/{datasetId}/inputs:
    get:
      tags:
        - V2
      summary: List all the dataset inputs in a dataset.
      operationId: V2_ListDatasetInputs2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete one or more dataset inputs in a single request.
      operationId: V2_DeleteDatasetInputs2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteDatasetInputs2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: |-
        Add dataset inputs to a dataset.
        The process is not atomic, i.e. if there are errors with some dataset
        inputs, others might still be added. The response reports
          - SUCCESS if all dataset inputs were added,
          - MIXED_STATUS if only some dataset inputs were added, and
          - FAILURE if no dataset inputs were added.
        Each individual dataset input in the response has the status set to
        indicate if it was successful or if there was an error.
      operationId: V2_PostDatasetInputs2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostDatasetInputs2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/datasets/{datasetId}/inputs/{inputId}:
    get:
      tags:
        - V2
      summary: Get a specific dataset input.
      operationId: V2_GetDatasetInput2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset input by id.
          name: inputId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleDatasetInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/datasets/{datasetId}/versions:
    get:
      tags:
        - V2
      summary: List all the dataset versions.
      operationId: V2_ListDatasetVersions2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete one or more dataset versions in a single request.
      operationId: V2_DeleteDatasetVersions2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteDatasetVersions2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add dataset versions to a dataset.
      operationId: V2_PostDatasetVersions2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostDatasetVersions2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more dataset versions.
      operationId: V2_PatchDatasetVersions2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchDatasetVersions2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/datasets/{datasetId}/versions/{datasetVersionId}:
    get:
      tags:
        - V2
      summary: Get a specific dataset version.
      operationId: V2_GetDatasetVersion2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset version by id.
          name: datasetVersionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleDatasetVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/datasets/{datasetId}/versions/{datasetVersionId}/exports:
    put:
      tags:
        - V2
      summary: Create export of a dataset version.
      operationId: V2_PutDatasetVersionExports2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset version by id.
          name: datasetVersionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutDatasetVersionExports2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetVersionExportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/datasets/{datasetId}/versions/{datasetVersionId}/metrics:
    get:
      tags:
        - V2
      operationId: V2_ListDatasetVersionMetricsGroups2
      parameters:
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset version by id.
          name: datasetVersionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            Filter by parent path. Multiple parent paths are OR-ed. Empty list
            results in no filter.
          name: parentPaths
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Filter by parent type. Multiple types are OR-ed. Empty list results
            in no filter.

             - INPUT_TYPE: Group data examples by input type.
            Examples: images, videos, text, audio.
             - CONCEPT_ID: Group data examples by concept ID.
            Examples: inputs with cat concept, inputs with dog concept.
             - CONCEPTS_COUNT: Group data examples by concepts count.
            Examples: inputs with 20 concepts, inputs with 21 concepts.
             - BOUNDING_BOXES_COUNT: Group data examples by bounding boxes count.
            Examples: inputs with 20 bounding boxes, inputs with 21 bounding
            boxes.
             - POLYGONS_COUNT: Group data examples by polygons count.
            Examples: inputs with 20 polygons, inputs with 21 polygons.
             - POINTS_COUNT: Group data examples by points count.
            Examples: inputs with 20 points, inputs with 21 points.
             - MASKS_COUNT: Group data examples by masks count.
            Examples: inputs with 20 masks, inputs with 21 masks.
             - PIXELS_COUNT: Group data examples by pixels count.
            In order to reduce the number of groups, we use bins.

            Examples for bin size = 400: inputs with [200000, 200400) pixels,
            inputs with [200400, 200800) pixels.
             - ASPECT_RATIO: Group data examples by aspect ratio.
            In order to reduce the number of groups, we use bins.

            Examples for bin size = 0.1: inputs with [0.5, 0.6) aspect ratio,
            inputs with [0.6, 0.7) aspect ratio.
          name: types
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET
                - INPUT_TYPE
                - CONCEPT_ID
                - CONCEPTS_COUNT
                - BOUNDING_BOXES_COUNT
                - POLYGONS_COUNT
                - POINTS_COUNT
                - MASKS_COUNT
                - PIXELS_COUNT
                - ASPECT_RATIO
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/apiMultiDatasetVersionMetricsGroupResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/evaluations:
    get:
      tags:
        - V2
      operationId: V2_ListEvaluations3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            If true, sort in ascending order, otherwise sort in descending
            order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by application id
          name: sortByAppId
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.macro_avg_roc_auc
          name: sortByRocAuc
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.f1
          name: sortByF1
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by when the metric was created
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.mean_avg_precision_iou_50
          name: sortByMeanAvgPrecision
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.macro_avg_precision
          name: sortByPrecision
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.macro_avg_recall
          name: sortByRecall
          in: query
          required: false
          schema:
            type: boolean
        - name: sortByModelId
          in: query
          required: false
          schema:
            type: boolean
        - name: sortByEvalDatasetId
          in: query
          required: false
          schema:
            type: boolean
        - name: sortByTrainDatasetId
          in: query
          required: false
          schema:
            type: boolean
        - description: Filter on model type id
          name: modelTypeId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter on dataset ID of the dataset version specified in the metric
            version
          name: evalDatasetIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Filter on dataset ID of the dataset version specified by the model
            version
          name: trainDatasetIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter on concept IDs specified in the modele version's output_info
          name: conceptIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Whether to show failed metrics, defaults to false
          name: showFailedMetrics
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      operationId: V2_PostEvaluations2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostEvaluationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/evaluations/{evaluationId}:
    get:
      tags:
        - V2
      operationId: V2_GetEvaluation2
      parameters:
        - name: evaluationId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - name: fields.confusionMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.cooccurrenceMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.labelCounts
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.binaryMetrics
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.testSet
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByArea
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByClass
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs:
    get:
      tags:
        - V2
      summary: List all the inputs.
      operationId: V2_ListInputs2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: |-
            Status code from internal codes.

             - ZERO: to be revised and greatly expanded
             - SUCCESS: Generic
             - MOVED: Resource moved. Respond with Http status 307 and add new Location header to response
             - TEAPOT: SUCCESS_WARNING_API_DEPRECATED = 10001;
            SUCCESS_WARNING_CLIENT_DEPRECATED = 10002;
             - CONN_ACCOUNT_ISSUES: Clarifai Connection Codes: 11xxx

            expired cc, still in trial, feature not supported in your tier
             - CONN_TOKEN_INVALID: invalid auth token used. Deprecated: we should return CONN_KEY_INVALID instead now in all cases.
             - CONN_CREDENTIALS_INVALID: invalid auth credentials
             - CONN_EXCEED_HOURLY_LIMIT: throttle hourly limit exceeded
             - CONN_EXCEED_MONTHLY_LIMIT: throttle monthly limit exceeded
             - CONN_THROTTLED: throttler and billing stuff
             - CONN_EXCEEDS_LIMITS: throttler and billing stuff
             - CONN_INSUFFICIENT_SCOPES: api key has insufficient permissions
             - CONN_KEY_INVALID: api key is invalid
             - CONN_KEY_NOT_FOUND: api key not found
             - CONN_BAD_REQUEST_FORMAT: multipart form parsing, broken json, etc
             - CONN_DOES_NOT_EXIST: when path is bad
             - CONN_INVALID_REQUEST: something wrong with a header
             - CONN_METHOD_NOT_ALLOWED: when a request method is not allowed
             - CONN_NO_GDPR_CONSENT: lack GDPR consent
             - CONN_AUTH_METHOD_DISABLED: authentication method is disabled
             - MODEL_TRAINED: Model/Custom Training related 20xxx

            Custom model has been already trained.
             - MODEL_TRAINING: Custom model is currently training.
             - MODEL_UNTRAINED: Custom model has not yet been trained.
             - MODEL_QUEUED_FOR_TRAINING: Custom model is currently in queue for training, waiting on assets to process first.
             - MODEL_TRAINING_FAILED: generic err msg for any type of model training err.
             - MODEL_TRAINING_NO_DATA: Custom model training had no data.  FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_NO_POSITIVES: Custom model training had no positive examples. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS: Custom model training was ONE_VS_N but with a single class. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_TIMED_OUT: Training took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_WAITING_ERROR: Training got error waiting on asset pipeline to finish. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_UNKNOWN_ERROR: Training threw an unknown exception.
             - MODEL_TRAINING_MSG_REDELIVER: Training message was redelivered. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_INSUFFICIENT_DATA: Training got error due to insufficient labelled data. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_INVALID_PARAMS: FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED: Training is stopped because too much data was dropped. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_EVALUATION_TIMED_OUT: Evaluation took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_WAITING_ERROR: Evaluation got error waiting on asset pipeline to finish.FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_UNKNOWN_ERROR: EVALUATION THREW AN UNKNOWN EXCEPTION.
             - MODEL_EVALUATION_MSG_REDELIVER: Eval message was redelivered. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_NEED_LABELS: Don't have enough concepts labelled to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_NEED_INPUTS: Don't have enough inputs per concept to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_FAILED: Generic err code for eval failure.
             - MODEL_DEPLOYMENT_FAILED: Used when inference coordinator failed to deploy spire and throws an error
             - MODEL_DEPLOYING: Used when calling the inference coordinator to deploy a spire
             - MODEL_QUEUED_FOR_DEPLOYMENT: Used when training is completed
             - MODEL_NOT_DEPLOYED: Used when model spire deployment is manually taken down or due to inactivity
             - MODEL_REFERENCE_INVALID_ARGUMENT: Used when a model reference field is not set properly
             - MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT: Used when a model example input field is not set properly
             - MODEL_EXPORTED: Model Export status codes
             - WORKFLOW_NO_MATCHING_INPUT: specified model input not in workflow
             - WORKFLOW_REQUIRE_TRAINED_MODEL: specified model must be trained
             - WORKFLOW_INVALID_ARGUMENT: error in the request somewhere
             - WORKFLOW_INVALID_REQUEST: error in the request somewhere
             - CONCEPT_MODIFY_SUCCESS: Concept related 23xxx
             - ANNOTATION_SUCCESS: Annotation related 24xxx
             - METADATA_INVALID_PATCH_ARGUMENTS: Metadata related 249xx
             - TRAINER_JOB_STATE_NONE: Training service related 25xxx
             - DATA_DUMP_SUCCESS: Data Dump related 251xx
             - DATA_DUMP_NO_DATA: DEPRECATED: Not used anymore. Now for an empty data dump, DATA_DUMP_SUCCESS is returned. To detect an empty data dump, check if the inptus count is 0.
             - APP_DUPLICATION_SUCCESS: Duplicate related 252xx
             - MODULE_DOES_NOT_EXIST: Module related codes 253xx
             - BULK_OPERATION_SUCCESS: Bulk Operation related codes 254xx
             - RUNNER_DOES_NOT_EXIST: Runner related codes 256xx
             - INPUT_DOWNLOAD_SUCCESS: Input:Image related 30xxx
             - INPUT_DOWNLOAD_PENDING: when things are async, this is the default status.
             - INPUT_DOWNLOAD_FAILED: any type of error downloading and processing
             - INPUT_VIDEO_DOWNLOAD_SUCCESS: Input:Video related 31xxx -- Deprecated
             - INPUT_WRITES_DISABLED_FOR_MAINTENANCE: deprecate this one. Use REQUEST_DISABLED_FOR_MAINTENANCE
             - PREDICT_INVALID_REQUEST: API formatting issues 4000x
             - DATABASE_DUPLICATE_KEY: Other related 400xx
             - EXTERNAL_CONNECTION_ERROR: could not connect to external services
             - QUEUE_CONN_ERROR: Queue related errors 41xxx
             - SQS_OVERLIMIT: SQS related errors 411xx
             - SEARCH_INTERNAL_FAILURE: Search related errors 43xxxx
             - EVALUATION_QUEUED: Workflow evaluation err code
             - STRIPE_EVENT_ERROR: Stripe 44xxx
             - CACHE_MISS: Redis/Cache 45xxx
             - SIGNUP_EVENT_ERROR: Sift Science 46xxx
             - APP_COUNT_INVALID_MESSAGE: Application counts related errors 470xx
             - MP_DOWNLOAD_ERROR: Media processor related errors 471xx -- DEPRECATED
             - DATATIER_CONN_ERROR: DataTier related error 472xx
             - USER_CONSENT_FACE: User legal consent stauts related 50xxx
             - WORKER_MISSING: Workers 51xxx
             - COLLECTOR_MISSING: Collectors 52xxx
             - SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST: SSO 53xxx
             - TASK_IN_PROGRESS: Tasks 54xxx
            The task was created.
             - TASK_DONE: The task is completed.
             - TASK_WONT_DO: The task is marked as abandoned.
             - TASK_FAILED: An error occurred during add-task-annotations or add-auto-annotations pipeline.
             - TASK_IDLE: When an Auto Annotation task job has finished processing its last batch and is waiting for more dataset assets.
             - TASK_CONFLICT: The task operation is in conflict with the current state of the server.
             - TASK_NOT_IMPLEMENTED: Certain task-related scenarios are not implemented.
             - TASK_MISSING: Task was not found.
             - TASK_PERMISSION_DENIED: Not allowed to perform a task-related action.
             - LABEL_ORDER_PENDING: Label Order Related Status Code 55xxx
             - LICENSE_ACTIVE: License Related Status Code 600xx
             - LICENSE_DELETED: hidden state not reflected to users
             - PASSWORD_VALIDATION_SUCCESS: Password Related Status Code
             - FEATUREFLAG_CONFIG_NOT_FOUND: Feature flags status code
             - MAINTENANCE_SUCCESS: Maintenance status code
             - DATASET_VERSION_PENDING: Datasets 64xxx
            The dataset version is pending to be processed.
             - DATASET_VERSION_IN_PROGRESS: The dataset version is currently being processed.
             - DATASET_VERSION_READY: The dataset version is ready to be used.
             - DATASET_VERSION_FAILURE: An error occurred during the dataset version processing.
             - DATASET_VERSION_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version processing.
             - DATASET_VERSION_CONFLICT: An alteration to dataset version would create a conflict
             - DATASET_INPUT_SUCCESS: The dataset input was successfully added.
             - DATASET_INPUT_DUPLICATE: The dataset input is a duplicate.
            Deprecated: Unused.
             - DATASET_VERSION_EXPORT_SUCCESS: The dataset version export is completed.
             - DATASET_VERSION_EXPORT_PENDING: The dataset version is pending to be exported.
             - DATASET_VERSION_EXPORT_FAILED: An error occurred during the dataset version export.
             - DATASET_VERSION_EXPORT_IN_PROGRESS: The dataset version is currently being exported.
             - DATASET_VERSION_EXPORT_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version export.
             - JOB_QUEUED: Generic Job status codes
             - AUTH_MISSING_IDP_ASSOC: auth issues

            TODO: Knowledge graph related 80xxx
             - UPLOAD_IN_PROGRESS: Multipart uploading status codes
             - BILLING_INVALID_INFO: Billing related issues: 69xxx
             - INTERNAL_SERVER_ISSUE: Internal issues: 98xxx
             - CONN_UNCATEGORIZED: Uncategorized: 99xxx: move off as soon as known
             - BAD_REQUEST: Deprecated: migrate off to one of the internal issues
             - SERVER_ERROR: Deprecated: migrate off to one of the internal issues
          name: status.code
          in: query
          required: false
          schema:
            type: string
            enum:
              - ZERO
              - SUCCESS
              - MIXED_STATUS
              - FAILURE
              - TRY_AGAIN
              - NOT_IMPLEMENTED
              - MOVED
              - TEAPOT
              - CONN_ACCOUNT_ISSUES
              - CONN_TOKEN_INVALID
              - CONN_CREDENTIALS_INVALID
              - CONN_EXCEED_HOURLY_LIMIT
              - CONN_EXCEED_MONTHLY_LIMIT
              - CONN_THROTTLED
              - CONN_EXCEEDS_LIMITS
              - CONN_INSUFFICIENT_SCOPES
              - CONN_KEY_INVALID
              - CONN_KEY_NOT_FOUND
              - CONN_BAD_REQUEST_FORMAT
              - CONN_DOES_NOT_EXIST
              - CONN_INVALID_REQUEST
              - CONN_METHOD_NOT_ALLOWED
              - CONN_NO_GDPR_CONSENT
              - CONN_AUTH_METHOD_DISABLED
              - MODEL_TRAINED
              - MODEL_TRAINING
              - MODEL_UNTRAINED
              - MODEL_QUEUED_FOR_TRAINING
              - MODEL_UPLOADING
              - MODEL_UPLOADING_FAILED
              - MODEL_TRAINING_FAILED
              - MODEL_TRAINING_NO_DATA
              - MODEL_TRAINING_NO_POSITIVES
              - MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS
              - MODEL_TRAINING_TIMED_OUT
              - MODEL_TRAINING_WAITING_ERROR
              - MODEL_TRAINING_UNKNOWN_ERROR
              - MODEL_TRAINING_MSG_REDELIVER
              - MODEL_TRAINING_INSUFFICIENT_DATA
              - MODEL_TRAINING_INVALID_PARAMS
              - MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED
              - MODEL_MODIFY_SUCCESS
              - MODEL_MODIFY_PENDING
              - MODEL_MODIFY_FAILED
              - MODEL_DOES_NOT_EXIST
              - MODEL_PERMISSION_DENIED
              - MODEL_INVALID_ARGUMENT
              - MODEL_INVALID_REQUEST
              - MODEL_EVALUATED
              - MODEL_EVALUATING
              - MODEL_NOT_EVALUATED
              - MODEL_QUEUED_FOR_EVALUATION
              - MODEL_EVALUATION_TIMED_OUT
              - MODEL_EVALUATION_WAITING_ERROR
              - MODEL_EVALUATION_UNKNOWN_ERROR
              - MODEL_PREDICTION_FAILED
              - MODEL_EVALUATION_MSG_REDELIVER
              - MODEL_EVALUATION_NEED_LABELS
              - MODEL_EVALUATION_NEED_INPUTS
              - MODEL_EVALUATION_FAILED
              - MODEL_DEPLOYMENT_FAILED
              - MODEL_DEPLOYING
              - MODEL_QUEUED_FOR_DEPLOYMENT
              - MODEL_NOT_DEPLOYED
              - MODEL_REFERENCE_INVALID_ARGUMENT
              - MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT
              - MODEL_EXPORTED
              - MODEL_EXPORTING
              - MODEL_EXPORTING_FAILED
              - MODEL_EXPORT_PENDING
              - WORKFLOW_NO_MATCHING_INPUT
              - WORKFLOW_REQUIRE_TRAINED_MODEL
              - WORKFLOW_DUPLICATE
              - WORKFLOW_UNSUPPORTED_FORMAT
              - WORKFLOW_DOES_NOT_EXIST
              - WORKFLOW_PERMISSION_DENIED
              - WORKFLOW_INVALID_ARGUMENT
              - WORKFLOW_INVALID_RECIPE
              - WORKFLOW_INVALID_TEMPLATE
              - WORKFLOW_INVALID_GRAPH
              - WORKFLOW_INTERNAL_FAILURE
              - WORKFLOW_INVALID_REQUEST
              - WORKFLOW_MODIFY_SUCCESS
              - WORKFLOW_MODIFY_PENDING
              - WORKFLOW_MODIFY_FAILED
              - WORKFLOW_REINDEX_FAILED
              - CONCEPT_MODIFY_SUCCESS
              - CONCEPT_MODIFY_PENDING
              - CONCEPT_MODIFY_FAILED
              - ANNOTATION_SUCCESS
              - ANNOTATION_PENDING
              - ANNOTATION_FAILED
              - ANNOTATION_UNKNOWN_STATUS
              - ANNOTATION_INVALID_ARGUMENT
              - ANNOTATION_PERMISSION_DENIED
              - ANNOTATION_AWAITING_REVIEW
              - ANNOTATION_AWAITING_CONSENSUS_REVIEW
              - ANNOTATION_REVIEW_DENIED
              - ANNOTATION_MODIFY_SUCCESS
              - ANNOTATION_MODIFY_PENDING
              - ANNOTATION_MODIFY_FAILED
              - METADATA_INVALID_PATCH_ARGUMENTS
              - METADATA_PARSING_ISSUE
              - METADATA_MANIPULATION_ISSUE
              - TRAINER_JOB_STATE_NONE
              - TRAINER_JOB_STATE_QUEUED
              - TRAINER_JOB_STATE_RUNNING
              - TRAINER_JOB_STATE_COMPLETE
              - TRAINER_JOB_STATE_ERROR
              - DATA_DUMP_SUCCESS
              - DATA_DUMP_PENDING
              - DATA_DUMP_FAILED
              - DATA_DUMP_IN_PROGRESS
              - DATA_DUMP_NO_DATA
              - DATA_DUMP_UNEXPECTED_ERROR
              - DATA_DUMP_EXPORT_SUCCESS
              - DATA_DUMP_EXPORT_PENDING
              - DATA_DUMP_EXPORT_FAILED
              - DATA_DUMP_EXPORT_IN_PROGRESS
              - DATA_DUMP_EXPORT_UNEXPECTED_ERROR
              - APP_DUPLICATION_SUCCESS
              - APP_DUPLICATION_FAILED
              - APP_DUPLICATION_PENDING
              - APP_DUPLICATION_IN_PROGRESS
              - APP_DUPLICATION_INVALID_REQUEST
              - MODULE_DOES_NOT_EXIST
              - MODULE_PERMISSION_DENIED
              - MODULE_INVALID_ARGUMENT
              - MODULE_INVALID_REQUEST
              - BULK_OPERATION_SUCCESS
              - BULK_OPERATION_FAILED
              - BULK_OPERATION_PENDING
              - BULK_OPERATION_IN_PROGRESS
              - BULK_OPERATION_INVALID_REQUEST
              - BULK_OPERATION_CANCELLED
              - BULK_OPERATION_UNEXPECTED_ERROR
              - RUNNER_DOES_NOT_EXIST
              - RUNNER_PERMISSION_DENIED
              - RUNNER_INVALID_ARGUMENT
              - RUNNER_INVALID_REQUEST
              - RUNNER_NEEDS_RETRY
              - RUNNER_STREAM_START
              - RUNNER_STREAM_END
              - RUNNER_ITEM_CANCELLED
              - RUNNER_PROCESSING_FAILED
              - INPUT_DOWNLOAD_SUCCESS
              - INPUT_DOWNLOAD_PENDING
              - INPUT_DOWNLOAD_FAILED
              - INPUT_DOWNLOAD_IN_PROGRESS
              - INPUT_STATUS_UPDATE_FAILED
              - INPUT_DELETE_FAILED
              - INPUT_DUPLICATE
              - INPUT_UNSUPPORTED_FORMAT
              - INPUT_DOES_NOT_EXIST
              - INPUT_PERMISSION_DENIED
              - INPUT_INVALID_ARGUMENT
              - INPUT_OVER_LIMIT
              - INPUT_INVALID_URL
              - INPUT_MODIFY_SUCCESS
              - INPUT_MODIFY_PENDING
              - INPUT_MODIFY_FAILED
              - INPUT_STORAGE_HOST_FAILED
              - ALL_INPUT_INVALID_BYTES
              - INPUT_CLUSTER_SUCCESS
              - INPUT_CLUSTER_PENDING
              - INPUT_CLUSTER_FAILED
              - INPUT_CLUSTER_IN_PROGRESS
              - INPUT_REINDEX_SUCCESS
              - INPUT_REINDEX_PENDING
              - INPUT_REINDEX_FAILED
              - INPUT_REINDEX_IN_PROGRESS
              - INPUT_VIDEO_DOWNLOAD_SUCCESS
              - INPUT_VIDEO_DOWNLOAD_PENDING
              - INPUT_VIDEO_DOWNLOAD_FAILED
              - INPUT_VIDEO_DUPLICATE
              - INPUT_VIDEO_UNSUPPORTED_FORMAT
              - INPUT_VIDEO_DOES_NOT_EXIST
              - INPUT_VIDEO_PERMISSION_DENIED
              - INPUT_VIDEO_INVALID_ARGUMENT
              - INPUT_VIDEO_OVER_LIMIT
              - INPUT_VIDEO_INVALID_URL
              - INPUT_VIDEO_MODIFY_SUCCESS
              - INPUT_VIDEO_MODIFY_PENDING
              - INPUT_VIDEO_MODIFY_FAILED
              - INPUT_VIDEO_STORAGE_HOST_FAILED
              - ALL_INPUT_VIDEOS_INVALID_BYTES
              - INPUT_VIDEO_PROCESSING_SUCCESS
              - INPUT_VIDEO_PROCESSING_PENDING
              - INPUT_VIDEO_PROCESSING_FAILED
              - INPUT_VIDEO_STORAGE_INCONSISTENCY
              - INPUT_VIDEO_STORAGE_FAILURE
              - INPUT_VIDEO_URL_GENERATION_FAILURE
              - INPUT_CONNECTION_FAILED
              - REQUEST_DISABLED_FOR_MAINTENANCE
              - INPUT_WRITES_DISABLED_FOR_MAINTENANCE
              - INPUT_INVALID_REQUEST
              - PREDICT_INVALID_REQUEST
              - SEARCH_INVALID_REQUEST
              - CONCEPTS_INVALID_REQUEST
              - STATS_INVALID_REQUEST
              - DATABASE_DUPLICATE_KEY
              - DATABASE_STATEMENT_TIMEOUT
              - DATABASE_INVALID_ROWS_AFFECTED
              - DATABASE_DEADLOCK_DETECTED
              - DATABASE_FAIL_TASK
              - DATABASE_FAIL_TO_GET_CONNECTIONS
              - DATABASE_TOO_MANY_CLIENTS
              - DATABASE_CONSTRAINT_VIOLATED
              - DATABASE_CANCELED
              - ASYNC_WORKER_MULTI_ERRORS
              - RPC_REQUEST_QUEUE_FULL
              - RPC_SERVER_UNAVAILABLE
              - RPC_REQUEST_TIMEOUT
              - RPC_MAX_MESSAGE_SIZE_EXCEEDED
              - RPC_CANCELED
              - RPC_UNKNOWN_METHOD
              - REQUEST_CANCELED_BY_USER
              - CLUSTER_INTERNAL_FAILURE
              - EXTERNAL_CONNECTION_ERROR
              - QUERY_INVALID_SYNTAX
              - QUEUE_CONN_ERROR
              - QUEUE_CLOSE_REQUEST_TIMEOUT
              - QUEUE_CONN_CLOSED
              - QUEUE_PUBLISH_ACK_TIMEOUT
              - QUEUE_PUBLISH_ERROR
              - QUEUE_SUBSCRIPTION_TIMEOUT
              - QUEUE_SUBSCRIPTION_ERROR
              - QUEUE_MARSHALLING_FAILED
              - QUEUE_UNMARSHALLING_FAILED
              - QUEUE_MAX_MSG_REDELIVERY_EXCEEDED
              - QUEUE_ACK_FAILURE
              - SQS_OVERLIMIT
              - SQS_INVALID_RECEIPT_HANDLE
              - SQS_UNKNOWN
              - SEARCH_INTERNAL_FAILURE
              - SEARCH_PROJECTION_FAILURE
              - SEARCH_PREDICTION_FAILURE
              - SEARCH_BY_NOT_FULLY_INDEXED_INPUT
              - SAVED_SEARCH_MODIFY_FAILED
              - SEARCH_COUNTS_UNAVAILABLE
              - EVALUATION_QUEUED
              - EVALUATION_IN_PROGRESS
              - EVALUATION_SUCCESS
              - EVALUATION_FAILED_TO_RETRIEVE_DATA
              - EVALUATION_INVALID_ARGUMENT
              - EVALUATION_FAILED
              - EVALUATION_PENDING
              - EVALUATION_TIMED_OUT
              - EVALUATION_UNEXPECTED_ERROR
              - EVALUATION_MIXED
              - STRIPE_EVENT_ERROR
              - CACHE_MISS
              - REDIS_SCRIPT_EXITED_WITH_FAILURE
              - REDIS_STREAM_ERR
              - REDIS_NO_CONSUMERS
              - REDIS_STREAM_BACKOFF
              - SIGNUP_EVENT_ERROR
              - SIGNUP_FLAGGED
              - FILETYPE_UNSUPPORTED
              - APP_COUNT_INVALID_MESSAGE
              - APP_COUNT_UPDATE_INCREMENT_FAILED
              - APP_COUNT_REBUILD_FAILED
              - APP_COUNT_INTERNAL_FAILURE
              - MP_DOWNLOAD_ERROR
              - MP_RESOLVE_DNS_ERROR
              - MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR
              - MP_IMAGE_DECODE_ERROR
              - MP_INVALID_ARGUMENT
              - MP_IMAGE_PROCESSING_ERROR
              - DATATIER_CONN_ERROR
              - USER_CONSENT_FACE
              - WORKER_MISSING
              - WORKER_ACTIVE
              - WORKER_INACTIVE
              - COLLECTOR_MISSING
              - COLLECTOR_ACTIVE
              - COLLECTOR_INACTIVE
              - COLLECTOR_POST_INPUT_FAILED
              - SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST
              - TASK_IN_PROGRESS
              - TASK_DONE
              - TASK_WONT_DO
              - TASK_FAILED
              - TASK_IDLE
              - TASK_CONFLICT
              - TASK_NOT_IMPLEMENTED
              - TASK_MISSING
              - TASK_PERMISSION_DENIED
              - TASK_ASSIGNMENT_SUCCESS
              - TASK_ASSIGNMENT_PENDING
              - TASK_ASSIGNMENT_AWAITING_REVIEW
              - TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW
              - LABEL_ORDER_PENDING
              - LABEL_ORDER_IN_PROGRESS
              - LABEL_ORDER_SUCCESS
              - LABEL_ORDER_CANCELED
              - LICENSE_ACTIVE
              - LICENSE_DOES_NOT_EXIST
              - LICENSE_NEED_UPDATE
              - LICENSE_EXPIRED
              - LICENSE_REVOKED
              - LICENSE_DELETED
              - LICENSE_VOLUME_EXCEEDED
              - PASSWORD_VALIDATION_SUCCESS
              - PASSWORD_VALIDATION_FAILED
              - PASSWORDPOLICY_INVALID_ARGUMENT
              - FEATUREFLAG_CONFIG_NOT_FOUND
              - FEATUREFLAG_INVALID_ARGUMENT
              - FEATUREFLAG_BLOCKED
              - MAINTENANCE_SUCCESS
              - MAINTENANCE_FAILED
              - DATASET_VERSION_PENDING
              - DATASET_VERSION_IN_PROGRESS
              - DATASET_VERSION_READY
              - DATASET_VERSION_FAILURE
              - DATASET_VERSION_UNEXPECTED_ERROR
              - DATASET_VERSION_CONFLICT
              - DATASET_INPUT_SUCCESS
              - DATASET_INPUT_DUPLICATE
              - DATASET_VERSION_EXPORT_SUCCESS
              - DATASET_VERSION_EXPORT_PENDING
              - DATASET_VERSION_EXPORT_FAILED
              - DATASET_VERSION_EXPORT_IN_PROGRESS
              - DATASET_VERSION_EXPORT_UNEXPECTED_ERROR
              - JOB_QUEUED
              - JOB_RUNNING
              - JOB_COMPLETED
              - JOB_FAILED
              - JOB_CANCELLED
              - JOB_UNEXPECTED_ERROR
              - JOB_CONFLICT
              - AUTH_MISSING_IDP_ASSOC
              - LIST_OBJECTS_FAILED
              - ARCHIVE_EXTRACT_FAILED
              - UPLOAD_IN_PROGRESS
              - UPLOAD_DONE
              - UPLOAD_FAILED
              - UPLOAD_UNEXPECTED_ERROR
              - UPLOAD_EXPIRED
              - UPLOAD_CANCELED
              - UPLOAD_CONFLICT
              - BILLING_INVALID_INFO
              - INTERNAL_SERVER_ISSUE
              - INTERNAL_FETCHING_ISSUE
              - INTERNAL_DATABASE_ISSUE
              - INTERNAL_CONTEXT_CANCELED
              - INTERNAL_UNEXPECTED_TIMEOUT
              - INTERNAL_UNEXPECTED_V1
              - INTERNAL_UNEXPECTED_PANIC
              - INTERNAL_UNEXPECTED_SPIRE
              - INTERNAL_REDIS_UNAVAILABLE
              - INTERNAL_RESOURCE_EXHAUSTED
              - INTERNAL_REDIS_UNCATEGORIZED
              - INTERNAL_AWS_UNCATEGORIZED
              - INTERNAL_AZURE_UNCATEGORIZED
              - CONN_UNCATEGORIZED
              - MODEL_UNCATEGORIZED
              - INPUT_UNCATEGORIZED
              - ANNOTATION_UNCATEGORIZED
              - BILLING_UNCATEGORIZED
              - INTERNAL_UNCATEGORIZED
              - BAD_REQUEST
              - SERVER_ERROR
            default: ZERO
        - description: A short description of the error.
          name: status.description
          in: query
          required: false
          schema:
            type: string
        - description: |-
            More details of the given error.
            These details may be exposed to non-technical users.
            For technical details, try to use developer_notes field.
          name: status.details
          in: query
          required: false
          schema:
            type: string
        - description: |-
            For some environment we may return a stack trace to help debug
            any issues.
          name: status.stackTrace
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: specifically for long running jobs
          name: status.percentCompleted
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: if status is pending, how much time is remaining (in seconds)
          name: status.timeRemaining
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            A request ID may be present, to help monitoring and tracking
            requests
          name: status.reqId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Internal Annotation (do not set in production, for internal Clarifai
            use only).
          name: status.internalDetails
          in: query
          required: false
          schema:
            type: string
        - description: New location for the resource. Used to set response Location header.
          name: status.redirectInfo.url
          in: query
          required: false
          schema:
            type: string
        - description: Resource type
          name: status.redirectInfo.resourceType
          in: query
          required: false
          schema:
            type: string
        - description: Old resource id
          name: status.redirectInfo.oldResourceId
          in: query
          required: false
          schema:
            type: string
        - description: New resource id
          name: status.redirectInfo.newResourceId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Notes for developer.

            These notes are rather technical details for developers how to
            interpret the status,

            e.g. why an error occurred and how to avoid getting the error.
          name: status.developerNotes
          in: query
          required: false
          schema:
            type: string
        - name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: |-
        Delete multiple inputs in one request.
        This call is asynchronous.
      operationId: V2_DeleteInputs2
      requestBody:
        description: Request to delete several things by the list of ids.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteInputsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: |-
        Add 1 or more input to an app.
        The actual inputs processing is asynchronous.
      operationId: V2_PostInputs2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostInputsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more inputs.
      operationId: V2_PatchInputs2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchInputsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/annotations:
    delete:
      tags:
        - V2
      summary: Delete multiple annotations in one request.
      operationId: V2_DeleteAnnotations2
      requestBody:
        $ref: '#/components/requestBodies/apiDeleteAnnotationsRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/data_sources:
    post:
      tags:
        - V2
      summary: >-
        Initiates retrieval of inputs from cloud storage from a user provided
        data source.

        Will create and return an inputs-add-job for tracking progress.

        Archives will be extracted and their contents will be processed as
        inputs.
      operationId: V2_PostInputsDataSources2
      description: >-
        The cloud URL will be treated as a filter prefix. For example
        s3:/bucket/images_folder/abc will process

        files in the images_folder beginning with abc or in a subfolder
        beginning with abc.

        For example:

        bucket/images_folder/abcImage.png

        bucket/images_folder/abc-1/Data.zip


        If given URL is for a private bucket or file, then credentials should be
        provided to access the bucket.

        Credentials should include rights to list the objects in the bucket,
        except when pointed directly at a file archive,

        in which case it only requires rights to access that particular file.
      requestBody:
        description: >-
          Initiates retrieval of inputs from cloud storage from a user provided
          data source.

          Will create and return an inputs-add-job for tracking progress.

          Archives will be extracted and their contents will be processed as
          inputs.


          The cloud URL will be treated as a filter prefix. For example
          s3:/bucket/images_folder/abc will process

          files in the images_folder beginning with abc or in a subfolder
          beginning with abc.

          For example:

          bucket/images_folder/abcImage.png

          bucket/images_folder/abc-1/Data.zip


          If given URL is for a private bucket or file, then credentials should
          be provided to access the bucket.

          Credentials should include rights to list the objects in the bucket,
          except when pointed directly at a file archive,

          in which case it only requires rights to access that particular file.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostInputsDataSourcesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/jobs/add:
    get:
      tags:
        - V2
      summary: List all the inputs add jobs
      operationId: V2_ListInputsAddJobs2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/jobs/add/{id}:
    get:
      tags:
        - V2
      summary: Get the input add job details by ID
      operationId: V2_GetInputsAddJob2
      parameters:
        - description: id of add inputs job
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: cancel the input add job by ID
      operationId: V2_CancelInputsAddJob2
      parameters:
        - description: id of add inputs job to be cancelled
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2CancelInputsAddJob2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/jobs/extraction:
    get:
      tags:
        - V2
      summary: List all the input extraction jobs
      operationId: V2_ListInputsExtractionJobs2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsExtractionJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      operationId: V2_CancelInputsExtractionJobs2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiCancelInputsExtractionJobsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsExtractionJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/jobs/extraction/{inputsExtractionJobId}:
    get:
      tags:
        - V2
      summary: Get the input extraction job details by ID
      operationId: V2_GetInputsExtractionJob2
      parameters:
        - name: inputsExtractionJobId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputsExtractionJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/searches:
    post:
      tags:
        - V2
      summary: Execute a search over inputs
      operationId: V2_PostInputsSearches2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostInputsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch saved inputs searches by ids.
      operationId: V2_PatchInputsSearches2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchInputsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/status:
    get:
      tags:
        - V2
      summary: Get input count per status.
      operationId: V2_GetInputCount2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/stream:
    get:
      tags:
        - V2
      summary: Streams all the inputs starting from oldest assets.
      operationId: V2_StreamInputs2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 20.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: lastId
          in: query
          required: false
          schema:
            type: string
        - description: |-
            By default, the endpoint return inputs by the time when it is added.
            If this is set to true, we will return inputs by id.
          name: orderById
          in: query
          required: false
          schema:
            type: boolean
        - name: descending
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/uploads:
    post:
      tags:
        - V2
      summary: |-
        Start uploading a file archive containing inputs.
        Will create and return an inputs-add-job for tracking progress.
      operationId: V2_PostInputsUploads2
      description: >-
        Associated inputs-add-job contains an upload id which should be
        completed through `PutUploadContentParts` endpoint.

        Completing the upload will automatically begin unpacking the archive and
        uploading the contents as inputs.
      requestBody:
        description: >-
          Start uploading a file archive containing inputs.

          Will create and return an inputs-add-job for tracking progress.


          Associated inputs-add-job contains an upload id which should be
          completed through `PutUploadContentParts` endpoint.

          Completing the upload will automatically begin unpacking the archive
          and uploading the contents as inputs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostInputsUploadsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/{inputId}:
    get:
      tags:
        - V2
      summary: Get a specific input from an app.
      operationId: V2_GetInput2
      parameters:
        - name: inputId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single input asynchronously.
      operationId: V2_DeleteInput2
      parameters:
        - name: inputId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/{inputId}/annotations/{annotationId}:
    get:
      tags:
        - V2
      summary: Get a specific annotation from an app.
      operationId: V2_GetAnnotation2
      parameters:
        - name: inputId
          in: path
          required: true
          schema:
            type: string
        - name: annotationId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single annotation.
      operationId: V2_DeleteAnnotation2
      parameters:
        - name: inputId
          in: path
          required: true
          schema:
            type: string
        - name: annotationId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/inputs/{inputId}/video_manifest:
    get:
      tags:
        - V2
      summary: Get a video input manifest.
      operationId: V2_GetInputVideoManifest2
      parameters:
        - name: inputId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetVideoManifestResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/label_orders:
    get:
      tags:
        - V2
      summary: List label orders.
      operationId: V2_ListLabelOrders2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiLabelOrderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: |-
        Delete multiple label orders in one request.
        this do not change task status
      operationId: V2_DeleteLabelOrders2
      requestBody:
        description: Request to delete a list of label orders.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteLabelOrdersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add Label orders.
      operationId: V2_PostLabelOrders2
      requestBody:
        description: Request to create label orders.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostLabelOrdersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiLabelOrderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more label orders.
      operationId: V2_PatchLabelOrders2
      requestBody:
        description: Request to patch a list of label orders.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchLabelOrdersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiLabelOrderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/label_orders/{labelOrderId}:
    get:
      tags:
        - V2
      summary: Get a label order.
      operationId: V2_GetLabelOrder2
      parameters:
        - name: labelOrderId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleLabelOrderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models:
    get:
      tags:
        - V2
      summary: List all the models.
      operationId: V2_ListModels3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars, outputs, presets
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the name
          name: sortByName
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of training inputs
          name: sortByNumInputs
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to order by the modified_at time of the latest model
            version.

            If none of the sort options is set to true, will sort by
            modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by count of stars
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filtering options:

            Filter models by the specific model_type_id. See ListModelTypes for
            the list of ModelType.Id's

            supported.
          name: modelTypeId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            If true, we only return models that have the status MODEL_TRAINED,
            which includes non-trainable model types.
          name: trainedOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            The list of input fields to the model.

            For example, you can specify 'image', which will return models that
            make inferences on images like visual-classifier models.
          name: inputFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            The list of output fields to the model.

            For example, you can specify 'regions[...].data.concepts', which
            will return visual-detector models.
          name: outputFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter by the license of the model version
          name: license
          in: query
          required: false
          schema:
            type: string
        - description: If true, we only return models that are handpicked by clarifai staff
          name: featuredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            If true, we only return models that are starred by the requesting
            user
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: List of toolkit tags to filter by
          name: toolkits
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of use_case tags to filter by
          name: useCases
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of language tags to filter by
          name: languages
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Old API behavior resulted in returning clarifai main models when
            calling ListModels while scoped to an app. While we transition

            away from that, we can use this flag to not always fetch clarifai
            main models, unless that is the app we are explicitly listing for.
          name: dontFetchFromMain
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter models by bookmark. If set, only return bookmarked models.
            Otherwise none bookmarked models only.

            Note: you can not filter `trained_only` and bookmark at the same
            time.

            When filter by bookmark, we will return trained and untrained
            models.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the model:
              - id
              - name
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Query name, description and id fields, that can contain the words in
            the query string. Does NOT support wildcards - full words only.
            Supports operators "OR" and "-" as NOT.

            Deprecated: use search instead.
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the description and id of the model. This supports
            wildcard queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: name
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Extends the name filter to include the user_id of the application
            owner that the model belongs to.

            Deprecated: use search instead of name.
          name: filterByUserId
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple models in one request.
      operationId: V2_DeleteModels2
      requestBody:
        description: Request to delete several things by the list of ids.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteModelsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add a models to an app.
      operationId: V2_PostModels2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostModelsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more models.
      operationId: V2_PatchModels2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchModelsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/searches:
    post:
      tags:
        - V2
      summary: |-
        Search over the models to find one or more you're looking for.
        This leverage the "body" parameter because we also have page and
        per_page as url query param variables in this request.
      operationId: V2_PostModelsSearches2
      requestBody:
        description: Search over the available models.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostModelsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/types:
    get:
      tags:
        - V2
      summary: >-
        List all the model types available in the platform.

        This MUST be above ListModels so that the /models/types endpoint takes
        precedence.
      operationId: V2_ListModelTypes2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelTypeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/types/{modelTypeId}:
    get:
      tags:
        - V2
      summary: Get a specific model type.
      operationId: V2_GetModelType2
      parameters:
        - description: The specific ModelType.Id you want to retrieve.
          name: modelTypeId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelTypeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/versions/upload:
    post:
      tags:
        - V2
      summary: >-
        This is a streaming endpoint, the request has a field, upload_data,
        which can either be the config for the upload or the actual data to
        upload.

        The config must be sent first before the model_bytes can be uploaded.

        Once the config has been sent, the server will respond with a
        confirmation containing the model_version_id.

        This is so that if your upload is interrupted, you can resume the upload
        by sending the config again with the model_version_id specified for your
        model_version.

        The actual upload will be done via a multipart upload, the latest
        successful part_id will be sent from the server in the response to the
        model_bytes.
      operationId: V2_PostModelVersionsUpload
      requestBody:
        description: ' (streaming inputs)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostModelVersionsUploadRequest'
        required: true
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostModelVersionsUploadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}:
    get:
      tags:
        - V2
      summary: Get a specific model from an app.
      operationId: V2_GetModel2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: |-
            This is included so that we can re-use this request for multiple
            rpcs with and without the version_id.
          name: versionId
          in: query
          required: false
          schema:
            type: string
        - name: language
          in: query
          required: false
          schema:
            type: string
        - name: trainedBefore
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars, outputs, presets
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single model.
      operationId: V2_DeleteModel2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/check_consents:
    patch:
      tags:
        - V2
      summary: Update model check consents
      operationId: V2_PatchModelCheckConsents2
      parameters:
        - description: the model id
          name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelCheckConsents2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelCheckConsentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/inputs:
    get:
      tags:
        - V2
      summary: 'Deprecated: Unmaintained and ideally replaced with usage of datasets'
      operationId: V2_ListModelInputs2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - name: versionId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/languages:
    patch:
      tags:
        - V2
      summary: Update model languages tags
      operationId: V2_PatchModelLanguages2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelLanguages2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/output_info:
    get:
      tags:
        - V2
      summary: |-
        Get a the output info for a given model_id or model_id/version_id
        combo.
      operationId: V2_GetModelOutputInfo2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: |-
            This is included so that we can re-use this request for multiple
            rpcs with and without the version_id.
          name: versionId
          in: query
          required: false
          schema:
            type: string
        - name: language
          in: query
          required: false
          schema:
            type: string
        - name: trainedBefore
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars, outputs, presets
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/outputs:
    post:
      tags:
        - V2
      summary: Get predicted outputs from the model.
      operationId: V2_PostModelOutputs4
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelOutputs4Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiOutputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/publish:
    post:
      tags:
        - V2
      summary: PostModelVersionsPublish
      operationId: V2_PostModelVersionsPublish2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersionsPublish2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/references:
    get:
      tags:
        - V2
      summary: Lists model references tied to a particular model id.
      operationId: V2_ListModelReferences2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: Optional, defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Optional, defaults to 128 references per page.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelReferenceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/toolkits:
    patch:
      tags:
        - V2
      summary: Update model toolkits tags
      operationId: V2_PatchModelToolkits2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelToolkits2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelToolkitResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/unpublish:
    post:
      tags:
        - V2
      summary: PostModelVersionsUnPublish
      operationId: V2_PostModelVersionsUnPublish2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersionsUnPublish2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/usecases:
    patch:
      tags:
        - V2
      summary: Update model use_cases tags
      operationId: V2_PatchModelUseCases2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelUseCases2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelUseCaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions:
    get:
      tags:
        - V2
      summary: List all the models.
      operationId: V2_ListModelVersions2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            Filtering options:

            To list only the model versions that have these concept ids present
            in them.
          name: conceptIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: To list only the model versions that have been trained.
          name: trainedOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the status code
          name: sortByStatusCode
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of training inputs
          name: sortByNumInputs
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to sort by the description
          name: sortByDescription
          in: query
          required: false
          schema:
            type: boolean
        - description: |-
            Whether to order by the created_at time
            If neither sort option is set to true, will sort by created_at.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Create a new model version to trigger training of the model.
      operationId: V2_PostModelVersions2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersions2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/time_estimate:
    post:
      tags:
        - V2
      summary: >-
        Get the training time estimate based off train request and estimated
        input count.
      operationId: V2_PostModelVersionsTrainingTimeEstimate2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PostModelVersionsTrainingTimeEstimate2Request
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTrainingTimeEstimateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{modelVersionId}/evaluations:
    get:
      tags:
        - V2
      summary: |-
        Deprecated, use GetEvaluation instead
        List the evaluation metrics for a model version.
      operationId: V2_ListModelVersionEvaluations2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: modelVersionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Deprecated, use PostEvaluations instead
      operationId: V2_PostModelVersionEvaluations2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: modelVersionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersionEvaluations2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{modelVersionId}/evaluations/{evaluationId}:
    get:
      tags:
        - V2
      summary: |-
        Deprecated, use GetEvaluation instead
        Get an evaluation metrics for a model version.
      operationId: V2_GetModelVersionEvaluation2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: modelVersionId
          in: path
          required: true
          schema:
            type: string
        - name: evaluationId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - name: fields.confusionMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.cooccurrenceMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.labelCounts
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.binaryMetrics
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.testSet
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByArea
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByClass
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{modelVersionId}/input_examples:
    get:
      tags:
        - V2
      summary: ListModelVersionInputExamples
      operationId: V2_ListModelVersionInputExamples2
      parameters:
        - description: id of model the example belongs to
          name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: specific version the example belongs to
          name: modelVersionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: Optional, defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Optional, defaults to 128 references per page.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelVersionInputExampleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{modelVersionId}/input_examples/{exampleId}:
    get:
      tags:
        - V2
      summary: GetModelVersionInputExample
      operationId: V2_GetModelVersionInputExample2
      parameters:
        - description: id of model the example belongs to
          name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: specific version the example belongs to
          name: modelVersionId
          in: path
          required: true
          schema:
            type: string
        - description: Id of example to fetch
          name: exampleId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionInputExampleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{versionId}:
    get:
      tags:
        - V2
      summary: Get a specific model from an app.
      operationId: V2_GetModelVersion2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single model.
      operationId: V2_DeleteModelVersion2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{versionId}/exports:
    get:
      tags:
        - V2
      summary: GetModelVersionExport
      operationId: V2_GetModelVersionExport2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionExportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    put:
      tags:
        - V2
      summary: Export a model
      operationId: V2_PutModelVersionExports2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionExportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{versionId}/inputs:
    get:
      tags:
        - V2
      summary: 'Deprecated: Unmaintained and ideally replaced with usage of datasets'
      operationId: V2_ListModelInputs4
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{versionId}/metrics:
    get:
      tags:
        - V2
      summary: |-
        Deprecated: Use GetEvaluation instead
        Get the evaluation metrics for a model version.
      operationId: V2_GetModelVersionMetrics2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - name: fields.confusionMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.cooccurrenceMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.labelCounts
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.binaryMetrics
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.testSet
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByArea
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByClass
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: |-
        Deprecated, use PostEvaluations instead
        Run the evaluation metrics for a model version.
      operationId: V2_PostModelVersionMetrics2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersionMetrics2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{versionId}/output_info:
    get:
      tags:
        - V2
      summary: |-
        Get a the output info for a given model_id or model_id/version_id
        combo.
      operationId: V2_GetModelOutputInfo4
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: |-
            This is included so that we can re-use this request for multiple
            rpcs with and without the version_id.
          name: versionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - name: language
          in: query
          required: false
          schema:
            type: string
        - name: trainedBefore
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars, outputs, presets
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/models/{modelId}/versions/{versionId}/outputs:
    post:
      tags:
        - V2
      summary: Get predicted outputs from the model.
      operationId: V2_PostModelOutputs2
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelOutputs2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiOutputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/modules:
    get:
      tags:
        - V2
      summary: List all the modules in community, by user or by app.
      operationId: V2_ListModules3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the app
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: If neither sort option is set to true, will sort by modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the external id
          name: sortById
          in: query
          required: false
          schema:
            type: boolean
        - description: 'Filtering options:'
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter modules by bookmark. If set, only return bookmarked modules.
            Otherwise none bookmarked modules only.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the module:
              - id
              - description
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the id and description of the module. This supports
            wildcard queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: name
          in: query
          required: false
          schema:
            type: string
        - description: |-
            Filter by the application owner whose this module belongs to
            Deprecated: use search instead of name.
          name: filterByUserId
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModuleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/my_scopes:
    get:
      tags:
        - V2
      summary: >-
        API Keys in the public API -- request is itself Key authorized, and will
        tell

        the user the scopes/access of the key/credential they're providing, as
        computed by

        our authorizer:
      operationId: V2_MyScopes3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiScopeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/myscopes:
    get:
      tags:
        - V2
      summary: >-
        API Keys in the public API -- request is itself Key authorized, and will
        tell

        the user the scopes/access of the key/credential they're providing, as
        computed by

        our authorizer:
      operationId: V2_MyScopes2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiScopeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/myscopesroot:
    get:
      tags:
        - V2
      operationId: V2_MyScopesRoot
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiScopeRootResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/open_source_licenses:
    get:
      tags:
        - V2
      summary: List all the supported open source licenses in the platform.
      operationId: V2_ListOpenSourceLicenses
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiListOpenSourceLicensesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/resource_counts:
    get:
      tags:
        - V2
      summary: List the resource counts for the app.
      operationId: V2_GetResourceCounts2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetResourceCountsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/searches:
    get:
      tags:
        - V2
      summary: List all saved legacy searches.
      operationId: V2_ListSearches2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Execute a new search and optionally save it.
      operationId: V2_PostSearches2
      description: 'Deprecated: Use PostInputsSearches or PostAnnotationsSearches instead.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch saved legacy searches by ids.
      operationId: V2_PatchSearches2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/searches/{id}:
    get:
      tags:
        - V2
      summary: Get a saved legacy search.
      operationId: V2_GetSearch2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a saved search.
      operationId: V2_DeleteSearch2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Execute a previously saved legacy search.
      operationId: V2_PostSearchesByID2
      parameters:
        - description: ID for saves search to be executed
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostSearchesById2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/stats/values:
    post:
      tags:
        - V2
      summary: PostStatValues
      operationId: V2_PostStatValues2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostStatValuesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiStatValueResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/stats/values/aggregate:
    post:
      tags:
        - V2
      summary: PostStatValuesAggregate
      operationId: V2_PostStatValuesAggregate2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostStatValuesAggregateRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiStatValueAggregateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/status_codes:
    get:
      tags:
        - V2
      summary: List all status codes.
      operationId: V2_ListStatusCodes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiStatusCodeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/status_codes/{statusCodeId}:
    get:
      tags:
        - V2
      summary: Get more details for a status code.
      operationId: V2_GetStatusCode
      parameters:
        - name: statusCodeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleStatusCodeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/tasks:
    get:
      tags:
        - V2
      summary: List tasks from an app.
      operationId: V2_ListTasks2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Get tasks that have ANY user from this list assigned as worker.
          name: workerUserIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Get tasks that have ANY user from this list assigned as reviewer.
          name: reviewUserIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Get tasks that are associated to ANY label order from this list.
          name: labelOrderIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: |-
            Get label order tasks as well
            It is automatically set to true if label_order_ids is set.
          name: includingLabelOrderTasks
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response.

            Currently supported additional fields:

            - all

            - worker.users

            - review.users

            - metrics.work.inputs_count_estimated

            - metrics.work.inputs_percent_estimated
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: (optional) task IDs to filter on
          name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTaskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple tasks in one request.
      operationId: V2_DeleteTasks2
      requestBody:
        description: Request to delete a list of tasks.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteTasksRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add tasks to an app.
      operationId: V2_PostTasks2
      requestBody:
        description: Request to create Tasks.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostTasksRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTaskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more tasks.
      operationId: V2_PatchTasks2
      requestBody:
        description: Request to patch a list of tasks.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchTasksRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTaskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/tasks/{taskId}:
    get:
      tags:
        - V2
      summary: Get a specific task from an app.
      operationId: V2_GetTask2
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response.

            Currently supported additional fields:

            - all

            - worker.users

            - review.users

            - metrics.work.inputs_count_estimated

            - metrics.work.inputs_percent_estimated
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleTaskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/tasks/{taskId}/annotations/count:
    get:
      tags:
        - V2
      summary: Task annotation count
      operationId: V2_GetTaskAnnotationCount2
      parameters:
        - description: task_id for which count per user per status is needed
          name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: for given task_id, user_ids to filter on (optional)
          name: userIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleTaskCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/tasks/{taskId}/assignments:
    get:
      tags:
        - V2
      summary: List next non-labeled and unassigned inputs from task's dataset
      operationId: V2_ListNextTaskAssignments2
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/tasks/{taskId}/inputs/count:
    get:
      tags:
        - V2
      summary: Task Input count
      operationId: V2_GetTaskInputCount2
      parameters:
        - description: task_id for which count per user per status is needed
          name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: for given task_id, user_ids to filter on (optional)
          name: userIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleTaskCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/tasks/{taskId}/inputs/samples:
    get:
      tags:
        - V2
      summary: Get a specific input from an app.
      operationId: V2_GetInputSamples2
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: URL param. If zero ids provided, returns for all task labelers
          name: userIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/trending_metrics/views/{viewType}:
    get:
      tags:
        - V2
      summary: List the view metrics for a detail view
      operationId: V2_ListTrendingMetricsViews2
      parameters:
        - description: For now view types 'apps', 'workflows', and 'models' are supported.
          name: viewType
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTrendingMetricsViewResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/uploads:
    get:
      tags:
        - V2
      operationId: V2_ListUploads2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiUploadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      operationId: V2_DeleteUploads2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteUploadsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      operationId: V2_PostUploads2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostUploadsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiUploadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/uploads/{uploadId}:
    get:
      tags:
        - V2
      operationId: V2_GetUpload2
      parameters:
        - description: Upload ID
          name: uploadId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleUploadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/uploads/{uploadId}/content_parts:
    put:
      tags:
        - V2
      summary: >-
        Upload a part of a multipart upload.

        Behaviour on completion depends on the endpoint that was used to
        initiate the upload.
      operationId: V2_PutUploadContentParts2
      parameters:
        - name: uploadId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleUploadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{runnerSelector.deployment.userId}/deployments/{runnerSelector.deployment.id}/outputs:
    post:
      tags:
        - V2
      summary: Get predicted outputs from the model.
      operationId: V2_PostModelOutputs5
      parameters:
        - description: >-
            The user who owns the deployment. These live in the user/org
            account.
          name: runnerSelector.deployment.userId
          in: path
          required: true
          schema:
            type: string
        - description: An id for this configured deployment.
          name: runnerSelector.deployment.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelOutputs5Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiOutputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}:
    get:
      tags:
        - V2
      summary: Get user information
      operationId: V2_GetUser
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleUserResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps:
    get:
      tags:
        - V2
      summary: List all the apps.
      operationId: V2_ListApps
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the name
          name: sortByName
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to order by the modified_at time.

            If none of the sort options is set to true, will sort by
            modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the app
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: |-
            Filtering options:
            If true, we only return apps that are handpicked by clarifai staff
          name: featuredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: If true, we only return apps that are starred by the requesting user
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            If true, we only return apps that are marked as a template by the
            app owner.
          name: templateOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the application:
              - id
              - name
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Query various text fields (id, name, description, and notes) that
            can contain the words in the query string

            Deprecated: use search instead.
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the id, name and notes of the app. This supports wilcard
            queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: name
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the user-unique-id of the app. This supports wilcard
            queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAppResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: >-
        Add a app to an app.

        This needs to load the default workflow to make a copy, validating all
        the models in it, and

        then writing the new workflow back to this new app.
      operationId: V2_PostApps
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostAppsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAppResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more apps.
      operationId: V2_PatchApps
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchAppsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAppResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/ids:
    patch:
      tags:
        - V2
      summary: Patch apps ids.
      operationId: V2_PatchAppsIds
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchAppsIdsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAppResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/searches:
    post:
      tags:
        - V2
      summary: Search over the applications to find one or more you're looking for.
      operationId: V2_PostAppsSearches
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostAppsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAppResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}:
    get:
      tags:
        - V2
      summary: Get a specific app from an app.
      operationId: V2_GetApp
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleAppResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: |-
        Search over the apps to find one or more you're looking for.
        This leverage the "body" parameter because we also have page and
        per_page as url query param variables in this request.
      operationId: V2_DeleteApp
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one app.
      operationId: V2_PatchApp
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchAppRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleAppResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotation_filters:
    get:
      tags:
        - V2
      summary: List all the annotation filters.
      operationId: V2_ListAnnotationFilters
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationFilterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete one or more annotation filters in a single request.
      operationId: V2_DeleteAnnotationFilters
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteAnnotationFiltersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add annotation filters.
      operationId: V2_PostAnnotationFilters
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostAnnotationFiltersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationFilterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more annotation filters.
      operationId: V2_PatchAnnotationFilters
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchAnnotationFiltersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationFilterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotation_filters/{annotationFilterId}:
    get:
      tags:
        - V2
      summary: Get a specific annotation filter.
      operationId: V2_GetAnnotationFilter
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify annotation filter by id.
          name: annotationFilterId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleAnnotationFilterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations:
    get:
      tags:
        - V2
      summary: List all the annotation.
      operationId: V2_ListAnnotations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: List annotations for these IDs
          name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            List annotations for these Input IDs

            Note that 'ids' are optional but if the are provided the number and
            order in

            'ids' and 'input_ids' should match

            If you do not specify 'ids' all the annotations for 'input_ids' are
            returned

            If a you do not specify both 'input_ids' and 'ids' all the
            annotations in the app are returned
          name: inputIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Only return the annotations that has one of these user IDs,
            effectively operating as an

            OR among them to filter down the results.

            If model_version_ids are also provided these user_ids are OR'd with
            them as well since

            annotations are either provided by users or model versions and we
            want the union of any

            provided user or model version annotations in the results of
            ListAnnotations request.

            If no user_ids are provided then annotations from all users are
            returned.
          name: userIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Only return the annotations that has one of these model version IDs,
            effectively operating as an

            OR among them to filter down the results.

            If user_ids are also provided these model_versions_ids are OR'd with
            them as well since

            annotations are either provided by users or model versions and we
            want the union of any

            provided user or model version annotations in the results of
            ListAnnotations request.

            If no model_version_ids are provided then annotations from all model
            versions are returned.
          name: modelVersionIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: |-
            Set this flag to list both trusted and not trusted annotations
            by default it's listing only trusted annotations
          name: listAllAnnotations
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Set this flag to return the model output for model annotations in
            the response.
          name: returnModelOutput
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Flag to filter annotations by task_id
          name: taskId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple annotations in one request.
      operationId: V2_DeleteAnnotations3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_DeleteAnnotations3Body'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Post annotations.
      operationId: V2_PostAnnotations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostAnnotationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more annotations.
      operationId: V2_PatchAnnotations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchAnnotationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations/searches:
    post:
      tags:
        - V2
      summary: Execute a search over annotations
      operationId: V2_PostAnnotationsSearches
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostAnnotationsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch saved annotations searches by ids.
      operationId: V2_PatchAnnotationsSearches
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_PatchAnnotationsSearchesBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations/searches/metrics:
    get:
      tags:
        - V2
      summary: List the evaluation results between two search requests
      operationId: V2_ListAnnotationSearchMetrics
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationSearchMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Evaluate the results of two search requests
      operationId: V2_PostAnnotationSearchMetrics
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostAnnotationSearchMetricsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationSearchMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations/searches/metrics/{id}:
    get:
      tags:
        - V2
      summary: Get the evaluation results between two search requests
      operationId: V2_GetAnnotationSearchMetrics
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Unique custom facing id that identifies the eval to get
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAnnotationSearchMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: DeleteAnnotationSearchMetrics
      operationId: V2_DeleteAnnotationSearchMetrics
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations/workers:
    get:
      tags:
        - V2
      summary: |-
        ListAnnotationWorkers lists users, models, and workflows (collectively
        known as "workers") that have added annotations to the application.
      operationId: V2_ListAnnotationWorkers
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response.

            Currently supported: all, names
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            (optional URL parameter) Only list workers that have created trusted
            annotations.
          name: trustedOnly
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkerResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/bulk_operations:
    get:
      tags:
        - V2
      summary: List all the bulk operations
      operationId: V2_ListBulkOperations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiBulkOperationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: delete one or more terminated bulk operations
      operationId: V2_DeleteBulkOperations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteBulkOperationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: >-
        Perform bulk operations on a list of inputs based on input source.

        Operation include add, update, delete of concepts, metadata and geo
        data.

        This is an Asynchronous process. Use ListBulkOperations or
        GetBulkOperation to check the status.
      operationId: V2_PostBulkOperations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostBulkOperationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiBulkOperationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Cancel one or more bulk operations
      operationId: V2_CancelBulkOperations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2CancelBulkOperationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiBulkOperationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/bulk_operations/{id}:
    get:
      tags:
        - V2
      summary: Get the bulk operation details by ID
      operationId: V2_GetBulkOperation
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: The bulk operation id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleBulkOperationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/collaborators:
    get:
      tags:
        - V2
      summary: owner list users who the app is shared with
      operationId: V2_ListCollaborators
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: |-
            Set this flag to list both deleted and not deleted collaborators
            by default it's listing only not deleted collaborators
          name: listAllCollaborators
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollaboratorsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete existing collaborators.
      operationId: V2_DeleteCollaborators
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteCollaboratorsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: add collaborators to an app.
      operationId: V2_PostCollaborators
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostCollaboratorsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollaboratorsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch existing collaborators.
      operationId: V2_PatchCollaborators
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchCollaboratorsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollaboratorsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/collectors:
    get:
      tags:
        - V2
      summary: List all the collectors.
      operationId: V2_ListCollectors
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: >-
        Delete multiple collectors in one request.

        This call is asynchronous. Use DeleteCollector if you want a synchronous
        version.
      operationId: V2_DeleteCollectors
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_DeleteCollectorsBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: >-
        Add a list of Collectors to an app.

        In the handler of this endpoint we also check for all the scopes of the 
        POST /inputs

        endpoint.

        Those current scopes are listed here as a hard requirement.

        They are needed when adding the collectors just so we now that you have
        permission with

        that key at least to do the writing to this app with POST /inputs.
      operationId: V2_PostCollectors
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostCollectorsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more collectors.
      operationId: V2_PatchCollectors
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchCollectorsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/collectors/{collectorId}:
    get:
      tags:
        - V2
      summary: Get a specific collector from an app.
      operationId: V2_GetCollector
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: collectorId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleCollectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts:
    get:
      tags:
        - V2
      summary: List all the concepts.
      operationId: V2_ListConcepts
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Fuzzy match on concept ID
          name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add a concept to an app.
      operationId: V2_PostConcepts
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostConceptsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more concepts.
      operationId: V2_PatchConcepts
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchConceptsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/knowledge_graphs:
    get:
      tags:
        - V2
      summary: List all domain graphs.
      operationId: V2_ListKnowledgeGraphs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiKnowledgeGraphResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Post domain graphs.
      operationId: V2_PostKnowledgeGraphs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostKnowledgeGraphsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiKnowledgeGraphResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/mappings/jobs:
    post:
      tags:
        - V2
      summary: Start concept mapping jobs.
      operationId: V2_PostConceptMappingJobs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostConceptMappingJobsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptMappingJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/relations:
    get:
      tags:
        - V2
      summary: >-
        List concept relations between concepts in the platform.

        MUST be above ListConcepts so that if concept_id is empty this will
        still match

        /concepts/relations to list all the concept relations in the app.
      operationId: V2_ListConceptRelations2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            The subject concept id in your app to get all the relationships for.

            Leave as an empty string (GET /concepts/relations) to list ALL the
            relations in the app.


            When listing all the relations it will only return one direction of
            the relationship

            with the predicate acting on the subject and not the inverse like is
            done when providing a

            concept_id so that we can return a reliable page size always.


            When providing a concept_id, if a hyponym is present in the DB such
            as:

            'honey' (subject), 'hyponym' (predicate for "is a kind of"), 'food'
            (object)

            then you can list the concept relations for 'honey' and get hyponym
            predicate with 'food'

            object.

            But you can also list the concept relations for 'food' and it will
            return the same hyponym

            relationship with 'honey' as object and 'hypernym' as predicate.

            Synonyms by nature are symmetrical relationships so either side can
            be the concept_id (subject)

            when listing the relations.
          name: conceptId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            If predicate is provided then only list relations with that
            predicate.


            Note that if no subject is set in concept_id and predicate is set to

            'hypernym', then it will return any stored hyponyms as hypernyms
            with

            just the subject and object swapped since they are reversed
            relations.


            Valid predicates are:

            - 'hypernym'

            - 'hyponym'

            - 'synonym'
          name: predicate
          in: query
          required: false
          schema:
            type: string
        - description: >-
            If knowledge_graph_id is provided then just list relations from that
            knowledge graph.

            If not provided then list relations from all knowledge graphs
            including the global one for this

            app one (ie. knowledge_graph "") and any specific ones in the app.
          name: knowledgeGraphId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/searches:
    post:
      tags:
        - V2
      summary: |-
        Search over the concepts to find one or more you're looking for.
        This leverage the "body" parameter because we also have page and
        per_page as url query param variables in this request.
      operationId: V2_PostConceptsSearches
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostConceptsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/status:
    get:
      tags:
        - V2
      summary: List all the concepts with their positive and negative counts
      operationId: V2_GetConceptCounts
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/{conceptId}:
    get:
      tags:
        - V2
      summary: Get a specific concept from an app.
      operationId: V2_GetConcept
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: The concept's id.
          name: conceptId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/{conceptId}/languages:
    get:
      tags:
        - V2
      summary: List the concept in all the translated languages.
      operationId: V2_ListConceptLanguages
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: conceptId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add a new translation for this concept.
      operationId: V2_PostConceptLanguages
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: conceptId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostConceptLanguagesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: >-
        Patch the name for a given language names by passing in a list of
        concepts with the new names

        for the languages.
      operationId: V2_PatchConceptLanguages
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: conceptId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchConceptLanguagesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/{conceptId}/languages/{language}:
    get:
      tags:
        - V2
      summary: Get a specific concept from an app.
      operationId: V2_GetConceptLanguage
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: conceptId
          in: path
          required: true
          schema:
            type: string
        - description: This is the language identifier.
          name: language
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleConceptLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/{conceptId}/relations:
    get:
      tags:
        - V2
      summary: >-
        List concept relations between concepts in the platform.

        MUST be above ListConcepts so that if concept_id is empty this will
        still match

        /concepts/relations to list all the concept relations in the app.
      operationId: V2_ListConceptRelations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            The subject concept id in your app to get all the relationships for.

            Leave as an empty string (GET /concepts/relations) to list ALL the
            relations in the app.


            When listing all the relations it will only return one direction of
            the relationship

            with the predicate acting on the subject and not the inverse like is
            done when providing a

            concept_id so that we can return a reliable page size always.


            When providing a concept_id, if a hyponym is present in the DB such
            as:

            'honey' (subject), 'hyponym' (predicate for "is a kind of"), 'food'
            (object)

            then you can list the concept relations for 'honey' and get hyponym
            predicate with 'food'

            object.

            But you can also list the concept relations for 'food' and it will
            return the same hyponym

            relationship with 'honey' as object and 'hypernym' as predicate.

            Synonyms by nature are symmetrical relationships so either side can
            be the concept_id (subject)

            when listing the relations.
          name: conceptId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            If predicate is provided then only list relations with that
            predicate.


            Note that if no subject is set in concept_id and predicate is set to

            'hypernym', then it will return any stored hyponyms as hypernyms
            with

            just the subject and object swapped since they are reversed
            relations.


            Valid predicates are:

            - 'hypernym'

            - 'hyponym'

            - 'synonym'
          name: predicate
          in: query
          required: false
          schema:
            type: string
        - description: >-
            If knowledge_graph_id is provided then just list relations from that
            knowledge graph.

            If not provided then list relations from all knowledge graphs
            including the global one for this

            app one (ie. knowledge_graph "") and any specific ones in the app.
          name: knowledgeGraphId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: >-
        Post concept relations to create relations between concepts in the
        platform.
      operationId: V2_DeleteConceptRelations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: The concept to delete relationship for.
          name: conceptId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteConceptRelationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: >-
        Post concept relations to create relations between concepts in the
        platform.
      operationId: V2_PostConceptRelations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: The subject concept id you're going to add relations for.
          name: conceptId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostConceptRelationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets:
    get:
      tags:
        - V2
      summary: List all the datasets.
      operationId: V2_ListDatasets
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the app
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: If neither sort option is set to true, will sort by modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the external id
          name: sortById
          in: query
          required: false
          schema:
            type: boolean
        - description: 'Filtering options:'
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter datasets by bookmark. If set, only return bookmarked
            datasets. Otherwise none bookmarked datasets only.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the dataset:
              - id
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: |-
            Fuzzy filter on dataset ID
            Deprecated: use search instead.
          name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete one or more datasets in a single request.
      operationId: V2_DeleteDatasets
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteDatasetsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: |-
        Add datasets to an app.
        The process is atomic, i.e. either all or no datasets are added.
        If there is an error for one dataset,
        the process will stop, revert the transaction and return the error.
      operationId: V2_PostDatasets
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostDatasetsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: |-
        Patch one or more datasets.
        The process is atomic, i.e. either all or no datasets are patched.
        If there is an error for one dataset,
        the process will stop, revert the transaction and return the error.
      operationId: V2_PatchDatasets
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchDatasetsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}:
    get:
      tags:
        - V2
      summary: Get a specific dataset.
      operationId: V2_GetDataset
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleDatasetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/inputs:
    get:
      tags:
        - V2
      summary: List all the dataset inputs in a dataset.
      operationId: V2_ListDatasetInputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete one or more dataset inputs in a single request.
      operationId: V2_DeleteDatasetInputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteDatasetInputsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: |-
        Add dataset inputs to a dataset.
        The process is not atomic, i.e. if there are errors with some dataset
        inputs, others might still be added. The response reports
          - SUCCESS if all dataset inputs were added,
          - MIXED_STATUS if only some dataset inputs were added, and
          - FAILURE if no dataset inputs were added.
        Each individual dataset input in the response has the status set to
        indicate if it was successful or if there was an error.
      operationId: V2_PostDatasetInputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostDatasetInputsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/inputs/{inputId}:
    get:
      tags:
        - V2
      summary: Get a specific dataset input.
      operationId: V2_GetDatasetInput
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset input by id.
          name: inputId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleDatasetInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/versions:
    get:
      tags:
        - V2
      summary: List all the dataset versions.
      operationId: V2_ListDatasetVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete one or more dataset versions in a single request.
      operationId: V2_DeleteDatasetVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteDatasetVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add dataset versions to a dataset.
      operationId: V2_PostDatasetVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostDatasetVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more dataset versions.
      operationId: V2_PatchDatasetVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchDatasetVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/versions/{datasetVersionId}:
    get:
      tags:
        - V2
      summary: Get a specific dataset version.
      operationId: V2_GetDatasetVersion
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset version by id.
          name: datasetVersionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleDatasetVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/versions/{datasetVersionId}/exports:
    put:
      tags:
        - V2
      summary: Create export of a dataset version.
      operationId: V2_PutDatasetVersionExports
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset version by id.
          name: datasetVersionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutDatasetVersionExportsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetVersionExportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/versions/{datasetVersionId}/metrics:
    get:
      tags:
        - V2
      operationId: V2_ListDatasetVersionMetricsGroups
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset by id.
          name: datasetId
          in: path
          required: true
          schema:
            type: string
        - description: Identify dataset version by id.
          name: datasetVersionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            Filter by parent path. Multiple parent paths are OR-ed. Empty list
            results in no filter.
          name: parentPaths
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Filter by parent type. Multiple types are OR-ed. Empty list results
            in no filter.

             - INPUT_TYPE: Group data examples by input type.
            Examples: images, videos, text, audio.
             - CONCEPT_ID: Group data examples by concept ID.
            Examples: inputs with cat concept, inputs with dog concept.
             - CONCEPTS_COUNT: Group data examples by concepts count.
            Examples: inputs with 20 concepts, inputs with 21 concepts.
             - BOUNDING_BOXES_COUNT: Group data examples by bounding boxes count.
            Examples: inputs with 20 bounding boxes, inputs with 21 bounding
            boxes.
             - POLYGONS_COUNT: Group data examples by polygons count.
            Examples: inputs with 20 polygons, inputs with 21 polygons.
             - POINTS_COUNT: Group data examples by points count.
            Examples: inputs with 20 points, inputs with 21 points.
             - MASKS_COUNT: Group data examples by masks count.
            Examples: inputs with 20 masks, inputs with 21 masks.
             - PIXELS_COUNT: Group data examples by pixels count.
            In order to reduce the number of groups, we use bins.

            Examples for bin size = 400: inputs with [200000, 200400) pixels,
            inputs with [200400, 200800) pixels.
             - ASPECT_RATIO: Group data examples by aspect ratio.
            In order to reduce the number of groups, we use bins.

            Examples for bin size = 0.1: inputs with [0.5, 0.6) aspect ratio,
            inputs with [0.6, 0.7) aspect ratio.
          name: types
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET
                - INPUT_TYPE
                - CONCEPT_ID
                - CONCEPTS_COUNT
                - BOUNDING_BOXES_COUNT
                - POLYGONS_COUNT
                - POINTS_COUNT
                - MASKS_COUNT
                - PIXELS_COUNT
                - ASPECT_RATIO
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/apiMultiDatasetVersionMetricsGroupResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/duplications:
    post:
      tags:
        - V2
      summary: >-
        PostAppDuplications starts async app duplication jobs which copy
        resources

        (inputs, annotations, models etc) from one application to another. It
        can

        also create the destination application if it does not exist, with
        fields

        (description, metadata etc) copied from the source application.
      operationId: V2_PostAppDuplications
      description: >-
        A duplication job can be started by any user that can read from the
        source

        application (the target of this call) and can create and write to the

        destination application. The duplication is associated with the user
        that

        created it, so in order to read the status and progress of the job, that

        user's ID has to be used in the call to GetAppDuplication, which might
        be

        different to the source application owner ID in this call.
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostAppDuplicationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAppDuplicationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/evaluations:
    get:
      tags:
        - V2
      operationId: V2_ListEvaluations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            If true, sort in ascending order, otherwise sort in descending
            order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by application id
          name: sortByAppId
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.macro_avg_roc_auc
          name: sortByRocAuc
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.f1
          name: sortByF1
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by when the metric was created
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.mean_avg_precision_iou_50
          name: sortByMeanAvgPrecision
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.macro_avg_precision
          name: sortByPrecision
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.macro_avg_recall
          name: sortByRecall
          in: query
          required: false
          schema:
            type: boolean
        - name: sortByModelId
          in: query
          required: false
          schema:
            type: boolean
        - name: sortByEvalDatasetId
          in: query
          required: false
          schema:
            type: boolean
        - name: sortByTrainDatasetId
          in: query
          required: false
          schema:
            type: boolean
        - description: Filter on model type id
          name: modelTypeId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter on dataset ID of the dataset version specified in the metric
            version
          name: evalDatasetIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Filter on dataset ID of the dataset version specified by the model
            version
          name: trainDatasetIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter on concept IDs specified in the modele version's output_info
          name: conceptIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Whether to show failed metrics, defaults to false
          name: showFailedMetrics
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      operationId: V2_PostEvaluations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostEvaluationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/evaluations/{evaluationId}:
    get:
      tags:
        - V2
      operationId: V2_GetEvaluation
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: evaluationId
          in: path
          required: true
          schema:
            type: string
        - name: fields.confusionMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.cooccurrenceMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.labelCounts
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.binaryMetrics
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.testSet
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByArea
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByClass
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs:
    get:
      tags:
        - V2
      summary: List all the inputs.
      operationId: V2_ListInputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: |-
            Status code from internal codes.

             - ZERO: to be revised and greatly expanded
             - SUCCESS: Generic
             - MOVED: Resource moved. Respond with Http status 307 and add new Location header to response
             - TEAPOT: SUCCESS_WARNING_API_DEPRECATED = 10001;
            SUCCESS_WARNING_CLIENT_DEPRECATED = 10002;
             - CONN_ACCOUNT_ISSUES: Clarifai Connection Codes: 11xxx

            expired cc, still in trial, feature not supported in your tier
             - CONN_TOKEN_INVALID: invalid auth token used. Deprecated: we should return CONN_KEY_INVALID instead now in all cases.
             - CONN_CREDENTIALS_INVALID: invalid auth credentials
             - CONN_EXCEED_HOURLY_LIMIT: throttle hourly limit exceeded
             - CONN_EXCEED_MONTHLY_LIMIT: throttle monthly limit exceeded
             - CONN_THROTTLED: throttler and billing stuff
             - CONN_EXCEEDS_LIMITS: throttler and billing stuff
             - CONN_INSUFFICIENT_SCOPES: api key has insufficient permissions
             - CONN_KEY_INVALID: api key is invalid
             - CONN_KEY_NOT_FOUND: api key not found
             - CONN_BAD_REQUEST_FORMAT: multipart form parsing, broken json, etc
             - CONN_DOES_NOT_EXIST: when path is bad
             - CONN_INVALID_REQUEST: something wrong with a header
             - CONN_METHOD_NOT_ALLOWED: when a request method is not allowed
             - CONN_NO_GDPR_CONSENT: lack GDPR consent
             - CONN_AUTH_METHOD_DISABLED: authentication method is disabled
             - MODEL_TRAINED: Model/Custom Training related 20xxx

            Custom model has been already trained.
             - MODEL_TRAINING: Custom model is currently training.
             - MODEL_UNTRAINED: Custom model has not yet been trained.
             - MODEL_QUEUED_FOR_TRAINING: Custom model is currently in queue for training, waiting on assets to process first.
             - MODEL_TRAINING_FAILED: generic err msg for any type of model training err.
             - MODEL_TRAINING_NO_DATA: Custom model training had no data.  FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_NO_POSITIVES: Custom model training had no positive examples. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS: Custom model training was ONE_VS_N but with a single class. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_TIMED_OUT: Training took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_WAITING_ERROR: Training got error waiting on asset pipeline to finish. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_UNKNOWN_ERROR: Training threw an unknown exception.
             - MODEL_TRAINING_MSG_REDELIVER: Training message was redelivered. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_INSUFFICIENT_DATA: Training got error due to insufficient labelled data. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_INVALID_PARAMS: FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED: Training is stopped because too much data was dropped. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
             - MODEL_EVALUATION_TIMED_OUT: Evaluation took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_WAITING_ERROR: Evaluation got error waiting on asset pipeline to finish.FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_UNKNOWN_ERROR: EVALUATION THREW AN UNKNOWN EXCEPTION.
             - MODEL_EVALUATION_MSG_REDELIVER: Eval message was redelivered. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_NEED_LABELS: Don't have enough concepts labelled to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_NEED_INPUTS: Don't have enough inputs per concept to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
             - MODEL_EVALUATION_FAILED: Generic err code for eval failure.
             - MODEL_DEPLOYMENT_FAILED: Used when inference coordinator failed to deploy spire and throws an error
             - MODEL_DEPLOYING: Used when calling the inference coordinator to deploy a spire
             - MODEL_QUEUED_FOR_DEPLOYMENT: Used when training is completed
             - MODEL_NOT_DEPLOYED: Used when model spire deployment is manually taken down or due to inactivity
             - MODEL_REFERENCE_INVALID_ARGUMENT: Used when a model reference field is not set properly
             - MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT: Used when a model example input field is not set properly
             - MODEL_EXPORTED: Model Export status codes
             - WORKFLOW_NO_MATCHING_INPUT: specified model input not in workflow
             - WORKFLOW_REQUIRE_TRAINED_MODEL: specified model must be trained
             - WORKFLOW_INVALID_ARGUMENT: error in the request somewhere
             - WORKFLOW_INVALID_REQUEST: error in the request somewhere
             - CONCEPT_MODIFY_SUCCESS: Concept related 23xxx
             - ANNOTATION_SUCCESS: Annotation related 24xxx
             - METADATA_INVALID_PATCH_ARGUMENTS: Metadata related 249xx
             - TRAINER_JOB_STATE_NONE: Training service related 25xxx
             - DATA_DUMP_SUCCESS: Data Dump related 251xx
             - DATA_DUMP_NO_DATA: DEPRECATED: Not used anymore. Now for an empty data dump, DATA_DUMP_SUCCESS is returned. To detect an empty data dump, check if the inptus count is 0.
             - APP_DUPLICATION_SUCCESS: Duplicate related 252xx
             - MODULE_DOES_NOT_EXIST: Module related codes 253xx
             - BULK_OPERATION_SUCCESS: Bulk Operation related codes 254xx
             - RUNNER_DOES_NOT_EXIST: Runner related codes 256xx
             - INPUT_DOWNLOAD_SUCCESS: Input:Image related 30xxx
             - INPUT_DOWNLOAD_PENDING: when things are async, this is the default status.
             - INPUT_DOWNLOAD_FAILED: any type of error downloading and processing
             - INPUT_VIDEO_DOWNLOAD_SUCCESS: Input:Video related 31xxx -- Deprecated
             - INPUT_WRITES_DISABLED_FOR_MAINTENANCE: deprecate this one. Use REQUEST_DISABLED_FOR_MAINTENANCE
             - PREDICT_INVALID_REQUEST: API formatting issues 4000x
             - DATABASE_DUPLICATE_KEY: Other related 400xx
             - EXTERNAL_CONNECTION_ERROR: could not connect to external services
             - QUEUE_CONN_ERROR: Queue related errors 41xxx
             - SQS_OVERLIMIT: SQS related errors 411xx
             - SEARCH_INTERNAL_FAILURE: Search related errors 43xxxx
             - EVALUATION_QUEUED: Workflow evaluation err code
             - STRIPE_EVENT_ERROR: Stripe 44xxx
             - CACHE_MISS: Redis/Cache 45xxx
             - SIGNUP_EVENT_ERROR: Sift Science 46xxx
             - APP_COUNT_INVALID_MESSAGE: Application counts related errors 470xx
             - MP_DOWNLOAD_ERROR: Media processor related errors 471xx -- DEPRECATED
             - DATATIER_CONN_ERROR: DataTier related error 472xx
             - USER_CONSENT_FACE: User legal consent stauts related 50xxx
             - WORKER_MISSING: Workers 51xxx
             - COLLECTOR_MISSING: Collectors 52xxx
             - SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST: SSO 53xxx
             - TASK_IN_PROGRESS: Tasks 54xxx
            The task was created.
             - TASK_DONE: The task is completed.
             - TASK_WONT_DO: The task is marked as abandoned.
             - TASK_FAILED: An error occurred during add-task-annotations or add-auto-annotations pipeline.
             - TASK_IDLE: When an Auto Annotation task job has finished processing its last batch and is waiting for more dataset assets.
             - TASK_CONFLICT: The task operation is in conflict with the current state of the server.
             - TASK_NOT_IMPLEMENTED: Certain task-related scenarios are not implemented.
             - TASK_MISSING: Task was not found.
             - TASK_PERMISSION_DENIED: Not allowed to perform a task-related action.
             - LABEL_ORDER_PENDING: Label Order Related Status Code 55xxx
             - LICENSE_ACTIVE: License Related Status Code 600xx
             - LICENSE_DELETED: hidden state not reflected to users
             - PASSWORD_VALIDATION_SUCCESS: Password Related Status Code
             - FEATUREFLAG_CONFIG_NOT_FOUND: Feature flags status code
             - MAINTENANCE_SUCCESS: Maintenance status code
             - DATASET_VERSION_PENDING: Datasets 64xxx
            The dataset version is pending to be processed.
             - DATASET_VERSION_IN_PROGRESS: The dataset version is currently being processed.
             - DATASET_VERSION_READY: The dataset version is ready to be used.
             - DATASET_VERSION_FAILURE: An error occurred during the dataset version processing.
             - DATASET_VERSION_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version processing.
             - DATASET_VERSION_CONFLICT: An alteration to dataset version would create a conflict
             - DATASET_INPUT_SUCCESS: The dataset input was successfully added.
             - DATASET_INPUT_DUPLICATE: The dataset input is a duplicate.
            Deprecated: Unused.
             - DATASET_VERSION_EXPORT_SUCCESS: The dataset version export is completed.
             - DATASET_VERSION_EXPORT_PENDING: The dataset version is pending to be exported.
             - DATASET_VERSION_EXPORT_FAILED: An error occurred during the dataset version export.
             - DATASET_VERSION_EXPORT_IN_PROGRESS: The dataset version is currently being exported.
             - DATASET_VERSION_EXPORT_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version export.
             - JOB_QUEUED: Generic Job status codes
             - AUTH_MISSING_IDP_ASSOC: auth issues

            TODO: Knowledge graph related 80xxx
             - UPLOAD_IN_PROGRESS: Multipart uploading status codes
             - BILLING_INVALID_INFO: Billing related issues: 69xxx
             - INTERNAL_SERVER_ISSUE: Internal issues: 98xxx
             - CONN_UNCATEGORIZED: Uncategorized: 99xxx: move off as soon as known
             - BAD_REQUEST: Deprecated: migrate off to one of the internal issues
             - SERVER_ERROR: Deprecated: migrate off to one of the internal issues
          name: status.code
          in: query
          required: false
          schema:
            type: string
            enum:
              - ZERO
              - SUCCESS
              - MIXED_STATUS
              - FAILURE
              - TRY_AGAIN
              - NOT_IMPLEMENTED
              - MOVED
              - TEAPOT
              - CONN_ACCOUNT_ISSUES
              - CONN_TOKEN_INVALID
              - CONN_CREDENTIALS_INVALID
              - CONN_EXCEED_HOURLY_LIMIT
              - CONN_EXCEED_MONTHLY_LIMIT
              - CONN_THROTTLED
              - CONN_EXCEEDS_LIMITS
              - CONN_INSUFFICIENT_SCOPES
              - CONN_KEY_INVALID
              - CONN_KEY_NOT_FOUND
              - CONN_BAD_REQUEST_FORMAT
              - CONN_DOES_NOT_EXIST
              - CONN_INVALID_REQUEST
              - CONN_METHOD_NOT_ALLOWED
              - CONN_NO_GDPR_CONSENT
              - CONN_AUTH_METHOD_DISABLED
              - MODEL_TRAINED
              - MODEL_TRAINING
              - MODEL_UNTRAINED
              - MODEL_QUEUED_FOR_TRAINING
              - MODEL_UPLOADING
              - MODEL_UPLOADING_FAILED
              - MODEL_TRAINING_FAILED
              - MODEL_TRAINING_NO_DATA
              - MODEL_TRAINING_NO_POSITIVES
              - MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS
              - MODEL_TRAINING_TIMED_OUT
              - MODEL_TRAINING_WAITING_ERROR
              - MODEL_TRAINING_UNKNOWN_ERROR
              - MODEL_TRAINING_MSG_REDELIVER
              - MODEL_TRAINING_INSUFFICIENT_DATA
              - MODEL_TRAINING_INVALID_PARAMS
              - MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED
              - MODEL_MODIFY_SUCCESS
              - MODEL_MODIFY_PENDING
              - MODEL_MODIFY_FAILED
              - MODEL_DOES_NOT_EXIST
              - MODEL_PERMISSION_DENIED
              - MODEL_INVALID_ARGUMENT
              - MODEL_INVALID_REQUEST
              - MODEL_EVALUATED
              - MODEL_EVALUATING
              - MODEL_NOT_EVALUATED
              - MODEL_QUEUED_FOR_EVALUATION
              - MODEL_EVALUATION_TIMED_OUT
              - MODEL_EVALUATION_WAITING_ERROR
              - MODEL_EVALUATION_UNKNOWN_ERROR
              - MODEL_PREDICTION_FAILED
              - MODEL_EVALUATION_MSG_REDELIVER
              - MODEL_EVALUATION_NEED_LABELS
              - MODEL_EVALUATION_NEED_INPUTS
              - MODEL_EVALUATION_FAILED
              - MODEL_DEPLOYMENT_FAILED
              - MODEL_DEPLOYING
              - MODEL_QUEUED_FOR_DEPLOYMENT
              - MODEL_NOT_DEPLOYED
              - MODEL_REFERENCE_INVALID_ARGUMENT
              - MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT
              - MODEL_EXPORTED
              - MODEL_EXPORTING
              - MODEL_EXPORTING_FAILED
              - MODEL_EXPORT_PENDING
              - WORKFLOW_NO_MATCHING_INPUT
              - WORKFLOW_REQUIRE_TRAINED_MODEL
              - WORKFLOW_DUPLICATE
              - WORKFLOW_UNSUPPORTED_FORMAT
              - WORKFLOW_DOES_NOT_EXIST
              - WORKFLOW_PERMISSION_DENIED
              - WORKFLOW_INVALID_ARGUMENT
              - WORKFLOW_INVALID_RECIPE
              - WORKFLOW_INVALID_TEMPLATE
              - WORKFLOW_INVALID_GRAPH
              - WORKFLOW_INTERNAL_FAILURE
              - WORKFLOW_INVALID_REQUEST
              - WORKFLOW_MODIFY_SUCCESS
              - WORKFLOW_MODIFY_PENDING
              - WORKFLOW_MODIFY_FAILED
              - WORKFLOW_REINDEX_FAILED
              - CONCEPT_MODIFY_SUCCESS
              - CONCEPT_MODIFY_PENDING
              - CONCEPT_MODIFY_FAILED
              - ANNOTATION_SUCCESS
              - ANNOTATION_PENDING
              - ANNOTATION_FAILED
              - ANNOTATION_UNKNOWN_STATUS
              - ANNOTATION_INVALID_ARGUMENT
              - ANNOTATION_PERMISSION_DENIED
              - ANNOTATION_AWAITING_REVIEW
              - ANNOTATION_AWAITING_CONSENSUS_REVIEW
              - ANNOTATION_REVIEW_DENIED
              - ANNOTATION_MODIFY_SUCCESS
              - ANNOTATION_MODIFY_PENDING
              - ANNOTATION_MODIFY_FAILED
              - METADATA_INVALID_PATCH_ARGUMENTS
              - METADATA_PARSING_ISSUE
              - METADATA_MANIPULATION_ISSUE
              - TRAINER_JOB_STATE_NONE
              - TRAINER_JOB_STATE_QUEUED
              - TRAINER_JOB_STATE_RUNNING
              - TRAINER_JOB_STATE_COMPLETE
              - TRAINER_JOB_STATE_ERROR
              - DATA_DUMP_SUCCESS
              - DATA_DUMP_PENDING
              - DATA_DUMP_FAILED
              - DATA_DUMP_IN_PROGRESS
              - DATA_DUMP_NO_DATA
              - DATA_DUMP_UNEXPECTED_ERROR
              - DATA_DUMP_EXPORT_SUCCESS
              - DATA_DUMP_EXPORT_PENDING
              - DATA_DUMP_EXPORT_FAILED
              - DATA_DUMP_EXPORT_IN_PROGRESS
              - DATA_DUMP_EXPORT_UNEXPECTED_ERROR
              - APP_DUPLICATION_SUCCESS
              - APP_DUPLICATION_FAILED
              - APP_DUPLICATION_PENDING
              - APP_DUPLICATION_IN_PROGRESS
              - APP_DUPLICATION_INVALID_REQUEST
              - MODULE_DOES_NOT_EXIST
              - MODULE_PERMISSION_DENIED
              - MODULE_INVALID_ARGUMENT
              - MODULE_INVALID_REQUEST
              - BULK_OPERATION_SUCCESS
              - BULK_OPERATION_FAILED
              - BULK_OPERATION_PENDING
              - BULK_OPERATION_IN_PROGRESS
              - BULK_OPERATION_INVALID_REQUEST
              - BULK_OPERATION_CANCELLED
              - BULK_OPERATION_UNEXPECTED_ERROR
              - RUNNER_DOES_NOT_EXIST
              - RUNNER_PERMISSION_DENIED
              - RUNNER_INVALID_ARGUMENT
              - RUNNER_INVALID_REQUEST
              - RUNNER_NEEDS_RETRY
              - RUNNER_STREAM_START
              - RUNNER_STREAM_END
              - RUNNER_ITEM_CANCELLED
              - RUNNER_PROCESSING_FAILED
              - INPUT_DOWNLOAD_SUCCESS
              - INPUT_DOWNLOAD_PENDING
              - INPUT_DOWNLOAD_FAILED
              - INPUT_DOWNLOAD_IN_PROGRESS
              - INPUT_STATUS_UPDATE_FAILED
              - INPUT_DELETE_FAILED
              - INPUT_DUPLICATE
              - INPUT_UNSUPPORTED_FORMAT
              - INPUT_DOES_NOT_EXIST
              - INPUT_PERMISSION_DENIED
              - INPUT_INVALID_ARGUMENT
              - INPUT_OVER_LIMIT
              - INPUT_INVALID_URL
              - INPUT_MODIFY_SUCCESS
              - INPUT_MODIFY_PENDING
              - INPUT_MODIFY_FAILED
              - INPUT_STORAGE_HOST_FAILED
              - ALL_INPUT_INVALID_BYTES
              - INPUT_CLUSTER_SUCCESS
              - INPUT_CLUSTER_PENDING
              - INPUT_CLUSTER_FAILED
              - INPUT_CLUSTER_IN_PROGRESS
              - INPUT_REINDEX_SUCCESS
              - INPUT_REINDEX_PENDING
              - INPUT_REINDEX_FAILED
              - INPUT_REINDEX_IN_PROGRESS
              - INPUT_VIDEO_DOWNLOAD_SUCCESS
              - INPUT_VIDEO_DOWNLOAD_PENDING
              - INPUT_VIDEO_DOWNLOAD_FAILED
              - INPUT_VIDEO_DUPLICATE
              - INPUT_VIDEO_UNSUPPORTED_FORMAT
              - INPUT_VIDEO_DOES_NOT_EXIST
              - INPUT_VIDEO_PERMISSION_DENIED
              - INPUT_VIDEO_INVALID_ARGUMENT
              - INPUT_VIDEO_OVER_LIMIT
              - INPUT_VIDEO_INVALID_URL
              - INPUT_VIDEO_MODIFY_SUCCESS
              - INPUT_VIDEO_MODIFY_PENDING
              - INPUT_VIDEO_MODIFY_FAILED
              - INPUT_VIDEO_STORAGE_HOST_FAILED
              - ALL_INPUT_VIDEOS_INVALID_BYTES
              - INPUT_VIDEO_PROCESSING_SUCCESS
              - INPUT_VIDEO_PROCESSING_PENDING
              - INPUT_VIDEO_PROCESSING_FAILED
              - INPUT_VIDEO_STORAGE_INCONSISTENCY
              - INPUT_VIDEO_STORAGE_FAILURE
              - INPUT_VIDEO_URL_GENERATION_FAILURE
              - INPUT_CONNECTION_FAILED
              - REQUEST_DISABLED_FOR_MAINTENANCE
              - INPUT_WRITES_DISABLED_FOR_MAINTENANCE
              - INPUT_INVALID_REQUEST
              - PREDICT_INVALID_REQUEST
              - SEARCH_INVALID_REQUEST
              - CONCEPTS_INVALID_REQUEST
              - STATS_INVALID_REQUEST
              - DATABASE_DUPLICATE_KEY
              - DATABASE_STATEMENT_TIMEOUT
              - DATABASE_INVALID_ROWS_AFFECTED
              - DATABASE_DEADLOCK_DETECTED
              - DATABASE_FAIL_TASK
              - DATABASE_FAIL_TO_GET_CONNECTIONS
              - DATABASE_TOO_MANY_CLIENTS
              - DATABASE_CONSTRAINT_VIOLATED
              - DATABASE_CANCELED
              - ASYNC_WORKER_MULTI_ERRORS
              - RPC_REQUEST_QUEUE_FULL
              - RPC_SERVER_UNAVAILABLE
              - RPC_REQUEST_TIMEOUT
              - RPC_MAX_MESSAGE_SIZE_EXCEEDED
              - RPC_CANCELED
              - RPC_UNKNOWN_METHOD
              - REQUEST_CANCELED_BY_USER
              - CLUSTER_INTERNAL_FAILURE
              - EXTERNAL_CONNECTION_ERROR
              - QUERY_INVALID_SYNTAX
              - QUEUE_CONN_ERROR
              - QUEUE_CLOSE_REQUEST_TIMEOUT
              - QUEUE_CONN_CLOSED
              - QUEUE_PUBLISH_ACK_TIMEOUT
              - QUEUE_PUBLISH_ERROR
              - QUEUE_SUBSCRIPTION_TIMEOUT
              - QUEUE_SUBSCRIPTION_ERROR
              - QUEUE_MARSHALLING_FAILED
              - QUEUE_UNMARSHALLING_FAILED
              - QUEUE_MAX_MSG_REDELIVERY_EXCEEDED
              - QUEUE_ACK_FAILURE
              - SQS_OVERLIMIT
              - SQS_INVALID_RECEIPT_HANDLE
              - SQS_UNKNOWN
              - SEARCH_INTERNAL_FAILURE
              - SEARCH_PROJECTION_FAILURE
              - SEARCH_PREDICTION_FAILURE
              - SEARCH_BY_NOT_FULLY_INDEXED_INPUT
              - SAVED_SEARCH_MODIFY_FAILED
              - SEARCH_COUNTS_UNAVAILABLE
              - EVALUATION_QUEUED
              - EVALUATION_IN_PROGRESS
              - EVALUATION_SUCCESS
              - EVALUATION_FAILED_TO_RETRIEVE_DATA
              - EVALUATION_INVALID_ARGUMENT
              - EVALUATION_FAILED
              - EVALUATION_PENDING
              - EVALUATION_TIMED_OUT
              - EVALUATION_UNEXPECTED_ERROR
              - EVALUATION_MIXED
              - STRIPE_EVENT_ERROR
              - CACHE_MISS
              - REDIS_SCRIPT_EXITED_WITH_FAILURE
              - REDIS_STREAM_ERR
              - REDIS_NO_CONSUMERS
              - REDIS_STREAM_BACKOFF
              - SIGNUP_EVENT_ERROR
              - SIGNUP_FLAGGED
              - FILETYPE_UNSUPPORTED
              - APP_COUNT_INVALID_MESSAGE
              - APP_COUNT_UPDATE_INCREMENT_FAILED
              - APP_COUNT_REBUILD_FAILED
              - APP_COUNT_INTERNAL_FAILURE
              - MP_DOWNLOAD_ERROR
              - MP_RESOLVE_DNS_ERROR
              - MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR
              - MP_IMAGE_DECODE_ERROR
              - MP_INVALID_ARGUMENT
              - MP_IMAGE_PROCESSING_ERROR
              - DATATIER_CONN_ERROR
              - USER_CONSENT_FACE
              - WORKER_MISSING
              - WORKER_ACTIVE
              - WORKER_INACTIVE
              - COLLECTOR_MISSING
              - COLLECTOR_ACTIVE
              - COLLECTOR_INACTIVE
              - COLLECTOR_POST_INPUT_FAILED
              - SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST
              - TASK_IN_PROGRESS
              - TASK_DONE
              - TASK_WONT_DO
              - TASK_FAILED
              - TASK_IDLE
              - TASK_CONFLICT
              - TASK_NOT_IMPLEMENTED
              - TASK_MISSING
              - TASK_PERMISSION_DENIED
              - TASK_ASSIGNMENT_SUCCESS
              - TASK_ASSIGNMENT_PENDING
              - TASK_ASSIGNMENT_AWAITING_REVIEW
              - TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW
              - LABEL_ORDER_PENDING
              - LABEL_ORDER_IN_PROGRESS
              - LABEL_ORDER_SUCCESS
              - LABEL_ORDER_CANCELED
              - LICENSE_ACTIVE
              - LICENSE_DOES_NOT_EXIST
              - LICENSE_NEED_UPDATE
              - LICENSE_EXPIRED
              - LICENSE_REVOKED
              - LICENSE_DELETED
              - LICENSE_VOLUME_EXCEEDED
              - PASSWORD_VALIDATION_SUCCESS
              - PASSWORD_VALIDATION_FAILED
              - PASSWORDPOLICY_INVALID_ARGUMENT
              - FEATUREFLAG_CONFIG_NOT_FOUND
              - FEATUREFLAG_INVALID_ARGUMENT
              - FEATUREFLAG_BLOCKED
              - MAINTENANCE_SUCCESS
              - MAINTENANCE_FAILED
              - DATASET_VERSION_PENDING
              - DATASET_VERSION_IN_PROGRESS
              - DATASET_VERSION_READY
              - DATASET_VERSION_FAILURE
              - DATASET_VERSION_UNEXPECTED_ERROR
              - DATASET_VERSION_CONFLICT
              - DATASET_INPUT_SUCCESS
              - DATASET_INPUT_DUPLICATE
              - DATASET_VERSION_EXPORT_SUCCESS
              - DATASET_VERSION_EXPORT_PENDING
              - DATASET_VERSION_EXPORT_FAILED
              - DATASET_VERSION_EXPORT_IN_PROGRESS
              - DATASET_VERSION_EXPORT_UNEXPECTED_ERROR
              - JOB_QUEUED
              - JOB_RUNNING
              - JOB_COMPLETED
              - JOB_FAILED
              - JOB_CANCELLED
              - JOB_UNEXPECTED_ERROR
              - JOB_CONFLICT
              - AUTH_MISSING_IDP_ASSOC
              - LIST_OBJECTS_FAILED
              - ARCHIVE_EXTRACT_FAILED
              - UPLOAD_IN_PROGRESS
              - UPLOAD_DONE
              - UPLOAD_FAILED
              - UPLOAD_UNEXPECTED_ERROR
              - UPLOAD_EXPIRED
              - UPLOAD_CANCELED
              - UPLOAD_CONFLICT
              - BILLING_INVALID_INFO
              - INTERNAL_SERVER_ISSUE
              - INTERNAL_FETCHING_ISSUE
              - INTERNAL_DATABASE_ISSUE
              - INTERNAL_CONTEXT_CANCELED
              - INTERNAL_UNEXPECTED_TIMEOUT
              - INTERNAL_UNEXPECTED_V1
              - INTERNAL_UNEXPECTED_PANIC
              - INTERNAL_UNEXPECTED_SPIRE
              - INTERNAL_REDIS_UNAVAILABLE
              - INTERNAL_RESOURCE_EXHAUSTED
              - INTERNAL_REDIS_UNCATEGORIZED
              - INTERNAL_AWS_UNCATEGORIZED
              - INTERNAL_AZURE_UNCATEGORIZED
              - CONN_UNCATEGORIZED
              - MODEL_UNCATEGORIZED
              - INPUT_UNCATEGORIZED
              - ANNOTATION_UNCATEGORIZED
              - BILLING_UNCATEGORIZED
              - INTERNAL_UNCATEGORIZED
              - BAD_REQUEST
              - SERVER_ERROR
            default: ZERO
        - description: A short description of the error.
          name: status.description
          in: query
          required: false
          schema:
            type: string
        - description: |-
            More details of the given error.
            These details may be exposed to non-technical users.
            For technical details, try to use developer_notes field.
          name: status.details
          in: query
          required: false
          schema:
            type: string
        - description: |-
            For some environment we may return a stack trace to help debug
            any issues.
          name: status.stackTrace
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: specifically for long running jobs
          name: status.percentCompleted
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: if status is pending, how much time is remaining (in seconds)
          name: status.timeRemaining
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            A request ID may be present, to help monitoring and tracking
            requests
          name: status.reqId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Internal Annotation (do not set in production, for internal Clarifai
            use only).
          name: status.internalDetails
          in: query
          required: false
          schema:
            type: string
        - description: New location for the resource. Used to set response Location header.
          name: status.redirectInfo.url
          in: query
          required: false
          schema:
            type: string
        - description: Resource type
          name: status.redirectInfo.resourceType
          in: query
          required: false
          schema:
            type: string
        - description: Old resource id
          name: status.redirectInfo.oldResourceId
          in: query
          required: false
          schema:
            type: string
        - description: New resource id
          name: status.redirectInfo.newResourceId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Notes for developer.

            These notes are rather technical details for developers how to
            interpret the status,

            e.g. why an error occurred and how to avoid getting the error.
          name: status.developerNotes
          in: query
          required: false
          schema:
            type: string
        - name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: |-
        Delete multiple inputs in one request.
        This call is asynchronous.
      operationId: V2_DeleteInputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_DeleteInputsBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: |-
        Add 1 or more input to an app.
        The actual inputs processing is asynchronous.
      operationId: V2_PostInputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostInputsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more inputs.
      operationId: V2_PatchInputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchInputsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/annotations:
    delete:
      tags:
        - V2
      summary: Delete multiple annotations in one request.
      operationId: V2_DeleteAnnotations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_DeleteAnnotations3Body'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/data_sources:
    post:
      tags:
        - V2
      summary: >-
        Initiates retrieval of inputs from cloud storage from a user provided
        data source.

        Will create and return an inputs-add-job for tracking progress.

        Archives will be extracted and their contents will be processed as
        inputs.
      operationId: V2_PostInputsDataSources
      description: >-
        The cloud URL will be treated as a filter prefix. For example
        s3:/bucket/images_folder/abc will process

        files in the images_folder beginning with abc or in a subfolder
        beginning with abc.

        For example:

        bucket/images_folder/abcImage.png

        bucket/images_folder/abc-1/Data.zip


        If given URL is for a private bucket or file, then credentials should be
        provided to access the bucket.

        Credentials should include rights to list the objects in the bucket,
        except when pointed directly at a file archive,

        in which case it only requires rights to access that particular file.
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostInputsDataSourcesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/jobs/add:
    get:
      tags:
        - V2
      summary: List all the inputs add jobs
      operationId: V2_ListInputsAddJobs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/jobs/add/{id}:
    get:
      tags:
        - V2
      summary: Get the input add job details by ID
      operationId: V2_GetInputsAddJob
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: id of add inputs job
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: cancel the input add job by ID
      operationId: V2_CancelInputsAddJob
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: id of add inputs job to be cancelled
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2CancelInputsAddJobRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/jobs/extraction:
    get:
      tags:
        - V2
      summary: List all the input extraction jobs
      operationId: V2_ListInputsExtractionJobs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsExtractionJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      operationId: V2_CancelInputsExtractionJobs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2CancelInputsExtractionJobsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsExtractionJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/jobs/extraction/{inputsExtractionJobId}:
    get:
      tags:
        - V2
      summary: Get the input extraction job details by ID
      operationId: V2_GetInputsExtractionJob
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: inputsExtractionJobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputsExtractionJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/searches:
    post:
      tags:
        - V2
      summary: Execute a search over inputs
      operationId: V2_PostInputsSearches
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostInputsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch saved inputs searches by ids.
      operationId: V2_PatchInputsSearches
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_PatchAnnotationsSearchesBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/status:
    get:
      tags:
        - V2
      summary: Get input count per status.
      operationId: V2_GetInputCount
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/stream:
    get:
      tags:
        - V2
      summary: Streams all the inputs starting from oldest assets.
      operationId: V2_StreamInputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 20.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: lastId
          in: query
          required: false
          schema:
            type: string
        - description: |-
            By default, the endpoint return inputs by the time when it is added.
            If this is set to true, we will return inputs by id.
          name: orderById
          in: query
          required: false
          schema:
            type: boolean
        - name: descending
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/uploads:
    post:
      tags:
        - V2
      summary: |-
        Start uploading a file archive containing inputs.
        Will create and return an inputs-add-job for tracking progress.
      operationId: V2_PostInputsUploads
      description: >-
        Associated inputs-add-job contains an upload id which should be
        completed through `PutUploadContentParts` endpoint.

        Completing the upload will automatically begin unpacking the archive and
        uploading the contents as inputs.
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostInputsUploadsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputsAddJobResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/{inputId}:
    get:
      tags:
        - V2
      summary: Get a specific input from an app.
      operationId: V2_GetInput
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: inputId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single input asynchronously.
      operationId: V2_DeleteInput
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: inputId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/{inputId}/annotations/{annotationId}:
    get:
      tags:
        - V2
      summary: Get a specific annotation from an app.
      operationId: V2_GetAnnotation
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: inputId
          in: path
          required: true
          schema:
            type: string
        - name: annotationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single annotation.
      operationId: V2_DeleteAnnotation
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: inputId
          in: path
          required: true
          schema:
            type: string
        - name: annotationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/{inputId}/video_manifest:
    get:
      tags:
        - V2
      summary: Get a video input manifest.
      operationId: V2_GetInputVideoManifest
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: inputId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetVideoManifestResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/installed_module_versions:
    get:
      tags:
        - V2
      summary: List installed modules vesrions for an app.
      operationId: V2_ListInstalledModuleVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInstalledModuleVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: >-
        Uninstall an installed module version which will deploy the specific
        ModuleVersion to the app

        in the url.

        This cleaned up any associated caller keys so needs the Keys_Delete
        scope.
      operationId: V2_DeleteInstalledModuleVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteInstalledModuleVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: >-
        Install a new module version which will deploy the specific
        ModuleVersion to the app in the url.
      operationId: V2_PostInstalledModuleVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostInstalledModuleVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInstalledModuleVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/installed_module_versions/{installedModuleVersionId}:
    get:
      tags:
        - V2
      summary: Get installed modules vesrions for an app.
      operationId: V2_GetInstalledModuleVersion
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: the ID to get of the install module version.
          name: installedModuleVersionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleInstalledModuleVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/installed_module_versions/{installedModuleVersionId}/key:
    post:
      tags:
        - V2
      summary: >-
        Assign a key that the caller owns to be used when accessing this
        installed module version

        If this endpoint is called with a different key then it overwrites what
        is there.
      operationId: V2_PostInstalledModuleVersionsKey
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            the ID to get of the install module version.


            Note(zeiler): we don't provide a key to create since it's always
            deterministic.
             we'll create a PAT, owned by the caller with the scopes that the module requests.
             in the future if we want we can pass in a Key key = 3; field so that the caller
             can adjust the scopes, but for now that doesn't seem necessary.
          name: installedModuleVersionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostInstalledModuleVersionsKeyRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/keys:
    get:
      tags:
        - V2
      summary: List keys by app_id
      operationId: V2_ListAppKeys
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/label_orders:
    get:
      tags:
        - V2
      summary: List label orders.
      operationId: V2_ListLabelOrders
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiLabelOrderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: |-
        Delete multiple label orders in one request.
        this do not change task status
      operationId: V2_DeleteLabelOrders
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteLabelOrdersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add Label orders.
      operationId: V2_PostLabelOrders
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostLabelOrdersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiLabelOrderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more label orders.
      operationId: V2_PatchLabelOrders
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchLabelOrdersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiLabelOrderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/label_orders/{labelOrderId}:
    get:
      tags:
        - V2
      summary: Get a label order.
      operationId: V2_GetLabelOrder
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: labelOrderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleLabelOrderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models:
    get:
      tags:
        - V2
      summary: List all the models.
      operationId: V2_ListModels
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars, outputs, presets
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the name
          name: sortByName
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of training inputs
          name: sortByNumInputs
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to order by the modified_at time of the latest model
            version.

            If none of the sort options is set to true, will sort by
            modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by count of stars
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filtering options:

            Filter models by the specific model_type_id. See ListModelTypes for
            the list of ModelType.Id's

            supported.
          name: modelTypeId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            If true, we only return models that have the status MODEL_TRAINED,
            which includes non-trainable model types.
          name: trainedOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            The list of input fields to the model.

            For example, you can specify 'image', which will return models that
            make inferences on images like visual-classifier models.
          name: inputFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            The list of output fields to the model.

            For example, you can specify 'regions[...].data.concepts', which
            will return visual-detector models.
          name: outputFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter by the license of the model version
          name: license
          in: query
          required: false
          schema:
            type: string
        - description: If true, we only return models that are handpicked by clarifai staff
          name: featuredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            If true, we only return models that are starred by the requesting
            user
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: List of toolkit tags to filter by
          name: toolkits
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of use_case tags to filter by
          name: useCases
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of language tags to filter by
          name: languages
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Old API behavior resulted in returning clarifai main models when
            calling ListModels while scoped to an app. While we transition

            away from that, we can use this flag to not always fetch clarifai
            main models, unless that is the app we are explicitly listing for.
          name: dontFetchFromMain
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter models by bookmark. If set, only return bookmarked models.
            Otherwise none bookmarked models only.

            Note: you can not filter `trained_only` and bookmark at the same
            time.

            When filter by bookmark, we will return trained and untrained
            models.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the model:
              - id
              - name
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Query name, description and id fields, that can contain the words in
            the query string. Does NOT support wildcards - full words only.
            Supports operators "OR" and "-" as NOT.

            Deprecated: use search instead.
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the description and id of the model. This supports
            wildcard queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: name
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Extends the name filter to include the user_id of the application
            owner that the model belongs to.

            Deprecated: use search instead of name.
          name: filterByUserId
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple models in one request.
      operationId: V2_DeleteModels
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_DeleteCollectorsBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add a models to an app.
      operationId: V2_PostModels
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more models.
      operationId: V2_PatchModels
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/ids:
    patch:
      tags:
        - V2
      summary: Patch one or more models ids.
      operationId: V2_PatchModelIds
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelIdsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/searches:
    post:
      tags:
        - V2
      summary: |-
        Search over the models to find one or more you're looking for.
        This leverage the "body" parameter because we also have page and
        per_page as url query param variables in this request.
      operationId: V2_PostModelsSearches
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelsSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/types:
    get:
      tags:
        - V2
      summary: >-
        List all the model types available in the platform.

        This MUST be above ListModels so that the /models/types endpoint takes
        precedence.
      operationId: V2_ListModelTypes
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelTypeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/types/{modelTypeId}:
    get:
      tags:
        - V2
      summary: Get a specific model type.
      operationId: V2_GetModelType
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: The specific ModelType.Id you want to retrieve.
          name: modelTypeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelTypeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}:
    get:
      tags:
        - V2
      summary: Get a specific model from an app.
      operationId: V2_GetModel
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: |-
            This is included so that we can re-use this request for multiple
            rpcs with and without the version_id.
          name: versionId
          in: query
          required: false
          schema:
            type: string
        - name: language
          in: query
          required: false
          schema:
            type: string
        - name: trainedBefore
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars, outputs, presets
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single model.
      operationId: V2_DeleteModel
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/check_consents:
    patch:
      tags:
        - V2
      summary: Update model check consents
      operationId: V2_PatchModelCheckConsents
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: the model id
          name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelCheckConsentsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelCheckConsentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/concepts:
    get:
      tags:
        - V2
      summary: List models concepts.
      operationId: V2_ListModelConcepts
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Model id
          name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Model version Id. Optional, if not provided latest model version is
            used.
          name: versionId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the concept:
              - id
              - name

            Keywords are used for partial prefix-matching (so searching for
            "larif" matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/inputs:
    get:
      tags:
        - V2
      summary: 'Deprecated: Unmaintained and ideally replaced with usage of datasets'
      operationId: V2_ListModelInputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/languages:
    patch:
      tags:
        - V2
      summary: Update model languages tags
      operationId: V2_PatchModelLanguages
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelLanguagesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelLanguageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/output_info:
    get:
      tags:
        - V2
      summary: |-
        Get a the output info for a given model_id or model_id/version_id
        combo.
      operationId: V2_GetModelOutputInfo
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: |-
            This is included so that we can re-use this request for multiple
            rpcs with and without the version_id.
          name: versionId
          in: query
          required: false
          schema:
            type: string
        - name: language
          in: query
          required: false
          schema:
            type: string
        - name: trainedBefore
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars, outputs, presets
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/outputs:
    post:
      tags:
        - V2
      summary: Get predicted outputs from the model.
      operationId: V2_PostModelOutputs3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_PostModelOutputs3Body'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiOutputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/outputs/generate:
    post:
      tags:
        - V2
      summary: |-
        TODO(zeiler): will need to
        Single request but streaming resopnses.
      operationId: V2_GenerateModelOutputs2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_PostModelOutputs3Body'
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GenerateModelOutputs2Response'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/publish:
    post:
      tags:
        - V2
      summary: PostModelVersionsPublish
      operationId: V2_PostModelVersionsPublish
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersionsPublishRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/references:
    get:
      tags:
        - V2
      summary: Lists model references tied to a particular model id.
      operationId: V2_ListModelReferences
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: Optional, defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Optional, defaults to 128 references per page.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelReferenceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/toolkits:
    patch:
      tags:
        - V2
      summary: Update model toolkits tags
      operationId: V2_PatchModelToolkits
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelToolkitsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelToolkitResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/unpublish:
    post:
      tags:
        - V2
      summary: PostModelVersionsUnPublish
      operationId: V2_PostModelVersionsUnPublish
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersionsUnPublishRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/usecases:
    patch:
      tags:
        - V2
      summary: Update model use_cases tags
      operationId: V2_PatchModelUseCases
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelUseCasesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelUseCaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions:
    get:
      tags:
        - V2
      summary: List all the models.
      operationId: V2_ListModelVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            Filtering options:

            To list only the model versions that have these concept ids present
            in them.
          name: conceptIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: To list only the model versions that have been trained.
          name: trainedOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the status code
          name: sortByStatusCode
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of training inputs
          name: sortByNumInputs
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to sort by the description
          name: sortByDescription
          in: query
          required: false
          schema:
            type: boolean
        - description: |-
            Whether to order by the created_at time
            If neither sort option is set to true, will sort by created_at.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Create a new model version to trigger training of the model.
      operationId: V2_PostModelVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: PatchModelVersions
      operationId: V2_PatchModelVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModelVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/time_estimate:
    post:
      tags:
        - V2
      summary: >-
        Get the training time estimate based off train request and estimated
        input count.
      operationId: V2_PostModelVersionsTrainingTimeEstimate
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PostModelVersionsTrainingTimeEstimateRequest
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTrainingTimeEstimateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{modelVersionId}/evaluations:
    get:
      tags:
        - V2
      summary: |-
        Deprecated, use GetEvaluation instead
        List the evaluation metrics for a model version.
      operationId: V2_ListModelVersionEvaluations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: modelVersionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Deprecated, use PostEvaluations instead
      operationId: V2_PostModelVersionEvaluations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: modelVersionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersionEvaluationsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{modelVersionId}/evaluations/{evaluationId}:
    get:
      tags:
        - V2
      summary: |-
        Deprecated, use GetEvaluation instead
        Get an evaluation metrics for a model version.
      operationId: V2_GetModelVersionEvaluation
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: modelVersionId
          in: path
          required: true
          schema:
            type: string
        - name: evaluationId
          in: path
          required: true
          schema:
            type: string
        - name: fields.confusionMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.cooccurrenceMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.labelCounts
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.binaryMetrics
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.testSet
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByArea
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByClass
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{modelVersionId}/input_examples:
    get:
      tags:
        - V2
      summary: ListModelVersionInputExamples
      operationId: V2_ListModelVersionInputExamples
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: id of model the example belongs to
          name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: specific version the example belongs to
          name: modelVersionId
          in: path
          required: true
          schema:
            type: string
        - description: Optional, defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Optional, defaults to 128 references per page.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelVersionInputExampleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{modelVersionId}/input_examples/{exampleId}:
    get:
      tags:
        - V2
      summary: GetModelVersionInputExample
      operationId: V2_GetModelVersionInputExample
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: id of model the example belongs to
          name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: specific version the example belongs to
          name: modelVersionId
          in: path
          required: true
          schema:
            type: string
        - description: Id of example to fetch
          name: exampleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionInputExampleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}:
    get:
      tags:
        - V2
      summary: Get a specific model from an app.
      operationId: V2_GetModelVersion
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single model.
      operationId: V2_DeleteModelVersion
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/concepts:
    get:
      tags:
        - V2
      summary: List models concepts.
      operationId: V2_ListModelConcepts2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Model id
          name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Model version Id. Optional, if not provided latest model version is
            used.
          name: versionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the concept:
              - id
              - name

            Keywords are used for partial prefix-matching (so searching for
            "larif" matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiConceptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/exports:
    get:
      tags:
        - V2
      summary: GetModelVersionExport
      operationId: V2_GetModelVersionExport
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionExportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    put:
      tags:
        - V2
      summary: Export a model
      operationId: V2_PutModelVersionExports
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionExportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/inputs:
    get:
      tags:
        - V2
      summary: 'Deprecated: Unmaintained and ideally replaced with usage of datasets'
      operationId: V2_ListModelInputs3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/metrics:
    get:
      tags:
        - V2
      summary: |-
        Deprecated: Use GetEvaluation instead
        Get the evaluation metrics for a model version.
      operationId: V2_GetModelVersionMetrics
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
        - name: fields.confusionMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.cooccurrenceMatrix
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.labelCounts
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.binaryMetrics
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.testSet
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByArea
          in: query
          required: false
          schema:
            type: boolean
        - name: fields.metricsByClass
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: |-
        Deprecated, use PostEvaluations instead
        Run the evaluation metrics for a model version.
      operationId: V2_PostModelVersionMetrics
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModelVersionMetricsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/output_info:
    get:
      tags:
        - V2
      summary: |-
        Get a the output info for a given model_id or model_id/version_id
        combo.
      operationId: V2_GetModelOutputInfo3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - description: |-
            This is included so that we can re-use this request for multiple
            rpcs with and without the version_id.
          name: versionId
          in: path
          required: true
          schema:
            type: string
        - name: language
          in: query
          required: false
          schema:
            type: string
        - name: trainedBefore
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars, outputs, presets
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/outputs:
    post:
      tags:
        - V2
      summary: Get predicted outputs from the model.
      operationId: V2_PostModelOutputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_PostModelOutputsBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiOutputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/outputs/generate:
    post:
      tags:
        - V2
      summary: |-
        TODO(zeiler): will need to
        Single request but streaming resopnses.
      operationId: V2_GenerateModelOutputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_PostModelOutputsBody'
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GenerateModelOutputsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules:
    get:
      tags:
        - V2
      summary: List all the modules in community, by user or by app.
      operationId: V2_ListModules
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the app
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: If neither sort option is set to true, will sort by modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the external id
          name: sortById
          in: query
          required: false
          schema:
            type: boolean
        - description: 'Filtering options:'
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter modules by bookmark. If set, only return bookmarked modules.
            Otherwise none bookmarked modules only.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the module:
              - id
              - description
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the id and description of the module. This supports
            wildcard queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: name
          in: query
          required: false
          schema:
            type: string
        - description: |-
            Filter by the application owner whose this module belongs to
            Deprecated: use search instead of name.
          name: filterByUserId
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModuleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple modules in one request.
      operationId: V2_DeleteModules
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_DeleteInputsBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add a modules to an app.
      operationId: V2_PostModules
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModulesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModuleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more modules.
      operationId: V2_PatchModules
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModulesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModuleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules/{moduleId}:
    get:
      tags:
        - V2
      summary: Get a specific module from an app.
      operationId: V2_GetModule
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: moduleId
          in: path
          required: true
          schema:
            type: string
        - name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModuleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules/{moduleId}/versions:
    get:
      tags:
        - V2
      summary: List all the modules versions for a given module.
      operationId: V2_ListModuleVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: moduleId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModuleVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a multiple module version.
      operationId: V2_DeleteModuleVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: moduleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteModuleVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Create a new module version to trigger training of the module.
      operationId: V2_PostModuleVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: moduleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostModuleVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModuleVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Modify details of an existing module version.
      operationId: V2_PatchModuleVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: moduleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchModuleVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModuleVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules/{moduleId}/versions/{moduleVersionId}:
    get:
      tags:
        - V2
      summary: Get a specific module version for a module.
      operationId: V2_GetModuleVersion
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: moduleId
          in: path
          required: true
          schema:
            type: string
        - name: moduleVersionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModuleVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules/{moduleId}/versions/{moduleVersionId}/usage_count:
    get:
      tags:
        - V2
      summary: Get usage count for specific module version.
      operationId: V2_GetModuleVersionUsageCount
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: moduleId
          in: path
          required: true
          schema:
            type: string
        - name: moduleVersionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleModuleVersionUsageCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/myscopes:
    get:
      tags:
        - V2
      summary: >-
        API Keys in the public API -- request is itself Key authorized, and will
        tell

        the user the scopes/access of the key/credential they're providing, as
        computed by

        our authorizer:
      operationId: V2_MyScopes
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiScopeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/resource_counts:
    get:
      tags:
        - V2
      summary: List the resource counts for the app.
      operationId: V2_GetResourceCounts
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetResourceCountsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/searches:
    get:
      tags:
        - V2
      summary: List all saved legacy searches.
      operationId: V2_ListSearches
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Execute a new search and optionally save it.
      operationId: V2_PostSearches
      description: 'Deprecated: Use PostInputsSearches or PostAnnotationsSearches instead.'
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch saved legacy searches by ids.
      operationId: V2_PatchSearches
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchSearchesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/searches/{id}:
    get:
      tags:
        - V2
      summary: Get a saved legacy search.
      operationId: V2_GetSearch
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a saved search.
      operationId: V2_DeleteSearch
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Execute a previously saved legacy search.
      operationId: V2_PostSearchesByID
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: ID for saves search to be executed
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostSearchesByIdRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/stats/values:
    post:
      tags:
        - V2
      summary: PostStatValues
      operationId: V2_PostStatValues
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostStatValuesRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiStatValueResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/stats/values/aggregate:
    post:
      tags:
        - V2
      summary: PostStatValuesAggregate
      operationId: V2_PostStatValuesAggregate
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostStatValuesAggregateRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiStatValueAggregateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/task/{taskId}/annotations/status:
    patch:
      tags:
        - V2
      summary: Patch annotations status by worker id and task id.
      operationId: V2_PatchAnnotationsStatus
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Filter by task ID
          name: taskId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchAnnotationsStatusRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiPatchAnnotationsStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks:
    get:
      tags:
        - V2
      summary: List tasks from an app.
      operationId: V2_ListTasks
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Get tasks that have ANY user from this list assigned as worker.
          name: workerUserIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Get tasks that have ANY user from this list assigned as reviewer.
          name: reviewUserIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Get tasks that are associated to ANY label order from this list.
          name: labelOrderIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: |-
            Get label order tasks as well
            It is automatically set to true if label_order_ids is set.
          name: includingLabelOrderTasks
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response.

            Currently supported additional fields:

            - all

            - worker.users

            - review.users

            - metrics.work.inputs_count_estimated

            - metrics.work.inputs_percent_estimated
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: (optional) task IDs to filter on
          name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTaskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple tasks in one request.
      operationId: V2_DeleteTasks
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteTasksRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add tasks to an app.
      operationId: V2_PostTasks
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostTasksRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTaskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more tasks.
      operationId: V2_PatchTasks
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchTasksRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTaskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}:
    get:
      tags:
        - V2
      summary: Get a specific task from an app.
      operationId: V2_GetTask
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response.

            Currently supported additional fields:

            - all

            - worker.users

            - review.users

            - metrics.work.inputs_count_estimated

            - metrics.work.inputs_percent_estimated
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleTaskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}/annotations/count:
    get:
      tags:
        - V2
      summary: Task annotation count
      operationId: V2_GetTaskAnnotationCount
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: task_id for which count per user per status is needed
          name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: for given task_id, user_ids to filter on (optional)
          name: userIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleTaskCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}/assignments:
    get:
      tags:
        - V2
      summary: List next non-labeled and unassigned inputs from task's dataset
      operationId: V2_ListNextTaskAssignments
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    put:
      tags:
        - V2
      summary: >-
        PutTaskAssignments performs an action for the task assignments in given
        task.

        All the actions are theoretically idempotent, but practically, in the
        current implementation,

        the REVIEW_START action is not idempotent. See
        PutTaskAssignmentsRequestAction for more details.
      operationId: V2_PutTaskAssignments
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutTaskAssignmentsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTaskAssignmentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}/inputs/count:
    get:
      tags:
        - V2
      summary: Task Input count
      operationId: V2_GetTaskInputCount
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: task_id for which count per user per status is needed
          name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: for given task_id, user_ids to filter on (optional)
          name: userIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleTaskCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}/inputs/samples:
    get:
      tags:
        - V2
      summary: Get a specific input from an app.
      operationId: V2_GetInputSamples
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: URL param. If zero ids provided, returns for all task labelers
          name: userIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiInputAnnotationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/trending_metrics/views/{viewType}:
    get:
      tags:
        - V2
      summary: List the view metrics for a detail view
      operationId: V2_ListTrendingMetricsViews
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: For now view types 'apps', 'workflows', and 'models' are supported.
          name: viewType
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiTrendingMetricsViewResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/trending_metrics/views/{viewType}/{objectId}:
    post:
      tags:
        - V2
      summary: Increase the view metric for a detail view
      operationId: V2_PostTrendingMetricsView
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: For now view types 'apps', 'workflows', and 'models' are supported.
          name: viewType
          in: path
          required: true
          schema:
            type: string
        - description: ID of the views object.
          name: objectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostTrendingMetricsViewRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/uploads:
    get:
      tags:
        - V2
      operationId: V2_ListUploads
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiUploadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      operationId: V2_DeleteUploads
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteUploadsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      operationId: V2_PostUploads
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostUploadsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiUploadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/uploads/{uploadId}:
    get:
      tags:
        - V2
      operationId: V2_GetUpload
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: Upload ID
          name: uploadId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleUploadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/uploads/{uploadId}/content_parts:
    put:
      tags:
        - V2
      summary: >-
        Upload a part of a multipart upload.

        Behaviour on completion depends on the endpoint that was used to
        initiate the upload.
      operationId: V2_PutUploadContentParts
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: uploadId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutUploadContentPartsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleUploadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows:
    get:
      tags:
        - V2
      summary: List all the workflows.
      operationId: V2_ListWorkflows
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the name
          name: sortById
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to order by the modified_at time.

            If none of the sort options is set to true, will sort by
            modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the workflow
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filtering options:

            If true, we only return workflows that are handpicked by clarifai
            staff
          name: featuredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            If true, we only return workflows that are starred by the requesting
            user
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter workflows by bookmark. If set, only return bookmarked
            workflows. Otherwise none bookmarked workflows only.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the workflow:
              - id
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Query various text fields (id, description and notes) that can
            contain the words in the query string.

            Deprecated: use search instead.
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the id of the workflow. This supports wilcard queries like
            "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: id
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Full text and prefix matching on id, owner id, description and
            notes. Searchable fields may be added

            Deprecated: use search instead.
          name: searchTerm
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple workflows in one request.
      operationId: V2_DeleteWorkflows
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/V2_DeleteCollectorsBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: >-
        Add a workflow to an app.

        Note(zeiler): the order of the workflows that are returned from this
        endpoint

        may be different than the order in which the user provides them. This is
        because

        we reorder by a sort that optimizes for performance of the graph and its
        dependencies.

        When using the workflow in any future call the order returned by this
        endpoint

        will be used.
      operationId: V2_PostWorkflows
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more workflows.
      operationId: V2_PatchWorkflows
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchWorkflowsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/ids:
    patch:
      tags:
        - V2
      summary: Patch one or more workflows ids.
      operationId: V2_PatchWorkflowIds
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchWorkflowIdsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}:
    get:
      tags:
        - V2
      summary: Get a specific workflow from an app.
      operationId: V2_GetWorkflow
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Workflow ID to retrieve

            If no ID is specified we return default workflow of the application

            If an ID is specified by default we first looks into Clarifai
            workflows for a Workflow ID
          name: workflowId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Use this flag to look into clarifai published workflows first for a
            Workflow ID
          name: favorClarifaiWorkflows
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: if true will not expand search to clarifai workflows
          name: excludeClarifaiWorkflows
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single workflow.
      operationId: V2_DeleteWorkflow
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/publish:
    post:
      tags:
        - V2
      operationId: V2_PostWorkflowVersionsPublish
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowVersionsPublishRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/results:
    post:
      tags:
        - V2
      summary: Predict using a workflow.
      operationId: V2_PostWorkflowResults2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Workflow ID to retrieve

            If no ID is specified we return default workflow of the application

            If an ID is specified by default we first looks into Clarifai
            workflows for a Workflow ID
          name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowResults2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiPostWorkflowResultsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/results/similarity:
    post:
      tags:
        - V2
      summary: Compare embeddings distances using a workflow
      operationId: V2_PostWorkflowResultsSimilarity2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowResultsSimilarity2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiPostWorkflowResultsSimilarityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/unpublish:
    post:
      tags:
        - V2
      operationId: V2_PostWorkflowVersionsUnPublish
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowVersionsUnPublishRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/versions:
    get:
      tags:
        - V2
      summary: List workflow versions.
      operationId: V2_ListWorkflowVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: List versions for the workflow identified by this id
          name: workflowId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete workflow versions.
      operationId: V2_DeleteWorkflowVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: The id of the workflow that has the requested versions to delete.
          name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteWorkflowVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch workflow versions.
      operationId: V2_PatchWorkflowVersions
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: The id of the workflow that has the requested versions to patch.
          name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchWorkflowVersionsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/versions/{versionId}/results:
    post:
      tags:
        - V2
      summary: Predict using a workflow.
      operationId: V2_PostWorkflowResults
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Workflow ID to retrieve

            If no ID is specified we return default workflow of the application

            If an ID is specified by default we first looks into Clarifai
            workflows for a Workflow ID
          name: workflowId
          in: path
          required: true
          schema:
            type: string
        - description: |-
            Workflow version ID to retrieve
            If no ID is specified, latest workflow version is used
          name: versionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowResultsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiPostWorkflowResultsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/versions/{versionId}/results/similarity:
    post:
      tags:
        - V2
      summary: Compare embeddings distances using a workflow
      operationId: V2_PostWorkflowResultsSimilarity
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - description: |-
            Workflow version ID to retrieve
            If no ID is specified, latest workflow version is used
          name: versionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowResultsSimilarityRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiPostWorkflowResultsSimilarityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/versions/{workflowVersionId}:
    get:
      tags:
        - V2
      summary: Get single workflow version.
      operationId: V2_GetWorkflowVersion
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: path
          required: true
          schema:
            type: string
        - description: The id of the workflow that has the requested version.
          name: workflowId
          in: path
          required: true
          schema:
            type: string
        - description: Get the identified by this id
          name: workflowVersionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleWorkflowVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/collaborations:
    get:
      tags:
        - V2
      summary: Collaboration includes the app user are invitied to work on
      operationId: V2_ListCollaborations
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            Filtering options:

            If true, we only return collaborations on apps that are marked as a
            template by the app owner.
          name: templateOnly
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiCollaborationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/datasets:
    get:
      tags:
        - V2
      summary: List all the datasets.
      operationId: V2_ListDatasets2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the app
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: If neither sort option is set to true, will sort by modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the external id
          name: sortById
          in: query
          required: false
          schema:
            type: boolean
        - description: 'Filtering options:'
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter datasets by bookmark. If set, only return bookmarked
            datasets. Otherwise none bookmarked datasets only.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the dataset:
              - id
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: |-
            Fuzzy filter on dataset ID
            Deprecated: use search instead.
          name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiDatasetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/duplications:
    get:
      tags:
        - V2
      summary: ListAppDuplications lists all app duplication jobs created by the user.
      operationId: V2_ListAppDuplications
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiAppDuplicationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/duplications/{appDuplicationId}:
    get:
      tags:
        - V2
      summary: GetAppDuplication returns an app duplication job created by the user.
      operationId: V2_GetAppDuplication
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: appDuplicationId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleAppDuplicationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/evaluations:
    get:
      tags:
        - V2
      operationId: V2_ListEvaluations2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            If true, sort in ascending order, otherwise sort in descending
            order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by application id
          name: sortByAppId
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.macro_avg_roc_auc
          name: sortByRocAuc
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.f1
          name: sortByF1
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by when the metric was created
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.mean_avg_precision_iou_50
          name: sortByMeanAvgPrecision
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.macro_avg_precision
          name: sortByPrecision
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by eval metric summary.macro_avg_recall
          name: sortByRecall
          in: query
          required: false
          schema:
            type: boolean
        - name: sortByModelId
          in: query
          required: false
          schema:
            type: boolean
        - name: sortByEvalDatasetId
          in: query
          required: false
          schema:
            type: boolean
        - name: sortByTrainDatasetId
          in: query
          required: false
          schema:
            type: boolean
        - description: Filter on model type id
          name: modelTypeId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter on dataset ID of the dataset version specified in the metric
            version
          name: evalDatasetIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Filter on dataset ID of the dataset version specified by the model
            version
          name: trainDatasetIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter on concept IDs specified in the modele version's output_info
          name: conceptIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Whether to show failed metrics, defaults to false
          name: showFailedMetrics
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiEvalMetricsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/keys:
    get:
      tags:
        - V2
      summary: List all the keys.
      operationId: V2_ListKeys
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: notExpired
          in: query
          required: false
          schema:
            type: boolean
        - name: scopes
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: endpoints
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add a key to an app.
      operationId: V2_PostKeys
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostKeysRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more keys.
      operationId: V2_PatchKeys
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchKeysRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/keys/{keyId}:
    get:
      tags:
        - V2
      summary: Get a specific key from an app.
      operationId: V2_GetKey
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: |-
        Search over the keys to find one or more you're looking for.
        This leverage the "body" parameter because we also have page and
        per_page as url query param variables in this request.
      operationId: V2_DeleteKey
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/models:
    get:
      tags:
        - V2
      summary: List all the models.
      operationId: V2_ListModels2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars, outputs, presets
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the name
          name: sortByName
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of training inputs
          name: sortByNumInputs
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to order by the modified_at time of the latest model
            version.

            If none of the sort options is set to true, will sort by
            modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by count of stars
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filtering options:

            Filter models by the specific model_type_id. See ListModelTypes for
            the list of ModelType.Id's

            supported.
          name: modelTypeId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            If true, we only return models that have the status MODEL_TRAINED,
            which includes non-trainable model types.
          name: trainedOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            The list of input fields to the model.

            For example, you can specify 'image', which will return models that
            make inferences on images like visual-classifier models.
          name: inputFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            The list of output fields to the model.

            For example, you can specify 'regions[...].data.concepts', which
            will return visual-detector models.
          name: outputFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter by the license of the model version
          name: license
          in: query
          required: false
          schema:
            type: string
        - description: If true, we only return models that are handpicked by clarifai staff
          name: featuredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            If true, we only return models that are starred by the requesting
            user
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: List of toolkit tags to filter by
          name: toolkits
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of use_case tags to filter by
          name: useCases
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of language tags to filter by
          name: languages
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Old API behavior resulted in returning clarifai main models when
            calling ListModels while scoped to an app. While we transition

            away from that, we can use this flag to not always fetch clarifai
            main models, unless that is the app we are explicitly listing for.
          name: dontFetchFromMain
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter models by bookmark. If set, only return bookmarked models.
            Otherwise none bookmarked models only.

            Note: you can not filter `trained_only` and bookmark at the same
            time.

            When filter by bookmark, we will return trained and untrained
            models.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the model:
              - id
              - name
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Query name, description and id fields, that can contain the words in
            the query string. Does NOT support wildcards - full words only.
            Supports operators "OR" and "-" as NOT.

            Deprecated: use search instead.
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the description and id of the model. This supports
            wildcard queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: name
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Extends the name filter to include the user_id of the application
            owner that the model belongs to.

            Deprecated: use search instead of name.
          name: filterByUserId
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/modules:
    get:
      tags:
        - V2
      summary: List all the modules in community, by user or by app.
      operationId: V2_ListModules2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the app
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: If neither sort option is set to true, will sort by modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the external id
          name: sortById
          in: query
          required: false
          schema:
            type: boolean
        - description: 'Filtering options:'
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter modules by bookmark. If set, only return bookmarked modules.
            Otherwise none bookmarked modules only.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the module:
              - id
              - description
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the id and description of the module. This supports
            wildcard queries like "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: name
          in: query
          required: false
          schema:
            type: string
        - description: |-
            Filter by the application owner whose this module belongs to
            Deprecated: use search instead of name.
          name: filterByUserId
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiModuleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/myscopes:
    get:
      tags:
        - V2
      operationId: V2_MyScopesUser
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiScopeUserResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/runners:
    get:
      tags:
        - V2
      summary: List all the runners for the user.
      operationId: V2_ListRunners
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiRunnerResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple runners in one request.
      operationId: V2_DeleteRunners
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteRunnersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: Add a runners to a user.
      operationId: V2_PostRunners
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostRunnersRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiRunnerResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/runners/{runnerId}:
    get:
      tags:
        - V2
      summary: |-
        Get a specific runner.
        TODO(zeiler): runner_id is a UUID so can list globally as well.
      operationId: V2_GetRunner
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: runnerId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleRunnerResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/runners/{runnerId}/items:
    get:
      tags:
        - V2
      summary: |-
        List items for the remote runner to work on.
        since the runner_id is a UUID we can access it directly too.
      operationId: V2_ListRunnerItems
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: runnerId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiRunnerItemResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/runners/{runnerId}/items/{runnerItemId}/outputs:
    post:
      tags:
        - V2
      summary: |-
        Post back outputs from remote runners
        since the runner_id is a UUID we can access it directly too.
      operationId: V2_PostRunnerItemOutputs
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - description: The particular runner that processed the work.
          name: runnerId
          in: path
          required: true
          schema:
            type: string
        - description: The particular item of work processed.
          name: runnerItemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostRunnerItemOutputsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiRunnerItemOutputResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/scopes:
    get:
      tags:
        - V2
      summary: List all auth scopes available to me as a user.
      operationId: V2_ListScopes
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            If "personal_access_token" include scopes and endpoints available to
            personal access tokens.

            If "api_key" include scopes and endpoints available to app-specific
            keys. (default)
          name: keyType
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiScopeDepsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/validate_password:
    post:
      tags:
        - V2
      summary: Validate new password in real-time for a user
      operationId: V2_PostValidatePassword
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostValidatePasswordRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSinglePasswordValidationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/users/{userAppId.userId}/workflows:
    get:
      tags:
        - V2
      summary: List all the workflows.
      operationId: V2_ListWorkflows2
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: path
          required: true
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the name
          name: sortById
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to order by the modified_at time.

            If none of the sort options is set to true, will sort by
            modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the workflow
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filtering options:

            If true, we only return workflows that are handpicked by clarifai
            staff
          name: featuredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            If true, we only return workflows that are starred by the requesting
            user
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter workflows by bookmark. If set, only return bookmarked
            workflows. Otherwise none bookmarked workflows only.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the workflow:
              - id
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Query various text fields (id, description and notes) that can
            contain the words in the query string.

            Deprecated: use search instead.
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the id of the workflow. This supports wilcard queries like
            "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: id
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Full text and prefix matching on id, owner id, description and
            notes. Searchable fields may be added

            Deprecated: use search instead.
          name: searchTerm
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/validate_password:
    post:
      tags:
        - V2
      summary: Validate new password in real-time for a user
      operationId: V2_PostValidatePassword2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostValidatePasswordRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSinglePasswordValidationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/workflows:
    get:
      tags:
        - V2
      summary: List all the workflows.
      operationId: V2_ListWorkflows3
      parameters:
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Sorting options:

            Whether to sort in ascending order. If false, will order in
            descending order.
          name: sortAscending
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the name
          name: sortById
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to order by the modified_at time.

            If none of the sort options is set to true, will sort by
            modified_at.
          name: sortByModifiedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the created_at time.
          name: sortByCreatedAt
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to order by the number of users stared the workflow
          name: sortByStarCount
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filtering options:

            If true, we only return workflows that are handpicked by clarifai
            staff
          name: featuredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            If true, we only return workflows that are starred by the requesting
            user
          name: starredOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter workflows by bookmark. If set, only return bookmarked
            workflows. Otherwise none bookmarked workflows only.
          name: bookmark
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Searching options:

            Specify a search parameter in order to perform keyword search on the

            following fields of the workflow:
              - id
              - description
              - notes
              - user_id (unless user_app_id.user_id is already set)

            Keywords are both normalized for search (so searching for "satisfy"
            matches "satisfied")

            and used for partial prefix-matching (so searching for "clari"
            matches "clarifai").


            NOTE: Both the list of fields searched and the exact keyword
            matching

            rules are subject to change and not guaranteed to be
            backwards-compatible.
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Query various text fields (id, description and notes) that can
            contain the words in the query string.

            Deprecated: use search instead.
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by the id of the workflow. This supports wilcard queries like
            "gen*" to match "general" as an example.

            Deprecated: use search instead.
          name: id
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Full text and prefix matching on id, owner id, description and
            notes. Searchable fields may be added

            Deprecated: use search instead.
          name: searchTerm
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete multiple workflows in one request.
      operationId: V2_DeleteWorkflows2
      requestBody:
        description: Request to delete several things by the list of ids.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeleteWorkflowsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
        - V2
      summary: >-
        Add a workflow to an app.

        Note(zeiler): the order of the workflows that are returned from this
        endpoint

        may be different than the order in which the user provides them. This is
        because

        we reorder by a sort that optimizes for performance of the graph and its
        dependencies.

        When using the workflow in any future call the order returned by this
        endpoint

        will be used.
      operationId: V2_PostWorkflows2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPostWorkflowsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch one or more workflows.
      operationId: V2_PatchWorkflows2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiPatchWorkflowsRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/workflows/{workflowId}:
    get:
      tags:
        - V2
      summary: Get a specific workflow from an app.
      operationId: V2_GetWorkflow2
      parameters:
        - description: >-
            Workflow ID to retrieve

            If no ID is specified we return default workflow of the application

            If an ID is specified by default we first looks into Clarifai
            workflows for a Workflow ID
          name: workflowId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Use this flag to look into clarifai published workflows first for a
            Workflow ID
          name: favorClarifaiWorkflows
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            (optional URL parameter) List of additional fields to be included in
            the response. Currently supported: all, stars
          name: additionalFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: if true will not expand search to clarifai workflows
          name: excludeClarifaiWorkflows
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleWorkflowResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete a single workflow.
      operationId: V2_DeleteWorkflow2
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/workflows/{workflowId}/publish:
    post:
      tags:
        - V2
      operationId: V2_PostWorkflowVersionsPublish2
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowVersionsPublish2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/workflows/{workflowId}/results:
    post:
      tags:
        - V2
      summary: Predict using a workflow.
      operationId: V2_PostWorkflowResults3
      parameters:
        - description: >-
            Workflow ID to retrieve

            If no ID is specified we return default workflow of the application

            If an ID is specified by default we first looks into Clarifai
            workflows for a Workflow ID
          name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowResults3Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiPostWorkflowResultsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/workflows/{workflowId}/results/similarity:
    post:
      tags:
        - V2
      summary: Compare embeddings distances using a workflow
      operationId: V2_PostWorkflowResultsSimilarity3
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowResultsSimilarity3Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiPostWorkflowResultsSimilarityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/workflows/{workflowId}/unpublish:
    post:
      tags:
        - V2
      operationId: V2_PostWorkflowVersionsUnPublish2
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostWorkflowVersionsUnPublish2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/workflows/{workflowId}/versions:
    get:
      tags:
        - V2
      summary: List workflow versions.
      operationId: V2_ListWorkflowVersions2
      parameters:
        - description: List versions for the workflow identified by this id
          name: workflowId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks.

            Defaults to 1.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults

            to 128.
          name: perPage
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
        - V2
      summary: Delete workflow versions.
      operationId: V2_DeleteWorkflowVersions2
      parameters:
        - description: The id of the workflow that has the requested versions to delete.
          name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteWorkflowVersions2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusBaseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
        - V2
      summary: Patch workflow versions.
      operationId: V2_PatchWorkflowVersions2
      parameters:
        - description: The id of the workflow that has the requested versions to patch.
          name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchWorkflowVersions2Request'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiMultiWorkflowVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /v2/workflows/{workflowId}/versions/{workflowVersionId}:
    get:
      tags:
        - V2
      summary: Get single workflow version.
      operationId: V2_GetWorkflowVersion2
      parameters:
        - description: The id of the workflow that has the requested version.
          name: workflowId
          in: path
          required: true
          schema:
            type: string
        - description: Get the identified by this id
          name: workflowVersionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          name: userAppId.userId
          in: query
          required: false
          schema:
            type: string
        - name: userAppId.appId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSingleWorkflowVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
components:
  requestBodies:
    V2_DeleteCollectorsBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V2DeleteCollectorsRequest'
      required: true
    V2_PostModelOutputsBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V2PostModelOutputsRequest'
      required: true
    apiDeleteAnnotationsRequest:
      description: Request to delete several things by the list of ids.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/apiDeleteAnnotationsRequest'
      required: true
    V2_PostModelOutputs3Body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V2PostModelOutputs3Request'
      required: true
    V2_DeleteAnnotations3Body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V2DeleteAnnotations3Request'
      required: true
    V2_PatchAnnotationsSearchesBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V2PatchAnnotationsSearchesRequest'
      required: true
    V2_DeleteInputsBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V2DeleteInputsRequest'
      required: true
  schemas:
    BookmarkOriginBookmarkType:
      type: string
      enum:
        - unknown
        - model
        - workflow
        - dataset
        - module
      default: unknown
    CloudRegionCloud:
      description: >2-
         - SELF_HOSTED: Run on a user's own infrastructure. This has restrictions on who can access resources
        that are being run by SELF_HOSTED runners. Only those who are part of
        the user/org where they

        exist can leverage them.
      type: string
      enum:
        - UNKOWN_CLOUD
        - SELF_HOSTED
        - AWS
        - GCP
        - AZURE
        - LAMBDA
      default: UNKOWN_CLOUD
    DeploymentSchedulingChoice:
      description: >-
        In some scenarios it may not be obvous how we should schedule a resource
        to underlying nodes

        within the nodepool(s) above. The SchedulerChoice allows us to specify
        how to decide which

        nodepool to use when there are multiple nodepools and how to decide
        which type of node

        within a nodepool if there are multiple types.

        If here are multiple nondepools then a decision on which to use comes
        into play

        if it is not specified in the prediction request.

        Even with a single nodepool a choice may come up such as when a resource
        that needs scheduling

        has not specified the accelerator types it supports and the nodepool has
        multiple types.

         - FAIL: fail if there is any ambiguity.
         - RANDOM: randomly pick amongst the nodepools/nodes to assign.
         - PRICE: choose the compute that is cheaper
         - PERFORMANCE: schedule to the fastest known iption.
         - NETWORK: optimize based on network latency.
         - UTILIZATION: send to the least used nodepool based on it's capacity.
         - PREFER_SPOT: choose spot instances over on-demand
         - PREFER_ONDEMAND: choose on-demand instances over spot.
      type: string
      enum:
        - UNKNOWN_SCHEDULING_CHOICE
        - FAIL
        - RANDOM
        - PRICE
        - PERFORMANCE
        - NETWORK
        - UTILIZATION
        - PREFER_SPOT
        - PREFER_ONDEMAND
      default: UNKNOWN_SCHEDULING_CHOICE
    MatrixUint64:
      description: >-
        Store matrix of uint64s values.

        It is recommended to store the matrix as a 1D array

        because it produces less bytes during serialization than a 2D array.

        The matrix does store the number of columns, but it does not store the
        number of rows.

        The number of rows can automatically be calculated as
        length(data)/n_cols.
      type: object
      properties:
        nCols:
          title: Number of columns
          type: string
          format: uint64
        data:
          description: >-
            Matrix data stored as an array.

            In order to access matrix element at row i & column j, use
            data[i*n_cols+j].
          type: array
          items:
            type: string
            format: uint64
    ModelTypeFieldModelTypeFieldType:
      description: >-
        These are various types of fields that we have UIs for.

         - ARRAY_OF_CONCEPTS: For auto-completing to concepts in the app. This goes into an data.concepts field.
         - ARRAY_OF_CONCEPTS_WITH_THRESHOLD: For auto-completing to concepts in the app. This goes into an data.concepts field.
         - RANGE: A range for a float value.
         - ENUM: If ENUM is used then the "enum_options" field should also be filled in with the respective ID and description
        for the different ENUM options.
         - COLLABORATORS: For listing collaborators of the app. The field is a string of the collaborator's user_id.
         - JSON: For arbitrary json object: "{...}"
         - ARRAY_OF_NUMBERS: Such as [1.0, 2.0, 3.5]
         - WORKFLOW_EMBED_MODELS: For selecting the embed_model_version_id for context based models.
         - ARRAY_OF_STRINGS: Such as ['a', 'b', 'cantaloupe']
         - RECURSIVE_ENUM: If RECURSIVE_ENUM is used then the "enum_options" field should also be filled in with the respective ID and
        description for the different RECURSIVE_ENUM options, as well as
        model_type_fields for each enum choice.
         - PYTHON_CODE: For blocks of code that need to be specified by the user for setup or execution during workflow runs.
         - DATASET_ID: For selecting a dataset id in model parameters. String in API request.
         - DATASET_VERSION_ID: For selecting a dataset version id. String.
         - ARRAY_OF_MODEL_CONCEPTS: For auto-completing to concepts in the model.
         - DATASET: For selecting a dataset
         - DATASET_VERSION: For selecting a dataset version
         - ENCRYPTED_STRING: To pass a string downstream, that is encrypted in the DB and API.
         - CHECKPOINT_MODEL: For selecting a model version of the same model type to resume training from.
      type: string
      enum:
        - INVALID_MODEL_TYPE_FIELD_TYPE
        - BOOLEAN
        - STRING
        - NUMBER
        - ARRAY_OF_CONCEPTS
        - ARRAY_OF_CONCEPTS_WITH_THRESHOLD
        - RANGE
        - ENUM
        - COLLABORATORS
        - JSON
        - ARRAY_OF_NUMBERS
        - WORKFLOW_EMBED_MODELS
        - ARRAY_OF_STRINGS
        - RECURSIVE_ENUM
        - PYTHON_CODE
        - DATASET_ID
        - DATASET_VERSION_ID
        - ARRAY_OF_MODEL_CONCEPTS
        - DATASET
        - DATASET_VERSION
        - ENCRYPTED_STRING
        - CHECKPOINT_MODEL
      default: INVALID_MODEL_TYPE_FIELD_TYPE
    ModuleVersionModuleNav:
      type: object
      properties:
        title:
          description: >-
            This is the left side title for this module and for browser tab
            title of the module.

            We have this in the version so that users can change those settings

            when releasing a new version of their module.
          type: string
        moduleSubNavs:
          description: A list of subnav elements to put under the module title.
          type: array
          items:
            $ref: '#/components/schemas/ModuleVersionModuleSubNav'
    ModuleVersionModuleSubNav:
      type: object
      properties:
        title:
          description: >-
            This is the display title for a navbar element to link to a specific
            page.

            The name for this subnav element to show in the sidebar.
          type: string
        queryKey:
          title: The query param name
          type: string
        queryValue:
          title: The query param value
          type: string
    NodepoolCapacityType:
      description: >-
        Type of nodes that are ok for instances in this pool.

        If both spot and on-demand are provided then the runner will be able to
        run on either

        with a preference for spot until they are not available.
      type: string
      enum:
        - UKNOWN_CAPACITY_TYPE
        - ONDEMAND_TYPE
        - SPOT_TYPE
      default: UKNOWN_CAPACITY_TYPE
    SearchMetric:
      description: >-
        Metric used for search. Can be EUCLIDEAN_DISTANCE (default) or
        COSINE_DISTANCE.

        Currently only brute force search supports non-eudlicean metrics.
      type: string
      enum:
        - METRIC_NOT_SET
        - EUCLIDEAN_DISTANCE
        - COSINE_DISTANCE
      default: METRIC_NOT_SET
    SplitIntoDatasetsDatasetSplitMethod:
      title: >-
        - RANDOM_PERCENTAGE_SPLIT: We will randomly split inputs into the
        datasets
      type: string
      enum:
        - NOT_SET
        - RANDOM_PERCENTAGE_SPLIT
      default: NOT_SET
    TaskInputSourceTaskInputSourceType:
      description: |2-
         - ALL_INPUTS: Use all inputs in the app.
         - SAVED_SEARCH: Use the inputs from a saved search.
         - DATASET: Inputs from a dataset.
      type: string
      enum:
        - INPUT_SOURCE_TYPE_NOT_SET
        - ALL_INPUTS
        - SAVED_SEARCH
        - DATASET
      default: INPUT_SOURCE_TYPE_NOT_SET
    TaskReviewTaskReviewStrategy:
      description: |2-
         - NONE: No review is needed.
         - MANUAL: Manual review strategy.
         - CONSENSUS: Consensus review strategy.
      type: string
      enum:
        - TASK_REVIEW_STRATEGY_NOT_SET
        - NONE
        - MANUAL
        - CONSENSUS
      default: TASK_REVIEW_STRATEGY_NOT_SET
    TaskTaskType:
      description: |2-
         - CONCEPTS_CLASSIFICATION: Concepts classification tasks annotate concepts for the overall image, frame of video or section of text.
         - BOUNDING_BOX_DETECTION: Bounding box detection tasks annotate rectangular bounding box regions around each concept in an image, frame of video or section of text.
         - POLYGON_DETECTION: Polygon detection tasks annotate free-form regions around concepts in an image, frame of video or section of text.
      type: string
      enum:
        - TYPE_NOT_SET
        - CONCEPTS_CLASSIFICATION
        - BOUNDING_BOX_DETECTION
        - POLYGON_DETECTION
      default: TYPE_NOT_SET
    TaskWorkerPartitionedStrategyInfoTaskWorkerPartitionedStrategy:
      description: |2-
         - EVENLY: Each worker will label (approximately) the same number of inputs.
         - WEIGHTED: Each worker will have an assigned weight.
        See weights field for more details.
      type: string
      enum:
        - PARTITIONED_WORKER_STRATEGY_NOT_SET
        - EVENLY
        - WEIGHTED
      default: PARTITIONED_WORKER_STRATEGY_NOT_SET
    TaskWorkerTaskWorkerStrategy:
      description: |2-
         - PARTITIONED: The inputs will be partitioned in several partitions.
        Each worker will label one or more input partitions.
         - FULL: Each worker will label all inputs from input source.
      type: string
      enum:
        - WORKER_STRATEGY_NOT_SET
        - PARTITIONED
        - FULL
      default: WORKER_STRATEGY_NOT_SET
    VisibilityGettable:
      description: >-
        Gettable defined the level of access for GET operations for this
        resource.

         - UNKNOWN_VISIBILITY: Default value not allowed.
         - PRIVATE: PRIVATE requires collaborator or team permissions in order to GET this resource.
         - ORG: ORG requires you to be in the same org in order to GET this resource, but don't have to be a
        teammate or collaborator.
         - PUBLIC: PUBLIC opens up GET access to the resource to any user on the platform even if they are not
        a teammate or collaborator.
      type: string
      enum:
        - UNKNOWN_VISIBILITY
        - PRIVATE
        - ORG
        - PUBLIC
      default: UNKNOWN_VISIBILITY
    apiAPIPostModelOutputsCollectorSource:
      description: >-
        This is configuration for using the inputs send for model prediction in
        our API as

        as the source for data.
      type: object
      properties:
        modelUserId:
          description: >-
            To define the model that we should collect from we need to specify
            the following 4 IDs:

            The User ID of the model we want to collect from.

            This is User B in the example.
          type: string
        modelAppId:
          description: The App ID of the model we want to collect from.
          type: string
        modelId:
          description: The Model ID of the model we want to collect from.
          type: string
        modelVersionId:
          description: The Version ID of the model we want to collect from.
          type: string
        postInputsKeyId:
          description: >-
            This key is used to POST /inputs into your app by the collector. It
            can be an API key or a

            PAT. This needs the permissions that are needed for POST /inputs for
            the app_id this

            Collector is defined in.
          type: string
        callerUserId:
          description: >-
            This is a private field that defaults to the app owner for public
            users.

            If this is left blank then this collector will collect from ALL
            users calling the given model.
          type: string
    apiAWSCreds:
      description: AWS S3 storage credentials.
      type: object
      properties:
        region:
          type: string
        id:
          type: string
        secret:
          type: string
        token:
          type: string
    apiAddConcepts:
      type: object
      properties:
        concepts:
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
    apiAddMetadata:
      type: object
      properties:
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
    apiAddToDataset:
      type: object
      properties:
        datasetId:
          type: string
    apiAiAssistParameters:
      title: AiAssistParameters
      type: object
      properties:
        minThreshold:
          title: >-
            Min and max threshold values for approving annotations by default
            based on prediction score
          type: number
          format: float
        maxThreshold:
          type: number
          format: float
        conceptRelationIds:
          title: ids of concept relations. Used in AI assist workflow
          type: array
          items:
            type: string
    apiAnd:
      description: >-
        This is the common building block of a query which is a sequence of And
        messages ANDed together.

        Note that some fields are used too RANK results (affect the scores) and
        some are used to FILTER

        results (unordered subset of your app's contents). In general, FILTER
        operations are more

        efficient queries at scale and when combined with RANK operations can
        speed up search performance

        as you effectively operate on a smaller sub-set of your entire app.
      type: object
      properties:
        input:
          $ref: '#/components/schemas/apiInput'
        output:
          $ref: '#/components/schemas/apiOutput'
        negate:
          title: >-
            If True then this will flip the meaning of this part of the

            query. This allow for queries such as dog AND !
            metadata=={"blah":"value"}
          type: boolean
        annotation:
          $ref: '#/components/schemas/clarifaiapiAnnotation'
    apiAnnotationFilter:
      description: |-
        AnnotationFilter is used to create a new dataset version.
        For now, the filter is simply a wrapper over a Search.
        In the future, we may add extra fields to customize the filtering.
      type: object
      properties:
        id:
          title: The ID for the annotation filter
          type: string
        createdAt:
          description: |-
            When the annotation filter was created.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            When the annotation filter was modified.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        userId:
          description: The user the annotation filter belongs to.
          type: string
        appId:
          description: The app the annotation filter belongs to.
          type: string
        search:
          $ref: '#/components/schemas/apiSearch'
    apiAnnotationFilterConfig:
      type: object
      properties:
        annotationFilter:
          $ref: '#/components/schemas/apiAnnotationFilter'
        ignoreEmptyInputs:
          description: >-
            If true, empty inputs are not included in the dataset version.

            If false, empty inputs are included in the dataset version.

            We define an empty input as an input without any annotations after
            annotation filter is applied.
          type: boolean
    apiAnnotationSearchMetrics:
      title: AnnotationSearchMetrics
      type: object
      properties:
        groundTruth:
          $ref: '#/components/schemas/apiSearch'
        searchToEval:
          $ref: '#/components/schemas/apiSearch'
        metrics:
          $ref: '#/components/schemas/apiEvalMetrics'
        data:
          $ref: '#/components/schemas/apiData'
        activeConceptCount:
          title: active_concept_count is the number of concepts for this evaluation
          type: integer
          format: int64
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
    apiApp:
      title: Application with tasks and datasets
      type: object
      properties:
        description:
          description: short description about the app.
          type: string
        id:
          type: string
        name:
          type: string
        defaultLanguage:
          type: string
        defaultWorkflowId:
          title: Default workflow id deprecated in favor of default_workflow
          type: string
        defaultWorkflow:
          $ref: '#/components/schemas/apiWorkflow'
        userId:
          title: >-
            why is user_id present here when this message type is used in
            PostApps but completely ignored there? PostApp already

            specifies the userid in path but doesn't even actually use neither
            of userids, it instead used the id from auth context.

            This creates a lot of ambiguity, should always have different
            message types for Post/Get endpoints so that the minimum interface
            for each op can be described
          type: string
        createdAt:
          title: |-
            When the app was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        modifiedAt:
          title: When the app was last modified
          type: string
          format: date-time
        legalConsentStatus:
          title: if user accept legal consent for face recognition
          type: integer
          format: int64
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        sampleMs:
          title: >-
            Default value for model predictions on video: Sample delay for video
            predicting (1 frame per N milliseconds)
          type: integer
          format: int64
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        dataTierId:
          description: data tier id this app is using.
          type: string
        isStarred:
          title: >-
            Is starred by the requesting user (only showed on get/list requests)

            Please use PostAppStars/DeleteAppStars endpoints to star/unstar an
            app
          type: boolean
        starCount:
          title: >-
            How many users have starred the app (only showed on get/list
            requests)

            Computed value, not editable
          type: integer
          format: int32
        notes:
          description: >-
            Notes for the application

            This field should be used for in-depth notes and supports up to
            64Kbs.
          type: string
        image:
          $ref: '#/components/schemas/apiImage'
        isTemplate:
          description: >-
            An app marked as a template can be duplicated by any user that can
            see it,

            including all visible resources within it.
          type: boolean
        extraInfo:
          $ref: '#/components/schemas/apiAppExtraInfo'
    apiAppCopyProgress:
      type: object
      properties:
        field:
          type: string
        value:
          type: integer
          format: int32
    apiAppDuplication:
      title: AppDuplication
      type: object
      properties:
        id:
          description: The unique identifier of an app duplication job.
          type: string
        destinationApp:
          $ref: '#/components/schemas/apiApp'
        existingAppId:
          description: >-
            The ID of an existing app you want to copy data into.


            If not provided, then we will create a new application as the
            destination instead.

            The various new_app_* fields can be used to set fields of this new
            application.


            Deprecated: Use destination_app.id with an existing ID instead.
          type: string
        newAppId:
          description: >-
            The ID to use when creating a new application.

            You cannot set this field when copying into an existing app, i.e.,
            when existing_app_is is set.


            If not provided, then it will be generated automatically.


            Deprecated: Use destination_app.id with a new ID instead.
          type: string
        newAppName:
          description: >-
            The name to use when creating a new application.

            You cannot set this field when copying into an existing app, i.e.,
            when existing_app_is is set.


            If not provided, then the ID of the new application is also used as
            the name.


            Deprecated: Application names are deprecated, use application IDs
            instead.
          type: string
        status:
          $ref: '#/components/schemas/apistatusStatus'
        createdAt:
          description: The time when the app duplication job was created.
          type: string
          format: date-time
        lastModifiedAt:
          description: The last time when the app duplication job status was updated.
          type: string
          format: date-time
        filter:
          $ref: '#/components/schemas/apiAppDuplicationFilters'
        progress:
          title: >-
            Copy progress for each resource type requested by the filter.
            Possible fields:
             - inputs
             - concepts
             - annotations
             - models
             - workflows
             - installed_module_versions
          type: array
          items:
            $ref: '#/components/schemas/apiAppCopyProgress'
    apiAppDuplicationFilters:
      title: AppDuplicationFilters
      type: object
      properties:
        copyInputs:
          description: >-
            Copy inputs. Requires that copy_concepts is also set.

            Note that this will still copy input-level annotations even if
            copy_annotations is not set.
          type: boolean
        copyConcepts:
          description: Copy concepts.
          type: boolean
        copyAnnotations:
          description: >-
            Copy annotations. Requires that copy_inputs and copy_concepts are
            also set.
          type: boolean
        copyModels:
          description: Copy models. Requires that copy_concepts is also set.
          type: boolean
        copyWorkflows:
          description: >-
            Copy workflows. Requires that copy_models and copy_concepts are also
            set.
          type: boolean
        copyInstalledModuleVersions:
          description: Copy installed module versions.
          type: boolean
    apiAppExtraInfo:
      type: object
      properties:
        searchRevisionMarker:
          title: >-
            Revision marker for this application.

            The value of the revision changes when

            * inputs are added, updated or deleted

            * annotations are added, updated or deleted

            * inputs are added to or removed from datasets

            For example, this value can be used to detect if client side caches
            related to searching should be invalidated.

            Field not filled in for list endpoints, use GetApp
          type: string
    apiAppQuery:
      title: App query
      type: object
      properties:
        name:
          description: >-
            Query by application name. This supports wildcard queries like
            "gen*" to match "general" as an example.
          type: string
    apiAudio:
      title: Audio asset struct
      type: object
      properties:
        url:
          description: >-
            This is a URL to a publicly accessible image file. The platform will
            download this file server

            side and then process.
          type: string
        base64:
          description: >-
            The base64 field is using image file bytes directly in the request.

            NOTE: if you're sending a json request, then this MUST be base64
            encoded before sending (hence

            the name here).

            When using our grpc clients, you DO NOT need to base64 encode

            it yourself since the clients know how to do this for you
            automatically and will avoid the

            base64 encoding if they send a binary request.
          type: string
          format: byte
        allowDuplicateUrl:
          description: If True then you will be allowed to have multiple urls.
          type: boolean
        hosted:
          $ref: '#/components/schemas/apiHostedURL'
        audioInfo:
          $ref: '#/components/schemas/apiAudioInfo'
    apiAudioInfo:
      type: object
      properties:
        audioFormat:
          title: audio format
          type: string
        sampleRate:
          title: sample rate
          type: integer
          format: int32
        durationSeconds:
          title: audio track duration in seconds
          type: number
          format: float
        bitRate:
          title: audio track bit rate
          type: integer
          format: int32
    apiAutoscaleConfig:
      description: >-
        It might be better to do this as runner autoscaling so that resources

        of a model are very simply what that model needs at minimum.

        Note that resources for things like modes inside runners are not

        related to how many replicas of those runners are needed to handle
        traffic.
      type: object
      properties:
        minReplicas:
          description: |-
            The minimum number of replicas for the runner to have.
            Defaults to 0 which means autoscaling can scale down to zero.
            If you want a replica always up then set to >= 1.
          type: integer
          format: int64
        maxReplicas:
          description: The maximium number of replicas to scale up the runner to.
          type: integer
          format: int64
        trafficHistorySeconds:
          description: >-
            The number of seconds of traffic history to consider when
            autoscaling.
          type: integer
          format: int64
        scaleDownDelaySeconds:
          description: The time to wait before scaling down after the last request.
          type: integer
          format: int64
        scaleUpDelaySeconds:
          description: The time to wait between scaling up replicas without burst traffic.
          type: integer
          format: int64
        enablePacking:
          description: >-
            Depending on your plan you may be able to enable packing of
            resources into a single node

            for more compute and cost efficiency.
          type: boolean
    apiAzureBlobCreds:
      description: Azure Blob storage credentials.
      type: object
      properties:
        accountName:
          type: string
        accountKey:
          type: string
    apiBinaryMetrics:
      title: BinaryMetrics
      type: object
      properties:
        numPos:
          type: integer
          format: int64
        numNeg:
          type: integer
          format: int64
        numTot:
          type: integer
          format: int64
        rocAuc:
          type: number
          format: float
        f1:
          type: number
          format: float
        concept:
          $ref: '#/components/schemas/apiConcept'
        rocCurve:
          $ref: '#/components/schemas/apiROC'
        precisionRecallCurve:
          $ref: '#/components/schemas/apiPrecisionRecallCurve'
        avgPrecision:
          type: number
          format: float
        areaName:
          type: string
        areaMin:
          type: number
          format: double
        areaMax:
          type: number
          format: double
        iou:
          type: number
          format: float
    apiBookmarkOrigin:
      type: object
      properties:
        id:
          title: original resource id
          type: string
        appId:
          title: original resource app id
          type: string
        userId:
          title: original resource user id
          type: string
        resourceType:
          $ref: '#/components/schemas/BookmarkOriginBookmarkType'
    apiBoundingBox:
      description: Rectangular bounding box for a region.
      type: object
      properties:
        topRow:
          title: >-
            The top left of the bounding box normalized to the data dimension to
            be within [0-1.0]
          type: number
          format: float
        leftCol:
          title: >-
            The left column of the bounding box normalized to the data dimension
            to be within [0-1.0]
          type: number
          format: float
        bottomRow:
          title: >-
            The bottom row of the bounding box normalized to the data dimension
            to be within [0-1.0]
          type: number
          format: float
        rightCol:
          title: >-
            The right col of the bounding box normalized to the data dimension
            to be within [0-1.0]
          type: number
          format: float
    apiBuildInfo:
      type: object
      properties:
        dockerImageName:
          title: Docker image name
          type: string
        dockerImageTag:
          title: Docker image tag
          type: string
        dockerImageDigest:
          title: Docker image digest
          type: string
    apiBulkOperation:
      type: object
      properties:
        id:
          title: id of the Bulk Operation task
          type: string
        inputIds:
          $ref: '#/components/schemas/apiInputIDs'
        search:
          $ref: '#/components/schemas/apiSearch'
        dataset:
          $ref: '#/components/schemas/apiDataset'
        operation:
          $ref: '#/components/schemas/apiOperation'
        appId:
          title: Application ID that this Operation was created from
          type: string
        status:
          $ref: '#/components/schemas/apistatusStatus'
        progress:
          $ref: '#/components/schemas/apiProgress'
        createdBy:
          title: User id that created this operation
          type: string
        createdAt:
          title: |-
            When the operation was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        lastModifiedAt:
          title: Last time the status got updated
          type: string
          format: date-time
    apiCancelBulkOperationRequest:
      title: Cancel a list of bulk operation ids
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          title: List of bulk operation ids to be cancelled
          type: array
          items:
            type: string
    apiCancelInputsExtractionJobsRequest:
      title: Cancel a list of extraction job ids
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          title: List of extraction job ids to be cancelled
          type: array
          items:
            type: string
    apiCloudRegion:
      description: >-
        We define a cloud region here to be used in Nodepools and by the cloud
        agent.

        There will be one cloud agent per CloudRegion.

        This allows us to define CloudRegions that are VPCs within one physical
        cloud and have that

        managed by one cloud agent which can list all nodepools for that VPC to
        deploy them and

        orchestrate work within them.
      type: object
      properties:
        id:
          type: string
        cloud:
          $ref: '#/components/schemas/CloudRegionCloud'
        region:
          description: >-
            The region. The naming here depends on the cloud choice above and
            will be validated

            against which clouds+regions that Clarifai currently supports.
          type: string
    apiCluster:
      title: Cluster data
      type: object
      properties:
        id:
          type: string
        count:
          title: Number of annotations tied to the cluster in the app
          type: integer
          format: int64
        score:
          description: >-
            The score assigned to this cluster.

            For List Clusters endpoint, this represents percentage of inputs in
            the app assigned to this cluster.
          type: number
          format: float
        hits:
          title: Representative hits for cluster (for now we only return 1)
          type: array
          items:
            $ref: '#/components/schemas/apiHit'
        projection:
          type: array
          items:
            type: number
            format: float
    apiCollaboration:
      description: collaboration includes an app you're invited to work on.
      type: object
      properties:
        app:
          $ref: '#/components/schemas/apiApp'
        appOwner:
          $ref: '#/components/schemas/apiUser'
        scopes:
          title: the low-level scope users are shared with for this collaboration
          type: array
          items:
            type: string
        endpoints:
          title: >-
            the endpoint-level scopes users are shared with for this
            collaboration
          type: array
          items:
            type: string
        createdAt:
          title: when is the collaboration created
          type: string
          format: date-time
    apiCollaborator:
      title: Collaborator - invited user, who shares an access to an application
      type: object
      properties:
        id:
          title: id of this collaborator
          type: string
        app:
          $ref: '#/components/schemas/apiApp'
        user:
          $ref: '#/components/schemas/apiUser'
        scopes:
          title: the permission this collaborator
          type: array
          items:
            type: string
        endpoints:
          type: array
          items:
            type: string
        createdAt:
          title: |-
            When the app was shared with. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        modifiedAt:
          description: When the collaborator was updated.
          type: string
          format: date-time
        deletedAt:
          description: When the collaborator was removed from app.
          type: string
          format: date-time
    apiCollector:
      title: >-
        Collector is a data pathway from a CollectorSource to an app to collect
        data automatically.

        For example, a CollectorSource
      type: object
      properties:
        description:
          description: Human readable description for the collector.
          type: string
        id:
          description: Unique ID for the collector.
          type: string
        createdAt:
          title: |-
            When the collector is created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        preQueueWorkflowId:
          description: >-
            This is a workflow to run inline in model predict calls. It should
            ONLY have very fast and

            light-weight models in it as it will effect the speed of the
            predictions being made.

            This workflow's purpose is to filter down the inputs to queue for
            the collector to process.

            The input to this workflow is going to be the OUTPUT of the model,
            not the input to the model

            since we want to encourage having fast workflows that can also take
            advantage of the model

            outputs to make deciions (for example: thresholding based on
            concepts). If the workflow

            output has any field that is non-empty then the input will be queued
            for the collector

            to process with the post_queue_workflow_id.


            As a simpler alternative, pre_queue_random_sample can be set to just
            use random sampling instead.
          type: string
        preQueueRandomSample:
          description: >-
            Instead of needing to create a new workflow for
            pre_queue_workflow_id, if just random sampling

            of the model inputs is required, then pre_queue_random_sample can be
            set to a value from (0-1]

            to denote the fraction of inputs to collect.
          type: number
          format: float
        postQueueWorkflowId:
          description: >-
            A workflow to run to after the collector is processing the queued
            input. This workflow

            uses the original input to the model as input to the workflow so
            that you can run additional

            models as well on that input to decide whether to queue the model or
            not. If the workflow

            output has any field that is non-empty then it will be passed on to
            POST /inputs to

            the destination app.
          type: string
        collectorSource:
          $ref: '#/components/schemas/apiCollectorSource'
        status:
          $ref: '#/components/schemas/apistatusStatus'
        collectOutputs:
          description: >-
            Whether to collect outputs or not. Default is false. If selected,
            outputs from the

            original model predict call will be posted as annotations along with
            the input with success status.
          type: boolean
    apiCollectorSource:
      description: >-
        Configuration for the source to collect data from.

        Only one of the fields can be present at a time.


        The ID of the source in case we want to implment
        /collectors/{collector_id}/sources
         string id = 1;
      type: object
      properties:
        apiPostModelOutputsCollectorSource:
          $ref: '#/components/schemas/apiAPIPostModelOutputsCollectorSource'
    apiColor:
      title: Color data
      type: object
      properties:
        rawHex:
          type: string
        w3c:
          $ref: '#/components/schemas/apiW3C'
        value:
          type: number
          format: float
    apiComputeInfo:
      description: >-
        These are the resource needs of a given API object such as a model.

        This is what they require as a minimum to run and will be used upon
        scheduling

        as the request and limit for the k8s pod. If we want to separate limits
        and requests in the

        future we can allow setting a limits ComputeInfo and a requests
        ComputeInfo.
      type: object
      properties:
        numCpus:
          description: Number of CPUs.
          type: integer
          format: int64
        cpuMemory:
          description: Amount of CPU memory to use as a minimum.
          type: string
        numAccelerators:
          description: >-
            Number of accelerators (typically GPUs, TPUs, etc. not CPUs) for
            this resource.
          type: integer
          format: int64
        acceleratorMemory:
          description: >-
            Amount of accelerator/GPU memory to use as a minimum.

            This is defined per accelerator.

            This follows the format used by kubernetes like 1Ki, 2Mi, 3Gi, 4Ti.


            The supported accelerators that the resource can run on. If the
            resource requires a specific
             accelerator type then it will only be scheduled on nodes that have that type of accelerator.
             If there is no hard requirements beyond the number of accelerators and their memory then this
             field can be left empty.
             This setting will cause an error if num_accelerators == 0
          type: string
        acceleratorType:
          description: >-
            Or should it be removed completely and use the nodepool accelerator
            type itself.

            These are the supported accelerators that the model can run on.
          type: array
          items:
            type: string
    apiConcept:
      title: Concept or tag
      type: object
      properties:
        id:
          description: The concept's unique id.
          type: string
        name:
          description: The name of the concept in the given language.
          type: string
        value:
          description: >-
            Used to indicate presence (1.0) or not (0.0) of this concept when
            making a request.

            This is also the prediction probability when returning predictions
            from our API.

            For convenience we use the default of 1.0 when making requests so
            the concept you provide is

            is treated as a positive (1.0) and not a negative (which would be
            value == 0.0).
          type: number
          format: float
        createdAt:
          description: >-
            When the concept was created. The format is
            https://www.ietf.org/rfc/rfc3339.txt .

            Example: "2006-01-02T15:04:05.999999Z". This field is used only in a
            response.
          type: string
          format: date-time
        language:
          description: >-
            The language in which the concept name is in. This is *ONLY* used in
            the response and setting

            it in a request is ignored since the default language of your app is
            used when creating

            or patching a Concept. To set other languages for your concept use
            the ConceptLanguage object

            and its corresponding endpoints.
          type: string
        appId:
          description: >-
            The application id that this concept is within. This can be ignored
            by most users.
          type: string
        definition:
          description: >-
            The definition for the concept. Similar to name. This can be ignored
            by most users.
          type: string
        vocabId:
          description: >-
            The vocabulary that this concept belongs to. This is useful if you
            have different unique sets

            of concepts that you can separate out based on this field. For
            example "age_appearance" vs

            "gender_appearance" in a list of concept returned from the
            demographics model.
          type: string
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        userId:
          description: The user the concept belongs to.
          type: string
        keypointInfo:
          $ref: '#/components/schemas/apiKeypointInfo'
        extraInfo:
          $ref: '#/components/schemas/apiConceptExtraInfo'
    apiConceptCount:
      title: ConceptCount
      type: object
      properties:
        id:
          description: The concept's unique id.
          type: string
        name:
          description: The name of the concept.
          type: string
        conceptTypeCount:
          $ref: '#/components/schemas/apiConceptTypeCount'
        detailConceptCount:
          $ref: '#/components/schemas/apiDetailConceptCount'
    apiConceptExtraInfo:
      description: >-
        ConceptExtraInfo represents extra information related to a concept that
        is context-dependent.

        It is only set when requested in ConceptExtraInfoRequest.
      type: object
      properties:
        isRankable:
          description: >-
            Whether this concept is rankable based on ConceptExtraInfoRequest
            configuration.
          type: boolean
    apiConceptExtraInfoRequest:
      type: object
      properties:
        rankableModel:
          $ref: '#/components/schemas/apiModel'
    apiConceptLanguage:
      description: >-
        This represents a link to an outside source for the given concept.

        The values from here are sticked into Concept message into the name and
        definition fields when

        returning from the API in your default language. The "id" field here
        becomes the "language"

        field of the Concept message which is a little weird.
      type: object
      properties:
        id:
          description: This is the language code for the language such as "en".
          type: string
        name:
          description: The type of the outside source.
          type: string
        definition:
          description: The ID that is referenced in the source.
          type: string
    apiConceptMappingJob:
      title: ConceptMappingJob
      type: object
      properties:
        knowledgeGraphId:
          title: >-
            The id of the knowledge graph being used for this concept mapping
            job
          type: string
        conceptIds:
          title: The ids of the concepts being mapped
          type: array
          items:
            type: string
    apiConceptQuery:
      title: ConceptQuery
      type: object
      properties:
        name:
          description: The name of the concept to search.
          type: string
        language:
          description: The language of the concept name in a search. Defaults to English.
          type: string
        workflowId:
          description: >-
            The id of workflow. If no id is provided, then application base
            workflow is used.
          type: string
        useCases:
          description: >-
            The concepts must belong to workflow models with specified use
            cases.

            Multiple values are joined using an OR condition.
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowModelUseCase'
    apiConceptRelation:
      title: >-
        This represents a relation (i.e. edge) between the subject concept and
        the object concept
      type: object
      properties:
        id:
          title: ID of the concept relation
          type: string
        subjectConcept:
          $ref: '#/components/schemas/apiConcept'
        objectConcept:
          $ref: '#/components/schemas/apiConcept'
        predicate:
          description: >-
            The predicate (i.e. edge) linking the subject and the object

            Both subject_concept and object_concept are concepts.

            The predicate is the type of relationship.

            That predicate acts on the subject.


            There are three current types of predicates:

            1) "hyponym"

            2) "hypernym"

            3) "synonym"


            1) For example, 'hyponym' is a type of predicate which represents
            'is_a_kind_of' relation so

            the following relationship:

            'honey' (subject), 'hyponym' (predicate), 'food' (object)

            Can more easily be read as:

            'honey' 'is a kind of' 'food'



            2) The 'hypernym' relation is the opposite of 'hyponym' and when you
            add one of the

            relationships the opposite will automatically appear for you in
            queries.


            The 'hypernym' can be read as 'is a parent of' so:

            'food' (subject), 'hypernym' (predicate), 'honey' (object)

            Can more easily be read as:

            'food' is a parent of 'honey'


            3) The 'synonym' relation defines two concepts that essential mean
            the same thing. This

            is more like a "is" relationship. So for example a 'synonym'
            relationship could be:

            "puppy" is "pup"

            The reverse is also true once the former is added so:

            "pup" is "puppy"

            will appear in queries as well.
          type: string
        knowledgeGraphId:
          description: >-
            The knowledge graph id that this edge belongs to. If using the app's
            global knowledge graph

            and not a specific one then this should be the empty string "".
          type: string
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
    apiConceptTypeCount:
      title: ConceptTypeCount
      type: object
      properties:
        positive:
          description: >-
            The number of inputs that have a concept with a value of 1.0
            (indicating presence of the

            concept in an input).
          type: integer
          format: int64
        negative:
          description: >-
            The number of inputs that have a concept with a value of 0.0
            (indicating absence of the

            concept in an input).
          type: integer
          format: int64
    apiConfusionMatrix:
      title: ConfusionMatrix
      type: object
      properties:
        matrix:
          type: array
          items:
            $ref: '#/components/schemas/apiConfusionMatrixEntry'
        conceptIds:
          description: >-
            These concept_ids are ordered by the strength of the diagonal in the
            ConfusionMatrix.
          type: array
          items:
            type: string
    apiConfusionMatrixEntry:
      title: ConfusionMatrixEntry
      type: object
      properties:
        predicted:
          type: string
        actual:
          type: string
        value:
          type: number
          format: float
        predictedConcept:
          $ref: '#/components/schemas/apiConcept'
        actualConcept:
          $ref: '#/components/schemas/apiConcept'
    apiCooccurrenceMatrix:
      title: CooccurrenceMatrix
      type: object
      properties:
        matrix:
          type: array
          items:
            $ref: '#/components/schemas/apiCooccurrenceMatrixEntry'
        conceptIds:
          description: >-
            These concept_ids are ordered by the strength of the diagonal in the
            ConfusionMatrix.
          type: array
          items:
            type: string
    apiCooccurrenceMatrixEntry:
      title: 'NOTE: this is inefficient, should just have the order of the rows/cols'
      type: object
      properties:
        row:
          title: concept_id for the row
          type: string
        col:
          title: concept_id for the col
          type: string
        count:
          type: integer
          format: int64
    apiData:
      title: Data
      type: object
      properties:
        image:
          $ref: '#/components/schemas/apiImage'
        video:
          $ref: '#/components/schemas/apiVideo'
        concepts:
          description: A list of concepts.
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        geo:
          $ref: '#/components/schemas/apiGeo'
        colors:
          description: The dominant colors within an image.
          type: array
          items:
            $ref: '#/components/schemas/apiColor'
        clusters:
          description: Clustering centroids for inputs.
          type: array
          items:
            $ref: '#/components/schemas/apiCluster'
        embeddings:
          description: Embedding vectors representing each input.
          type: array
          items:
            $ref: '#/components/schemas/apiEmbedding'
        regions:
          description: For recursing into localized regions of an input.
          type: array
          items:
            $ref: '#/components/schemas/apiRegion'
        frames:
          description: For temporal content like video.
          type: array
          items:
            $ref: '#/components/schemas/apiFrame'
        text:
          $ref: '#/components/schemas/apiText'
        audio:
          $ref: '#/components/schemas/apiAudio'
        tracks:
          description: Track information.
          type: array
          items:
            $ref: '#/components/schemas/apiTrack'
        timeSegments:
          description: Time segments information.
          type: array
          items:
            $ref: '#/components/schemas/apiTimeSegment'
        hits:
          title: Holds score, rank, and user, app, input IDs and search hit data
          type: array
          items:
            $ref: '#/components/schemas/apiHit'
        heatmaps:
          title: Heatmap as 2d image
          type: array
          items:
            $ref: '#/components/schemas/apiImage'
    apiDataSourceCredentials:
      type: object
      properties:
        s3Creds:
          $ref: '#/components/schemas/apiAWSCreds'
        gcpCreds:
          description: >-
            GCP Cloud Storage uses service account key data(creds.json) as Byte
            array for authentication.
          type: string
          format: byte
        azureBlobCreds:
          $ref: '#/components/schemas/apiAzureBlobCreds'
    apiDataSourceURL:
      type: object
      properties:
        url:
          description: Supported providers are AWS S3, Azure blob, GCP cloud storage.
          type: string
        credentials:
          $ref: '#/components/schemas/apiDataSourceCredentials'
    apiDataType:
      title: '- UNDEFINED: Default value, should not be used'
      type: string
      enum:
        - UNDEFINED
        - STRING
        - UINT8
        - INT32
        - INT64
        - FP32
      default: UNDEFINED
    apiDataset:
      title: Dataset
      type: object
      properties:
        description:
          title: Description of the dataset
          type: string
        version:
          $ref: '#/components/schemas/apiDatasetVersion'
        id:
          title: The ID for the dataset
          type: string
        createdAt:
          description: |-
            When the dataset was created.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            When the dataset was modified.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        appId:
          description: The app the dataset belongs to.
          type: string
        userId:
          description: The user the dataset belongs to.
          type: string
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        defaultAnnotationFilter:
          $ref: '#/components/schemas/apiAnnotationFilter'
        defaultProcessingInfo:
          $ref: '#/components/schemas/apiDatasetVersionProcessingInfo'
        notes:
          description: >-
            Notes for the dataset

            This field should be used for in-depth notes and supports up to
            64Kbs.
          type: string
        isStarred:
          description: Whether the dataset is starred by the requesting user.
          type: boolean
        starCount:
          description: Number of users that starred this dataset.
          type: integer
          format: int32
        bookmarkOrigin:
          $ref: '#/components/schemas/apiBookmarkOrigin'
        image:
          $ref: '#/components/schemas/apiImage'
    apiDatasetInput:
      title: DatasetInput
      type: object
      properties:
        createdAt:
          description: |-
            When the input was added to the dataset.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        input:
          $ref: '#/components/schemas/apiInput'
    apiDatasetSplit:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/apiDataset'
        percentage:
          title: |-
            For RANDOM_PERCENTAGE_SPLIT.
            Values from (0,100]
          type: integer
          format: int64
    apiDatasetVersion:
      title: DatasetVersion
      type: object
      properties:
        description:
          title: Description of the dataset version
          type: string
        id:
          title: The ID for the dataset version
          type: string
        createdAt:
          description: |-
            When the dataset version was created.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            When the dataset version was modified.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        appId:
          description: The app the dataset version belongs to.
          type: string
        userId:
          description: The user the dataset version belongs to.
          type: string
        datasetId:
          description: The dataset the dataset version belongs to.
          type: string
        annotationFilterConfig:
          $ref: '#/components/schemas/apiAnnotationFilterConfig'
        modelPredictConfig:
          $ref: '#/components/schemas/apiModelPredictConfig'
        status:
          $ref: '#/components/schemas/apistatusStatus'
        processingInfo:
          $ref: '#/components/schemas/apiDatasetVersionProcessingInfo'
        metrics:
          title: Dataset version metrics
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiDatasetVersionMetrics'
        exportInfo:
          $ref: '#/components/schemas/apiDatasetVersionExportInfo'
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        embedModelVersionIds:
          description: >-
            The embedding models to return embeddings for. If empty, no
            embeddings are returned.
          type: array
          items:
            type: string
    apiDatasetVersionExport:
      description: >-
        DatasetVersionExport contains metadata for a single dataset version
        export.
      type: object
      properties:
        format:
          $ref: '#/components/schemas/apiDatasetVersionExportFormat'
        status:
          $ref: '#/components/schemas/apistatusStatus'
        url:
          description: >-
            url is the URL from where the dataset version export can be
            downloaded.
          type: string
        size:
          description: size is the size of the dataset version export in number of bytes.
          type: string
          format: uint64
        includeEmbeddings:
          description: whether to include embeddings in the export or not.
          type: boolean
    apiDatasetVersionExportFormat:
      description: >2-
         - CLARIFAI_DATA_PROTOBUF: CLARIFAI_DATA_PROTOBUF is the proprietary Clarifai API Data format. It
        is a ZIP-archive containing batches of serialized InputBatch protobuf
        messages.


        Note that only the "id" and "data" fields of exported inputs are set.
         - CLARIFAI_DATA_JSON: CLARIFAI_DATA_JSON is the proprietary Clarifai API Data format in JSON. It
        is a ZIP-archive containing batches of serialized InputBatch JSON
        messages.


        Note that only the "id" and "data" fields of exported inputs are set.
         - COCO: COCO is the data format used by Common Objects in Context. It is a
        ZIP-archive containing JSON files with the dataset version annotations.

        See https://cocodataset.org/#format-data.
      type: string
      enum:
        - DATASET_VERSION_EXPORT_FORMAT_NOT_SET
        - CLARIFAI_DATA_PROTOBUF
        - CLARIFAI_DATA_JSON
        - COCO
      default: DATASET_VERSION_EXPORT_FORMAT_NOT_SET
    apiDatasetVersionExportInfo:
      description: >-
        DatasetVersionExportInfo contains information about all exports of a
        dataset version.


        If the dataset version has not been exported in a format, then the
        DatasetVersionExport

        field for that format is empty instead of having a "not exported"
        status.
      type: object
      properties:
        clarifaiDataProtobuf:
          $ref: '#/components/schemas/apiDatasetVersionExport'
        clarifaiDataJson:
          $ref: '#/components/schemas/apiDatasetVersionExport'
        coco:
          $ref: '#/components/schemas/apiDatasetVersionExport'
    apiDatasetVersionMetrics:
      type: object
      properties:
        inputsCount:
          title: Number of inputs
          type: string
          format: uint64
        unlabeledInputsCount:
          description: >-
            Number of unlabeled inputs

            An input is considered unlabeled if it there are no annotations with
            positive labels for that input.
          type: string
          format: uint64
        inputsWithMetadataCount:
          title: Number of inputs that have metadata
          type: string
          format: uint64
        inputsWithGeoCount:
          title: Number of inputs that have geo information
          type: string
          format: uint64
        regionsCount:
          title: Number of regions
          type: string
          format: uint64
        regionLocationMatrix:
          $ref: '#/components/schemas/MatrixUint64'
        boundingBoxesCount:
          title: Number of bounding boxes
          type: string
          format: uint64
        polygonsCount:
          title: Number of polygons
          type: string
          format: uint64
        pointsCount:
          title: Number of points
          type: string
          format: uint64
        masksCount:
          title: Number of masks
          type: string
          format: uint64
        regionInputsCount:
          description: >-
            Number of inputs that have regions attached

            Note that this is not a recursive count: if an input contains frames
            that contains regions, then the region_frames_count is increased,
            but region_inputs_count is not increased.
          type: string
          format: uint64
        regionFramesCount:
          title: Number of frames that have regions attached
          type: string
          format: uint64
        framesCount:
          title: Number of frames
          type: string
          format: uint64
        frameInputsCount:
          title: Number of inputs that have frames attached
          type: string
          format: uint64
        embeddingsCount:
          title: Number of embeddings
          type: string
          format: uint64
        positiveInputTagsCount:
          title: Number of positive tags added at input-level
          type: string
          format: uint64
        positiveRegionTagsCount:
          title: Number of positive tags added at region-level
          type: string
          format: uint64
        positiveFrameTagsCount:
          title: Number of positive tags added at frame-level
          type: string
          format: uint64
    apiDatasetVersionMetricsGroup:
      type: object
      properties:
        parentPath:
          type: string
        type:
          $ref: '#/components/schemas/apiDatasetVersionMetricsGroupType'
        value: {}
        metrics:
          $ref: '#/components/schemas/apiDatasetVersionMetrics'
    apiDatasetVersionMetricsGroupType:
      description: >2-
         - INPUT_TYPE: Group data examples by input type.
        Examples: images, videos, text, audio.
         - CONCEPT_ID: Group data examples by concept ID.
        Examples: inputs with cat concept, inputs with dog concept.
         - CONCEPTS_COUNT: Group data examples by concepts count.
        Examples: inputs with 20 concepts, inputs with 21 concepts.
         - BOUNDING_BOXES_COUNT: Group data examples by bounding boxes count.
        Examples: inputs with 20 bounding boxes, inputs with 21 bounding boxes.
         - POLYGONS_COUNT: Group data examples by polygons count.
        Examples: inputs with 20 polygons, inputs with 21 polygons.
         - POINTS_COUNT: Group data examples by points count.
        Examples: inputs with 20 points, inputs with 21 points.
         - MASKS_COUNT: Group data examples by masks count.
        Examples: inputs with 20 masks, inputs with 21 masks.
         - PIXELS_COUNT: Group data examples by pixels count.
        In order to reduce the number of groups, we use bins.

        Examples for bin size = 400: inputs with [200000, 200400) pixels, inputs
        with [200400, 200800) pixels.
         - ASPECT_RATIO: Group data examples by aspect ratio.
        In order to reduce the number of groups, we use bins.

        Examples for bin size = 0.1: inputs with [0.5, 0.6) aspect ratio, inputs
        with [0.6, 0.7) aspect ratio.
      type: string
      enum:
        - DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET
        - INPUT_TYPE
        - CONCEPT_ID
        - CONCEPTS_COUNT
        - BOUNDING_BOXES_COUNT
        - POLYGONS_COUNT
        - POINTS_COUNT
        - MASKS_COUNT
        - PIXELS_COUNT
        - ASPECT_RATIO
      default: DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET
    apiDatasetVersionProcessingInfo:
      description: >-
        DatasetVersionProcessingInfo contains information about processing
        applied

        to a dataset version.
      type: object
      properties:
        frameInterpolationInfo:
          $ref: '#/components/schemas/apiFrameInterpolationInfo'
    apiDeleteAnnotationFiltersRequest:
      description: Request to delete several annotation filters by list of ids.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        annotationFilterIds:
          description: Specify which filters to delete.
          type: array
          items:
            type: string
    apiDeleteAnnotationsRequest:
      description: Request to delete several things by the list of ids.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          title: Delete annotations with IDs
          type: array
          items:
            type: string
        inputIds:
          title: >-
            Delete annotations for these Input IDs

            Note that 'ids' are optional but if the are provided the number and
            order in

            'ids' and 'input_ids' should match

            If you do not specifiy 'ids' all the annotations for 'input_ids' are
            deleted

            However you need to specify at least one value for 'input_ids'

            i.e. this API does not support deleting all annotations
          type: array
          items:
            type: string
    apiDeleteBulkOperationRequest:
      description: |-
        Request to delete the terminated bulk operations by ID
        Only operations in terminated state can be deleted.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          title: List of bulk operation ids to be deleted
          type: array
          items:
            type: string
    apiDeleteCollectorsRequest:
      description: Request to delete several things by the list of ids.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          type: array
          items:
            type: string
        deleteAll:
          type: boolean
    apiDeleteConcepts:
      type: object
      properties:
        concepts:
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
        userIds:
          type: array
          items:
            type: string
    apiDeleteDatasetsRequest:
      description: Request to delete several datasets by list of ids.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        datasetIds:
          type: array
          items:
            type: string
    apiDeleteFromDataset:
      type: object
      properties:
        datasetId:
          type: string
    apiDeleteGeo:
      type: object
    apiDeleteInputsRequest:
      description: Request to delete several things by the list of ids.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          type: array
          items:
            type: string
    apiDeleteLabelOrdersRequest:
      description: Request to delete a list of label orders.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          type: array
          items:
            type: string
    apiDeleteMetadata:
      type: object
      properties:
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
    apiDeleteModelsRequest:
      description: Request to delete several things by the list of ids.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          type: array
          items:
            type: string
        deleteAll:
          type: boolean
    apiDeleteTasksRequest:
      description: Request to delete a list of tasks.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          type: array
          items:
            type: string
    apiDeleteUploadsRequest:
      title: Stops or deletes multipart upload
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          type: array
          items:
            type: string
    apiDeleteWorkflowsRequest:
      description: Request to delete several things by the list of ids.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        ids:
          type: array
          items:
            type: string
        deleteAll:
          type: boolean
    apiDeployment:
      description: >-
        A deployment allows you to configure how runners for a particular type
        of resource will

        scale up and down. These are unique per user_id, nodepool and model so
        for differnet nodepools

        you can scale differently.
      type: object
      properties:
        id:
          description: An id for this configured deployment.
          type: string
        userId:
          description: >-
            The user who owns the deployment. These live in the user/org
            account.
          type: string
        autoscaleConfig:
          $ref: '#/components/schemas/apiAutoscaleConfig'
        nodepools:
          title: >-
            You can configure different autoscaling per nodepool(s).

            These nodepools have to be also owned by the same user_id/org as
            this deployment.

            If there is more than one nodepool we use the model's ComputeInfo to
            match

            with what the nodepool provides to decide which one can handle it
            combined with the

            NodepoolRank below. Note: even within a single nodepool if it is
            heterogeneous then

            we need a way to rank scheduling choices when we don't know how to
            decide (like a model

            supports
          type: array
          items:
            $ref: '#/components/schemas/apiNodepool'
        model:
          $ref: '#/components/schemas/apiModel'
        workflow:
          $ref: '#/components/schemas/apiWorkflow'
        schedulingChoice:
          $ref: '#/components/schemas/DeploymentSchedulingChoice'
    apiDetailConceptCount:
      title: DetailConceptCount
      type: object
      properties:
        processed:
          $ref: '#/components/schemas/apiConceptTypeCount'
        toProcess:
          $ref: '#/components/schemas/apiConceptTypeCount'
        errors:
          $ref: '#/components/schemas/apiConceptTypeCount'
        processing:
          $ref: '#/components/schemas/apiConceptTypeCount'
    apiEmailAddress:
      title: EmailAddress
      type: object
      properties:
        email:
          type: string
        primary:
          type: boolean
        verified:
          type: boolean
    apiEmbedding:
      title: Embedding
      type: object
      properties:
        vector:
          type: array
          items:
            type: number
            format: float
        numDimensions:
          type: integer
          format: int64
    apiEndpointDeps:
      title: EndpointDeps
      type: object
      properties:
        endpoint:
          title: The fully qualified endpoint to
          type: string
        dependingScopes:
          description: Other scopes that are required.
          type: array
          items:
            type: string
    apiEvalInfo:
      type: object
      properties:
        params:
          description: |-
            To control the evaluation process.
            Allow a list of parameters.
          type: object
    apiEvalMetrics:
      title: EvalMetrics
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/apiMetricsSummary'
        status:
          $ref: '#/components/schemas/apistatusStatus'
        userId:
          title: user id that owns this evaluation
          type: string
        appId:
          title: app id that owns this evaluation
          type: string
        id:
          title: Id of this evaluation
          type: string
        model:
          $ref: '#/components/schemas/apiModel'
        groundTruthDataset:
          $ref: '#/components/schemas/apiDataset'
        predictionsDataset:
          $ref: '#/components/schemas/apiDataset'
        confusionMatrix:
          $ref: '#/components/schemas/apiConfusionMatrix'
        cooccurrenceMatrix:
          $ref: '#/components/schemas/apiCooccurrenceMatrix'
        labelCounts:
          $ref: '#/components/schemas/apiLabelDistribution'
        binaryMetrics:
          type: array
          items:
            $ref: '#/components/schemas/apiBinaryMetrics'
        testSet:
          type: array
          items:
            $ref: '#/components/schemas/apiEvalTestSetEntry'
        metricsByArea:
          type: array
          items:
            $ref: '#/components/schemas/apiBinaryMetrics'
        metricsByClass:
          type: array
          items:
            $ref: '#/components/schemas/apiBinaryMetrics'
        trackerMetrics:
          type: array
          items:
            $ref: '#/components/schemas/apiTrackerMetrics'
        evalInfo:
          $ref: '#/components/schemas/apiEvalInfo'
        extendedMetrics:
          $ref: '#/components/schemas/apiExtendedMetrics'
    apiEvalTestSetEntry:
      title: EvalTestSetEntry
      type: object
      properties:
        input:
          $ref: '#/components/schemas/apiInput'
        predictedConcepts:
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
        groundTruthConcepts:
          title: All the ground truth concepts will be show on the top level
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
        annotation:
          $ref: '#/components/schemas/clarifaiapiAnnotation'
    apiEvaluationType:
      title: '- Classification: default'
      type: string
      enum:
        - Undefined
        - Classification
        - Detection
        - Segmentation
        - Clustering
        - Tracker
        - Generation
      default: Undefined
    apiExtendedMetrics:
      type: object
      properties:
        userMetrics:
          type: object
    apiFieldsValue:
      title: FieldsValue
      type: object
      properties:
        confusionMatrix:
          type: boolean
        cooccurrenceMatrix:
          type: boolean
        labelCounts:
          type: boolean
        binaryMetrics:
          type: boolean
        testSet:
          type: boolean
        metricsByArea:
          type: boolean
        metricsByClass:
          type: boolean
    apiFilter:
      title: Filter
      type: object
      properties:
        negate:
          title: >-
            If True then this will flip the meaning of this part of the

            query. This allow for queries such as dog AND !
            metadata=={"blah":"value"}
          type: boolean
        annotation:
          $ref: '#/components/schemas/clarifaiapiAnnotation'
        input:
          $ref: '#/components/schemas/apiInput'
        lastUpdatedTimeRange:
          $ref: '#/components/schemas/apiTimeRange'
    apiFrame:
      description: A Frame of time-series Data such as a Video.
      type: object
      properties:
        frameInfo:
          $ref: '#/components/schemas/apiFrameInfo'
        data:
          $ref: '#/components/schemas/apiData'
        id:
          description: An ID for the frame.
          type: string
    apiFrameInfo:
      description: The information of the location of the Frame.
      type: object
      properties:
        index:
          title: >-
            Deprecated. Use Time instead.

            The index of the frame, informational and optional.

            Depends on the sampling rate used during processing

            May be 0 for interpolated frames that are generated for brief time
            (training) or if new frame is manually added
          type: integer
          format: int64
        time:
          description: >-
            time in the video in milliseconds. This is independent of the
            sampling rates used during

            processing.
          type: integer
          format: int64
    apiFrameInterpolationInfo:
      description: >-
        FrameInterpolationInfo contains information about frame annotations

        interpolated from other video annotations, such as image
        object-detection

        regions generated from video object-tracking regions.
      type: object
      properties:
        sampleMs:
          description: >-
            sample_ms is the sampling rate at which frame annotations are
            interpolated.

            If sample_ms is zero, then the dataset default_processing_info value
            is used.

            If the dataset default is zero or not set, then the input frame
            prediction

            sampling rate is used.
          type: integer
          format: int64
    apiFullTag:
      type: object
      properties:
        name:
          title: Display name of the tag. Ex. "English"
          type: string
        id:
          title: Id value for referencing. Ex. "en"
          type: string
    apiGeo:
      title: Geo
      type: object
      properties:
        geoPoint:
          $ref: '#/components/schemas/apiGeoPoint'
        geoLimit:
          $ref: '#/components/schemas/apiGeoLimit'
        geoBox:
          title: 'NOTE: inconsistency: should have been geo_boxed_points'
          type: array
          items:
            $ref: '#/components/schemas/apiGeoBoxedPoint'
    apiGeoBoxedPoint:
      title: GeoBoxedPoint
      type: object
      properties:
        geoPoint:
          $ref: '#/components/schemas/apiGeoPoint'
    apiGeoLimit:
      title: GeoLimit
      type: object
      properties:
        type:
          type: string
        value:
          type: number
          format: float
    apiGeoPoint:
      title: GeoPoint
      type: object
      properties:
        longitude:
          type: number
          format: float
        latitude:
          type: number
          format: float
    apiGetResourceCountsResponse:
      title: ResourceCountResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        datasets:
          type: string
          format: int64
        models:
          type: string
          format: int64
        workflows:
          type: string
          format: int64
        modules:
          type: string
          format: int64
        inputs:
          type: string
          format: int64
    apiGetVideoManifestResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        manifestUrl:
          title: |-
            MPEG-dash manifest as data-URI, base64-encoded
            Can be empty if status is FAILED
            Can be fallback manifest if status is MIXED_STATUS
          type: string
    apiHit:
      title: Hit
      type: object
      properties:
        score:
          description: >-
            This is the score for the ranked Hit results of the search query.
            This score is a number

            between 0.0 and 1.0 as it represents a confidence in the search Hit.
            For example, if you search

            for "car" and get a close matching Hit, the score should be close to
            1.0. If you get a score

            of close to 0.0 that means it's very disimilar to your query, in
            this case NOT a "car". There

            is a special intermediate score of 0.5 that means that the Hit is
            not really correlated with

            your search query (ie. not similar or dissimlar to the query) which
            is a common occurrence

            when using negate queries.

            Note: some queries that are just filtering down your app of inputs
            may just return a score of

            1.0 for all Hits.
          type: number
          format: float
        input:
          $ref: '#/components/schemas/apiInput'
        annotation:
          $ref: '#/components/schemas/clarifaiapiAnnotation'
        userId:
          description: >-
            The customer-facing id of the user who owns the app the asset came
            from.
          type: string
        appId:
          description: The cfid of the app the asset came from.
          type: string
    apiHitCount:
      type: object
      properties:
        estimatedTotal:
          description: >-
            The estimated total number of hits for the search query, not just
            the current page.
          type: string
          format: uint64
    apiHostedURL:
      title: HostedURL
      type: object
      properties:
        prefix:
          description: Prefix of the URL of every hosted image.
          type: string
        suffix:
          description: Suffix of an image stored in different sizes.
          type: string
        sizes:
          description: >-
            The sizes field lists which images of the different sizes are hosted
            in our storage. The URL

            of each hosted image can be obtained by joining the prefix, one of
            the sizes and suffix.
          type: array
          items:
            type: string
        crossorigin:
          title: |-
            The crossorigin property of html media tag
            For Secure Data Hosting this needs to be set to 'use-credentials'
          type: string
    apiIdUpdateSource:
      type: object
      properties:
        id:
          title: old id
          type: string
        newId:
          title: new id
          type: string
    apiImage:
      title: Image
      type: object
      properties:
        url:
          description: >-
            This is a URL to a publicly accessible image file. The platform will
            download this file server

            side and then process.
          type: string
        base64:
          description: >-
            The base64 field is using image file bytes directly in the request.

            NOTE: if you're sending a json request, then this MUST be base64
            encoded before sending (hence

            the name here).

            When using our grpc clients, you DO NOT need to base64 encode

            it yourself since the clients know how to do this for you
            automatically and will avoid the

            base64 encoding if they send a binary request.
          type: string
          format: byte
        allowDuplicateUrl:
          type: boolean
        hosted:
          $ref: '#/components/schemas/apiHostedURL'
        imageInfo:
          $ref: '#/components/schemas/apiImageInfo'
    apiImageInfo:
      type: object
      properties:
        width:
          title: width
          type: integer
          format: int32
        height:
          title: height
          type: integer
          format: int32
        format:
          title: image format
          type: string
        colorMode:
          title: image color mode
          type: string
    apiImportInfo:
      type: object
      properties:
        params:
          description: Used to configure model imports from third-party toolkits.
          type: object
    apiInput:
      title: Input
      type: object
      properties:
        id:
          title: The ID for the input
          type: string
        data:
          $ref: '#/components/schemas/apiData'
        createdAt:
          title: |-
            When the input was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        modifiedAt:
          description: When the input was modified.
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/apistatusStatus'
        datasetIds:
          description: >-
            List of dataset IDs that this input is part of

            Currently, this field is ONLY used to

            * search inputs part of dataset(s), e.g. in `PostSearches`,
            `PostInputsSearches` and `PostAnnotationsSearches` endpoints, and

            * to add inputs to dataset(s) in `PostInputs` endpoint.

            Note that this field is ignored for other endpoints, e.g.
            `GetInput`, `ListInputs` and `PatchInputs`.
          type: array
          items:
            type: string
    apiInputCount:
      description: 'NOTE: inconsistency: this is weird mix of plural and singular words.'
      type: object
      properties:
        processed:
          type: integer
          format: int64
        toProcess:
          type: integer
          format: int64
        errors:
          type: integer
          format: int64
        processing:
          type: integer
          format: int64
        reindexed:
          type: integer
          format: int64
        toReindex:
          type: integer
          format: int64
        reindexErrors:
          type: integer
          format: int64
        reindexing:
          type: integer
          format: int64
    apiInputIDConflictResolution:
      description: |2-
         - INPUT_ID_CONFLICT_RESOLUTION_NOT_SET: Defaults to SKIP
         - SKIP: Mark duplicate inputs as error and skip processing them.
         - SUFFIX: Add a suffix to inputs with conflicting IDs. Attempts numeric suffixes "-1" to "-9" and then a randomized suffix. Identical ID's in the same request are still treated as errors.
      type: string
      enum:
        - INPUT_ID_CONFLICT_RESOLUTION_NOT_SET
        - SKIP
        - SUFFIX
      default: INPUT_ID_CONFLICT_RESOLUTION_NOT_SET
    apiInputIDs:
      type: object
      properties:
        inputIds:
          type: array
          items:
            type: string
    apiInputInfo:
      title: InputInfo
      type: object
      properties:
        fieldsMap:
          description: >-
            Map from the api.Data field names to the underlying model graph's
            inputs. When using a

            PretrainedModelConfig the values in this map need to match the
            Triton config.pbtxt input names.
          type: object
        params:
          description: >-
            To control the inputs to the given model we allow a list of
            parameters

            defined for each ModelType as a Struct (JSON object) here. During
            training or inference, the

            settings contained within are sent to the training processor to
            alter the training process.
          type: object
        baseEmbedModel:
          $ref: '#/components/schemas/apiModel'
    apiInputsAddJob:
      type: object
      properties:
        id:
          title: id of the job
          type: string
        callBackUrl:
          description: >-
            If call back url is set, we will send a Post request to this
            endpoint with job status.
          type: string
        appPat:
          title: Personal Access Token to the application to which inputs are added
          type: string
        progress:
          $ref: '#/components/schemas/apiInputsAddJobProgress'
        createdAt:
          description: |-
            When the job was created.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            Most recent time when the job was updated.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        extractionJobs:
          title: Sub-jobs that extract inputs from the cloud and/or archives
          type: array
          items:
            $ref: '#/components/schemas/apiInputsExtractionJob'
        uploads:
          title: Archive uploads
          type: array
          items:
            $ref: '#/components/schemas/apiUpload'
        status:
          $ref: '#/components/schemas/apistatusStatus'
    apiInputsAddJobProgress:
      type: object
      properties:
        pendingCount:
          type: string
          format: uint64
        inProgressCount:
          type: string
          format: uint64
        successCount:
          type: string
          format: uint64
        failedCount:
          type: string
          format: uint64
    apiInputsDataSource:
      type: object
      properties:
        inputsAddJobId:
          description: >-
            Collect statistics about created inputs in job with given ID.

            On Post call:

            * If job ID is empty, then job is automatically created with random
            ID.

            * If job ID is non-empty, then a new job will be created with given
            ID.
          type: string
        url:
          $ref: '#/components/schemas/apiDataSourceURL'
        inputIdConflictResolution:
          $ref: '#/components/schemas/apiInputIDConflictResolution'
        inputTemplate:
          $ref: '#/components/schemas/apiInput'
    apiInputsExtractionJob:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        id:
          title: ID of extraction job
          type: string
        url:
          title: Url of archive or bucket
          type: string
        progress:
          $ref: '#/components/schemas/apiInputsExtractionJobProgress'
        createdAt:
          description: |-
            When the extraction job was started.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            Most recent time when the extraction job was updated.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        inputIdConflictResolution:
          $ref: '#/components/schemas/apiInputIDConflictResolution'
        inputTemplate:
          $ref: '#/components/schemas/apiInput'
    apiInputsExtractionJobProgress:
      type: object
      properties:
        audioInputsCount:
          type: string
          format: uint64
        imageInputsCount:
          type: string
          format: uint64
        videoInputsCount:
          type: string
          format: uint64
        textInputsCount:
          type: string
          format: uint64
        pendingArchivesCount:
          type: string
          format: uint64
        inProgressArchivesCount:
          type: string
          format: uint64
        completedArchivesCount:
          type: string
          format: uint64
        failedArchivesCount:
          type: string
          format: uint64
    apiInputsUpload:
      type: object
      properties:
        inputsAddJobId:
          description: >-
            Collect statistics about created inputs in job with given ID.

            * If job ID is empty, then job is automatically created with random
            ID.

            * If job ID is non-empty, then a new job will be created with given
            ID.
          type: string
        appPat:
          title: Personal Access Token to the application to which inputs are added
          type: string
        upload:
          $ref: '#/components/schemas/apiUpload'
        inputIdConflictResolution:
          $ref: '#/components/schemas/apiInputIDConflictResolution'
        inputTemplate:
          $ref: '#/components/schemas/apiInput'
    apiInstalledModuleVersion:
      type: object
      properties:
        id:
          description: A unique id for this install. This will be used in the browser url.
          type: string
        moduleVersion:
          $ref: '#/components/schemas/apiModuleVersion'
        appId:
          description: >-
            The app_id the ModuleVersion is installed into (not necessary where
            the ModuleVersion was

            created). This doesn't have to be provided in requests to install,
            but will be returned in

            responses.
          type: string
        userId:
          description: >-
            The user that the app belongs to where the ModuleVersion is
            installed into (not necessary where

            the ModuleVersion was created). This doesn't have to be provided in
            requests to install, but

            will be returned in responses.
          type: string
        createdAt:
          description: When the install was created.
          type: string
          format: date-time
        modifiedAt:
          description: When the install was last modified.
          type: string
          format: date-time
        deployUrl:
          description: >-
            The URL of where this app module version is deployed.

            If you provide this deploy_url when creating the install then it
            will

            be treated as a pre-deployed module. You can only use a pre-deployed
            module

            in when installing to an app_id that you own as the creator of the
            module.

            If you want to install someone elses module or to rely on Clarifai
            deploying

            your module for you, leave deploy_url empty when creating the
            install.

            If it is left empty, then deployment will occur when this module
            version is

            installed into an app using the git_commit_url of the ModuleVersion.
          type: string
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        keyId:
          description: >-
            The key ID to use for making requests to the API for this module.

            This key is associated to this installed module version by
            PostInstalledModuleVersionsKey

            request. The key is associated with the CALLER not the App Owner
            where this module is installed

            nor the author of the module. This allows the module to act on
            behalf of the caller at all

            times so we get proper permissions the caller has (such as if they
            are stranger, teammate or

            collaborator). This key should be a personal access token to enable
            modules to work across apps

            and have necessary abilities beyond what app-specific keys offer.
          type: string
    apiKey:
      title: Key
      type: object
      properties:
        description:
          title: The description
          type: string
        id:
          description: The id of this key, it is used for authorization.
          type: string
        type:
          title: >-
            The type of key, it can be api_key or personal_access_token, the
            default value is api_key
          type: string
        scopes:
          title: The low-level scopes this key has
          type: array
          items:
            type: string
        endpoints:
          title: The endpoint-level scopes this key has
          type: array
          items:
            type: string
        apps:
          description: >-
            The apps that this key give you access to, it is empty if this key
            is personal_access_token

            API key can only give you access to a single app.
          type: array
          items:
            $ref: '#/components/schemas/apiApp'
        createdAt:
          title: |-
            When the key was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        expiresAt:
          title: When does the key expires, the key won't expire if this is empty
          type: string
          format: date-time
        authorizedIdpIds:
          title: list of idp ids at which key is currently authorized
          type: array
          items:
            type: string
    apiKeypointEdge:
      type: object
      properties:
        k1:
          type: integer
          format: int64
        k2:
          type: integer
          format: int64
    apiKeypointInfo:
      type: object
      properties:
        keypointNames:
          title: Names of the keypoints
          type: array
          items:
            type: string
        skeleton:
          description: >-
            Defines the connections between keypoint_names. Each value
            represents the index in keypoint_names.
          type: array
          items:
            $ref: '#/components/schemas/apiKeypointEdge'
    apiKnowledgeGraph:
      title: >-
        A Knowledge Graph is a logical subsets of edges in the overall Concept
        Graph
      type: object
      properties:
        description:
          title: Human readable description of the knowledge graph
          type: string
        id:
          title: ID of the knowledge graph
          type: string
        name:
          title: Name of the knowledge graph
          type: string
        examplesAppId:
          title: >-
            The app that contains the images that correspond to the concepts in
            the knowledge graph
          type: string
        sampledExamplesAppId:
          title: >-
            The app that contains the sample images that we want to show the
            customer for the concepts in the knowledge graph
          type: string
    apiLOPQEvalResult:
      title: LOPQEvalResult
      type: object
      properties:
        k:
          description: Rank k for which all metrics are reported.
          type: integer
          format: int32
        recallVsBruteForce:
          description: Recall @ k assuming the brute force search is the ground truth.
          type: number
          format: float
        kendallTauVsBruteForce:
          description: >-
            Kendall's tau correlation @ k assuming the brute force search is the
            ground truth.
          type: number
          format: float
        mostFrequentCodePercent:
          description: >-
            The percentage of the most frequent code in the indexed part of
            evaluation data.
          type: number
          format: float
        lopqNdcg:
          title: >-
            Normalized Discounted Cumulative Gain (NDCG) @ k with a ground truth
            inferred from annotations

            and/or prediction for this evaluation LOPQ model.

            NDCG uses individual relevance scores of each returned image to
            evaluate the usefulness, or

            gain, of a document based on its position in the result list. The
            premise of DCG is that

            highly relevant documents appearing lower in a search result list
            should be penalized as the

            graded relevance value is reduced logarithmically proportional to
            the position of the result.

            See:
            https://en.wikipedia.org/wiki/Information_retrieval#Discounted_cumulative_gain
          description: >-
            To compute the relevance score between two images we consider two
            cases:

            1) Only one label for each image

            An image is relevant to an image query iff they are labeled the same
            (score 1), and

            not relevant otherwise (score 0)

            2) Multiple labels for each image

            Here an image relevancy with respect to a single image query is
            measured by f-beta score

            assuming the query image list of labels as ground truth and
            comparing them with that of

            the search result. These labels can come from image annotations or
            if substitute_annotation_misses

            is set, predictions of base classifier where any prediction with
            prob < prob_threshold are

            discarded. To quantify the relevancy score of a single search result
            we opt to compute precision

            and recall @ k for simplicity, and combine them with f-beta score to
            obtain a single number.
          type: number
          format: float
        bruteForceNdcg:
          description: >-
            Brute force NDCG which gives a baseline to compare to and is a
            measure of how good

            the embeddings are.
          type: number
          format: float
    apiLabelCount:
      title: LabelCount
      type: object
      properties:
        conceptName:
          type: string
        count:
          type: integer
          format: int64
        concept:
          $ref: '#/components/schemas/apiConcept'
    apiLabelDistribution:
      title: LabelDistribution
      type: object
      properties:
        positiveLabelCounts:
          type: array
          items:
            $ref: '#/components/schemas/apiLabelCount'
    apiLabelOrder:
      title: LabelOrder
      type: object
      properties:
        id:
          title: id of the order
          type: string
        name:
          title: name of the order
          type: string
        status:
          $ref: '#/components/schemas/apistatusStatus'
        autoRelease:
          description: >-
            if set to true, automatically release the labels once passed
            clarifai review.
          type: boolean
        allowEmptyTag:
          description: allow input without any tag.
          type: boolean
        desiredFulfillTime:
          title: User desired estimation when the task should be done
          type: string
          format: date-time
        estimateFulfillTime:
          description: Clarifai estimation when the task should be done .
          type: string
          format: date-time
        task:
          $ref: '#/components/schemas/apiTask'
        createdAt:
          description: |-
            When the label order was created.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            Most recent time when the label order was updated.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
    apiLabelSubmitConfig:
      type: object
      properties:
        taskAssignments:
          type: array
          items:
            $ref: '#/components/schemas/apiTaskAssignment'
    apiLayerShape:
      type: object
      properties:
        description:
          title: Description about the dimensions
          type: string
        dims:
          title: >-
            Supported dimensions

            Example: [-1,4] is a 2-dimensional array with the first dimension of
            variablesize, but second dimension with a static size:
            [[1,2,3,4],[4,5,6,7],...]
          type: array
          items:
            type: integer
            format: int32
        maxDims:
          description: >-
            Max dimension size, applicable to layers that can have flexible
            sizes.
          type: array
          items:
            type: integer
            format: int32
        dataType:
          $ref: '#/components/schemas/apiDataType'
    apiListOpenSourceLicensesResponse:
      title: ListOpenSourceLicensesResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        licenses:
          type: array
          items:
            type: string
    apiMask:
      description: Segmentation mask.
      type: object
      properties:
        image:
          $ref: '#/components/schemas/apiImage'
    apiMetricsSummary:
      title: MetricsSummary
      type: object
      properties:
        top1Accuracy:
          type: number
          format: float
        top5Accuracy:
          type: number
          format: float
        macroAvgRocAuc:
          type: number
          format: float
        macroStdRocAuc:
          type: number
          format: float
        macroAvgF1Score:
          type: number
          format: float
        macroStdF1Score:
          type: number
          format: float
        macroAvgPrecision:
          type: number
          format: float
        macroAvgRecall:
          type: number
          format: float
        meanAvgPrecisionIou50:
          type: number
          format: float
        meanAvgPrecisionIouRange:
          type: number
          format: float
        lopqMetrics:
          type: array
          items:
            $ref: '#/components/schemas/apiLOPQEvalResult'
    apiModel:
      description: >-
        This is the Model object which represents a created model in the
        platform.

        Each model has a particular type denoted by the model_type_id.

        When creating a Model with PostModels the following happens:
         - if the ModelType is trainable, then a new ModelVersion is created that is
           - UNTRAINED status by default
           - TRAINED status if a ModelVersion was included with PretrainedModelConfig in PostModels
         - if the ModelType is not trainable, then a new ModelVersion is created with TRAINED status.
        To modify config settings like OutputInfo for the Model you an use
        PatchModels. This will

        also create a new ModelVersion, potentially UNTRAINED following the same
        rules as above.

        The fields that are patchable include Model.name, Model.display_name and
        Model.output_info

        (except the Model.output_info.type and Model.output_info.type_ext).
      type: object
      properties:
        description:
          title: Short description about this model
          type: string
        id:
          description: >-
            The model's ID. Must be unique within a particular app and
            URL-friendly.
          type: string
        name:
          description: 'DEPRECATED: Please use the model id to name the model.'
          type: string
        createdAt:
          title: |-
            When the model was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
             the following from the API:
             "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        modifiedAt:
          title: When was the most recent model version created at
          type: string
          format: date-time
        appId:
          description: The app the model belongs to.
          type: string
        outputInfo:
          $ref: '#/components/schemas/apiOutputInfo'
        modelVersion:
          $ref: '#/components/schemas/apiModelVersion'
        displayName:
          description: 'DEPRECATED: Please use the model id to name the model.'
          type: string
        userId:
          description: The user id that the model belongs to.
          type: string
        defaultEvalInfo:
          $ref: '#/components/schemas/apiEvalInfo'
        modelTypeId:
          description: >-
            The ModelType.Id that is used for this model. This is used for all
            versions and you cannot

            change model_type_id between versions of the same model.
          type: string
        task:
          title: The task the model was trained to do
          type: string
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        presets:
          type: object
        notes:
          description: >-
            Notes for the model

            This field should be used for in-depth notes and supports up to
            64Kbs.
          type: string
        toolkits:
          title: Tags from toolkits category
          type: array
          items:
            type: string
        useCases:
          title: Tags from use_cases category
          type: array
          items:
            type: string
        languages:
          description: Tags from languages category.
          type: array
          items:
            type: string
        languagesFull:
          description: Tags from languages category with names, only used in responses.
          type: array
          items:
            $ref: '#/components/schemas/apiFullTag'
        checkConsents:
          type: array
          items:
            type: string
        isStarred:
          title: >-
            Is starred by the requesting user (only showed on get/list requests)

            Please use PostModelStars/DeleteModelStars endpoints to star/unstar
            a model
          type: boolean
        starCount:
          title: >-
            How many users have starred the model (only showed on get/list
            requests)

            Computed value, not editable
          type: integer
          format: int32
        workflowRecommended:
          title: Whether it's recommended that this model is used within a workflow
          type: boolean
        bookmarkOrigin:
          $ref: '#/components/schemas/apiBookmarkOrigin'
        image:
          $ref: '#/components/schemas/apiImage'
    apiModelLayerInfo:
      type: object
      properties:
        description:
          title: Brief description about the layer if needed
          type: string
        dataFieldName:
          title: The api.Data field this layer will be parsed into
          type: string
        shapes:
          description: >-
            Description of the expected shape. Can support multiple support
            layer shapes.
          type: array
          items:
            $ref: '#/components/schemas/apiLayerShape'
        requiresLabelFilename:
          title: >-
            Whether this layer should have a label_filename specified and
            provided
          type: boolean
    apiModelPredictConfig:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/apiModel'
    apiModelQuery:
      title: ModelQuery
      type: object
      properties:
        name:
          description: >-
            The name ofthe field. This supports wilcard queries like "gen*" to
            match "general" as an example.
          type: string
        modelTypeId:
          description: >-
            Filter models by the specific model_type_id. See ListModelTypes for
            the list of ModelType.Id's

            supported.
          type: string
    apiModelReference:
      description: >-
        A link to a html/markdown/text file that stores reference material tied
        to a model.
      type: object
      properties:
        id:
          title: Id of the reference
          type: string
        modelId:
          description: The id of the model this Model reference is tied to.
          type: string
        url:
          title: address of resource
          type: string
        name:
          title: name of link
          type: string
        metadata:
          title: >-
            To handle arbitrary json metadata:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
    apiModelType:
      description: >-
        ModelType is a definition of a set of models that generally have the
        same input and output fields.

        This is used to understand more about the possible models in our
        platform.
      type: object
      properties:
        title:
          description: A display title for this model.
          type: string
        description:
          description: Description of this model type.
          type: string
        id:
          description: A unique identifier for this model type.
          type: string
        inputFields:
          description: |-
            The list of input fields that this model expects as inputs.
            Used to validate that request input data has the expected fields.
          type: array
          items:
            type: string
        outputFields:
          description: The list of output fields that this model accepts.
          type: array
          items:
            type: string
        trainable:
          description: Is this model trainable in our platform.
          type: boolean
        creatable:
          description: >-
            Is this model creatable. We have some pre-trained model types that
            users cannot create yet in

            model mode.
          type: boolean
        internalOnly:
          description: Is this model type only for internal users at this time.
          type: boolean
        modelTypeFields:
          description: >-
            The remaining fields are definitions of the configurable fields that
            exist.
          type: array
          items:
            $ref: '#/components/schemas/apiModelTypeField'
        requiresSequentialFrames:
          description: >-
            For sequence models we need to know when processing that they
            require temporal time frames

            in sequential order. This will be true for model types like trackers
            as an example.
          type: boolean
        expectedInputLayers:
          description: Expected input layers of an uploaded model.
          type: array
          items:
            $ref: '#/components/schemas/apiModelLayerInfo'
        expectedOutputLayers:
          title: Expected output layers of an uploaded model
          type: array
          items:
            $ref: '#/components/schemas/apiModelLayerInfo'
        evaluationType:
          $ref: '#/components/schemas/apiEvaluationType'
    apiModelTypeEnumOption:
      title: ModelTypeEnumOption
      type: object
      properties:
        description:
          description: Optional description for this enum option.
          type: string
        id:
          description: The unique value of the enum option.
          type: string
        aliases:
          title: >-
            List of other ID values that are equivalent with this ID.

            This allows the user to choose this option by multiple IDs.

            Example: if enum is "Phone Number Prefix", you could add an option
            that is selectable by two values:

            1. ID: "Estonia"

            2. Alias: 37
          type: array
          items:
            $ref: '#/components/schemas/apiModelTypeEnumOptionAlias'
        modelTypeFields:
          description: >-
            These are additional fields that are specific to this enum choice.
            This allows

            us to use enums to control configuration settings as well.
          type: array
          items:
            $ref: '#/components/schemas/apiModelTypeField'
        internalOnly:
          description: If this enum option should be internal only.
          type: boolean
        recommended:
          description: >-
            Whether this is the recommended enum option. Set to `true` when
            there

            are multiple options, and one is shown to be better than the others.
          type: boolean
    apiModelTypeEnumOptionAlias:
      type: object
      properties:
        idInt:
          description: Integer alias for id.
          type: string
          format: int64
        wildcardString:
          description: String that can contain wild cards and the regex needs to match.
          type: string
    apiModelTypeField:
      description: ModelTypeField stores a field value of a configurable type.
      type: object
      properties:
        description:
          description: Description for this field.
          type: string
        path:
          description: >-
            The path where the value of the field will be stored in the model
            version object.

            Example:

            "output_info.data" would be the Data message in the OutputInfo
            message.

            "output_info.output_config.language" is in the OutputConfig message
            within OutputInfo

            "input_info.params" is in the params struct within InputInfo.

            "output_info.params" is in the params struct within OutputInfo.

            "train_info.params" is in the params struct within TrainInfo.

            and so on.
          type: string
        fieldType:
          $ref: '#/components/schemas/ModelTypeFieldModelTypeFieldType'
        defaultValue:
          description: >-
            A default value. We use the Value field because we want to have
            structured data (just like

            google.protobuf.Struct but this is just a single value).
        placeholder:
          description: Placeholder text for the UI element.
          type: string
        modelTypeEnumOptions:
          description: >-
            List of options of the ENUM type and potentially additional fields
            they bring with them.
          type: array
          items:
            $ref: '#/components/schemas/apiModelTypeEnumOption'
        internalOnly:
          description: If this field should appear for internal users only.
          type: boolean
        required:
          description: >-
            If this field is a required field. If True then during validation
            you won't be able to create

            a model of this type with providing a value for this field. When
            False, the ModelType's

            default_value will be used for this field.
          type: boolean
        modelTypeRangeInfo:
          $ref: '#/components/schemas/apiModelTypeRangeInfo'
    apiModelTypeRangeInfo:
      title: ModelTypeRangeInfo
      type: object
      properties:
        min:
          description: The start of the range as a float.
          type: number
          format: float
        max:
          description: The end of the range as a float.
          type: number
          format: float
        step:
          description: >-
            An optional step size for the range. If provided then only values at
            that step size will be

            rounded to. For example if step is 0.02 then 0.0245 will round to
            0.02.
          type: number
          format: float
    apiModelVersion:
      title: ModelVersion
      type: object
      properties:
        description:
          title: Description about this version
          type: string
        id:
          type: string
        createdAt:
          description: When the version was created.
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/apistatusStatus'
        activeConceptCount:
          type: integer
          format: int64
        metrics:
          $ref: '#/components/schemas/apiEvalMetrics'
        totalInputCount:
          title: number of inputs in the model version
          type: integer
          format: int64
        pretrainedModelConfig:
          $ref: '#/components/schemas/apiPretrainedModelConfig'
        completedAt:
          description: When training of this version was completed.
          type: string
          format: date-time
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        appId:
          description: The app the model version belongs to.
          type: string
        userId:
          description: The user the model version belongs to.
          type: string
        modifiedAt:
          title: When this model version was last modified
          type: string
          format: date-time
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        license:
          type: string
        outputInfo:
          $ref: '#/components/schemas/apiOutputInfo'
        inputInfo:
          $ref: '#/components/schemas/apiInputInfo'
        trainInfo:
          $ref: '#/components/schemas/apiTrainInfo'
        importInfo:
          $ref: '#/components/schemas/apiImportInfo'
        trainLog:
          title: Contains the training logs if available
          type: string
        inferenceComputeInfo:
          $ref: '#/components/schemas/apiComputeInfo'
        buildInfo:
          $ref: '#/components/schemas/apiBuildInfo'
    apiModelVersionExport:
      description: ModelVersionExport contains metadata for a single Model version export.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        url:
          description: >-
            url is the URL from where the model version export can be
            downloaded.
          type: string
        size:
          title: size of model file
          type: string
          format: int64
    apiModelVersionInputExample:
      title: ModelVersionInputExample
      type: object
      properties:
        description:
          title: description of link contents
          type: string
        id:
          title: user unique id
          type: string
        modelId:
          title: external id of model
          type: string
        modelVersionId:
          title: external id of model version
          type: string
        data:
          $ref: '#/components/schemas/apiData'
        name:
          title: name of link for display
          type: string
    apiModelVersionPublishRequest:
      title: ModelVersionPublishRequest
      type: object
      properties:
        versionId:
          type: string
    apiModelVersionUnpublishRequest:
      title: ModelVersionUnpublishRequest
      type: object
      properties:
        versionId:
          type: string
    apiModule:
      description: An app module that a user created in our app module marketplace.
      type: object
      properties:
        description:
          description: >-
            A short description for this app module to be used in grids of
            modules.
          type: string
        id:
          description: A unique ID for this app module.
          type: string
        createdAt:
          description: When the app module was created.
          type: string
          format: date-time
        modifiedAt:
          description: When the app module was last modified.
          type: string
          format: date-time
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        metadata:
          description: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto

            This is an optional arg.
          type: object
        userId:
          description: The creator of the app module.
          type: string
        appId:
          description: The app_id this module was created in.
          type: string
        moduleVersion:
          $ref: '#/components/schemas/apiModuleVersion'
        isStarred:
          title: >-
            Is starred by the requesting user (only showed on get/list requests)

            Please use PostModuleStars/DeleteModuleStars endpoints to
            star/unstar a module
          type: boolean
        starCount:
          title: >-
            How many users have starred the module (only showed on get/list
            requests)

            Computed value, not editable
          type: integer
          format: int32
        bookmarkOrigin:
          $ref: '#/components/schemas/apiBookmarkOrigin'
        image:
          $ref: '#/components/schemas/apiImage'
    apiModuleVersion:
      description: >-
        A specific version of an app module that is available for assigning to
        apps.
      type: object
      properties:
        description:
          description: A short description for this version.
          type: string
        id:
          description: A name for this version like 1_0, 1_1_0, etc.
          type: string
        moduleId:
          description: The module this version belongs to.
          type: string
        appId:
          description: The app_id this module version belongs to.
          type: string
        userId:
          description: The user_id this module version belongs to.
          type: string
        notes:
          description: >-
            A markdown formatted string to detailed description of the app
            module.

            This is within each version so that it can be change version to
            version.
          type: string
        createdAt:
          description: When the app module version was created.
          type: string
          format: date-time
        modifiedAt:
          description: When the app module version was last modified.
          type: string
          format: date-time
        gitCommitUrl:
          title: >-
            The code repo of the streamlit app.

            If you are still developing your Module you should create a
            ModuleVersion

            with an empty git_commit_url and then create an
            InstalledModuleVersion

            with a pre-deployed deploy_url (such as localhost or streamlit
            cloud).

            Once you are ready to create a production, create a new
            ModuleVersion with

            the ready git url to a specific commit that you would like to be
            reviewed by the

            Clarifai team for approval within our community. You cannot publish
            a ModuleVersion

            is reviewed and approved. Please only provide the git_commit_url
            when you're

            ready for a review. This url needs to include a specific commit, for
            example:

            https://github.com/user/repo/commit/767ff9c08ba3429c8e7b8825da148555
          type: string
        moduleNav:
          $ref: '#/components/schemas/ModuleVersionModuleNav'
        approved:
          description: |-
            A boolean to mark if Clarifai has approved this app version.
            This cannot be set in the request to True.
          type: boolean
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        metadata:
          description: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto

            This is an optional arg.
          type: object
    apiMultiAnnotationFilterResponse:
      title: MultiAnnotationFilterResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        annotationFilters:
          type: array
          items:
            $ref: '#/components/schemas/apiAnnotationFilter'
    apiMultiAnnotationResponse:
      title: MultiAnnotationResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/clarifaiapiAnnotation'
    apiMultiAnnotationSearchMetricsResponse:
      title: MultiAnnotationSearchMetricsResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        annotationSearchMetrics:
          type: array
          items:
            $ref: '#/components/schemas/apiAnnotationSearchMetrics'
    apiMultiAppDuplicationsResponse:
      title: MultiAppDuplicationsResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        appDuplications:
          type: array
          items:
            $ref: '#/components/schemas/apiAppDuplication'
    apiMultiAppResponse:
      title: MultiAppResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        apps:
          type: array
          items:
            $ref: '#/components/schemas/apiApp'
    apiMultiBulkOperationsResponse:
      title: MultiBulkOperationsResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        bulkOperation:
          type: array
          items:
            $ref: '#/components/schemas/apiBulkOperation'
    apiMultiCollaborationsResponse:
      title: MultiCollaborationsResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        collaborations:
          type: array
          items:
            $ref: '#/components/schemas/apiCollaboration'
    apiMultiCollaboratorsResponse:
      title: MultiCollaboratorsResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/apiCollaborator'
        appOwner:
          $ref: '#/components/schemas/apiUser'
    apiMultiCollectorResponse:
      description: Response with multiple Collectors.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        collectors:
          type: array
          items:
            $ref: '#/components/schemas/apiCollector'
    apiMultiConceptCountResponse:
      title: MultiConceptCountResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        conceptCounts:
          description: The returned concept counts.
          type: array
          items:
            $ref: '#/components/schemas/apiConceptCount'
    apiMultiConceptLanguageResponse:
      title: MultiConceptLanguageResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        conceptLanguages:
          type: array
          items:
            $ref: '#/components/schemas/apiConceptLanguage'
    apiMultiConceptMappingJobResponse:
      title: MultiConceptMappingJobResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        ids:
          description: The ids of the concept mapping jobs underway.
          type: array
          items:
            type: string
    apiMultiConceptRelationResponse:
      title: MultiConceptRelationResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        conceptRelations:
          description: The returned concept relations.
          type: array
          items:
            $ref: '#/components/schemas/apiConceptRelation'
    apiMultiConceptResponse:
      title: MultiConceptResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        concepts:
          description: The returned concepts.
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
    apiMultiDatasetInputResponse:
      title: MultiDatasetInputResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        datasetInputs:
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetInput'
        bulkOperation:
          $ref: '#/components/schemas/apiBulkOperation'
    apiMultiDatasetResponse:
      title: MultiDatasetResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/apiDataset'
    apiMultiDatasetVersionExportResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        exports:
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetVersionExport'
    apiMultiDatasetVersionMetricsGroupResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        datasetVersionMetricsGroups:
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetVersionMetricsGroup'
    apiMultiDatasetVersionResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        datasetVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetVersion'
    apiMultiEvalMetricsResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        evalMetrics:
          type: array
          items:
            $ref: '#/components/schemas/apiEvalMetrics'
    apiMultiInputAnnotationResponse:
      title: MultiInputAnnotationResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        hits:
          type: array
          items:
            $ref: '#/components/schemas/apiHit'
    apiMultiInputResponse:
      title: MultiInputResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        inputsAddJob:
          $ref: '#/components/schemas/apiInputsAddJob'
    apiMultiInputsAddJobResponse:
      title: MultiInputsAddJobResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        inputsAddJobs:
          type: array
          items:
            $ref: '#/components/schemas/apiInputsAddJob'
    apiMultiInputsExtractionJobResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        inputsExtractionJobs:
          type: array
          items:
            $ref: '#/components/schemas/apiInputsExtractionJob'
    apiMultiInstalledModuleVersionResponse:
      title: MultiInstalledModuleVersionResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        installedModuleVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiInstalledModuleVersion'
    apiMultiKeyResponse:
      title: MultiKeyResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        keys:
          type: array
          items:
            $ref: '#/components/schemas/apiKey'
    apiMultiKnowledgeGraphResponse:
      title: MultiKnowledgeGraphResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        knowledgeGraphs:
          description: The returned knowledge graphs.
          type: array
          items:
            $ref: '#/components/schemas/apiKnowledgeGraph'
    apiMultiLabelOrderResponse:
      description: Response with multiple label order.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        labelOrders:
          type: array
          items:
            $ref: '#/components/schemas/apiLabelOrder'
    apiMultiModelCheckConsentResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        checkConsents:
          type: array
          items:
            type: string
    apiMultiModelLanguageResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        languages:
          type: array
          items:
            type: string
    apiMultiModelReferenceResponse:
      title: MultiModelReferenceResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        modelReferences:
          type: array
          items:
            $ref: '#/components/schemas/apiModelReference'
    apiMultiModelResponse:
      title: MultiModelResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        models:
          type: array
          items:
            $ref: '#/components/schemas/apiModel'
    apiMultiModelToolkitResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        toolkits:
          type: array
          items:
            type: string
    apiMultiModelTypeResponse:
      title: MultiModelTypeResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        modelTypes:
          description: List of ModelType objects.
          type: array
          items:
            $ref: '#/components/schemas/apiModelType'
        modelImporters:
          $ref: '#/components/schemas/apiModelTypeField'
        tritonCondaEnvsInfo:
          title: Triton model envs that can be used for model upload
          type: array
          items:
            $ref: '#/components/schemas/apiTritonCondaEnvInfo'
    apiMultiModelUseCaseResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        usecases:
          type: array
          items:
            type: string
    apiMultiModelVersionInputExampleResponse:
      title: MultiModelVersionInputExampleResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        modelVersionInputExamples:
          title: model input example messages
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersionInputExample'
    apiMultiModelVersionResponse:
      title: MultiModelVersionResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        modelVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersion'
    apiMultiModuleResponse:
      title: MultiModuleResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        modules:
          type: array
          items:
            $ref: '#/components/schemas/apiModule'
    apiMultiModuleVersionResponse:
      title: MultiModuleVersionResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        moduleVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiModuleVersion'
    apiMultiOutputResponse:
      title: MultiOutputResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        outputs:
          description: >-
            For each input processed during model prediction we create one
            output.
          type: array
          items:
            $ref: '#/components/schemas/apiOutput'
    apiMultiRunnerItemOutputResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        runnerItemOutputs:
          type: array
          items:
            $ref: '#/components/schemas/apiRunnerItemOutput'
    apiMultiRunnerItemResponse:
      title: MultiRunnerItemResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        runnerItems:
          type: array
          items:
            $ref: '#/components/schemas/apiRunnerItem'
    apiMultiRunnerResponse:
      title: MultiRunnerResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        runners:
          type: array
          items:
            $ref: '#/components/schemas/apiRunner'
    apiMultiScopeDepsResponse:
      title: MultiScopeDepsResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        scopeDeps:
          description: scopes is a list of low-level scopes and their dependencies.
          type: array
          items:
            $ref: '#/components/schemas/apiScopeDeps'
        endpointDeps:
          title: >-
            endpoint_scopes is a listof all the publicly available endponts
            which can be

            used as scopes as well. A call to each of those endpoint depends on
            a subset

            of the above "scopes"
          type: array
          items:
            $ref: '#/components/schemas/apiEndpointDeps'
    apiMultiScopeResponse:
      title: MultiScopeResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        scopes:
          description: This is a list of the scopes that your key has.
          type: array
          items:
            type: string
        app:
          $ref: '#/components/schemas/apiApp'
        endpoints:
          description: This is a list of endpoint permissions that your key has.
          type: array
          items:
            type: string
        userFeatureFlags:
          type: string
    apiMultiScopeRootResponse:
      title: MultiScopeRootResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        scopes:
          description: This is a list of the scopes that your key has.
          type: array
          items:
            type: string
        endpoints:
          description: This is a list of endpoint permissions that your key has.
          type: array
          items:
            type: string
        userFeatureFlags:
          type: string
    apiMultiScopeUserResponse:
      title: MultiScopeUserResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        scopes:
          description: This is a list of the scopes that your key has.
          type: array
          items:
            type: string
        endpoints:
          description: This is a list of endpoint permissions that your key has.
          type: array
          items:
            type: string
        userFeatureFlags:
          type: string
    apiMultiSearchResponse:
      title: MultiSearchResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        id:
          title: A unique id which uniquely identifies a search
          type: string
        hits:
          description: The list of search result Hits.
          type: array
          items:
            $ref: '#/components/schemas/apiHit'
        query:
          $ref: '#/components/schemas/apiQuery'
        searches:
          description: The original Searches provided in the request.
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        hitCounts:
          description: |-
            The counts of hits for each search, in the same order as searches.
            Only returned if the request set only_count.
          type: array
          items:
            $ref: '#/components/schemas/apiHitCount'
    apiMultiStatValueAggregateResponse:
      title: MultiStatValueAggregateResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        statValueAggregateResults:
          description: The aggregate results for each query passedin.
          type: array
          items:
            $ref: '#/components/schemas/apiStatValueAggregateResult'
    apiMultiStatValueResponse:
      title: MultiStatValueResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        statValues:
          description: The returned stats values.
          type: array
          items:
            $ref: '#/components/schemas/apiStatValue'
    apiMultiStatusCodeResponse:
      title: MultiStatusCodeResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/apistatusStatus'
    apiMultiTaskAssignmentResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        taskAssignments:
          type: array
          items:
            $ref: '#/components/schemas/apiTaskAssignment'
    apiMultiTaskResponse:
      description: Response with multiple Tasks.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/apiTask'
    apiMultiTrainingTimeEstimateResponse:
      title: Estimated training time in seconds
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        trainingTimeEstimates:
          type: array
          items:
            type: string
    apiMultiTrendingMetricsViewResponse:
      title: MultiTrendingMetricsViewResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/apiTrendingMetric'
    apiMultiUploadResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        uploads:
          type: array
          items:
            $ref: '#/components/schemas/apiUpload'
    apiMultiWorkerResponse:
      title: MultiWorkerResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        workers:
          type: array
          items:
            $ref: '#/components/schemas/apiWorker'
    apiMultiWorkflowResponse:
      title: MultiWorkflowResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflow'
    apiMultiWorkflowVersionResponse:
      title: MultiWorkflowVersionResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        workflowVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowVersion'
    apiNodeInput:
      description: NodeInput represents inputs to a node of the graph.
      type: object
      properties:
        nodeId:
          description: >-
            The id to a connected WorkflowNode which will be used as an input
            for current WorkflowNode.
          type: string
    apiNodepool:
      description: >-
        A nodepool is a set of nodes dedicated for a given user's compute needs.

        This compute will typically be consumed by runners and in the future
        other objects

        like UI modules may be assigned to node pools.
      type: object
      properties:
        id:
          description: The user defined ID of the nodepool.
          type: string
        userId:
          description: The user/org that this nodepool belongs to.
          type: string
        cloudRegion:
          $ref: '#/components/schemas/apiCloudRegion'
        capacityTypes:
          type: array
          items:
            $ref: '#/components/schemas/NodepoolCapacityType'
        instanceTypes:
          description: >-
            ////////////////////////////////////

            The instance types that will be available in this pool of nodes.

            Clarifai offers multiple different choices that combine cpu cores,
            memory and accelerator.


            ////////////////////////////////////
          type: array
          items:
            type: string
        minInstances:
          description: >-
            Minimum number of instances in this nodepool. This allows the
            nodeool to scale down to this

            amount. A nodepool needs a minimum of 1 instance.
          type: integer
          format: int64
        maxInstances:
          description: >-
            An upper limit on the number of instances in this nodepool. This
            allows the nodepool to scale

            up to this amount.
          type: integer
          format: int64
    apiOperation:
      type: object
      properties:
        addConcepts:
          $ref: '#/components/schemas/apiAddConcepts'
        deleteConcepts:
          $ref: '#/components/schemas/apiDeleteConcepts'
        addMetadata:
          $ref: '#/components/schemas/apiAddMetadata'
        deleteMetadata:
          $ref: '#/components/schemas/apiDeleteMetadata'
        overwriteGeo:
          $ref: '#/components/schemas/apiOverwriteGeo'
        deleteGeo:
          $ref: '#/components/schemas/apiDeleteGeo'
        deleteFromDataset:
          $ref: '#/components/schemas/apiDeleteFromDataset'
        addToDataset:
          $ref: '#/components/schemas/apiAddToDataset'
        splitIntoDatasets:
          $ref: '#/components/schemas/apiSplitIntoDatasets'
    apiOutput:
      title: Output
      type: object
      properties:
        id:
          title: One of these outputs per Input
          type: string
        status:
          $ref: '#/components/schemas/apistatusStatus'
        createdAt:
          title: |-
            When the object was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        model:
          $ref: '#/components/schemas/apiModel'
        input:
          $ref: '#/components/schemas/apiInput'
        data:
          $ref: '#/components/schemas/apiData'
    apiOutputConfig:
      description: >-
        OutputConfig is a collection of parameters controlling either inference
        or training settings for

        the given Model. This message will be deprecated over time in favor or
        infer_params and

        train_params in OutputInfo which are cleaner and more extensible for
        many ModelTypes.
      type: object
      properties:
        conceptsMutuallyExclusive:
          description: >-
            For custom concept model training: whether the concept predictions
            must sum to 1.
          type: boolean
        existingModelId:
          description: >-
            DEPRECATED: For custom models, this is the base model to use for
            image embeddings.

            Default is general model.
          type: string
        language:
          description: >-
            For concept model predictions: Overrides the default_language for
            the app in a predict call.
          type: string
        hyperParameters:
          description: |-
            DEPRECATED: Hyper-parameters for custom training.
            Use new hyper_params field instead.
          type: string
        maxConcepts:
          description: >-
            For concept model predictions:  Maximum number of concepts in
            result. Defaults to 0 which under

            the hood will return default of 20. We do a server side default in
            order to control this

            feature in the future.
          type: integer
          format: int64
        minValue:
          description: >-
            For concept model predictions: Minimum value of concept's
            probability score in result.

            Defaults to 0.0 which means we won't do any thresholding as all
            probabilities will

            likely be > 0.0.
          type: number
          format: float
        selectConcepts:
          title: >-
            For concept model predictions: Select concepts in result by name or
            by id
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
        trainingTimeout:
          title: >-
            For custom concept model training: Training timeout of the model (in
            seconds)
          type: integer
          format: int64
        sampleMs:
          title: >-
            For model predictions on video: Sample delay for video predicting (1
            frame per N milliseconds)
          type: integer
          format: int64
        hyperParams:
          title: 'For custom model training: Hyperparameters for custom training'
          type: object
        embedModelVersionId:
          description: >-
            For custom model training: this is the base model version to use for
            image embeddings.

            This has to be one of the embed models in the app workflow.


            Use input_info.base_embed_model instead.
          type: string
        failOnMissingPositiveExamples:
          title: >-
            For custom model training: Use this flag to fail on missing positive
            examples

            By default we fill in the missing with random examples
          type: boolean
        modelMetadata:
          description: >-
            For custom model training: This is any additional metadata as a JSON
            object that we want

            want to persist in the model's output config. This is a useful quick
            way to set fields for

            introducing fields for new model types so we don't have to add a new
            proto field and DB field

            each time. Please refer to the documentation or model implementation
            internally for more

            details on what fields are supported for which models.

            TODO(zeiler): remove this field after Portal is updated.
          type: object
    apiOutputInfo:
      description: >-
        OutputInfo defines some of the settings for each model version that
        PatchModels can effect. These

        parameters control some of the training or inference operations that
        this model can do.

        As the number of parameters continued to grow when we launched more
        ModelTypes we decided to move

        to using the OutputInfo.params field which is a Struct (or JSON object
        if you're using

        our JSON REST APIs). This allows each ModelType to define the set of
        fields, their default values

        and description of each field so that we can display those in Portal and
        make the creation of

        Model's very extensible. The OutputConfig object will eventually go away
        in favor of

        infer_params struct.
      type: object
      properties:
        data:
          $ref: '#/components/schemas/apiData'
        outputConfig:
          $ref: '#/components/schemas/apiOutputConfig'
        message:
          description: For returning where to look for the Output info if not returning it.
          type: string
        fieldsMap:
          description: >-
            Map from the api.Data field names to the underlying model graph's
            outputs. When using a

            PretrainedModelConfig the values in this map need to match the
            Triton config.pbtxt output names.
          type: object
        params:
          description: >-
            For predicting with the various ModelType's we accept a Struct (JSON
            object) worth of args

            that the ModelTypeField defines. During inference, the settings
            contained within are sent

            to the model predictor to alter predictions from this Model.
          type: object
        paramsSpecs:
          type: array
          items:
            $ref: '#/components/schemas/apiModelTypeField'
    apiOverwriteGeo:
      type: object
      properties:
        geo:
          $ref: '#/components/schemas/apiGeo'
    apiPagination:
      description: Split the results into pages.
      type: object
      properties:
        page:
          description: >-
            (optional URL parameter) The page number. Pagination is used to
            split the results into chunks. Defaults to 1.
          type: integer
          format: int64
        perPage:
          description: >-
            (optional URL parameter) The number of results that will be
            contained in each page. Defaults to 128.
          type: integer
          format: int64
    apiPassword:
      title: Password
      type: object
      properties:
        plaintext:
          title: unencrypted password string
          type: string
    apiPasswordViolations:
      title: PasswordViolations
      type: object
      properties:
        minimumLength:
          title: when new password length is shorter than minimum length set
          type: boolean
        maximumLength:
          title: when new password length is longer than maximum length set
          type: boolean
        upperCaseNeeded:
          title: >-
            there is no upper case letter in the new password when there should
            be at least one
          type: boolean
        lowerCaseNeeded:
          title: >-
            there is no lower case letter in the new password when there should
            be at least one
          type: boolean
        numericNeeded:
          title: >-
            there is no numerics in the new password when there should be at
            least one
          type: boolean
        nonAlphanumericNeeded:
          title: >-
            there is no special character in the new password when there should
            be at least one
          type: boolean
        passwordReuse:
          title: >-
            when one of the N most recent old password is reused, N is specified
            by password_reuse_epoch in db.password_policies
          type: boolean
        excludeNames:
          title: >-
            when either user's first, middle or last name is used in the new
            password
          type: boolean
        excludeEmail:
          title: >-
            when first part of user's email (exact string or after removing
            special characters) is used in the new password
          type: boolean
        noConfusingLetters:
          title: >-
            when there are confusing letters in the new password, such as o
            (first character of 'omega') vs 0 (zero)
          type: boolean
        noSimplePasswords:
          title: >-
            when there are simple password patterns used, such as 12345678 or
            aaaaaaa1
          type: boolean
        noCommonVocabs:
          title: when there are common vocabs from the common vocab list used
          type: boolean
        noOverlapWithOld:
          title: >-
            when the current password is contained in the new password or vice
            versa
          type: boolean
        passwordLifespan:
          title: when password has to be changed becauase it's too old
          type: boolean
    apiPatchAction:
      title: PatchAction
      type: object
      properties:
        op:
          title: >-
            The operation to perform on the patched metadata given a path

            For now only operations 'overwrite', 'delete, and 'merge' is
            supported
          type: string
        mergeConflictResolution:
          title: >-
            If the action is 'merge' and there is a conflict, how to resolve it.

            The options are

            'overwrite_by_id', 'remove_by_id', 'merge_by_id','overwrite',
            'append' and 'do_nothing'

            Note that for conflict resolutions '*_by_id' to work on a list, the
            list should contain

            objects with an 'id' field which will be used to uniquely identify
            each field. For example

            Patching existing json

            {
              "tag": [
                {
                  "id": "1",
                  "data": 1
                },
                {
                  "id": "2",
                  "data": 2
                }
              ]
            }

            with op 'merge' and merge_conflict_resolution 'overwrite_by_id'

            {
              "tag": [
                {
                  "id": "2",
                  "data": 3
                }
              ]
            }

            would produce

            {
              "tag": [
                {
                  "id": "1",
                  "data": 1
                },
                {
                  "id": "2",
                  "data": 3
                }
              ]
            }

            while with merge_conflict_resolution 'remove_by_id' it would produce

            {
              "tag": [
                {
                  "id": "1",
                  "data": 1
                }
              ]
            }
          description: >-
            Option 'append' will simply create a list on conflicts. For example
            in above example

            the final result would be

            {
              "tag": [
                {
                  "id": "1",
                  "data": 1
                },
                {
                  "id": "2",
                  "data": [2, 3]
                }
              ]
            }
          type: string
        path:
          description: >-
            Path for the change. For example 'tag[1].data' is a valid path in
            above example.

            Default path is root level i.e. ''.
          type: string
    apiPatchAnnotationFiltersRequest:
      description: Request to patch several annotation filters.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        annotationFilters:
          description: List of annotation filters that are requested to be updated.
          type: array
          items:
            $ref: '#/components/schemas/apiAnnotationFilter'
        action:
          title: |-
            The action to perform on the patched objects
            For now, only 'overwrite' action is supported
          type: string
    apiPatchAnnotationsRequest:
      title: PatchAnnotationsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/clarifaiapiAnnotation'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
        deleteIfEmptyData:
          description: >-
            If the request is a "remove" action and the annotation is left with
            empty data,

            then setting delete_if_empty_data to true will delete the
            annotation,

            if possible (for example, will not delete an input-level
            annotation).
          type: boolean
    apiPatchAnnotationsSearchesRequest:
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        searches:
          title: The searches to be patched
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        action:
          title: |-
            The action to perform on the patched Search objects
            For now only action 'overwrite' is supported
          type: string
    apiPatchAnnotationsStatusResponse:
      title: PatchAnnotationsStatusResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        userIds:
          type: array
          items:
            type: string
        updatedCount:
          type: integer
          format: int64
    apiPatchCollectorsRequest:
      title: PatchCollectorsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        collectors:
          type: array
          items:
            $ref: '#/components/schemas/apiCollector'
        action:
          title: |-
            The action to perform on the patched objects
            Only 'overwrite' is supported
          type: string
    apiPatchConceptsRequest:
      title: PatchConceptsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        concepts:
          description: The concepts to patch.
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
        action:
          title: |-
            The action to perform on the patched objects
            For now ony action 'overwrite' is supported
          type: string
    apiPatchDatasetsRequest:
      description: Request to patch several datasets.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        datasets:
          description: List of datasets that are requested to be updated.
          type: array
          items:
            $ref: '#/components/schemas/apiDataset'
        action:
          description: >-
            The action to perform on the patched objects

            Supported values: 'overwrite', 'merge', and 'remove'.


            Note that 'remove' can only be used to remove the dataset image by
            setting

            'image.url' in the request to the current value returned for that
            dataset.
          type: string
    apiPatchInputsRequest:
      title: PatchInputsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        inputs:
          title: |-
            List of inputs to patch.
            Inputs are identified by id field.
            For each input, the following fields are patchable:
            * data
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
    apiPatchInputsSearchesRequest:
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        searches:
          title: The searches to be patched
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        action:
          title: |-
            The action to perform on the patched Search objects
            For now only action 'overwrite' is supported
          type: string
    apiPatchLabelOrdersRequest:
      description: Request to patch a list of label orders.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        labelOrders:
          type: array
          items:
            $ref: '#/components/schemas/apiLabelOrder'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
    apiPatchModelsRequest:
      title: PatchModelsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        models:
          type: array
          items:
            $ref: '#/components/schemas/apiModel'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          description: >-
            Note that 'remove' can be used to remove the model image by setting

            'image.url' in the request to the current value returned for that
            model.

            This cannot be used in a request that is patching other fields as
            well.
          type: string
    apiPatchSearchesRequest:
      title: PatchSearchesRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        searches:
          title: The searches to be patched
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        action:
          title: |-
            The action to perform on the patched Search objects
            For now only action 'overwrite' is supported
          type: string
    apiPatchTasksRequest:
      description: Request to patch a list of tasks.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/apiTask'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
    apiPatchWorkflowsRequest:
      title: PatchWorkflowsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflow'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          description: >-
            Note that 'remove' can be used to remove the workflow image by
            setting

            'image.url' in the request to the current value returned for that
            workflow.

            This cannot be used in a request that is patching other fields as
            well.
          type: string
    apiPoint:
      title: Point
      type: object
      properties:
        row:
          description: >-
            The row location of the point. This has a [0.0-1.0] range with 0.0
            being top row and 1.0

            being the bottom row.
          type: number
          format: float
        col:
          description: >-
            The column location of the point. This has a [0.0-1.0] range with
            0.0 being left col and 1.0

            being the right col.
          type: number
          format: float
        z:
          description: Depth if applicable for the point.
          type: number
          format: float
        visibility:
          $ref: '#/components/schemas/apiPointVisibility'
    apiPointVisibility:
      title: Whether this point is visible or occluded
      description: |-
        - NOT_SET: Visibility of the point is not set
         - VISIBLE: Point is visible
         - NOT_VISIBLE: Point is occluded
         - NOT_PRESENT: Point is not in the image
      type: string
      enum:
        - NOT_SET
        - VISIBLE
        - NOT_VISIBLE
        - NOT_PRESENT
      default: NOT_SET
    apiPolygon:
      title: Polygon
      type: object
      properties:
        points:
          description: A list of points connected together to form the polygon.
          type: array
          items:
            $ref: '#/components/schemas/apiPoint'
    apiPostAnnotationFiltersRequest:
      description: Request to add one or more annotation filters.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        annotationFilters:
          description: List of annotation filters that are requested to be added.
          type: array
          items:
            $ref: '#/components/schemas/apiAnnotationFilter'
    apiPostAnnotationSearchMetricsRequest:
      title: PostAnnotationSearchMetricsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        id:
          title: A unique customer facing id to identify this eval request
          type: string
        groundTruth:
          $ref: '#/components/schemas/apiSearch'
        searchToEval:
          $ref: '#/components/schemas/apiSearch'
        data:
          $ref: '#/components/schemas/apiData'
        evaluationType:
          $ref: '#/components/schemas/apiEvaluationType'
    apiPostAnnotationsRequest:
      title: PostAnnotationsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/clarifaiapiAnnotation'
    apiPostAnnotationsSearchesRequest:
      title: |-
        Execute a new annotation search and optionally save it
        annotation search over annotations using rank and filter proto
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        searches:
          title: The searched to be executed or saved
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    apiPostBulkOperationsRequest:
      description: >-
        Request to perform bulk operations on a list of inputs based on input
        source.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        bulkOperations:
          description: >-
            List of bulk operation(s) to be performed e.g bulk update metadata
            or tags or labels etc.
          type: array
          items:
            $ref: '#/components/schemas/apiBulkOperation'
    apiPostCollectorsRequest:
      description: Request to create Collectors.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        collectors:
          type: array
          items:
            $ref: '#/components/schemas/apiCollector'
    apiPostConceptMappingJobsRequest:
      title: Start concept mapping jobs
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        conceptMappingJobs:
          title: The concept mapping jobs that are being started
          type: array
          items:
            $ref: '#/components/schemas/apiConceptMappingJob'
    apiPostConceptsRequest:
      title: PostConceptsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        concepts:
          description: The concepts to add.
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
    apiPostConceptsSearchesRequest:
      title: PostConceptsSearchesRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        conceptQuery:
          $ref: '#/components/schemas/apiConceptQuery'
        extraInfo:
          $ref: '#/components/schemas/apiConceptExtraInfoRequest'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    apiPostDatasetsRequest:
      description: Request to add one or more datasets.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        datasets:
          description: List of datasets that are requested to be added.
          type: array
          items:
            $ref: '#/components/schemas/apiDataset'
    apiPostEvaluationsRequest:
      title: Evaluate this model vesion
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        evalMetrics:
          description: >-
            eval_info, id, model, and ground_truth_dataset will be used when
            creating the evaluation

            If no dataset is provided, all app data that is annotated with
            concepts from the model will be used.
          type: array
          items:
            $ref: '#/components/schemas/apiEvalMetrics'
    apiPostInputsDataSourcesRequest:
      description: >-
        Initiates retrieval of inputs from cloud storage from a user provided
        data source.

        Will create and return an inputs-add-job for tracking progress.

        Archives will be extracted and their contents will be processed as
        inputs.


        The cloud URL will be treated as a filter prefix. For example
        s3:/bucket/images_folder/abc will process

        files in the images_folder beginning with abc or in a subfolder
        beginning with abc.

        For example:

        bucket/images_folder/abcImage.png

        bucket/images_folder/abc-1/Data.zip


        If given URL is for a private bucket or file, then credentials should be
        provided to access the bucket.

        Credentials should include rights to list the objects in the bucket,
        except when pointed directly at a file archive,

        in which case it only requires rights to access that particular file.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        dataSources:
          type: array
          items:
            $ref: '#/components/schemas/apiInputsDataSource'
        callBackUrl:
          description: >-
            If call back url is set, we will send a Post request to this
            endpoint with job status.
          type: string
        appPat:
          title: Personal Access Token to the application to which inputs are added
          type: string
    apiPostInputsRequest:
      title: PostInputsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        inputs:
          title: |-
            List of inputs to post.
            For each input, the following fields are used:
            * id
            * data
            * dataset_ids
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        inputsAddJobId:
          description: >-
            Collect statistics about created inputs in job with given ID.

            * If job ID is empty, then job is not created.

            * If job ID is non-empty and doesn't already exist, then a new job
            will be created with given ID.

            * If job ID does already exist, then new inputs statistics are
            merged with previous inputs statistics.
          type: string
        inputIdConflictResolution:
          $ref: '#/components/schemas/apiInputIDConflictResolution'
    apiPostInputsSearchesRequest:
      title: Execute a new input search and optionally save it
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        searches:
          title: The searched to be executed or saved
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        pagination:
          $ref: '#/components/schemas/apiPagination'
        onlyCount:
          description: |-
            If only_count is set, then the response will not contain hits,
            but hit_counts instead.
          type: boolean
    apiPostInputsUploadsRequest:
      description: >-
        Start uploading a file archive containing inputs.

        Will create and return an inputs-add-job for tracking progress.


        Associated inputs-add-job contains an upload id which should be
        completed through `PutUploadContentParts` endpoint.

        Completing the upload will automatically begin unpacking the archive and
        uploading the contents as inputs.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        inputsUploads:
          type: array
          items:
            $ref: '#/components/schemas/apiInputsUpload'
    apiPostKnowledgeGraphsRequest:
      title: POST new knowledge graphs
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        knowledgeGraphs:
          type: array
          items:
            $ref: '#/components/schemas/apiKnowledgeGraph'
    apiPostLabelOrdersRequest:
      description: Request to create label orders.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        labelOrders:
          type: array
          items:
            $ref: '#/components/schemas/apiLabelOrder'
    apiPostModelOutputsRequest:
      description: |-
        //////////////////////////////////////////////////
        Model prediction related stuff needs inputs and produces outputs.
        //////////////////////////////////////////////////
        Model prediction.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        modelId:
          type: string
        versionId:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        model:
          $ref: '#/components/schemas/apiModel'
        runnerSelector:
          $ref: '#/components/schemas/apiRunnerSelector'
    apiPostModelVersionsUploadConfig:
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        modelId:
          title: model to create version of
          type: string
        modelVersion:
          $ref: '#/components/schemas/apiModelVersion'
        totalSize:
          title: number of bytes in the model files to be uploaded
          type: string
          format: uint64
    apiPostModelVersionsUploadRequest:
      type: object
      properties:
        uploadConfig:
          $ref: '#/components/schemas/apiPostModelVersionsUploadConfig'
        contentPart:
          $ref: '#/components/schemas/apiUploadContentPart'
    apiPostModelVersionsUploadResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        bytesRemaining:
          type: string
          format: uint64
        modelVersionId:
          title: ID of the model version being uploaded
          type: string
    apiPostModelsRequest:
      title: PostModelsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        model:
          $ref: '#/components/schemas/apiModel'
        models:
          description: >-
            This allows you to create one or more model by posting it to the
            API.
          type: array
          items:
            $ref: '#/components/schemas/apiModel'
    apiPostModelsSearchesRequest:
      description: Search over the available models.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        modelQuery:
          $ref: '#/components/schemas/apiModelQuery'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    apiPostSearchesRequest:
      title: PostSearchesRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        query:
          $ref: '#/components/schemas/apiQuery'
        searches:
          title: >-
            The searched to be executed or saved

            Eventually the request level fields will be deprecated in favor of
            this object
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    apiPostStatValuesAggregateRequest:
      title: PostStatValuesAggregateRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        statValueAggregateQueries:
          description: Query to retrieve aggregate values.
          type: array
          items:
            $ref: '#/components/schemas/apiStatValueAggregateQuery'
    apiPostStatValuesRequest:
      title: PostStatValuesRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        statValues:
          description: The stats to post, can post more than one at a time.
          type: array
          items:
            $ref: '#/components/schemas/apiStatValue'
    apiPostTasksRequest:
      description: Request to create Tasks.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/apiTask'
    apiPostUploadsRequest:
      title: Start a multipart upload
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        uploads:
          type: array
          items:
            $ref: '#/components/schemas/apiUpload'
    apiPostValidatePasswordRequest:
      title: PostValidatePasswordRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        password:
          $ref: '#/components/schemas/apiPassword'
    apiPostWorkflowResultsResponse:
      title: PostWorkflowResultsResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        workflow:
          $ref: '#/components/schemas/apiWorkflow'
        results:
          description: The resulting predictions of all models in the workflow.
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowResult'
        workflowState:
          $ref: '#/components/schemas/apiWorkflowState'
    apiPostWorkflowResultsSimilarityResponse:
      title: PostWorkflowResultsSimilarityResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        results:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowResultsSimilarity'
    apiPostWorkflowsRequest:
      title: PostWorkflowsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflow'
    apiPrecisionRecallCurve:
      title: PrecisionRecallCurve
      type: object
      properties:
        recall:
          type: array
          items:
            type: number
            format: float
        precision:
          type: array
          items:
            type: number
            format: float
        thresholds:
          type: array
          items:
            type: number
            format: float
    apiPretrainedModelConfig:
      title: PretrainedModelConfig
      type: object
      properties:
        inputFieldsMap:
          description: |-
            This is the internal id of the pretrained model.
            Map from the api.Data field names to the Triton config.pbtxt input.
          type: object
        outputFieldsMap:
          description: Map from the api.Data field names to the Triton config.pbtxt output.
          type: object
        modelZipUrl:
          title: >-
            Url to a zipped up model in triton format with the following files
            and folders at the root:
             config.pbtxt
             version 1 folder that contains model files (onnx graph, torch script, python BE model, and etc.)
          description: Whether to overwrite the model for the existing internal id
          type: string
    apiProcessingInfo:
      title: Processing info tells the runner how to process a RunnerItem
      type: object
      properties:
        runnerMethodType:
          $ref: '#/components/schemas/apiRunnerMethodType'
        status:
          $ref: '#/components/schemas/apistatusStatus'
    apiProgress:
      type: object
      properties:
        processed:
          type: integer
          format: int64
        lastProcessedId:
          type: string
    apiPutTaskAssignmentsRequestAction:
      title: >-
        - LABEL_START: Create a list of task assignments for labeler => 10
        inputs are assigned to the labeler.

        This is a fully sync action.

        If task assignments already exist, then return existing task
        assignments.
         - LABEL_SUBMIT: Submit task assignments => mark task assignment work as completed.
        This is a partially sync action.

        Sync: task assignments are updated as follows:

        * when review_strategy is NONE, then task assignment status is updated
        to SUCCESS.

        * when review strategy is CONSENSUS, then task assignment status is
        updated to AWAITING_CONSENSUS_REVIEW.

        * when review strategy is MANUAL, then task assignment status is updated
        to AWAITING_REVIEW.

        If task assignments are already submitted, then no update is performed
        on them.

        Async: annotations added for the same input as the task assignment are
        updated as follows:

        * when review_strategy is NONE, then annotation status is updated to
        SUCCESS.

        * when review strategy is CONSENSUS, then annotation status is updated
        to SUCCESS (if it reaches consensus) or AWAITING_REVIEW (if it does not
        reach consensus).

        * when review strategy is MANUAL, then annotation status is updated to
        AWAITING_REVIEW.
         - REVIEW_START: Return a list of task assignments for reviewer to review => 10 inputs are assigned to the reviewer.
        This is a fully sync action.

        NOT idempotent:
         In the current implementation, we don't actually store the reviewer in the task assignment,
         as the task assignment still stays assigned to the labeler.
         Therefore, multiple calls to this endpoint may result in different set of task assignments to review.
         For now, this action is practically not idempotent.
         In the future, we could however store the reviewer in the task assignment and
         return existing task assignments already assigned to the reviewer => this will make this action idempotent.
         - REVIEW_APPROVE: Approve task assignments.
        There are two types of configurations:

        * Batch approve: approve a list of task assignment IDs;

        * Bulk approve: approve all task assignments from a list of workers.

        This is a partially sync action.

        Sync: task assignments are updated to SUCCESS

        Async: annotations added for the same input as the task assignment are
        updated to SUCCESS
         - REVIEW_REQUEST_CHANGES: Request changes for task assignments.
        There are two types of configurations:

        * Batch request changes: request changes for a list of task assignment
        IDs;

        * Bulk request changes: request changes for all task assignments from a
        list of workers.

        This is a partially sync action.

        Sync: task assignments are updated to PENDING

        Async: annotations added for the same input as the task assignment are
        updated to PENDING
      type: string
      enum:
        - PUT_TASK_ASSIGNMENTS_REQUEST_ACTION_NOT_SET
        - LABEL_START
        - LABEL_SUBMIT
        - REVIEW_START
        - REVIEW_APPROVE
        - REVIEW_REQUEST_CHANGES
      default: PUT_TASK_ASSIGNMENTS_REQUEST_ACTION_NOT_SET
    apiQuery:
      description: >-
        This is the search query used in /searches, model training requests,
        bulk data exports, etc.
      type: object
      properties:
        ands:
          description: >-
            The query syntax is simply a list of And operatiosn that will be
            ANDed together to fetch

            results which are returned to the user as Hit messages.


            Deprecated: Only used by the deprecated PostSearches endpoint. Use
            filters

            and ranks instead with PostInputsSearches or
            PostAnnotationsSearches.
          type: array
          items:
            $ref: '#/components/schemas/apiAnd'
        language:
          description: >-
            This allows the query to override any default language the app was
            setup in when doing Concept

            based searches. This currently only affects public Models Output
            searches when those public

            Models have translations for their Concepts.
          type: string
        filters:
          title: |-
            filters in this query
            e.q. only fetch annotations that have certain metadata
          type: array
          items:
            $ref: '#/components/schemas/apiFilter'
        ranks:
          title: |-
            rankings in this query
            e.g. visual search by a url
          type: array
          items:
            $ref: '#/components/schemas/apiRank'
    apiROC:
      title: ROC
      type: object
      properties:
        fpr:
          type: array
          items:
            type: number
            format: float
        tpr:
          type: array
          items:
            type: number
            format: float
        thresholds:
          type: array
          items:
            type: number
            format: float
        fprPerImage:
          type: array
          items:
            type: number
            format: float
        fprPerObject:
          type: array
          items:
            type: number
            format: float
    apiRank:
      title: Rank
      type: object
      properties:
        negate:
          title: |-
            If True then this will flip the meaning of this part of the
            query. This allow for queries such as !dog
          type: boolean
        annotation:
          $ref: '#/components/schemas/clarifaiapiAnnotation'
    apiRegion:
      description: A region within the data.
      type: object
      properties:
        id:
          description: A unique id for the region.
          type: string
        regionInfo:
          $ref: '#/components/schemas/apiRegionInfo'
        data:
          $ref: '#/components/schemas/apiData'
        value:
          description: This is the confidence score of the overall Region.
          type: number
          format: float
        trackId:
          description: >-
            For tracking algorithsm and annotations we tie regions together with
            this track id.
          type: string
    apiRegionInfo:
      description: The information of the location of the Region.
      type: object
      properties:
        boundingBox:
          $ref: '#/components/schemas/apiBoundingBox'
        mask:
          $ref: '#/components/schemas/apiMask'
        polygon:
          $ref: '#/components/schemas/apiPolygon'
        point:
          $ref: '#/components/schemas/apiPoint'
        span:
          $ref: '#/components/schemas/apiSpan'
        token:
          $ref: '#/components/schemas/apiToken'
        keypointLocations:
          description: >-
            The locations of detected keypoints, which are to be used in
            conjunction with the detected concept's skeleton to connect the
            keypoint locations.

            These will be in the same order as the respective keypoint_names
            inside the concept.
          type: array
          items:
            $ref: '#/components/schemas/apiPoint'
    apiReviewApproveConfig:
      type: object
      properties:
        taskAssignments:
          type: array
          items:
            $ref: '#/components/schemas/apiTaskAssignment'
        workers:
          type: array
          items:
            $ref: '#/components/schemas/apiWorker'
    apiReviewRequestChangesConfig:
      type: object
      properties:
        taskAssignments:
          type: array
          items:
            $ref: '#/components/schemas/apiTaskAssignment'
        workers:
          type: array
          items:
            $ref: '#/components/schemas/apiWorker'
    apiRunner:
      title: |-
        A worker for compute within a nodepool of instances.
        This asks the API for work
      type: object
      properties:
        description:
          description: >-
            A short description for this app module to be used in grids of
            modules.
          type: string
        id:
          description: |-
            A unique ID for this app module.
            This is a UUID since runners can be automatically orchestrated.
          type: string
        createdAt:
          description: When the app module was created.
          type: string
          format: date-time
        modifiedAt:
          description: When the app module was last modified.
          type: string
          format: date-time
        metadata:
          description: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto

            This is an optional arg.
          type: object
        userId:
          description: The owner of the runner. Runners belong to a user/org account.
          type: string
        labels:
          description: Labels to match in order to find work.
          type: array
          items:
            type: string
        model:
          $ref: '#/components/schemas/apiModel'
        workflow:
          $ref: '#/components/schemas/apiWorkflow'
        nodepool:
          $ref: '#/components/schemas/apiNodepool'
        computeInfo:
          $ref: '#/components/schemas/apiComputeInfo'
    apiRunnerItem:
      description: This is a piece of work for a runner to process.
      type: object
      properties:
        description:
          description: A description of the work to be done in case needed for UIs.
          type: string
        id:
          description: A UUID hash for this work item.
          type: string
        processingInfo:
          $ref: '#/components/schemas/apiProcessingInfo'
        postModelOutputsRequest:
          $ref: '#/components/schemas/apiPostModelOutputsRequest'
    apiRunnerItemOutput:
      type: object
      properties:
        multiOutputResponse:
          $ref: '#/components/schemas/apiMultiOutputResponse'
    apiRunnerMethodType:
      title: |-
        - UNARY_UNARY: single request, single response. predict() in code
         - UNARY_STREAMING: single request, streamed response. generate() in code
         - STREAMING_UNARY: stream of requests, single response.
         - STREAMING_STREAMING: stream of requests, stream of responses. stream() in code
      type: string
      enum:
        - UNKNOWN
        - UNARY_UNARY
        - UNARY_STREAMING
        - STREAMING_UNARY
        - STREAMING_STREAMING
      default: UNKNOWN
    apiRunnerSelector:
      description: >-
        ////////////////////////////////////////

        Don't need RunnerSelector if we're opening up endpoints for deployments.

        ////////////////////////////////////////

        The RunnerSelector is an optional field we can provide during runtime

        of model/workflow predictions to specify which particular runner we want
        to process the work.

        This can optionally be used to select a particular nodepool and then
        within that nodepool

        a particular runner.
      type: object
      properties:
        nodepool:
          $ref: '#/components/schemas/apiNodepool'
        runner:
          $ref: '#/components/schemas/apiRunner'
        deployment:
          $ref: '#/components/schemas/apiDeployment'
    apiScopeDeps:
      title: ScopeDeps
      type: object
      properties:
        scope:
          title: The scope
          type: string
        dependingScopes:
          description: Other scopes that are required.
          type: array
          items:
            type: string
    apiSearch:
      description: This is the new Search object used in saved searches.
      type: object
      properties:
        query:
          $ref: '#/components/schemas/apiQuery'
        id:
          description: >-
            Customer facing, external ID for search to be saved. Provided by the
            user, e.g. "saved-search-1.

            It is unique per application.
          type: string
        applicationId:
          description: Application that owns this saved search.
          type: string
        name:
          description: Human readable display name of the saved search.
          type: string
        asOf:
          description: >-
            "As of" timestamp, indicating a time in the past as of which we want
            to

            retrieve the annotations satisfying the query.
          type: string
          format: date-time
        gitHash:
          description: Git hash of the code that ran the filter.
          type: string
        createdAt:
          description: When the saved search was created.
          type: string
          format: date-time
        modifiedAt:
          description: When the saved search was updated.
          type: string
          format: date-time
        algorithm:
          title: >-
            The search algorithm to be used.

            Options are are 'nearest_neighbor', 'brute_force', and
            'avg_concept_brute_force'

            The last two perform a brute force search visual search instead of a
            more scalable distributed

            nearest neighbor search and should be used by advanced users only.

            If not specified we default to nearest neighbor
          type: string
        save:
          title: |-
            If true, save this search, and exit without executing the search.
            If false execute the query
          type: boolean
        minValue:
          description: >-
            Minimum value of confidence threshold score in result.

            Defaults to 0.0 which means we won't do any thresholding as all
            probabilities will

            likely be > 0.0.
          type: number
          format: float
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        metric:
          $ref: '#/components/schemas/SearchMetric'
    apiSingleAnnotationFilterResponse:
      title: SingleAnnotationFilterResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        annotationFilter:
          $ref: '#/components/schemas/apiAnnotationFilter'
    apiSingleAnnotationResponse:
      title: SingleAnnotationResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        annotation:
          $ref: '#/components/schemas/clarifaiapiAnnotation'
    apiSingleAppDuplicationResponse:
      title: SingleAppDuplicationResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        appDuplication:
          $ref: '#/components/schemas/apiAppDuplication'
    apiSingleAppResponse:
      title: SingleAppResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        app:
          $ref: '#/components/schemas/apiApp'
    apiSingleBulkOperationsResponse:
      title: SingleBulkOperationsResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        bulkOperation:
          $ref: '#/components/schemas/apiBulkOperation'
    apiSingleCollectorResponse:
      description: Response with a single Collector.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        collector:
          $ref: '#/components/schemas/apiCollector'
    apiSingleConceptLanguageResponse:
      title: SingleConceptLanguageResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        conceptLanguage:
          $ref: '#/components/schemas/apiConceptLanguage'
    apiSingleConceptResponse:
      title: SingleConceptResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        concept:
          $ref: '#/components/schemas/apiConcept'
    apiSingleDatasetInputResponse:
      title: SingleDatasetInputResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        datasetInput:
          $ref: '#/components/schemas/apiDatasetInput'
    apiSingleDatasetResponse:
      title: SingleDatasetResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        dataset:
          $ref: '#/components/schemas/apiDataset'
    apiSingleDatasetVersionResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        datasetVersion:
          $ref: '#/components/schemas/apiDatasetVersion'
    apiSingleEvalMetricsResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        evalMetrics:
          $ref: '#/components/schemas/apiEvalMetrics'
    apiSingleInputCountResponse:
      title: SingleInputCountResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        counts:
          $ref: '#/components/schemas/apiInputCount'
    apiSingleInputResponse:
      title: SingleInputResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        input:
          $ref: '#/components/schemas/apiInput'
    apiSingleInputsAddJobResponse:
      title: SingleInputsAddJobResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        inputsAddJob:
          $ref: '#/components/schemas/apiInputsAddJob'
    apiSingleInputsExtractionJobResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        inputsExtractionJob:
          $ref: '#/components/schemas/apiInputsExtractionJob'
    apiSingleInstalledModuleVersionResponse:
      title: SingleInstalledModuleVersionResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        installedModuleVersion:
          $ref: '#/components/schemas/apiInstalledModuleVersion'
    apiSingleKeyResponse:
      title: SingleKeyResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        key:
          $ref: '#/components/schemas/apiKey'
    apiSingleLabelOrderResponse:
      description: Response with a label order.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        labelOrder:
          $ref: '#/components/schemas/apiLabelOrder'
    apiSingleModelResponse:
      title: SingleModelResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        model:
          $ref: '#/components/schemas/apiModel'
    apiSingleModelTypeResponse:
      title: SingleModelTypeResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        modelType:
          $ref: '#/components/schemas/apiModelType'
    apiSingleModelVersionExportResponse:
      title: SingleModelVersionExportResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        export:
          $ref: '#/components/schemas/apiModelVersionExport'
    apiSingleModelVersionInputExampleResponse:
      title: SingleModelVersionInputExampleResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        modelVersionInputExample:
          $ref: '#/components/schemas/apiModelVersionInputExample'
    apiSingleModelVersionResponse:
      title: SingleModelVersionResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        modelVersion:
          $ref: '#/components/schemas/apiModelVersion'
    apiSingleModuleResponse:
      title: SingleModuleResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        module:
          $ref: '#/components/schemas/apiModule'
    apiSingleModuleVersionResponse:
      title: SingleModuleVersionResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        moduleVersion:
          $ref: '#/components/schemas/apiModuleVersion'
    apiSingleModuleVersionUsageCountResponse:
      title: SingleModuleVersionUsageCountResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        usageCount:
          type: integer
          format: int64
    apiSinglePasswordValidationResponse:
      title: SinglePasswordValidationResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        passwordViolations:
          $ref: '#/components/schemas/apiPasswordViolations'
    apiSingleRunnerResponse:
      title: SingleRunnerResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        runner:
          $ref: '#/components/schemas/apiRunner'
    apiSingleSearchResponse:
      title: >-
        SingleSearchResponse returns saved search in response to
        GetSearchRequest
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        search:
          $ref: '#/components/schemas/apiSearch'
    apiSingleStatusCodeResponse:
      title: SingleStatusCodeResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
    apiSingleTaskCountResponse:
      title: >-
        SingleTaskCountResponse represent counts of annotations or inputs(anchor
        annotations) for labelers in given task
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        appId:
          type: string
        taskId:
          type: string
        counts:
          type: array
          items:
            $ref: '#/components/schemas/apiTaskStatusCountPerUser'
    apiSingleTaskResponse:
      description: Response with a single Task.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        task:
          $ref: '#/components/schemas/apiTask'
    apiSingleUploadResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        upload:
          $ref: '#/components/schemas/apiUpload'
    apiSingleUserResponse:
      title: SingleUserResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        user:
          $ref: '#/components/schemas/apiUser'
    apiSingleWorkflowResponse:
      title: SingleWorkflowResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        workflow:
          $ref: '#/components/schemas/apiWorkflow'
    apiSingleWorkflowVersionResponse:
      title: SingleWorkflowVersionResponse
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
        workflowVersion:
          $ref: '#/components/schemas/apiWorkflowVersion'
    apiSpan:
      type: object
      properties:
        charStart:
          type: integer
          format: int64
        charEnd:
          type: integer
          format: int64
        rawText:
          type: string
    apiSplitIntoDatasets:
      type: object
      properties:
        datasetSplits:
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetSplit'
        method:
          $ref: '#/components/schemas/SplitIntoDatasetsDatasetSplitMethod'
    apiStatTimeAggType:
      type: string
      enum:
        - NO_TIME_AGG
        - YEAR
        - MONTH
        - WEEK
        - DAY
        - HOUR
        - MINUTE
      default: NO_TIME_AGG
    apiStatValue:
      title: StatValue
      type: object
      properties:
        tags:
          description: >-
            List of tags to attach to this stat. Each should contain one colon
            so that the first part will

            be used as a tag group while the second being the tag itself. For
            example: ["task_id:a",

            "worker_id:1"]. These tag groups like "task_id" or "worker_id" are
            important for aggregating

            values in the StatValueAggregateQuery.
          type: array
          items:
            type: string
        time:
          description: The time of the event. Defaults to now().
          type: string
          format: date-time
        value:
          description: A value for the metric you're recording.
          type: number
          format: float
    apiStatValueAggType:
      type: string
      enum:
        - SUM
        - AVG
      default: SUM
    apiStatValueAggregate:
      title: StatValueAggregate
      type: object
      properties:
        tags:
          description: >-
            The tags for this aggregated_value and count. This will be filled in
            if tag groups were used in

            the query to group aggregations.
          type: array
          items:
            type: string
        time:
          description: >-
            The time of the aggregation. For example, if you aggregate over
            "HOUR" buckets then you can

            expect each hour that has atleast one value (matching the rest of
            your query fields) will have

            a StatValueAggregate with the time filled into that hour.
          type: string
          format: date-time
        aggregateValue:
          title: The value aggregated according to the stat_value_agg_type
          type: number
          format: float
        count:
          description: The count of the stat values that were used in this aggregation.
          type: string
          format: uint64
    apiStatValueAggregateQuery:
      title: StatValueAggregateQuery
      type: object
      properties:
        tags:
          description: >-
            These tags are used to filter down the values before they are
            aggregated. For example,

            if you want to aggregate values for "task_id:a" you could specify
            that as a tag here.
          type: array
          items:
            type: string
        tagGroups:
          title: >-
            These are tag groups to aggregate over. So for example if you added
            stat values with tags

            "task_id:a" and others with "task_id:b", then added ["task_id"] to
            the task group, it the

            aggregation would return StatValueAggregate values for each task_id.
            If you provide more than

            one tag_group the response will return all rolled up combinations of
            them. For example

            ["task_id", "something"] where "something:1" and "something:2" were
            used as tags for some

            values then you'd get StatValueAggregate values back for:

            task_id | something

            a       | 1

            a       | 2

            b       | 1

            b       | 1
          type: array
          items:
            type: string
        statValueAggType:
          $ref: '#/components/schemas/apiStatValueAggType'
        statTimeAggType:
          $ref: '#/components/schemas/apiStatTimeAggType'
        startTime:
          description: >-
            If provided the time range over which values will be >= this time.
            If not provided then

            all values will be used back to start of time.
          type: string
          format: date-time
        endTime:
          description: >-
            If provided the time range over which values will be <= this time.
            If not provided then all

            values will be used up until now().
          type: string
          format: date-time
    apiStatValueAggregateResult:
      title: StatValueAggregateResult
      type: object
      properties:
        statValueAggregates:
          description: The list of repeated aggregate values and their counts.
          type: array
          items:
            $ref: '#/components/schemas/apiStatValueAggregate'
        statValueAggregateQuery:
          $ref: '#/components/schemas/apiStatValueAggregateQuery'
    apiTask:
      description: >-
        Task is the work that needs to be done for labeling the inputs in an
        app.
      type: object
      properties:
        description:
          description: Description of the task.
          type: string
        id:
          description: Unique ID for the task.
          type: string
        createdAt:
          description: |-
            When the task was created.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            Most recent time when the task was updated.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        type:
          $ref: '#/components/schemas/TaskTaskType'
        worker:
          $ref: '#/components/schemas/apiTaskWorker'
        conceptIds:
          description: |-
            List of concept ids used in the work of this task.
            DEPRECATED: Use task.concepts instead.
          type: array
          items:
            type: string
        inputSource:
          $ref: '#/components/schemas/apiTaskInputSource'
        sampleMs:
          title: >-
            For model predictions on video: Sample delay for video predicting (1
            frame per N milliseconds)
          type: integer
          format: int64
        aiAssistant:
          $ref: '#/components/schemas/apiTaskAIAssistant'
        review:
          $ref: '#/components/schemas/apiTaskReview'
        status:
          $ref: '#/components/schemas/apistatusStatus'
        name:
          description: >-
            Add a title for this task to quickly recognise it in a list of
            tasks.
          type: string
        aiAssistParams:
          $ref: '#/components/schemas/apiAiAssistParameters'
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        appId:
          description: The app the task belongs to.
          type: string
        userId:
          description: The user the task belongs to.
          type: string
        labelOrderId:
          description: The label order the task belongs to.
          type: string
        concepts:
          description: Ignore Task.concept_ids field if Task.TaskConcept are supplied.
          type: array
          items:
            $ref: '#/components/schemas/apiTaskConcept'
        deletePreviousAnnotations:
          title: >-
            Specify whether existing Annotations within the same app that are
            generated by other auto annotation tasks

            with the specified Concept from the selected Model or Workflow
            should deleted before executing the Task
          type: boolean
        metrics:
          $ref: '#/components/schemas/apiTaskMetrics'
    apiTaskAIAssistant:
      title: TaskAIAssistant
      type: object
      properties:
        workflowId:
          description: >-
            The worker is helped by an AI assistant.

            This field is the workflow id which is used to assist the worker
            with predictions.

            If empty, then AI assistant is disabled.
          type: string
    apiTaskAssignment:
      type: object
      properties:
        id:
          type: string
        createdAt:
          description: |-
            Creation time.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            Most recent modification time.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        worker:
          $ref: '#/components/schemas/apiWorker'
        input:
          $ref: '#/components/schemas/apiInput'
        status:
          $ref: '#/components/schemas/apistatusStatus'
    apiTaskConcept:
      type: object
      properties:
        concept:
          $ref: '#/components/schemas/apiConcept'
        autoAnnotationConfig:
          $ref: '#/components/schemas/apiTaskConceptAutoAnnotationConfig'
    apiTaskConceptAutoAnnotationConfig:
      type: object
      properties:
        annotationDataTypes:
          description: >-
            Filter annotations by their annotation data type.

            This is a bit-mask field that holds multiple AnnotationDataType
            values that are combined in an OR fashion.

            Example: if annotation_data_types = 34, then we filter annotations
            that appear as a mask or a bounding box,

            because MASK = 32 and BOUNDING_BOX = 2.
          type: integer
          format: int64
        thresholdRange:
          $ref: '#/components/schemas/apiThresholdRange'
        statusCode:
          $ref: '#/components/schemas/statusStatusCode'
    apiTaskInputSource:
      title: TaskInputSource
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TaskInputSourceTaskInputSourceType'
        id:
          description: If type is SAVED_SEARCH, then this is the saved search id.
          type: string
    apiTaskMetrics:
      type: object
      properties:
        work:
          $ref: '#/components/schemas/apiTaskWorkMetrics'
    apiTaskReview:
      title: TaskReview
      type: object
      properties:
        strategy:
          $ref: '#/components/schemas/TaskReviewTaskReviewStrategy'
        userIds:
          description: |-
            Who will review this task.
            DEPRECATED: Use users.id instead.
          type: array
          items:
            type: string
        users:
          description: >-
            Users who will review this task.

            When the 'review.users' field is additionally requested, then all
            user

            info is filled for the reviewers. Otherwise, only the user 'id' is
            filled.
          type: array
          items:
            $ref: '#/components/schemas/apiUser'
        manualStrategyInfo:
          $ref: '#/components/schemas/apiTaskReviewManualStrategyInfo'
        consensusStrategyInfo:
          $ref: '#/components/schemas/apiTaskReviewConsensusStrategyInfo'
    apiTaskReviewConsensusStrategyInfo:
      title: TaskReviewConsensusStrategyInfo
      type: object
      properties:
        approvalThreshold:
          description: >-
            The number of labelers that need to agree in order to automatically
            approve an annotation.
          type: integer
          format: int64
    apiTaskReviewManualStrategyInfo:
      title: TaskReviewManualStrategyInfo
      type: object
      properties:
        samplePercentage:
          description: >-
            This field represents the percentage of inputs that will be reviewed
            by reviewers. It is a value between 0 and 1.
          type: number
          format: float
    apiTaskStatusCountPerUser:
      title: >-
        TaskStatusCountPerUser can represents count of human created annotations
        for a user for each valid status,

        count of inputs (anchor annotation) for a user for each valid status
      type: object
      properties:
        userId:
          type: string
        pending:
          type: integer
          format: int64
        awaitingReview:
          type: integer
          format: int64
        success:
          type: integer
          format: int64
        reviewDenied:
          type: integer
          format: int64
        awaitingConsensusReview:
          type: integer
          format: int64
    apiTaskWorkMetrics:
      type: object
      properties:
        inputsCountEstimated:
          description: Estimated number of inputs that workers have worked on.
          type: string
          format: uint64
        inputsPercentEstimated:
          description: |-
            Estimated percent of inputs that workers have worked on.
            This is a value between 0 and 100, where 0 = 0% and 100 = 100%.
          type: integer
          format: int64
    apiTaskWorker:
      description: >-
        TaskWorker includes information about the workers that will work on this
        task.
      type: object
      properties:
        strategy:
          $ref: '#/components/schemas/TaskWorkerTaskWorkerStrategy'
        userIds:
          description: |-
            Who will work on this task.
            DEPRECATED: Use workers.user.id instead.
          type: array
          items:
            type: string
        users:
          description: >-
            Users who will work on this task.

            When the 'worker.users' field is additionally requested, then all
            user

            info is filled for the workers. Otherwise, only the user 'id' is
            filled.

            DEPRECATED: Use workers.user instead.
          type: array
          items:
            $ref: '#/components/schemas/apiUser'
        partitionedStrategyInfo:
          $ref: '#/components/schemas/apiTaskWorkerPartitionedStrategyInfo'
        workers:
          description: |-
            Workers that will work on this task.

            For Auto Annotation Tasks:
              the worker can be either a model or a workflow;
              currently only supports 1 worker.
            For manual labeling Tasks:
              the workers can only be users;
              no limitation on number of workers.
          type: array
          items:
            $ref: '#/components/schemas/apiWorker'
    apiTaskWorkerPartitionedStrategyInfo:
      title: TaskWorkerPartitionedStrategyInfo
      type: object
      properties:
        type:
          $ref: >-
            #/components/schemas/TaskWorkerPartitionedStrategyInfoTaskWorkerPartitionedStrategy
        workersPerInput:
          description: How many workers will label each input.
          type: integer
          format: int32
        weights:
          description: >-
            In case of weighted partitioning, map user ids to weights.

            Each labeler will be assigned work proportional to its own weight as
            compared to the sum of total weight.


            EXAMPLE:

            If we have 3 workers, and weights = {1: 30, 2: 30, 3: 40},

            then first worker will have assigned 30% of the work,

            second worker will have assigned 30% of the work,

            and third worker will have assigned 40% of the work.

            You may use weights which add up to 100, but it's not necessary.

            For example, weights {1: 30, 2: 30, 3: 40} are equivalent with {1:
            3, 2: 3, 3: 4}

            because they represent the same percentages: {1: 30%, 2: 30%, 3:
            40%}.


            NOTE:

            Note that no worker should be assigned a weight percentage greater
            than 1/workers_per_input.

            It is mathematically impossible to partition the work in such a
            case.

            Why? Say, we have 3 workers. And workers_per_input = 2, i.e. each
            input must be labeled by 2 workers.

            Let's assign weights {1: 51%, 2: 25%, 3: 24%}.

            Note that first worker has a weight percentage higher than
            1/workers_per_input = 1/2 = 50%.

            If we have 100 inputs, then a total of 100 * workers_per_input = 200
            cumulative inputs will be labeled by these 3 workers.

            Worker 1 should label 102 cumulative inputs, while worker 2 and
            worker 3 will label 98 cumulative inputs together.

            No matter how we assign the 98 cumulative inputs, the 2 workers will
            be able to label up to 98 actual inputs.

            This means the remaining 2 inputs will be labeled only by worker 1.
            This contradicts the worker_per_input = 2 requirement.
          type: object
    apiText:
      title: Text
      type: object
      properties:
        raw:
          description: This is a raw text string.
          type: string
        url:
          title: Url to a text file
          type: string
        allowDuplicateUrl:
          type: boolean
        hosted:
          $ref: '#/components/schemas/apiHostedURL'
        textInfo:
          $ref: '#/components/schemas/apiTextInfo'
    apiTextInfo:
      type: object
      properties:
        charCount:
          title: count of characters in text
          type: integer
          format: int32
        encoding:
          title: text encoding
          type: string
    apiThresholdRange:
      type: object
      properties:
        isLowerInclusive:
          title: >-
            The range used to filter over concept values.

            e.g. GREATER_THAN_OR_EQUAL_TO 0.7 -> is_lower_inclusive = true,
            lower = 0.7, is_upper_inclusive = true, upper = 1.0

            e.g. (0.3, 0.75] -> is_lower_inclusive = false, lower = 0.3,
            is_upper_inclusive = true, upper = 0.75
          type: boolean
        isUpperInclusive:
          type: boolean
        lower:
          type: number
          format: float
        upper:
          type: number
          format: float
    apiTimeInfo:
      title: TimeInfo
      type: object
      properties:
        numFrames:
          title: Number of frames
          type: integer
          format: int64
        beginTime:
          description: Timestamp where track begins.
          type: number
          format: float
        endTime:
          description: Timestamp where track ends.
          type: number
          format: float
    apiTimeRange:
      title: TimeRange
      type: object
      properties:
        startTime:
          description: Begin of the time range, optional, inclusive.
          type: string
          format: date-time
        endTime:
          description: End of the time range, optional, inclusive.
          type: string
          format: date-time
    apiTimeSegment:
      title: TimeSegment
      type: object
      properties:
        id:
          description: A unique id for the time segment.
          type: string
        data:
          $ref: '#/components/schemas/apiData'
        timeInfo:
          $ref: '#/components/schemas/apiTimeInfo'
    apiToken:
      type: object
      properties:
        charStart:
          type: integer
          format: int64
        charEnd:
          type: integer
          format: int64
        rawText:
          type: string
    apiTrack:
      title: Track proto encodes information of a track over a number of frames
      type: object
      properties:
        id:
          title: track id
          type: string
        data:
          $ref: '#/components/schemas/apiData'
        timeInfo:
          $ref: '#/components/schemas/apiTimeInfo'
        quality:
          type: number
          format: float
    apiTrackerMetrics:
      title: TrackerMetrics
      type: object
      properties:
        motMota:
          title: Multiple object tracking accuracy
          type: number
          format: float
        motNumSwitches:
          title: Number of switches between tracks
          type: integer
          format: int32
        morseFrag:
          title: >-
            MORSE fragmentation rate (a.k.a unique switch rate, only calculated
            in public sector)
          type: number
          format: float
        avgPrecision:
          title: Average precision calculated from all processed frames
          type: number
          format: float
        aiid:
          title: The concept that we are evaluating the tracker
          type: string
        uniqueSwitchRate:
          title: Same as morse_frag but calculated using MOT mapping/metrics
          type: number
          format: float
    apiTrainInfo:
      type: object
      properties:
        params:
          description: >-
            To control the training process when PostModelVersions is used we
            allow a list of parameters

            defined for each ModelType as a Struct (JSON object) here. During
            training, the settings

            contained within are sent to the training processor to alter the
            training process.
          type: object
        dataset:
          $ref: '#/components/schemas/apiDataset'
        resumeFromModel:
          $ref: '#/components/schemas/apiModel'
    apiTrendingMetric:
      title: TrendingMetric
      type: object
      properties:
        userId:
          type: string
        appId:
          type: string
        objectId:
          type: string
        viewCount:
          type: string
          format: uint64
    apiTritonCondaEnvInfo:
      type: object
      properties:
        condaPackUrl:
          type: string
        condaYamlUrl:
          type: string
    apiUpload:
      type: object
      properties:
        id:
          title: ID of upload
          type: string
        createdAt:
          description: |-
            When the upload was started.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            Most recent time when the upload was updated.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        expiresAt:
          description: |-
            When the upload will expire and be deleted
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/apistatusStatus'
        contentName:
          title: name of uploaded content (e.g. filename)
          type: string
        contentLength:
          title: Total size of the upload content
          type: string
          format: uint64
        contentUrl:
          title: Url of uploaded content
          type: string
    apiUploadContentPart:
      type: object
      properties:
        rangeStart:
          type: string
          format: uint64
        partNumber:
          type: string
          format: int64
        data:
          type: string
          format: byte
    apiUser:
      title: User
      type: object
      properties:
        id:
          type: string
        primaryEmail:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        jobTitle:
          type: string
        jobRole:
          type: string
        intention:
          title: This specifies user intent when registering on clarifai
          type: string
        billType:
          type: string
        createdAt:
          title: |-
            When the user was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        dateGdprConsent:
          type: string
          format: date-time
        dateTosConsent:
          type: string
          format: date-time
        dateMarketingConsent:
          type: string
          format: date-time
        datePiiConsent:
          type: string
          format: date-time
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        emailAddresses:
          type: array
          items:
            $ref: '#/components/schemas/apiEmailAddress'
        twoFactorAuthEnabled:
          type: boolean
        teamsCount:
          type: integer
          format: int64
        isStarred:
          title: >-
            Is starred by the requesting user (only showed on get/list requests)

            Please use PostUserStars/DeleteUserStars endpoints to star/unstar an
            user
          type: boolean
        starCount:
          title: >-
            How many users have starred the user (only showed on get/list
            requests)

            Computed value, not editable
          type: integer
          format: int32
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        userDetail:
          $ref: '#/components/schemas/apiUserDetail'
    apiUserAppIDSet:
      description: Common message to identify the app in a url endpoint.
      type: object
      properties:
        userId:
          title: >-
            Note user_id 'me' is reserved - it is the alias for the id of
            authorized user
          type: string
        appId:
          type: string
    apiUserDetail:
      description: >-
        This message holds the confidential information from the User object
        that we don't want to expose

        to other users. It will be accessible only from /users/{user_id}/account
        and with the User scopes.
      type: object
      properties:
        primaryEmail:
          type: string
        billType:
          type: string
        dateGdprConsent:
          type: string
          format: date-time
        dateTosConsent:
          type: string
          format: date-time
        dateMarketingConsent:
          type: string
          format: date-time
        datePiiConsent:
          type: string
          format: date-time
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        emailAddresses:
          type: array
          items:
            $ref: '#/components/schemas/apiEmailAddress'
        twoFactorAuthEnabled:
          type: boolean
        teamsCount:
          type: integer
          format: int64
        country:
          type: string
        state:
          type: string
    apiVideo:
      title: Video
      type: object
      properties:
        url:
          description: >-
            This is a URL to a publicly accessible video file. The platform will
            download this file server

            side and then process.
          type: string
        base64:
          description: >-
            The base64 field is using video file bytes directly in the request.

            NOTE: if you're sending a json request, then this MUST be base64
            encoded before sending (hence

            the name here).

            When using our grpc clients, you DO NOT need to base64 encode

            it yourself since the clients know how to do this for you
            automatically and will avoid the

            base64 encoding if they send a binary request.
          type: string
          format: byte
        allowDuplicateUrl:
          type: boolean
        thumbnailUrl:
          title: >-
            URL of thumbnail image, which is currently frame at position of 1s.
            This field is currently

            used only in response.

            Deprecated in favour of thumbnail_hosted, which also contains
            alternate sizes of thumbnail
          type: string
        hosted:
          $ref: '#/components/schemas/apiHostedURL'
        hostedThumbnail:
          $ref: '#/components/schemas/apiHostedURL'
        videoInfo:
          $ref: '#/components/schemas/apiVideoInfo'
    apiVideoInfo:
      type: object
      properties:
        width:
          title: width
          type: integer
          format: int32
        height:
          title: height
          type: integer
          format: int32
        fps:
          description: Frames per second of the video.
          type: number
          format: float
        videoFormat:
          title: video format
          type: string
        bitRate:
          title: video track bit rate
          type: integer
          format: int32
        frameCount:
          title: video frame count
          type: integer
          format: int32
        durationSeconds:
          title: video duration in seconds
          type: number
          format: float
    apiW3C:
      type: object
      properties:
        hex:
          type: string
        name:
          type: string
    apiWorker:
      description: Worker is the author of an annotation.
      type: object
      properties:
        user:
          $ref: '#/components/schemas/apiUser'
        model:
          $ref: '#/components/schemas/apiModel'
        workflow:
          $ref: '#/components/schemas/apiWorkflow'
    apiWorkflow:
      title: Workflow
      type: object
      properties:
        description:
          title: Short description about this workflow
          type: string
        version:
          $ref: '#/components/schemas/apiWorkflowVersion'
        id:
          description: The workflows's unique id.
          type: string
        appId:
          title: The app the workflow belongs to
          type: string
        createdAt:
          title: |-
            When the workflow was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        nodes:
          description: >-
            The list of nodes retrieved from latest workflow version.

            Each node can specify an input node that it connects to in order to
            define the graph.
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowNode'
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        userId:
          title: The user the workflow belongs to
          type: string
        modifiedAt:
          title: When the workflow was last modified
          type: string
          format: date-time
        isStarred:
          title: >-
            Is starred by the requesting user (only showed on get/list requests)

            Please use PostWorkflowStars/DeleteWorkflowStars endpoints to
            star/unstar a workflow
          type: boolean
        starCount:
          title: >-
            How many users have starred the workflow (only showed on get/list
            requests)

            Computed value, not editable
          type: integer
          format: int32
        notes:
          description: >-
            Notes for the workflow

            This field should be used for in-depth notes and supports up to
            64Kbs.
          type: string
        useCases:
          title: Tags from use_cases category
          type: array
          items:
            type: string
        checkConsents:
          title: Tags for check consents
          type: array
          items:
            type: string
        bookmarkOrigin:
          $ref: '#/components/schemas/apiBookmarkOrigin'
        image:
          $ref: '#/components/schemas/apiImage'
    apiWorkflowModelUseCase:
      description: >2-
         - CLASSIFICATION: Classifier models without a detector parent (recursive check) in a workflow
        are used for classification.
         - DETECTION: Detector models in a workflow are used for detection.
        Classifier models that run after a detector model are also used for
        detection.
      type: string
      enum:
        - WORKFLOW_MODEL_USE_CASE_NOT_SET
        - CLASSIFICATION
        - DETECTION
      default: WORKFLOW_MODEL_USE_CASE_NOT_SET
    apiWorkflowNode:
      title: WorkflowNode
      type: object
      properties:
        id:
          description: >-
            An identifier for this node in the graph. This is used when
            connecting NodeInputs

            together.
          type: string
        model:
          $ref: '#/components/schemas/apiModel'
        nodeInputs:
          description: >-
            Each WorkflowNode can connect to multiple input nodes so that we can
            handle multi-model data

            and more complex workflow operations.
          type: array
          items:
            $ref: '#/components/schemas/apiNodeInput'
        suppressOutput:
          title: suppress the output for workflow prediction
          type: boolean
        outputInfoOverride:
          $ref: '#/components/schemas/apiOutputInfo'
    apiWorkflowResult:
      description: |-
        WorkflowResult
        One result per input in the workflow.
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/apistatusStatus'
        createdAt:
          title: |-
            When the object was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        model:
          $ref: '#/components/schemas/apiModel'
        input:
          $ref: '#/components/schemas/apiInput'
        outputs:
          description: For each model in the workflow we return an Output.
          type: array
          items:
            $ref: '#/components/schemas/apiOutput'
        suppressOutput:
          description: Indicate if the output of this model is suppressed.
          type: boolean
    apiWorkflowResultsSimilarity:
      title: WorkflowResultsSimilarity
      type: object
      properties:
        probeInput:
          $ref: '#/components/schemas/apiInput'
        poolResults:
          type: array
          items:
            $ref: '#/components/schemas/apiHit'
    apiWorkflowState:
      title: WorkflowState
      type: object
      properties:
        id:
          description: >-
            A unique ID for the workflow state.

            To start saving a state in a PostWorkflowResults request set this ID
            to "init"

            and it will return a newly generated unique state id that you can
            then pass in subsequent

            PostWorkflowResults calls. These state expire after 5 minutes
            between calls.
          type: string
    apiWorkflowVersion:
      title: WorkflowVersion
      type: object
      properties:
        description:
          title: Short description about this workflow version
          type: string
        id:
          description: Id of this version.
          type: string
        workflowId:
          description: Workflow id for this version.
          type: string
        createdAt:
          description: |-
            When the version was created.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        modifiedAt:
          description: |-
            Most recent time when the version was updated.
            The format is https://www.ietf.org/rfc/rfc3339.txt.
            Example: "2006-01-02T15:04:05.999999Z".
          type: string
          format: date-time
        visibility:
          $ref: '#/components/schemas/clarifaiapiVisibility'
        nodes:
          description: >-
            The list of nodes that make up the workflow version. Each node can
            specify an input node

            that it connects to in order to define the graph.
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowNode'
        metadata:
          title: >-
            To handle arbitrary json metadata you can use a struct field:

            https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
          type: object
        appId:
          description: The app the workflow version belongs to.
          type: string
        userId:
          description: The user the workflow version belongs to.
          type: string
        license:
          title: License associated to this workflow version
          type: string
    apiWorkflowVersionPublishRequest:
      type: object
      properties:
        versionId:
          type: string
    apiWorkflowVersionUnPublishRequest:
      type: object
      properties:
        versionId:
          type: string
    apistatusStatus:
      type: object
      properties:
        description:
          description: A short description of the error.
          type: string
        code:
          $ref: '#/components/schemas/statusStatusCode'
        details:
          description: |-
            More details of the given error.
            These details may be exposed to non-technical users.
            For technical details, try to use developer_notes field.
          type: string
        stackTrace:
          description: |-
            For some environment we may return a stack trace to help debug
            any issues.
          type: array
          items:
            type: string
        percentCompleted:
          title: specifically for long running jobs
          type: integer
          format: int64
        timeRemaining:
          title: if status is pending, how much time is remaining (in seconds)
          type: integer
          format: int64
        reqId:
          title: >-
            A request ID may be present, to help monitoring and tracking
            requests
          type: string
        internalDetails:
          description: >-
            Internal Annotation (do not set in production, for internal Clarifai
            use only).
          type: string
        redirectInfo:
          $ref: '#/components/schemas/statusRedirectInfo'
        developerNotes:
          description: >-
            Notes for developer.

            These notes are rather technical details for developers how to
            interpret the status,

            e.g. why an error occurred and how to avoid getting the error.
          type: string
    clarifaiapiAnnotation:
      title: Annotation of an asset with metadata
      type: object
      properties:
        id:
          title: The ID for the annotation
          type: string
        inputId:
          title: ID of the input this annotation is tied to
          type: string
        data:
          $ref: '#/components/schemas/apiData'
        annotationInfo:
          title: task_id is deprecated in annotation_info. Use task_id
          type: object
        userId:
          title: ID of the user this annotation is created by
          type: string
        modelVersionId:
          title: ID of the model version this annotation is created by
          type: string
        embedModelVersionId:
          description: DEPRECATED.
          type: string
        status:
          $ref: '#/components/schemas/apistatusStatus'
        createdAt:
          title: |-
            When the annotation was created. We follow the XXXX timestamp
            format. We use https://www.ietf.org/rfc/rfc3339.txt format:
            "2006-01-02T15:04:05.999999Z" so you can expect results like
            the following from the API:
            "2017-04-11T21:50:50.223962Z"
          type: string
          format: date-time
        modifiedAt:
          description: When the annotation was modified.
          type: string
          format: date-time
        trusted:
          title: |-
            Whether or not this annotation is trusted
            Will be deprecated
          type: boolean
        inputLevel:
          description: Is this the input level annotation.
          type: boolean
        consensusInfo:
          title: >-
            Consensus review related information, e.g.

            * annotation group

            * id of annotation parent, in case the annotation was split from
            another annotation
          type: object
        taskId:
          title: The id of the task annotation belongs to
          type: string
        workflowVersionId:
          title: ID of the workflow version this annotation is created by
          type: string
    clarifaiapiVisibility:
      description: >-
        Visibility represents how visible the given resource is to other users.

        When authenticating a request we can tell if a user is a collaborator or
        a teammate for the

        the app that contains the resource and set their allowed visibility. We
        use that to restrict

        what they are allowed to see:

        If AllowedVisibility is PRIVATE then we allow PRIVATE (10), ORG (30),
        PUBLIC (50)

        If AllowedVisibility is ORG then we allow ORG (30), PUBLIC (50)

        If AllowedVisibility is PUBLIC then we allow PUBLIC (50) only.
      type: object
      properties:
        gettable:
          $ref: '#/components/schemas/VisibilityGettable'
    googlerpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties: {}
    protobufNullValue:
      description: >-
        `NullValue` is a singleton enumeration to represent the null value for
        the

        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      type: string
      enum:
        - NULL_VALUE
      default: NULL_VALUE
    statusBaseResponse:
      description: |-
        Base message to return when there is a internal server error that
        is not caught elsewhere.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apistatusStatus'
    statusRedirectInfo:
      type: object
      properties:
        url:
          description: New location for the resource. Used to set response Location header.
          type: string
        resourceType:
          title: Resource type
          type: string
        oldResourceId:
          title: Old resource id
          type: string
        newResourceId:
          title: New resource id
          type: string
    statusStatusCode:
      title: |-
        - ZERO: to be revised and greatly expanded
         - SUCCESS: Generic
         - MOVED: Resource moved. Respond with Http status 307 and add new Location header to response
         - TEAPOT: SUCCESS_WARNING_API_DEPRECATED = 10001;
        SUCCESS_WARNING_CLIENT_DEPRECATED = 10002;
         - CONN_ACCOUNT_ISSUES: Clarifai Connection Codes: 11xxx
      description: |-
        expired cc, still in trial, feature not supported in your tier
         - CONN_TOKEN_INVALID: invalid auth token used. Deprecated: we should return CONN_KEY_INVALID instead now in all cases.
         - CONN_CREDENTIALS_INVALID: invalid auth credentials
         - CONN_EXCEED_HOURLY_LIMIT: throttle hourly limit exceeded
         - CONN_EXCEED_MONTHLY_LIMIT: throttle monthly limit exceeded
         - CONN_THROTTLED: throttler and billing stuff
         - CONN_EXCEEDS_LIMITS: throttler and billing stuff
         - CONN_INSUFFICIENT_SCOPES: api key has insufficient permissions
         - CONN_KEY_INVALID: api key is invalid
         - CONN_KEY_NOT_FOUND: api key not found
         - CONN_BAD_REQUEST_FORMAT: multipart form parsing, broken json, etc
         - CONN_DOES_NOT_EXIST: when path is bad
         - CONN_INVALID_REQUEST: something wrong with a header
         - CONN_METHOD_NOT_ALLOWED: when a request method is not allowed
         - CONN_NO_GDPR_CONSENT: lack GDPR consent
         - CONN_AUTH_METHOD_DISABLED: authentication method is disabled
         - MODEL_TRAINED: Model/Custom Training related 20xxx

        Custom model has been already trained.
         - MODEL_TRAINING: Custom model is currently training.
         - MODEL_UNTRAINED: Custom model has not yet been trained.
         - MODEL_QUEUED_FOR_TRAINING: Custom model is currently in queue for training, waiting on assets to process first.
         - MODEL_TRAINING_FAILED: generic err msg for any type of model training err.
         - MODEL_TRAINING_NO_DATA: Custom model training had no data.  FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
         - MODEL_TRAINING_NO_POSITIVES: Custom model training had no positive examples. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
         - MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS: Custom model training was ONE_VS_N but with a single class. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
         - MODEL_TRAINING_TIMED_OUT: Training took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
         - MODEL_TRAINING_WAITING_ERROR: Training got error waiting on asset pipeline to finish. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
         - MODEL_TRAINING_UNKNOWN_ERROR: Training threw an unknown exception.
         - MODEL_TRAINING_MSG_REDELIVER: Training message was redelivered. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
         - MODEL_TRAINING_INSUFFICIENT_DATA: Training got error due to insufficient labelled data. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
         - MODEL_TRAINING_INVALID_PARAMS: FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
         - MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED: Training is stopped because too much data was dropped. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
         - MODEL_EVALUATION_TIMED_OUT: Evaluation took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
         - MODEL_EVALUATION_WAITING_ERROR: Evaluation got error waiting on asset pipeline to finish.FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
         - MODEL_EVALUATION_UNKNOWN_ERROR: EVALUATION THREW AN UNKNOWN EXCEPTION.
         - MODEL_EVALUATION_MSG_REDELIVER: Eval message was redelivered. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
         - MODEL_EVALUATION_NEED_LABELS: Don't have enough concepts labelled to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
         - MODEL_EVALUATION_NEED_INPUTS: Don't have enough inputs per concept to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
         - MODEL_EVALUATION_FAILED: Generic err code for eval failure.
         - MODEL_DEPLOYMENT_FAILED: Used when inference coordinator failed to deploy spire and throws an error
         - MODEL_DEPLOYING: Used when calling the inference coordinator to deploy a spire
         - MODEL_QUEUED_FOR_DEPLOYMENT: Used when training is completed
         - MODEL_NOT_DEPLOYED: Used when model spire deployment is manually taken down or due to inactivity
         - MODEL_REFERENCE_INVALID_ARGUMENT: Used when a model reference field is not set properly
         - MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT: Used when a model example input field is not set properly
         - MODEL_EXPORTED: Model Export status codes
         - WORKFLOW_NO_MATCHING_INPUT: specified model input not in workflow
         - WORKFLOW_REQUIRE_TRAINED_MODEL: specified model must be trained
         - WORKFLOW_INVALID_ARGUMENT: error in the request somewhere
         - WORKFLOW_INVALID_REQUEST: error in the request somewhere
         - CONCEPT_MODIFY_SUCCESS: Concept related 23xxx
         - ANNOTATION_SUCCESS: Annotation related 24xxx
         - METADATA_INVALID_PATCH_ARGUMENTS: Metadata related 249xx
         - TRAINER_JOB_STATE_NONE: Training service related 25xxx
         - DATA_DUMP_SUCCESS: Data Dump related 251xx
         - DATA_DUMP_NO_DATA: DEPRECATED: Not used anymore. Now for an empty data dump, DATA_DUMP_SUCCESS is returned. To detect an empty data dump, check if the inptus count is 0.
         - APP_DUPLICATION_SUCCESS: Duplicate related 252xx
         - MODULE_DOES_NOT_EXIST: Module related codes 253xx
         - BULK_OPERATION_SUCCESS: Bulk Operation related codes 254xx
         - RUNNER_DOES_NOT_EXIST: Runner related codes 256xx
         - INPUT_DOWNLOAD_SUCCESS: Input:Image related 30xxx
         - INPUT_DOWNLOAD_PENDING: when things are async, this is the default status.
         - INPUT_DOWNLOAD_FAILED: any type of error downloading and processing
         - INPUT_VIDEO_DOWNLOAD_SUCCESS: Input:Video related 31xxx -- Deprecated
         - INPUT_WRITES_DISABLED_FOR_MAINTENANCE: deprecate this one. Use REQUEST_DISABLED_FOR_MAINTENANCE
         - PREDICT_INVALID_REQUEST: API formatting issues 4000x
         - DATABASE_DUPLICATE_KEY: Other related 400xx
         - EXTERNAL_CONNECTION_ERROR: could not connect to external services
         - QUEUE_CONN_ERROR: Queue related errors 41xxx
         - SQS_OVERLIMIT: SQS related errors 411xx
         - SEARCH_INTERNAL_FAILURE: Search related errors 43xxxx
         - EVALUATION_QUEUED: Workflow evaluation err code
         - STRIPE_EVENT_ERROR: Stripe 44xxx
         - CACHE_MISS: Redis/Cache 45xxx
         - SIGNUP_EVENT_ERROR: Sift Science 46xxx
         - APP_COUNT_INVALID_MESSAGE: Application counts related errors 470xx
         - MP_DOWNLOAD_ERROR: Media processor related errors 471xx -- DEPRECATED
         - DATATIER_CONN_ERROR: DataTier related error 472xx
         - USER_CONSENT_FACE: User legal consent stauts related 50xxx
         - WORKER_MISSING: Workers 51xxx
         - COLLECTOR_MISSING: Collectors 52xxx
         - SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST: SSO 53xxx
         - TASK_IN_PROGRESS: Tasks 54xxx
        The task was created.
         - TASK_DONE: The task is completed.
         - TASK_WONT_DO: The task is marked as abandoned.
         - TASK_FAILED: An error occurred during add-task-annotations or add-auto-annotations pipeline.
         - TASK_IDLE: When an Auto Annotation task job has finished processing its last batch and is waiting for more dataset assets.
         - TASK_CONFLICT: The task operation is in conflict with the current state of the server.
         - TASK_NOT_IMPLEMENTED: Certain task-related scenarios are not implemented.
         - TASK_MISSING: Task was not found.
         - TASK_PERMISSION_DENIED: Not allowed to perform a task-related action.
         - LABEL_ORDER_PENDING: Label Order Related Status Code 55xxx
         - LICENSE_ACTIVE: License Related Status Code 600xx
         - LICENSE_DELETED: hidden state not reflected to users
         - PASSWORD_VALIDATION_SUCCESS: Password Related Status Code
         - FEATUREFLAG_CONFIG_NOT_FOUND: Feature flags status code
         - MAINTENANCE_SUCCESS: Maintenance status code
         - DATASET_VERSION_PENDING: Datasets 64xxx
        The dataset version is pending to be processed.
         - DATASET_VERSION_IN_PROGRESS: The dataset version is currently being processed.
         - DATASET_VERSION_READY: The dataset version is ready to be used.
         - DATASET_VERSION_FAILURE: An error occurred during the dataset version processing.
         - DATASET_VERSION_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version processing.
         - DATASET_VERSION_CONFLICT: An alteration to dataset version would create a conflict
         - DATASET_INPUT_SUCCESS: The dataset input was successfully added.
         - DATASET_INPUT_DUPLICATE: The dataset input is a duplicate.
        Deprecated: Unused.
         - DATASET_VERSION_EXPORT_SUCCESS: The dataset version export is completed.
         - DATASET_VERSION_EXPORT_PENDING: The dataset version is pending to be exported.
         - DATASET_VERSION_EXPORT_FAILED: An error occurred during the dataset version export.
         - DATASET_VERSION_EXPORT_IN_PROGRESS: The dataset version is currently being exported.
         - DATASET_VERSION_EXPORT_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version export.
         - JOB_QUEUED: Generic Job status codes
         - AUTH_MISSING_IDP_ASSOC: auth issues

        TODO: Knowledge graph related 80xxx
         - UPLOAD_IN_PROGRESS: Multipart uploading status codes
         - BILLING_INVALID_INFO: Billing related issues: 69xxx
         - INTERNAL_SERVER_ISSUE: Internal issues: 98xxx
         - CONN_UNCATEGORIZED: Uncategorized: 99xxx: move off as soon as known
         - BAD_REQUEST: Deprecated: migrate off to one of the internal issues
         - SERVER_ERROR: Deprecated: migrate off to one of the internal issues
      type: string
      enum:
        - ZERO
        - SUCCESS
        - MIXED_STATUS
        - FAILURE
        - TRY_AGAIN
        - NOT_IMPLEMENTED
        - MOVED
        - TEAPOT
        - CONN_ACCOUNT_ISSUES
        - CONN_TOKEN_INVALID
        - CONN_CREDENTIALS_INVALID
        - CONN_EXCEED_HOURLY_LIMIT
        - CONN_EXCEED_MONTHLY_LIMIT
        - CONN_THROTTLED
        - CONN_EXCEEDS_LIMITS
        - CONN_INSUFFICIENT_SCOPES
        - CONN_KEY_INVALID
        - CONN_KEY_NOT_FOUND
        - CONN_BAD_REQUEST_FORMAT
        - CONN_DOES_NOT_EXIST
        - CONN_INVALID_REQUEST
        - CONN_METHOD_NOT_ALLOWED
        - CONN_NO_GDPR_CONSENT
        - CONN_AUTH_METHOD_DISABLED
        - MODEL_TRAINED
        - MODEL_TRAINING
        - MODEL_UNTRAINED
        - MODEL_QUEUED_FOR_TRAINING
        - MODEL_UPLOADING
        - MODEL_UPLOADING_FAILED
        - MODEL_TRAINING_FAILED
        - MODEL_TRAINING_NO_DATA
        - MODEL_TRAINING_NO_POSITIVES
        - MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS
        - MODEL_TRAINING_TIMED_OUT
        - MODEL_TRAINING_WAITING_ERROR
        - MODEL_TRAINING_UNKNOWN_ERROR
        - MODEL_TRAINING_MSG_REDELIVER
        - MODEL_TRAINING_INSUFFICIENT_DATA
        - MODEL_TRAINING_INVALID_PARAMS
        - MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED
        - MODEL_MODIFY_SUCCESS
        - MODEL_MODIFY_PENDING
        - MODEL_MODIFY_FAILED
        - MODEL_DOES_NOT_EXIST
        - MODEL_PERMISSION_DENIED
        - MODEL_INVALID_ARGUMENT
        - MODEL_INVALID_REQUEST
        - MODEL_EVALUATED
        - MODEL_EVALUATING
        - MODEL_NOT_EVALUATED
        - MODEL_QUEUED_FOR_EVALUATION
        - MODEL_EVALUATION_TIMED_OUT
        - MODEL_EVALUATION_WAITING_ERROR
        - MODEL_EVALUATION_UNKNOWN_ERROR
        - MODEL_PREDICTION_FAILED
        - MODEL_EVALUATION_MSG_REDELIVER
        - MODEL_EVALUATION_NEED_LABELS
        - MODEL_EVALUATION_NEED_INPUTS
        - MODEL_EVALUATION_FAILED
        - MODEL_DEPLOYMENT_FAILED
        - MODEL_DEPLOYING
        - MODEL_QUEUED_FOR_DEPLOYMENT
        - MODEL_NOT_DEPLOYED
        - MODEL_REFERENCE_INVALID_ARGUMENT
        - MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT
        - MODEL_EXPORTED
        - MODEL_EXPORTING
        - MODEL_EXPORTING_FAILED
        - MODEL_EXPORT_PENDING
        - WORKFLOW_NO_MATCHING_INPUT
        - WORKFLOW_REQUIRE_TRAINED_MODEL
        - WORKFLOW_DUPLICATE
        - WORKFLOW_UNSUPPORTED_FORMAT
        - WORKFLOW_DOES_NOT_EXIST
        - WORKFLOW_PERMISSION_DENIED
        - WORKFLOW_INVALID_ARGUMENT
        - WORKFLOW_INVALID_RECIPE
        - WORKFLOW_INVALID_TEMPLATE
        - WORKFLOW_INVALID_GRAPH
        - WORKFLOW_INTERNAL_FAILURE
        - WORKFLOW_INVALID_REQUEST
        - WORKFLOW_MODIFY_SUCCESS
        - WORKFLOW_MODIFY_PENDING
        - WORKFLOW_MODIFY_FAILED
        - WORKFLOW_REINDEX_FAILED
        - CONCEPT_MODIFY_SUCCESS
        - CONCEPT_MODIFY_PENDING
        - CONCEPT_MODIFY_FAILED
        - ANNOTATION_SUCCESS
        - ANNOTATION_PENDING
        - ANNOTATION_FAILED
        - ANNOTATION_UNKNOWN_STATUS
        - ANNOTATION_INVALID_ARGUMENT
        - ANNOTATION_PERMISSION_DENIED
        - ANNOTATION_AWAITING_REVIEW
        - ANNOTATION_AWAITING_CONSENSUS_REVIEW
        - ANNOTATION_REVIEW_DENIED
        - ANNOTATION_MODIFY_SUCCESS
        - ANNOTATION_MODIFY_PENDING
        - ANNOTATION_MODIFY_FAILED
        - METADATA_INVALID_PATCH_ARGUMENTS
        - METADATA_PARSING_ISSUE
        - METADATA_MANIPULATION_ISSUE
        - TRAINER_JOB_STATE_NONE
        - TRAINER_JOB_STATE_QUEUED
        - TRAINER_JOB_STATE_RUNNING
        - TRAINER_JOB_STATE_COMPLETE
        - TRAINER_JOB_STATE_ERROR
        - DATA_DUMP_SUCCESS
        - DATA_DUMP_PENDING
        - DATA_DUMP_FAILED
        - DATA_DUMP_IN_PROGRESS
        - DATA_DUMP_NO_DATA
        - DATA_DUMP_UNEXPECTED_ERROR
        - DATA_DUMP_EXPORT_SUCCESS
        - DATA_DUMP_EXPORT_PENDING
        - DATA_DUMP_EXPORT_FAILED
        - DATA_DUMP_EXPORT_IN_PROGRESS
        - DATA_DUMP_EXPORT_UNEXPECTED_ERROR
        - APP_DUPLICATION_SUCCESS
        - APP_DUPLICATION_FAILED
        - APP_DUPLICATION_PENDING
        - APP_DUPLICATION_IN_PROGRESS
        - APP_DUPLICATION_INVALID_REQUEST
        - MODULE_DOES_NOT_EXIST
        - MODULE_PERMISSION_DENIED
        - MODULE_INVALID_ARGUMENT
        - MODULE_INVALID_REQUEST
        - BULK_OPERATION_SUCCESS
        - BULK_OPERATION_FAILED
        - BULK_OPERATION_PENDING
        - BULK_OPERATION_IN_PROGRESS
        - BULK_OPERATION_INVALID_REQUEST
        - BULK_OPERATION_CANCELLED
        - BULK_OPERATION_UNEXPECTED_ERROR
        - RUNNER_DOES_NOT_EXIST
        - RUNNER_PERMISSION_DENIED
        - RUNNER_INVALID_ARGUMENT
        - RUNNER_INVALID_REQUEST
        - RUNNER_NEEDS_RETRY
        - RUNNER_STREAM_START
        - RUNNER_STREAM_END
        - RUNNER_ITEM_CANCELLED
        - RUNNER_PROCESSING_FAILED
        - INPUT_DOWNLOAD_SUCCESS
        - INPUT_DOWNLOAD_PENDING
        - INPUT_DOWNLOAD_FAILED
        - INPUT_DOWNLOAD_IN_PROGRESS
        - INPUT_STATUS_UPDATE_FAILED
        - INPUT_DELETE_FAILED
        - INPUT_DUPLICATE
        - INPUT_UNSUPPORTED_FORMAT
        - INPUT_DOES_NOT_EXIST
        - INPUT_PERMISSION_DENIED
        - INPUT_INVALID_ARGUMENT
        - INPUT_OVER_LIMIT
        - INPUT_INVALID_URL
        - INPUT_MODIFY_SUCCESS
        - INPUT_MODIFY_PENDING
        - INPUT_MODIFY_FAILED
        - INPUT_STORAGE_HOST_FAILED
        - ALL_INPUT_INVALID_BYTES
        - INPUT_CLUSTER_SUCCESS
        - INPUT_CLUSTER_PENDING
        - INPUT_CLUSTER_FAILED
        - INPUT_CLUSTER_IN_PROGRESS
        - INPUT_REINDEX_SUCCESS
        - INPUT_REINDEX_PENDING
        - INPUT_REINDEX_FAILED
        - INPUT_REINDEX_IN_PROGRESS
        - INPUT_VIDEO_DOWNLOAD_SUCCESS
        - INPUT_VIDEO_DOWNLOAD_PENDING
        - INPUT_VIDEO_DOWNLOAD_FAILED
        - INPUT_VIDEO_DUPLICATE
        - INPUT_VIDEO_UNSUPPORTED_FORMAT
        - INPUT_VIDEO_DOES_NOT_EXIST
        - INPUT_VIDEO_PERMISSION_DENIED
        - INPUT_VIDEO_INVALID_ARGUMENT
        - INPUT_VIDEO_OVER_LIMIT
        - INPUT_VIDEO_INVALID_URL
        - INPUT_VIDEO_MODIFY_SUCCESS
        - INPUT_VIDEO_MODIFY_PENDING
        - INPUT_VIDEO_MODIFY_FAILED
        - INPUT_VIDEO_STORAGE_HOST_FAILED
        - ALL_INPUT_VIDEOS_INVALID_BYTES
        - INPUT_VIDEO_PROCESSING_SUCCESS
        - INPUT_VIDEO_PROCESSING_PENDING
        - INPUT_VIDEO_PROCESSING_FAILED
        - INPUT_VIDEO_STORAGE_INCONSISTENCY
        - INPUT_VIDEO_STORAGE_FAILURE
        - INPUT_VIDEO_URL_GENERATION_FAILURE
        - INPUT_CONNECTION_FAILED
        - REQUEST_DISABLED_FOR_MAINTENANCE
        - INPUT_WRITES_DISABLED_FOR_MAINTENANCE
        - INPUT_INVALID_REQUEST
        - PREDICT_INVALID_REQUEST
        - SEARCH_INVALID_REQUEST
        - CONCEPTS_INVALID_REQUEST
        - STATS_INVALID_REQUEST
        - DATABASE_DUPLICATE_KEY
        - DATABASE_STATEMENT_TIMEOUT
        - DATABASE_INVALID_ROWS_AFFECTED
        - DATABASE_DEADLOCK_DETECTED
        - DATABASE_FAIL_TASK
        - DATABASE_FAIL_TO_GET_CONNECTIONS
        - DATABASE_TOO_MANY_CLIENTS
        - DATABASE_CONSTRAINT_VIOLATED
        - DATABASE_CANCELED
        - ASYNC_WORKER_MULTI_ERRORS
        - RPC_REQUEST_QUEUE_FULL
        - RPC_SERVER_UNAVAILABLE
        - RPC_REQUEST_TIMEOUT
        - RPC_MAX_MESSAGE_SIZE_EXCEEDED
        - RPC_CANCELED
        - RPC_UNKNOWN_METHOD
        - REQUEST_CANCELED_BY_USER
        - CLUSTER_INTERNAL_FAILURE
        - EXTERNAL_CONNECTION_ERROR
        - QUERY_INVALID_SYNTAX
        - QUEUE_CONN_ERROR
        - QUEUE_CLOSE_REQUEST_TIMEOUT
        - QUEUE_CONN_CLOSED
        - QUEUE_PUBLISH_ACK_TIMEOUT
        - QUEUE_PUBLISH_ERROR
        - QUEUE_SUBSCRIPTION_TIMEOUT
        - QUEUE_SUBSCRIPTION_ERROR
        - QUEUE_MARSHALLING_FAILED
        - QUEUE_UNMARSHALLING_FAILED
        - QUEUE_MAX_MSG_REDELIVERY_EXCEEDED
        - QUEUE_ACK_FAILURE
        - SQS_OVERLIMIT
        - SQS_INVALID_RECEIPT_HANDLE
        - SQS_UNKNOWN
        - SEARCH_INTERNAL_FAILURE
        - SEARCH_PROJECTION_FAILURE
        - SEARCH_PREDICTION_FAILURE
        - SEARCH_BY_NOT_FULLY_INDEXED_INPUT
        - SAVED_SEARCH_MODIFY_FAILED
        - SEARCH_COUNTS_UNAVAILABLE
        - EVALUATION_QUEUED
        - EVALUATION_IN_PROGRESS
        - EVALUATION_SUCCESS
        - EVALUATION_FAILED_TO_RETRIEVE_DATA
        - EVALUATION_INVALID_ARGUMENT
        - EVALUATION_FAILED
        - EVALUATION_PENDING
        - EVALUATION_TIMED_OUT
        - EVALUATION_UNEXPECTED_ERROR
        - EVALUATION_MIXED
        - STRIPE_EVENT_ERROR
        - CACHE_MISS
        - REDIS_SCRIPT_EXITED_WITH_FAILURE
        - REDIS_STREAM_ERR
        - REDIS_NO_CONSUMERS
        - REDIS_STREAM_BACKOFF
        - SIGNUP_EVENT_ERROR
        - SIGNUP_FLAGGED
        - FILETYPE_UNSUPPORTED
        - APP_COUNT_INVALID_MESSAGE
        - APP_COUNT_UPDATE_INCREMENT_FAILED
        - APP_COUNT_REBUILD_FAILED
        - APP_COUNT_INTERNAL_FAILURE
        - MP_DOWNLOAD_ERROR
        - MP_RESOLVE_DNS_ERROR
        - MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR
        - MP_IMAGE_DECODE_ERROR
        - MP_INVALID_ARGUMENT
        - MP_IMAGE_PROCESSING_ERROR
        - DATATIER_CONN_ERROR
        - USER_CONSENT_FACE
        - WORKER_MISSING
        - WORKER_ACTIVE
        - WORKER_INACTIVE
        - COLLECTOR_MISSING
        - COLLECTOR_ACTIVE
        - COLLECTOR_INACTIVE
        - COLLECTOR_POST_INPUT_FAILED
        - SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST
        - TASK_IN_PROGRESS
        - TASK_DONE
        - TASK_WONT_DO
        - TASK_FAILED
        - TASK_IDLE
        - TASK_CONFLICT
        - TASK_NOT_IMPLEMENTED
        - TASK_MISSING
        - TASK_PERMISSION_DENIED
        - TASK_ASSIGNMENT_SUCCESS
        - TASK_ASSIGNMENT_PENDING
        - TASK_ASSIGNMENT_AWAITING_REVIEW
        - TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW
        - LABEL_ORDER_PENDING
        - LABEL_ORDER_IN_PROGRESS
        - LABEL_ORDER_SUCCESS
        - LABEL_ORDER_CANCELED
        - LICENSE_ACTIVE
        - LICENSE_DOES_NOT_EXIST
        - LICENSE_NEED_UPDATE
        - LICENSE_EXPIRED
        - LICENSE_REVOKED
        - LICENSE_DELETED
        - LICENSE_VOLUME_EXCEEDED
        - PASSWORD_VALIDATION_SUCCESS
        - PASSWORD_VALIDATION_FAILED
        - PASSWORDPOLICY_INVALID_ARGUMENT
        - FEATUREFLAG_CONFIG_NOT_FOUND
        - FEATUREFLAG_INVALID_ARGUMENT
        - FEATUREFLAG_BLOCKED
        - MAINTENANCE_SUCCESS
        - MAINTENANCE_FAILED
        - DATASET_VERSION_PENDING
        - DATASET_VERSION_IN_PROGRESS
        - DATASET_VERSION_READY
        - DATASET_VERSION_FAILURE
        - DATASET_VERSION_UNEXPECTED_ERROR
        - DATASET_VERSION_CONFLICT
        - DATASET_INPUT_SUCCESS
        - DATASET_INPUT_DUPLICATE
        - DATASET_VERSION_EXPORT_SUCCESS
        - DATASET_VERSION_EXPORT_PENDING
        - DATASET_VERSION_EXPORT_FAILED
        - DATASET_VERSION_EXPORT_IN_PROGRESS
        - DATASET_VERSION_EXPORT_UNEXPECTED_ERROR
        - JOB_QUEUED
        - JOB_RUNNING
        - JOB_COMPLETED
        - JOB_FAILED
        - JOB_CANCELLED
        - JOB_UNEXPECTED_ERROR
        - JOB_CONFLICT
        - AUTH_MISSING_IDP_ASSOC
        - LIST_OBJECTS_FAILED
        - ARCHIVE_EXTRACT_FAILED
        - UPLOAD_IN_PROGRESS
        - UPLOAD_DONE
        - UPLOAD_FAILED
        - UPLOAD_UNEXPECTED_ERROR
        - UPLOAD_EXPIRED
        - UPLOAD_CANCELED
        - UPLOAD_CONFLICT
        - BILLING_INVALID_INFO
        - INTERNAL_SERVER_ISSUE
        - INTERNAL_FETCHING_ISSUE
        - INTERNAL_DATABASE_ISSUE
        - INTERNAL_CONTEXT_CANCELED
        - INTERNAL_UNEXPECTED_TIMEOUT
        - INTERNAL_UNEXPECTED_V1
        - INTERNAL_UNEXPECTED_PANIC
        - INTERNAL_UNEXPECTED_SPIRE
        - INTERNAL_REDIS_UNAVAILABLE
        - INTERNAL_RESOURCE_EXHAUSTED
        - INTERNAL_REDIS_UNCATEGORIZED
        - INTERNAL_AWS_UNCATEGORIZED
        - INTERNAL_AZURE_UNCATEGORIZED
        - CONN_UNCATEGORIZED
        - MODEL_UNCATEGORIZED
        - INPUT_UNCATEGORIZED
        - ANNOTATION_UNCATEGORIZED
        - BILLING_UNCATEGORIZED
        - INTERNAL_UNCATEGORIZED
        - BAD_REQUEST
        - SERVER_ERROR
      default: ZERO
    V2PatchConceptLanguages2Request:
      description: PATCH multiple concept languages for the given concept.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        conceptLanguages:
          type: array
          items:
            $ref: '#/components/schemas/apiConceptLanguage'
        action:
          description: The action to perform with the objects in the PATCH.
          type: string
    V2PostConceptLanguages2Request:
      description: POST multiple concept languages for the given concept.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        conceptLanguages:
          type: array
          items:
            $ref: '#/components/schemas/apiConceptLanguage'
    V2DeleteDatasetInputs2Request:
      description: Request to delete several dataset inputs by list of ids.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        inputIds:
          description: Specify which inputs to delete from dataset.
          type: array
          items:
            type: string
    V2PostDatasetInputs2Request:
      description: Request to add one or more datasets.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        datasetInputs:
          description: >-
            List of inputs that are requested to be added to this dataset.

            Identify each input by id field. All other inputs fields are
            ignored.
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetInput'
        search:
          $ref: '#/components/schemas/apiSearch'
    V2DeleteDatasetVersions2Request:
      description: Request to delete several dataset versions by list of ids.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        datasetVersionIds:
          type: array
          items:
            type: string
    V2PatchDatasetVersions2Request:
      description: Request to patch several dataset versions.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        datasetVersions:
          description: List of dataset versions that are requested to be updated.
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetVersion'
        action:
          title: |-
            The action to perform on the patched objects
            For now, only 'overwrite' action is supported
          type: string
    V2PostDatasetVersions2Request:
      description: Request to add one or more dataset versions.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        datasetVersions:
          description: List of dataset versions that are requested to be added.
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetVersion'
    V2PutDatasetVersionExports2Request:
      description: Request to create exports of a dataset version.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        exports:
          description: |-
            exports is the list of requested dataset version exports.
            Only setting the 'format' field of the export is supported.
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetVersionExport'
    V2CancelInputsAddJob2Request:
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
    V2PatchModelCheckConsents2Request:
      title: PatchModelCheckConsentsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        checkConsents:
          title: the consents
          type: array
          items:
            type: string
        action:
          title: overwrite supported
          type: string
    V2PatchModelLanguages2Request:
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        languages:
          type: array
          items:
            type: string
        action:
          title: Only overwrite supported
          type: string
    V2PostModelOutputs4Request:
      description: |-
        //////////////////////////////////////////////////
        Model prediction related stuff needs inputs and produces outputs.
        //////////////////////////////////////////////////
        Model prediction.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        versionId:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        model:
          $ref: '#/components/schemas/apiModel'
        runnerSelector:
          $ref: '#/components/schemas/apiRunnerSelector'
    V2PostModelVersionsPublish2Request:
      title: PostModelVersionsPublishRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        publications:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersionPublishRequest'
    V2PatchModelToolkits2Request:
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        toolkits:
          type: array
          items:
            type: string
        action:
          title: overwrite supported
          type: string
    V2PostModelVersionsUnPublish2Request:
      title: PostModelVersionsUnPublishRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        publications:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersionUnpublishRequest'
    V2PatchModelUseCases2Request:
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        usecases:
          type: array
          items:
            type: string
        action:
          title: overwrite supported
          type: string
    V2PostModelVersions2Request:
      description: Create (train) a new model version.
      type: object
      properties:
        description:
          title: Description about this training run
          type: string
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        modelVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersion'
        evalInfo:
          $ref: '#/components/schemas/apiEvalInfo'
    V2PostModelVersionsTrainingTimeEstimate2Request:
      title: Get the estimated training time for a model version
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        modelVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersion'
        estimatedInputCount:
          type: string
          format: uint64
    V2PostModelVersionEvaluations2Request:
      title: Evaluate this model vesion
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        evalMetrics:
          title: EvalInfo and ID will be used when creating the evaluation
          type: array
          items:
            $ref: '#/components/schemas/apiEvalMetrics'
    V2PostModelVersionMetrics2Request:
      description: Evaluate this model version.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        testSearch:
          $ref: '#/components/schemas/apiSearch'
        evalInfo:
          $ref: '#/components/schemas/apiEvalInfo'
    V2PostModelOutputs2Request:
      description: |-
        //////////////////////////////////////////////////
        Model prediction related stuff needs inputs and produces outputs.
        //////////////////////////////////////////////////
        Model prediction.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        model:
          $ref: '#/components/schemas/apiModel'
        runnerSelector:
          $ref: '#/components/schemas/apiRunnerSelector'
    V2PostSearchesById2Request:
      title: >-
        PostSearchesByIDRequest performs returns results of a saved search given
        its ID
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    V2PostModelOutputs5Request:
      description: |-
        //////////////////////////////////////////////////
        Model prediction related stuff needs inputs and produces outputs.
        //////////////////////////////////////////////////
        Model prediction.
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        modelId:
          type: string
        versionId:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        model:
          $ref: '#/components/schemas/apiModel'
        runnerSelector:
          title: >-
            Allow filtering of prediction requests down to specific Nodepools,
            Deploymetns or Runners
          type: object
          properties:
            nodepool:
              $ref: '#/components/schemas/apiNodepool'
            runner:
              $ref: '#/components/schemas/apiRunner'
            deployment:
              title: Optionally a partcular deployment within the nodepool.
              description: |-
                In future as we support matching runners based on just labels:
                 RunnerLabels runner_labels = 3; // FUTURE
              type: object
              properties:
                autoscaleConfig:
                  $ref: '#/components/schemas/apiAutoscaleConfig'
                nodepools:
                  title: >-
                    You can configure different autoscaling per nodepool(s).

                    These nodepools have to be also owned by the same
                    user_id/org as this deployment.

                    If there is more than one nodepool we use the model's
                    ComputeInfo to match

                    with what the nodepool provides to decide which one can
                    handle it combined with the

                    NodepoolRank below. Note: even within a single nodepool if
                    it is heterogeneous then

                    we need a way to rank scheduling choices when we don't know
                    how to decide (like a model

                    supports
                  type: array
                  items:
                    $ref: '#/components/schemas/apiNodepool'
                model:
                  $ref: '#/components/schemas/apiModel'
                workflow:
                  $ref: '#/components/schemas/apiWorkflow'
                schedulingChoice:
                  $ref: '#/components/schemas/DeploymentSchedulingChoice'
    V2PatchAppsRequest:
      title: PatchAppsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        apps:
          type: array
          items:
            $ref: '#/components/schemas/apiApp'
        action:
          description: >-
            The action to perform on the patched App objects except App.Metadata

            Supported values: 'overwrite' and 'remove'.


            Note that 'remove' can only be used to remove the app image by
            setting

            'image.url' in the request to the current value returned for that
            app.
          type: string
        metadataAction:
          $ref: '#/components/schemas/apiPatchAction'
        reindex:
          description: >-
            If set, the app will be automatically reindexed upon change of its
            base workflow.
          type: boolean
    V2PostAppsRequest:
      title: PostAppsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        apps:
          type: array
          items:
            $ref: '#/components/schemas/apiApp'
    V2PatchAppsIdsRequest:
      title: PatchAppsIdsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        ids:
          title: Array containing 1 entry
          type: array
          items:
            $ref: '#/components/schemas/apiIdUpdateSource'
        action:
          title: |-
            The action to perform on the patched objects
            Only 'overwrite' is supported
          type: string
    V2PostAppsSearchesRequest:
      description: Search over the available applications.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        appQuery:
          $ref: '#/components/schemas/apiAppQuery'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    V2PatchAppRequest:
      title: PatchAppRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        app:
          $ref: '#/components/schemas/apiApp'
        action:
          description: >-
            The action to perform on the patched App object except App.Metadata

            Supported values: 'overwrite' and 'remove'.


            Note that 'remove' can only be used to remove the app image by
            setting

            'image.url' in the request to the current value returned for the
            app.
          type: string
        metadataAction:
          $ref: '#/components/schemas/apiPatchAction'
        reindex:
          description: >-
            If set, the app will be automatically reindexed upon change of its
            base workflow.
          type: boolean
    V2DeleteAnnotationFiltersRequest:
      description: Request to delete several annotation filters by list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        annotationFilterIds:
          description: Specify which filters to delete.
          type: array
          items:
            type: string
    V2PatchAnnotationFiltersRequest:
      description: Request to patch several annotation filters.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        annotationFilters:
          description: List of annotation filters that are requested to be updated.
          type: array
          items:
            $ref: '#/components/schemas/apiAnnotationFilter'
        action:
          title: |-
            The action to perform on the patched objects
            For now, only 'overwrite' action is supported
          type: string
    V2PostAnnotationFiltersRequest:
      description: Request to add one or more annotation filters.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        annotationFilters:
          description: List of annotation filters that are requested to be added.
          type: array
          items:
            $ref: '#/components/schemas/apiAnnotationFilter'
    V2DeleteAnnotations3Request:
      description: Request to delete several things by the list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          title: Delete annotations with IDs
          type: array
          items:
            type: string
        inputIds:
          title: >-
            Delete annotations for these Input IDs

            Note that 'ids' are optional but if the are provided the number and
            order in

            'ids' and 'input_ids' should match

            If you do not specifiy 'ids' all the annotations for 'input_ids' are
            deleted

            However you need to specify at least one value for 'input_ids'

            i.e. this API does not support deleting all annotations
          type: array
          items:
            type: string
    V2PatchAnnotationsRequest:
      title: PatchAnnotationsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/clarifaiapiAnnotation'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
        deleteIfEmptyData:
          description: >-
            If the request is a "remove" action and the annotation is left with
            empty data,

            then setting delete_if_empty_data to true will delete the
            annotation,

            if possible (for example, will not delete an input-level
            annotation).
          type: boolean
    V2PostAnnotationsRequest:
      title: PostAnnotationsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/clarifaiapiAnnotation'
    V2PatchAnnotationsSearchesRequest:
      type: object
      properties:
        userAppId:
          title: The user_id and app_id to query from.
          description: The user_id and app_id to query from.
          type: object
        searches:
          title: The searches to be patched
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        action:
          title: |-
            The action to perform on the patched Search objects
            For now only action 'overwrite' is supported
          type: string
    V2PostAnnotationsSearchesRequest:
      title: |-
        Execute a new annotation search and optionally save it
        annotation search over annotations using rank and filter proto
      type: object
      properties:
        userAppId:
          title: The user_id and app_id to query from.
          description: The user_id and app_id to query from.
          type: object
        searches:
          title: The searched to be executed or saved
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    V2PostAnnotationSearchMetricsRequest:
      title: PostAnnotationSearchMetricsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        id:
          title: A unique customer facing id to identify this eval request
          type: string
        groundTruth:
          $ref: '#/components/schemas/apiSearch'
        searchToEval:
          $ref: '#/components/schemas/apiSearch'
        data:
          $ref: '#/components/schemas/apiData'
        evaluationType:
          $ref: '#/components/schemas/apiEvaluationType'
    V2DeleteBulkOperationsRequest:
      description: |-
        Request to delete the terminated bulk operations by ID
        Only operations in terminated state can be deleted.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          title: List of bulk operation ids to be deleted
          type: array
          items:
            type: string
    V2CancelBulkOperationsRequest:
      title: Cancel a list of bulk operation ids
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          title: List of bulk operation ids to be cancelled
          type: array
          items:
            type: string
    V2PostBulkOperationsRequest:
      description: >-
        Request to perform bulk operations on a list of inputs based on input
        source.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        bulkOperations:
          description: >-
            List of bulk operation(s) to be performed e.g bulk update metadata
            or tags or labels etc.
          type: array
          items:
            $ref: '#/components/schemas/apiBulkOperation'
    V2DeleteCollaboratorsRequest:
      title: DeleteCollaboratorsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        collaboratorIds:
          type: array
          items:
            type: string
        userEmails:
          type: array
          items:
            type: string
    V2PatchCollaboratorsRequest:
      title: PatchCollaboratorsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/apiCollaborator'
        action:
          title: |-
            The action to perform on the patched objects
            For now only action 'overwrite' is supported
          type: string
    V2PostCollaboratorsRequest:
      title: PostCollaboratorsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/apiCollaborator'
    V2DeleteCollectorsRequest:
      description: Request to delete several things by the list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          type: array
          items:
            type: string
        deleteAll:
          type: boolean
    V2PatchCollectorsRequest:
      title: PatchCollectorsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        collectors:
          type: array
          items:
            $ref: '#/components/schemas/apiCollector'
        action:
          title: |-
            The action to perform on the patched objects
            Only 'overwrite' is supported
          type: string
    V2PostCollectorsRequest:
      description: Request to create Collectors.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        collectors:
          type: array
          items:
            $ref: '#/components/schemas/apiCollector'
    V2PatchConceptsRequest:
      title: PatchConceptsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        concepts:
          description: The concepts to patch.
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
        action:
          title: |-
            The action to perform on the patched objects
            For now ony action 'overwrite' is supported
          type: string
    V2PostConceptsRequest:
      title: PostConceptsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        concepts:
          description: The concepts to add.
          type: array
          items:
            $ref: '#/components/schemas/apiConcept'
    V2PostKnowledgeGraphsRequest:
      title: POST new knowledge graphs
      type: object
      properties:
        userAppId:
          title: The user_id and app_id information.
          description: The user_id and app_id information.
          type: object
        knowledgeGraphs:
          type: array
          items:
            $ref: '#/components/schemas/apiKnowledgeGraph'
    V2PostConceptMappingJobsRequest:
      title: Start concept mapping jobs
      type: object
      properties:
        userAppId:
          title: The user_id and app_id information.
          description: The user_id and app_id information.
          type: object
        conceptMappingJobs:
          title: The concept mapping jobs that are being started
          type: array
          items:
            $ref: '#/components/schemas/apiConceptMappingJob'
    V2PostConceptsSearchesRequest:
      title: PostConceptsSearchesRequest
      type: object
      properties:
        userAppId:
          title: Ids present in the url of the request.
          description: Ids present in the url of the request.
          type: object
        conceptQuery:
          $ref: '#/components/schemas/apiConceptQuery'
        extraInfo:
          $ref: '#/components/schemas/apiConceptExtraInfoRequest'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    V2PatchConceptLanguagesRequest:
      description: PATCH multiple concept languages for the given concept.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        conceptLanguages:
          type: array
          items:
            $ref: '#/components/schemas/apiConceptLanguage'
        action:
          description: The action to perform with the objects in the PATCH.
          type: string
    V2PostConceptLanguagesRequest:
      description: POST multiple concept languages for the given concept.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        conceptLanguages:
          type: array
          items:
            $ref: '#/components/schemas/apiConceptLanguage'
    V2DeleteConceptRelationsRequest:
      title: DELETE concept relations
      type: object
      properties:
        userAppId:
          title: The user_id and app_id information.
          description: The user_id and app_id information.
          type: object
        ids:
          description: The concept relationship ids to delete.
          type: array
          items:
            type: string
    V2PostConceptRelationsRequest:
      title: POST new concept relations
      type: object
      properties:
        userAppId:
          title: The user_id and app_id information.
          description: The user_id and app_id information.
          type: object
        conceptRelations:
          description: The relationships you're going to add.
          type: array
          items:
            $ref: '#/components/schemas/apiConceptRelation'
    V2DeleteDatasetsRequest:
      description: Request to delete several datasets by list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        datasetIds:
          type: array
          items:
            type: string
    V2PatchDatasetsRequest:
      description: Request to patch several datasets.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        datasets:
          description: List of datasets that are requested to be updated.
          type: array
          items:
            $ref: '#/components/schemas/apiDataset'
        action:
          description: >-
            The action to perform on the patched objects

            Supported values: 'overwrite', 'merge', and 'remove'.


            Note that 'remove' can only be used to remove the dataset image by
            setting

            'image.url' in the request to the current value returned for that
            dataset.
          type: string
    V2PostDatasetsRequest:
      description: Request to add one or more datasets.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        datasets:
          description: List of datasets that are requested to be added.
          type: array
          items:
            $ref: '#/components/schemas/apiDataset'
    V2DeleteDatasetInputsRequest:
      description: Request to delete several dataset inputs by list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        inputIds:
          description: Specify which inputs to delete from dataset.
          type: array
          items:
            type: string
    V2PostDatasetInputsRequest:
      description: Request to add one or more datasets.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        datasetInputs:
          description: >-
            List of inputs that are requested to be added to this dataset.

            Identify each input by id field. All other inputs fields are
            ignored.
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetInput'
        search:
          $ref: '#/components/schemas/apiSearch'
    V2DeleteDatasetVersionsRequest:
      description: Request to delete several dataset versions by list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        datasetVersionIds:
          type: array
          items:
            type: string
    V2PatchDatasetVersionsRequest:
      description: Request to patch several dataset versions.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        datasetVersions:
          description: List of dataset versions that are requested to be updated.
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetVersion'
        action:
          title: |-
            The action to perform on the patched objects
            For now, only 'overwrite' action is supported
          type: string
    V2PostDatasetVersionsRequest:
      description: Request to add one or more dataset versions.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        datasetVersions:
          description: List of dataset versions that are requested to be added.
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetVersion'
    V2PutDatasetVersionExportsRequest:
      description: Request to create exports of a dataset version.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        exports:
          description: |-
            exports is the list of requested dataset version exports.
            Only setting the 'format' field of the export is supported.
          type: array
          items:
            $ref: '#/components/schemas/apiDatasetVersionExport'
    V2PostAppDuplicationsRequest:
      description: Request to start app duplication jobs.
      type: object
      properties:
        userAppId:
          title: The user and application ID of the source application to duplicate.
          description: The user and application ID of the source application to duplicate.
          type: object
        appDuplications:
          type: array
          items:
            $ref: '#/components/schemas/apiAppDuplication'
    V2PostEvaluationsRequest:
      title: Evaluate this model vesion
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        evalMetrics:
          description: >-
            eval_info, id, model, and ground_truth_dataset will be used when
            creating the evaluation

            If no dataset is provided, all app data that is annotated with
            concepts from the model will be used.
          type: array
          items:
            $ref: '#/components/schemas/apiEvalMetrics'
    V2DeleteInputsRequest:
      description: Request to delete several things by the list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          type: array
          items:
            type: string
    V2PatchInputsRequest:
      title: PatchInputsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        inputs:
          title: |-
            List of inputs to patch.
            Inputs are identified by id field.
            For each input, the following fields are patchable:
            * data
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
    V2PostInputsRequest:
      title: PostInputsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        inputs:
          title: |-
            List of inputs to post.
            For each input, the following fields are used:
            * id
            * data
            * dataset_ids
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        inputsAddJobId:
          description: >-
            Collect statistics about created inputs in job with given ID.

            * If job ID is empty, then job is not created.

            * If job ID is non-empty and doesn't already exist, then a new job
            will be created with given ID.

            * If job ID does already exist, then new inputs statistics are
            merged with previous inputs statistics.
          type: string
        inputIdConflictResolution:
          $ref: '#/components/schemas/apiInputIDConflictResolution'
    V2PostInputsDataSourcesRequest:
      description: >-
        Initiates retrieval of inputs from cloud storage from a user provided
        data source.

        Will create and return an inputs-add-job for tracking progress.

        Archives will be extracted and their contents will be processed as
        inputs.


        The cloud URL will be treated as a filter prefix. For example
        s3:/bucket/images_folder/abc will process

        files in the images_folder beginning with abc or in a subfolder
        beginning with abc.

        For example:

        bucket/images_folder/abcImage.png

        bucket/images_folder/abc-1/Data.zip


        If given URL is for a private bucket or file, then credentials should be
        provided to access the bucket.

        Credentials should include rights to list the objects in the bucket,
        except when pointed directly at a file archive,

        in which case it only requires rights to access that particular file.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        dataSources:
          type: array
          items:
            $ref: '#/components/schemas/apiInputsDataSource'
        callBackUrl:
          description: >-
            If call back url is set, we will send a Post request to this
            endpoint with job status.
          type: string
        appPat:
          title: Personal Access Token to the application to which inputs are added
          type: string
    V2CancelInputsAddJobRequest:
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
    V2CancelInputsExtractionJobsRequest:
      title: Cancel a list of extraction job ids
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          title: List of extraction job ids to be cancelled
          type: array
          items:
            type: string
    V2PostInputsSearchesRequest:
      title: Execute a new input search and optionally save it
      type: object
      properties:
        userAppId:
          title: The user_id and app_id to query from.
          description: The user_id and app_id to query from.
          type: object
        searches:
          title: The searched to be executed or saved
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        pagination:
          $ref: '#/components/schemas/apiPagination'
        onlyCount:
          description: |-
            If only_count is set, then the response will not contain hits,
            but hit_counts instead.
          type: boolean
    V2PostInputsUploadsRequest:
      description: >-
        Start uploading a file archive containing inputs.

        Will create and return an inputs-add-job for tracking progress.


        Associated inputs-add-job contains an upload id which should be
        completed through `PutUploadContentParts` endpoint.

        Completing the upload will automatically begin unpacking the archive and
        uploading the contents as inputs.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        inputsUploads:
          type: array
          items:
            $ref: '#/components/schemas/apiInputsUpload'
    V2DeleteInstalledModuleVersionsRequest:
      description: Request to delete several installed module versions by the list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          type: array
          items:
            type: string
    V2PostInstalledModuleVersionsRequest:
      title: >-
        PostInstalledModuleVersionsRequest to install a module version into the
        app in the URL
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        installedModuleVersions:
          description: >-
            This allows you to create one or more module by posting it to the
            API.
          type: array
          items:
            $ref: '#/components/schemas/apiInstalledModuleVersion'
    V2PostInstalledModuleVersionsKeyRequest:
      description: >-
        PostInstalledModuleVersionsKeyRequest to associate a key of the caller's
        to the installed module

        version.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
    V2DeleteLabelOrdersRequest:
      description: Request to delete a list of label orders.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          type: array
          items:
            type: string
    V2PatchLabelOrdersRequest:
      description: Request to patch a list of label orders.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        labelOrders:
          type: array
          items:
            $ref: '#/components/schemas/apiLabelOrder'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
    V2PostLabelOrdersRequest:
      description: Request to create label orders.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        labelOrders:
          type: array
          items:
            $ref: '#/components/schemas/apiLabelOrder'
    V2PatchModelsRequest:
      title: PatchModelsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        models:
          type: array
          items:
            $ref: '#/components/schemas/apiModel'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          description: >-
            Note that 'remove' can be used to remove the model image by setting

            'image.url' in the request to the current value returned for that
            model.

            This cannot be used in a request that is patching other fields as
            well.
          type: string
    V2PostModelsRequest:
      title: PostModelsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        model:
          $ref: '#/components/schemas/apiModel'
        models:
          description: >-
            This allows you to create one or more model by posting it to the
            API.
          type: array
          items:
            $ref: '#/components/schemas/apiModel'
    V2PatchModelIdsRequest:
      title: PatchModelIdsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          title: Array containing 1 entry
          type: array
          items:
            $ref: '#/components/schemas/apiIdUpdateSource'
        action:
          title: |-
            The action to perform on the patched objects
            Only 'overwrite' is supported
          type: string
    V2PostModelsSearchesRequest:
      description: Search over the available models.
      type: object
      properties:
        userAppId:
          title: Ids present in the url of the request.
          description: Ids present in the url of the request.
          type: object
        modelQuery:
          $ref: '#/components/schemas/apiModelQuery'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    V2PatchModelCheckConsentsRequest:
      title: PatchModelCheckConsentsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        checkConsents:
          title: the consents
          type: array
          items:
            type: string
        action:
          title: overwrite supported
          type: string
    V2PatchModelLanguagesRequest:
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        languages:
          type: array
          items:
            type: string
        action:
          title: Only overwrite supported
          type: string
    V2PostModelOutputs3Request:
      description: |-
        //////////////////////////////////////////////////
        Model prediction related stuff needs inputs and produces outputs.
        //////////////////////////////////////////////////
        Model prediction.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        versionId:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        model:
          $ref: '#/components/schemas/apiModel'
        runnerSelector:
          $ref: '#/components/schemas/apiRunnerSelector'
    V2PostModelVersionsPublishRequest:
      title: PostModelVersionsPublishRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        publications:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersionPublishRequest'
    V2PatchModelToolkitsRequest:
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        toolkits:
          type: array
          items:
            type: string
        action:
          title: overwrite supported
          type: string
    V2PostModelVersionsUnPublishRequest:
      title: PostModelVersionsUnPublishRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        publications:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersionUnpublishRequest'
    V2PatchModelUseCasesRequest:
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        usecases:
          type: array
          items:
            type: string
        action:
          title: overwrite supported
          type: string
    V2PatchModelVersionsRequest:
      title: PatchModelVersionsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        modelVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersion'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
    V2PostModelVersionsRequest:
      description: Create (train) a new model version.
      type: object
      properties:
        description:
          title: Description about this training run
          type: string
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        modelVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersion'
        evalInfo:
          $ref: '#/components/schemas/apiEvalInfo'
    V2PostModelVersionsTrainingTimeEstimateRequest:
      title: Get the estimated training time for a model version
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        modelVersions:
          type: array
          items:
            $ref: '#/components/schemas/apiModelVersion'
        estimatedInputCount:
          type: string
          format: uint64
    V2PostModelVersionEvaluationsRequest:
      title: Evaluate this model vesion
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        evalMetrics:
          title: EvalInfo and ID will be used when creating the evaluation
          type: array
          items:
            $ref: '#/components/schemas/apiEvalMetrics'
    V2PostModelVersionMetricsRequest:
      description: Evaluate this model version.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        testSearch:
          $ref: '#/components/schemas/apiSearch'
        evalInfo:
          $ref: '#/components/schemas/apiEvalInfo'
    V2PostModelOutputsRequest:
      description: |-
        //////////////////////////////////////////////////
        Model prediction related stuff needs inputs and produces outputs.
        //////////////////////////////////////////////////
        Model prediction.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        model:
          $ref: '#/components/schemas/apiModel'
        runnerSelector:
          $ref: '#/components/schemas/apiRunnerSelector'
    V2PatchModulesRequest:
      title: PatchModulesRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        modules:
          type: array
          items:
            $ref: '#/components/schemas/apiModule'
        action:
          description: >-
            The action to perform on the patched objects

            Supported values: 'overwrite' and 'remove'.


            Note that 'remove' can only be used to remove the module image by
            setting

            'image.url' in the request to the current value returned for that
            module.
          type: string
    V2PostModulesRequest:
      title: PostModulesRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        modules:
          description: >-
            This allows you to create one or more module by posting it to the
            API.
          type: array
          items:
            $ref: '#/components/schemas/apiModule'
    V2DeleteModuleVersionsRequest:
      description: Request to delete several module versions by the list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          type: array
          items:
            type: string
    V2PatchModuleVersionsRequest:
      title: PatchModuleVersionsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        moduleVersions:
          title: |-
            This allows you to modify the module version details.
            ########## Supported fields ##########
            - description
            - id
            - metadata.fields
            - module_nav.module_sub_navs[].query_key
            - module_nav.module_sub_navs[].query_value
            - module_nav.module_sub_navs[].title
            - module_nav.title
            - notes
            - visibility.gettable
          type: array
          items:
            $ref: '#/components/schemas/apiModuleVersion'
        action:
          title: |-
            The action to perform on the patched objects
            For now only action 'merge' is supported
          type: string
    V2PostModuleVersionsRequest:
      title: PostModuleVersionsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        moduleVersions:
          description: >-
            This allows you to create one or more module by posting it to the
            API.
          type: array
          items:
            $ref: '#/components/schemas/apiModuleVersion'
    V2PatchSearchesRequest:
      title: PatchSearchesRequest
      type: object
      properties:
        userAppId:
          title: The user_id and app_id to query from.
          description: The user_id and app_id to query from.
          type: object
        searches:
          title: The searches to be patched
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        action:
          title: |-
            The action to perform on the patched Search objects
            For now only action 'overwrite' is supported
          type: string
    V2PostSearchesRequest:
      title: PostSearchesRequest
      type: object
      properties:
        userAppId:
          title: The user_id and app_id to query from.
          description: The user_id and app_id to query from.
          type: object
        query:
          $ref: '#/components/schemas/apiQuery'
        searches:
          title: >-
            The searched to be executed or saved

            Eventually the request level fields will be deprecated in favor of
            this object
          type: array
          items:
            $ref: '#/components/schemas/apiSearch'
        pagination:
          $ref: '#/components/schemas/apiPagination'
    V2PostSearchesByIdRequest:
      title: >-
        PostSearchesByIDRequest performs returns results of a saved search given
        its ID
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        pagination:
          $ref: '#/components/schemas/apiPagination'
    V2PostStatValuesRequest:
      title: PostStatValuesRequest
      type: object
      properties:
        userAppId:
          title: The user and app information for the request.
          description: The user and app information for the request.
          type: object
        statValues:
          description: The stats to post, can post more than one at a time.
          type: array
          items:
            $ref: '#/components/schemas/apiStatValue'
    V2PostStatValuesAggregateRequest:
      title: PostStatValuesAggregateRequest
      type: object
      properties:
        userAppId:
          title: Ids present in the url of the request.
          description: Ids present in the url of the request.
          type: object
        statValueAggregateQueries:
          description: Query to retrieve aggregate values.
          type: array
          items:
            $ref: '#/components/schemas/apiStatValueAggregateQuery'
    V2PatchAnnotationsStatusRequest:
      title: PatchAnnotationsStatusRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        userIds:
          title: Filter by user IDs
          type: array
          items:
            type: string
        statusCodes:
          title: Filter by Status codes
          type: array
          items:
            $ref: '#/components/schemas/statusStatusCode'
        action:
          title: '''overwrite'' is supported'
          type: string
        statusCode:
          $ref: '#/components/schemas/statusStatusCode'
    V2DeleteTasksRequest:
      description: Request to delete a list of tasks.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          type: array
          items:
            type: string
    V2PatchTasksRequest:
      description: Request to patch a list of tasks.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/apiTask'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
    V2PostTasksRequest:
      description: Request to create Tasks.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/apiTask'
    V2PutTaskAssignmentsRequest:
      title: PutTaskAssignmentsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        inputId:
          title: >-
            Deprecated: use action and action_config instead.

            Supported for backwards compatibility: setting this field is
            equivalent with

            * action = LABEL_SUBMIT

            * label_submit_config = [{"task_assignments": {"input": {"id":
            <input-id>}}}]
          type: string
        action:
          $ref: '#/components/schemas/apiPutTaskAssignmentsRequestAction'
        labelSubmitConfig:
          $ref: '#/components/schemas/apiLabelSubmitConfig'
        reviewApproveConfig:
          $ref: '#/components/schemas/apiReviewApproveConfig'
        reviewRequestChangesConfig:
          $ref: '#/components/schemas/apiReviewRequestChangesConfig'
    V2PostTrendingMetricsViewRequest:
      title: PostTrendingMetricsViewRequest
      type: object
      properties:
        userAppId:
          title: The user_id and app_id information.
          description: The user_id and app_id information.
          type: object
    V2DeleteUploadsRequest:
      title: Stops or deletes multipart upload
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          type: array
          items:
            type: string
    V2PostUploadsRequest:
      title: Start a multipart upload
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        uploads:
          type: array
          items:
            $ref: '#/components/schemas/apiUpload'
    V2PutUploadContentPartsRequest:
      description: >-
        Upload a part of a multipart upload.

        Behaviour on completion depends on the endpoint that was used to
        initiate the upload.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        contentParts:
          type: array
          items:
            $ref: '#/components/schemas/apiUploadContentPart'
    V2PatchWorkflowsRequest:
      title: PatchWorkflowsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflow'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          description: >-
            Note that 'remove' can be used to remove the workflow image by
            setting

            'image.url' in the request to the current value returned for that
            workflow.

            This cannot be used in a request that is patching other fields as
            well.
          type: string
    V2PostWorkflowsRequest:
      title: PostWorkflowsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflow'
    V2PatchWorkflowIdsRequest:
      title: PatchWorkflowIdsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        ids:
          title: Array containing 1 entry
          type: array
          items:
            $ref: '#/components/schemas/apiIdUpdateSource'
        action:
          title: |-
            The action to perform on the patched objects
            Only 'overwrite' is supported
          type: string
    V2PostWorkflowVersionsPublishRequest:
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        publications:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowVersionPublishRequest'
    V2PostWorkflowResults2Request:
      title: PostWorkflowResultsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        versionId:
          title: |-
            Workflow version ID to retrieve
            If no ID is specified, latest workflow version is used
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        outputConfig:
          $ref: '#/components/schemas/apiOutputConfig'
        favorClarifaiWorkflows:
          title: >-
            Use this flag to look into clarifai published workflows first for a
            Workflow ID
          type: boolean
        workflowState:
          $ref: '#/components/schemas/apiWorkflowState'
    V2PostWorkflowResultsSimilarity2Request:
      title: PostWorkflowResultsSimilarityRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        versionId:
          title: |-
            Workflow version ID to retrieve
            If no ID is specified, latest workflow version is used
          type: string
        modelVersionId:
          title: The specific model version whose outputs we are comparing
          type: string
        probeInputs:
          title: Each probe is compared against every pool input
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        poolInputs:
          title: Each pool input is compared against ever probe input
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        favorClarifaiWorkflows:
          title: >-
            Use this flag to look into clarifai published workflows first for a
            Workflow ID
          type: boolean
    V2PostWorkflowVersionsUnPublishRequest:
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        publications:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowVersionUnPublishRequest'
    V2DeleteWorkflowVersionsRequest:
      title: DeleteWorkflowVersionsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        workflowVersionIds:
          title: Delete the versions identified by these ids
          type: array
          items:
            type: string
    V2PatchWorkflowVersionsRequest:
      title: PatchWorkflowVersionsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        workflowVersions:
          description: Patch these versions.
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowVersion'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
    V2PostWorkflowResultsRequest:
      title: PostWorkflowResultsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        outputConfig:
          $ref: '#/components/schemas/apiOutputConfig'
        favorClarifaiWorkflows:
          title: >-
            Use this flag to look into clarifai published workflows first for a
            Workflow ID
          type: boolean
        workflowState:
          $ref: '#/components/schemas/apiWorkflowState'
    V2PostWorkflowResultsSimilarityRequest:
      title: PostWorkflowResultsSimilarityRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
        modelVersionId:
          title: The specific model version whose outputs we are comparing
          type: string
        probeInputs:
          title: Each probe is compared against every pool input
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        poolInputs:
          title: Each pool input is compared against ever probe input
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        favorClarifaiWorkflows:
          title: >-
            Use this flag to look into clarifai published workflows first for a
            Workflow ID
          type: boolean
    V2PatchKeysRequest:
      title: PatchKeysRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        keys:
          type: array
          items:
            $ref: '#/components/schemas/apiKey'
        action:
          title: |-
            The action to perform on the patched objects
            For now only action 'overwrite' is supported
          type: string
    V2PostKeysRequest:
      title: PostKeysRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        keys:
          type: array
          items:
            $ref: '#/components/schemas/apiKey'
    V2DeleteRunnersRequest:
      description: Request to delete several things by the list of ids.
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        ids:
          type: array
          items:
            type: string
    V2PostRunnersRequest:
      title: PostRunnersRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        runners:
          description: >-
            This allows you to create one or more runner by posting it to the
            API.
          type: array
          items:
            $ref: '#/components/schemas/apiRunner'
    V2PostRunnerItemOutputsRequest:
      title: PostRunnerItemOutputsRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        runnerItemOutputs:
          description: >-
            This allows you to create one or more runner by posting it to the
            API.
          type: array
          items:
            $ref: '#/components/schemas/apiRunnerItemOutput'
        status:
          $ref: '#/components/schemas/apistatusStatus'
    V2PostValidatePasswordRequest:
      title: PostValidatePasswordRequest
      type: object
      properties:
        userAppId:
          description: Common message to identify the app in a url endpoint.
          type: object
          properties:
            appId:
              type: string
        password:
          $ref: '#/components/schemas/apiPassword'
    V2PostWorkflowVersionsPublish2Request:
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        publications:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowVersionPublishRequest'
    V2PostWorkflowResults3Request:
      title: PostWorkflowResultsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        versionId:
          title: |-
            Workflow version ID to retrieve
            If no ID is specified, latest workflow version is used
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        outputConfig:
          $ref: '#/components/schemas/apiOutputConfig'
        favorClarifaiWorkflows:
          title: >-
            Use this flag to look into clarifai published workflows first for a
            Workflow ID
          type: boolean
        workflowState:
          $ref: '#/components/schemas/apiWorkflowState'
    V2PostWorkflowResultsSimilarity3Request:
      title: PostWorkflowResultsSimilarityRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        versionId:
          title: |-
            Workflow version ID to retrieve
            If no ID is specified, latest workflow version is used
          type: string
        modelVersionId:
          title: The specific model version whose outputs we are comparing
          type: string
        probeInputs:
          title: Each probe is compared against every pool input
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        poolInputs:
          title: Each pool input is compared against ever probe input
          type: array
          items:
            $ref: '#/components/schemas/apiInput'
        favorClarifaiWorkflows:
          title: >-
            Use this flag to look into clarifai published workflows first for a
            Workflow ID
          type: boolean
    V2PostWorkflowVersionsUnPublish2Request:
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        publications:
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowVersionUnPublishRequest'
    V2DeleteWorkflowVersions2Request:
      title: DeleteWorkflowVersionsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        workflowVersionIds:
          title: Delete the versions identified by these ids
          type: array
          items:
            type: string
    V2PatchWorkflowVersions2Request:
      title: PatchWorkflowVersionsRequest
      type: object
      properties:
        userAppId:
          $ref: '#/components/schemas/apiUserAppIDSet'
        workflowVersions:
          description: Patch these versions.
          type: array
          items:
            $ref: '#/components/schemas/apiWorkflowVersion'
        action:
          title: |-
            The action to perform on the patched objects
            For now actions 'merge', 'overwrite', and 'remove' are supported
          type: string
    V2PostModelVersionsUploadResponse:
      title: Stream result of apiPostModelVersionsUploadResponse
      type: object
      properties:
        result:
          $ref: '#/components/schemas/apiPostModelVersionsUploadResponse'
        error:
          $ref: '#/components/schemas/googlerpcStatus'
    V2GenerateModelOutputs2Response:
      title: Stream result of apiMultiOutputResponse
      type: object
      properties:
        result:
          $ref: '#/components/schemas/apiMultiOutputResponse'
        error:
          $ref: '#/components/schemas/googlerpcStatus'
    V2GenerateModelOutputsResponse:
      title: Stream result of apiMultiOutputResponse
      type: object
      properties:
        result:
          $ref: '#/components/schemas/apiMultiOutputResponse'
        error:
          $ref: '#/components/schemas/googlerpcStatus'
