openapi: 3.0.0
info:
  title: space-invoices-api
  description: ''
  version: 2.0.0
  contact:
    name: Space Invoices Inc
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: https://api.spaceinvoices.com
tags:
  - name: Organization
  - name: Document
  - name: Account
  - name: AtcudSeries
  - name: Unit
  - name: PriceList
  - name: Item
  - name: Tax
  - name: Shopify
  - name: Client
  - name: Subscription
  - name: AccountOrganization
  - name: Recurrence
  - name: Warehouse
  - name: Webhook
  - name: Thrivecart
  - name: Payment
  - name: Category
  - name: DocumentCategory
  - name: Magento1
  - name: Woocommerce
  - name: CustomIntegration
  - name: Bokun
  - name: Shopamine
  - name: AtcudSeriesController
  - name: InvoiceController
  - name: Stripe
  - name: TicketingHub
  - name: Default
  - name: WhiteLabel
  - name: BusinessPremise
  - name: HealthController
  - name: OrganizationMerchantController
  - name: OrganizationPaymentIntentController
  - name: AccountPaymentProcessingController
  - name: AccountStripeConnectController
  - name: Company
  - name: Country
  - name: Price
  - name: Order
  - name: AccountController
  - name: OrganizationStripeConnectAccountController
  - name: Currency
  - name: Plan
  - name: container
  - name: Message
  - name: Tracking
  - name: ElectronicDevice
  - name: Certificate
  - name: GeoIP
  - name: FileMeta
  - name: Typless
  - name: Sendgrid
  - name: Log
  - name: AWSSES
  - name: DocumentPaymentIntentController
  - name: DocumentStripeConnectPaymentIntentController
  - name: FatturaPaController
  - name: OrganizationMerchantLinkController
  - name: SaftPtController
  - name: OrganizationStripeConnectAccountLinkController
  - name: OrganizationTransactionController
  - name: PaymentProcessingController
  - name: StripeConnectAccountController
  - name: StripeConnectController
paths:
  /live:
    get:
      tags:
        - HealthController
      operationId: HealthController_getStatus
      responses:
        '200':
          description: Health Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthControllerGetStatusResponse'
        '500':
          description: Health Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthControllerGetStatus500Response'
        '503':
          description: Health Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthControllerGetStatus503Response'
      x-controller-name: HealthController
      x-operation-name: live
  /ready:
    get:
      tags:
        - HealthController
      operationId: HealthController_getStatus
      responses:
        '200':
          description: Health Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthControllerGetStatus200Response'
        '500':
          description: Health Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthControllerGetStatus500Response'
        '503':
          description: Health Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthControllerGetStatus503Response'
      x-controller-name: HealthController
      x-operation-name: ready
  /v1/accounts/count:
    get:
      tags:
        - AccountController
      operationId: AccountController_getCount
      parameters:
        - name: where
          in: query
          content:
            application/json:
              schema:
                title: Account.WhereFilter
                type: object
                additionalProperties: true
                x-typescript-type: '@loopback/repository#Where<Account>'
      responses:
        '200':
          description: Count sub-Accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loopback.Count'
      x-controller-name: AccountController
      x-operation-name: count
  /v1/accounts:
    get:
      tags:
        - AccountController
      operationId: AccountController_list
      parameters:
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account.Filter'
      responses:
        '200':
          description: Array of sub-Account model instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountControllerListResponse'
      x-controller-name: AccountController
      x-operation-name: find
  /v1/documents/{shareableId}/payment-intent:
    get:
      tags:
        - DocumentPaymentIntentController
      operationId: DocumentPaymentIntentController_getPaymentIntentByShareableId
      parameters:
        - name: shareableId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Payment Intent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
      x-controller-name: DocumentPaymentIntentController
      x-operation-name: get
  /v1/documents/{shareableId}/stripe-connect/payment-intent:
    get:
      tags:
        - DocumentStripeConnectPaymentIntentController
      operationId: DocumentStripeConnectPaymentIntentController_getByShareableId
      parameters:
        - name: shareableId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Stripe Connect Payment Intent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnectPaymentIntent'
      x-controller-name: DocumentStripeConnectPaymentIntentController
      x-operation-name: get
  /v1/fattura-pa/webhooks:
    post:
      tags:
        - FatturaPaController
      operationId: FatturaPaController_createWebhooksSubscription
      requestBody:
        description: FatturaPaWebhook
        content:
          text/xml:
            schema:
              $ref: >-
                #/components/schemas/FatturaPaControllerCreateWebhooksSubscriptionRequest
        required: true
      responses:
        '200':
          description: Success response
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/FatturaPaControllerCreateWebhooksSubscriptionResponse
      x-controller-name: FatturaPaController
      x-operation-name: webhooks
  /v1/organizations/{organizationId}/atcud/get-active:
    post:
      tags:
        - AtcudSeriesController
      operationId: AtcudSeriesController_getActiveAtcud
      parameters:
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: AtcudSeries model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeriesWithRelations'
      x-controller-name: AtcudSeriesController
      x-operation-name: findActive
  /v1/organizations/{organizationId}/atcud/{id}:
    get:
      tags:
        - AtcudSeriesController
      operationId: AtcudSeriesController_getAtcudById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries.Filter'
      responses:
        '200':
          description: AtcudSeries model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeriesWithRelations'
      x-controller-name: AtcudSeriesController
      x-operation-name: findById
  /v1/organizations/{organizationId}/atcud:
    post:
      tags:
        - AtcudSeriesController
      operationId: AtcudSeriesController_createAtcud
      parameters:
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAtcudSeries'
        x-parameter-index: 1
      responses:
        '200':
          description: AtcudSeries model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      x-controller-name: AtcudSeriesController
      x-operation-name: create
    get:
      tags:
        - AtcudSeriesController
      operationId: AtcudSeriesController_getByOrganization
      parameters:
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries.Filter1'
      responses:
        '200':
          description: Array of AtcudSeries model instances
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AtcudSeriesControllerGetByOrganizationResponse
      x-controller-name: AtcudSeriesController
      x-operation-name: find
  /v1/organizations/{id}/merchant/link:
    get:
      tags:
        - OrganizationMerchantLinkController
      operationId: OrganizationMerchantLinkController_getMerchantLink
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Organization Payment Processing onboarding link
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationMerchantLinkControllerGetMerchantLinkResponse
      x-controller-name: OrganizationMerchantLinkController
      x-operation-name: get
  /v1/organizations/{id}/merchant:
    post:
      tags:
        - OrganizationMerchantController
      operationId: OrganizationMerchantController_createMerchant
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMerchantInOrganization'
        x-parameter-index: 1
      responses:
        '200':
          description: Merchant model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
      x-controller-name: OrganizationMerchantController
      x-operation-name: create
    patch:
      tags:
        - OrganizationMerchantController
      operationId: OrganizationMerchantController_updateMerchantById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: where
          in: query
          content:
            application/json:
              schema:
                title: Merchant.WhereFilter
                type: object
                additionalProperties: true
                x-typescript-type: '@loopback/repository#Where<Merchant>'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/MerchantPartialExcluding_id-paymentProcessingId-merchantId-applicationId-organizationId-chargesEnabled-createdAt-updatedAt_
        x-parameter-index: 1
      responses:
        '200':
          description: Organization.Merchant PATCH success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loopback.Count'
      x-controller-name: OrganizationMerchantController
      x-operation-name: patch
    get:
      tags:
        - OrganizationMerchantController
      operationId: OrganizationMerchantController_getById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      responses:
        '200':
          description: Organization has one Merchant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
      x-controller-name: OrganizationMerchantController
      x-operation-name: get
  /v1/organizations/{id}/payment-intents/authorized:
    post:
      tags:
        - OrganizationPaymentIntentController
      operationId: OrganizationPaymentIntentController_createAuthorizedPaymentIntent
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/OrganizationPaymentIntentControllerCreateAuthorizedPaymentIntentRequest
        x-parameter-index: 1
      responses:
        '200':
          description: PaymentIntent model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
      x-controller-name: OrganizationPaymentIntentController
      x-operation-name: createAuthorized
  /v1/organizations/{id}/payment-intents:
    post:
      tags:
        - OrganizationPaymentIntentController
      operationId: OrganizationPaymentIntentController_createPaymentIntent
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/OrganizationPaymentIntentControllerCreatePaymentIntentRequest
        x-parameter-index: 1
      responses:
        '200':
          description: PaymentIntent model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
      x-controller-name: OrganizationPaymentIntentController
      x-operation-name: create
    get:
      tags:
        - OrganizationPaymentIntentController
      operationId: OrganizationPaymentIntentController_getPaymentIntents
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      responses:
        '200':
          description: Array of Organization has many PaymentIntent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationPaymentIntentControllerGetPaymentIntentsResponse
      x-controller-name: OrganizationPaymentIntentController
      x-operation-name: find
  /v1/organizations/{id}/saft-pt/report:
    get:
      tags:
        - SaftPtController
      operationId: SaftPtController_generateReportById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: from
          in: query
          schema:
            type: string
            format: date
        - name: to
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Return value of SaftPtController.generateSaftPt
      x-controller-name: SaftPtController
      x-operation-name: generateSaftPt
  /v1/organizations/{id}/stripe-connect/account/link:
    get:
      tags:
        - OrganizationStripeConnectAccountLinkController
      operationId: OrganizationStripeConnectAccountLinkController_getStripeLink
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Organization Stripe Connect Account onboarding link
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationStripeConnectAccountLinkControllerGetStripeLinkResponse
      x-controller-name: OrganizationStripeConnectAccountLinkController
      x-operation-name: get
  /v1/organizations/{id}/stripe-connect/account:
    post:
      tags:
        - OrganizationStripeConnectAccountController
      operationId: OrganizationStripeConnectAccountController_createStripeAccount
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStripeConnectAccountInOrganization'
        x-parameter-index: 1
      responses:
        '200':
          description: StripeConnectAccount model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnectAccount'
      x-controller-name: OrganizationStripeConnectAccountController
      x-operation-name: create
    get:
      tags:
        - OrganizationStripeConnectAccountController
      operationId: OrganizationStripeConnectAccountController_getById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnect.Filter'
      responses:
        '200':
          description: Stripe Connect Account instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnectAccount'
      x-controller-name: OrganizationStripeConnectAccountController
      x-operation-name: find
  /v1/organizations/{id}/transactions:
    get:
      tags:
        - OrganizationTransactionController
      operationId: OrganizationTransactionController_listById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      responses:
        '200':
          description: Array of Organization has many Transaction
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationTransactionControllerListByIdResponse
      x-controller-name: OrganizationTransactionController
      x-operation-name: find
  /v1/payment-processing/webhooks:
    post:
      tags:
        - PaymentProcessingController
      operationId: PaymentProcessingController_createWebhook
      requestBody:
        description: PaymentProcessingWebhook
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PaymentProcessingControllerCreateWebhookRequest
        required: true
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentProcessingControllerCreateWebhookResponse
      x-controller-name: PaymentProcessingController
      x-operation-name: webhooks
  /v1/payment-processing:
    post:
      tags:
        - AccountPaymentProcessingController
      operationId: AccountPaymentProcessingController_createPaymentProcess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPaymentProcessingInAccount'
      responses:
        '200':
          description: PaymentProcessing model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProcessing'
      x-controller-name: AccountPaymentProcessingController
      x-operation-name: create
    patch:
      tags:
        - AccountPaymentProcessingController
      operationId: AccountPaymentProcessingController_updatePaymentProcessing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPaymentProcessingInAccount'
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AccountPaymentProcessingControllerUpdatePaymentProcessingResponse
      x-controller-name: AccountPaymentProcessingController
      x-operation-name: patch
    get:
      tags:
        - AccountPaymentProcessingController
      operationId: AccountPaymentProcessingController_getPaymentProcessing
      parameters:
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      responses:
        '200':
          description: PaymentProcessing model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProcessing'
      x-controller-name: AccountPaymentProcessingController
      x-operation-name: get
  /v1/stripe-connect/accounts/{id}:
    patch:
      tags:
        - StripeConnectAccountController
      operationId: StripeConnectAccountController_updateById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStripeConnectAccount'
        x-parameter-index: 1
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/StripeConnectAccountControllerUpdateByIdResponse
      x-controller-name: StripeConnectAccountController
      x-operation-name: updateById
  /v1/stripe-connect/{id}/webhooks:
    post:
      tags:
        - StripeConnectController
      operationId: StripeConnectController_createWebhooks
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: connect
          in: query
          schema:
            type: boolean
      requestBody:
        description: StripeConnectWebhook
        content:
          application/json:
            x-parser: raw
            schema:
              $ref: >-
                #/components/schemas/StripeConnectControllerCreateWebhooksRequest
        required: true
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/StripeConnectControllerCreateWebhooksResponse
      x-controller-name: StripeConnectController
      x-operation-name: webhooks
  /v1/stripe-connect:
    post:
      tags:
        - AccountStripeConnectController
      operationId: AccountStripeConnectController_createStripeConnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStripeConnectInAccount'
      responses:
        '200':
          description: StripeConnect model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnect'
      x-controller-name: AccountStripeConnectController
      x-operation-name: create
    patch:
      tags:
        - AccountStripeConnectController
      operationId: AccountStripeConnectController_updateStripeConnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStripeConnectInAccount'
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AccountStripeConnectControllerUpdateStripeConnectResponse
      x-controller-name: AccountStripeConnectController
      x-operation-name: patch
    get:
      tags:
        - AccountStripeConnectController
      operationId: AccountStripeConnectController_getStripeConnect
      parameters:
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      responses:
        '200':
          description: StripeConnect model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnect'
      x-controller-name: AccountStripeConnectController
      x-operation-name: get
  /v2/invoices/{id}:
    put:
      tags:
        - InvoiceController
      operationId: InvoiceController_updateById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        x-parameter-index: 1
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceControllerUpdateById204Response'
      x-controller-name: InvoiceController
      x-operation-name: replaceById
    patch:
      tags:
        - InvoiceController
      operationId: InvoiceController_updateById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePartial'
        x-parameter-index: 1
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceControllerUpdateByIdResponse'
      x-controller-name: InvoiceController
      x-operation-name: updateById
    get:
      tags:
        - InvoiceController
      operationId: InvoiceController_getById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice.Filter'
      responses:
        '200':
          description: Invoice model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceWithRelations'
      x-controller-name: InvoiceController
      x-operation-name: findById
    delete:
      tags:
        - InvoiceController
      operationId: InvoiceController_removeById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceControllerRemoveByIdResponse'
      x-controller-name: InvoiceController
      x-operation-name: deleteById
  /:
    get:
      tags:
        - HealthController
      operationId: HealthController_getStatus
      responses:
        '200':
          description: Health Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthControllerGetStatus200Response'
        '500':
          description: Health Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthControllerGetStatus500Response'
        '503':
          description: Health Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthControllerGetStatus503Response'
      x-controller-name: HealthController
      x-operation-name: health
  /v1/Documents/{id}/recurrence:
    get:
      tags:
        - Document
      summary: Fetches hasOne relation recurrence.
      operationId: Document_getRecurrence
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: refresh
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
    post:
      tags:
        - Document
      summary: Creates a new instance in recurrence of this model.
      operationId: Document_createInstanceInRecurrence
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recurrence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recurrence'
          application/xml:
            schema:
              $ref: '#/components/schemas/Recurrence'
          text/xml:
            schema:
              $ref: '#/components/schemas/Recurrence'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
  /v1/Documents/{id}/comments/{fk}:
    delete:
      tags:
        - Document
      summary: Delete a related item by id for comments.
      operationId: Document_deleteRelatedItemByIdForComments
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Foreign key for comments
          name: fk
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Document
      summary: Update a related item by id for comments.
      operationId: Document_updateRelatedItemById
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Foreign key for comments
          name: fk
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Comment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Comment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Comment'
      deprecated: false
  /v1/Documents/{id}/payments:
    get:
      tags:
        - Document
      summary: Queries payments of Document.
      operationId: Document_getPayments
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGetPaymentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetPayments200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetPayments200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetPayments200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetPayments200Response'
      deprecated: false
    post:
      tags:
        - Document
      summary: Creates a new instance in payments of this model.
      operationId: Document_createPaymentInstance
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/_new_Payment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
  /v1/Documents/{id}/payments/count:
    get:
      tags:
        - Document
      summary: Counts payments of Document.
      operationId: Document_countPayments
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCountPaymentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCountPayments200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCountPayments200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCountPayments200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCountPayments200Response'
      deprecated: false
  /v1/Documents/{id}/comments:
    post:
      tags:
        - Document
      summary: Creates a new instance in comments of this model.
      operationId: Document_createInstanceInComments
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Comment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Comment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Comment'
      deprecated: false
  /v1/Documents/{id}/documentCategories:
    post:
      tags:
        - Document
      summary: Creates a new instance in documentCategories of this model.
      operationId: Document_createInstanceInDocumentCategories
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_DocumentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_DocumentCategory'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_DocumentCategory'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_DocumentCategory'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      deprecated: false
  /v1/Documents/{id}:
    get:
      tags:
        - Document
      summary: Find a model instance by {{id}} from the data source.
      operationId: Document_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
    put:
      tags:
        - Document
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Document_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Document'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
    delete:
      tags:
        - Document
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Document_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Document
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Document_patchAttributesById
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          text/xml:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
  /v1/Documents/{id}/replace:
    post:
      tags:
        - Document
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Document_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Document'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
  /v1/Documents/{id}/send:
    post:
      tags:
        - Document
      summary: ''
      operationId: Document_sendNotification
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Language flag
          name: l
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentSendNotificationRequest'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSendNotificationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentSendNotification200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentSendNotification200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentSendNotification200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentSendNotification200Response'
      deprecated: false
  /v1/Documents/{id}/cancel:
    post:
      tags:
        - Document
      summary: ''
      operationId: Document_cancelById
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: technical
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCancelByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCancelById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCancelById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCancelById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCancelById200Response'
      deprecated: false
  /v1/Documents/{id}/uncancel:
    post:
      tags:
        - Document
      summary: ''
      operationId: Document_markUncancelled
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentMarkUncancelledResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentMarkUncancelled200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentMarkUncancelled200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentMarkUncancelled200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentMarkUncancelled200Response'
      deprecated: false
  /v1/Documents/{id}/fiscally-verify:
    post:
      tags:
        - Document
      summary: Fiscally verify a document that previously failed verification.
      operationId: Document_fiscallyVerify
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: provider
          in: query
          required: false
          schema:
            type: string
        - name: old
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFiscallyVerifyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentFiscallyVerify200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentFiscallyVerify200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentFiscallyVerify200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentFiscallyVerify200Response'
      deprecated: false
  /v1/Documents/{id}/e-slog:
    get:
      tags:
        - Document
      summary: Generates eslog xml and returns it
      operationId: Document_generateEslogXml
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Additional settings for generating the eslog format
          name: options
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXml200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXml200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXml200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXml200Response'
      deprecated: false
  /v1/Documents/{id}/pdf:
    get:
      tags:
        - Document
      summary: Retrieve PDF of document
      operationId: Document_getPdfById
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Language flag
          name: l
          in: query
          required: false
          schema:
            type: string
        - description: Add UPN QR to PDF
          name: upn_qr
          in: query
          required: false
          schema:
            type: boolean
        - description: Hide header and footer on PDF
          name: hide_header_footer
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfById200Response'
      deprecated: false
  /v1/Documents/{id}/mark-sent:
    post:
      tags:
        - Document
      summary: Mark document as sent via snail mail
      operationId: Document_markAsSentViaSnailMail
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentMarkAsSentViaSnailMailResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentMarkAsSentViaSnailMail200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentMarkAsSentViaSnailMail200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentMarkAsSentViaSnailMail200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentMarkAsSentViaSnailMail200Response'
      deprecated: false
  /v1/Documents/{id}/attachments/upload:
    post:
      tags:
        - Document
      summary: Uploads an attachment for a document
      operationId: Document_uploadAttachment
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadAttachmentResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentUploadAttachment200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentUploadAttachment200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentUploadAttachment200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentUploadAttachment200Response'
      deprecated: false
  /v1/Documents/parse-xml:
    post:
      tags:
        - Document
      summary: >-
        Takes an xml file and returns a json object prepared for saving a
        document.
      operationId: Document_convertXmlToJson
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentConvertXmlToJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentConvertXmlToJson200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentConvertXmlToJson200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentConvertXmlToJson200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentConvertXmlToJson200Response'
      deprecated: false
  /v1/Documents/cron/outgoing:
    get:
      tags:
        - Document
      summary: ''
      operationId: Document_getOutgoingDocuments
      parameters:
        - description: ''
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGetOutgoingDocumentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetOutgoingDocuments200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetOutgoingDocuments200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetOutgoingDocuments200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetOutgoingDocuments200Response'
      deprecated: false
  /v1/Documents/cron/incoming:
    get:
      tags:
        - Document
      summary: ''
      operationId: Document_getIncoming
      parameters:
        - description: ''
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGetIncomingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetIncoming200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetIncoming200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetIncoming200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetIncoming200Response'
      deprecated: false
  /v1/Documents/{id}/share:
    post:
      tags:
        - Document
      summary: >-
        Generates and returns shareable document id that allows access to
        document without authentication
      operationId: Document_generateShareableId
      parameters:
        - description: Document id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentGenerateShareableIdRequest'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGenerateShareableIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentGenerateShareableId200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentGenerateShareableId200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGenerateShareableId200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGenerateShareableId200Response'
      deprecated: false
  /v1/Documents/public/{id}:
    get:
      tags:
        - Document
      summary: Retrieve document using shareable id
      operationId: Document_getByShareableId
      parameters:
        - description: Shareable id of document to retrieve
          name: id
          in: path
          required: true
          schema:
            type: string
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGetByShareableIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetByShareableId200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetByShareableId200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetByShareableId200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetByShareableId200Response'
      deprecated: false
  /v1/Documents/public/{id}/e-slog:
    get:
      tags:
        - Document
      summary: Generates eslog xml from shareableId and returns it
      operationId: Document_generateEslogXml
      parameters:
        - description: Shareable id of document to retrieve
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXml200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXml200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXml200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXml200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGenerateEslogXml200Response'
      deprecated: false
  /v1/Documents/public/{id}/pdf:
    get:
      tags:
        - Document
      summary: Retrieve PDF of document
      operationId: Document_getPdfById
      parameters:
        - description: Shareable id of document to retrieve
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Language flag
          name: l
          in: query
          required: false
          schema:
            type: string
        - description: Add UPN QR to PDF
          name: upn_qr
          in: query
          required: false
          schema:
            type: boolean
        - description: Hide header and footer on PDF
          name: hide_header_footer
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfById200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentGetPdfById200Response'
      deprecated: false
  /v1/Documents/public/{id}/attachments/{attachmentId}/download:
    get:
      tags:
        - Document
      summary: Retrieve attachment of document by shareable id
      operationId: Document_getAttachmentByShareableId
      parameters:
        - description: Shareable id of document to retrieve
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Id of attachment to retrieve
          name: attachmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DocumentGetAttachmentByShareableIdResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/DocumentGetAttachmentByShareableId200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/DocumentGetAttachmentByShareableId200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/DocumentGetAttachmentByShareableId200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/DocumentGetAttachmentByShareableId200Response
      deprecated: false
  /v1/Items/{id}/components/{fk}:
    put:
      tags:
        - Item
      summary: Update a related item by id for components.
      operationId: Item_updateRelatedComponentById
      parameters:
        - description: Item id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Foreign key for components
          name: fk
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Component'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component'
            text/xml:
              schema:
                $ref: '#/components/schemas/Component'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Component'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Component'
      deprecated: false
  /v1/Items/{id}/inventories:
    get:
      tags:
        - Item
      summary: Queries inventories of Item.
      operationId: Item_queryInventories
      parameters:
        - description: Item id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemQueryInventoriesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ItemQueryInventories200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ItemQueryInventories200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ItemQueryInventories200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ItemQueryInventories200Response'
      deprecated: false
  /v1/Items/{id}/components:
    post:
      tags:
        - Item
      summary: Creates a new instance in components of this model.
      operationId: Item_createInstance
      parameters:
        - description: Item id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Component'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component'
            text/xml:
              schema:
                $ref: '#/components/schemas/Component'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Component'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Component'
      deprecated: false
  /v1/Items/{id}:
    get:
      tags:
        - Item
      summary: Find a model instance by {{id}} from the data source.
      operationId: Item_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Item'
      deprecated: false
    put:
      tags:
        - Item
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Item_updateAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Item'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Item'
      deprecated: false
    delete:
      tags:
        - Item
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Item_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ItemDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ItemDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ItemDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ItemDeleteById200Response'
      deprecated: false
  /v1/Items/{id}/replace:
    post:
      tags:
        - Item
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Item_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Item'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Item'
      deprecated: false
  /v1/Taxes/{id}/taxRates/{fk}:
    delete:
      tags:
        - Tax
      summary: Delete a related item by id for taxRates.
      operationId: Tax_deleteRelatedItemById
      parameters:
        - description: Tax id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Foreign key for taxRates
          name: fk
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Taxes/{id}/taxRates:
    post:
      tags:
        - Tax
      summary: Creates a new instance in taxRates of this model.
      operationId: Tax_createInstanceInTaxRates
      parameters:
        - description: Tax id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaxRate'
          application/xml:
            schema:
              $ref: '#/components/schemas/TaxRate'
          text/xml:
            schema:
              $ref: '#/components/schemas/TaxRate'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRate'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxRate'
            text/xml:
              schema:
                $ref: '#/components/schemas/TaxRate'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TaxRate'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TaxRate'
      deprecated: false
  /v1/Taxes/{id}:
    get:
      tags:
        - Tax
      summary: Find a model instance by {{id}} from the data source.
      operationId: Tax_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
      deprecated: false
    put:
      tags:
        - Tax
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Tax_updateById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Tax'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
      deprecated: false
    delete:
      tags:
        - Tax
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Tax_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/TaxDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TaxDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TaxDeleteById200Response'
      deprecated: false
  /v1/Taxes/{id}/replace:
    post:
      tags:
        - Tax
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Tax_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Tax'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
      deprecated: false
  /v1/Taxes/clause-type:
    post:
      tags:
        - Tax
      summary: ''
      operationId: Tax_createClauseType
      requestBody:
        description: Body resembling a document.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxCreateClauseTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaxCreateClauseTypeRequest1'
          application/xml:
            schema:
              $ref: '#/components/schemas/TaxCreateClauseTypeRequest2'
          text/xml:
            schema:
              $ref: '#/components/schemas/TaxCreateClauseTypeRequest3'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxCreateClauseTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxCreateClauseType200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/TaxCreateClauseType200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TaxCreateClauseType200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TaxCreateClauseType200Response'
      deprecated: false
  /v1/Clients/{id}:
    get:
      tags:
        - Client
      summary: Find a model instance by {{id}} from the data source.
      operationId: Client_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
    put:
      tags:
        - Client
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Client_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Client'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
    delete:
      tags:
        - Client
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Client_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClientDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClientDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ClientDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ClientDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Client
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Client_updateAttributesById
      parameters:
        - description: Client id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          application/xml:
            schema:
              $ref: '#/components/schemas/Client'
          text/xml:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
  /v1/Clients/{id}/replace:
    post:
      tags:
        - Client
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Client_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Client'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
  /v1/Clients/{id}/send-reminder:
    post:
      tags:
        - Client
      summary: ''
      operationId: Client_sendReminder
      parameters:
        - description: Client id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientSendReminderRequest'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSendReminderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClientSendReminder200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClientSendReminder200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ClientSendReminder200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ClientSendReminder200Response'
      deprecated: false
  /v1/Organizations/{id}/defaults/{fk}:
    put:
      tags:
        - Organization
      summary: Update a related item by id for _defaults.
      operationId: Organization_updateRelatedItemById
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Foreign key for _defaults
          name: fk
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Default'
          application/xml:
            schema:
              $ref: '#/components/schemas/Default'
          text/xml:
            schema:
              $ref: '#/components/schemas/Default'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default'
            application/xml:
              schema:
                $ref: '#/components/schemas/Default'
            text/xml:
              schema:
                $ref: '#/components/schemas/Default'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Default'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Default'
      deprecated: false
  /v1/Organizations/{id}/documents:
    get:
      tags:
        - Organization
      summary: Queries documents of Organization.
      operationId: Organization_queryDocuments
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryDocumentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryDocuments200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryDocuments200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryDocuments200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryDocuments200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in documents of this model.
      operationId: Organization_createNewInstanceInDocuments
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Document'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Document'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
  /v1/Organizations/{id}/documents/count:
    get:
      tags:
        - Organization
      summary: Counts documents of Organization.
      operationId: Organization_countDocuments
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountDocumentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountDocuments200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountDocuments200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountDocuments200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountDocuments200Response'
      deprecated: false
  /v1/Organizations/{id}/clients:
    get:
      tags:
        - Organization
      summary: Queries clients of Organization.
      operationId: Organization_queryClients
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryClientsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryClients200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryClients200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryClients200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryClients200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in clients of this model.
      operationId: Organization_createClientInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Client'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Client'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Client'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
  /v1/Organizations/{id}/clients/count:
    get:
      tags:
        - Organization
      summary: Counts clients of Organization.
      operationId: Organization_countClients
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountClientsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountClients200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountClients200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountClients200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountClients200Response'
      deprecated: false
  /v1/Organizations/{id}/items:
    get:
      tags:
        - Organization
      summary: Queries items of Organization.
      operationId: Organization_queryItems
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryItemsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryItems200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryItems200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryItems200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryItems200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in items of this model.
      operationId: Organization_createNewItemInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Item'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Item'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Item'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Item'
      deprecated: false
  /v1/Organizations/{id}/items/count:
    get:
      tags:
        - Organization
      summary: Counts items of Organization.
      operationId: Organization_countItems
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountItemsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountItems200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountItems200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountItems200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountItems200Response'
      deprecated: false
  /v1/Organizations/{id}/taxes:
    get:
      tags:
        - Organization
      summary: Queries taxes of Organization.
      operationId: Organization_queryTaxes
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryTaxesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryTaxes200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryTaxes200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryTaxes200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryTaxes200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in taxes of this model.
      operationId: Organization_createInstanceInTaxes
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Tax'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Tax'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Tax'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Tax'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
      deprecated: false
  /v1/Organizations/{id}/taxes/count:
    get:
      tags:
        - Organization
      summary: Counts taxes of Organization.
      operationId: Organization_countTaxes
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountTaxesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountTaxes200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountTaxes200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountTaxes200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountTaxes200Response'
      deprecated: false
  /v1/Organizations/{id}/shopify:
    get:
      tags:
        - Organization
      summary: Queries shopify of Organization.
      operationId: Organization_queryShopify
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopifyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopify200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopify200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopify200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopify200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in shopify of this model.
      operationId: Organization_createShopifyInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Shopify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Shopify'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Shopify'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Shopify'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopify'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopify'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopify'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopify'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopify'
      deprecated: false
  /v1/Organizations/{id}/shopify/count:
    get:
      tags:
        - Organization
      summary: Counts shopify of Organization.
      operationId: Organization_countShopify
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopifyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopify200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopify200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopify200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopify200Response'
      deprecated: false
  /v1/Organizations/{id}/stripe:
    get:
      tags:
        - Organization
      summary: Queries stripe of Organization.
      operationId: Organization_getStripe
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetStripeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetStripe200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetStripe200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetStripe200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetStripe200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in stripe of this model.
      operationId: Organization_createStripeInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Stripe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Stripe'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Stripe'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Stripe'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stripe'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stripe'
            text/xml:
              schema:
                $ref: '#/components/schemas/Stripe'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Stripe'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Stripe'
      deprecated: false
  /v1/Organizations/{id}/stripe/count:
    get:
      tags:
        - Organization
      summary: Counts stripe of Organization.
      operationId: Organization_countStripe
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountStripeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountStripe200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountStripe200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountStripe200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountStripe200Response'
      deprecated: false
  /v1/Organizations/{id}/ticketingHub:
    get:
      tags:
        - Organization
      summary: Queries ticketingHub of Organization.
      operationId: Organization_getTicketingHub
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetTicketingHubResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetTicketingHub200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetTicketingHub200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetTicketingHub200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetTicketingHub200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in ticketingHub of this model.
      operationId: Organization_createTicketingHubInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_TicketingHub'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_TicketingHub'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_TicketingHub'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_TicketingHub'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
      deprecated: false
  /v1/Organizations/{id}/ticketingHub/count:
    get:
      tags:
        - Organization
      summary: Counts ticketingHub of Organization.
      operationId: Organization_countTicketingHub
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountTicketingHubResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountTicketingHub200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountTicketingHub200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountTicketingHub200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountTicketingHub200Response'
      deprecated: false
  /v1/Organizations/{id}/recurrences:
    get:
      tags:
        - Organization
      summary: Queries recurrences of Organization.
      operationId: Organization_queryRecurrences
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryRecurrencesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryRecurrences200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryRecurrences200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryRecurrences200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryRecurrences200Response'
      deprecated: false
  /v1/Organizations/{id}/recurrences/count:
    get:
      tags:
        - Organization
      summary: Counts recurrences of Organization.
      operationId: Organization_countRecurrences
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountRecurrencesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountRecurrences200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountRecurrences200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountRecurrences200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountRecurrences200Response'
      deprecated: false
  /v1/Organizations/{id}/payments:
    get:
      tags:
        - Organization
      summary: Queries payments of Organization.
      operationId: Organization_getPayments
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetPaymentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetPayments200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetPayments200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetPayments200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetPayments200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in payments of this model.
      operationId: Organization_createPaymentInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/_new_Payment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
  /v1/Organizations/{id}/payments/count:
    get:
      tags:
        - Organization
      summary: Counts payments of Organization.
      operationId: Organization_countPayments
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountPaymentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountPayments200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountPayments200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountPayments200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountPayments200Response'
      deprecated: false
  /v1/Organizations/{id}/defaults:
    get:
      tags:
        - Organization
      summary: Queries _defaults of Organization.
      operationId: Organization_getDefaults
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetDefaultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetDefaults200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetDefaults200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetDefaults200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetDefaults200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in _defaults of this model.
      operationId: Organization_createInstanceInDefaults
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Default'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Default'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Default'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Default'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default'
            application/xml:
              schema:
                $ref: '#/components/schemas/Default'
            text/xml:
              schema:
                $ref: '#/components/schemas/Default'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Default'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Default'
      deprecated: false
  /v1/Organizations/{id}/defaults/count:
    get:
      tags:
        - Organization
      summary: Counts _defaults of Organization.
      operationId: Organization_countDefaults
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountDefaultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountDefaults200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountDefaults200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountDefaults200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountDefaults200Response'
      deprecated: false
  /v1/Organizations/{id}/businessPremises:
    get:
      tags:
        - Organization
      summary: Queries businessPremises of Organization.
      operationId: Organization_getBusinessPremises
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetBusinessPremisesResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetBusinessPremises200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetBusinessPremises200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetBusinessPremises200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetBusinessPremises200Response
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in businessPremises of this model.
      operationId: Organization_createBusinessPremises
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_BusinessPremise'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_BusinessPremise'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_BusinessPremise'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_BusinessPremise'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            application/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            text/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
      deprecated: false
  /v1/Organizations/{id}/electronicDevices:
    get:
      tags:
        - Organization
      summary: Queries electronicDevices of Organization.
      operationId: Organization_queryElectronicDevices
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryElectronicDevicesResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryElectronicDevices200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryElectronicDevices200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryElectronicDevices200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryElectronicDevices200Response
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in electronicDevices of this model.
      operationId: Organization_createNewElectronicDevice
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/_new_ElectronicDevice'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
      deprecated: false
  /v1/Organizations/{id}/accountOrganizations:
    get:
      tags:
        - Organization
      summary: Queries accountOrganizations of Organization.
      operationId: Organization_getAccountOrganizations
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetAccountOrganizationsResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetAccountOrganizations200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetAccountOrganizations200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetAccountOrganizations200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetAccountOrganizations200Response
      deprecated: false
  /v1/Organizations/{id}/accountOrganizations/count:
    get:
      tags:
        - Organization
      summary: Counts accountOrganizations of Organization.
      operationId: Organization_countAccountOrganizations
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountAccountOrganizationsResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountAccountOrganizations200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountAccountOrganizations200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountAccountOrganizations200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountAccountOrganizations200Response
      deprecated: false
  /v1/Organizations/{id}/units:
    get:
      tags:
        - Organization
      summary: Queries units of Organization.
      operationId: Organization_queryUnits
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryUnitsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryUnits200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryUnits200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryUnits200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryUnits200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in units of this model.
      operationId: Organization_createUnitInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Unit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Unit'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Unit'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Unit'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            application/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            text/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Unit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Unit'
      deprecated: false
  /v1/Organizations/{id}/units/count:
    get:
      tags:
        - Organization
      summary: Counts units of Organization.
      operationId: Organization_countUnits
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountUnitsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountUnits200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountUnits200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountUnits200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountUnits200Response'
      deprecated: false
  /v1/Organizations/{id}/categories:
    get:
      tags:
        - Organization
      summary: Queries categories of Organization.
      operationId: Organization_getCategories
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetCategoriesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetCategories200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetCategories200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetCategories200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetCategories200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in categories of this model.
      operationId: Organization_createCategoryInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Category'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Category'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Category'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/xml:
              schema:
                $ref: '#/components/schemas/Category'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Category'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Category'
      deprecated: false
  /v1/Organizations/{id}/categories/count:
    get:
      tags:
        - Organization
      summary: Counts categories of Organization.
      operationId: Organization_countCategories
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountCategoriesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountCategories200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountCategories200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountCategories200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountCategories200Response'
      deprecated: false
  /v1/Organizations/{id}/documentCategories:
    get:
      tags:
        - Organization
      summary: Queries documentCategories of Organization.
      operationId: Organization_queryDocumentCategories
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryDocumentCategoriesResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryDocumentCategories200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryDocumentCategories200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryDocumentCategories200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryDocumentCategories200Response
      deprecated: false
  /v1/Organizations/{id}/documentCategories/count:
    get:
      tags:
        - Organization
      summary: Counts documentCategories of Organization.
      operationId: Organization_countDocumentCategories
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountDocumentCategoriesResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountDocumentCategories200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountDocumentCategories200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountDocumentCategories200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountDocumentCategories200Response
      deprecated: false
  /v1/Organizations/{id}/priceLists:
    get:
      tags:
        - Organization
      summary: Queries priceLists of Organization.
      operationId: Organization_queryPriceLists
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryPriceListsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryPriceLists200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryPriceLists200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryPriceLists200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryPriceLists200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in priceLists of this model.
      operationId: Organization_createPriceList
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_PriceList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_PriceList'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_PriceList'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_PriceList'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
      deprecated: false
  /v1/Organizations/{id}/priceLists/count:
    get:
      tags:
        - Organization
      summary: Counts priceLists of Organization.
      operationId: Organization_countPriceLists
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountPriceListsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountPriceLists200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountPriceLists200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountPriceLists200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountPriceLists200Response'
      deprecated: false
  /v1/Organizations/{id}/warehouses:
    get:
      tags:
        - Organization
      summary: Queries warehouses of Organization.
      operationId: Organization_queryWarehouses
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWarehousesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWarehouses200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWarehouses200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWarehouses200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWarehouses200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in warehouses of this model.
      operationId: Organization_createWarehouseInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Warehouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Warehouse'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Warehouse'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Warehouse'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
  /v1/Organizations/{id}/warehouses/count:
    get:
      tags:
        - Organization
      summary: Counts warehouses of Organization.
      operationId: Organization_countWarehouses
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountWarehousesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountWarehouses200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountWarehouses200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountWarehouses200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountWarehouses200Response'
      deprecated: false
  /v1/Organizations/{id}/webhooks:
    get:
      tags:
        - Organization
      summary: Queries webhooks of Organization.
      operationId: Organization_queryWebhooks
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWebhooksResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWebhooks200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWebhooks200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWebhooks200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWebhooks200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in webhooks of this model.
      operationId: Organization_createWebhook
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Webhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Webhook'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Webhook'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Webhook'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
  /v1/Organizations/{id}/webhooks/count:
    get:
      tags:
        - Organization
      summary: Counts webhooks of Organization.
      operationId: Organization_countWebhooks
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountWebhooksResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountWebhooks200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountWebhooks200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountWebhooks200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountWebhooks200Response'
      deprecated: false
  /v1/Organizations/{id}/orders:
    get:
      tags:
        - Organization
      summary: Queries orders of Organization.
      operationId: Organization_getOrders
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetOrdersResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetOrders200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetOrders200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetOrders200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetOrders200Response'
      deprecated: false
  /v1/Organizations/{id}/orders/count:
    get:
      tags:
        - Organization
      summary: Counts orders of Organization.
      operationId: Organization_countOrders
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountOrdersResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountOrders200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountOrders200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountOrders200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountOrders200Response'
      deprecated: false
  /v1/Organizations/{id}/magento1:
    get:
      tags:
        - Organization
      summary: Queries magento1 of Organization.
      operationId: Organization_getMagento1
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetMagento1Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetMagento1200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetMagento1200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetMagento1200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetMagento1200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in magento1 of this model.
      operationId: Organization_createMagentoInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Magento1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Magento1'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Magento1'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Magento1'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magento1'
            application/xml:
              schema:
                $ref: '#/components/schemas/Magento1'
            text/xml:
              schema:
                $ref: '#/components/schemas/Magento1'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Magento1'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Magento1'
      deprecated: false
  /v1/Organizations/{id}/magento1/count:
    get:
      tags:
        - Organization
      summary: Counts magento1 of Organization.
      operationId: Organization_countMagento1
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountMagento1Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountMagento1200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountMagento1200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountMagento1200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountMagento1200Response'
      deprecated: false
  /v1/Organizations/{id}/woocommerce:
    get:
      tags:
        - Organization
      summary: Queries woocommerce of Organization.
      operationId: Organization_queryWoocommerce
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWoocommerceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWoocommerce200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWoocommerce200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWoocommerce200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryWoocommerce200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in woocommerce of this model.
      operationId: Organization_createInstanceInWoocommerce
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Woocommerce'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Woocommerce'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Woocommerce'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Woocommerce'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Woocommerce'
      deprecated: false
  /v1/Organizations/{id}/woocommerce/count:
    get:
      tags:
        - Organization
      summary: Counts woocommerce of Organization.
      operationId: Organization_countWooCommerce
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountWooCommerceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountWooCommerce200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountWooCommerce200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountWooCommerce200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountWooCommerce200Response'
      deprecated: false
  /v1/Organizations/{id}/customIntegrations:
    get:
      tags:
        - Organization
      summary: Queries customIntegrations of Organization.
      operationId: Organization_queryCustomIntegrations
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryCustomIntegrationsResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryCustomIntegrations200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryCustomIntegrations200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryCustomIntegrations200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationQueryCustomIntegrations200Response
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in customIntegrations of this model.
      operationId: Organization_createCustomIntegrationInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_CustomIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_CustomIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_CustomIntegration'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_CustomIntegration'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
      deprecated: false
  /v1/Organizations/{id}/customIntegrations/count:
    get:
      tags:
        - Organization
      summary: Counts customIntegrations of Organization.
      operationId: Organization_countCustomIntegrations
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountCustomIntegrationsResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountCustomIntegrations200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountCustomIntegrations200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountCustomIntegrations200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCountCustomIntegrations200Response
      deprecated: false
  /v1/Organizations/{id}/thrivecart:
    get:
      tags:
        - Organization
      summary: Queries thrivecart of Organization.
      operationId: Organization_queryThrivecart
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryThrivecartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryThrivecart200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryThrivecart200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryThrivecart200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryThrivecart200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in thrivecart of this model.
      operationId: Organization_createThrivecartInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Thrivecart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Thrivecart'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Thrivecart'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Thrivecart'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            application/xml:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            text/xml:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Thrivecart'
      deprecated: false
  /v1/Organizations/{id}/thrivecart/count:
    get:
      tags:
        - Organization
      summary: Counts thrivecart of Organization.
      operationId: Organization_getThrivecartCount
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetThrivecartCountResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetThrivecartCount200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetThrivecartCount200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetThrivecartCount200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetThrivecartCount200Response'
      deprecated: false
  /v1/Organizations/{id}/bokun:
    get:
      tags:
        - Organization
      summary: Queries bokun of Organization.
      operationId: Organization_getBokun
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetBokunResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetBokun200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetBokun200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetBokun200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetBokun200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in bokun of this model.
      operationId: Organization_createBokunInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Bokun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Bokun'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Bokun'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Bokun'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bokun'
            application/xml:
              schema:
                $ref: '#/components/schemas/Bokun'
            text/xml:
              schema:
                $ref: '#/components/schemas/Bokun'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Bokun'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Bokun'
      deprecated: false
  /v1/Organizations/{id}/bokun/count:
    get:
      tags:
        - Organization
      summary: Counts bokun of Organization.
      operationId: Organization_countBokun
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountBokunResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountBokun200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountBokun200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountBokun200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountBokun200Response'
      deprecated: false
  /v1/Organizations/{id}/shopamine:
    get:
      tags:
        - Organization
      summary: Queries shopamine of Organization.
      operationId: Organization_queryShopamine
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopamineResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopamine200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopamine200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopamine200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationQueryShopamine200Response'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in shopamine of this model.
      operationId: Organization_createShopamineInstance
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Shopamine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Shopamine'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Shopamine'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Shopamine'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopamine'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopamine'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopamine'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopamine'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopamine'
      deprecated: false
  /v1/Organizations/{id}/shopamine/count:
    get:
      tags:
        - Organization
      summary: Counts shopamine of Organization.
      operationId: Organization_countShopamine
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopamineResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopamine200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopamine200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopamine200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationCountShopamine200Response'
      deprecated: false
  /v1/Organizations/{id}:
    get:
      tags:
        - Organization
      summary: Find a model instance by {{id}} from the data source.
      operationId: Organization_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
    patch:
      tags:
        - Organization
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Organization_updateAttributesById
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization'
          text/xml:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
  /v1/Organizations/{id}/activate:
    post:
      tags:
        - Organization
      summary: ''
      operationId: Organization_activateById
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationActivateByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationActivateById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationActivateById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationActivateById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationActivateById200Response'
      deprecated: false
  /v1/Organizations/{id}/deactivate:
    post:
      tags:
        - Organization
      summary: ''
      operationId: Organization_deactivateById
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDeactivateByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationDeactivateById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationDeactivateById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationDeactivateById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationDeactivateById200Response'
      deprecated: false
  /v1/Organizations/{id}/is-unique-doc-number:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_checkUniqueDocNumber
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: The numberTax subject to check
          name: number
          in: query
          required: true
          schema:
            type: string
        - description: The type of document
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: Id of document to ignore. Used when editing a document.
          name: ignoreId
          in: query
          required: false
          schema:
            type: string
        - description: Check incoming documents.
          name: incoming
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCheckUniqueDocNumberResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCheckUniqueDocNumber200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCheckUniqueDocNumber200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCheckUniqueDocNumber200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCheckUniqueDocNumber200Response
      deprecated: false
  /v1/Organizations/{id}/last-doc-number:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_getLastDocNumber
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: The type of document
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: Incoming document
          name: incoming
          in: query
          required: false
          schema:
            type: boolean
        - description: Date if not in current year
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetLastDocNumberResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetLastDocNumber200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetLastDocNumber200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetLastDocNumber200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetLastDocNumber200Response'
      deprecated: false
  /v1/Organizations/{id}/next-doc-number:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_getNextDocNumber
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: The type of document
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: Incoming document
          name: incoming
          in: query
          required: false
          schema:
            type: boolean
        - description: Fiscal verification strategy
          name: fvStrategy
          in: query
          required: false
          schema:
            type: string
        - description: Business premise ID
          name: BPid
          in: query
          required: false
          schema:
            type: string
        - description: Electronic device ID
          name: EDid
          in: query
          required: false
          schema:
            type: string
        - description: Date if not in current year
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetNextDocNumberResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetNextDocNumber200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetNextDocNumber200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetNextDocNumber200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetNextDocNumber200Response'
      deprecated: false
  /v1/Organizations/{id}/subscription:
    get:
      tags:
        - Organization
      summary: Get currenct subscription
      operationId: Organization_getCurrentSubscription
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetCurrentSubscriptionResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetCurrentSubscription200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetCurrentSubscription200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetCurrentSubscription200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetCurrentSubscription200Response
      deprecated: false
  /v1/Organizations/{id}/search-documents:
    get:
      tags:
        - Organization
      summary: 'DEPRECATED: Search documents endpoint'
      operationId: Organization_searchDocuments
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Type of document
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: ''
          name: term
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSearchDocumentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSearchDocuments200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSearchDocuments200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationSearchDocuments200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationSearchDocuments200Response'
      deprecated: false
  /v1/Organizations/{id}/upload-image:
    post:
      tags:
        - Organization
      summary: ''
      operationId: Organization_uploadImage
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImage200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImage200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImage200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImage200Response'
      deprecated: false
  /v1/Organizations/{id}/images:
    post:
      tags:
        - Organization
      summary: ''
      operationId: Organization_uploadImage
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImage200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImage200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImage200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImage200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationUploadImage200Response'
      deprecated: false
    delete:
      tags:
        - Organization
      summary: ''
      operationId: Organization_deleteImageById
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Type of image to delete
          name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDeleteImageByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationDeleteImageById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationDeleteImageById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationDeleteImageById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationDeleteImageById200Response'
      deprecated: false
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_getImagesById
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetImagesByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetImagesById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetImagesById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetImagesById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetImagesById200Response'
      deprecated: false
  /v1/Organizations/{id}/delete-image:
    delete:
      tags:
        - Organization
      summary: ''
      operationId: Organization_removeImage
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Type of image to delete
          name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRemoveImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationRemoveImage200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationRemoveImage200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationRemoveImage200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationRemoveImage200Response'
      deprecated: false
  /v1/Organizations/{id}/download-image:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_getImageById
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageById200Response'
      deprecated: false
  /v1/Organizations/{id}/images/logo:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_getImageLogo
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageLogoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageLogo200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageLogo200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageLogo200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetImageLogo200Response'
      deprecated: false
  /v1/Organizations/{id}/search-clients:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_searchClients
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: term
          in: query
          required: true
          schema:
            type: string
        - description: Optionally limit search to customer or supplier
          name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSearchClientsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSearchClients200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSearchClients200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationSearchClients200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationSearchClients200Response'
      deprecated: false
  /v1/Organizations/{id}/clients/search:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_findClientsBySearch
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: term
          in: query
          required: true
          schema:
            type: string
        - description: Optionally limit search to customer or supplier
          name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationFindClientsBySearchResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationFindClientsBySearch200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationFindClientsBySearch200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationFindClientsBySearch200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationFindClientsBySearch200Response
      deprecated: false
  /v1/Organizations/{id}/search-items:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_searchItems
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: term
          in: query
          required: true
          schema:
            type: string
        - description: Optionally limit search to incoming or outgoing
          name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSearchItemsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSearchItems200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSearchItems200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationSearchItems200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationSearchItems200Response'
      deprecated: false
  /v1/Organizations/{id}/items/search:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_findItemsBySearch
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: term
          in: query
          required: true
          schema:
            type: string
        - description: Optionally limit search to incoming or outgoing
          name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationFindItemsBySearchResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationFindItemsBySearch200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationFindItemsBySearch200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationFindItemsBySearch200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationFindItemsBySearch200Response'
      deprecated: false
  /v1/Organizations/{id}/business-stats:
    get:
      tags:
        - Organization
      summary: >-
        Provides business statistics about the given organization for a
        particular date range
      operationId: Organization_getBusinessStats
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Optional from date to generate report for
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Optional to date to generate report for
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Optional id of account to limit report for
          name: accountId
          in: query
          required: false
          schema:
            type: string
        - description: Optional id of unit to limit report for
          name: unitId
          in: query
          required: false
          schema:
            type: string
        - description: Optional if a text report should be created
          name: text
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetBusinessStatsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetBusinessStats200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetBusinessStats200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetBusinessStats200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetBusinessStats200Response'
      deprecated: false
  /v1/Organizations/{id}/total-stats:
    get:
      tags:
        - Organization
      summary: Provides financial statistics about the given organization
      operationId: Organization_getFinancialStats
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Optional value to use as today's date
          name: date
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetFinancialStatsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetFinancialStats200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetFinancialStats200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetFinancialStats200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetFinancialStats200Response'
      deprecated: false
  /v1/Organizations/{id}/document-total-stats:
    get:
      tags:
        - Organization
      summary: Get organization's document stats
      operationId: Organization_getDocumentStats
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Document type
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: ''
          name: from
          in: query
          required: true
          schema:
            type: string
        - description: ''
          name: to
          in: query
          required: true
          schema:
            type: string
        - description: Dist of data ie. day, week, month, year
          name: dist
          in: query
          required: true
          schema:
            type: string
        - description: >-
            If set to true, it will calculate the prices with gross values
            otherwise with net values
          name: gross
          in: query
          required: false
          schema:
            type: boolean
        - description: If incoming document statistics should be returned.
          name: incoming
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetDocumentStatsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetDocumentStats200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetDocumentStats200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetDocumentStats200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetDocumentStats200Response'
      deprecated: false
  /v1/Organizations/{id}/category-total-stats:
    get:
      tags:
        - Organization
      summary: Get organization's categories stats
      operationId: Organization_getCategoryTotalStats
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: from
          in: query
          required: true
          schema:
            type: string
        - description: ''
          name: to
          in: query
          required: true
          schema:
            type: string
        - description: Dist of data ie. day, week, month, year
          name: dist
          in: query
          required: true
          schema:
            type: string
        - description: Optional id of category to limit results to
          name: categoryId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetCategoryTotalStatsResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetCategoryTotalStats200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetCategoryTotalStats200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetCategoryTotalStats200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetCategoryTotalStats200Response
      deprecated: false
  /v1/Organizations/{id}/payment-total-stats:
    get:
      tags:
        - Organization
      summary: Get organization's payments stats
      operationId: Organization_getPaymentTotalStats
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: from
          in: query
          required: true
          schema:
            type: string
        - description: ''
          name: to
          in: query
          required: true
          schema:
            type: string
        - description: Dist of data ie. day, week, month, year
          name: dist
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetPaymentTotalStatsResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetPaymentTotalStats200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetPaymentTotalStats200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetPaymentTotalStats200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetPaymentTotalStats200Response
      deprecated: false
  /v1/Organizations/{id}/this-month-invoices:
    get:
      tags:
        - Organization
      summary: Returns number of invoices issued by organization in this month
      operationId: Organization_getThisMonthInvoices
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetThisMonthInvoicesResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetThisMonthInvoices200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetThisMonthInvoices200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetThisMonthInvoices200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetThisMonthInvoices200Response
      deprecated: false
  /v1/Organizations/{id}/export:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization_exportById
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: ''
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
        - name: email
          in: query
          required: false
          schema:
            type: boolean
        - name: lang
          in: query
          required: false
          schema:
            type: string
        - name: options
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationExportByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationExportById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationExportById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationExportById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationExportById200Response'
      deprecated: false
  /v1/Organizations/{id}/upload-certificate:
    post:
      tags:
        - Organization
      summary: ''
      operationId: Organization_uploadCertificate
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUploadCertificateRequest'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUploadCertificateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationUploadCertificate200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationUploadCertificate200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationUploadCertificate200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationUploadCertificate200Response'
      deprecated: false
  /v1/Organizations/{id}/invite:
    post:
      tags:
        - Organization
      summary: Invite user to / give access to organization
      operationId: Organization_inviteUser
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationInviteUserRequest'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInviteUserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationInviteUser200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationInviteUser200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationInviteUser200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationInviteUser200Response'
      deprecated: false
  /v1/Organizations/{id}/has-certificate:
    get:
      tags:
        - Organization
      summary: Check if organization has certificate of a type
      operationId: Organization_checkCertificateType
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: Environment certificate is intended for, default is `production`.
          name: environment
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCheckCertificateTypeResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCheckCertificateType200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCheckCertificateType200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCheckCertificateType200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationCheckCertificateType200Response
      deprecated: false
  /v1/Organizations/mailgun-route:
    post:
      tags:
        - Organization
      summary: Redirect mailgun to correct model
      operationId: Organization_redirectMailgunToModel
      requestBody:
        description: Mailgun object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRedirectMailgunToModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationRedirectMailgunToModelRequest1'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrganizationRedirectMailgunToModelRequest2'
          text/xml:
            schema:
              $ref: '#/components/schemas/OrganizationRedirectMailgunToModelRequest3'
        required: true
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Organizations/{id}/documents/pdfs:
    get:
      tags:
        - Organization
      summary: Get multiple document PDF files in ZIP.
      operationId: Organization_getMultipleDocumentPdfs
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Array of document ids to fetch as PDFs
          name: ids
          in: query
          required: true
          schema:
            type: string
            format: JSON
        - description: Should an email with the link be sent to the requester
          name: email
          in: query
          required: false
          schema:
            type: boolean
        - name: lang
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetMultipleDocumentPdfsResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetMultipleDocumentPdfs200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetMultipleDocumentPdfs200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetMultipleDocumentPdfs200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetMultipleDocumentPdfs200Response
      deprecated: false
  /v1/Organizations/{id}/documents/parse-image:
    post:
      tags:
        - Organization
      summary: >-
        Takes an image or PDF file and puts in into processing queue to create
        document from.
      operationId: Organization_submitImageProcessing
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Is image made by mobile phone.
          name: mobile
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSubmitImageProcessingResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationSubmitImageProcessing200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationSubmitImageProcessing200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationSubmitImageProcessing200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationSubmitImageProcessing200Response
      deprecated: false
  /v1/Organizations/{id}/import:
    post:
      tags:
        - Organization
      summary: Import CSV data
      operationId: Organization_importCsvData
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationImportCsvDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationImportCsvData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationImportCsvData200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationImportCsvData200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationImportCsvData200Response'
      deprecated: false
  /v1/Organizations/{id}/reports/profit-and-loss:
    get:
      tags:
        - Organization
      summary: Generate category profit and loss report
      operationId: Organization_getProfitAndLossReport
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: from date
          name: from
          in: query
          required: true
          schema:
            type: string
        - description: from date
          name: to
          in: query
          required: true
          schema:
            type: string
        - description: Additional report generation options
          name: options
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetProfitAndLossReportResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetProfitAndLossReport200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetProfitAndLossReport200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetProfitAndLossReport200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationGetProfitAndLossReport200Response
      deprecated: false
  /v1/Organizations/{id}/reports/balance-sheet:
    get:
      tags:
        - Organization
      summary: Generate balance sheet balance sheet
      operationId: Organization_getBalanceSheet
      parameters:
        - description: Organization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: from date
          name: from
          in: query
          required: true
          schema:
            type: string
        - description: from date
          name: to
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGetBalanceSheetResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetBalanceSheet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationGetBalanceSheet200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetBalanceSheet200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrganizationGetBalanceSheet200Response'
      deprecated: false
  /v1/Shopify/{id}:
    delete:
      tags:
        - Shopify
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Shopify_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopifyDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopifyDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopifyDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopifyDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopifyDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Shopify
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Shopify_patchAttributesById
      parameters:
        - description: Shopify id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopify'
          application/xml:
            schema:
              $ref: '#/components/schemas/Shopify'
          text/xml:
            schema:
              $ref: '#/components/schemas/Shopify'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopify'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopify'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopify'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopify'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopify'
      deprecated: false
  /v1/Shopify/{id}/order:
    post:
      tags:
        - Shopify
      summary: ''
      operationId: Shopify_createOrder
      parameters:
        - description: Shopify id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopify'
          application/xml:
            schema:
              $ref: '#/components/schemas/Shopify'
          text/xml:
            schema:
              $ref: '#/components/schemas/Shopify'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Shopify/{id}/import:
    post:
      tags:
        - Shopify
      summary: Import integration data in excel format
      operationId: Shopify_importIntegrationData
      parameters:
        - description: Shopify id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopifyImportIntegrationDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopifyImportIntegrationData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopifyImportIntegrationData200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopifyImportIntegrationData200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopifyImportIntegrationData200Response'
      deprecated: false
  /v1/Shopify/incoming:
    post:
      tags:
        - Shopify
      operationId: Shopify_incomingPost
      parameters:
        - description: Shopify token used to authenticate the source of req.
          name: shopifyToken
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Shopify/app:
    get:
      tags:
        - Shopify
      operationId: Shopify_getApp
      parameters:
        - description: Shop domain
          name: shop
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopifyGetAppResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopifyGetApp200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopifyGetApp200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopifyGetApp200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopifyGetApp200Response'
      deprecated: false
  /v1/Shopify/{id}/orders/document:
    get:
      tags:
        - Shopify
      operationId: Shopify_getOrderDocument
      parameters:
        - description: Shopify id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Stripe/{id}:
    delete:
      tags:
        - Stripe
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Stripe_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StripeDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/StripeDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/StripeDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/StripeDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Stripe
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Stripe_updateAttributes
      parameters:
        - description: Stripe id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stripe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stripe'
          application/xml:
            schema:
              $ref: '#/components/schemas/Stripe'
          text/xml:
            schema:
              $ref: '#/components/schemas/Stripe'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stripe'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stripe'
            text/xml:
              schema:
                $ref: '#/components/schemas/Stripe'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Stripe'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Stripe'
      deprecated: false
  /v1/Stripe/{id}/incoming:
    post:
      tags:
        - Stripe
      operationId: Stripe_createIncoming
      parameters:
        - description: Stripe id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/TicketingHub/{id}/replace:
    post:
      tags:
        - TicketingHub
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: TicketingHub_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/TicketingHub'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
      deprecated: false
  /v1/TicketingHub/{id}:
    put:
      tags:
        - TicketingHub
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: TicketingHub_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/TicketingHub'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
      deprecated: false
    delete:
      tags:
        - TicketingHub
      summary: Delete a model instance by {{id}} from the data source.
      operationId: TicketingHub_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingHubDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TicketingHubDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/TicketingHubDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHubDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHubDeleteById200Response'
      deprecated: false
  /v1/Currencies:
    get:
      tags:
        - Currency
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Currency_listByFilter
      parameters:
        - description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyListByFilterResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrencyListByFilter200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CurrencyListByFilter200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CurrencyListByFilter200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CurrencyListByFilter200Response'
      deprecated: false
  /v1/Accounts/{id}/accessTokens/{fk}:
    delete:
      tags:
        - Account
      summary: Delete a related item by id for accessTokens.
      operationId: Account_deleteAccessTokenById
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Foreign key for accessTokens
          name: fk
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/{id}/accessTokens:
    get:
      tags:
        - Account
      summary: Queries accessTokens of Account.
      operationId: Account_queryAccessTokens
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountQueryAccessTokensResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountQueryAccessTokens200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountQueryAccessTokens200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountQueryAccessTokens200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountQueryAccessTokens200Response'
      deprecated: false
    post:
      tags:
        - Account
      summary: Creates a new instance in accessTokens of this model.
      operationId: Account_createAccessToken
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccessToken'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccessToken'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
      deprecated: false
  /v1/Accounts/{id}/usages:
    get:
      tags:
        - Account
      summary: Queries usages of Account.
      operationId: Account_queryUsages
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountQueryUsagesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountQueryUsages200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountQueryUsages200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountQueryUsages200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountQueryUsages200Response'
      deprecated: false
  /v1/Accounts/{id}/usages/count:
    get:
      tags:
        - Account
      summary: Counts usages of Account.
      operationId: Account_countUsages
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCountUsagesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountCountUsages200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountCountUsages200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountCountUsages200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountCountUsages200Response'
      deprecated: false
  /v1/Accounts/{id}/organizations:
    get:
      tags:
        - Account
      summary: Queries organizations of Account.
      operationId: Account_queryOrganizations
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountQueryOrganizationsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountQueryOrganizations200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountQueryOrganizations200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountQueryOrganizations200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountQueryOrganizations200Response'
      deprecated: false
    post:
      tags:
        - Account
      summary: Creates a new instance in organizations of this model.
      operationId: Account_createInstanceInOrganizations
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Organization'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Organization'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Organization'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
  /v1/Accounts/{id}/organizations/count:
    get:
      tags:
        - Account
      summary: Counts organizations of Account.
      operationId: Account_countOrganizations
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCountOrganizationsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountCountOrganizations200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountCountOrganizations200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountCountOrganizations200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountCountOrganizations200Response'
      deprecated: false
  /v1/Accounts/{id}/logs:
    get:
      tags:
        - Account
      summary: Queries logs of Account.
      operationId: Account_queryLogs
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountQueryLogsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountQueryLogs200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountQueryLogs200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountQueryLogs200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountQueryLogs200Response'
      deprecated: false
  /v1/Accounts/{id}/logs/count:
    get:
      tags:
        - Account
      summary: Counts logs of Account.
      operationId: Account_countLogs
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCountLogsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountCountLogs200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountCountLogs200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountCountLogs200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountCountLogs200Response'
      deprecated: false
  /v1/Accounts:
    post:
      tags:
        - Account
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Account_createNewInstance
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Account'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Account'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Account'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Account'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
  /v1/Accounts/{id}:
    get:
      tags:
        - Account
      summary: Find a model instance by {{id}} from the data source.
      operationId: Account_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Account'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
    patch:
      tags:
        - Account
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Account_patchAttributesById
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          application/xml:
            schema:
              $ref: '#/components/schemas/Account'
          text/xml:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Account'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
  /v1/Accounts/login:
    post:
      tags:
        - Account
      summary: Login a user with username/email and password.
      operationId: Account_userLogin
      parameters:
        - description: >-
            Related objects to include in the response. See the description of
            return value for more details.
          name: include
          in: query
          required: false
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Account.loginCredentials'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserLoginResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountUserLogin200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountUserLogin200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountUserLogin200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountUserLogin200Response'
      deprecated: false
  /v1/Accounts/logout:
    post:
      tags:
        - Account
      summary: Logout a user with access token.
      operationId: Account_logoutUser
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/{id}/verify:
    post:
      tags:
        - Account
      summary: Trigger user's identity verification with configured verifyOptions
      operationId: Account_triggerIdentityVerification
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/confirm:
    get:
      tags:
        - Account
      summary: Confirm a user registration with identity verification token.
      operationId: Account_confirmUserRegistration
      parameters:
        - name: uid
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/reset:
    post:
      tags:
        - Account
      summary: Reset password for a user with email.
      operationId: Account_resetPasswordByEmail
      requestBody:
        $ref: '#/components/requestBodies/Account.loginCredentials'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/change-password:
    post:
      tags:
        - Account
      summary: Change a user's password.
      operationId: Account_changePassword
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountChangePasswordRequest'
        required: true
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/reset-password:
    post:
      tags:
        - Account
      summary: Reset user's password via a password-reset token.
      operationId: Account_resetPasswordViaToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountResetPasswordViaTokenRequest'
        required: true
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/is-unique:
    get:
      tags:
        - Account
      summary: Check if e-mail already exists.
      operationId: Account_checkEmailUnique
      parameters:
        - description: E-mail to check uniqueness against.
          name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCheckEmailUniqueResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountCheckEmailUnique200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountCheckEmailUnique200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountCheckEmailUnique200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountCheckEmailUnique200Response'
      deprecated: false
  /v1/Accounts/impersonate:
    post:
      tags:
        - Account
      summary: Login as child account
      operationId: Account_impersonateChild
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountImpersonateChildRequest'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
      deprecated: false
  /v1/Accounts/{id}/is-verified:
    get:
      tags:
        - Account
      summary: Check if account is verified.
      operationId: Account_checkVerifiedStatus
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCheckVerifiedStatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountCheckVerifiedStatus200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountCheckVerifiedStatus200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountCheckVerifiedStatus200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountCheckVerifiedStatus200Response'
      deprecated: false
  /v1/Accounts/authorized:
    get:
      tags:
        - Account
      summary: Checks if user is authorized and returns user
      operationId: Account_checkAuthorizationAndReturnUser
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AccountCheckAuthorizationAndReturnUserResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountCheckAuthorizationAndReturnUser200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountCheckAuthorizationAndReturnUser200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountCheckAuthorizationAndReturnUser200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountCheckAuthorizationAndReturnUser200Response
      deprecated: false
  /v1/Accounts/{id}/send-verification:
    post:
      tags:
        - Account
      summary: Request another verification email
      operationId: Account_requestVerificationEmail
      parameters:
        - description: Account id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRequestVerificationEmailResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountRequestVerificationEmail200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountRequestVerificationEmail200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountRequestVerificationEmail200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountRequestVerificationEmail200Response
      deprecated: false
  /v1/Accounts/identity-verification:
    get:
      tags:
        - Account
      summary: Returns identity hash for user
      operationId: Account_getIdentityHash
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGetIdentityHashResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountGetIdentityHash200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountGetIdentityHash200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountGetIdentityHash200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountGetIdentityHash200Response'
      deprecated: false
  /v1/Accounts/subscription:
    get:
      tags:
        - Account
      summary: Retrieve Account's active subscription
      operationId: Account_getActiveSubscription
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGetActiveSubscriptionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountGetActiveSubscription200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountGetActiveSubscription200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountGetActiveSubscription200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountGetActiveSubscription200Response'
      deprecated: false
  /v1/Recurrences/{id}:
    get:
      tags:
        - Recurrence
      summary: Find a model instance by {{id}} from the data source.
      operationId: Recurrence_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
    put:
      tags:
        - Recurrence
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Recurrence_updateAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Recurrence'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
    delete:
      tags:
        - Recurrence
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Recurrence_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurrenceDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RecurrenceDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/RecurrenceDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RecurrenceDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RecurrenceDeleteById200Response'
      deprecated: false
  /v1/Recurrences/{id}/replace:
    post:
      tags:
        - Recurrence
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Recurrence_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Recurrence'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
  /v1/Recurrences/cron:
    get:
      tags:
        - Recurrence
      summary: ''
      operationId: Recurrence_getCron
      parameters:
        - description: ''
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurrenceGetCronResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RecurrenceGetCron200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/RecurrenceGetCron200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RecurrenceGetCron200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RecurrenceGetCron200Response'
      deprecated: false
  /v1/Payments/{id}:
    get:
      tags:
        - Payment
      summary: Find a model instance by {{id}} from the data source.
      operationId: Payment_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
    put:
      tags:
        - Payment
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Payment_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
    delete:
      tags:
        - Payment
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Payment_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PaymentDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PaymentDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PaymentDeleteById200Response'
      deprecated: false
  /v1/Payments/{id}/replace:
    post:
      tags:
        - Payment
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Payment_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
  /v1/Defaults/{id}:
    get:
      tags:
        - Default
      summary: Find a model instance by {{id}} from the data source.
      operationId: Default_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default'
            application/xml:
              schema:
                $ref: '#/components/schemas/Default'
            text/xml:
              schema:
                $ref: '#/components/schemas/Default'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Default'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Default'
      deprecated: false
    delete:
      tags:
        - Default
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Default_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DefaultDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DefaultDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DefaultDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Default
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Default_patchAttributesById
      parameters:
        - description: Default id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Default'
          application/xml:
            schema:
              $ref: '#/components/schemas/Default'
          text/xml:
            schema:
              $ref: '#/components/schemas/Default'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default'
            application/xml:
              schema:
                $ref: '#/components/schemas/Default'
            text/xml:
              schema:
                $ref: '#/components/schemas/Default'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Default'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Default'
      deprecated: false
  /v1/Companies:
    get:
      tags:
        - Company
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Company_findAllInstances
      parameters:
        - description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyFindAllInstancesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyFindAllInstances200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyFindAllInstances200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CompanyFindAllInstances200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CompanyFindAllInstances200Response'
      deprecated: false
  /v1/Companies/search:
    get:
      tags:
        - Company
      summary: ''
      operationId: Company_searchGet
      parameters:
        - description: ''
          name: term
          in: query
          required: true
          schema:
            type: string
        - description: Narrowing search for more efficient queries.
          name: country
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanySearchGetResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanySearchGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanySearchGet200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CompanySearchGet200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CompanySearchGet200Response'
      deprecated: false
  /v1/Subscriptions/{id}/whiteLabel:
    post:
      tags:
        - Subscription
      summary: Creates a new instance in whiteLabel of this model.
      operationId: Subscription_createWhiteLabelInstance
      parameters:
        - description: Subscription id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          application/xml:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          text/xml:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
      deprecated: false
  /v1/Subscriptions:
    get:
      tags:
        - Subscription
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Subscription_findAllByFilter
      parameters:
        - description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionFindAllByFilterResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionFindAllByFilter200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionFindAllByFilter200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionFindAllByFilter200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionFindAllByFilter200Response'
      deprecated: false
  /v1/Subscriptions/client-token:
    get:
      tags:
        - Subscription
      summary: Get Braintree client token
      operationId: Subscription_getClientToken
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionGetClientTokenResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionGetClientToken200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionGetClientToken200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionGetClientToken200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionGetClientToken200Response'
      deprecated: false
  /v1/Subscriptions/cron:
    get:
      tags:
        - Subscription
      summary: ''
      operationId: Subscription_getCron
      parameters:
        - description: ''
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: If provided limits cron to one subscription
          name: subscriptionId
          in: query
          required: false
          schema:
            type: string
        - description: Runs without sending email to customer
          name: skipSendingEmails
          in: query
          required: false
          schema:
            type: boolean
        - description: Runs without issuing invoice for usage
          name: skipIssuingInvoices
          in: query
          required: false
          schema:
            type: boolean
        - description: Checks usage but does not commit data or send emails
          name: dryRun
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionGetCronResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionGetCron200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionGetCron200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionGetCron200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionGetCron200Response'
      deprecated: false
  /v1/Subscriptions/{id}/payment-method:
    get:
      tags:
        - Subscription
      summary: Get Payment method
      operationId: Subscription_getPaymentMethod
      parameters:
        - description: Subscription id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionGetPaymentMethodResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionGetPaymentMethod200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionGetPaymentMethod200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionGetPaymentMethod200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionGetPaymentMethod200Response'
      deprecated: false
    post:
      tags:
        - Subscription
      summary: Add/Update payment method
      operationId: Subscription_addPaymentMethod
      parameters:
        - description: Subscription id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionAddPaymentMethodRequest'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionAddPaymentMethodResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAddPaymentMethod200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAddPaymentMethod200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionAddPaymentMethod200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionAddPaymentMethod200Response'
      deprecated: false
  /v1/Plans:
    get:
      tags:
        - Plan
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Plan_findAllByFilter
      parameters:
        - description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanFindAllByFilterResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlanFindAllByFilter200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PlanFindAllByFilter200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PlanFindAllByFilter200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PlanFindAllByFilter200Response'
      deprecated: false
  /v1/WhiteLabels:
    post:
      tags:
        - WhiteLabel
      summary: Create a new instance of the model and persist it into the data source.
      operationId: WhiteLabel_createNewInstance
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_WhiteLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_WhiteLabel'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_WhiteLabel'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_WhiteLabel'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
      deprecated: false
    get:
      tags:
        - WhiteLabel
      summary: Find all instances of the model matched by filter from the data source.
      operationId: WhiteLabel_findAll
      parameters:
        - description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhiteLabelFindAllResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabelFindAll200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabelFindAll200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabelFindAll200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabelFindAll200Response'
      deprecated: false
  /v1/WhiteLabels/{id}:
    patch:
      tags:
        - WhiteLabel
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: WhiteLabel_updateAttributesById
      parameters:
        - description: WhiteLabel id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          application/xml:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          text/xml:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
      deprecated: false
  /v1/containers/{container}/download/{file}:
    get:
      tags:
        - container
      operationId: Container_downloadFile
      parameters:
        - name: container
          in: path
          required: true
          schema:
            type: string
        - name: file
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Messages/contact-sales:
    post:
      tags:
        - Message
      summary: ''
      operationId: Message_submitContactForm
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageSubmitContactFormRequest'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageSubmitContactFormResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageSubmitContactForm200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/MessageSubmitContactForm200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/MessageSubmitContactForm200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/MessageSubmitContactForm200Response'
      deprecated: false
  /v1/BusinessPremises/{id}/electronicDevices:
    post:
      tags:
        - BusinessPremise
      summary: Creates a new instance in electronicDevices of this model.
      operationId: BusinessPremise_createElectronicDevicesInstance
      parameters:
        - description: BusinessPremise id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/_new_ElectronicDevice'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
      deprecated: false
  /v1/BusinessPremises/{id}:
    delete:
      tags:
        - BusinessPremise
      summary: Delete a model instance by {{id}} from the data source.
      operationId: BusinessPremise_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPremiseDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremiseDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremiseDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremiseDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremiseDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - BusinessPremise
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: BusinessPremise_updateAttributesById
      parameters:
        - description: BusinessPremise id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPremise'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessPremise'
          application/xml:
            schema:
              $ref: '#/components/schemas/BusinessPremise'
          text/xml:
            schema:
              $ref: '#/components/schemas/BusinessPremise'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            application/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            text/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
      deprecated: false
  /v1/AtcudSeries/{id}/organization:
    get:
      tags:
        - AtcudSeries
      summary: Fetches belongsTo relation organization.
      operationId: AtcudSeries_getOrganizationBelongsTo
      parameters:
        - description: AtcudSeries id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: refresh
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
  /v1/AtcudSeries:
    post:
      tags:
        - AtcudSeries
      summary: Create a new instance of the model and persist it into the data source.
      operationId: AtcudSeries_createNewInstance
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_AtcudSeries'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_AtcudSeries'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_AtcudSeries'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_AtcudSeries'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
    get:
      tags:
        - AtcudSeries
      summary: Find all instances of the model matched by filter from the data source.
      operationId: AtcudSeries_findAllByFilter
      parameters:
        - description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeriesFindAllByFilterResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeriesFindAllByFilter200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeriesFindAllByFilter200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeriesFindAllByFilter200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeriesFindAllByFilter200Response'
      deprecated: false
  /v1/AtcudSeries/{id}:
    get:
      tags:
        - AtcudSeries
      summary: Find a model instance by {{id}} from the data source.
      operationId: AtcudSeries_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
    put:
      tags:
        - AtcudSeries
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: AtcudSeries_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/AtcudSeries'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
    delete:
      tags:
        - AtcudSeries
      summary: Delete a model instance by {{id}} from the data source.
      operationId: AtcudSeries_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeriesDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeriesDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeriesDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeriesDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeriesDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - AtcudSeries
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: AtcudSeries_updateAttributes
      parameters:
        - description: AtcudSeries id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtcudSeries'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AtcudSeries'
          application/xml:
            schema:
              $ref: '#/components/schemas/AtcudSeries'
          text/xml:
            schema:
              $ref: '#/components/schemas/AtcudSeries'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
  /v1/AtcudSeries/{id}/replace:
    post:
      tags:
        - AtcudSeries
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: AtcudSeries_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/AtcudSeries'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
  /v1/AtcudSeries/findOne:
    get:
      tags:
        - AtcudSeries
      summary: Find first instance of the model matched by filter from the data source.
      operationId: AtcudSeries_findFirstByFilter
      parameters:
        - description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
  /v1/AtcudSeries/count:
    get:
      tags:
        - AtcudSeries
      summary: Count instances of the model matched by where from the data source.
      operationId: AtcudSeries_countInstancesByWhere
      parameters:
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeriesCountInstancesByWhereResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/AtcudSeriesCountInstancesByWhere200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/AtcudSeriesCountInstancesByWhere200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AtcudSeriesCountInstancesByWhere200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AtcudSeriesCountInstancesByWhere200Response
      deprecated: false
  /v1/Countries:
    get:
      tags:
        - Country
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Country_findAllByFilter
      parameters:
        - description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryFindAllByFilterResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CountryFindAllByFilter200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CountryFindAllByFilter200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CountryFindAllByFilter200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CountryFindAllByFilter200Response'
      deprecated: false
  /v1/Countries/match:
    get:
      tags:
        - Country
      summary: >-
        Matches the sent term against the available countries, to try and find a
        match
      operationId: Country_matchTermAgainstAvailable
      parameters:
        - description: The term to match the country agains
          name: term
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryMatchTermAgainstAvailableResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CountryMatchTermAgainstAvailable200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CountryMatchTermAgainstAvailable200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/CountryMatchTermAgainstAvailable200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/CountryMatchTermAgainstAvailable200Response
      deprecated: false
  /v1/tracking/webhook:
    post:
      tags:
        - Tracking
      summary: ''
      operationId: Tracking_webhookNotification
      parameters:
        - description: Source of webhook call
          name: source
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Account.loginCredentials'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingWebhookNotificationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrackingWebhookNotification200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/TrackingWebhookNotification200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TrackingWebhookNotification200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TrackingWebhookNotification200Response'
      deprecated: false
  /v1/ElectronicDevices/{id}:
    patch:
      tags:
        - ElectronicDevice
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: ElectronicDevice_patchAttributesById
      parameters:
        - description: ElectronicDevice id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectronicDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ElectronicDevice'
          application/xml:
            schema:
              $ref: '#/components/schemas/ElectronicDevice'
          text/xml:
            schema:
              $ref: '#/components/schemas/ElectronicDevice'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
      deprecated: false
  /v1/Certificates/expiry-cron:
    get:
      tags:
        - Certificate
      summary: ''
      operationId: Certificate_getExpiryCron
      parameters:
        - description: ''
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateGetExpiryCronResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CertificateGetExpiryCron200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CertificateGetExpiryCron200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CertificateGetExpiryCron200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CertificateGetExpiryCron200Response'
      deprecated: false
  /v1/geoip/locate:
    post:
      tags:
        - GeoIP
      summary: Parse IP to geo location
      operationId: GeoIp_parseIpToGeoLocation
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeoIpParseIpToGeoLocationRequest'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoIpParseIpToGeoLocationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeoIpParseIpToGeoLocation200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/GeoIpParseIpToGeoLocation200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/GeoIpParseIpToGeoLocation200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/GeoIpParseIpToGeoLocation200Response'
      deprecated: false
  /v1/AccountOrganizations/{id}:
    delete:
      tags:
        - AccountOrganization
      summary: Delete a model instance by {{id}} from the data source.
      operationId: AccountOrganization_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountOrganizationDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountOrganizationDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountOrganizationDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountOrganizationDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountOrganizationDeleteById200Response'
      deprecated: false
  /v1/AccountOrganizations/{id}/accept:
    post:
      tags:
        - AccountOrganization
      summary: Confirm invitation to join organization
      operationId: AccountOrganization_confirmInvitation
      parameters:
        - description: AccountOrganization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationConfirmInvitationResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationConfirmInvitation200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationConfirmInvitation200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationConfirmInvitation200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationConfirmInvitation200Response
      deprecated: false
  /v1/AccountOrganizations/{id}/reject:
    post:
      tags:
        - AccountOrganization
      summary: Deny invitation to join organization
      operationId: AccountOrganization_rejectInvitation
      parameters:
        - description: AccountOrganization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationRejectInvitationResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationRejectInvitation200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationRejectInvitation200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationRejectInvitation200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationRejectInvitation200Response
      deprecated: false
  /v1/AccountOrganizations/{id}/enable:
    post:
      tags:
        - AccountOrganization
      summary: Enable users access to organization
      operationId: AccountOrganization_enableAccess
      parameters:
        - description: AccountOrganization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountOrganizationEnableAccessResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationEnableAccess200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationEnableAccess200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationEnableAccess200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationEnableAccess200Response
      deprecated: false
  /v1/AccountOrganizations/{id}/disable:
    post:
      tags:
        - AccountOrganization
      summary: Disable users access to organization
      operationId: AccountOrganization_disableAccess
      parameters:
        - description: AccountOrganization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountOrganizationDisableAccessResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationDisableAccess200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationDisableAccess200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationDisableAccess200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/AccountOrganizationDisableAccess200Response
      deprecated: false
  /v1/AccountOrganizations/{id}/change-role:
    post:
      tags:
        - AccountOrganization
      operationId: AccountOrganization_changeRole
      parameters:
        - description: AccountOrganization id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountOrganizationChangeRoleRequest'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountOrganizationChangeRoleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountOrganizationChangeRole200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountOrganizationChangeRole200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccountOrganizationChangeRole200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccountOrganizationChangeRole200Response'
      deprecated: false
  /v1/FileMeta/{id}:
    delete:
      tags:
        - FileMeta
      summary: Delete a model instance by {{id}} from the data source.
      operationId: FileMeta_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FileMetaDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/FileMetaDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/FileMetaDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/FileMetaDeleteById200Response'
      deprecated: false
  /v1/Units/{id}:
    delete:
      tags:
        - Unit
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Unit_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnitDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UnitDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/UnitDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/UnitDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Unit
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Unit_updateAttributes
      parameters:
        - description: Unit id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Unit'
          application/xml:
            schema:
              $ref: '#/components/schemas/Unit'
          text/xml:
            schema:
              $ref: '#/components/schemas/Unit'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            application/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            text/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Unit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Unit'
      deprecated: false
  /v1/Units/{id}/last-doc-number:
    get:
      tags:
        - Unit
      summary: ''
      operationId: Unit_getLastDocNumber
      parameters:
        - description: Unit id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: The type of document
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: Incoming document
          name: incoming
          in: query
          required: false
          schema:
            type: boolean
        - description: Date if not in current year
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitGetLastDocNumberResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnitGetLastDocNumber200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UnitGetLastDocNumber200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/UnitGetLastDocNumber200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/UnitGetLastDocNumber200Response'
      deprecated: false
  /v1/Units/{id}/next-doc-number:
    get:
      tags:
        - Unit
      summary: ''
      operationId: Unit_getNextDocNumber
      parameters:
        - description: Unit id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: The type of document
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: Incoming document
          name: incoming
          in: query
          required: false
          schema:
            type: boolean
        - description: Date if not in current year
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitGetNextDocNumberResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnitGetNextDocNumber200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UnitGetNextDocNumber200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/UnitGetNextDocNumber200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/UnitGetNextDocNumber200Response'
      deprecated: false
  /v1/Units/{id}/upload-image:
    post:
      tags:
        - Unit
      summary: ''
      operationId: Unit_uploadImage
      parameters:
        - description: Unit id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitUploadImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnitUploadImage200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UnitUploadImage200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/UnitUploadImage200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/UnitUploadImage200Response'
      deprecated: false
  /v1/Units/{id}/images:
    post:
      tags:
        - Unit
      summary: ''
      operationId: Unit_uploadImage
      parameters:
        - description: Unit id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitUploadImage200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnitUploadImage200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UnitUploadImage200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/UnitUploadImage200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/UnitUploadImage200Response'
      deprecated: false
    delete:
      tags:
        - Unit
      summary: ''
      operationId: Unit_deleteImageById
      parameters:
        - description: Unit id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Type of image to delete
          name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDeleteImageByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnitDeleteImageById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UnitDeleteImageById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/UnitDeleteImageById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/UnitDeleteImageById200Response'
      deprecated: false
    get:
      tags:
        - Unit
      summary: ''
      operationId: Unit_findImagesById
      parameters:
        - description: Unit id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitFindImagesByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnitFindImagesById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UnitFindImagesById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/UnitFindImagesById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/UnitFindImagesById200Response'
      deprecated: false
  /v1/Units/{id}/delete-image:
    delete:
      tags:
        - Unit
      summary: ''
      operationId: Unit_deleteImage
      parameters:
        - description: Unit id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Type of image to delete
          name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDeleteImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnitDeleteImage200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UnitDeleteImage200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/UnitDeleteImage200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/UnitDeleteImage200Response'
      deprecated: false
  /v1/Units/{id}/download-image:
    get:
      tags:
        - Unit
      summary: ''
      operationId: Unit_downloadImage
      parameters:
        - description: Unit id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: ''
          name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDownloadImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UnitDownloadImage200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UnitDownloadImage200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/UnitDownloadImage200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/UnitDownloadImage200Response'
      deprecated: false
  /v1/Categories/{id}:
    get:
      tags:
        - Category
      summary: Find a model instance by {{id}} from the data source.
      operationId: Category_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/xml:
              schema:
                $ref: '#/components/schemas/Category'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Category'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Category'
      deprecated: false
    put:
      tags:
        - Category
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Category_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Category'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/xml:
              schema:
                $ref: '#/components/schemas/Category'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Category'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Category'
      deprecated: false
    delete:
      tags:
        - Category
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Category_removeById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryRemoveByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CategoryRemoveById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CategoryRemoveById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CategoryRemoveById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CategoryRemoveById200Response'
      deprecated: false
  /v1/Categories/{id}/replace:
    post:
      tags:
        - Category
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Category_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Category'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/xml:
              schema:
                $ref: '#/components/schemas/Category'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Category'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Category'
      deprecated: false
  /v1/DocumentCategories/{id}/replace:
    post:
      tags:
        - DocumentCategory
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: DocumentCategory_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/DocumentCategory'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      deprecated: false
  /v1/DocumentCategories/{id}:
    put:
      tags:
        - DocumentCategory
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: DocumentCategory_updateAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/DocumentCategory'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      deprecated: false
    delete:
      tags:
        - DocumentCategory
      summary: Delete a model instance by {{id}} from the data source.
      operationId: DocumentCategory_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategoryDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategoryDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategoryDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategoryDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategoryDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - DocumentCategory
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: DocumentCategory_updateAttributesById
      parameters:
        - description: DocumentCategory id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentCategory'
          application/xml:
            schema:
              $ref: '#/components/schemas/DocumentCategory'
          text/xml:
            schema:
              $ref: '#/components/schemas/DocumentCategory'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      deprecated: false
  /v1/PriceLists/{id}/items:
    get:
      tags:
        - PriceList
      summary: Queries items of PriceList.
      operationId: PriceList_queryItems
      parameters:
        - description: PriceList id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListQueryItemsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceListQueryItems200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceListQueryItems200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceListQueryItems200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceListQueryItems200Response'
      deprecated: false
  /v1/PriceLists/{id}/items/count:
    get:
      tags:
        - PriceList
      summary: Counts items of PriceList.
      operationId: PriceList_countItems
      parameters:
        - description: PriceList id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListCountItemsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceListCountItems200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceListCountItems200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceListCountItems200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceListCountItems200Response'
      deprecated: false
  /v1/PriceLists/{id}/prices:
    get:
      tags:
        - PriceList
      summary: Queries prices of PriceList.
      operationId: PriceList_queryPrices
      parameters:
        - description: PriceList id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListQueryPricesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceListQueryPrices200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceListQueryPrices200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceListQueryPrices200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceListQueryPrices200Response'
      deprecated: false
    post:
      tags:
        - PriceList
      summary: Creates a new instance in prices of this model.
      operationId: PriceList_createNewInstanceInPrices
      parameters:
        - description: PriceList id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Price'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Price'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Price'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Price'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
            application/xml:
              schema:
                $ref: '#/components/schemas/Price'
            text/xml:
              schema:
                $ref: '#/components/schemas/Price'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Price'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Price'
      deprecated: false
  /v1/PriceLists/{id}/prices/count:
    get:
      tags:
        - PriceList
      summary: Counts prices of PriceList.
      operationId: PriceList_countPrices
      parameters:
        - description: PriceList id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Criteria to match model instances
          name: where
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListCountPricesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceListCountPrices200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceListCountPrices200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceListCountPrices200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceListCountPrices200Response'
      deprecated: false
  /v1/PriceLists/{id}:
    get:
      tags:
        - PriceList
      summary: Find a model instance by {{id}} from the data source.
      operationId: PriceList_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
      deprecated: false
    delete:
      tags:
        - PriceList
      summary: Delete a model instance by {{id}} from the data source.
      operationId: PriceList_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceListDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceListDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceListDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceListDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - PriceList
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: PriceList_updateAttributesById
      parameters:
        - description: PriceList id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PriceList'
          application/xml:
            schema:
              $ref: '#/components/schemas/PriceList'
          text/xml:
            schema:
              $ref: '#/components/schemas/PriceList'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
      deprecated: false
  /v1/Prices/{id}:
    delete:
      tags:
        - Price
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Price_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Price
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Price_patchAttributes
      parameters:
        - description: Price id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Price'
          application/xml:
            schema:
              $ref: '#/components/schemas/Price'
          text/xml:
            schema:
              $ref: '#/components/schemas/Price'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
            application/xml:
              schema:
                $ref: '#/components/schemas/Price'
            text/xml:
              schema:
                $ref: '#/components/schemas/Price'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Price'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Price'
      deprecated: false
  /v1/Warehouses/{id}:
    get:
      tags:
        - Warehouse
      summary: Find a model instance by {{id}} from the data source.
      operationId: Warehouse_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
    put:
      tags:
        - Warehouse
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Warehouse_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Warehouse'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
    delete:
      tags:
        - Warehouse
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Warehouse_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WarehouseDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/WarehouseDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WarehouseDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WarehouseDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Warehouse
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Warehouse_updateAttributes
      parameters:
        - description: Warehouse id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Warehouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Warehouse'
          application/xml:
            schema:
              $ref: '#/components/schemas/Warehouse'
          text/xml:
            schema:
              $ref: '#/components/schemas/Warehouse'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
  /v1/Warehouses/{id}/replace:
    post:
      tags:
        - Warehouse
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Warehouse_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Warehouse'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
  /v1/Webhooks/{id}:
    get:
      tags:
        - Webhook
      summary: Find a model instance by {{id}} from the data source.
      operationId: Webhook_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
    put:
      tags:
        - Webhook
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Webhook_updateAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Webhook'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
    delete:
      tags:
        - Webhook
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Webhook_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebhookDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebhookDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WebhookDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WebhookDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Webhook
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Webhook_updateAttributesById
      parameters:
        - description: Webhook id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/xml:
            schema:
              $ref: '#/components/schemas/Webhook'
          text/xml:
            schema:
              $ref: '#/components/schemas/Webhook'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
  /v1/Webhooks/{id}/replace:
    post:
      tags:
        - Webhook
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Webhook_replaceAttributesById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Webhook'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
  /v1/Typless/webhook:
    post:
      tags:
        - Typless
      summary: ''
      operationId: Typless_createWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TyplessCreateWebhookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TyplessCreateWebhookRequest1'
          application/xml:
            schema:
              $ref: '#/components/schemas/TyplessCreateWebhookRequest2'
          text/xml:
            schema:
              $ref: '#/components/schemas/TyplessCreateWebhookRequest3'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Orders/{id}:
    get:
      tags:
        - Order
      summary: Find a model instance by {{id}} from the data source.
      operationId: Order_findById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            text/xml:
              schema:
                $ref: '#/components/schemas/Order'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Order'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Order'
      deprecated: false
  /v1/Orders/{id}/documents/create:
    post:
      tags:
        - Order
      summary: ''
      operationId: Order_createDocument
      parameters:
        - description: Order id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
        - description: Type of document to create
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: >-
            Force set if document should be sent, if not provided integration
            setting is used.
          name: send
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreateDocumentResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderCreateDocument200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderCreateDocument200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrderCreateDocument200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrderCreateDocument200Response'
      deprecated: false
  /v1/Magento1/{id}:
    delete:
      tags:
        - Magento1
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Magento1_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magento1DeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Magento1DeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/Magento1DeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Magento1DeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Magento1DeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Magento1
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Magento1_updateAttributesById
      parameters:
        - description: Magento1 id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Magento1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Magento1'
          application/xml:
            schema:
              $ref: '#/components/schemas/Magento1'
          text/xml:
            schema:
              $ref: '#/components/schemas/Magento1'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magento1'
            application/xml:
              schema:
                $ref: '#/components/schemas/Magento1'
            text/xml:
              schema:
                $ref: '#/components/schemas/Magento1'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Magento1'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Magento1'
      deprecated: false
  /v1/Magento1/{id}/order:
    post:
      tags:
        - Magento1
      summary: ''
      operationId: Magento1_createOrder
      parameters:
        - description: Magento1 id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Magento1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Magento1'
          application/xml:
            schema:
              $ref: '#/components/schemas/Magento1'
          text/xml:
            schema:
              $ref: '#/components/schemas/Magento1'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Magento1/{id}/import:
    post:
      tags:
        - Magento1
      summary: Import integration data in excel format
      operationId: Magento1_importIntegrationData
      parameters:
        - description: Magento1 id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magento1ImportIntegrationDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Magento1ImportIntegrationData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/Magento1ImportIntegrationData200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Magento1ImportIntegrationData200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Magento1ImportIntegrationData200Response'
      deprecated: false
  /v1/Woocommerce/{id}:
    delete:
      tags:
        - Woocommerce
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Woocommerce_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WoocommerceDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WoocommerceDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/WoocommerceDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WoocommerceDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WoocommerceDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Woocommerce
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Woocommerce_updateAttributesById
      parameters:
        - description: Woocommerce id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          application/xml:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          text/xml:
            schema:
              $ref: '#/components/schemas/Woocommerce'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Woocommerce'
      deprecated: false
  /v1/Woocommerce/{id}/order:
    post:
      tags:
        - Woocommerce
      summary: ''
      operationId: Woocommerce_createOrderById
      parameters:
        - description: Woocommerce id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          application/xml:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          text/xml:
            schema:
              $ref: '#/components/schemas/Woocommerce'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Woocommerce/{id}/import:
    post:
      tags:
        - Woocommerce
      summary: Import integration data in excel format
      operationId: Woocommerce_importIntegrationData
      parameters:
        - description: Woocommerce id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WoocommerceImportIntegrationDataResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/WoocommerceImportIntegrationData200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/WoocommerceImportIntegrationData200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/WoocommerceImportIntegrationData200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/WoocommerceImportIntegrationData200Response
      deprecated: false
  /v1/CustomIntegrations/{id}:
    delete:
      tags:
        - CustomIntegration
      summary: Delete a model instance by {{id}} from the data source.
      operationId: CustomIntegration_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIntegrationDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegrationDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegrationDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegrationDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegrationDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - CustomIntegration
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: CustomIntegration_patchAttributes
      parameters:
        - description: CustomIntegration id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
      deprecated: false
  /v1/CustomIntegrations/{id}/order:
    post:
      tags:
        - CustomIntegration
      summary: ''
      operationId: CustomIntegration_createOrder
      parameters:
        - description: CustomIntegration id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/CustomIntegrations/{id}/import:
    post:
      tags:
        - CustomIntegration
      summary: Import integration data in excel format
      operationId: CustomIntegration_importExcelData
      parameters:
        - description: CustomIntegration id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIntegrationImportExcelDataResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomIntegrationImportExcelData200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CustomIntegrationImportExcelData200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/CustomIntegrationImportExcelData200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/CustomIntegrationImportExcelData200Response
      deprecated: false
  /v1/Thrivecart/{id}:
    delete:
      tags:
        - Thrivecart
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Thrivecart_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrivecartDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThrivecartDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrivecartDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ThrivecartDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ThrivecartDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Thrivecart
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Thrivecart_updateAttributesById
      parameters:
        - description: Thrivecart id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          application/xml:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          text/xml:
            schema:
              $ref: '#/components/schemas/Thrivecart'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            application/xml:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            text/xml:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Thrivecart'
      deprecated: false
  /v1/Thrivecart/{id}/order:
    post:
      tags:
        - Thrivecart
      summary: ''
      operationId: Thrivecart_createOrder
      parameters:
        - description: Thrivecart id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          application/xml:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          text/xml:
            schema:
              $ref: '#/components/schemas/Thrivecart'
      responses:
        '204':
          description: Request was successful
      deprecated: false
    head:
      tags:
        - Thrivecart
      summary: ''
      operationId: Thrivecart_headOrderById
      parameters:
        - description: Thrivecart id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Thrivecart/{id}/import:
    post:
      tags:
        - Thrivecart
      summary: Import integration data in excel format
      operationId: Thrivecart_importIntegrationData
      parameters:
        - description: Thrivecart id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrivecartImportIntegrationDataResponse'
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/ThrivecartImportIntegrationData200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/ThrivecartImportIntegrationData200Response
            application/javascript:
              schema:
                $ref: >-
                  #/components/schemas/ThrivecartImportIntegrationData200Response
            text/javascript:
              schema:
                $ref: >-
                  #/components/schemas/ThrivecartImportIntegrationData200Response
      deprecated: false
  /v1/Bokun/{id}:
    delete:
      tags:
        - Bokun
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Bokun_deleteById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BokunDeleteByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BokunDeleteById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/BokunDeleteById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/BokunDeleteById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/BokunDeleteById200Response'
      deprecated: false
    patch:
      tags:
        - Bokun
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Bokun_patchAttributesById
      parameters:
        - description: Bokun id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bokun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bokun'
          application/xml:
            schema:
              $ref: '#/components/schemas/Bokun'
          text/xml:
            schema:
              $ref: '#/components/schemas/Bokun'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bokun'
            application/xml:
              schema:
                $ref: '#/components/schemas/Bokun'
            text/xml:
              schema:
                $ref: '#/components/schemas/Bokun'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Bokun'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Bokun'
      deprecated: false
  /v1/Bokun/{id}/order:
    post:
      tags:
        - Bokun
      summary: ''
      operationId: Bokun_createOrder
      parameters:
        - description: Bokun id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bokun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bokun'
          application/xml:
            schema:
              $ref: '#/components/schemas/Bokun'
          text/xml:
            schema:
              $ref: '#/components/schemas/Bokun'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Bokun/{id}/import:
    post:
      tags:
        - Bokun
      summary: Import integration data in excel format
      operationId: Bokun_importIntegrationData
      parameters:
        - description: Bokun id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BokunImportIntegrationDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BokunImportIntegrationData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/BokunImportIntegrationData200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/BokunImportIntegrationData200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/BokunImportIntegrationData200Response'
      deprecated: false
  /v1/Shopamine/{id}:
    delete:
      tags:
        - Shopamine
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Shopamine_deleteModelById
      parameters:
        - description: Model id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopamineDeleteModelByIdResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopamineDeleteModelById200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopamineDeleteModelById200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopamineDeleteModelById200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopamineDeleteModelById200Response'
      deprecated: false
    patch:
      tags:
        - Shopamine
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Shopamine_updateAttributesById
      parameters:
        - description: Shopamine id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopamine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopamine'
          application/xml:
            schema:
              $ref: '#/components/schemas/Shopamine'
          text/xml:
            schema:
              $ref: '#/components/schemas/Shopamine'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopamine'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopamine'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopamine'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopamine'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopamine'
      deprecated: false
  /v1/Shopamine/{id}/order:
    post:
      tags:
        - Shopamine
      summary: ''
      operationId: Shopamine_createOrder
      parameters:
        - description: Shopamine id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopamine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopamine'
          application/xml:
            schema:
              $ref: '#/components/schemas/Shopamine'
          text/xml:
            schema:
              $ref: '#/components/schemas/Shopamine'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Shopamine/{id}/import:
    post:
      tags:
        - Shopamine
      summary: Import integration data in excel format
      operationId: Shopamine_importIntegrationData
      parameters:
        - description: Shopamine id
          name: id
          in: path
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopamineImportIntegrationDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopamineImportIntegrationData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopamineImportIntegrationData200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopamineImportIntegrationData200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopamineImportIntegrationData200Response'
      deprecated: false
  /v1/Sendgrid/webhook:
    post:
      tags:
        - Sendgrid
      summary: ''
      operationId: Sendgrid_webhookNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendgridWebhookNotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendgridWebhookNotificationRequest1'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendgridWebhookNotificationRequest2'
          text/xml:
            schema:
              $ref: '#/components/schemas/SendgridWebhookNotificationRequest3'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendgridWebhookNotificationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendgridWebhookNotification200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/SendgridWebhookNotification200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/SendgridWebhookNotification200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/SendgridWebhookNotification200Response'
      deprecated: false
  /v1/Logs/cron/clear:
    get:
      tags:
        - Log
      summary: ''
      operationId: Log_clearCronLogs
      parameters:
        - description: ''
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogClearCronLogsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogClearCronLogs200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/LogClearCronLogs200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/LogClearCronLogs200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/LogClearCronLogs200Response'
      deprecated: false
  /v1/AWSSES/webhook:
    post:
      tags:
        - AWSSES
      summary: ''
      operationId: Awsses_createWebhook
      requestBody:
        $ref: '#/components/requestBodies/Account.loginCredentials'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwssesCreateWebhookResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AwssesCreateWebhook200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AwssesCreateWebhook200Response'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AwssesCreateWebhook200Response'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AwssesCreateWebhook200Response'
      deprecated: false
components:
  schemas:
    PaymentProcessing:
      title: PaymentProcessing
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        id:
          type: string
        approved:
          type: boolean
        active:
          type: boolean
        applicationFee:
          description: Application Fee percent to collect on top of default payment fee
          type: number
          minimum: 0
          maximum: 99
        spaceInvoicesFee:
          description: Application Fee collected by Space Invoices
          type: number
          minimum: 0
          maximum: 1
        paymentCompleteReturnURL:
          type: string
        environment:
          type: string
          enum:
            - sandbox
            - production
        accountId:
          type: string
        merchantId:
          type: string
    NewPaymentProcessingInAccount:
      title: NewPaymentProcessingInAccount
      description: >-
        (tsType: Omit<PaymentProcessing, 'id' | 'accountId' | 'approved' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>, schemaOptions: { title:
        'NewPaymentProcessingInAccount', exclude: [ 'id', 'accountId',
        'approved', 'spaceInvoicesFee', 'createdAt', 'updatedAt' ] })
      type: object
      properties:
        custom:
          description: Custom field for free input data
          type: object
        active:
          type: boolean
        applicationFee:
          description: Application Fee percent to collect on top of default payment fee
          type: number
          minimum: 0
          maximum: 99
        paymentCompleteReturnURL:
          type: string
        environment:
          type: string
          enum:
            - sandbox
            - production
        merchantId:
          type: string
      x-typescript-type: >-
        Omit<PaymentProcessing, 'id' | 'accountId' | 'approved' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>
    PatchPaymentProcessingInAccount:
      title: PatchPaymentProcessingInAccount
      description: >-
        (tsType: Omit<Partial<PaymentProcessing>, 'id' | 'accountId' |
        'approved' | 'spaceInvoicesFee' | 'environment' | 'createdAt' |
        'updatedAt'>, schemaOptions: { title: 'PatchPaymentProcessingInAccount',
        partial: true, exclude: [ 'id', 'accountId', 'approved',
        'spaceInvoicesFee', 'environment', 'createdAt', 'updatedAt' ] })
      type: object
      properties:
        custom:
          description: Custom field for free input data
          type: object
        active:
          type: boolean
        applicationFee:
          description: Application Fee percent to collect on top of default payment fee
          type: number
          minimum: 0
          maximum: 99
        paymentCompleteReturnURL:
          type: string
        merchantId:
          type: string
      x-typescript-type: >-
        Omit<Partial<PaymentProcessing>, 'id' | 'accountId' | 'approved' |
        'spaceInvoicesFee' | 'environment' | 'createdAt' | 'updatedAt'>
    StripeConnect:
      title: StripeConnect
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        id:
          type: string
        privateKey:
          type: string
        publicKey:
          type: string
        webhookSecret:
          description: Stripe webhooks secret
          type: string
        connectWebhookSecret:
          description: Stripe webhooks secret for Connect specific calls
          type: string
        active:
          type: boolean
        refreshUrl:
          description: >-
            URL to redirect to when account onboarding link needs to be
            re-generated.
          type: string
          format: uri
        returnUrl:
          description: URL to return to once account onboarding is completed.
          type: string
          format: uri
        applicationFee:
          description: Application Fee collected by Stripe Connect Platform
          type: number
          minimum: 0
          maximum: 99
        spaceInvoicesFee:
          description: Application Fee collected by Space Invoices
          type: number
          minimum: 0
          maximum: 1
        accountId:
          type: string
      required:
        - privateKey
        - publicKey
    NewStripeConnectInAccount:
      title: NewStripeConnectInAccount
      description: >-
        (tsType: Omit<StripeConnect, 'id' | 'accountId' | 'webhookSecret' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>, schemaOptions: { title:
        'NewStripeConnectInAccount', exclude: [ 'id', 'accountId',
        'webhookSecret', 'spaceInvoicesFee', 'createdAt', 'updatedAt' ] })
      type: object
      properties:
        custom:
          description: Custom field for free input data
          type: object
        privateKey:
          type: string
        publicKey:
          type: string
        connectWebhookSecret:
          description: Stripe webhooks secret for Connect specific calls
          type: string
        active:
          type: boolean
        refreshUrl:
          description: >-
            URL to redirect to when account onboarding link needs to be
            re-generated.
          type: string
          format: uri
        returnUrl:
          description: URL to return to once account onboarding is completed.
          type: string
          format: uri
        applicationFee:
          description: Application Fee collected by Stripe Connect Platform
          type: number
          minimum: 0
          maximum: 99
      required:
        - privateKey
        - publicKey
      x-typescript-type: >-
        Omit<StripeConnect, 'id' | 'accountId' | 'webhookSecret' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>
    PatchStripeConnectInAccount:
      title: PatchStripeConnectInAccount
      description: >-
        (tsType: Omit<Partial<StripeConnect>, 'id' | 'accountId' |
        'webhookSecret' | 'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>,
        schemaOptions: { title: 'PatchStripeConnectInAccount', partial: true,
        exclude: [ 'id', 'accountId', 'webhookSecret', 'spaceInvoicesFee',
        'createdAt', 'updatedAt' ] })
      type: object
      properties:
        custom:
          description: Custom field for free input data
          type: object
        privateKey:
          type: string
        publicKey:
          type: string
        connectWebhookSecret:
          description: Stripe webhooks secret for Connect specific calls
          type: string
        active:
          type: boolean
        refreshUrl:
          description: >-
            URL to redirect to when account onboarding link needs to be
            re-generated.
          type: string
          format: uri
        returnUrl:
          description: URL to return to once account onboarding is completed.
          type: string
          format: uri
        applicationFee:
          description: Application Fee collected by Stripe Connect Platform
          type: number
          minimum: 0
          maximum: 99
      x-typescript-type: >-
        Omit<Partial<StripeConnect>, 'id' | 'accountId' | 'webhookSecret' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>
    TaxRate:
      properties:
        id:
          type: string
        dateValidFrom:
          type: string
          format: date-time
        rate:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - id
        - dateValidFrom
        - rate
      additionalProperties: false
    DocumentTax:
      title: DocumentTax
      type: object
      properties:
        taxId:
          type: string
        tax:
          type: number
        base:
          type: number
        totalTax:
          type: number
      required:
        - tax
        - base
        - totalTax
    DocumentItemTax:
      properties:
        id:
          type: string
        rate:
          type: number
          format: double
        reverseCharged:
          default: false
          type: boolean
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          default: true
          type: boolean
        compound:
          default: false
          type: boolean
        taxNumber:
          description: Tax number associated with this tax.
          type: string
        taxId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - id
        - rate
        - reverseCharged
        - recoverable
        - compound
      additionalProperties: false
    TaxExemption:
      properties:
        code:
          type: string
        reason:
          type: string
        id:
          type: string
      additionalProperties: false
    DocumentItem:
      properties:
        description:
          default: ''
          type: string
        id:
          type: string
        discount:
          type: number
          format: double
        discountIsAmount:
          default: false
          type: boolean
        quantity:
          type: number
          format: double
        total:
          type: number
          format: double
        totalWithTax:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        totalDiscount:
          type: number
          format: double
        isSeparator:
          default: false
          type: boolean
        name:
          type: string
        price:
          type: number
          format: double
        priceGross:
          type: number
          format: double
        classification:
          type: string
        unit:
          type: string
        SKU:
          type: string
        EAN:
          type: string
        trackInventory:
          type: boolean
        onBehalf:
          description: tax number of company selling this item/service on behalf of
          type: string
        taxExemptionCode:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        taxExemptionReason:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        itemId:
          $ref: '#/components/schemas/ObjectID'
        _taxExemption:
          $ref: '#/components/schemas/TaxExemption'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        _documentItemTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItemTax'
        _components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - id
      additionalProperties: false
    AccessTokenWithRelations:
      title: AccessTokenWithRelations
      description: >-
        (tsType: AccessTokenWithRelations, schemaOptions: { includeRelations:
        true })
      type: object
      properties:
        id:
          type: string
        ttl:
          type: number
        scopes:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
        userId:
          type: string
        user:
          $ref: '#/components/schemas/AccountWithRelations'
      required:
        - userId
      x-typescript-type: AccessTokenWithRelations
    StripeConnectWithRelations:
      title: StripeConnectWithRelations
      description: >-
        (tsType: StripeConnectWithRelations, schemaOptions: { includeRelations:
        true })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        id:
          type: string
        privateKey:
          type: string
        publicKey:
          type: string
        webhookSecret:
          description: Stripe webhooks secret
          type: string
        connectWebhookSecret:
          description: Stripe webhooks secret for Connect specific calls
          type: string
        active:
          type: boolean
        refreshUrl:
          description: >-
            URL to redirect to when account onboarding link needs to be
            re-generated.
          type: string
          format: uri
        returnUrl:
          description: URL to return to once account onboarding is completed.
          type: string
          format: uri
        applicationFee:
          description: Application Fee collected by Stripe Connect Platform
          type: number
          minimum: 0
          maximum: 99
        spaceInvoicesFee:
          description: Application Fee collected by Space Invoices
          type: number
          minimum: 0
          maximum: 1
        accountId:
          type: string
        account:
          $ref: '#/components/schemas/AccountWithRelations'
        stripeConnectAccounts:
          type: array
          items:
            $ref: '#/components/schemas/StripeConnectAccountWithRelations'
      required:
        - privateKey
        - publicKey
      x-typescript-type: StripeConnectWithRelations
    StripeConnectAccountWithRelations:
      title: StripeConnectAccountWithRelations
      description: >-
        (tsType: StripeConnectAccountWithRelations, schemaOptions: {
        includeRelations: true })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        stripeAccountId:
          type: string
        chargesEnabled:
          description: Indicates if charges are enabled on Stripe for this Account
          type: boolean
        active:
          type: boolean
        organizationId:
          type: string
        stripeConnectId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        stripeConnect:
          $ref: '#/components/schemas/StripeConnectWithRelations'
      required:
        - stripeAccountId
        - organizationId
        - stripeConnectId
      x-typescript-type: StripeConnectAccountWithRelations
    PaymentProcessingWithRelations:
      title: PaymentProcessingWithRelations
      description: >-
        (tsType: PaymentProcessingWithRelations, schemaOptions: {
        includeRelations: true })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        id:
          type: string
        approved:
          type: boolean
        active:
          type: boolean
        applicationFee:
          description: Application Fee percent to collect on top of default payment fee
          type: number
          minimum: 0
          maximum: 99
        spaceInvoicesFee:
          description: Application Fee collected by Space Invoices
          type: number
          minimum: 0
          maximum: 1
        paymentCompleteReturnURL:
          type: string
        environment:
          type: string
          enum:
            - sandbox
            - production
        accountId:
          type: string
        merchantId:
          type: string
        account:
          $ref: '#/components/schemas/AccountWithRelations'
        merchant:
          $ref: '#/components/schemas/MerchantWithRelations'
        merchants:
          type: array
          items:
            $ref: '#/components/schemas/MerchantWithRelations'
      x-typescript-type: PaymentProcessingWithRelations
    MerchantWithRelations:
      title: MerchantWithRelations
      description: >-
        (tsType: MerchantWithRelations, schemaOptions: { includeRelations: true
        })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        merchantId:
          description: Payment processor merchant id
          type: string
        applicationId:
          description: Payment processor application id
          type: string
        link:
          description: Payment processor onboarding link
          type: string
        chargesEnabled:
          description: Indicates if merchant is permitted to execute charges
          type: boolean
        active:
          type: boolean
        organizationId:
          type: string
        paymentProcessingId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        paymentProcessing:
          $ref: '#/components/schemas/PaymentProcessingWithRelations'
      required:
        - organizationId
        - paymentProcessingId
      x-typescript-type: MerchantWithRelations
    ClientWithRelations:
      title: ClientWithRelations
      description: '(tsType: ClientWithRelations, schemaOptions: { includeRelations: true })'
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          description: Type of business entity.
          type: string
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        id:
          type: string
        contact:
          type: string
        note:
          type: string
        isEndCustomer:
          type: boolean
        type:
          description: Type of client, customer, supplier or both.
          type: string
        companyId:
          description: Reference to companies model for internal analysis.
          type: string
        organizationId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      required:
        - name
      x-typescript-type: ClientWithRelations
    InvoiceWithRelations:
      title: InvoiceWithRelations
      description: >-
        (tsType: InvoiceWithRelations, schemaOptions: { includeRelations: true
        })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        number:
          type: string
        date:
          type: string
          format: date-time
        reference:
          description: Reference for payment identification
          type: string
        total:
          type: number
        totalConverted:
          type: number
        totalDiscount:
          type: number
        totalWithTax:
          type: number
        totalWithTaxConverted:
          type: number
        decimalPlaces:
          type: number
          minimum: 0
          maximum: 9
        note:
          type: string
        taxClause:
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document. Automatically populated on document
            save/update if not provided.
          type: string
        omitTaxes:
          description: >-
            If taxes should be omited when issuing document. Automatically
            populated on document if set using omit_tax_ default.
          type: boolean
        footer:
          type: string
        signature:
          type: string
        type:
          type: string
        sentSnailMail:
          type: boolean
        currencyId:
          description: Document 3 letter currency id based on ISO 4217 standard.
          type: string
        _documentTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        _documentReverseTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        hasUnit:
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
          type: boolean
        uniqueId:
          description: >-
            Optional user defined random unique value for each unique document
            used to prevent saving same document twice in case of connection
            drop. If a match happens the system returns the found document
            instead of a new one.
          type: string
        equalization:
          description: Cent equalization amount
          type: number
        issuedAt:
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
          type: string
          format: date-time
        dateYear:
          type: number
        shareableId:
          type: string
        _documentIssuer:
          type: object
        _documentClient:
          type: object
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        incoming:
          type: boolean
        id:
          type: string
        draft:
          type: boolean
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        canceled:
          type: boolean
        totalPaid:
          type: number
        totalDue:
          type: number
        paidInFull:
          type: boolean
        chargesDisabled:
          description: >-
            Indicates if payment processing via Pay now button is disabled for
            this document
          type: boolean
        stripeConnectPaymentIntent:
          type: object
        organizationId:
          type: string
        accountId:
          type: string
        clientId:
          type: string
        _fatturaPa:
          type: object
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        account:
          $ref: '#/components/schemas/AccountWithRelations'
        client:
          $ref: '#/components/schemas/ClientWithRelations'
      required:
        - date
        - total
        - totalWithTax
        - currencyId
        - hasUnit
        - dateYear
        - _documentIssuer
        - _documentClient
        - _documentItems
      x-typescript-type: InvoiceWithRelations
    DefaultWithRelations:
      title: DefaultWithRelations
      description: >-
        (tsType: DefaultWithRelations, schemaOptions: { includeRelations: true
        })
      type: object
      properties:
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        l10n:
          description: Object for storing localized values of strings
          type: object
        id:
          type: string
        name:
          type: string
        value: {}
        organizationId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      required:
        - organizationId
      x-typescript-type: DefaultWithRelations
    TaxWithRelations:
      title: TaxWithRelations
      description: '(tsType: TaxWithRelations, schemaOptions: { includeRelations: true })'
      type: object
      properties:
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          type: boolean
        compound:
          type: boolean
        taxNumber:
          description: Tax number associated with this tax.
          type: string
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        id:
          type: string
        classification:
          type: string
        _taxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
        organizationId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      x-typescript-type: TaxWithRelations
    PaymentWithRelations:
      title: PaymentWithRelations
      description: >-
        (tsType: PaymentWithRelations, schemaOptions: { includeRelations: true
        })
      type: object
      properties:
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        amount:
          type: number
        type:
          type: string
          enum:
            - bank
            - online
            - paypal
            - cash
            - card
            - crypto
            - coupon
            - other
        tag:
          description: Payment tag for sub-categorization
          type: string
        date:
          type: string
          format: date-time
        note:
          type: string
        organizationId:
          type: string
        documentId:
          type: string
        transactionId:
          description: Link to related transaction that was the source of the payment
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        document:
          $ref: '#/components/schemas/DocumentWithRelations'
        transaction:
          $ref: '#/components/schemas/TransactionWithRelations'
      required:
        - amount
        - type
        - organizationId
        - documentId
      x-typescript-type: PaymentWithRelations
    PaymentIntentWithRelations:
      title: PaymentIntentWithRelations
      description: >-
        (tsType: PaymentIntentWithRelations, schemaOptions: { includeRelations:
        true })
      type: object
      properties:
        id:
          type: string
        getPaidPaymentId:
          type: string
        paymentLink:
          description: Link to payment page
          type: string
        amount:
          type: number
        reference:
          type: string
        returnURL:
          type: string
        allowRecurring:
          type: boolean
        currencyId:
          type: string
        expiresAt:
          type: string
          format: date-time
        applicationFee:
          type: number
        spaceInvoicesFee:
          type: number
        initialPaymentIntentId:
          type: string
        status:
          type: string
        succeeded:
          type: boolean
        documentId:
          type: string
        organizationId:
          type: string
        document:
          $ref: '#/components/schemas/DocumentWithRelations'
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      required:
        - getPaidPaymentId
        - amount
        - reference
        - currencyId
        - applicationFee
        - spaceInvoicesFee
        - status
        - organizationId
      x-typescript-type: PaymentIntentWithRelations
    DocumentWithRelations:
      title: DocumentWithRelations
      description: >-
        (tsType: DocumentWithRelations, schemaOptions: { includeRelations: true
        })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        number:
          type: string
        draft:
          type: boolean
        date:
          type: string
          format: date-time
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        dateValidTill:
          type: string
          format: date-time
        datePaid:
          type: string
          format: date-time
        dateReceived:
          description: Date document was received, used for incoming documents.
          type: string
          format: date-time
        reference:
          description: Reference for payment identification
          type: string
        total:
          type: number
        totalConverted:
          type: number
        totalDiscount:
          type: number
        totalWithTax:
          type: number
        totalWithTaxConverted:
          type: number
        decimalPlaces:
          type: number
        note:
          type: string
        taxClause:
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document. Automatically populated on document
            save/update if not provided.
          type: string
        omitTaxes:
          description: >-
            If taxes should be omited when issuing document. Automatically
            populated on document if set using omit_tax_ default.
          type: boolean
        keepPricesAsGross:
          description: Forces not removing tax from gross price when using omitTaxes
          type: boolean
        footer:
          type: string
        signature:
          type: string
        type:
          type: string
        displayName:
          description: Customize the dispay name of a document type
          type: string
        canceled:
          type: boolean
        sentSnailMail:
          type: boolean
        totalPaid:
          type: number
        totalDue:
          type: number
        paidInFull:
          type: boolean
        currencyId:
          description: >-
            Because currency is not an actual lb model it can't be used as
            relation. Since this value matches isoName of currency there is
            never a need to expand the relational data. It can still be loaded
            separately by id from Currency model if needed.
          type: string
        _documentTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        _documentReverseTaxes:
          type: array
          items:
            description: Array of unique taxes on document. Used for display.
            type: object
        hasUnit:
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
          type: boolean
        validateEslog:
          description: Indicates if document should be validated based on eslog format.
          type: boolean
        isValidEslog:
          description: Property indicating that a document is in valid eslog format
          type: boolean
        uniqueId:
          description: >-
            Optional user defined random unique value for each unique document
            used to prevent saving same document twice in case of connection
            drop. If a match happens the system returns the found document
            instead of a new one.
          type: string
        customTotals:
          description: >-
            If true document tax and amount totals won't be calculated, provided
            values will be used instead
          type: boolean
        incoming:
          description: Indicates document is incoming ie. expense if invoices etc.
          type: boolean
        numberInternal:
          description: Internal tracking number
          type: string
        equalization:
          description: Cent equalization amount
          type: number
        sandbox:
          type: boolean
        issuedAt:
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
          type: string
          format: date-time
        shareableId:
          type: string
        chargesDisabled:
          description: >-
            Indicates if payment processing via Pay now button is disabled for
            this document
          type: boolean
        stripeConnectPaymentIntent:
          type: object
        _documentIssuer:
          type: object
        _documentClient:
          type: object
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        _fatturaPa:
          type: object
        id:
          type: string
        unitId:
          type: string
        documentIds:
          type: array
          items:
            type: string
        organizationId:
          type: string
        accountId:
          type: string
        clientId:
          type: string
        _at:
          $ref: '#/components/schemas/At'
        _documentConversionRate:
          $ref: '#/components/schemas/DocumentConversionRate'
        referencedDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentWithRelations'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentWithRelations'
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        account:
          $ref: '#/components/schemas/AccountWithRelations'
        paymentIntents:
          type: array
          items:
            $ref: '#/components/schemas/PaymentIntentWithRelations'
        client:
          $ref: '#/components/schemas/ClientWithRelations'
      required:
        - type
        - canceled
        - currencyId
        - organizationId
        - accountId
      x-typescript-type: DocumentWithRelations
    TransactionWithRelations:
      title: TransactionWithRelations
      description: >-
        (tsType: TransactionWithRelations, schemaOptions: { includeRelations:
        true })
      type: object
      properties:
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: number
        type:
          type: string
          enum:
            - debit
            - credit
        source:
          type: string
          enum:
            - getpaid
            - stripe
        processorId:
          description: >-
            Used to link to external system that was the source of the
            transaction
          type: string
        organizationId:
          type: string
        documentId:
          description: Link to related document that was the source of the transaction
          type: string
        paymentIntentId:
          description: >-
            Links to related payment intent that was the source of the
            transaction
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        document:
          $ref: '#/components/schemas/DocumentWithRelations'
        paymentIntent:
          $ref: '#/components/schemas/PaymentIntentWithRelations'
      required:
        - date
        - amount
        - type
        - source
        - organizationId
      x-typescript-type: TransactionWithRelations
    OrganizationWithRelations:
      title: OrganizationWithRelations
      description: >-
        (tsType: OrganizationWithRelations, schemaOptions: { includeRelations:
        true })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          description: Type of business entity.
          type: string
        id:
          type: string
        locale:
          type: string
        timezone:
          type: string
        active:
          type: boolean
        supportPin:
          type: number
        size:
          type: string
        industry:
          type: string
        companyId:
          description: Reference to companies model for internal tracking.
          type: string
        billingEmail:
          description: Billing email used for SI customers if is billing organization
          type: string
        activatedAt:
          type: string
          format: date-time
        deactivatedAt:
          type: string
          format: date-time
        sandbox:
          type: boolean
        fiscalRegionCode:
          description: 'Fiscal region used in portugal. Possible values: PT, PT-AC, PT-MD'
          type: string
        stripeConnectAccount:
          $ref: '#/components/schemas/StripeConnectAccountWithRelations'
        merchant:
          $ref: '#/components/schemas/MerchantWithRelations'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountWithRelations'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceWithRelations'
        _defaults:
          type: array
          items:
            $ref: '#/components/schemas/DefaultWithRelations'
        clients:
          type: array
          items:
            $ref: '#/components/schemas/ClientWithRelations'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/TaxWithRelations'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionWithRelations'
        paymentIntents:
          type: array
          items:
            $ref: '#/components/schemas/PaymentIntentWithRelations'
      required:
        - name
      x-typescript-type: OrganizationWithRelations
    AccountWithRelations:
      title: AccountWithRelations
      description: >-
        (tsType: AccountWithRelations, schemaOptions: { includeRelations: true
        })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        id:
          type: string
        password:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        verificationToken:
          type: string
        locale:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        taxNumber:
          description: Personal tax number, required for fiscalization.
          type: string
        label:
          description: >-
            Label of person issuing invoices. Required for fiscalization. Should
            be unique per organization but we can't validate this. But can be
            checked based on accountId saved to _furs object.
          type: string
        parentId:
          type: string
        masterId:
          type: string
        billingOrganizationId:
          type: string
        role:
          description: Role within organization.
          type: string
        softwareSupplierTaxNumber:
          description: >-
            For tax number of primary account providing fiscal verification to
            their end customers.
          type: string
        activateRedirect:
          description: Custom activation redirect URL for sub-accounts.
          type: string
        invitationLink:
          description: Custom link where invited user can review invitations.
          type: string
        invitationNewLink:
          description: Custom link to view invitation for non existing user.
          type: string
        documentShareableLink:
          description: Custom link for shareable document view.
          type: string
        disableCreatingChildOrganizations:
          description: Disable child accounts creating organizations
          type: boolean
        resetRedirect:
          description: Custom password reset redirect URL for sub accounts of this account.
          type: string
        skipChildAccountVerification:
          type: boolean
        accessTokens:
          type: array
          items:
            $ref: '#/components/schemas/AccessTokenWithRelations'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationWithRelations'
        stripeConnect:
          $ref: '#/components/schemas/StripeConnectWithRelations'
        paymentProcessing:
          $ref: '#/components/schemas/PaymentProcessingWithRelations'
      required:
        - password
        - email
      x-typescript-type: AccountWithRelations
    AtcudSeriesWithRelations:
      title: AtcudSeriesWithRelations
      description: >-
        (tsType: AtcudSeriesWithRelations, schemaOptions: { includeRelations:
        true })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        seriesId:
          description: >-
            Id provided by the ATCUD authority. It is used to identify the
            series of ATCUDs.
          type: string
          minLength: 8
          pattern: ^[BCDFGHJKLMNPQRSTVWXYZ23456789]+$
        code:
          description: >-
            Code used for the series. It needs to be used in the document
            number. (ie. FT MYSERIES/00000001)
          type: string
        documentType:
          description: >-
            The type of document this series is used for. It can be "invoice",
            "creditNote"
          type: string
          enum:
            - invoice
            - credit-note
        startDate:
          description: The time from which this series is valid.
          type: string
          format: date-time
        firstNumber:
          description: The first number of the series, required by the ATCUD authority.
          type: string
        organizationId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      required:
        - seriesId
        - code
        - documentType
        - startDate
        - firstNumber
        - organizationId
      x-typescript-type: AtcudSeriesWithRelations
    AtcudSeries:
      properties:
        seriesId:
          type: string
        code:
          type: string
        documentType:
          type: string
        startDate:
          type: string
          format: date-time
        firstNumber:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - seriesId
        - code
        - documentType
        - startDate
        - firstNumber
      additionalProperties: false
    NewAtcudSeries:
      title: NewAtcudSeries
      description: >-
        (tsType: Omit<AtcudSeries, 'id' | 'organizationId'>, schemaOptions: {
        title: 'NewAtcudSeries', exclude: [ 'id', 'organizationId' ] })
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        seriesId:
          description: >-
            Id provided by the ATCUD authority. It is used to identify the
            series of ATCUDs.
          type: string
          minLength: 8
          pattern: ^[BCDFGHJKLMNPQRSTVWXYZ23456789]+$
        code:
          description: >-
            Code used for the series. It needs to be used in the document
            number. (ie. FT MYSERIES/00000001)
          type: string
        documentType:
          description: >-
            The type of document this series is used for. It can be "invoice",
            "creditNote"
          type: string
          enum:
            - invoice
            - credit-note
        startDate:
          description: The time from which this series is valid.
          type: string
          format: date-time
        firstNumber:
          description: The first number of the series, required by the ATCUD authority.
          type: string
      required:
        - seriesId
        - code
        - documentType
        - startDate
        - firstNumber
      x-typescript-type: Omit<AtcudSeries, 'id' | 'organizationId'>
    PaymentIntent:
      title: PaymentIntent
      type: object
      properties:
        id:
          type: string
        getPaidPaymentId:
          type: string
        paymentLink:
          description: Link to payment page
          type: string
        amount:
          type: number
        reference:
          type: string
        returnURL:
          type: string
        allowRecurring:
          type: boolean
        currencyId:
          type: string
        expiresAt:
          type: string
          format: date-time
        applicationFee:
          type: number
        spaceInvoicesFee:
          type: number
        initialPaymentIntentId:
          type: string
        status:
          type: string
        succeeded:
          type: boolean
        documentId:
          type: string
        organizationId:
          type: string
      required:
        - getPaidPaymentId
        - amount
        - reference
        - currencyId
        - applicationFee
        - spaceInvoicesFee
        - status
        - organizationId
    StripeConnectPaymentIntent:
      title: StripeConnectPaymentIntent
      type: object
      properties:
        paymentIntentId:
          type: string
        clientSecret:
          type: string
        publicKey:
          description: Stripe Connect publishable key used for UI checkout form
          type: string
        amount:
          description: Payment intent amount
          type: number
        currencyId:
          type: string
      required:
        - paymentIntentId
        - clientSecret
        - publicKey
        - currencyId
    InvoicePartial:
      title: InvoicePartial
      description: '(tsType: Partial<Invoice>, schemaOptions: { partial: true })'
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        number:
          type: string
        date:
          type: string
          format: date-time
        reference:
          description: Reference for payment identification
          type: string
        total:
          type: number
        totalConverted:
          type: number
        totalDiscount:
          type: number
        totalWithTax:
          type: number
        totalWithTaxConverted:
          type: number
        decimalPlaces:
          type: number
          minimum: 0
          maximum: 9
        note:
          type: string
        taxClause:
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document. Automatically populated on document
            save/update if not provided.
          type: string
        omitTaxes:
          description: >-
            If taxes should be omited when issuing document. Automatically
            populated on document if set using omit_tax_ default.
          type: boolean
        footer:
          type: string
        signature:
          type: string
        type:
          type: string
        sentSnailMail:
          type: boolean
        currencyId:
          description: Document 3 letter currency id based on ISO 4217 standard.
          type: string
        _documentTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        _documentReverseTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        hasUnit:
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
          type: boolean
        uniqueId:
          description: >-
            Optional user defined random unique value for each unique document
            used to prevent saving same document twice in case of connection
            drop. If a match happens the system returns the found document
            instead of a new one.
          type: string
        equalization:
          description: Cent equalization amount
          type: number
        issuedAt:
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
          type: string
          format: date-time
        dateYear:
          type: number
        shareableId:
          type: string
        _documentIssuer:
          type: object
        _documentClient:
          type: object
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        incoming:
          type: boolean
        id:
          type: string
        draft:
          type: boolean
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        canceled:
          type: boolean
        totalPaid:
          type: number
        totalDue:
          type: number
        paidInFull:
          type: boolean
        chargesDisabled:
          description: >-
            Indicates if payment processing via Pay now button is disabled for
            this document
          type: boolean
        stripeConnectPaymentIntent:
          type: object
        organizationId:
          type: string
        accountId:
          type: string
        clientId:
          type: string
        _fatturaPa:
          type: object
      x-typescript-type: Partial<Invoice>
    Invoice:
      title: Invoice
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        number:
          type: string
        date:
          type: string
          format: date-time
        reference:
          description: Reference for payment identification
          type: string
        total:
          type: number
        totalConverted:
          type: number
        totalDiscount:
          type: number
        totalWithTax:
          type: number
        totalWithTaxConverted:
          type: number
        decimalPlaces:
          type: number
          minimum: 0
          maximum: 9
        note:
          type: string
        taxClause:
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document. Automatically populated on document
            save/update if not provided.
          type: string
        omitTaxes:
          description: >-
            If taxes should be omited when issuing document. Automatically
            populated on document if set using omit_tax_ default.
          type: boolean
        footer:
          type: string
        signature:
          type: string
        type:
          type: string
        sentSnailMail:
          type: boolean
        currencyId:
          description: Document 3 letter currency id based on ISO 4217 standard.
          type: string
        _documentTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        _documentReverseTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        hasUnit:
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
          type: boolean
        uniqueId:
          description: >-
            Optional user defined random unique value for each unique document
            used to prevent saving same document twice in case of connection
            drop. If a match happens the system returns the found document
            instead of a new one.
          type: string
        equalization:
          description: Cent equalization amount
          type: number
        issuedAt:
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
          type: string
          format: date-time
        dateYear:
          type: number
        shareableId:
          type: string
        _documentIssuer:
          type: object
        _documentClient:
          type: object
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        incoming:
          type: boolean
        id:
          type: string
        draft:
          type: boolean
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        canceled:
          type: boolean
        totalPaid:
          type: number
        totalDue:
          type: number
        paidInFull:
          type: boolean
        chargesDisabled:
          description: >-
            Indicates if payment processing via Pay now button is disabled for
            this document
          type: boolean
        stripeConnectPaymentIntent:
          type: object
        organizationId:
          type: string
        accountId:
          type: string
        clientId:
          type: string
        _fatturaPa:
          type: object
      required:
        - date
        - total
        - totalWithTax
        - currencyId
        - hasUnit
        - dateYear
        - _documentIssuer
        - _documentClient
        - _documentItems
    Merchant:
      title: Merchant
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        merchantId:
          description: Payment processor merchant id
          type: string
        applicationId:
          description: Payment processor application id
          type: string
        link:
          description: Payment processor onboarding link
          type: string
        chargesEnabled:
          description: Indicates if merchant is permitted to execute charges
          type: boolean
        active:
          type: boolean
        organizationId:
          type: string
        paymentProcessingId:
          type: string
      required:
        - organizationId
        - paymentProcessingId
    NewMerchantInOrganization:
      title: NewMerchantInOrganization
      description: >-
        (tsType: Omit<Merchant, 'id' | 'paymentProcessingId' | 'merchantId' |
        'applicationId' | 'organizationId' | 'chargesEnabled' | 'createdAt' |
        'updatedAt'>, schemaOptions: { title: 'NewMerchantInOrganization',
        exclude: [ 'id', 'paymentProcessingId', 'merchantId', 'applicationId',
        'organizationId', 'chargesEnabled', 'createdAt', 'updatedAt' ] })
      type: object
      properties:
        link:
          description: Payment processor onboarding link
          type: string
        active:
          type: boolean
      x-typescript-type: >-
        Omit<Merchant, 'id' | 'paymentProcessingId' | 'merchantId' |
        'applicationId' | 'organizationId' | 'chargesEnabled' | 'createdAt' |
        'updatedAt'>
    MerchantPartialExcluding_id-paymentProcessingId-merchantId-applicationId-organizationId-chargesEnabled-createdAt-updatedAt_:
      title: >-
        MerchantPartialExcluding_id-paymentProcessingId-merchantId-applicationId-organizationId-chargesEnabled-createdAt-updatedAt_
      description: >-
        (tsType: Omit<Partial<Merchant>, 'id' | 'paymentProcessingId' |
        'merchantId' | 'applicationId' | 'organizationId' | 'chargesEnabled' |
        'createdAt' | 'updatedAt'>, schemaOptions: { partial: true, exclude: [
        'id', 'paymentProcessingId', 'merchantId', 'applicationId',
        'organizationId', 'chargesEnabled', 'createdAt', 'updatedAt' ] })
      type: object
      properties:
        link:
          description: Payment processor onboarding link
          type: string
        active:
          type: boolean
      x-typescript-type: >-
        Omit<Partial<Merchant>, 'id' | 'paymentProcessingId' | 'merchantId' |
        'applicationId' | 'organizationId' | 'chargesEnabled' | 'createdAt' |
        'updatedAt'>
    CreatePaymentIntentDto: {}
    StripeConnectAccount:
      title: StripeConnectAccount
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        stripeAccountId:
          type: string
        chargesEnabled:
          description: Indicates if charges are enabled on Stripe for this Account
          type: boolean
        active:
          type: boolean
        organizationId:
          type: string
        stripeConnectId:
          type: string
      required:
        - stripeAccountId
        - organizationId
        - stripeConnectId
    NewStripeConnectAccountInOrganization:
      title: NewStripeConnectAccountInOrganization
      description: >-
        (tsType: Omit<StripeConnectAccount, 'id' | 'stripeConnectId' |
        'stripeAccountId' | 'organizationId' | 'chargesEnabled' | 'createdAt' |
        'updatedAt'>, schemaOptions: { title:
        'NewStripeConnectAccountInOrganization', exclude: [ 'id',
        'stripeConnectId', 'stripeAccountId', 'organizationId',
        'chargesEnabled', 'createdAt', 'updatedAt' ] })
      type: object
      properties:
        active:
          type: boolean
      x-typescript-type: >-
        Omit<StripeConnectAccount, 'id' | 'stripeConnectId' | 'stripeAccountId'
        | 'organizationId' | 'chargesEnabled' | 'createdAt' | 'updatedAt'>
    Transaction:
      title: Transaction
      type: object
      properties:
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for free input data
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: number
        type:
          type: string
          enum:
            - debit
            - credit
        source:
          type: string
          enum:
            - getpaid
            - stripe
        processorId:
          description: >-
            Used to link to external system that was the source of the
            transaction
          type: string
        organizationId:
          type: string
        documentId:
          description: Link to related document that was the source of the transaction
          type: string
        paymentIntentId:
          description: >-
            Links to related payment intent that was the source of the
            transaction
          type: string
      required:
        - date
        - amount
        - type
        - source
        - organizationId
    Date: {}
    PatchStripeConnectAccount:
      title: PatchStripeConnectAccount
      description: >-
        (tsType: Omit<Partial<StripeConnectAccount>, 'chargesEnabled' |
        'stripeAccountId' | 'stripeConnectId' | 'organizationId' | 'createdAt' |
        'updatedAt'>, schemaOptions: { title: 'PatchStripeConnectAccount',
        partial: true, exclude: [ 'chargesEnabled', 'stripeAccountId',
        'stripeConnectId', 'organizationId', 'createdAt', 'updatedAt' ] })
      type: object
      properties:
        id:
          type: string
        active:
          type: boolean
      x-typescript-type: >-
        Omit<Partial<StripeConnectAccount>, 'chargesEnabled' | 'stripeAccountId'
        | 'stripeConnectId' | 'organizationId' | 'createdAt' | 'updatedAt'>
    Buffer: {}
    x-any:
      properties: {}
    Recurrence:
      properties:
        name:
          type: string
        type:
          type: string
        dateFirst:
          type: string
          format: date-time
        numRecurrences:
          type: number
          format: double
        autoSend:
          default: false
          type: boolean
        notify:
          default: true
          type: boolean
        saveAsDraft:
          default: false
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        documentId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _recurrenceDates:
          type: array
          items:
            $ref: '#/components/schemas/RecurrenceDate'
      required:
        - name
        - type
        - dateFirst
        - numRecurrences
        - autoSend
        - notify
        - saveAsDraft
      additionalProperties: false
    Comment:
      properties:
        id:
          type: string
        text:
          type: string
        accountId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - text
      additionalProperties: false
    Payment:
      properties:
        amount:
          type: number
          format: double
        type:
          type: string
        tag:
          description: Payment tag for sub categorization
          type: string
        date:
          type: string
          format: date-time
        note:
          type: string
        transactionId:
          description: Transaction id from payment gateway
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        documentId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - amount
        - type
        - date
      additionalProperties: false
    DocumentCategory:
      properties:
        amount:
          type: number
          format: double
        amountConverted:
          type: number
          format: double
        date:
          type: string
          format: date-time
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        documentId:
          $ref: '#/components/schemas/ObjectID'
        categoryId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - amount
      additionalProperties: false
    Document:
      properties:
        _fatturaPa:
          type: object
        number:
          description: Auto-incremented on Document create if not provided.
          type: string
        previousDocumentId:
          type: string
        draft:
          default: false
          type: boolean
        date:
          description: Default is today.
          type: string
          format: date-time
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          description: In case service for period, this is the end date of the period.
          type: string
          format: date-time
        dateDue:
          description: Date invoice is due.
          type: string
          format: date-time
        dateValidTill:
          description: Date estimate is valid till.
          type: string
          format: date-time
        datePaid:
          description: Date advance invoice was paid.
          type: string
          format: date-time
        dateReceived:
          description: Date document was received, used for incoming documents.
          type: string
          format: date-time
        reference:
          description: Reference for Payment or other identification
          type: string
        total:
          description: Document total without taxes.
          type: number
          format: double
        totalConverted:
          description: Document total without taxes converted to organization's currency.
          type: number
          format: double
        totalDiscount:
          description: Total discount amount.
          type: number
          format: double
        totalWithTax:
          description: Document total with taxes.
          type: number
          format: double
        totalWithTaxConverted:
          description: Document total with taxes converted to organization's currency.
          type: number
          format: double
        decimalPlaces:
          default: 4
          type: number
          format: double
        note:
          description: >-
            Document note to client. Auto-set based on Organization's Defaults
            if not provided.
          type: string
        taxClause:
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document.

            Auto-set based on Organization's settings on Document create if not
            provided.
          type: string
        omitTaxes:
          description: |-
            If taxes should be omited when issuing document.
            Automatically populated on document if set using omit_tax_ default.
          type: boolean
        keepPricesAsGross:
          description: >-
            Forces not removing tax from gross price when saving document with
            omitTaxes set
          type: boolean
        ignoreOmitTaxes:
          description: Forces omit taxes setting to be ignored when saving document
          type: boolean
        footer:
          description: Auto-set based on Organization's Defaults if not provided.
          type: string
        signature:
          description: Auto-set based on Organization's Defaults if not provided.
          type: string
        type:
          description: Defaults is 'invoice'.
          default: invoice
          type: string
        displayName:
          description: Customize the dispay name of an estimate.
          type: string
        canceled:
          default: false
          type: boolean
        sentSnailMail:
          default: false
          type: boolean
        totalPaid:
          description: Total amount paid on Document.
          default: 0
          type: number
          format: double
        totalDue:
          description: Total amount still due on Document.
          default: 0
          type: number
          format: double
        paidInFull:
          description: Indicates if document was paid in full.
          default: false
          type: boolean
        currencyId:
          description: |-
            Defaults to Organization's currencyId if not provided.
            3 character ISO currency code.
          type: string
        _documentTaxes:
          description: Auto-populated array of unique taxes on document.
          type: array
          items:
            type: object
        _documentReverseTaxes:
          description: Auto-populated array of unique reverse taxes on document
          type: array
          items:
            type: object
        hasUnit:
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
          type: boolean
        validateEslog:
          description: >-
            Indicates if document should be validated based on eslog e-invoice
            format.
          type: boolean
        isValidEslog:
          description: >-
            Property indicating that a document is a valid by eslog e-invoice
            validation
          type: boolean
        uniqueId:
          description: >-
            Optional user defined random unique value for each individual
            document.

            Used to prevent saving same document twice in case of connection
            drop.

            If a match happens the system returns the found document instead of
            a new one.
          type: string
        customTotals:
          description: >-
            If true document tax and amount totals won't be calculated, provided
            values will be used instead. Incoming documents only.
          type: boolean
        incoming:
          description: Indicates document is incoming ie. expense if invoice etc.
          default: false
          type: boolean
        numberInternal:
          description: Internal tracking number for incoming documents.
          type: string
        equalization:
          description: Cent equalization amount.
          type: number
          format: double
        sandbox:
          type: boolean
        issuedAt:
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
          type: string
          format: date-time
        shareableId:
          description: id used for sharing document using a public link
          type: string
        stripeConnectPaymentIntent:
          type: object
        chargesDisabled:
          description: Indicates if payment processing is disabled for this document
          type: boolean
        dateYear:
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        documentIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        _documentIssuer:
          $ref: '#/components/schemas/DocumentIssuer'
        clientId:
          $ref: '#/components/schemas/ObjectID'
        _documentClient:
          $ref: '#/components/schemas/DocumentClient'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        _comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        _furs:
          $ref: '#/components/schemas/Furs'
        _at:
          $ref: '#/components/schemas/At'
        _fina:
          $ref: '#/components/schemas/Fina'
        _documentConversionRate:
          $ref: '#/components/schemas/DocumentConversionRate'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        _documentUnit:
          $ref: '#/components/schemas/DocumentUnit'
        priceListId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        destinationWarehouseId:
          $ref: '#/components/schemas/ObjectID'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
        _bPay:
          $ref: '#/components/schemas/BPay'
      additionalProperties: false
    Component:
      properties:
        id:
          type: string
        amount:
          description: How many of this component go into one parent composed item.
          type: number
          format: double
        itemId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - id
        - amount
      additionalProperties: false
    Inventory:
      properties:
        amount:
          default: 0
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        itemId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - amount
      additionalProperties: false
    Item:
      properties:
        description:
          default: ''
          type: string
        type:
          description: Is item sold, bought or both
          type: string
        purchasePrice:
          type: number
          format: double
        purchasePriceGross:
          type: number
          format: double
        name:
          type: string
        price:
          type: number
          format: double
        priceGross:
          type: number
          format: double
        classification:
          type: string
        unit:
          type: string
        SKU:
          type: string
        EAN:
          type: string
        trackInventory:
          type: boolean
        onBehalf:
          description: tax number of company selling this item/service on behalf of
          type: string
        taxExemptionCode:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        taxExemptionReason:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        _taxExemption:
          $ref: '#/components/schemas/TaxExemption'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        taxIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        purchaseTaxIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        unitIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        _components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      additionalProperties: false
    Tax:
      properties:
        classification:
          type: string
        country:
          description: |-
            Country the tax belongs to
            Defaults to organization country
          type: string
        countryAlpha2Code:
          type: string
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          default: true
          type: boolean
        compound:
          default: false
          type: boolean
        taxNumber:
          description: Tax number associated with this tax.
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        _taxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - recoverable
        - compound
      additionalProperties: false
    Client:
      properties:
        contact:
          type: string
        note:
          type: string
        isEndCustomer:
          default: false
          type: boolean
        type:
          description: Type of client, customer, supplier or both.
          type: string
        companyId:
          description: Reference to companies model for internal analysis.
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        unitIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    Default:
      properties:
        description:
          type: string
        name:
          type: string
        value:
          $ref: '#/components/schemas/x-any'
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        l10n:
          description: Object for storing localized values of strings
          type: object
      required:
        - name
      additionalProperties: false
    Shopify:
      properties:
        shop:
          description: Unique shop URL
          type: string
        apiKey:
          type: string
        password:
          type: string
        accessToken:
          type: string
        shopSettings:
          type: object
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
        accountId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - shop
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Stripe:
      properties:
        name:
          description: Name of account for user's own identification
          type: string
        apiKey:
          type: string
        active:
          default: true
          type: boolean
        autoSend:
          description: If invoice should be sent to customer automatically upon creation
          default: true
          type: boolean
        lang:
          type: string
        invoiceAction:
          description: |-
            Action to listen for issuing invoices.
            Defaults to first received if not set.
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        autoTaxClassification:
          description: >-
            If set, will automatically classify tax for invoice items.

            Possible values: 'standard' (default), reduced', 'zero', 'none' or
            custom.
          default: standard
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        accountId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - name
        - active
        - autoSend
      additionalProperties: false
    TicketingHub:
      properties:
        token:
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      additionalProperties: false
    BusinessPremise:
      properties:
        type:
          type: string
        taxNumber:
          description: Tax number of responsible person on premise
          type: string
        businessPremiseId:
          type: string
        premiseType:
          type: string
        cadastralNumber:
          type: number
          format: double
        buildingNumber:
          type: number
          format: double
        buildingSectionNumber:
          type: number
          format: double
        street:
          type: string
        houseNumber:
          type: string
        houseNumberAdditional:
          type: string
        community:
          type: string
        city:
          type: string
        postalCode:
          type: string
        numbers:
          type: object
        provider:
          description: The fiscalization provider the premise belongs to
          default: furs
          type: string
        environment:
          default: production
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
      required:
        - businessPremiseId
      additionalProperties: false
    ElectronicDevice:
      properties:
        electronicDeviceId:
          type: string
        numbers:
          type: object
        provider:
          default: furs
          type: string
        environment:
          default: production
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        businessPremiseId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - electronicDeviceId
      additionalProperties: false
    AccountOrganization:
      properties:
        role:
          default: admin
          type: string
        active:
          description: Indicates if link is active, disable to temporarily deny access.
          default: true
          type: boolean
        disabled:
          description: Indicates if access was disabled by admin.
          default: false
          type: boolean
        rejected:
          description: Indicates if invitation was rejected/ignored.
          default: false
          type: boolean
        invitationEmail:
          type: string
        inviterId:
          type: string
        inviterMasterId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      additionalProperties: false
    Unit:
      properties:
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    Category:
      properties:
        description:
          type: string
        name:
          type: string
        alias:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - name
        - alias
      additionalProperties: false
    PriceList:
      properties:
        name:
          type: string
        active:
          default: true
          type: boolean
        activeFrom:
          type: string
          format: date-time
        activeTo:
          type: string
          format: date-time
        type:
          description: Is price list for sale or purchase items
          default: sale
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        clientId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - name
      additionalProperties: false
    Warehouse:
      properties:
        name:
          type: string
        default:
          default: false
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - name
      additionalProperties: false
    Webhook:
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        url:
          type: string
        enabled:
          default: true
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - url
      additionalProperties: false
    Order:
      properties:
        status:
          type: string
        date:
          type: string
          format: date-time
        orderId:
          description: Store order id
          type: string
        number:
          description: Store order number
          type: string
        currencyId:
          type: string
        paymentType:
          type: string
        paymentTag:
          type: string
        paid:
          default: true
          type: boolean
        paidAt:
          type: string
          format: date-time
        fulfilled:
          type: boolean
        fulfilledAt:
          type: string
          format: date-time
        cancelled:
          type: boolean
        cancelledAt:
          type: string
          format: date-time
        complete:
          type: boolean
        completedAt:
          type: string
          format: date-time
        refunded:
          type: boolean
        refundedAt:
          type: string
          format: date-time
        locale:
          description: Order specific locale
          type: string
        expectedTotalWithTax:
          type: number
          format: double
        payloads:
          description: Order original payloads
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        taxClause:
          description: Custom tax clause passed from order
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        _billingAddress:
          $ref: '#/components/schemas/DocumentClient'
        _shippingAddress:
          $ref: '#/components/schemas/DocumentClient'
        invoiceId:
          $ref: '#/components/schemas/ObjectID'
        estimateId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        shopifyId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        magento1Id:
          $ref: '#/components/schemas/ObjectID'
        woocommerceId:
          $ref: '#/components/schemas/ObjectID'
        customIntegrationId:
          $ref: '#/components/schemas/ObjectID'
        customId:
          $ref: '#/components/schemas/ObjectID'
        thrivecartId:
          $ref: '#/components/schemas/ObjectID'
        _items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        _transactions:
          type: array
          items:
            $ref: '#/components/schemas/OrderTransaction'
        bokunId:
          $ref: '#/components/schemas/ObjectID'
        shopamineId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - status
        - date
        - paymentType
        - paid
        - payloads
      additionalProperties: false
    Magento1:
      properties:
        host:
          description: Store host address used for API
          type: string
        apiUser:
          type: string
        apiKey:
          type: string
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Woocommerce:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    CustomIntegration:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Thrivecart:
      properties:
        addTax:
          description: Should tax be added to items
          type: boolean
        addedTaxRateClassification:
          description: >-
            Classification of default tax to use for items that weren't related
            to saved items.

            Defaults to 'standard'
          type: string
        ignoreTestOrders:
          description: Ignore orders made in test mode
          type: boolean
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Bokun:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Shopamine:
      properties:
        shop:
          description: |-
            Unique shop URL/name used when querying Shopamine API
            Required only when updating inventory on shop from API
          type: string
        apiKey:
          description: Required only when updating inventory on shop from API
          type: string
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Organization:
      properties:
        locale:
          type: string
        timezone:
          type: string
        active:
          default: true
          type: boolean
        supportPin:
          type: number
          format: double
        size:
          type: string
        industry:
          type: string
        companyId:
          description: Reference to companies model for internal tracking.
          type: string
        billingEmail:
          description: Billing email used for SI customers if is billing organization
          type: string
        activatedAt:
          type: string
          format: date-time
        deactivatedAt:
          type: string
          format: date-time
        sandbox:
          type: boolean
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - active
        - name
      additionalProperties: false
    Currency:
      properties:
        isoName:
          type: string
        name:
          type: string
        namePlural:
          type: string
        symbol:
          type: string
        symbolNative:
          type: string
        decimalDigits:
          default: 2
          type: number
          format: double
        type:
          type: string
      required:
        - isoName
        - name
        - type
      additionalProperties: false
    AccessToken:
      properties:
        id:
          type: string
        ttl:
          description: time to live in seconds (2 weeks by default)
          default: 1209600
          type: number
          format: double
        scopes:
          description: Array of scopes granted to this access token.
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
        userId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - id
      additionalProperties: false
    Usage:
      properties:
        month:
          type: number
          format: double
        year:
          type: number
          format: double
        documentsPerOrganization:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        documentsCount:
          description: Number of documents issued
          type: number
          format: double
        documentsTotal:
          description: Sum of issued invoices and credit notes net totals in EUR
          type: number
          format: double
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        organizationsBillableCount:
          default: 0
          type: number
          format: double
        billingCycle:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        subscriptionId:
          $ref: '#/components/schemas/ObjectID'
        invoiceId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - month
        - year
        - documentsCount
      additionalProperties: false
    Log:
      properties:
        uniqueId:
          description: Unique ID of request used for idempotency
          type: string
        host:
          type: string
        origin:
          type: string
        url:
          type: string
        ip:
          type: string
        reqBody:
          description: Stringified request body
          default: {}
          type: object
        method:
          description: Request method
          type: string
        query:
          default: {}
          type: object
        resBody:
          description: Stringified response body
          default: {}
          type: object
        status:
          description: Response status
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    Account:
      properties:
        firstname:
          type: string
        lastname:
          type: string
        taxNumber:
          description: Personal tax number, required for fiscalization.
          type: string
        role:
          description: Role in company.
          type: string
        locale:
          default: en
          type: string
        label:
          description: Label of person issuing invoices. Required for fiscalization.
          type: string
        softwareSupplierTaxNumber:
          description: >-
            For tax number of clients providing fiscal verification to their end
            customers.
          type: string
        activateRedirect:
          description: Custom activation redirect URL for sub accounts of this account.
          type: string
        invitationLink:
          description: Custom link where invited user can review invitations.
          type: string
        invitationNewLink:
          description: Custom link to view invitation for non existing user.
          type: string
        documentShareableLink:
          description: Custom link for shareable document view.
          type: string
        disableCreatingChildOrganizations:
          description: Disable child accounts creating organizations
          type: boolean
        resetRedirect:
          description: Custom password reset redirect URL for sub accounts of this account.
          type: string
        newsletter:
          description: Consent to newsletter on signup
          type: boolean
        productUpdates:
          description: Consent to product updates on signup
          type: boolean
        skipChildAccountVerification:
          type: boolean
        realm:
          type: string
        username:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
        masterId:
          $ref: '#/components/schemas/ObjectID'
        parentId:
          $ref: '#/components/schemas/ObjectID'
        billingOrganizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - email
      additionalProperties: false
    Company:
      properties:
        dateFounded:
          type: string
          format: date-time
        serviceClassification:
          description: |-
            Country specific classification of the main service / activity the
            business performs.
          type: string
        source:
          description: |-
            Identification of source of data ie. 'FURS'.
            IMPORTANT: Field is used by populating scripts to clear old data.
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    WhiteLabel:
      properties:
        active:
          default: false
          type: boolean
        name:
          description: Name of your White Label instance.
          type: string
        domain:
          description: Your domain for Apollo white label implementation.
          type: string
        subdomain:
          description: Apollo subdomain for testing white label implemention.
          type: string
        baseColor:
          type: string
        logo:
          type: string
        separateDashboardIcon:
          description: >-
            Should a separate icon for dashboard be used in the sidebar instead
            of the logo serving as the button.
          default: false
          type: boolean
        googleAnalyticsId:
          description: Google analytics tracking code.
          type: string
        chatAppType:
          description: |-
            Type of chat app to display.
            Currently Intercom and Tidio are supported out of the box.
          default: Intercom
          type: string
        chatAppId:
          description: Intercom or other chat app ID
          type: string
        privacyPolicyLink:
          description: >-
            URL to redirect user to if clicks on Terms of Service link in
            sidebar.

            Defaults to Website URL if not provided.
          type: string
        termsOfServiceLink:
          description: >-
            URL to redirect user to if clicks on Terms of Service link in
            sidebar.

            Defaults to Website URL if not provided.
          type: string
        websiteURL:
          description: |-
            URL to redirect user to if clicks on Website link in sidebar.
            Hidden if not provided.
          type: string
        supportEmail:
          description: |-
            Support email to display to user if clicks on Email link in sidebar.
            Hidden if not provided.
          type: string
        supportPhone:
          description: >-
            Support phone number to display to user if clicks on Call us link in
            sidebar.

            Hidden if not provided.
          type: string
        blogURL:
          description: |-
            URL to redirect user to if clicks on Blog link in sidebar.
            Hidden if not provided.
          type: string
        hideLoginPage:
          description: |-
            Should the Login page be hidden to users.
            If disabled the Uanuthorized redirect URL has to be provided.
          default: true
          type: boolean
        showSignup:
          description: Should the Signup button be shown on the login page.
          default: false
          type: boolean
        unauthorizedRedirectURL:
          description: |-
            URL to redirect user to in case of unauthorized in app.
            Used only if Login page is not displayed.
          type: string
        passwordResetURL:
          description: |-
            URL to redirect user to when clicking on Signup link.
            Only visible on Login page if it's displayed.
          type: string
        signupURL:
          description: |-
            URL to redirect user to when clicking on Signup link.
            Only visible on Login page if it's displayed.
          type: string
        allowInPromo:
          description: |-
            Allow Space Invoices to showcase your brand in our promo materials.
            ie. website, blog, newsletter etc.
          default: true
          type: boolean
        interface:
          description: Allows hiding specific interface elements like menus and menu items.
          type: object
        id:
          $ref: '#/components/schemas/ObjectID'
        subscriptionId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    Subscription:
      properties:
        dateStart:
          type: string
          format: date-time
        active:
          default: true
          type: boolean
        billingCycle:
          default: month
          type: string
        billingLocation:
          description: Should subscription be charged from EU or US entity
          type: string
        currencyId:
          type: string
        canceledAt:
          type: string
          format: date-time
        churnedAt:
          type: string
          format: date-time
        comment:
          type: string
        gateway:
          type: string
        gatewayChargeRetries:
          default: 0
          type: number
          format: double
        gatewayPaymentMethodId:
          type: string
        recurrenceCount:
          type: number
          format: double
        cronLogs:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        id:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        planId:
          $ref: '#/components/schemas/ObjectID'
        _subscriptionPlan:
          $ref: '#/components/schemas/SubscriptionPlan'
      required:
        - dateStart
        - active
        - gatewayChargeRetries
      additionalProperties: false
    Plan:
      properties:
        description:
          type: string
        active:
          default: true
          type: boolean
        default:
          default: false
          type: boolean
        name:
          type: string
        identifier:
          type: string
        tier:
          type: number
          format: double
        documentLimit:
          default: 10
          type: number
          format: double
        priceDocuments:
          type: array
          items: {}
        organizationLimit:
          default: 1
          type: number
          format: double
        priceOrganization:
          type: number
          format: double
        priceFullUI:
          type: number
          format: double
        priceWhiteLabelUI:
          type: number
          format: double
        fee:
          description: |-
            Fee percent to charge based on issued documents
            if percent deal
          type: number
          format: double
        licenseFee:
          description: Fixed monthly license fee
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - active
        - default
        - name
        - identifier
        - tier
        - documentLimit
        - organizationLimit
      additionalProperties: false
    Country:
      properties:
        name:
          type: string
        alpha2Code:
          type: string
        alpha3Code:
          type: string
        nativeName:
          type: string
        numericCode:
          type: string
        taxes:
          type: array
          items:
            type: object
        states:
          type: array
          items:
            type: object
        currency:
          type: string
        translations:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        union:
          type: string
        defaults:
          description: Country specific default overrides
          type: array
          items:
            type: object
      required:
        - name
        - alpha2Code
        - alpha3Code
        - nativeName
      additionalProperties: false
    Price:
      properties:
        amount:
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        priceListId:
          $ref: '#/components/schemas/ObjectID'
        itemId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - amount
      additionalProperties: false
    ObjectID:
      type: string
      pattern: ^[a-fA-F\d]{24}$
    RecurrenceDate:
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        iteration:
          type: number
          format: double
        documentId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - date
        - iteration
      additionalProperties: false
    DocumentIssuer:
      properties:
        id:
          type: string
        throwEslogErrors:
          type: boolean
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - id
        - name
      additionalProperties: false
    DocumentClient:
      properties:
        id:
          type: string
        isEndCustomer:
          default: false
          type: boolean
        throwEslogErrors:
          type: boolean
        ipAddress:
          type: string
        fatturaPaChannelId:
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - id
        - name
      additionalProperties: false
    Furs:
      properties:
        eor:
          type: string
        zoi:
          type: string
        qr:
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        invoiceNumber:
          type: number
          format: double
        strategy:
          description: Fiscalization strategy used, C or B
          type: string
        operatorTaxNumber:
          description: |-
            Mandatory, can be omitted if person doesn't have a Slo tax number
            using omitOperatorTaxNumber
          type: string
        omitOperatorTaxNumber:
          description: |-
            Specify if operatorTaxNumber should be omitted in case operator
            doesn't have Slo tax number.
          default: false
          type: boolean
        operatorLabel:
          description: |-
            Label of operator ie. issuer of document.
            Copied from account creator.
          type: string
        foreignOperator:
          default: false
          type: boolean
        iteration:
          description: Iteration of document editing.
          default: 0
          type: number
          format: double
        printCount:
          description: Number of prints of document. If > 1 should print 'copy n' on it.
          default: 0
          type: number
          format: double
        environment:
          default: production
          type: string
        payload:
          type: object
        id:
          type: string
        accountId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - businessPremiseId
        - electronicDeviceId
        - invoiceNumber
        - strategy
        - omitOperatorTaxNumber
        - operatorLabel
        - foreignOperator
        - iteration
        - printCount
        - environment
      additionalProperties: false
    At:
      properties:
        hash:
          type: string
        qrString:
          type: string
        certificateVersion:
          type: string
        hashExtract:
          type: string
        id:
          type: string
        accountId:
          $ref: '#/components/schemas/ObjectID'
        previousDocumentId:
          $ref: '#/components/schemas/ObjectID'
        atcudSeriesId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - hash
        - qrString
        - certificateVersion
        - hashExtract
      additionalProperties: false
    Fina:
      properties:
        JIR:
          type: string
        ZKI:
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        invoiceNumber:
          type: number
          format: double
        strategy:
          description: Fiscalization strategy used, C or B
          type: string
        operatorTaxNumber:
          type: string
        operatorLabel:
          description: |-
            Label of operator ie. issuer of document.
            Copied from account creator.
          type: string
        paymentType:
          type: string
        environment:
          default: production
          type: string
        payload:
          type: object
        id:
          type: string
        accountId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - businessPremiseId
        - electronicDeviceId
        - invoiceNumber
        - strategy
        - operatorLabel
        - environment
      additionalProperties: false
    DocumentConversionRate:
      properties:
        id:
          type: string
        dualCurrency:
          description: |-
            Is conversion meant for dual currency display.
            i.e. for Croatian organizations from 5.9.2022 to 1.1.2023
            Shows conversion only for total and not taxes
          type: boolean
        from:
          type: string
        to:
          type: string
        rate:
          type: number
          format: double
        date:
          type: string
          format: date-time
        source:
          type: string
      required:
        - id
        - from
        - to
        - rate
        - date
        - source
      additionalProperties: false
    DocumentUnit:
      properties:
        id:
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - id
        - name
      additionalProperties: false
    Data:
      properties:
        id:
          type: string
        name:
          description: Name identifier of data
          type: string
        value:
          $ref: '#/components/schemas/x-any'
        options:
          description: |-
            Different data options.
            Ie. should the value be persistem to the document `onPDF: boolean`.
            This includes displaying on PDF.
            Note that only two values will be displayed per PDF on Client.
            Add Document data to export using `export: boolean`
          type: object
      required:
        - id
        - name
      additionalProperties: false
    BPay:
      properties:
        billerCode:
          type: string
        reference:
          type: string
        hidden:
          type: boolean
        id:
          type: string
      additionalProperties: false
    OrderItem:
      properties:
        description:
          default: ''
          type: string
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        priceGross:
          type: number
          format: double
        unit:
          type: string
        SKU:
          type: string
        onBehalf:
          description: tax number of company selling this item/service on behalf of
          type: string
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        _taxes:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemTax'
      required:
        - id
        - name
      additionalProperties: false
    OrderTransaction:
      properties:
        id:
          type: string
        amount:
          type: number
          format: double
        gateway:
          type: string
        type:
          type: string
        status:
          type: string
        tag:
          description: Payment tag for sub categorization
          type: string
        date:
          type: string
          format: date-time
        note:
          type: string
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - id
        - amount
        - gateway
        - type
        - status
        - date
      additionalProperties: false
    SubscriptionPlan:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        identifier:
          type: string
        tier:
          type: number
          format: double
        documentLimit:
          default: 10
          type: number
          format: double
        priceDocuments:
          type: array
          items: {}
        organizationLimit:
          default: 1
          type: number
          format: double
        priceOrganization:
          type: number
          format: double
        priceFullUI:
          type: number
          format: double
        priceWhiteLabelUI:
          type: number
          format: double
        fee:
          description: |-
            Fee percent to charge based on issued documents
            if percent deal
          type: number
          format: double
        licenseFee:
          description: Fixed monthly license fee
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - identifier
        - tier
        - documentLimit
        - organizationLimit
      additionalProperties: false
    OrderItemTax:
      properties:
        id:
          type: string
        rate:
          type: number
          format: double
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          default: true
          type: boolean
        compound:
          default: false
          type: boolean
        taxNumber:
          description: Tax number associated with this tax.
          type: string
      required:
        - id
        - rate
        - recoverable
        - compound
      additionalProperties: false
    _new_Payment:
      properties:
        amount:
          type: number
          format: double
        type:
          type: string
        tag:
          description: Payment tag for sub categorization
          type: string
        date:
          type: string
          format: date-time
        note:
          type: string
        transactionId:
          description: Transaction id from payment gateway
          type: string
        documentId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - amount
        - type
        - date
      additionalProperties: false
    _new_DocumentCategory:
      properties:
        amount:
          type: number
          format: double
        amountConverted:
          type: number
          format: double
        date:
          type: string
          format: date-time
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        documentId:
          $ref: '#/components/schemas/ObjectID'
        categoryId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - amount
      additionalProperties: false
    _new_Document:
      properties:
        _fatturaPa:
          type: object
        number:
          description: Auto-incremented on Document create if not provided.
          type: string
        previousDocumentId:
          type: string
        draft:
          default: false
          type: boolean
        date:
          description: Default is today.
          type: string
          format: date-time
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          description: In case service for period, this is the end date of the period.
          type: string
          format: date-time
        dateDue:
          description: Date invoice is due.
          type: string
          format: date-time
        dateValidTill:
          description: Date estimate is valid till.
          type: string
          format: date-time
        datePaid:
          description: Date advance invoice was paid.
          type: string
          format: date-time
        dateReceived:
          description: Date document was received, used for incoming documents.
          type: string
          format: date-time
        reference:
          description: Reference for Payment or other identification
          type: string
        total:
          description: Document total without taxes.
          type: number
          format: double
        totalConverted:
          description: Document total without taxes converted to organization's currency.
          type: number
          format: double
        totalDiscount:
          description: Total discount amount.
          type: number
          format: double
        totalWithTax:
          description: Document total with taxes.
          type: number
          format: double
        totalWithTaxConverted:
          description: Document total with taxes converted to organization's currency.
          type: number
          format: double
        decimalPlaces:
          default: 4
          type: number
          format: double
        note:
          description: >-
            Document note to client. Auto-set based on Organization's Defaults
            if not provided.
          type: string
        taxClause:
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document.

            Auto-set based on Organization's settings on Document create if not
            provided.
          type: string
        omitTaxes:
          description: |-
            If taxes should be omited when issuing document.
            Automatically populated on document if set using omit_tax_ default.
          type: boolean
        keepPricesAsGross:
          description: >-
            Forces not removing tax from gross price when saving document with
            omitTaxes set
          type: boolean
        ignoreOmitTaxes:
          description: Forces omit taxes setting to be ignored when saving document
          type: boolean
        footer:
          description: Auto-set based on Organization's Defaults if not provided.
          type: string
        signature:
          description: Auto-set based on Organization's Defaults if not provided.
          type: string
        type:
          description: Defaults is 'invoice'.
          default: invoice
          type: string
        displayName:
          description: Customize the dispay name of an estimate.
          type: string
        canceled:
          default: false
          type: boolean
        sentSnailMail:
          default: false
          type: boolean
        totalPaid:
          description: Total amount paid on Document.
          default: 0
          type: number
          format: double
        totalDue:
          description: Total amount still due on Document.
          default: 0
          type: number
          format: double
        paidInFull:
          description: Indicates if document was paid in full.
          default: false
          type: boolean
        currencyId:
          description: |-
            Defaults to Organization's currencyId if not provided.
            3 character ISO currency code.
          type: string
        _documentTaxes:
          description: Auto-populated array of unique taxes on document.
          type: array
          items:
            type: object
        _documentReverseTaxes:
          description: Auto-populated array of unique reverse taxes on document
          type: array
          items:
            type: object
        hasUnit:
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
          type: boolean
        validateEslog:
          description: >-
            Indicates if document should be validated based on eslog e-invoice
            format.
          type: boolean
        isValidEslog:
          description: >-
            Property indicating that a document is a valid by eslog e-invoice
            validation
          type: boolean
        uniqueId:
          description: >-
            Optional user defined random unique value for each individual
            document.

            Used to prevent saving same document twice in case of connection
            drop.

            If a match happens the system returns the found document instead of
            a new one.
          type: string
        customTotals:
          description: >-
            If true document tax and amount totals won't be calculated, provided
            values will be used instead. Incoming documents only.
          type: boolean
        incoming:
          description: Indicates document is incoming ie. expense if invoice etc.
          default: false
          type: boolean
        numberInternal:
          description: Internal tracking number for incoming documents.
          type: string
        equalization:
          description: Cent equalization amount.
          type: number
          format: double
        sandbox:
          type: boolean
        issuedAt:
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
          type: string
          format: date-time
        shareableId:
          description: id used for sharing document using a public link
          type: string
        stripeConnectPaymentIntent:
          type: object
        chargesDisabled:
          description: Indicates if payment processing is disabled for this document
          type: boolean
        dateYear:
          type: number
          format: double
        documentIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        _documentIssuer:
          $ref: '#/components/schemas/DocumentIssuer'
        clientId:
          $ref: '#/components/schemas/ObjectID'
        _documentClient:
          $ref: '#/components/schemas/DocumentClient'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        _comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        _furs:
          $ref: '#/components/schemas/Furs'
        _at:
          $ref: '#/components/schemas/At'
        _fina:
          $ref: '#/components/schemas/Fina'
        _documentConversionRate:
          $ref: '#/components/schemas/DocumentConversionRate'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        _documentUnit:
          $ref: '#/components/schemas/DocumentUnit'
        priceListId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        destinationWarehouseId:
          $ref: '#/components/schemas/ObjectID'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
        _bPay:
          $ref: '#/components/schemas/BPay'
      additionalProperties: false
    _new_Client:
      properties:
        contact:
          type: string
        note:
          type: string
        isEndCustomer:
          default: false
          type: boolean
        type:
          description: Type of client, customer, supplier or both.
          type: string
        companyId:
          description: Reference to companies model for internal analysis.
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        unitIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    _new_Item:
      properties:
        description:
          default: ''
          type: string
        type:
          description: Is item sold, bought or both
          type: string
        purchasePrice:
          type: number
          format: double
        purchasePriceGross:
          type: number
          format: double
        name:
          type: string
        price:
          type: number
          format: double
        priceGross:
          type: number
          format: double
        classification:
          type: string
        unit:
          type: string
        SKU:
          type: string
        EAN:
          type: string
        trackInventory:
          type: boolean
        onBehalf:
          description: tax number of company selling this item/service on behalf of
          type: string
        taxExemptionCode:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        taxExemptionReason:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        _taxExemption:
          $ref: '#/components/schemas/TaxExemption'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        taxIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        purchaseTaxIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        unitIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        _components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      additionalProperties: false
    _new_Tax:
      properties:
        classification:
          type: string
        country:
          description: |-
            Country the tax belongs to
            Defaults to organization country
          type: string
        countryAlpha2Code:
          type: string
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          default: true
          type: boolean
        compound:
          default: false
          type: boolean
        taxNumber:
          description: Tax number associated with this tax.
          type: string
        _taxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - recoverable
        - compound
      additionalProperties: false
    _new_Shopify:
      properties:
        shop:
          description: Unique shop URL
          type: string
        apiKey:
          type: string
        password:
          type: string
        accessToken:
          type: string
        shopSettings:
          type: object
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
        accountId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - shop
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Stripe:
      properties:
        name:
          description: Name of account for user's own identification
          type: string
        apiKey:
          type: string
        active:
          default: true
          type: boolean
        autoSend:
          description: If invoice should be sent to customer automatically upon creation
          default: true
          type: boolean
        lang:
          type: string
        invoiceAction:
          description: |-
            Action to listen for issuing invoices.
            Defaults to first received if not set.
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        autoTaxClassification:
          description: >-
            If set, will automatically classify tax for invoice items.

            Possible values: 'standard' (default), reduced', 'zero', 'none' or
            custom.
          default: standard
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        accountId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - name
        - active
        - autoSend
      additionalProperties: false
    _new_TicketingHub:
      properties:
        token:
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      additionalProperties: false
    _new_Default:
      properties:
        description:
          type: string
        name:
          type: string
        value:
          $ref: '#/components/schemas/x-any'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        l10n:
          description: Object for storing localized values of strings
          type: object
      required:
        - name
      additionalProperties: false
    _new_BusinessPremise:
      properties:
        type:
          type: string
        taxNumber:
          description: Tax number of responsible person on premise
          type: string
        businessPremiseId:
          type: string
        premiseType:
          type: string
        cadastralNumber:
          type: number
          format: double
        buildingNumber:
          type: number
          format: double
        buildingSectionNumber:
          type: number
          format: double
        street:
          type: string
        houseNumber:
          type: string
        houseNumberAdditional:
          type: string
        community:
          type: string
        city:
          type: string
        postalCode:
          type: string
        numbers:
          type: object
        provider:
          description: The fiscalization provider the premise belongs to
          default: furs
          type: string
        environment:
          default: production
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
      required:
        - businessPremiseId
      additionalProperties: false
    _new_ElectronicDevice:
      properties:
        electronicDeviceId:
          type: string
        numbers:
          type: object
        provider:
          default: furs
          type: string
        environment:
          default: production
          type: string
        businessPremiseId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - electronicDeviceId
      additionalProperties: false
    _new_Unit:
      properties:
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    _new_Category:
      properties:
        description:
          type: string
        name:
          type: string
        alias:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - name
        - alias
      additionalProperties: false
    _new_PriceList:
      properties:
        name:
          type: string
        active:
          default: true
          type: boolean
        activeFrom:
          type: string
          format: date-time
        activeTo:
          type: string
          format: date-time
        type:
          description: Is price list for sale or purchase items
          default: sale
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        clientId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - name
      additionalProperties: false
    _new_Warehouse:
      properties:
        name:
          type: string
        default:
          default: false
          type: boolean
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - name
      additionalProperties: false
    _new_Webhook:
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        url:
          type: string
        enabled:
          default: true
          type: boolean
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - url
      additionalProperties: false
    _new_Magento1:
      properties:
        host:
          description: Store host address used for API
          type: string
        apiUser:
          type: string
        apiKey:
          type: string
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Woocommerce:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_CustomIntegration:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Thrivecart:
      properties:
        addTax:
          description: Should tax be added to items
          type: boolean
        addedTaxRateClassification:
          description: >-
            Classification of default tax to use for items that weren't related
            to saved items.

            Defaults to 'standard'
          type: string
        ignoreTestOrders:
          description: Ignore orders made in test mode
          type: boolean
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Bokun:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Shopamine:
      properties:
        shop:
          description: |-
            Unique shop URL/name used when querying Shopamine API
            Required only when updating inventory on shop from API
          type: string
        apiKey:
          description: Required only when updating inventory on shop from API
          type: string
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Organization:
      properties:
        locale:
          type: string
        timezone:
          type: string
        active:
          default: true
          type: boolean
        supportPin:
          type: number
          format: double
        size:
          type: string
        industry:
          type: string
        companyId:
          description: Reference to companies model for internal tracking.
          type: string
        billingEmail:
          description: Billing email used for SI customers if is billing organization
          type: string
        activatedAt:
          type: string
          format: date-time
        deactivatedAt:
          type: string
          format: date-time
        sandbox:
          type: boolean
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - active
        - name
      additionalProperties: false
    _new_Account:
      properties:
        firstname:
          type: string
        lastname:
          type: string
        taxNumber:
          description: Personal tax number, required for fiscalization.
          type: string
        role:
          description: Role in company.
          type: string
        locale:
          default: en
          type: string
        label:
          description: Label of person issuing invoices. Required for fiscalization.
          type: string
        softwareSupplierTaxNumber:
          description: >-
            For tax number of clients providing fiscal verification to their end
            customers.
          type: string
        activateRedirect:
          description: Custom activation redirect URL for sub accounts of this account.
          type: string
        invitationLink:
          description: Custom link where invited user can review invitations.
          type: string
        invitationNewLink:
          description: Custom link to view invitation for non existing user.
          type: string
        documentShareableLink:
          description: Custom link for shareable document view.
          type: string
        disableCreatingChildOrganizations:
          description: Disable child accounts creating organizations
          type: boolean
        resetRedirect:
          description: Custom password reset redirect URL for sub accounts of this account.
          type: string
        newsletter:
          description: Consent to newsletter on signup
          type: boolean
        productUpdates:
          description: Consent to product updates on signup
          type: boolean
        skipChildAccountVerification:
          type: boolean
        realm:
          type: string
        username:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        masterId:
          $ref: '#/components/schemas/ObjectID'
        parentId:
          $ref: '#/components/schemas/ObjectID'
        billingOrganizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - email
      additionalProperties: false
    _new_WhiteLabel:
      properties:
        active:
          default: false
          type: boolean
        name:
          description: Name of your White Label instance.
          type: string
        domain:
          description: Your domain for Apollo white label implementation.
          type: string
        subdomain:
          description: Apollo subdomain for testing white label implemention.
          type: string
        baseColor:
          type: string
        logo:
          type: string
        separateDashboardIcon:
          description: >-
            Should a separate icon for dashboard be used in the sidebar instead
            of the logo serving as the button.
          default: false
          type: boolean
        googleAnalyticsId:
          description: Google analytics tracking code.
          type: string
        chatAppType:
          description: |-
            Type of chat app to display.
            Currently Intercom and Tidio are supported out of the box.
          default: Intercom
          type: string
        chatAppId:
          description: Intercom or other chat app ID
          type: string
        privacyPolicyLink:
          description: >-
            URL to redirect user to if clicks on Terms of Service link in
            sidebar.

            Defaults to Website URL if not provided.
          type: string
        termsOfServiceLink:
          description: >-
            URL to redirect user to if clicks on Terms of Service link in
            sidebar.

            Defaults to Website URL if not provided.
          type: string
        websiteURL:
          description: |-
            URL to redirect user to if clicks on Website link in sidebar.
            Hidden if not provided.
          type: string
        supportEmail:
          description: |-
            Support email to display to user if clicks on Email link in sidebar.
            Hidden if not provided.
          type: string
        supportPhone:
          description: >-
            Support phone number to display to user if clicks on Call us link in
            sidebar.

            Hidden if not provided.
          type: string
        blogURL:
          description: |-
            URL to redirect user to if clicks on Blog link in sidebar.
            Hidden if not provided.
          type: string
        hideLoginPage:
          description: |-
            Should the Login page be hidden to users.
            If disabled the Uanuthorized redirect URL has to be provided.
          default: true
          type: boolean
        showSignup:
          description: Should the Signup button be shown on the login page.
          default: false
          type: boolean
        unauthorizedRedirectURL:
          description: |-
            URL to redirect user to in case of unauthorized in app.
            Used only if Login page is not displayed.
          type: string
        passwordResetURL:
          description: |-
            URL to redirect user to when clicking on Signup link.
            Only visible on Login page if it's displayed.
          type: string
        signupURL:
          description: |-
            URL to redirect user to when clicking on Signup link.
            Only visible on Login page if it's displayed.
          type: string
        allowInPromo:
          description: |-
            Allow Space Invoices to showcase your brand in our promo materials.
            ie. website, blog, newsletter etc.
          default: true
          type: boolean
        interface:
          description: Allows hiding specific interface elements like menus and menu items.
          type: object
        subscriptionId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    _new_AtcudSeries:
      properties:
        seriesId:
          type: string
        code:
          type: string
        documentType:
          type: string
        startDate:
          type: string
          format: date-time
        firstNumber:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - seriesId
        - code
        - documentType
        - startDate
        - firstNumber
      additionalProperties: false
    _new_Price:
      properties:
        amount:
          type: number
          format: double
        priceListId:
          $ref: '#/components/schemas/ObjectID'
        itemId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          description: Custom field for freeform data input
          default: {}
          type: object
      required:
        - amount
      additionalProperties: false
    loopback.Count:
      title: loopback.Count
      type: object
      x-typescript-type: '@loopback/repository#Count'
      properties:
        count:
          type: number
    Account.ScopeFilter:
      title: Account.ScopeFilter
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              additionalProperties: true
            - type: array
              items:
                type: string
              uniqueItems: true
        include:
          type: array
          items:
            type: object
            additionalProperties: true
    Account.IncludeFilter.Items:
      title: Account.IncludeFilter.Items
      type: object
      properties:
        relation:
          type: string
          enum:
            - accessTokens
            - organizations
            - stripeConnect
            - paymentProcessing
        scope:
          $ref: '#/components/schemas/Account.ScopeFilter'
    Account.Filter:
      title: Account.Filter
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          title: Account.WhereFilter
          type: object
          additionalProperties: true
        fields:
          title: Account.Fields
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                custom:
                  type: boolean
                id:
                  type: boolean
                password:
                  type: boolean
                email:
                  type: boolean
                emailVerified:
                  type: boolean
                verificationToken:
                  type: boolean
                locale:
                  type: boolean
                firstname:
                  type: boolean
                lastname:
                  type: boolean
                taxNumber:
                  type: boolean
                label:
                  type: boolean
                parentId:
                  type: boolean
                masterId:
                  type: boolean
                billingOrganizationId:
                  type: boolean
                role:
                  type: boolean
                softwareSupplierTaxNumber:
                  type: boolean
                activateRedirect:
                  type: boolean
                invitationLink:
                  type: boolean
                invitationNewLink:
                  type: boolean
                documentShareableLink:
                  type: boolean
                disableCreatingChildOrganizations:
                  type: boolean
                resetRedirect:
                  type: boolean
                skipChildAccountVerification:
                  type: boolean
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - custom
                  - id
                  - password
                  - email
                  - emailVerified
                  - verificationToken
                  - locale
                  - firstname
                  - lastname
                  - taxNumber
                  - label
                  - parentId
                  - masterId
                  - billingOrganizationId
                  - role
                  - softwareSupplierTaxNumber
                  - activateRedirect
                  - invitationLink
                  - invitationNewLink
                  - documentShareableLink
                  - disableCreatingChildOrganizations
                  - resetRedirect
                  - skipChildAccountVerification
              uniqueItems: true
        include:
          title: Account.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Account.IncludeFilter.Items'
              - type: string
      x-typescript-type: '@loopback/repository#Filter<Account>'
    AtcudSeries.ScopeFilter:
      title: AtcudSeries.ScopeFilter
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              properties: {}
              additionalProperties: true
            - type: array
              items:
                type: string
              uniqueItems: true
        include:
          type: array
          items:
            type: object
            properties: {}
            additionalProperties: true
    AtcudSeries.IncludeFilter.Items:
      title: AtcudSeries.IncludeFilter.Items
      type: object
      properties:
        relation:
          type: string
          enum:
            - organization
        scope:
          $ref: '#/components/schemas/AtcudSeries.ScopeFilter'
    AtcudSeries.Filter:
      title: AtcudSeries.Filter
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        fields:
          title: AtcudSeries.Fields
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                id:
                  type: boolean
                seriesId:
                  type: boolean
                code:
                  type: boolean
                documentType:
                  type: boolean
                startDate:
                  type: boolean
                firstNumber:
                  type: boolean
                organizationId:
                  type: boolean
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - id
                  - seriesId
                  - code
                  - documentType
                  - startDate
                  - firstNumber
                  - organizationId
                example: createdAt
              uniqueItems: true
        include:
          title: AtcudSeries.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AtcudSeries.IncludeFilter.Items'
              - type: string
      x-typescript-type: '@loopback/repository#Filter<AtcudSeries>'
    AtcudSeries.Filter1:
      title: AtcudSeries.Filter
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          title: AtcudSeries.WhereFilter
          type: object
          additionalProperties: true
        fields:
          title: AtcudSeries.Fields
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                id:
                  type: boolean
                seriesId:
                  type: boolean
                code:
                  type: boolean
                documentType:
                  type: boolean
                startDate:
                  type: boolean
                firstNumber:
                  type: boolean
                organizationId:
                  type: boolean
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - id
                  - seriesId
                  - code
                  - documentType
                  - startDate
                  - firstNumber
                  - organizationId
                example: createdAt
              uniqueItems: true
        include:
          title: AtcudSeries.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AtcudSeries.IncludeFilter.Items'
              - type: string
      x-typescript-type: '@loopback/repository#Filter<AtcudSeries>'
    StripeConnect.ScopeFilter:
      title: StripeConnect.ScopeFilter
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              properties: {}
              additionalProperties: true
            - type: array
              items:
                type: string
              uniqueItems: true
        include:
          type: array
          items:
            type: object
            properties: {}
            additionalProperties: true
    StripeConnect.IncludeFilter.Items:
      title: StripeConnect.IncludeFilter.Items
      type: object
      properties:
        relation:
          type: string
          enum:
            - account
            - stripeConnectAccounts
        scope:
          $ref: '#/components/schemas/StripeConnect.ScopeFilter'
    StripeConnect.Filter:
      title: StripeConnect.Filter
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          title: StripeConnect.WhereFilter
          type: object
          additionalProperties: true
        fields:
          title: StripeConnect.Fields
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                custom:
                  type: boolean
                id:
                  type: boolean
                privateKey:
                  type: boolean
                publicKey:
                  type: boolean
                webhookSecret:
                  type: boolean
                connectWebhookSecret:
                  type: boolean
                active:
                  type: boolean
                refreshUrl:
                  type: boolean
                returnUrl:
                  type: boolean
                applicationFee:
                  type: boolean
                spaceInvoicesFee:
                  type: boolean
                accountId:
                  type: boolean
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - custom
                  - id
                  - privateKey
                  - publicKey
                  - webhookSecret
                  - connectWebhookSecret
                  - active
                  - refreshUrl
                  - returnUrl
                  - applicationFee
                  - spaceInvoicesFee
                  - accountId
                example: createdAt
              uniqueItems: true
        include:
          title: StripeConnect.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/StripeConnect.IncludeFilter.Items'
              - type: string
      x-typescript-type: '@loopback/repository#Filter<StripeConnect>'
    Invoice.ScopeFilter:
      title: Invoice.ScopeFilter
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              properties: {}
              additionalProperties: true
            - type: array
              items:
                type: string
              uniqueItems: true
        include:
          type: array
          items:
            type: object
            properties: {}
            additionalProperties: true
    Invoice.IncludeFilter.Items:
      title: Invoice.IncludeFilter.Items
      type: object
      properties:
        relation:
          type: string
          enum:
            - organization
            - account
            - client
        scope:
          $ref: '#/components/schemas/Invoice.ScopeFilter'
    Invoice.Filter:
      title: Invoice.Filter
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        fields:
          title: Invoice.Fields
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                custom:
                  type: boolean
                l10n:
                  type: boolean
                _isDeleted:
                  type: boolean
                deletedAt:
                  type: boolean
                number:
                  type: boolean
                date:
                  type: boolean
                reference:
                  type: boolean
                total:
                  type: boolean
                totalConverted:
                  type: boolean
                totalDiscount:
                  type: boolean
                totalWithTax:
                  type: boolean
                totalWithTaxConverted:
                  type: boolean
                decimalPlaces:
                  type: boolean
                note:
                  type: boolean
                taxClause:
                  type: boolean
                omitTaxes:
                  type: boolean
                footer:
                  type: boolean
                signature:
                  type: boolean
                type:
                  type: boolean
                sentSnailMail:
                  type: boolean
                currencyId:
                  type: boolean
                _documentTaxes:
                  type: boolean
                _documentReverseTaxes:
                  type: boolean
                hasUnit:
                  type: boolean
                uniqueId:
                  type: boolean
                equalization:
                  type: boolean
                issuedAt:
                  type: boolean
                dateYear:
                  type: boolean
                shareableId:
                  type: boolean
                _documentIssuer:
                  type: boolean
                _documentClient:
                  type: boolean
                _documentItems:
                  type: boolean
                incoming:
                  type: boolean
                id:
                  type: boolean
                draft:
                  type: boolean
                dateService:
                  type: boolean
                dateServiceTo:
                  type: boolean
                dateDue:
                  type: boolean
                canceled:
                  type: boolean
                totalPaid:
                  type: boolean
                totalDue:
                  type: boolean
                paidInFull:
                  type: boolean
                chargesDisabled:
                  type: boolean
                stripeConnectPaymentIntent:
                  type: boolean
                organizationId:
                  type: boolean
                accountId:
                  type: boolean
                clientId:
                  type: boolean
                _fatturaPa:
                  type: boolean
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - custom
                  - l10n
                  - _isDeleted
                  - deletedAt
                  - number
                  - date
                  - reference
                  - total
                  - totalConverted
                  - totalDiscount
                  - totalWithTax
                  - totalWithTaxConverted
                  - decimalPlaces
                  - note
                  - taxClause
                  - omitTaxes
                  - footer
                  - signature
                  - type
                  - sentSnailMail
                  - currencyId
                  - _documentTaxes
                  - _documentReverseTaxes
                  - hasUnit
                  - uniqueId
                  - equalization
                  - issuedAt
                  - dateYear
                  - shareableId
                  - _documentIssuer
                  - _documentClient
                  - _documentItems
                  - incoming
                  - id
                  - draft
                  - dateService
                  - dateServiceTo
                  - dateDue
                  - canceled
                  - totalPaid
                  - totalDue
                  - paidInFull
                  - chargesDisabled
                  - stripeConnectPaymentIntent
                  - organizationId
                  - accountId
                  - clientId
                  - _fatturaPa
                example: createdAt
              uniqueItems: true
        include:
          title: Invoice.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Invoice.IncludeFilter.Items'
              - type: string
      x-typescript-type: '@loopback/repository#Filter<Invoice>'
    FatturaPaControllerCreateWebhooksSubscriptionRequest:
      type: string
    OrganizationPaymentIntentControllerCreateAuthorizedPaymentIntentRequest: {}
    OrganizationPaymentIntentControllerCreatePaymentIntentRequest: {}
    PaymentProcessingControllerCreateWebhookRequest:
      type: object
    StripeConnectControllerCreateWebhooksRequest:
      type: object
    DocumentSendNotificationRequest:
      type: object
      properties:
        recipients:
          description: Comma delimited list of emails
          type: string
        message:
          type: string
        subject:
          type: string
        sendCopy:
          description: Indicates if copy should be sent to sender
          type: boolean
        associateEmail:
          description: Indicates if email should be saved to client
          type: boolean
        excludedAttachmentIds:
          description: >-
            Specifies which attachments, besides document, should be sent along
            with the document
          type: string
          format: JSON
        sendEslogAttachment:
          description: If this flag is set to true, eslog will be added to attachments.
          type: boolean
      required:
        - recipients
    DocumentGenerateShareableIdRequest:
      type: object
      properties:
        regenerate:
          description: Regenerate shareable id
          type: boolean
    TaxCreateClauseTypeRequest:
      description: Body resembling a document.
      type: object
    TaxCreateClauseTypeRequest1:
      description: Body resembling a document.
      type: object
    TaxCreateClauseTypeRequest2:
      description: Body resembling a document.
      type: object
    TaxCreateClauseTypeRequest3:
      description: Body resembling a document.
      type: object
    ClientSendReminderRequest:
      type: object
      properties:
        email:
          type: string
        l:
          type: string
    OrganizationUploadImageRequest:
      type: object
      properties:
        type:
          type: string
      required:
        - type
    OrganizationUploadCertificateRequest:
      type: object
      properties:
        type:
          description: Type of certificate ie. furs
          type: string
        environment:
          description: Environment certificate is intended for, default is `production`.
          type: string
        passphrase:
          description: Type of certificate ie. furs
          type: string
      required:
        - type
    OrganizationInviteUserRequest:
      type: object
      properties:
        accountId:
          description: Id of account being invited, optional if email is provided
          type: string
        email:
          description: Email of user to invite, optional if inviteeId is provided
          type: string
        requireConfirmation:
          description: >-
            Indicates if invitee must accept the invitation before getting
            access.

            Only verified top level Space Invoices accounts can set this to
            false.
          type: boolean
        sendEmail:
          description: >-
            Should an email be sent to the invitee.

            Can only be turned off for invitations that don't require
            confirmation.
          type: boolean
        role:
          description: >-
            Role of invitee, 'default' for normal, 'readonly' for limited and
            'admin' for full access. Defaults to 'default'.
          type: string
    OrganizationRedirectMailgunToModelRequest:
      description: Mailgun object
      type: object
    OrganizationRedirectMailgunToModelRequest1:
      description: Mailgun object
      type: object
    OrganizationRedirectMailgunToModelRequest2:
      description: Mailgun object
      type: object
    OrganizationRedirectMailgunToModelRequest3:
      description: Mailgun object
      type: object
    ShopifyImportIntegrationDataRequest:
      type: object
      properties:
        type:
          type: string
        importOptions:
          type: string
          format: JSON
      required:
        - type
    AccountUserLoginRequest:
      type: object
    AccountUserLoginRequest1:
      type: object
    AccountUserLoginRequest2:
      type: object
    AccountUserLoginRequest3:
      type: object
    AccountChangePasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword
    AccountResetPasswordViaTokenRequest:
      type: object
      properties:
        newPassword:
          type: string
      required:
        - newPassword
    AccountImpersonateChildRequest:
      type: object
      properties:
        email:
          description: Account's email
          type: string
        id:
          description: Account's id
          type: string
        ttl:
          description: TTL for generated token. Default 2 months.
          type: number
          format: double
    SubscriptionAddPaymentMethodRequest:
      type: object
      properties:
        paymentMethod:
          type: string
          format: JSON
      required:
        - paymentMethod
    MessageSubmitContactFormRequest:
      type: object
      properties:
        email:
          type: string
        company:
          type: string
        message:
          type: string
      required:
        - email
        - company
        - message
    GeoIpParseIpToGeoLocationRequest:
      type: object
      properties:
        ip:
          type: string
      required:
        - ip
    AccountOrganizationChangeRoleRequest:
      type: object
      properties:
        role:
          description: >-
            Role of invitee, one of 'default', 'readonly' and 'admin'. Defaults
            to 'default'.
          type: string
    TyplessCreateWebhookRequest:
      type: object
    TyplessCreateWebhookRequest1:
      type: object
    TyplessCreateWebhookRequest2:
      type: object
    TyplessCreateWebhookRequest3:
      type: object
    SendgridWebhookNotificationRequest:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    SendgridWebhookNotificationRequest1:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    SendgridWebhookNotificationRequest2:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    SendgridWebhookNotificationRequest3:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    HealthControllerGetStatusResponse:
      type: object
      properties:
        status:
          type: string
        checks:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              state:
                type: string
              data:
                type: object
                properties:
                  reason:
                    type: string
    HealthControllerGetStatus500Response:
      type: object
      properties:
        status:
          type: string
        checks:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              state:
                type: string
              data:
                type: object
                properties:
                  reason:
                    type: string
    HealthControllerGetStatus503Response:
      type: object
      properties:
        status:
          type: string
        checks:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              state:
                type: string
              data:
                type: object
                properties:
                  reason:
                    type: string
    HealthControllerGetStatus200Response:
      type: object
      properties:
        status:
          type: string
        checks:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              state:
                type: string
              data:
                type: object
                properties:
                  reason:
                    type: string
    AccountControllerListResponse:
      type: array
      items:
        $ref: '#/components/schemas/AccountWithRelations'
    FatturaPaControllerCreateWebhooksSubscriptionResponse:
      type: string
    AtcudSeriesControllerGetByOrganizationResponse:
      type: array
      items:
        $ref: '#/components/schemas/AtcudSeriesWithRelations'
    OrganizationMerchantLinkControllerGetMerchantLinkResponse:
      type: object
      properties:
        url:
          type: string
      required:
        - url
    OrganizationPaymentIntentControllerGetPaymentIntentsResponse:
      type: array
      items:
        $ref: '#/components/schemas/PaymentIntent'
    OrganizationStripeConnectAccountLinkControllerGetStripeLinkResponse:
      type: object
      properties:
        url:
          type: string
      required:
        - url
    OrganizationTransactionControllerListByIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/Transaction'
    PaymentProcessingControllerCreateWebhookResponse:
      type: object
      properties: {}
      example: {}
    AccountPaymentProcessingControllerUpdatePaymentProcessingResponse:
      type: object
      properties: {}
      example: {}
    StripeConnectAccountControllerUpdateByIdResponse:
      type: object
      properties: {}
      example: {}
    StripeConnectControllerCreateWebhooksResponse:
      type: object
      properties: {}
      example: {}
    AccountStripeConnectControllerUpdateStripeConnectResponse:
      type: object
      properties: {}
      example: {}
    InvoiceControllerRemoveByIdResponse:
      type: object
      properties: {}
      example: {}
    InvoiceControllerUpdateByIdResponse:
      type: object
      properties: {}
      example: {}
    InvoiceControllerUpdateById204Response:
      type: object
      properties: {}
      example: {}
    DocumentGetPaymentsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Payment'
    DocumentGetPayments200Response:
      type: array
      items:
        $ref: '#/components/schemas/Payment'
    DocumentCountPaymentsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    DocumentCountPayments200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    DocumentDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    DocumentDeleteById200Response:
      type: object
    DocumentSendNotificationResponse:
      type: object
      properties:
        success:
          type: boolean
    DocumentSendNotification200Response:
      type: object
      properties:
        success:
          type: boolean
    DocumentCancelByIdResponse:
      type: object
      properties:
        success:
          type: boolean
    DocumentCancelById200Response:
      type: object
      properties:
        success:
          type: boolean
    DocumentMarkUncancelledResponse:
      type: object
      properties:
        success:
          type: boolean
    DocumentMarkUncancelled200Response:
      type: object
      properties:
        success:
          type: boolean
    DocumentFiscallyVerifyResponse:
      type: object
      properties: {}
      example: {}
    DocumentFiscallyVerify200Response:
      type: object
    DocumentGenerateEslogXmlResponse:
      description: The xml of the document
      type: string
      format: binary
    DocumentGenerateEslogXml200Response:
      description: The xml of the document
      type: string
      format: binary
    DocumentGetPdfByIdResponse:
      description: The pdf of the invoice
      type: string
      format: binary
    DocumentGetPdfById200Response:
      description: The pdf of the invoice
      type: string
      format: binary
    DocumentMarkAsSentViaSnailMailResponse:
      type: object
      properties:
        success:
          type: boolean
    DocumentMarkAsSentViaSnailMail200Response:
      type: object
      properties:
        success:
          type: boolean
    DocumentUploadAttachmentResponse:
      description: Returns fileMeta object containing metadata about uploaded attachment
      type: object
    DocumentUploadAttachment200Response:
      description: Returns fileMeta object containing metadata about uploaded attachment
      type: object
    DocumentConvertXmlToJsonResponse:
      description: Returns parsed json
      type: object
    DocumentConvertXmlToJson200Response:
      description: Returns parsed json
      type: object
    DocumentGetOutgoingDocumentsResponse:
      type: object
      properties:
        success:
          type: boolean
    DocumentGetOutgoingDocuments200Response:
      type: object
      properties:
        success:
          type: boolean
    DocumentGetIncomingResponse:
      type: object
      properties:
        success:
          type: boolean
    DocumentGetIncoming200Response:
      type: object
      properties:
        success:
          type: boolean
    DocumentGenerateShareableIdResponse:
      type: object
      properties:
        shareableId:
          description: Shareable document id
          type: string
    DocumentGenerateShareableId200Response:
      type: object
      properties:
        shareableId:
          description: Shareable document id
          type: string
    DocumentGetByShareableIdResponse:
      type: object
      properties: {}
      example: {}
    DocumentGetByShareableId200Response:
      type: object
    DocumentGetAttachmentByShareableIdResponse:
      description: The file
      type: string
      format: binary
    DocumentGetAttachmentByShareableId200Response:
      description: The file
      type: string
      format: binary
    ItemQueryInventoriesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Inventory'
    ItemQueryInventories200Response:
      type: array
      items:
        $ref: '#/components/schemas/Inventory'
    ItemDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    ItemDeleteById200Response:
      type: object
    TaxDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    TaxDeleteById200Response:
      type: object
    TaxCreateClauseTypeResponse:
      type: object
      properties:
        taxClauseType:
          type: string
        issuerCountry:
          type: object
        clientCountry:
          type: object
    TaxCreateClauseType200Response:
      type: object
      properties:
        taxClauseType:
          type: string
        issuerCountry:
          type: object
        clientCountry:
          type: object
    ClientDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    ClientDeleteById200Response:
      type: object
    ClientSendReminderResponse:
      type: object
      properties:
        success:
          type: boolean
    ClientSendReminder200Response:
      type: object
      properties:
        success:
          type: boolean
    OrganizationQueryDocumentsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Document'
    OrganizationQueryDocuments200Response:
      type: array
      items:
        $ref: '#/components/schemas/Document'
    OrganizationCountDocumentsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountDocuments200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryClientsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Client'
    OrganizationQueryClients200Response:
      type: array
      items:
        $ref: '#/components/schemas/Client'
    OrganizationCountClientsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountClients200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryItemsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Item'
    OrganizationQueryItems200Response:
      type: array
      items:
        $ref: '#/components/schemas/Item'
    OrganizationCountItemsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountItems200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryTaxesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Tax'
    OrganizationQueryTaxes200Response:
      type: array
      items:
        $ref: '#/components/schemas/Tax'
    OrganizationCountTaxesResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountTaxes200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryShopifyResponse:
      type: array
      items:
        $ref: '#/components/schemas/Shopify'
    OrganizationQueryShopify200Response:
      type: array
      items:
        $ref: '#/components/schemas/Shopify'
    OrganizationCountShopifyResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountShopify200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetStripeResponse:
      type: array
      items:
        $ref: '#/components/schemas/Stripe'
    OrganizationGetStripe200Response:
      type: array
      items:
        $ref: '#/components/schemas/Stripe'
    OrganizationCountStripeResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountStripe200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetTicketingHubResponse:
      type: array
      items:
        $ref: '#/components/schemas/TicketingHub'
    OrganizationGetTicketingHub200Response:
      type: array
      items:
        $ref: '#/components/schemas/TicketingHub'
    OrganizationCountTicketingHubResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountTicketingHub200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryRecurrencesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Recurrence'
    OrganizationQueryRecurrences200Response:
      type: array
      items:
        $ref: '#/components/schemas/Recurrence'
    OrganizationCountRecurrencesResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountRecurrences200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetPaymentsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Payment'
    OrganizationGetPayments200Response:
      type: array
      items:
        $ref: '#/components/schemas/Payment'
    OrganizationCountPaymentsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountPayments200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetDefaultsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Default'
    OrganizationGetDefaults200Response:
      type: array
      items:
        $ref: '#/components/schemas/Default'
    OrganizationCountDefaultsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountDefaults200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetBusinessPremisesResponse:
      type: array
      items:
        $ref: '#/components/schemas/BusinessPremise'
    OrganizationGetBusinessPremises200Response:
      type: array
      items:
        $ref: '#/components/schemas/BusinessPremise'
    OrganizationQueryElectronicDevicesResponse:
      type: array
      items:
        $ref: '#/components/schemas/ElectronicDevice'
    OrganizationQueryElectronicDevices200Response:
      type: array
      items:
        $ref: '#/components/schemas/ElectronicDevice'
    OrganizationGetAccountOrganizationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/AccountOrganization'
    OrganizationGetAccountOrganizations200Response:
      type: array
      items:
        $ref: '#/components/schemas/AccountOrganization'
    OrganizationCountAccountOrganizationsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountAccountOrganizations200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryUnitsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Unit'
    OrganizationQueryUnits200Response:
      type: array
      items:
        $ref: '#/components/schemas/Unit'
    OrganizationCountUnitsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountUnits200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetCategoriesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    OrganizationGetCategories200Response:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    OrganizationCountCategoriesResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountCategories200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryDocumentCategoriesResponse:
      type: array
      items:
        $ref: '#/components/schemas/DocumentCategory'
    OrganizationQueryDocumentCategories200Response:
      type: array
      items:
        $ref: '#/components/schemas/DocumentCategory'
    OrganizationCountDocumentCategoriesResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountDocumentCategories200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryPriceListsResponse:
      type: array
      items:
        $ref: '#/components/schemas/PriceList'
    OrganizationQueryPriceLists200Response:
      type: array
      items:
        $ref: '#/components/schemas/PriceList'
    OrganizationCountPriceListsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountPriceLists200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryWarehousesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Warehouse'
    OrganizationQueryWarehouses200Response:
      type: array
      items:
        $ref: '#/components/schemas/Warehouse'
    OrganizationCountWarehousesResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountWarehouses200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryWebhooksResponse:
      type: array
      items:
        $ref: '#/components/schemas/Webhook'
    OrganizationQueryWebhooks200Response:
      type: array
      items:
        $ref: '#/components/schemas/Webhook'
    OrganizationCountWebhooksResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountWebhooks200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetOrdersResponse:
      type: array
      items:
        $ref: '#/components/schemas/Order'
    OrganizationGetOrders200Response:
      type: array
      items:
        $ref: '#/components/schemas/Order'
    OrganizationCountOrdersResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountOrders200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetMagento1Response:
      type: array
      items:
        $ref: '#/components/schemas/Magento1'
    OrganizationGetMagento1200Response:
      type: array
      items:
        $ref: '#/components/schemas/Magento1'
    OrganizationCountMagento1Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountMagento1200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryWoocommerceResponse:
      type: array
      items:
        $ref: '#/components/schemas/Woocommerce'
    OrganizationQueryWoocommerce200Response:
      type: array
      items:
        $ref: '#/components/schemas/Woocommerce'
    OrganizationCountWooCommerceResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountWooCommerce200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryCustomIntegrationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomIntegration'
    OrganizationQueryCustomIntegrations200Response:
      type: array
      items:
        $ref: '#/components/schemas/CustomIntegration'
    OrganizationCountCustomIntegrationsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountCustomIntegrations200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryThrivecartResponse:
      type: array
      items:
        $ref: '#/components/schemas/Thrivecart'
    OrganizationQueryThrivecart200Response:
      type: array
      items:
        $ref: '#/components/schemas/Thrivecart'
    OrganizationGetThrivecartCountResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetThrivecartCount200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationGetBokunResponse:
      type: array
      items:
        $ref: '#/components/schemas/Bokun'
    OrganizationGetBokun200Response:
      type: array
      items:
        $ref: '#/components/schemas/Bokun'
    OrganizationCountBokunResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountBokun200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationQueryShopamineResponse:
      type: array
      items:
        $ref: '#/components/schemas/Shopamine'
    OrganizationQueryShopamine200Response:
      type: array
      items:
        $ref: '#/components/schemas/Shopamine'
    OrganizationCountShopamineResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationCountShopamine200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    OrganizationActivateByIdResponse:
      type: object
      properties:
        success:
          type: boolean
    OrganizationActivateById200Response:
      type: object
      properties:
        success:
          type: boolean
    OrganizationDeactivateByIdResponse:
      type: object
      properties:
        success:
          type: boolean
    OrganizationDeactivateById200Response:
      type: object
      properties:
        success:
          type: boolean
    OrganizationCheckUniqueDocNumberResponse:
      type: object
      properties:
        unique:
          type: boolean
    OrganizationCheckUniqueDocNumber200Response:
      type: object
      properties:
        unique:
          type: boolean
    OrganizationGetLastDocNumberResponse:
      type: object
      properties:
        number:
          type: string
    OrganizationGetLastDocNumber200Response:
      type: object
      properties:
        number:
          type: string
    OrganizationGetNextDocNumberResponse:
      type: object
      properties:
        number:
          type: string
    OrganizationGetNextDocNumber200Response:
      type: object
      properties:
        number:
          type: string
    OrganizationGetCurrentSubscriptionResponse:
      type: object
      properties: {}
      example: {}
    OrganizationGetCurrentSubscription200Response:
      type: object
    OrganizationSearchDocumentsResponse:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationSearchDocuments200Response:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationUploadImageResponse:
      type: boolean
    OrganizationUploadImage200Response:
      type: boolean
    OrganizationDeleteImageByIdResponse:
      type: boolean
    OrganizationDeleteImageById200Response:
      type: boolean
    OrganizationGetImagesByIdResponse:
      type: string
      format: byte
    OrganizationGetImagesById200Response:
      type: string
      format: byte
    OrganizationRemoveImageResponse:
      type: boolean
    OrganizationRemoveImage200Response:
      type: boolean
    OrganizationGetImageByIdResponse:
      type: string
      format: byte
    OrganizationGetImageById200Response:
      type: string
      format: byte
    OrganizationGetImageLogoResponse:
      type: string
      format: byte
    OrganizationGetImageLogo200Response:
      type: string
      format: byte
    OrganizationSearchClientsResponse:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationSearchClients200Response:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationFindClientsBySearchResponse:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationFindClientsBySearch200Response:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationSearchItemsResponse:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationSearchItems200Response:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationFindItemsBySearchResponse:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationFindItemsBySearch200Response:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationGetBusinessStatsResponse:
      description: Object containing different stats
      type: object
    OrganizationGetBusinessStats200Response:
      description: Object containing different stats
      type: object
    OrganizationGetFinancialStatsResponse:
      description: Object containing different stats
      type: boolean
    OrganizationGetFinancialStats200Response:
      description: Object containing different stats
      type: boolean
    OrganizationGetDocumentStatsResponse:
      type: object
      properties:
        stats:
          type: array
          items:
            type: object
        total:
          type: array
          items:
            type: object
    OrganizationGetDocumentStats200Response:
      type: object
      properties:
        stats:
          type: array
          items:
            type: object
        total:
          type: array
          items:
            type: object
    OrganizationGetCategoryTotalStatsResponse:
      type: object
      properties:
        stats:
          type: array
          items:
            type: object
        total:
          type: array
          items:
            type: object
    OrganizationGetCategoryTotalStats200Response:
      type: object
      properties:
        stats:
          type: array
          items:
            type: object
        total:
          type: array
          items:
            type: object
    OrganizationGetPaymentTotalStatsResponse:
      type: object
      properties:
        stats:
          type: array
          items:
            type: object
        total:
          type: array
          items:
            type: object
        customColors:
          type: array
          items:
            type: object
    OrganizationGetPaymentTotalStats200Response:
      type: object
      properties:
        stats:
          type: array
          items:
            type: object
        total:
          type: array
          items:
            type: object
        customColors:
          type: array
          items:
            type: object
    OrganizationGetThisMonthInvoicesResponse:
      type: object
      properties:
        number:
          type: number
          format: double
    OrganizationGetThisMonthInvoices200Response:
      type: object
      properties:
        number:
          type: number
          format: double
    OrganizationExportByIdResponse:
      type: object
      properties:
        success:
          type: boolean
        link:
          description: Link to file which will be available once the export is generated
          type: string
    OrganizationExportById200Response:
      type: object
      properties:
        success:
          type: boolean
        link:
          description: Link to file which will be available once the export is generated
          type: string
    OrganizationUploadCertificateResponse:
      type: object
      properties:
        success:
          type: boolean
    OrganizationUploadCertificate200Response:
      type: object
      properties:
        success:
          type: boolean
    OrganizationInviteUserResponse:
      type: object
      properties: {}
      example: {}
    OrganizationInviteUser200Response:
      type: object
    OrganizationCheckCertificateTypeResponse:
      type: object
      properties:
        exists:
          type: boolean
    OrganizationCheckCertificateType200Response:
      type: object
      properties:
        exists:
          type: boolean
    OrganizationGetMultipleDocumentPdfsResponse:
      type: object
      properties:
        success:
          type: boolean
        link:
          type: string
    OrganizationGetMultipleDocumentPdfs200Response:
      type: object
      properties:
        success:
          type: boolean
        link:
          type: string
    OrganizationSubmitImageProcessingResponse:
      description: Returns Parse queue instance
      type: object
    OrganizationSubmitImageProcessing200Response:
      description: Returns Parse queue instance
      type: object
    OrganizationImportCsvDataResponse:
      type: object
      properties:
        success:
          description: Operation status
          type: boolean
    OrganizationImportCsvData200Response:
      type: object
      properties:
        success:
          description: Operation status
          type: boolean
    OrganizationGetProfitAndLossReportResponse:
      description: Generated report
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationGetProfitAndLossReport200Response:
      description: Generated report
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationGetBalanceSheetResponse:
      description: Generated balance sheet
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    OrganizationGetBalanceSheet200Response:
      description: Generated balance sheet
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    ShopifyDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    ShopifyDeleteById200Response:
      type: object
    ShopifyImportIntegrationDataResponse:
      description: Operation status
      type: object
    ShopifyImportIntegrationData200Response:
      description: Operation status
      type: object
    ShopifyGetAppResponse:
      type: string
    ShopifyGetApp200Response:
      type: string
    StripeDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    StripeDeleteById200Response:
      type: object
    TicketingHubDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    TicketingHubDeleteById200Response:
      type: object
    CurrencyListByFilterResponse:
      type: array
      items:
        $ref: '#/components/schemas/Currency'
    CurrencyListByFilter200Response:
      type: array
      items:
        $ref: '#/components/schemas/Currency'
    AccountQueryAccessTokensResponse:
      type: array
      items:
        $ref: '#/components/schemas/AccessToken'
    AccountQueryAccessTokens200Response:
      type: array
      items:
        $ref: '#/components/schemas/AccessToken'
    AccountQueryUsagesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Usage'
    AccountQueryUsages200Response:
      type: array
      items:
        $ref: '#/components/schemas/Usage'
    AccountCountUsagesResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    AccountCountUsages200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    AccountQueryOrganizationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Organization'
    AccountQueryOrganizations200Response:
      type: array
      items:
        $ref: '#/components/schemas/Organization'
    AccountCountOrganizationsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    AccountCountOrganizations200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    AccountQueryLogsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Log'
    AccountQueryLogs200Response:
      type: array
      items:
        $ref: '#/components/schemas/Log'
    AccountCountLogsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    AccountCountLogs200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    AccountUserLoginResponse:
      description: >+
        The response body contains properties of the AccessToken created on
        login.

        Depending on the value of `include` parameter, the body may contain
        additional properties:

          - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)

      type: object
    AccountUserLogin200Response:
      description: >+
        The response body contains properties of the AccessToken created on
        login.

        Depending on the value of `include` parameter, the body may contain
        additional properties:

          - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)

      type: object
    AccountCheckEmailUniqueResponse:
      type: object
      properties:
        isUnique:
          type: boolean
    AccountCheckEmailUnique200Response:
      type: object
      properties:
        isUnique:
          type: boolean
    AccountCheckVerifiedStatusResponse:
      type: object
      properties:
        isVerified:
          type: boolean
    AccountCheckVerifiedStatus200Response:
      type: object
      properties:
        isVerified:
          type: boolean
    AccountCheckAuthorizationAndReturnUserResponse:
      type: object
      properties: {}
      example: {}
    AccountCheckAuthorizationAndReturnUser200Response:
      type: object
    AccountRequestVerificationEmailResponse:
      type: object
      properties:
        success:
          type: boolean
    AccountRequestVerificationEmail200Response:
      type: object
      properties:
        success:
          type: boolean
    AccountGetIdentityHashResponse:
      type: object
      properties: {}
      example: {}
    AccountGetIdentityHash200Response:
      type: object
    AccountGetActiveSubscriptionResponse:
      description: Active subscription instance
      type: object
    AccountGetActiveSubscription200Response:
      description: Active subscription instance
      type: object
    RecurrenceDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    RecurrenceDeleteById200Response:
      type: object
    RecurrenceGetCronResponse:
      type: object
      properties:
        success:
          type: boolean
    RecurrenceGetCron200Response:
      type: object
      properties:
        success:
          type: boolean
    PaymentDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    PaymentDeleteById200Response:
      type: object
    DefaultDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    DefaultDeleteById200Response:
      type: object
    CompanyFindAllInstancesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Company'
    CompanyFindAllInstances200Response:
      type: array
      items:
        $ref: '#/components/schemas/Company'
    CompanySearchGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    CompanySearchGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/x-any'
    SubscriptionFindAllByFilterResponse:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    SubscriptionFindAllByFilter200Response:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    SubscriptionGetClientTokenResponse:
      type: string
    SubscriptionGetClientToken200Response:
      type: string
    SubscriptionGetCronResponse:
      type: object
      properties:
        success:
          type: boolean
    SubscriptionGetCron200Response:
      type: object
      properties:
        success:
          type: boolean
    SubscriptionGetPaymentMethodResponse:
      type: object
      properties: {}
      example: {}
    SubscriptionGetPaymentMethod200Response:
      type: object
    SubscriptionAddPaymentMethodResponse:
      type: object
      properties: {}
      example: {}
    SubscriptionAddPaymentMethod200Response:
      type: object
    PlanFindAllByFilterResponse:
      type: array
      items:
        $ref: '#/components/schemas/Plan'
    PlanFindAllByFilter200Response:
      type: array
      items:
        $ref: '#/components/schemas/Plan'
    WhiteLabelFindAllResponse:
      type: array
      items:
        $ref: '#/components/schemas/WhiteLabel'
    WhiteLabelFindAll200Response:
      type: array
      items:
        $ref: '#/components/schemas/WhiteLabel'
    MessageSubmitContactFormResponse:
      type: boolean
    MessageSubmitContactForm200Response:
      type: boolean
    BusinessPremiseDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    BusinessPremiseDeleteById200Response:
      type: object
    AtcudSeriesFindAllByFilterResponse:
      type: array
      items:
        $ref: '#/components/schemas/AtcudSeries'
    AtcudSeriesFindAllByFilter200Response:
      type: array
      items:
        $ref: '#/components/schemas/AtcudSeries'
    AtcudSeriesDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    AtcudSeriesDeleteById200Response:
      type: object
    AtcudSeriesCountInstancesByWhereResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    AtcudSeriesCountInstancesByWhere200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    CountryFindAllByFilterResponse:
      type: array
      items:
        $ref: '#/components/schemas/Country'
    CountryFindAllByFilter200Response:
      type: array
      items:
        $ref: '#/components/schemas/Country'
    CountryMatchTermAgainstAvailableResponse:
      type: object
      properties:
        match:
          description: The matched country
          type: object
    CountryMatchTermAgainstAvailable200Response:
      type: object
      properties:
        match:
          description: The matched country
          type: object
    TrackingWebhookNotificationResponse:
      type: object
      properties:
        success:
          type: boolean
    TrackingWebhookNotification200Response:
      type: object
      properties:
        success:
          type: boolean
    CertificateGetExpiryCronResponse:
      type: object
      properties:
        success:
          type: boolean
    CertificateGetExpiryCron200Response:
      type: object
      properties:
        success:
          type: boolean
    GeoIpParseIpToGeoLocationResponse:
      type: object
      properties: {}
      example: {}
    GeoIpParseIpToGeoLocation200Response:
      type: object
    AccountOrganizationDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    AccountOrganizationDeleteById200Response:
      type: object
    AccountOrganizationConfirmInvitationResponse:
      type: object
      properties:
        success:
          type: boolean
    AccountOrganizationConfirmInvitation200Response:
      type: object
      properties:
        success:
          type: boolean
    AccountOrganizationRejectInvitationResponse:
      type: object
      properties:
        success:
          type: boolean
    AccountOrganizationRejectInvitation200Response:
      type: object
      properties:
        success:
          type: boolean
    AccountOrganizationEnableAccessResponse:
      type: object
      properties:
        success:
          type: boolean
    AccountOrganizationEnableAccess200Response:
      type: object
      properties:
        success:
          type: boolean
    AccountOrganizationDisableAccessResponse:
      type: object
      properties:
        success:
          type: boolean
    AccountOrganizationDisableAccess200Response:
      type: object
      properties:
        success:
          type: boolean
    AccountOrganizationChangeRoleResponse:
      type: object
      properties:
        success:
          type: boolean
    AccountOrganizationChangeRole200Response:
      type: object
      properties:
        success:
          type: boolean
    FileMetaDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    FileMetaDeleteById200Response:
      type: object
    UnitDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    UnitDeleteById200Response:
      type: object
    UnitGetLastDocNumberResponse:
      type: object
      properties:
        number:
          type: string
    UnitGetLastDocNumber200Response:
      type: object
      properties:
        number:
          type: string
    UnitGetNextDocNumberResponse:
      type: object
      properties:
        number:
          type: string
    UnitGetNextDocNumber200Response:
      type: object
      properties:
        number:
          type: string
    UnitUploadImageResponse:
      type: boolean
    UnitUploadImage200Response:
      type: boolean
    UnitDeleteImageByIdResponse:
      type: boolean
    UnitDeleteImageById200Response:
      type: boolean
    UnitFindImagesByIdResponse:
      type: string
      format: byte
    UnitFindImagesById200Response:
      type: string
      format: byte
    UnitDeleteImageResponse:
      type: boolean
    UnitDeleteImage200Response:
      type: boolean
    UnitDownloadImageResponse:
      type: string
      format: byte
    UnitDownloadImage200Response:
      type: string
      format: byte
    CategoryRemoveByIdResponse:
      type: object
      properties: {}
      example: {}
    CategoryRemoveById200Response:
      type: object
    DocumentCategoryDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    DocumentCategoryDeleteById200Response:
      type: object
    PriceListQueryItemsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Item'
    PriceListQueryItems200Response:
      type: array
      items:
        $ref: '#/components/schemas/Item'
    PriceListCountItemsResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    PriceListCountItems200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    PriceListQueryPricesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Price'
    PriceListQueryPrices200Response:
      type: array
      items:
        $ref: '#/components/schemas/Price'
    PriceListCountPricesResponse:
      type: object
      properties:
        count:
          type: number
          format: double
    PriceListCountPrices200Response:
      type: object
      properties:
        count:
          type: number
          format: double
    PriceListDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    PriceListDeleteById200Response:
      type: object
    PriceDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    PriceDeleteById200Response:
      type: object
    WarehouseDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    WarehouseDeleteById200Response:
      type: object
    WebhookDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    WebhookDeleteById200Response:
      type: object
    OrderCreateDocumentResponse:
      type: object
      properties: {}
      example: {}
    OrderCreateDocument200Response:
      type: object
    Magento1DeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    Magento1DeleteById200Response:
      type: object
    Magento1ImportIntegrationDataResponse:
      description: Operation status
      type: object
    Magento1ImportIntegrationData200Response:
      description: Operation status
      type: object
    WoocommerceDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    WoocommerceDeleteById200Response:
      type: object
    WoocommerceImportIntegrationDataResponse:
      description: Operation status
      type: object
    WoocommerceImportIntegrationData200Response:
      description: Operation status
      type: object
    CustomIntegrationDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    CustomIntegrationDeleteById200Response:
      type: object
    CustomIntegrationImportExcelDataResponse:
      description: Operation status
      type: object
    CustomIntegrationImportExcelData200Response:
      description: Operation status
      type: object
    ThrivecartDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    ThrivecartDeleteById200Response:
      type: object
    ThrivecartImportIntegrationDataResponse:
      description: Operation status
      type: object
    ThrivecartImportIntegrationData200Response:
      description: Operation status
      type: object
    BokunDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    BokunDeleteById200Response:
      type: object
    BokunImportIntegrationDataResponse:
      description: Operation status
      type: object
    BokunImportIntegrationData200Response:
      description: Operation status
      type: object
    ShopamineDeleteModelByIdResponse:
      type: object
      properties: {}
      example: {}
    ShopamineDeleteModelById200Response:
      type: object
    ShopamineImportIntegrationDataResponse:
      description: Operation status
      type: object
    ShopamineImportIntegrationData200Response:
      description: Operation status
      type: object
    SendgridWebhookNotificationResponse:
      type: object
      properties:
        success:
          type: boolean
    SendgridWebhookNotification200Response:
      type: object
      properties:
        success:
          type: boolean
    LogClearCronLogsResponse:
      type: object
      properties:
        success:
          type: boolean
    LogClearCronLogs200Response:
      type: object
      properties:
        success:
          type: boolean
    AwssesCreateWebhookResponse:
      type: object
      properties:
        success:
          type: boolean
    AwssesCreateWebhook200Response:
      type: object
      properties:
        success:
          type: boolean
  requestBodies:
    Webhook:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Webhook'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Webhook'
        application/xml:
          schema:
            $ref: '#/components/schemas/Webhook'
        text/xml:
          schema:
            $ref: '#/components/schemas/Webhook'
    Tax:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tax'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Tax'
        application/xml:
          schema:
            $ref: '#/components/schemas/Tax'
        text/xml:
          schema:
            $ref: '#/components/schemas/Tax'
    _new_Payment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_new_Payment'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/_new_Payment'
        application/xml:
          schema:
            $ref: '#/components/schemas/_new_Payment'
        text/xml:
          schema:
            $ref: '#/components/schemas/_new_Payment'
    Warehouse:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Warehouse'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Warehouse'
        application/xml:
          schema:
            $ref: '#/components/schemas/Warehouse'
        text/xml:
          schema:
            $ref: '#/components/schemas/Warehouse'
    _new_ElectronicDevice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_new_ElectronicDevice'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/_new_ElectronicDevice'
        application/xml:
          schema:
            $ref: '#/components/schemas/_new_ElectronicDevice'
        text/xml:
          schema:
            $ref: '#/components/schemas/_new_ElectronicDevice'
    DocumentCategory:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentCategory'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DocumentCategory'
        application/xml:
          schema:
            $ref: '#/components/schemas/DocumentCategory'
        text/xml:
          schema:
            $ref: '#/components/schemas/DocumentCategory'
    Category:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Category'
        application/xml:
          schema:
            $ref: '#/components/schemas/Category'
        text/xml:
          schema:
            $ref: '#/components/schemas/Category'
    Payment:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Payment'
        application/xml:
          schema:
            $ref: '#/components/schemas/Payment'
        text/xml:
          schema:
            $ref: '#/components/schemas/Payment'
    Component:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Component'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Component'
        application/xml:
          schema:
            $ref: '#/components/schemas/Component'
        text/xml:
          schema:
            $ref: '#/components/schemas/Component'
    TicketingHub:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TicketingHub'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TicketingHub'
        application/xml:
          schema:
            $ref: '#/components/schemas/TicketingHub'
        text/xml:
          schema:
            $ref: '#/components/schemas/TicketingHub'
    Document:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Document'
        application/xml:
          schema:
            $ref: '#/components/schemas/Document'
        text/xml:
          schema:
            $ref: '#/components/schemas/Document'
    Comment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comment'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Comment'
        application/xml:
          schema:
            $ref: '#/components/schemas/Comment'
        text/xml:
          schema:
            $ref: '#/components/schemas/Comment'
    Item:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Item'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Item'
        application/xml:
          schema:
            $ref: '#/components/schemas/Item'
        text/xml:
          schema:
            $ref: '#/components/schemas/Item'
    Client:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Client'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Client'
        application/xml:
          schema:
            $ref: '#/components/schemas/Client'
        text/xml:
          schema:
            $ref: '#/components/schemas/Client'
    Organization.prototype.uploadImage__post_Organizations__id__upload-image:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/OrganizationUploadImageRequest'
      required: true
    Shopify.prototype.import:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ShopifyImportIntegrationDataRequest'
      required: true
    Account.loginCredentials:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountUserLoginRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AccountUserLoginRequest1'
        application/xml:
          schema:
            $ref: '#/components/schemas/AccountUserLoginRequest2'
        text/xml:
          schema:
            $ref: '#/components/schemas/AccountUserLoginRequest3'
      required: true
    Recurrence:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Recurrence'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Recurrence'
        application/xml:
          schema:
            $ref: '#/components/schemas/Recurrence'
        text/xml:
          schema:
            $ref: '#/components/schemas/Recurrence'
    AtcudSeries:
      description: Model instance data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AtcudSeries'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AtcudSeries'
        application/xml:
          schema:
            $ref: '#/components/schemas/AtcudSeries'
        text/xml:
          schema:
            $ref: '#/components/schemas/AtcudSeries'
  securitySchemes:
    accessTokenHeader:
      type: apiKey
      in: header
      name: Authorization
    accessTokenQuery:
      type: apiKey
      in: query
      name: access_token
security:
  - accessTokenHeader: []
    accessTokenQuery: []
