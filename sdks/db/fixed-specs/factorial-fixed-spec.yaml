openapi: 3.0.0
info:
  title: Factorial API
  description: >-
    Open Api Specifications available at
    [https://github.com/factorialco/oas](https://github.com/factorialco/oasLooking)


    Guides and support available at
    [https://help.factorialhr.com/integrations](https://help.factorialhr.com/integrations)


    # Authentication


    The public API provides two methods of authentication, ApiKeys and OAuth2.
    The following sections provide information regarding each one and their
    intent.


    ## OAuth2


    > OAuth2 is used to identify individual users, not applications or
    platforms.


    OAuth2 is available for authenticating to the public API and making requests
    via third parties **on behalf of a user**. All actions are authored on
    behalf of the user that creates the token. This means the intent is to be
    used mainly to do submit actions the actual user is performing on an
    alternative interface.


    To generate a token you will require opening an authorization dialog that
    returns a code, this code can then be exchanged for a token.


    ### Configuration


    In order to create an OAuth application, you must be an admin, head over to
    your [personal repository of OAuth
    applications](https://api.factorialhr.com/oauth/applications), click on `New
    application` and follow the creation process.


    The Factorial API enforces the same permissions at the user level than the
    Factorial web application. This means that Factorial API users will only be
    able to perform the same actions they are allowed to do in the Factorial
    platform.


    Next step will be to generate the Authorization Code you will need in order
    to generate an OAuth2 Token.


    ### OAuth2 Code Generation


    Should be generated via browser by opening the following url. The user
    should be already logged in to Factorial beforehand.


    `https://api.factorialhr.com/oauth/authorize?client_id=&redirect_uri=&response_type=code&scope=`


    YOUR_CLIENT_ID: OAuth2 Application Id

    REDIRECT_URI: OAuth2 Redirect URL


    #### State Parameter


    An optional query parameter called `state` can be added to the code
    generation url. Any string can be used and will be sent on the callback url.


    > Authorization protocols provide a `state` parameter that allows you to
    restore the previous state of your application. The `state` parameter
    preserves some state objects set by the client in the Authorization request
    and makes it available to the client in the response.


    ### OAuth2 Token Generation


    Once you have the authorization code, you can request their access token to
    Factorial.


    `curl -X POST 'https://api.factorialhr.com/oauth/token' -d
    'client_id=&client_secret=&code=&grant_type=authorization_code&redirect_uri='`


    YOUR_CLIENT_ID: OAuth2 Application Id

    YOUR_CLIENT_SECRET: OAuth2 Application Secret

    AUTHORIZATION_CODE: OAuth2 CODE

    REDIRECT_URI: OAuth2 Redirect URL


    > You can generate only one OAuth2 token per Code, that means that if you
    want to generate a new token for a Code that already have one you should
    refresh your token.


    Every time a new token is generated a refresh token is generated as well, so
    that you can use it on the OAuth2 Refresh Token, and an expire date is also
    provided.


    ### OAuth2 Refresh Token


    You can generate a new token under the same Code with a new expire date (you
    can do it as many times as you need). A refresh token is also returned here
    so that you can use it on the OAuth2 Refresh Token again.


    `curl -X POST 'https://api.factorialhr.com/oauth/token' -d
    'client_id=&client_secret=&refresh_token=&grant_type=refresh_token'`


    YOUR_CLIENT_ID: OAuth2 Application Id

    YOUR_CLIENT_SECRET: OAuth2 Application Secret

    REFRESH_TOKEN: OAuth2 Refresh Token


    ### OAuth2 Revoke Token


    You can revoke an access/refresh token if you do not want it to be active
    anylonger. This can happen in cases where you have refreshed your token and
    would like to revoke the previous token if you haven't used the new token
    yet, as using the new token automatically revokes the previous one.


    `curl -X POST 'https://api.factorialhr.com/oauth/revoke' -d
    'client_id=&client_secret=&token='`


    YOUR_CLIENT_ID: OAuth2 Application Id

    YOUR_CLIENT_SECRET: OAuth2 Application Secret

    TOKEN: OAuth2 Access/Refresh Token (whichever you wish to revoke)


    ### OAuth2 Token Usage


    The generated token is the credential for performing authenticated requests
    to Factorial. This token should be included in the Authorization header
    prefixed with the word Bearer and a separating space.

    As an example, if your token is `12345` then the header content should be
    `Bearer 12345`.


    ### Maintaining a persistent connection


    To maintain a persistent connection, you should not let the token expire.
    You can avoid this by simply refreshing your token before the expiration
    date. This will give you another token with a new expiration date, before
    that token expires you should refresh it again, and so on...

    If you want to do this automatically, you should provide something in your
    code that will help you perform the update every time the token expires.
    Otherwise, you would have to do the update manually and make sure you
    refresh your token before the expiration date to maintain the connection.


    ## ApiKeys


    > API keys are used to identify systems, not the individual users that
    access.


    ApiKeys have **TOTAL ACCESS** to everything and never expire. Its the
    creators responsibility to generate them and store them securely.


    ### Generation


    In the `Core>Keys` section of this documentation you can access the apis for
    managing this resource.


    ### Usage


    ApiKeys are a single string of symbols that must be added as a custom header
    on the request. The header name must be `x-api-key` and the key must be the
    value without any prefixes.


    ### Disclaimer


    ApiKey management require full admin permissions as the resource itself
    allows for full admin access to the entire platform on behalf of the company
    and not of a user, therefore any operations are not linked to any user in
    particular.


    # Development


    ## SDKs


    Coming soon


    ## Sandbox


    A sandbox/demo environment is available for testing integrations via public
    API calls. Developers can request provisioning with full access to a demo
    company where to test code before actually interacting with a production
    environment.


    Contact your account manager or account executive to request this
    environment and get OAuth2 credentials for generating tokens.


    Note: the domain for sandbox is different than that from production. Sandbox
    base domain is `http://api.demo.factorialhr.com`


    ## Postman


    Click the "Run in Postman" button to open the full list of endpoints on your
    Postman workspace as a Postman Collection.

    Inside the collection lookout for the Collection's Variables, configure your
    variables accordingly.


    ### Delegating Token Generation To Postman


    Coming soon


    # Changelog


    Coming soon


    # How to...


    ## Custom Fields


    Custom fields are useful when you want to add some fields that are not the
    default ones, to every employee of the company.


    For that, you have to create via Factorial App the base custom field in
    order to have all the employees with it. That option is available in
    customization, inside the company menu


    Once you have that, via API, you can [Create a value for a custom
    field](https://apidoc.factorialhr.com/#72f3f786-e37d-4e80-ada2-0beedd03b171)
    to each employee. You should know the custom field id in order to make that,
    you can check it by [getting a collection of custom
    fields](https://apidoc.factorialhr.com/#f98dae5a-a8d0-474e-a181-7e9603409b42)
  version: 1.0.0
  x-konfig-ignore:
    potential-incorrect-type: true
servers:
  - url: https://api.factorialhr.com/api
  - url: https://api.demo.factorial.dev/api
tags:
  - name: Employee
  - name: Leave
  - name: Shift
  - name: Task
  - name: Post
  - name: Webhook
  - name: Team
  - name: Document
  - name: Compensation
  - name: Workplace
  - name: Folder
  - name: CustomField
  - name: CustomFieldValue
  - name: Candidate
  - name: Supplement
  - name: Table
  - name: User
  - name: Location
  - name: Key
  - name: Attendance
  - name: ContractVersion
  - name: Contract
  - name: Integration
  - name: Break
  - name: Holiday
  - name: LegalEntity
  - name: FamilySituation
  - name: Application
  - name: Message
  - name: Policy
  - name: Expense
  - name: Taxonomy
  - name: IntegrationCode
  - name: CustomTable
  - name: Event
paths:
  /v1/employees:
    get:
      tags:
        - Employee
      summary: Get employees from a company
      operationId: Employee_getEmployees
      security:
        - apikey: []
      description: >-
        Only `admins` can see all the employees' information, `regular users`
        will get a restricted version of the payload as a response based on the
        permission set by the admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetEmployeesResponse'
    post:
      tags:
        - Employee
      summary: Create employee
      operationId: Employee_createEmployee
      description: Create employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreateEmployeeRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
  /v1/employees/{id}:
    get:
      tags:
        - Employee
      summary: Get employee
      operationId: Employee_getEmployeeById
      description: >-
        Only admins can see all the employees' information, regular users will
        get a restricted version of the payload as a response based on the
        permission set by the admin
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
    put:
      tags:
        - Employee
      summary: Update employee
      operationId: Employee_updateById
      description: Update employee
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
  /v1/employees/{id}/terminate:
    post:
      tags:
        - Employee
      summary: Terminate employee
      operationId: Employee_terminateEmployee
      description: Terminate employee
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTerminateEmployeeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
  /v1/employees/{id}/unterminate:
    post:
      tags:
        - Employee
      summary: Unterminate employee
      operationId: Employee_unterminateEmployee
      description: Unterminate employee
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
  /v2/core/employees:
    get:
      tags:
        - Employee
      summary: Get employees from a company
      operationId: Employee_getAllEmployees
      security:
        - apikey: []
      description: >-
        Only `admins` can see all the employees' information, `regular users`
        will get a restricted version of the payload as a response based on the
        permission set by the admin
      parameters:
        - description: Retrieves the list of employees by full names
          name: full_text_name
          in: query
          schema:
            type: string
          example: Bob Stone
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetAllEmployeesResponse'
    post:
      tags:
        - Employee
      summary: Create employee
      operationId: Employee_createNew
      security:
        - apikey: []
      description: Create employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreateNewRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee_v2'
  /v2/core/employees/{id}:
    get:
      tags:
        - Employee
      summary: Get employee
      operationId: Employee_getById
      security:
        - apikey: []
      description: >-
        Only admins can see all the employees' information, regular users will
        get a restricted version of the payload as a response based on the
        permission set by the admin
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee_v2'
    put:
      tags:
        - Employee
      summary: Update employee
      operationId: Employee_updateEmployeeById
      security:
        - apikey: []
      description: Update employee
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateEmployeeByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee_v2'
  /v2/core/employees/{id}/invite:
    post:
      tags:
        - Employee
      summary: Invite employee
      operationId: Employee_sendInvitationEmail
      security:
        - apikey: []
      description: >-
        When inviting an employee an email is sent to their email. You can
        resend the email as long as the employee has not accepted the invitation
        yet.
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee_v2'
  /v2/core/employees/{id}/email:
    put:
      tags:
        - Employee
      summary: Change employee email
      operationId: Employee_changeEmail
      security:
        - apikey: []
      description: >-
        Changes the email only if the employee has not been confirmed and it
        does not exist another employee with the requested email.
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeChangeEmailRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee_v2'
  /v2/core/employees/{id}/terminate:
    post:
      tags:
        - Employee
      summary: Terminate employee
      operationId: Employee_setTerminationDetails
      security:
        - apikey: []
      description: >-
        Set the termination date and other termination related parameters for an
        employee. The employee will finally terminate on the date provided.
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSetTerminationDetailsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee_v2'
  /v2/core/employees/{id}/unterminate:
    post:
      tags:
        - Employee
      summary: Unterminate employee
      operationId: Employee_unterminatePost
      security:
        - apikey: []
      description: Unterminate the employee
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee_v2'
  /v2/core/webhooks:
    get:
      tags:
        - User
      summary: Get a list of all subscribed webhooks for current user
      operationId: User_subscribedWebhooksList
      security:
        - apikey: []
      description: Get a list of all subscribed webhooks for current user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscribedWebhooksListResponse'
    post:
      tags:
        - Webhook
      summary: Create a webhook
      operationId: Webhook_subscriptionCreate
      security:
        - apikey: []
      description: >-
        > Creates a subscription for a determined webhook type. If webhook
        already exists, it just changes the target_url.

         ## Webhooks Types

        | **Subscription Type** | **Information** |

        | --- | --- |

        | Authentication::Events::AccessInvited | When creating a new employee,
        optionally you can send an invitation to create an account in Factorial.
        If you send an invitation, this event gets triggered. |

        | Employees::Events::EmployeeCreated | When creating a new employee,
        after submitting the form, this event gets triggered. |

        | Employees::Events::EmployeeUpdated| When updating personal protected
        employee information such has birthday, this event gets triggered. |

        | Employees::Events::EmployeeTerminated | When terminating an employee,
        after submitting the form, this event gets triggered |

        | Employees::Events::EmployeeUnterminated | When un terminating an
        employee, after submitting the form, this event gets triggered |

        | Attendance::Events::ClockIn | When the user clocks in and starts the
        timer, this event is triggered. |

        | Attendance::Events::ClockOut | When the user clocks out and stops the
        timer, this event is triggered |

        | Attendance::Events::AttendanceShiftCreated | When the user creates a
        shift, this event is triggered |

        | Attendance::Events::AttendanceShiftUpdated | When the user edits a
        shift, this event is triggered |

        | Attendance::Events::AttendanceShiftDeleted | When the user deletes a
        shift, this event is triggered |

        | Ats::Events::ApplicationCreated | When a candidate applies for a
        posting. |

        | Ats::Events::ApplicationUpdated | When a candidates application for a
        posting suffers changes. |

        | Ats::Events::JobPostingCreated | When a job posting is created. |

        | Ats::Events::JobPostingUpdated | When a job posting is updated. |

        | Ats::Events::JobPostingDeleted | When a job posting is deleted. |

        | Timeoff::Events::LeaveCreated | When a Timeoff Leave is created. |

        | Timeoff::Events::LeaveDestroyed | When a Timeoff Leave is destroyed. |

        | Timeoff::Events::LeaveUpdated | When a Timeoff Leave suffers any
        changes. |

        | Timeoff::Events::LeaveApproved | When a Timeoff Leave is explicitly
        approved. |

        | Timeoff::Events::LeaveRejected | When a Timeoff Leave is rejected. |

        | Documents::Events::Created | When a document is created. |

        | Tasks::Events::Created | When a task is created. |

        | Contracts::Events::ContractVersionCreated | When a contract version is
        created. |

        | Payroll::Events::SupplementCreated | When a payroll supplement is
        created. |

        | Payroll::Events::SupplementUpdated | When a payroll supplement is
        updated. |

        | Payroll::Events::SupplementDeleted | When a payroll supplement is
        deleted. |
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSubscriptionCreateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionCreateResponse'
  /v2/core/webhooks/{id}:
    put:
      tags:
        - Webhook
      summary: Update a Webhook
      operationId: Webhook_updateWebhookById
      security:
        - apikey: []
      description: Update a Webook
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateWebhookByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook_v2'
    delete:
      tags:
        - Webhook
      summary: Delete a Webhook
      operationId: Webhook_deleteWebhook
      security:
        - apikey: []
      description: Delete a Webook
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook_v2'
  /v1/me:
    get:
      tags:
        - User
      summary: Get information about current user
      operationId: User_infoGet
      description: After token grant, get information of the token holder
      responses:
        '200':
          description: OK
  /v1/locations:
    get:
      tags:
        - Location
      summary: Get all locations
      operationId: Location_getAllLocations
      security:
        - apikey: []
      description: Get all locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationGetAllLocationsResponse'
  /v1/locations/{id}:
    get:
      tags:
        - Location
      summary: Get a Location by ID
      operationId: Location_getById
      security:
        - apikey: []
      description: Get a Location by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
  /v1/company_holidays:
    get:
      tags:
        - Holiday
      summary: Get all company holidays
      operationId: Holiday_getAllCompanyHolidays
      security:
        - apikey: []
      description: Get all company holidays
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolidayGetAllCompanyHolidaysResponse'
  /v1/company_holidays/{id}:
    get:
      tags:
        - Holiday
      summary: Get a company holiday by ID
      operationId: Holiday_getById
      security:
        - apikey: []
      description: Get a company holiday by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyHoliday'
  /v1/core/teams:
    get:
      tags:
        - Team
      summary: Get teams
      operationId: Team_getAllTeams
      security:
        - apikey: []
      description: Get teams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGetAllTeamsResponse'
    post:
      tags:
        - Team
      summary: Create a team
      operationId: Team_createNewTeam
      security:
        - apikey: []
      description: Create a team with a given name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateNewTeamRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /v1/core/teams/{id}:
    get:
      tags:
        - Team
      summary: Get a team by ID
      operationId: Team_getById
      security:
        - apikey: []
      description: Get a team by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGetByIdResponse'
    put:
      tags:
        - Team
      summary: Update a team
      operationId: Team_updateTeamById
      security:
        - apikey: []
      description: Update a team
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdateTeamByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      tags:
        - Team
      summary: Delete a team
      operationId: Team_removeTeam
      security:
        - apikey: []
      description: Delete a team
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /v1/core/teams/{id}/employees/{employee_id}:
    post:
      tags:
        - Employee
      summary: Assign an employee to a team
      operationId: Employee_assignToTeam
      security:
        - apikey: []
      description: Assign an employee to a team
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
        - description: (Required)
          name: employee_id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    put:
      tags:
        - Employee
      summary: Update an employee in a team
      operationId: Employee_updateInTeam
      security:
        - apikey: []
      description: Update an employee in a team
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
        - description: (Required)
          name: employee_id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateInTeamRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      tags:
        - Employee
      summary: Unassign employee to team
      operationId: Employee_unassignToTeam
      security:
        - apikey: []
      description: Unassign employee to team
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
        - description: (Required)
          name: employee_id
          in: path
          schema:
            type: string
          required: true
          example: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /v1/core/folders:
    get:
      tags:
        - Folder
      summary: Get Folders
      operationId: Folder_getByNameAndStatus
      security:
        - apikey: []
      description: Get Folders by given name and active status
      parameters:
        - description: Retrieves the list of folder by name
          name: name
          in: query
          schema:
            type: string
          example: payment
        - description: Retrieves the list of employees by active status
          name: active
          in: query
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderGetByNameAndStatusResponse'
    post:
      tags:
        - Folder
      summary: Create a Folder
      operationId: Folder_createNewFolder
      security:
        - apikey: []
      description: Create a Folders with a given name and active status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderCreateNewFolderRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderCreateNewFolderResponse'
  /v1/core/folders/{id}:
    get:
      tags:
        - Folder
      summary: Get a Folder by ID
      operationId: Folder_getById
      security:
        - apikey: []
      description: Get a Folder by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
    put:
      tags:
        - Folder
      summary: Update a folder
      operationId: Folder_updateFolderById
      security:
        - apikey: []
      description: Update a folder
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderUpdateFolderByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
  /v1/core/documents:
    get:
      tags:
        - Document
      summary: Get a collection of Documents
      operationId: Document_listGivenEmployeeOrFolder
      security:
        - apikey: []
      description: Get a collection of Documents given an employee or a folder
      parameters:
        - description: Retrieves the list of documents by employee id
          name: employee_id
          in: query
          schema:
            type: integer
          example: 1
        - description: Retrieves the list of documents by folder id
          name: folder_id
          in: query
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListGivenEmployeeOrFolderResponse'
    post:
      tags:
        - Document
      summary: Create a Document
      operationId: Document_createNewDocument
      security:
        - apikey: []
      description: Create a Document
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentCreateNewDocumentRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  /v1/core/documents/{id}:
    get:
      tags:
        - Document
      summary: Get a Document by ID
      operationId: Document_getById
      security:
        - apikey: []
      description: Get a Document by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
    put:
      tags:
        - Document
      summary: Update a Document by ID
      operationId: Document_updateById
      security:
        - apikey: []
      description: Update a Document by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdateByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
    delete:
      tags:
        - Document
      summary: Delete a Document by ID
      operationId: Document_deleteById
      security:
        - apikey: []
      description: Delete a Document by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  /v1/core/legal_entities:
    get:
      tags:
        - LegalEntity
      summary: Get a collection of Legal Entities
      operationId: LegalEntity_listLegalEntities
      security:
        - apikey: []
      description: Get a collection of Legal Entities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityListLegalEntitiesResponse'
  /v1/core/legal_entities/{id}:
    get:
      tags:
        - LegalEntity
      summary: Get a Legal Entity by ID
      operationId: LegalEntity_getById
      security:
        - apikey: []
      description: Get a Legal Entity by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'
  /v1/core/keys:
    get:
      tags:
        - Key
      summary: Get a collection of Keys
      operationId: Key_getCollection
      security:
        - apikey: []
      description: Get a collection of Keys
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyGetCollectionResponse'
    post:
      tags:
        - Key
      summary: Create a Key
      operationId: Key_createNew
      security:
        - apikey: []
      description: Create a Key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyCreateNewRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyCreate'
  /v1/core/keys/{id}:
    delete:
      tags:
        - Key
      summary: Delete an API Key by ID
      operationId: Key_deleteById
      security:
        - apikey: []
      description: Delete an API Key by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
  /v1/core/tasks:
    get:
      tags:
        - Task
      summary: Get Tasks
      operationId: Task_getAllTasks
      security:
        - apikey: []
      description: Get Tasks
      parameters:
        - description: Retrieves the list of tasks by assignee
          name: assignee_id
          in: query
          schema:
            type: integer
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGetAllTasksResponse'
    post:
      tags:
        - Task
      summary: Create a Task
      operationId: Task_createNewTask
      security:
        - apikey: []
      description: Create a Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateNewTaskRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /v1/core/tasks/{id}:
    get:
      tags:
        - Task
      summary: Get a Task by ID
      operationId: Task_getById
      security:
        - apikey: []
      description: Get a Task by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      tags:
        - Task
      summary: Update a Task by ID
      operationId: Task_updateById
      security:
        - apikey: []
      description: Update a Task by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      tags:
        - Task
      summary: Delete a Task by ID
      operationId: Task_deleteById
      security:
        - apikey: []
      description: Delete a Task by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /v1/core/tasks/{id}/resolve:
    post:
      tags:
        - Task
      summary: Resolve Task by ID
      operationId: Task_resolveById
      security:
        - apikey: []
      description: Resolve Task by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskResolveByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /v1/core/tasks/{id}/copy:
    post:
      tags:
        - Task
      summary: Copy Task by ID
      operationId: Task_copyById
      security:
        - apikey: []
      description: Copy Task by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCopyByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /v1/core/tasks/{id}/files:
    get:
      tags:
        - Task
      summary: Get files from a Task
      operationId: Task_getFiles
      security:
        - apikey: []
      description: Get files from a Task
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 15
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskFile'
    post:
      tags:
        - Task
      summary: Create a File in a Task
      operationId: Task_addFileToTask
      security:
        - apikey: []
      description: Create a File in a Task
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskAddFileToTaskRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /v1/core/tasks/{task_id}/files/{id}:
    get:
      tags:
        - Task
      summary: Get a file from one Task
      operationId: Task_getFile
      security:
        - apikey: []
      description: Get files from one Task
      parameters:
        - description: (Required)
          name: task_id
          in: path
          schema:
            type: string
          required: true
          example: 15
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskFile'
    post:
      tags:
        - Task
      summary: Delete a File in a Task
      operationId: Task_deleteFileInTask
      security:
        - apikey: []
      description: Delete a File in a Task
      parameters:
        - description: (Required)
          name: task_id
          in: path
          schema:
            type: string
          required: true
          example: 15
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskFile'
  /v1/time/shifts:
    get:
      tags:
        - Shift
      summary: Get shifts (time registries) from a company
      operationId: Shift_getFromCompany
      security:
        - apikey: []
      description: Get shifts (time registries) from a company
      parameters:
        - description: It should be valid year in the format `YYYY`
          name: year
          in: query
          schema:
            type: string
          example: '2022'
        - description: >-
            It should be valid month in the calendar ranging rom `01 to 12`. The
            month format is `MM`
          name: month
          in: query
          schema:
            type: string
          example: '11'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftGetFromCompanyResponse'
  /v1/time/shifts/clock_in:
    post:
      tags:
        - Shift
      summary: Clock in
      operationId: Shift_createClockInShift
      security:
        - apikey: []
      description: >-
        Creates a shift (time registry) for the current user with the clock_in
        time of the request and nil clock_out
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftCreateClockInShiftRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
  /v1/time/shifts/clock_out:
    post:
      tags:
        - Shift
      summary: Clock out
      operationId: Shift_updateClockOutShift
      security:
        - apikey: []
      description: >-
        Updates a shift (time registry) for the current user with the clock_out
        time of the request. It will fail if the user wasn't previously clocked
        in.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftUpdateClockOutShiftRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
  /v1/time/shifts/toggle:
    post:
      tags:
        - Shift
      summary: Toggle
      operationId: Shift_toggleShiftStatus
      security:
        - apikey: []
      description: >-
        Updates a shift (time registry) for the current user with the time of
        the request. It will clock out if the user wasn't previously clocked in.
        Else it will clock in.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftToggleShiftStatusRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
  /v1/time/shifts/{id}:
    put:
      tags:
        - Shift
      summary: Update Shift (time registry)
      operationId: Shift_updateShift
      security:
        - apikey: []
      description: Updates a shift (time registry).
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftUpdateShiftRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
    delete:
      tags:
        - Shift
      summary: Delete Shift (time registry)
      operationId: Shift_deleteShiftById
      security:
        - apikey: []
      description: Delete Shift (time registry)
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
  /v2/time/attendance:
    get:
      tags:
        - Attendance
      summary: Get attendance from a company
      operationId: Attendance_getCompanyAttendance
      security:
        - apikey: []
      description: Get attendance from a company
      parameters:
        - description: Employees id array
          name: employee_ids[]
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
        - description: It should be a valid date following the format YYYY-MM-DD
          name: date_from
          in: query
          schema:
            type: string
          example: '2023-01-03'
        - description: It should be a valid date following the format YYYY-MM-DD
          name: date_to
          in: query
          schema:
            type: string
          example: '2023-01-04'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceGetCompanyAttendanceResponse'
    post:
      tags:
        - Attendance
      summary: Create Attendance
      operationId: Attendance_createNew
      security:
        - apikey: []
      description: Creates Attendance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceCreateNewRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
  /v1/time/leave_types:
    get:
      tags:
        - Leave
      summary: Get Leave types
      operationId: Leave_getTypes
      security:
        - apikey: []
      description: Get Leave types from a company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveGetTypesResponse'
    post:
      tags:
        - Leave
      summary: Create a Leave Type
      operationId: Leave_typeCreate
      security:
        - apikey: []
      description: Create a Leave Type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveTypeCreateRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveType'
  /v1/time/leave_types/{id}:
    put:
      tags:
        - Leave
      summary: Update a Leave Type
      operationId: Leave_updateType
      security:
        - apikey: []
      description: Update a Leave Type
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveUpdateTypeRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveType'
  /v1/time/leaves:
    get:
      tags:
        - Leave
      summary: Get Leaves
      operationId: Leave_getCompanyLeaves
      security:
        - apikey: []
      description: Get Leaves from a company
      parameters:
        - description: Employees id array
          name: employee_ids[]
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
        - description: Leave type id array
          name: leave_type_ids[]
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
        - description: It should be a valid date following the format YYYY-MM-DD
          name: from
          in: query
          schema:
            type: string
          example: '2023-01-03'
        - description: It should be a valid date following the format YYYY-MM-DD
          name: to
          in: query
          schema:
            type: string
          example: '2023-01-04'
        - description: Include leave type name
          name: include_leave_type
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveGetCompanyLeavesResponse'
    post:
      tags:
        - Leave
      summary: Create a Leave
      operationId: Leave_createNewLeave
      security:
        - apikey: []
      description: Creates a Leave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveCreateNewLeaveRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
  /v1/time/leaves/{id}:
    get:
      tags:
        - Leave
      summary: Get a Leave by ID
      operationId: Leave_getById
      security:
        - apikey: []
      description: Get a Leave by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
    put:
      tags:
        - Leave
      summary: Update a Leave
      operationId: Leave_updateLeaveById
      security:
        - apikey: []
      description: Update a Leave
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveUpdateLeaveByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
    delete:
      tags:
        - Leave
      summary: Delete a Leave by ID
      operationId: Leave_deleteById
      security:
        - apikey: []
      description: Delete a Leave by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
  /v2/time/leaves:
    get:
      tags:
        - Leave
      summary: Get Leaves
      operationId: Leave_getCompanyLeaves
      security:
        - apikey: []
      description: Get Leaves from a company
      parameters:
        - description: Employees id array
          name: employee_ids[]
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
        - description: Leave type id array
          name: leave_type_ids[]
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
        - description: It should be a valid date following the format YYYY-MM-DD
          name: from
          in: query
          schema:
            type: string
          example: '2023-01-03'
        - description: It should be a valid date following the format YYYY-MM-DD
          name: to
          in: query
          schema:
            type: string
          example: '2023-01-04'
        - description: Include leave type name
          name: include_leave_type
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveGetCompanyLeaves200Response'
    post:
      tags:
        - Leave
      summary: Create a Leave
      operationId: Leave_createNewLeave
      security:
        - apikey: []
      description: Creates a Leave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveCreateNewLeaveRequest1'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
  /v2/time/leaves/{id}:
    get:
      tags:
        - Leave
      summary: Get a Leave by ID
      operationId: Leave_getById
      security:
        - apikey: []
      description: Get a Leave by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave_v2'
    put:
      tags:
        - Leave
      summary: Update a Leave
      operationId: Leave_updateById
      security:
        - apikey: []
      description: Update a Leave
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveUpdateByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave_v2'
    delete:
      tags:
        - Leave
      summary: Delete a Leave by ID
      operationId: Leave_deleteById
      security:
        - apikey: []
      description: Delete a Leave by ID
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave_v2'
  /v1/payroll/family_situation:
    get:
      tags:
        - Employee
      summary: Get all family situations - only FR employees
      operationId: Employee_listFamilySituations
      security:
        - apikey: []
      description: Get all family situations - only FR employees
      parameters:
        - description: Get all family situations given an employee
          name: employee_id
          in: query
          schema:
            type: string
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeListFamilySituationsResponse'
    post:
      tags:
        - FamilySituation
      summary: Create a Family Situation
      operationId: FamilySituation_createNew
      security:
        - apikey: []
      description: Create a Family Situation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilySituationCreateNewRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilySituation'
  /v1/payroll/family_situation/{id}:
    put:
      tags:
        - FamilySituation
      summary: Update a Family Situation
      operationId: FamilySituation_updateFamilySituation
      security:
        - apikey: []
      description: Update a Family Situation
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilySituationUpdateFamilySituationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilySituation'
  /v1/custom_fields:
    get:
      tags:
        - CustomField
      summary: Get Custom Fields
      operationId: CustomField_getFieldsByGroup
      description: >-
        This endpoint allows you to fetch a collection of custom fields. The
        fields you receive in the response are governed by the `field_group` you
        supply in the body of your request.

        For now, there are 2 acceptable field groups:

         - `employees-questions` which refers to fields relating to an employee

         - `time-tracking-projects` which refers to fields relating to time tracking data

         - `contract-versions` which refers to fields relating to employee contract versions
      parameters:
        - description: >-
            Available options: employees-questions (Employee's fields)
            time-tracking-projects (Shift's project)' contract-versions
            (Contract versions)'
          name: field_group
          in: query
          schema:
            type: string
          example: employees-questions
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldGetFieldsByGroupResponse'
  /v1/custom_fields/values:
    get:
      tags:
        - CustomFieldValue
      summary: Given a custom field, get the value for a specific instance
      operationId: CustomFieldValue_getInstanceValue
      description: Given a custom field, get the value for a specific instance
      parameters:
        - name: field_id
          in: query
          schema:
            description: Field Id
            type: integer
          example: 1
          required: true
        - name: instance_id
          in: query
          schema:
            description: Id of the model instance associated to the field
            type: integer
          example: 23
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomValue'
    post:
      tags:
        - CustomFieldValue
      summary: Create a value for a custom field
      operationId: CustomFieldValue_createCustomValue
      description: >-
        As described, a `Custom Field Value` can be thought of as an
        answer/response to a `Custom Field` these answers/responses belong to
        the entity that inputed the values e.g. an employee who answered the
        t-shirt size question by filling it out in their factorial dashboard.

        This endpoint allows you to create values for custom fields. It requires
        an `instance_id` which refers to the `id` of the entity that owns this
        `Custom Value` e.g. an Employee for which the `employee_id` will
        correspond to the `instance_id`. It also requires a `field_id` to
        reference the `Custom Field` which this value is related to.

        You can think of `Custom Fields` and `Custom Values` as questions and
        answers.
      parameters:
        - name: field_id
          in: query
          schema:
            description: The id of the field this value belongs to
            type: integer
          example: 1
          required: true
        - name: instance_id
          in: query
          schema:
            description: >-
              The id of the entity that 'created' this value e.g. an employee
              who fills out the answer to a question
            type: integer
          example: 23
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldValueCreateCustomValueRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomValue'
  /v1/posts:
    get:
      tags:
        - Post
      summary: Get Posts
      operationId: Post_listPosts
      security:
        - apikey: []
      description: This endpoint allows you to fetch a collection of posts.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostListPostsResponse'
        '500':
          description: Internal Server Error
    post:
      tags:
        - Post
      summary: Create a Post
      operationId: Post_createNewPost
      security:
        - apikey: []
      description: Create a Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateNewPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreateNewPostResponse'
  /v1/posts/{id}:
    get:
      tags:
        - Post
      summary: Get Post
      operationId: Post_getById
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    put:
      tags:
        - Post
      summary: Create a Post
      operationId: Post_updateExistingPost
      security:
        - apikey: []
      description: Create a Post
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdateExistingPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUpdateExistingPostResponse'
    delete:
      tags:
        - Post
      summary: Delete Post
      operationId: Post_removePost
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
  /v1/ats/job_postings:
    get:
      tags:
        - Post
      summary: Get all job postings
      operationId: Post_getAllPostings
      security:
        - apikey: []
      description: >-
        This endpoint allows fetching all available Ats Job Postings, scoped to
        the user credentials and company of that user.
      parameters:
        - description: Job posting status
          name: status
          in: query
          schema:
            type: string
            enum:
              - draft
              - published
              - unlisted
              - archived
              - cancelled
          example: 3
        - description: An id of any teams that the ats company has in Factorial
          name: team_id
          in: query
          schema:
            type: integer
          example: 3
        - description: An id of any location associated with the ats company in Factorial
          name: location_id
          in: query
          schema:
            type: string
          example: 1
        - description: An id of any legal entity associated with the company in Factorial
          name: legal_entity_id
          in: query
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGetAllPostingsResponse'
    post:
      tags:
        - Post
      summary: Create a Job Posting
      operationId: Post_atsJobPosting
      security:
        - apikey: []
      description: This endpoint allows you create and store Ats Job Postings in Factorial.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAtsJobPostingRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsJobPosting'
  /v1/ats/job_postings/{id}:
    put:
      tags:
        - Post
      summary: Update a Job Posting
      operationId: Post_jobPostingUpdate
      security:
        - apikey: []
      description: Update a Job Posting
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostJobPostingUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsJobPosting'
    delete:
      tags:
        - Post
      summary: Delete a Job Posting
      operationId: Post_removeJobPosting
      security:
        - apikey: []
      description: Deletes an existing job posting
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsJobPosting'
  /v1/ats/job_postings/{id}/duplicate:
    post:
      tags:
        - Post
      summary: Duplicate a Job Posting
      operationId: Post_duplicateJobPosting
      security:
        - apikey: []
      description: >-
        Make a duplicate of a job posting. The only parameter required for this
        operation is the id of the posting you wish to duplicate.

        One thing to note about this operation is that the id of the resulting
        posting will be different from the original, the title will have Copy
        appended to it, so if your origin title was Don't buy a the title of the
        duplicate will be Don't buy a Copy in addition to this, the status of
        the duplicate will default to draft. All this being said, kindly inspect
        the duplicate and ensure you get it into your desired state.
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsJobPosting'
  /v1/ats/candidates:
    get:
      tags:
        - Candidate
      summary: Get all candidates
      operationId: Candidate_listAllCandidates
      security:
        - apikey: []
      description: >-
        Fetch candidates data from Factorial. When using administrator-level API
        Credentials, all candidates associated with a company will be returned.
        When using non-admin level API credentials, only candidates that applied
        to a job for which the user is a hiring manager will be returned.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateListAllCandidatesResponse'
    post:
      tags:
        - Candidate
      summary: Create a candidate
      operationId: Candidate_createNewCandidate
      security:
        - apikey: []
      description: Create candidates related to a particular company in an ATS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateCreateNewCandidateRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsCandidate'
  /v1/ats/candidates/{id}:
    put:
      tags:
        - Candidate
      summary: Update candidate
      operationId: Candidate_updateCandidateData
      security:
        - apikey: []
      description: Update ATS Candidates data
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateUpdateCandidateDataRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsCandidate'
    delete:
      tags:
        - Candidate
      summary: Delete a Candidate
      operationId: Candidate_deleteExistingCandidate
      security:
        - apikey: []
      description: Deletes an existing candidate
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsCandidate'
  /v1/payroll/contract_versions:
    get:
      tags:
        - ContractVersion
      summary: Get all contract versions
      operationId: ContractVersion_getAllVersions
      security:
        - apikey: []
      description: Get all contract Versions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractVersionGetAllVersionsResponse'
    post:
      tags:
        - ContractVersion
      summary: Create contract versions
      operationId: ContractVersion_createNewVersion
      security:
        - apikey: []
      description: Create contract Versions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractVersionCreateNewVersionRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractVersion'
  /v1/payroll/contract_versions/{id}:
    put:
      tags:
        - Contract
      summary: Update contract version
      operationId: Contract_updateVersion
      security:
        - apikey: []
      description: Update contract Version
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractUpdateVersionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractVersion'
    delete:
      tags:
        - Contract
      summary: Delete contract version
      operationId: Contract_deleteVersion
      security:
        - apikey: []
      description: Delete contract Version
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractVersion'
  /v1/payroll/reference_contracts:
    get:
      tags:
        - Contract
      summary: Get all reference contracts
      operationId: Contract_getAllReferenceContracts
      security:
        - apikey: []
      description: >-
        The reference contract is the contract that applies today. If no
        contract applies today, we will return the nearest upcoming contract. If
        there are no upcoming contracts, we will provide the most recent past
        contract.
      parameters:
        - description: Employees id array
          name: employee_ids[]
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractGetAllReferenceContractsResponse'
  /v1/payroll/supplements:
    get:
      tags:
        - Supplement
      summary: Get all supplements
      operationId: Supplement_getAll
      security:
        - apikey: []
      description: Get all supplements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplementGetAllResponse'
    post:
      tags:
        - Supplement
      summary: Create supplements
      operationId: Supplement_createNewSupplement
      security:
        - apikey: []
      description: Create supplements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplementCreateNewSupplementRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplement'
  /v1/payroll/supplements/{id}:
    put:
      tags:
        - Supplement
      summary: Update supplements
      operationId: Supplement_updateById
      security:
        - apikey: []
      description: Update supplements
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplementUpdateByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplement'
    delete:
      tags:
        - Supplement
      summary: Delete supplements
      operationId: Supplement_deleteById
      security:
        - apikey: []
      description: Delete supplements
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplement'
  /v2/payroll_integrations/codes:
    get:
      tags:
        - Integration
      summary: Get all codes for a specific Integration
      operationId: Integration_getAllCodes
      security:
        - apikey: []
      description: >-
        This endpoint allows fetching all available Codes, scoped to the
        integration name
      parameters:
        - description: Payroll Integration name
          name: integration
          in: query
          schema:
            type: string
            enum:
              - a3innuva
              - a3nom
              - silae
              - datev
              - zuccheti
              - kombo
              - parieh
          example: a3innuva
        - description: >-
            Unique identifier to relate Factorial with different payroll
            softwares
          name: code
          in: query
          schema:
            type: string
          example: TEST_CODE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationGetAllCodesResponse'
    post:
      tags:
        - IntegrationCode
      summary: Create a Payroll Integration Code
      operationId: IntegrationCode_createPayrollIntegrationCode
      security:
        - apikey: []
      description: >-
        This endpoint allows you create and store Payroll Integrations Codes in
        Factorial.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IntegrationCodeCreatePayrollIntegrationCodeRequest
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
  /v2/payroll_integrations/codes/{id}:
    patch:
      tags:
        - Integration
      summary: Update a Payroll Integration Code
      operationId: Integration_updatePayrollCode
      security:
        - apikey: []
      description: Update a Payroll Integration Code
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationUpdatePayrollCodeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
    delete:
      tags:
        - Integration
      summary: Delete a Payroll Integration Code
      operationId: Integration_deletePayrollCode
      security:
        - apikey: []
      description: Deletes an existing payroll code
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
  /v2/payroll_integrations/codes/{id}/find_employee:
    get:
      tags:
        - Employee
      summary: Find Employee assigned to a Payroll Integration Code
      operationId: Employee_getByPayrollIntegrationCode
      security:
        - apikey: []
      description: >-
        This endpoint allows fetching an Employee through a Payroll Integration
        Code
      parameters:
        - description: Payroll Integration name
          name: integration
          in: query
          schema:
            type: string
            enum:
              - a3innuva
              - a3nom
              - silae
              - datev
              - zuccheti
              - kombo
              - parieh
          example: a3innuva
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeGetByPayrollIntegrationCodeResponse
  /v1/time/shifts_management:
    get:
      tags:
        - Shift
      summary: Get all shifts from a company
      operationId: Shift_getAllShifts
      security:
        - apikey: []
      description: By default, it returns all the shifts for the current week
      parameters:
        - description: Employee ID to find shifts from
          name: employee_id
          in: query
          schema:
            type: integer
          example: 5
        - description: Employee IDs to find shifts from
          name: employee_ids%5B%5D
          in: query
          schema:
            type: array
            items:
              type: integer
              example: 5
        - description: Start date to find shifts from
          name: start_at
          in: query
          schema:
            type: string
          example: '2023-07-24'
        - description: End date to find shifts to
          name: end_at
          in: query
          schema:
            type: string
          example: '2023-07-30'
        - description: To return only published shifts
          name: only_published
          in: query
          schema:
            type: boolean
          example: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftGetAllShiftsResponse'
    post:
      tags:
        - Shift
      summary: Create a shift
      operationId: Shift_createNewShift
      security:
        - apikey: []
      description: Create a shift
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftCreateNewShiftRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftManagement'
  /v1/time/shifts_management/publish:
    post:
      tags:
        - Shift
      summary: Publish shifts inside time range
      operationId: Shift_publishShiftsInsideTimeRange
      security:
        - apikey: []
      description: Publish shifts inside time range
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftPublishShiftsInsideTimeRangeRequest'
      responses:
        '201':
          description: Created
  /v1/time/shifts_management/{id}/locations:
    put:
      tags:
        - Location
      summary: Update shift location
      operationId: Location_updateShiftLocation
      security:
        - apikey: []
      description: Update shift location
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationUpdateShiftLocationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftManagement'
  /v1/time/shifts_management/{id}/notes:
    put:
      tags:
        - Shift
      summary: Update shift notes
      operationId: Shift_updateNotes
      security:
        - apikey: []
      description: Update shift notes
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftUpdateNotesRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftManagement'
  /v1/time/shifts_management/{id}:
    get:
      tags:
        - Shift
      summary: Get Shift
      operationId: Shift_getById
      security:
        - apikey: []
      description: Get Shift
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftManagement'
    delete:
      tags:
        - Shift
      summary: Delete Shift
      operationId: Shift_deleteById
      security:
        - apikey: []
      description: Delete Shift
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftManagement'
  /v1/time/breaks/start:
    post:
      tags:
        - Break
      summary: Start a break
      operationId: Break_startBreak
      security:
        - apikey: []
      description: Start a break
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BreakStartBreakRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
  /v1/time/breaks/end:
    post:
      tags:
        - Break
      summary: End a break
      operationId: Break_endBreak
      security:
        - apikey: []
      description: End a break
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BreakEndBreakRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
  /v1/time/breaks:
    post:
      tags:
        - Break
      summary: Create a break
      operationId: Break_createBreak
      security:
        - apikey: []
      description: Creates a break with the break_start and break_end time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BreakCreateBreakRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
  /v1/time/break_configurations_for_dates:
    get:
      tags:
        - Employee
      summary: Get break configurations from a employee in a date range
      operationId: Employee_listBreakConfigurationsForDates
      security:
        - apikey: []
      description: >-
        List all the posible break configurations to be used optionally in the
        break start
      parameters:
        - name: start_at
          in: query
          schema:
            type: string
          example: '2023-09-30'
        - name: end_at
          in: query
          schema:
            type: string
          example: '2023-09-30'
        - name: employee_id
          in: query
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeListBreakConfigurationsForDatesResponse
  /v1/ats/applications:
    post:
      tags:
        - Application
      summary: Creates an application
      operationId: Application_createAtsApplication
      security:
        - apikey: []
      description: >-
        This endpoint allows a consumer to create and store Ats Applications in
        Factorial
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationCreateAtsApplicationRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsApplication'
  /v1/ats/applications/{id}:
    put:
      tags:
        - Application
      summary: Update application
      operationId: Application_updateData
      security:
        - apikey: []
      description: Update ATS Application data
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: string
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateDataRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsApplication'
  /v1/ats/messages:
    get:
      tags:
        - Message
      summary: Get all ATS Messages
      operationId: Message_getAllMessages
      security:
        - apikey: []
      description: Get all ATS Messages
      parameters:
        - description: (Required)
          name: conversation_id
          in: query
          schema:
            type: string
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageGetAllMessagesResponse'
    post:
      tags:
        - Message
      summary: Creates an ats messsage
      operationId: Message_createAtsMessage
      security:
        - apikey: []
      description: >-
        This endpoint allows you create and store Ats Messages in Factorial,
        while using your own user interface to display them.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCreateAtsMessageRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtsMessage'
  /v2/core/bulk/employee:
    post:
      tags:
        - Employee
      summary: Get Bulk Employees
      operationId: Employee_getBulkV2
      security:
        - apikey: []
      description: This endpoint allows you retrieve bulk employees V2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetBulkV2Response'
  /v2/core/bulk/attendance:
    post:
      tags:
        - Attendance
      summary: Get Bulk Attendance
      operationId: Attendance_getBulkV2
      security:
        - apikey: []
      description: This endpoint allows you retrieve bulk attendance V2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceGetBulkV2Response'
  /v2/core/bulk/contract_version:
    post:
      tags:
        - ContractVersion
      summary: Get Bulk Contract Versions
      operationId: ContractVersion_getBulkVersions
      security:
        - apikey: []
      description: This endpoint allows you retrieve bulk contract versions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractVersionGetBulkVersionsResponse'
  /v1/core/custom/tables:
    get:
      tags:
        - CustomTable
      summary: Get Custom Tables
      operationId: CustomTable_get
      security:
        - apikey: []
      description: This endpoint allows you to retrieve Custom Tables
      parameters:
        - description: Filters by topic_name
          name: topic_name
          in: query
          schema:
            type: string
          example: employee
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTableGetResponse'
    post:
      tags:
        - Table
      summary: Creates a custom table
      operationId: Table_createCustomTable
      security:
        - apikey: []
      description: This endpoint is used to create and store custom table
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCreateCustomTableRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomResource'
  /v1/core/custom/tables/{id}:
    get:
      tags:
        - Table
      summary: Get Custom Table
      operationId: Table_getCustomTable
      security:
        - apikey: []
      description: This endpoint allows you retrieve a Custom Table
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomResource'
  /v1/core/custom/tables/{id}/fields:
    get:
      tags:
        - Table
      summary: Get Custom Table Fields
      operationId: Table_getFields
      security:
        - apikey: []
      description: This endpoint allows you retrieve Custom Table Fields
      parameters:
        - description: Custom Table ID (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableGetFieldsResponse'
    post:
      tags:
        - Table
      summary: Creates a custom table field
      operationId: Table_createField
      security:
        - apikey: []
      description: >-
        This endpoint is used to create and store custom fields on custom
        tables. See custom fields v2 for more information.
      parameters:
        - description: Custom Table ID (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCreateFieldRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField_v2'
  /v1/core/custom/tables/{id}/values/{employee_id}:
    get:
      tags:
        - Employee
      summary: Get Custom Table Fields
      operationId: Employee_getCustomTableValues
      security:
        - apikey: []
      description: This endpoint allows you retrieve Custom Table Values for an employee
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
        - description: (Required)
          name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetCustomTableValuesResponse'
    post:
      tags:
        - Employee
      summary: Creates a custom table value
      operationId: Employee_createCustomTableValue
      security:
        - apikey: []
      description: >-
        This endpoint is used to create and store custom values on custom fields
        used in custom tables. See custom values for more information.
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
        - description: (Required)
          name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreateCustomTableValueRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomResourceValue'
  /v1/core/events:
    get:
      tags:
        - Event
      summary: Get triggered events
      operationId: Event_getTriggeredEvents
      security:
        - apikey: []
      description: Get triggered events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventGetTriggeredEventsResponse'
  /v1/core/webhooks:
    get:
      tags:
        - User
      summary: Get a list of all subscribed webhooks for current user
      operationId: User_subscribedWebhooksList
      security:
        - apikey: []
      description: Get a list of all subscribed webhooks for current user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscribedWebhooksList200Response'
    post:
      tags:
        - Webhook
      summary: Create a webhook
      operationId: Webhook_createSubscription
      security:
        - apikey: []
      description: >-
        > Creates a subscription for a determined webhook type. If webhook
        already exists, it just changes the target_url.

         ## Webhooks Types

        | **Type** | **Information** |

        | --- | --- |

        | employee_invited | When creating a new employee, optionally you can
        send an invitation to create an account in Factorial. If you send an
        invitation, this event gets triggered. |

        | employee_created | When creating a new employee, after submitting the
        form, this event gets triggered. |

        | employee_updated| When updating personal protected employee
        information such has birthday, this event gets triggered. |

        | employee_terminated | When terminating an employee, after submitting
        the form, this event gets triggered |

        | employee_unterminated | When un terminating an employee, after
        submitting the form, this event gets triggered |

        | attendance_clockin | When the user clocks in and starts the timer,
        this event is triggered. |

        | attendance_clockout | When the user clocks out and stops the timer,
        this event is triggered |

        | attendance_shift_created | When the user creates a shift, this event
        is triggered |

        | attendance_shift_updated | When the user edits a shift, this event is
        triggered |

        | attendance_shift_deleted | When the user deletes a shift, this event
        is triggered |

        | ats_application_created | When a candidate applies for a posting. |

        | ats_application_updated | When a candidates application for a posting
        suffers changes. |

        | ats_job_posting_created | When a job posting is created. |

        | ats_job_posting_updated | When a job posting is updated. |

        | ats_job_posting_deleted | When a job posting is deleted. |

        | timeoff_leave_created | When a Timeoff Leave is created. |

        | timeoff_leave_destroyed | When a Timeoff Leave is destroyed. |

        | timeoff_leave_updated | When a Timeoff Leave suffers any changes. |

        | timeoff_leave_approved | When a Timeoff Leave is explicitly approved.
        |

        | timeoff_leave_rejected | When a Timeoff Leave is rejected. |

        | shift_management_shift_destroyed | When a single Shift Management
        Shift is destroyed. |

        | shift_management_shift_bulk_destroyed | When Shift Management Shifts
        are destroyed in bulk. |

        | document_created | When a document is created. |

        | task_created | When a task is created. |

        | contract_version_created | When a contract version is created. |
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreateSubscriptionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookCreateSubscriptionResponse'
  /v1/core/webhooks/{id}:
    delete:
      tags:
        - Webhook
      summary: Delete a Webhook
      operationId: Webhook_deleteWebhookById
      security:
        - apikey: []
      description: Delete a Webhook
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDeleteWebhookByIdResponse'
  /v1/time/policies:
    get:
      tags:
        - Policy
      summary: Get Time off Policies
      operationId: Policy_getTimeOffPolicies
      security:
        - apikey: []
      description: This endpoint allows you to retrieve time off policies for a company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyGetTimeOffPoliciesResponse'
  /v1/time/policies/{id}:
    get:
      tags:
        - Policy
      summary: Get a Time off Policy
      operationId: Policy_getTimeOff
      security:
        - apikey: []
      description: This endpoint allows you to retrieve a time off policy for a company
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
  /v1/finance/expenses:
    get:
      tags:
        - Expense
      summary: Get Expenses
      operationId: Expense_getCompanyExpenses
      description: This endpoint allows you to retrieve expenses for a company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseGetCompanyExpensesResponse'
      deprecated: true
  /v1/finance/expenses/{id}:
    get:
      tags:
        - Expense
      summary: Get an expense
      operationId: Expense_getById
      description: This endpoint allows you to retrieve an expense by id
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
      deprecated: true
  /v1/payroll/compensations:
    get:
      tags:
        - Compensation
      summary: Get Compensations
      operationId: Compensation_getCompensations
      security:
        - apikey: []
      description: This endpoint allows you to retrieve compensations for a company
      parameters:
        - description: Compensations id array
          name: ids
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
        - description: Contract versions id array
          name: contract_version_ids
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompensationGetCompensationsResponse'
    post:
      tags:
        - Compensation
      summary: Create a compensation
      operationId: Compensation_createContractCompensation
      security:
        - apikey: []
      description: Creates a compensation for a contract.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CompensationCreateContractCompensationRequest
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compensation'
  /v1/payroll/compensations/{id}:
    get:
      tags:
        - Compensation
      summary: Get a compensation
      operationId: Compensation_getById
      security:
        - apikey: []
      description: This endpoint allows you to retrieve a compensation by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compensation'
    put:
      tags:
        - Compensation
      summary: Updates a compensation
      operationId: Compensation_updateForContract
      security:
        - apikey: []
      description: Updates a compensation for a contract.
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompensationUpdateForContractRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compensation'
    delete:
      tags:
        - Compensation
      summary: Delete a Compensation
      operationId: Compensation_deleteCompensation
      security:
        - apikey: []
      description: Delete a compensation
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompensationDeleteCompensationResponse'
  /v1/payroll/taxonomies:
    get:
      tags:
        - Taxonomy
      summary: Get Taxonomies
      operationId: Taxonomy_getCompanyTaxonomies
      security:
        - apikey: []
      description: This endpoint allows you to retrieve taxonomies for a company
      parameters:
        - description: Taxonomies id array
          name: ids
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
        - description: Legal Entities id array
          name: legal_entity_ids
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxonomyGetCompanyTaxonomiesResponse'
  /v1/payroll/taxonomies/{id}:
    get:
      tags:
        - Taxonomy
      summary: Get a taxonomy
      operationId: Taxonomy_getById
      security:
        - apikey: []
      description: This endpoint allows you to retrieve a taxonomy by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxonomy'
  /v2/core/workplaces:
    get:
      tags:
        - Workplace
      summary: Get all workplaces
      operationId: Workplace_listAllWorkplaces
      security:
        - apikey: []
      description: This endpoint allows you to retrieve all workplaces for a company
      parameters:
        - description: Workplaces id comma separated values
          name: ids
          in: query
          schema:
            type: string
          example: 1,2
        - description: Employees id comma separated values
          name: employee_ids
          in: query
          schema:
            type: string
          example: 1,2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkplaceListAllWorkplacesResponse'
    post:
      tags:
        - Workplace
      summary: Create a workplace
      operationId: Workplace_createNewWorkplace
      security:
        - apikey: []
      description: Creates a workplace for a company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkplaceCreateNewWorkplaceRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workplace'
  /v2/core/workplaces/{id}:
    get:
      tags:
        - Workplace
      summary: Get a workplace
      operationId: Workplace_getById
      security:
        - apikey: []
      description: This endpoint allows you to retrieve a workplace by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workplace'
    put:
      tags:
        - Workplace
      summary: Updates a workplace
      operationId: Workplace_updateWorkplaceById
      security:
        - apikey: []
      description: Updates a workplace of a company
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkplaceUpdateWorkplaceByIdRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workplace'
    delete:
      tags:
        - Workplace
      summary: Delete a workplace
      operationId: Workplace_removeWorkplace
      security:
        - apikey: []
      description: Delete a workplace
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkplaceRemoveWorkplaceResponse'
  /v2/custom_fields/fields:
    get:
      tags:
        - CustomField
      summary: Get custom fields
      operationId: CustomField_getFieldsBySlug
      security:
        - apikey: []
      description: >-
        This endpoint allows you to retrieve custom fields by id, label, slug
        name, slug name. You receive fields tagged in the response by a slug.

        For now, there is one acceptable slug name:

         - `employees-questions` which refers to fields relating to an employee

         You can filter by:

         - id: You can query a field by its id. For example `T-shirt size` identifier is 4. you can search the custom field by the id 4.
         - label: you can query a field by its label for example `T shirt size`
         - slug_name: You can use the available slug `employees-questions` in the `slug_name` field to filter fields that belong to this slug.
         - slug_id: It is the identifier of the slug_name. You can use the id of a slug to query custom fields by its id instead of its name.
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          example: 1
        - name: label
          in: query
          schema:
            type: string
          example: tshirt size
        - name: slug_id
          in: query
          schema:
            type: integer
          example: 1
        - name: slug_name
          in: query
          schema:
            type: string
          example: employees-questions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldGetFieldsBySlugResponse'
    post:
      tags:
        - CustomField
      summary: Create a custom field
      operationId: CustomField_createField
      security:
        - apikey: []
      description: >-
        This endpoint allows you to create custom fields you must provide these
        parameters

        - label: custom field visible name for example `T shirt size` -
        slug_name: the resource that you want to save the custom field, for
        example to save `t-shirt size` field in employee you must use
        `employees-questions` value - field_type: the kind of field value you
        want to store: text (input), long text (text area), number (input
        number) or single choice (select input) - required: You can set if the
        field is mandatory - visible: You can set the roles can see the field
        (own, reportees, team leader or everybody) - editable: You can set the
        roles can edit the field (own, reportees, team leader or everybody) -
        choice_options: You can provide an array of choices to set the options
        of a single choice field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldCreateFieldRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField_v2'
  /v2/custom_fields/fields/{id}:
    delete:
      tags:
        - CustomField
      summary: Delete a custom field
      operationId: CustomField_deleteById
      security:
        - apikey: []
      description: Delete a custom field by its id
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldDeleteByIdResponse'
  /v2/custom_fields/values:
    get:
      tags:
        - CustomFieldValue
      summary: Get custom field values
      operationId: CustomFieldValue_getBySlugName
      security:
        - apikey: []
      description: >-
        This endpoint allows you to retrieve custom fields by id, label, slug
        name, slug name. You receive fields tagged in the response by a slug.

        For now, there is one acceptable slug name:

         - `employees-questions` which refers to fields relating to an employee

         You can filter by:

         - id: You can query a field value by its id. For example identity card value `12345678Z` identifier is 4. you can search the custom field by the id 4.
         - value: You can query a field by value. For example an employee have a custom field which is "Computer" and it's value is "PC" you can search it by this value.
         - slug_name: You can use the available slug `employees-questions` in the `slug_name` field to filter custom field values that belong to this slug.
         - slug_id: It is the identifier of the slug_name. You can use the id of a slug to query custom fields values by its slug id instead of its slug name.
         - field_id: You can use the available field id to filter custom field values that belong to this field.
         - employee_ids: You can use the available employee ids to filter custom field values that belong to these employees.
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          example: 1
        - name: slug_id
          in: query
          schema:
            type: integer
          example: 1
        - name: field_id
          in: query
          schema:
            type: integer
          example: 1
        - name: slug_name
          in: query
          schema:
            type: string
          example: employees-questions
        - name: field_value
          in: query
          schema:
            type: string
          example: red
        - description: Employees id array
          name: employee_ids[]
          in: query
          schema:
            type: array
            items:
              type: integer
          example:
            - 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValueGetBySlugNameResponse'
  /v2/custom_fields/values/{id}:
    put:
      tags:
        - CustomFieldValue
      summary: Update custom field value
      operationId: CustomFieldValue_updateValue
      security:
        - apikey: []
      description: This endpoint allows you to update custom fields values
      parameters:
        - description: (Required)
          name: id
          in: path
          schema:
            type: integer
          required: true
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldValueUpdateValueRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField_v2'
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          refreshUrl: /oauth/token
          scopes:
            read: Required for all operations
            write: Required for write operations
    apikey:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
          example: 5
        email:
          type: string
          example: bob_stone@factorial.co
        login_email:
          type: string
          example: bob_stone@factorial.co
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        full_name:
          type: string
          example: Bob Stone
        birthday_on:
          type: string
          example: '2000-06-23'
        role:
          type: string
          example: basic
          enum:
            - basic
            - admin
        terminated_on:
          type: string
          example: '2023-06-23'
        gender:
          type: string
          example: female
          enum:
            - male
            - female
        nationality:
          type: string
          example: es
        bank_number:
          type: string
          example: ES09 4595 6109 8115 7760 8354
        country:
          type: string
          example: es
        city:
          type: string
          example: Barcelona
        state:
          type: string
          example: Barcelona
        postal_code:
          type: string
          example: '08007'
        address_line_1:
          type: string
          example: c/ Tallers 123
        address_line_2:
          type: string
          example: Atic 5
        identifier:
          type: string
          example: 82649834R
        identifier_type:
          type: string
          example: dni
        company_id:
          type: integer
          example: 5
        legal_entity_id:
          type: integer
          example: 5
        manager_id:
          type: integer
          example: 5
        timeoff_manager_id:
          type: integer
          example: 5
        regular_access_starts_on:
          type: string
          example: '2022-06-23'
        phone_number:
          type: string
          example: '9322222222222'
        social_security_number:
          type: string
          example: '223948780514'
        start_date:
          type: string
          example: '2022-06-23'
        location_id:
          type: integer
          example: 1
        team_ids:
          type: array
          items:
            type: integer
        company_holiday_ids:
          type: array
          items:
            type: integer
        avatar:
          type: string
          example: >-
            https://api.factorialhr.com/rails/active_storage/representations/redirect/bob.png
        company_identifier:
          type: string
          example: 124ABC
        hiring:
          type: object
          properties:
            base_compensation_amount_in_cents:
              type: integer
              example: 50000
            base_compensation_type:
              type: string
              example: yearly
              enum:
                - yearly
                - monthly
                - weekly
                - hourly
    Employee_v2:
      type: object
      properties:
        id:
          type: integer
          example: 5
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        full_name:
          type: string
          example: Bob Stone
        email:
          type: string
          example: bob_stone@factorial.co
        login_email:
          type: string
          example: bob_stone@factorial.co
        birthday_on:
          type: string
          example: '2000-01-08'
        terminated_on:
          type: string
          example: '2022-01-08'
        termination_reason:
          type: string
          example: Behaviour
        termination_observations:
          type: string
          example: Behaviour
        identifier:
          type: string
          example: 82649834R
        identifier_type:
          type: string
          example: dni
        gender:
          type: string
          example: female
          enum:
            - male
            - female
        nationality:
          type: string
          example: es
        bank_number:
          type: string
          example: ES09 4595 6109 8115 7760 8354
        country:
          type: string
          example: es
        city:
          type: string
          example: Barcelona
        state:
          type: string
          example: Barcelona
        postal_code:
          type: string
          example: '08007'
        address_line_1:
          type: string
          example: c/ Tallers 123
        address_line_2:
          type: string
          example: Atic 5
        swift_bic:
          type: string
          example: '1234567890'
        company_id:
          type: integer
          example: 5
        legal_entity_id:
          type: integer
          example: 5
        created_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
        updated_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
        manager_id:
          type: integer
          example: 5
        location_id:
          type: integer
          example: 5
        timeoff_manager_id:
          type: integer
          example: 5
        social_security_number:
          type: string
          example: '223948780514'
        tax_id:
          type: string
          example: '121232323'
        timeoff_policy_id:
          type: integer
          example: 1
        team_ids:
          type: array
          items:
            type: integer
            example: 1
        phone_number:
          type: string
          example: '9322222222222'
        company_identifier:
          type: string
          example: 124ABC
    Team:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Management
        employee_ids:
          type: array
          items:
            type: integer
            example: 1
        lead_ids:
          type: array
          items:
            type: integer
            example: 1
    Document:
      type: object
      properties:
        id:
          type: integer
          example: 1
        employee_id:
          type: integer
          example: 1
        company_id:
          type: integer
          example: 1
        folder_id:
          type: integer
          example: 1
        url:
          type: string
          example: https:/factorial-api/documents/payslip.pdf
        filename:
          type: string
          example: payslip.pdf
        public:
          type: boolean
          example: true
        created_at:
          type: string
          example: '2022-06-23T16:02:22.000Z'
        updated_at:
          type: string
          example: '2022-06-23T16:02:22.000Z'
    Folder:
      type: object
      properties:
        id:
          type: integer
          example: 1
        company_id:
          type: integer
          example: 1
        name:
          type: string
          example: payment
        active:
          type: boolean
          example: true
        created_at:
          type: string
          example: '2022-06-23T16:02:22.000Z'
        updated_at:
          type: string
          example: '2022-06-23T16:02:22.000Z'
    Task:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Upload information task
        content:
          type: string
          example: >-
            Update information due date to either following weekday or following
            friday
        due_on:
          type: string
          example: '2022-05-18'
        assignee_ids:
          type: array
          items:
            type: integer
            example: 3
        completed_at:
          type: string
          example: '2022-12-13T16:17:56.000Z'
    TaskFile:
      type: object
      properties:
        id:
          type: integer
          example: 1
        task_id:
          type: integer
          example: 15
        filename:
          type: string
          example: task_file.pdf
        path:
          type: string
          example: https:/factorial-api/task_files/task_file.pdf
    Location:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Zurich Office
        country:
          type: string
          example: ch
        phone_number:
          type: string
          example: '5555555555'
        state:
          type: string
          example: ZH
        city:
          type: string
          example: Zürich
        address_line_1:
          type: string
          example: Swatch strasse 3
        address_line_2:
          type: string
          example: Atiquen terceren
        postal_code:
          type: string
          example: '04221'
        timezone:
          type: string
          example: CEST
        company_holidays_ids:
          type: array
          items:
            type: integer
            example: 6
    ApiKey:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Company Api Key
        token_digest:
          type: string
          example: 069cf78dd2a3********************67c1fcfb38bdb1e1bf5c3a1e451499848f
        created_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
    ApiKeyCreate:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Fingerprint Device Door 1
        token:
          type: string
          example: 066629642c451273a3921bb4hehbe107b044c94z45be7772f8e1c7a9b5617325
    CustomResource:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: First Custom Table
        created_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
        topic_name:
          type: string
          example: employee
        custom_resources_topic_id:
          type: integer
          example: 1
        reportable:
          type: boolean
          example: false
        hidden:
          type: boolean
          example: true
    Shift:
      type: object
      properties:
        id:
          type: integer
          example: 1
        day:
          type: integer
          example: 23
        month:
          type: integer
          example: 6
        year:
          type: integer
          example: 2022
        clock_in:
          type: string
          example: '18:00'
        clock_out:
          type: string
          example: '20:00'
        employee_id:
          type: integer
          example: 4
        observations:
          type: string
          example: New Observation
        location_type:
          type: string
          example: office
          enum:
            - office
            - business_trip
            - work_from_home
        in_location_latitude:
          type: number
          format: float
          example: -34.8601369070693
        in_location_longitude:
          type: number
          format: float
          example: 56.0008344819525
        in_location_accuracy:
          type: number
          format: float
          example: 1.4
        out_location_latitude:
          type: number
          format: float
          example: -34.8601369070693
        out_location_longitude:
          type: number
          format: float
          example: 56.0008344819525
        out_location_accuracy:
          type: number
          format: float
          example: 1.4
    Access:
      type: object
      properties:
        email:
          type: string
          example: hellen@factorial.co
        full_name:
          type: string
          example: Hellen Factorial
        first_name:
          type: string
          example: Hellen
        last_name:
          type: string
          example: Factorial
        employee_id:
          type: integer
          example: 8
        role:
          type: string
          example: manager
    EmployeeWebhook:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Hellen
        last_name:
          type: string
          example: Factorial
        email:
          type: string
          example: hellen@factorial.co
        invited_on:
          type: string
          example: '2022-06-24T18:39:03.515Z'
    AtsApplication:
      type: object
      properties:
        id:
          type: integer
          example: 1
        ats_candidate_id:
          type: integer
          example: 2
        ats_job_posting_id:
          type: integer
          example: 3
        ats_application_phase_id:
          type: integer
          example: 3
        ats_application_phase_name:
          type: string
          example: Hired
        ats_application_phase_type:
          type: string
          example: hired
        ats_job_posting_title:
          type: string
          example: Software Engineer
        conversation_id:
          type: integer
          example: 5
        cover_letter:
          type: string
          example: This is a cover letter
        cv:
          type: object
          properties:
            file:
              type: string
              example: /applications/1/cv_file
            content_type:
              type: string
              example: application/pdf
            filename:
              type: string
              example: candidate.pdf
            size:
              type: integer
              example: 29516
            created_at:
              type: string
              example: '2022-06-24T18:39:03.515Z'
        photo:
          type: string
          example: photo.jpeg
        disqualified_reason:
          type: string
          example: not_a_fit
        email:
          type: string
          example: bob.stone@factorial.co
        first_name:
          type: string
          example: Bob
        full_name:
          type: string
          example: Bob Stone
        last_name:
          type: string
          example: Stone
        medium:
          type: string
          example: organic
        personal_url:
          type: string
          example: www.linkedin.com/awesome
        phone:
          type: string
          example: '666666666'
        qualified:
          type: boolean
          example: true
        rating_average:
          type: integer
          example: 5
        source:
          type: string
          example: manually_added
        talent_pool:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
        answers:
          type: array
          items:
            $ref: '#/components/schemas/AtsAnswer'
    AtsMessage:
      type: object
      properties:
        id:
          type: integer
          example: 1
        conversation_id:
          type: integer
          example: 2
        content:
          type: string
          example: Cv is missing
        sent_by_type:
          type: string
          example: User
        sent_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
        sent_by_id:
          type: integer
          example: 2
        attachments:
          type: array
          items:
            type: string
    AtsJobPosting:
      type: object
      properties:
        title:
          type: string
          example: 'A wonderful job '
        description:
          type: string
          example: The most wonderful job in the whoooole world
        id:
          type: integer
          example: 1
        creation_date:
          type: string
          example: '2022-06-24T18:39:03.515Z'
        remote:
          type: boolean
          example: true
        status:
          type: string
          example: published
        schedule_type:
          type: string
          example: full_time
        team_id:
          type: integer
          example: 1
        location_id:
          type: integer
          example: 1
        legal_entity_id:
          type: integer
          example: 1
        ats_company_id:
          type: integer
          example: 3
        salary_format:
          type: string
          example: fixed_amount
        salary_from_amount_in_cents:
          type: integer
          example: 600000
        salary_to_amount_in_cents:
          type: integer
          example: 600000
        cv_requirement:
          type: string
          example: mandatory
        cover_letter_requirement:
          type: string
          example: mandatory
        phone_requirement:
          type: string
          example: mandatory
        photo_requirement:
          type: string
          example: mandatory
        questions:
          type: array
          items:
            $ref: '#/components/schemas/AtsQuestion'
          example:
            - id: 1
              label: Why do you want to work with us?
              position: 0
              mandatory: true
              question_type: long_text
              ats_job_posting_id: 1
              created_at: '2022-06-24T18:39:03.515Z'
              updated_at: '2022-06-24T18:39:03.515Z'
            - id: 2
              label: Linkedin profile url
              position: 1
              mandatory: true
              question_type: text
              ats_job_posting_id: 1
              created_at: '2022-06-24T18:39:03.515Z'
              updated_at: '2022-06-24T18:39:03.515Z'
            - id: 3
              label: Are you willing yo relocate?
              position: 0
              mandatory: true
              question_type: single_choice
              options:
                - 'Yes'
                - 'No'
              ats_job_posting_id: 1
              created_at: '2022-06-24T18:39:03.515Z'
              updated_at: '2022-06-24T18:39:03.515Z'
            - id: 4
              label: Which office do you prefer?
              position: 0
              mandatory: false
              question_type: multiple_choice
              options:
                - Barcelona
                - Madrid
                - Amsterdam
              ats_job_posting_id: 1
              created_at: '2022-06-24T18:39:03.515Z'
              updated_at: '2022-06-24T18:39:03.515Z'
            - id: 5
              label: Attach your language certificate
              position: 0
              mandatory: false
              question_type: file
              ats_job_posting_id: 1
              created_at: '2022-06-24T18:39:03.515Z'
              updated_at: '2022-06-24T18:39:03.515Z'
    AtsQuestion:
      type: object
      properties:
        id:
          type: number
          example: 1337
        label:
          type: string
          example: Are you willing to relocate to Barcelona?
        position:
          type: number
          example: 0
        mandatory:
          type: boolean
          example: false
        question_type:
          type: string
          enum:
            - file
            - single_choice
            - multiple_choice
            - text
            - long_text
          example: single_choice
        options:
          type: array
          items:
            type: string
          example:
            - 'Yes'
            - 'No'
        ats_job_posting_id:
          type: number
          example: 1
        created_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
        updated_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
      required:
        - id
        - label
        - position
        - mandatory
        - question_type
        - ats_job_posting_id
        - created_at
        - updated_at
    AtsAnswer:
      type: object
      properties:
        id:
          type: number
          example: 10
        ats_question_id:
          type: number
          example: 1
        ats_application_id:
          type: number
          example: 2
        value:
          anyOf:
            - type: string
              example: Spain
            - type: array
              items:
                type: string
              example:
                - Barcelona
                - Madrid
            - type: object
              properties:
                filename:
                  type: string
                  example: my_porfolio.pdf
                url:
                  type: string
                  example: /path/to/the/file/my_porfolio.pdf
                byte_size:
                  type: number
                  example: 1024
                content_type:
                  type: string
                  example: application/pdf
              required:
                - filename
                - url
                - byte_size
                - content_type
      required:
        - id
        - ats_question_id
        - value
    LegalEntity:
      type: object
      properties:
        id:
          type: integer
          example: 1
        city:
          type: string
          example: Barcelona
        state:
          type: string
          example: Catalunia
        postal_code:
          type: string
          example: '04221'
        address_line_1:
          type: string
          example: Swatch strasse 3
        address_line_2:
          type: string
          example: Atiquen terceren
        country:
          type: string
          example: España
        company_id:
          type: integer
          example: 1
        legal_name:
          type: string
          example: Factorial
        tax_identification_number:
          type: string
          example: S0794867B
        currency:
          type: string
          example: EUR
    CustomField:
      type: object
      properties:
        id:
          type: integer
          example: 1
        label:
          type: string
          example: employee
        position:
          type: integer
          example: 90773647
        required:
          type: boolean
          example: false
        field_type:
          type: string
          example: text
        min_value:
          type: integer
          example: -439653
        max_value:
          type: integer
          example: 47114499
        choice_options:
          type: object
          properties:
            id:
              type: integer
              example: 1
            label:
              type: string
              example: Shirt Size
            value:
              type: string
              example: L
            is_active:
              type: boolean
              example: false
    CustomField_v2:
      type: object
      properties:
        id:
          type: integer
          example: 1
        label:
          type: string
          example: employee
        identifier:
          type: string
          example: label-1
        position:
          type: integer
          example: 90773647
        required:
          type: boolean
          example: false
        field_type:
          type: string
          example: text
        min_value:
          type: integer
          example: -439653
        max_value:
          type: integer
          example: 47114499
        slug_id:
          type: integer
          example: 47114499
        slug_name:
          type: string
          example: text
        choice_options:
          type: object
          properties:
            id:
              type: integer
              example: 1
            label:
              type: string
              example: Shirt Size
            value:
              type: string
              example: L
            is_active:
              type: boolean
              example: false
    Post:
      type: object
      properties:
        title:
          type: string
          example: New Post
        description:
          type: string
          example: This is available until sunday
        id:
          type: integer
          example: 1
        type:
          type: string
          example: first_day
          enum:
            - event
            - announcement
            - first_day
            - birthday
            - workiversary
        allow_comments_and_reactions:
          type: boolean
          example: true
        location:
          type: string
          example: Green park
        published_at:
          type: string
          example: '2022-09-08T00:00:00.000Z'
        starts_at:
          type: string
          example: 2022-010-08T00:00:00.000Z
        ends_at:
          type: string
          example: '2022-10-09T00:00:00.000Z'
        created_at:
          type: string
          example: '2022-09-08T15:41:54.000Z'
        updated_at:
          type: string
          example: '2022-09-08T15:41:54.000Z'
        visits_count:
          type: integer
          example: 0
        comments_count:
          type: integer
          example: 0
        reactions_count:
          type: integer
          example: 0
        cover_image_url:
          type: string
          example: test-cover-image-jpg.com
        author_id:
          type: integer
          example: 1
        posts_group_id:
          type: integer
          example: 1
        target_id:
          type: integer
          example: 1
    LeaveType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        accrues:
          type: boolean
          example: true
        active:
          type: boolean
          example: true
        approval_required:
          type: boolean
          example: false
        attachment:
          type: boolean
          example: false
        color:
          type: string
          example: 07A2AD
        identifier:
          type: string
          example: Holiday Leave Type
        name:
          type: string
          example: holiday
        visibility:
          type: boolean
          example: true
        workable:
          type: boolean
          example: false
    Leave:
      type: object
      properties:
        description:
          type: string
          example: Medical appointment for 4 hours
        id:
          type: integer
          example: 1
        approved:
          type: boolean
          example: true
        employee_id:
          type: integer
          example: 7
        finish_on:
          type: string
          example: '2022-03-03'
        half_day:
          type: string
          example: end_of_day
          enum:
            - beggining_of_day
            - end_of_day
        leave_type_id:
          type: integer
          example: 3
        start_on:
          type: string
          example: '2022-03-03'
        employee_full_name:
          type: string
          example: Hellen Factorial
        leave_type_name:
          type: string
          example: Medical appointment
        hours_amount_in_cents:
          type: integer
          example: 400
    Leave_v2:
      type: object
      properties:
        description:
          type: string
          example: Medical appointment for 4 hours
        id:
          type: integer
          example: 1
        approved:
          type: boolean
          example: true
        employee_id:
          type: integer
          example: 7
        start_on:
          type: string
          example: '2022-04-29T12:00:00.000+00:00'
        finish_on:
          type: string
          example: '2022-04-29T16:00:00.000+00:00'
        half_day:
          type: string
          example: end_of_day
          enum:
            - beggining_of_day
            - end_of_day
        leave_type_id:
          type: integer
          example: 3
        leave_type_name:
          type: string
          example: Medical appointment
        employee_full_name:
          type: string
          example: Hellen Factorial
    Policy:
      type: object
      properties:
        description:
          type: string
          example: Hellen
        id:
          type: integer
          example: 1
        main:
          type: boolean
          example: true
        name:
          type: string
          example: Holiday Policy
        default_allowance_id:
          type: integer
          example: 3
        allowance_incidences:
          type: integer
          example: 0
    CompanyHoliday:
      type: object
      properties:
        summary:
          type: string
          example: A holiday set aside for team building.
        description:
          type: string
          example: Company event in our corporate headquartes at 9:00hs
        id:
          type: integer
          example: 1
        date:
          type: string
          example: '2006-09-10'
        half_day:
          type: string
          example: end_of_day
          enum:
            - beggining_of_day
            - end_of_day
        location_id:
          type: integer
          example: 17
    CustomValue:
      type: object
      properties:
        id:
          type: integer
          example: 1
        label:
          type: string
          example: Shirt Size
        value:
          type: string
          example: S
        field_id:
          type: integer
          example: 5
        required:
          type: boolean
          example: true
        instance_id:
          type: integer
          example: 1
    CustomValue_v2:
      type: object
      properties:
        id:
          type: integer
          example: 1
        label:
          type: string
          example: Shirt Size
        value:
          type: string
          example: S
        field_id:
          type: integer
          example: 5
        slug_id:
          type: integer
          example: 5
        slug_name:
          type: string
          example: employees questions
        required:
          type: boolean
          example: true
        instance_id:
          type: integer
          example: 1
    CustomResourceValue:
      type: object
      properties:
        '1':
          type: string
          example: Excellent
        '2':
          type: string
          example: Good
        id:
          type: integer
          example: 1
        employee_id:
          type: integer
          example: 3
    Company:
      type: object
      properties:
        id:
          type: integer
          example: 1
        gdpr_tos:
          type: boolean
          example: true
        legal_name:
          type: string
          example: Company Test SL
        locale:
          type: string
          example: en
        logo:
          type: string
          example: >-
            https://api.factorialhr.com/rails/active_storage/representations/redirect/e689/logo.png
        name:
          type: string
          example: Company Test
        onboarded_on:
          type: string
          example: '2022-06-23'
        subscription_plan:
          type: string
          example: free
        tin:
          type: string
          example: B66823530
        to_be_deleted:
          type: boolean
          example: false
        tos:
          type: boolean
          example: true
    Attendance:
      type: object
      properties:
        id:
          type: integer
          example: 1
        employee_id:
          type: integer
          example: 5
        clock_in:
          type: string
          example: '2022-06-23T18:00:33.000Z'
        clock_out:
          type: string
          example: '2022-06-23T20:00:33.000Z'
        observations:
          type: string
          example: First shift
        location_type:
          type: string
          example: office
          enum:
            - office
            - business_trip
            - work_from_home
        half_day:
          type: string
          example: beginning_of_day
          enum:
            - beginning_of_day
            - end_of_day
        in_location_latitude:
          type: number
          format: float
          example: -34.8601369070693
        in_location_longitude:
          type: number
          format: float
          example: 56.0008344819525
        in_location_accuracy:
          type: number
          format: float
          example: 1.4
        out_location_latitude:
          type: number
          format: float
          example: -34.8601369070693
        out_location_longitude:
          type: number
          format: float
          example: 56.0008344819525
        out_location_accuracy:
          type: number
          format: float
          example: 1.4
        workable:
          type: boolean
          example: false
        automatic_clock_in:
          type: boolean
          example: false
        automatic_clock_out:
          type: boolean
          example: false
        time_settings_break_configuration_id:
          nullable: true
          type: integer
          example: 1
    BreakConfigurationsForDate:
      type: object
      properties:
        date:
          type: string
          example: '2023-09-30'
        break_configurations:
          type: array
          items:
            $ref: '#/components/schemas/BreakConfiguration'
    BreakConfiguration:
      type: object
      properties:
        time_settings_break_configuration_id:
          type: integer
          example: 1
        name:
          type: string
          example: Coffee
        paid:
          type: boolean
          example: true
    InstallationSettings:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              leave_types:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    value:
                      type: string
              additional_compensation_types:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    value:
                      type: string
    Forbidden:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    CustomHeader:
      type: object
      properties:
        id:
          type: integer
          example: 1
        label:
          type: string
          example: Shirt Size
        position:
          type: integer
          example: 1
    Webhook:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          type: string
          example: employee_created
        target_url:
          type: string
          example: https://webhook.site/48103127-b1f6-3215-8f18-60fdbc013e3f
        company_id:
          type: integer
          example: 1
    Webhook_v2:
      type: object
      properties:
        id:
          type: integer
          example: 1
        subscription_type:
          type: string
          example: Employees::Events::EmployeeCreated
        name:
          type: string
          example: creating employee webhook
        challenge:
          type: string
          example: '9288376100399000'
        target_url:
          type: string
          example: https://webhook.site/48103127-b1f6-3215-8f18-60fdbc013e3f
        company_id:
          type: integer
          example: 1
    LeaveWebhook:
      type: object
      properties:
        id:
          type: integer
          example: 1
        approved:
          type: boolean
          example: true
        employee_id:
          type: integer
          example: 5
        start_on:
          type: string
          example: '2022-04-29T12:00:00.000+00:00'
        finish_on:
          type: string
          example: '2022-04-29T16:00:00.000+00:00'
        half_day:
          type: string
          example: end_of_day
          enum:
            - beggining_of_day
            - end_of_day
        leave_type_id:
          type: integer
          example: 3
    FamilySituation:
      type: object
      properties:
        id:
          type: integer
          example: 1
        employee_id:
          type: integer
          example: 3
        civil_status:
          type: string
          example: married
          enum:
            - single
            - cohabitating
            - divorced
            - married
            - unknown
            - civil_partnership
            - separated
            - widow
            - not_applicable
        number_of_dependants:
          type: integer
          example: 1
    Event:
      type: object
      properties:
        id:
          type: string
          example: dfc5126-1a65-4cfa-b8ef-3988e22d89b3
        type:
          type: string
          example: Timeoff::Events::TimeoffPolicyCreated
        name:
          type: string
          example: Time-off policy created
        datetime:
          type: string
          example: '2021-09-20T10:56:06.620Z'
        resource_id:
          type: integer
          example: 1
    Supplement:
      type: object
      properties:
        id:
          type: integer
          example: 1
        employee_id:
          type: integer
          example: 2
        contracts_compensation_id:
          type: integer
          example: 5
        contracts_taxonomy_id:
          type: integer
          example: 5
        amount_in_cents:
          type: integer
          example: 30000
        unit:
          type: string
          example: usd
        effective_on:
          type: string
          example: '2022-03-13'
        updated_at:
          type: string
          example: '2022-03-15'
        description_entity:
          type: string
          example: Performance supplement
        created_by_access_id:
          type: integer
          example: 6
        payroll_policy_period_id:
          type: integer
          example: 2
    Code:
      type: object
      properties:
        id:
          type: integer
          example: 1
        codeable_id:
          type: integer
          example: 12
        integration:
          type: string
          example: a3nom
        codeable_type:
          type: string
          example: Employee
        code:
          type: string
          example: TEST_CODE
        company_id:
          type: integer
          example: 1
        forfait_jours:
          type: boolean
          example: false
    HiringVersion:
      type: object
      properties:
        id:
          type: integer
          example: 1
        effective_on:
          type: string
          example: '2022-03-13'
        employee_id:
          type: integer
          example: 2
        base_compensation_amount_in_cents:
          type: integer
          example: 500000
        base_compensation_type:
          type: string
          example: normal
        start_date:
          type: string
          example: '2022-03-19'
        end_date:
          type: string
          example: '2023-03-19'
        job_title:
          type: string
          example: Software Engineer
        working_hours_in_cents:
          type: integer
          example: 800
        working_period_unit:
          type: integer
          example: 8
    ContractVersion:
      type: object
      properties:
        id:
          type: integer
          example: 1
        employee_id:
          type: integer
          example: 2
        country:
          type: string
          example: es
        job_title:
          type: string
          example: Software Engineer
        role:
          type: string
          example: Backend Engineer
        level:
          type: string
          example: Junior
        effective_on:
          type: string
          example: '2022-02-13'
        starts_on:
          type: string
          example: '2022-02-19'
        ends_on:
          type: string
          example: '2023-02-19'
        has_payroll:
          type: boolean
          example: true
        salary_amount:
          type: integer
          example: 45000
        salary_frequency:
          type: string
          example: monthly
        working_week_days:
          type: string
          example: null
        working_hours:
          type: integer
          example: 8
        working_hours_frequency:
          type: string
          example: null
        es_has_teleworking_contract:
          type: boolean
          example: true
        es_cotization_group:
          type: integer
          example: 2
        es_contract_observations:
          type: string
          example: 8
        es_job_description:
          type: string
          example: Junior software engineer
        es_trial_period_ends_on:
          type: string
          example: null
        es_contract_type_id:
          type: integer
          example: 1
        es_working_day_type_id:
          type: integer
          example: 8
        es_education_level_id:
          type: integer
          example: 2
        es_professional_category_id:
          type: integer
          example: 15
        fr_employee_type:
          type: string
          example: null
        fr_forfait_jours:
          type: boolean
          example: false
        fr_jours_par_an:
          type: integer
          example: .nan
        fr_coefficient:
          type: integer
          example: .nan
        fr_contract_type_id:
          type: integer
          example: .nan
        fr_level_id:
          type: integer
          example: .nan
        fr_step_id:
          type: integer
          example: .nan
        fr_mutual_id:
          type: integer
          example: .nan
        fr_professional_category_id:
          type: integer
          example: .nan
        fr_work_type_id:
          type: integer
          example: .nan
        compensation_ids:
          type: array
          items:
            type: integer
            example: 1
        created_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
        updated_at:
          type: string
          example: '2022-06-24T18:39:03.515Z'
    AtsCandidate:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        full_name:
          type: string
          example: Bob Stone
        email:
          type: string
          example: bob_stone@factorial.co
        talent_pool:
          type: boolean
          example: true
        created_at:
          type: string
          example: '2021-12-28T13:17:58.000Z'
        updated_at:
          type: string
          example: '2021-12-28T13:17:58.000Z'
        source:
          type: string
          example: mannually added
        medium:
          type: string
          example: LinkedIn
    ShiftManagement:
      type: object
      properties:
        id:
          type: integer
          example: 1
        employee_id:
          type: integer
          example: 5
        start_at:
          type: string
          example: '2022-06-23T11:00:00.000+00:00'
        end_at:
          type: string
          example: '2022-06-23T17:00:00.000+00:00'
        state:
          type: string
          enum:
            - published, draft
          example: published
        notes:
          type: string
          example: Notes
        location_id:
          type: integer
          example: 2
        work_area_id:
          type: integer
          example: 2
        extra_hours:
          type: boolean
          example: false
    Expense:
      type: object
      properties:
        description:
          type: string
          example: Meal
        id:
          type: integer
          example: 1
        employee_id:
          type: integer
          example: 5
        company_id:
          type: integer
          example: 1
        merchant_name:
          type: string
          example: Expense 1
        category:
          type: string
          example: '4551'
        creation_type:
          type: string
          example: manual
        reference:
          type: string
          example: D34
        amount:
          type: integer
          example: 2000
        vat_amount:
          type: integer
          example: 2
        currency:
          type: string
          example: eur
        status:
          type: string
          enum:
            - draft
            - published
          example: draft
        effective_on:
          type: string
          example: '2022-07-25T12:51:16.000Z'
        status_updated_at:
          type: string
          example: '2022-07-25T12:51:16.000Z'
        files:
          type: array
          items:
            type: string
            example: https://factorial-api/expenses/meals.pdf
    Compensation:
      type: object
      properties:
        description:
          type: string
          example: Meals tuesday
        id:
          type: integer
          example: 1
        contract_version_id:
          type: integer
          example: 5
        compensation_type:
          type: string
          example: fixed
          enum:
            - fixed
            - up_to
        amount:
          type: integer
          example: 123
        recurrence:
          type: string
          example: monthly
          enum:
            - monthly
            - every_2_months
            - every_3_months
            - every_4_months
            - every_5_months
            - every_6_months
            - every_7_months
            - every_8_months
            - every_9_months
            - every_10_months
            - every_11_months
            - every_12_months
        first_payment_on:
          type: string
          example: '2022-08-02'
        sync_with_supplements:
          type: boolean
          example: true
        contracts_taxonomy_id:
          type: integer
          example: 2
        payroll_policy_id:
          type: integer
          example: 2
        recurrence_count:
          type: integer
          example: 2
        starts_on:
          type: string
          example: '2022-08-02'
        unit:
          type: string
          example: money
          enum:
            - money
            - units
        calculation:
          type: string
          example: current_period
          enum:
            - current_period
            - previous_period'
    Workplace:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: First Workplace
        country:
          type: string
          example: es
        state:
          type: string
          example: CT
        city:
          type: string
          example: Barcelona
        address_line_1:
          type: string
          example: Swatch strasse 3
        address_line_2:
          type: string
          example: Atiquen terceren
        postal_code:
          type: string
          example: C1231
        phone_number:
          type: string
          example: '55555555'
        company_id:
          type: integer
          example: 2
        payroll_policy_id:
          type: integer
          example: 2
        main:
          type: boolean
          example: true
        timezone:
          type: string
          example: etc/UTC
    Taxonomy:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Taxonomy 1
        archived:
          type: boolean
          example: false
        default:
          type: boolean
          example: true
        legal_entity_id:
          type: integer
          example: 2
    EmployeeCreateEmployeeRequest:
      type: object
      required:
        - email
        - first_name
        - last_name
      properties:
        email:
          type: string
          example: bob_stone@factorial.co
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        birthday_on:
          type: string
          example: '2000-01-08'
        start_date:
          type: string
          example: '2022-01-08'
        regular_access_starts_on:
          type: string
          example: '2022-01-08'
        manager_id:
          type: integer
          example: 5
        role:
          type: string
          example: basic
          enum:
            - basic
            - admin
        timeoff_manager_id:
          type: integer
          example: 5
        terminated_on:
          type: string
          example: '2022-01-08'
        termination_reason:
          type: string
          example: behaviour
        company_identifier:
          type: string
          example: 124ABC
        phone_number:
          type: string
          example: '622564089'
    EmployeeUpdateByIdRequest:
      type: object
      properties:
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        manager_id:
          type: integer
          example: 5
        role:
          type: string
          example: basic
          enum:
            - basic
            - admin
        timeoff_manager_id:
          type: integer
          example: 5
        company_identifier:
          type: string
          example: 124ABC
    EmployeeTerminateEmployeeRequest:
      type: object
      properties:
        terminated_on:
          type: string
          example: '1992-05-02'
        termination_reason:
          type: string
          example: Behaviour
        termination_assigned_manager_id:
          type: integer
          example: 5
    EmployeeCreateNewRequest:
      type: object
      required:
        - email
        - first_name
        - last_name
      properties:
        email:
          type: string
          example: bob_stone@factorial.co
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        birthday_on:
          type: string
          example: '2000-01-08'
        role:
          type: string
          example: basic
          enum:
            - basic
            - admin
        gender:
          type: string
          example: female
          enum:
            - male
            - female
        identifier:
          type: string
          example: Y7729503E
        identifier_type:
          type: string
          example: nie
          enum:
            - dni
            - nie
            - passport
        nationality:
          type: string
          example: es
        bank_number:
          type: string
          example: ES09 4595 6109 8115 7760 8354
        country:
          type: string
          example: es
        city:
          type: string
          example: Barcelona
        state:
          type: string
          example: Barcelona
        postal_code:
          type: string
          example: '08007'
        address_line_1:
          type: string
          example: c/ Tallers 123
        address_line_2:
          type: string
          example: Atic 5
        swift_bic:
          type: string
          example: '1234567890'
        company_id:
          type: integer
          example: 5
        manager_id:
          type: integer
          example: 5
        location_id:
          type: integer
          example: 5
        timeoff_manager_id:
          type: integer
          example: 5
        legal_entity_id:
          type: integer
          example: 765
        company_identifier:
          type: string
          example: 124ABC
        phone_number:
          type: string
          example: '622564089'
        social_security_number:
          type: string
          example: '223948780514'
        tax_id:
          type: string
          example: '121232323'
    EmployeeUpdateEmployeeByIdRequest:
      type: object
      properties:
        email:
          type: string
          example: bob_stone@factorial.co
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        birthday_on:
          type: string
          example: '2000-01-08'
        role:
          type: string
          example: basic
          enum:
            - basic
            - admin
        gender:
          type: string
          example: female
          enum:
            - male
            - female
        identifier:
          type: string
          example: Y7729503E
        identifier_type:
          type: string
          example: nie
          enum:
            - dni
            - nie
            - passport
        nationality:
          type: string
          example: es
        bank_number:
          type: string
          example: ES09 4595 6109 8115 7760 8354
        country:
          type: string
          example: es
        city:
          type: string
          example: Barcelona
        state:
          type: string
          example: Barcelona
        postal_code:
          type: string
          example: '08007'
        address_line_1:
          type: string
          example: c/ Tallers 123
        address_line_2:
          type: string
          example: Atic 5
        swift_bic:
          type: string
          example: '1234567890'
        manager_id:
          type: integer
          example: 5
        location_id:
          type: integer
          example: 5
        timeoff_manager_id:
          type: integer
          example: 5
        phone_number:
          type: string
          example: '678901234'
        social_security_number:
          type: integer
          example: 223948780514
        legal_entity_id:
          type: integer
          example: 235
        company_identifier:
          type: string
          example: 124ABC
        contact_name:
          type: string
          example: John
        contact_number:
          type: string
          example: '678901234'
        tax_id:
          type: string
          example: '121232323'
    EmployeeChangeEmailRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: bob_stone1@factorial.co
    EmployeeSetTerminationDetailsRequest:
      type: object
      required:
        - terminated_on
      properties:
        terminated_on:
          type: string
          example: '2023-02-08'
        termination_reason:
          type: string
          example: a termination reason
        termination_reason_type:
          type: string
          enum:
            - company
            - employee
            - others
        termination_assigned_manager_id:
          type: integer
          example: 5
    WebhookSubscriptionCreateRequest:
      type: object
      required:
        - subscription_type
        - target_url
      properties:
        subscription_type:
          type: string
          example: Employees::Events::EmployeeCreated
        target_url:
          type: string
          example: https://webhook.site/48103127-b1f6-3215-8f18-60fdbc013e3f
        name:
          type: string
          example: creating employee webhook
        challenge:
          type: string
          example: '9288376100399000'
    WebhookUpdateWebhookByIdRequest:
      type: object
      properties:
        target_url:
          type: string
          example: Employees::Events::EmployeeCreated
        name:
          type: string
          example: creating employee webhook
        challenge:
          type: string
          example: '9288376100399000'
    TeamCreateNewTeamRequest:
      type: object
      required:
        - name
      properties:
        description:
          type: string
          example: Team description
        name:
          type: string
          example: Management
    TeamUpdateTeamByIdRequest:
      type: object
      properties:
        description:
          type: string
          example: Team description
        name:
          type: string
          example: Management
        avatar:
          type: string
          example: >-
            https://api.factorialhr.com/rails/active_storage/representations/redirect/bob.png
    EmployeeUpdateInTeamRequest:
      type: object
      properties:
        lead:
          type: boolean
          example: true
    FolderCreateNewFolderRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: payment
        active:
          type: boolean
          example: true
    FolderUpdateFolderByIdRequest:
      type: object
      properties:
        name:
          type: string
          example: payment
        active:
          type: boolean
          example: true
    DocumentCreateNewDocumentRequest:
      type: object
      required:
        - filename
        - file
      properties:
        employee_id:
          type: integer
          example: 1
        folder_id:
          type: integer
          example: 1
        request_esignature:
          type: boolean
          example: true
        filename:
          type: string
          example: payslip.pdf
        public:
          type: boolean
          example: true
        signees:
          type: array
          items:
            type: integer
            example: 1
        file:
          type: string
          format: binary
          example: payslip.pdf
        is_pending_assignment:
          type: boolean
          example: false
    DocumentUpdateByIdRequest:
      type: object
      properties:
        public:
          type: boolean
          example: true
        employee_id:
          type: integer
          example: 1
        folder_id:
          type: integer
          example: 1
        request_esignature:
          type: boolean
          example: false
        signees:
          type: array
          items:
            type: integer
            example: 1
    KeyCreateNewRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: 1
    TaskCreateNewTaskRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Upload information task
        due_on:
          type: string
          example: '2022-05-18'
        content:
          type: string
          example: >-
            Update information due date to either following weekday or following
            friday
        assignee_ids:
          type: array
          items:
            type: integer
            example: 3
    TaskUpdateByIdRequest:
      type: object
      properties:
        due_on:
          type: string
          example: '2022-05-18'
        name:
          type: string
          example: Upload information task
        content:
          type: string
          example: >-
            Update information due date to either following weekday or following
            friday
        assignee_ids:
          type: array
          items:
            type: integer
            example: 3
    TaskResolveByIdRequest:
      type: object
      properties:
        done:
          type: boolean
          example: true
    TaskCopyByIdRequest:
      type: object
      properties:
        name:
          type: string
          example: Upload information task
    TaskAddFileToTaskRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
          example: task_file.pdf
    ShiftCreateClockInShiftRequest:
      type: object
      required:
        - employee_id
        - now
      properties:
        employee_id:
          type: integer
          example: 5
        now:
          type: string
          example: '2019-01-01T12:12:01-02:00'
        observations:
          type: string
          example: New observation
        location_type:
          type: string
          example: office
          enum:
            - office
            - business_trip
            - work_from_home
    ShiftUpdateClockOutShiftRequest:
      type: object
      required:
        - employee_id
        - now
      properties:
        employee_id:
          type: integer
          example: 5
        now:
          type: string
          example: '2019-01-01T12:12:01-02:00'
        observations:
          type: string
          example: Updated observation
    ShiftToggleShiftStatusRequest:
      type: object
      required:
        - employee_id
        - now
      properties:
        employee_id:
          type: integer
          example: 5
        now:
          type: string
          example: '2019-01-01T12:12:01-02:00'
    ShiftUpdateShiftRequest:
      type: object
      required:
        - employee_id
        - now
      properties:
        clock_in:
          type: string
          example: '2019-01-01T12:12:01-02:00'
        clock_out:
          type: string
          example: '2019-01-01T12:12:01-02:00'
        observations:
          type: string
          example: First Shift
    AttendanceCreateNewRequest:
      type: object
      required:
        - employee_id
        - clock_in
        - clock_out
      properties:
        employee_id:
          type: integer
          example: 5
        clock_in:
          type: string
          example: '2019-01-01T12:12:01-02:00'
        clock_out:
          type: string
          example: '2019-01-01T14:12:01-02:00'
        observations:
          type: string
          example: First Attendance
        location_type:
          type: string
          example: office
          enum:
            - office
            - business_trip
            - work_from_home
    LeaveTypeCreateRequest:
      type: object
      required:
        - name
        - color
      properties:
        name:
          type: string
          example: holiday
        color:
          type: string
          example: 07A2AD
        accrues:
          type: boolean
          example: true
        active:
          type: boolean
          example: true
        approval_required:
          type: boolean
          example: false
        attachment:
          type: boolean
          example: false
        visibility:
          type: boolean
          example: true
        workable:
          type: boolean
          example: false
    LeaveUpdateTypeRequest:
      type: object
      required:
        - name
        - color
      properties:
        name:
          type: string
          example: Special appointment
        color:
          type: string
          example: FFFFFF
        accrues:
          type: boolean
          example: false
        active:
          type: boolean
          example: true
        approval_required:
          type: boolean
          example: false
        attachment:
          type: boolean
          example: true
        visibility:
          type: boolean
          example: true
        workable:
          type: boolean
          example: true
    LeaveCreateNewLeaveRequest:
      type: object
      required:
        - start_on
        - finish_on
        - employee_id
      properties:
        description:
          type: string
          example: Medical appointment for 4 hours
        start_on:
          type: string
          example: '2022-03-03'
        finish_on:
          type: string
          example: '2022-03-03'
        employee_id:
          type: integer
          example: 5
        leave_type_id:
          type: integer
          example: 1
        half_day:
          type: string
          example: end_of_day
          enum:
            - beggining_of_day
            - end_of_day
    LeaveUpdateLeaveByIdRequest:
      type: object
      properties:
        description:
          type: string
          example: Medical appointment for 4 hours
        employee_id:
          type: integer
          example: 7
        finish_on:
          type: integer
          example: 5
        start_on:
          type: string
          example: basic
        half_day:
          type: string
          example: end_of_day
          enum:
            - beggining_of_day
            - end_of_day
        leave_type_id:
          type: integer
          example: 3
    LeaveCreateNewLeaveRequest1:
      type: object
      required:
        - start_on
        - finish_on
        - employee_id
      properties:
        description:
          type: string
          example: Medical appointment for 4 hours
        start_on:
          type: string
          example: '2022-03-03'
        finish_on:
          type: string
          example: '2022-03-03'
        employee_id:
          type: integer
          example: 5
        leave_type_id:
          type: integer
          example: 1
        half_day:
          type: string
          example: end_of_day
          enum:
            - beggining_of_day
            - end_of_day
        start_time:
          type: string
          example: '14:00'
        hours_amount_in_cents:
          type: integer
          example: 400
        medical_leave_type:
          type: integer
          example: 400
        effective_on:
          type: string
          example: '2022-03-03'
        medical_discharge_reason:
          type: string
          example: medical appointment
        colegiate_number:
          type: integer
          example: 3
        has_previous_relapse:
          type: boolean
          example: false
        relapse_leave_id:
          type: integer
          example: 3
        relapse_on:
          type: string
          example: '2022-03-03'
        accident_on:
          type: string
          example: '2022-03-01'
        paternity_birth_on:
          type: string
          example: '2022-03-02'
    LeaveUpdateByIdRequest:
      type: object
      properties:
        description:
          type: string
          example: Medical appointment for 4 hours
        employee_id:
          type: integer
          example: 7
        finish_on:
          type: string
          example: '2022-03-03'
        start_on:
          type: string
          example: '2022-03-03'
        start_time:
          type: string
          example: '12:00'
        hour_amount_in_cents:
          type: integer
          example: 400
    FamilySituationCreateNewRequest:
      type: object
      required:
        - employee_id
        - civil_status
      properties:
        employee_id:
          type: integer
          example: 3
        civil_status:
          type: string
          example: married
          enum:
            - single
            - cohabitating
            - divorced
            - married
            - unknown
            - civil_partnership
            - separated
            - widow
            - not_applicable
        number_of_dependants:
          type: integer
          example: 1
    FamilySituationUpdateFamilySituationRequest:
      type: object
      properties:
        employee_id:
          type: integer
          example: 3
        civil_status:
          type: string
          example: married
          enum:
            - single
            - cohabitating
            - divorced
            - married
            - unknown
            - civil_partnership
            - separated
            - widow
            - not_applicable
        number_of_dependants:
          type: integer
          example: 1
    CustomFieldValueCreateCustomValueRequest:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          example: somelinktomyportfolio.com
    PostCreateNewPostRequest:
      type: object
      required:
        - title
        - description
        - posts_group_id
        - type
        - published_at
      properties:
        title:
          type: string
          example: New Post
        description:
          type: string
          example: description
        posts_group_id:
          type: integer
          example: 1
        type:
          type: string
          example: first_day
          enum:
            - event
            - announcement
            - first_day
            - birthday
            - workiversary
        published_at:
          type: string
          example: '2022-09-08T00:00:00.000Z'
        stars_at:
          type: string
          example: '2022-09-08T00:00:00.000Z'
        ends_at:
          type: string
          example: '2022-09-08T00:00:00.000Z'
        location:
          type: string
          example: Green park
        target_id:
          type: integer
          example: 1
        send_notifications:
          type: boolean
          example: true
        image:
          type: string
          format: binary
        allow_comments_and_reactions:
          type: boolean
          example: true
        attachments:
          type: string
          format: binary
    PostUpdateExistingPostRequest:
      type: object
      required:
        - id
      properties:
        title:
          type: string
          example: New Post
        description:
          type: string
          example: description
        id:
          type: integer
          example: 1
        stars_at:
          type: string
          example: '2022-09-08T00:00:00.000Z'
        location:
          type: string
          example: Green park
        send_notifications:
          type: boolean
          example: true
        delete_cover_image:
          type: boolean
          example: true
        image:
          type: string
          format: binary
        allow_comments_and_reactions:
          type: boolean
          example: true
        attachments:
          type: string
          format: binary
        deleted_attachments:
          type: array
          items:
            type: integer
            example: 1
    PostAtsJobPostingRequest:
      type: object
      required:
        - title
        - status
      properties:
        title:
          type: string
          example: Jr Software Developer
        description:
          type: string
          example: Full Stack Developer
        contract_type:
          type: string
          enum:
            - indefinite
            - temporary
            - fixed_discontinued
            - intern
            - training
          example: temporary
        remote:
          type: boolean
          example: true
        status:
          type: string
          enum:
            - draft
            - published
            - unlisted
            - archived
            - cancelled
          example: draft
        schedule_type:
          type: string
          enum:
            - full_time
            - part_time
          example: full_time
        team_id:
          type: integer
          example: 1
        location_id:
          type: integer
          example: 3
        salary_format:
          type: string
          enum:
            - range
            - fixed_amount
          example: range
        salary_from_amount_in_cents:
          type: integer
          example: 50000
        salary_to_amount_in_cents:
          type: integer
          example: 60000
        cv_requirement:
          type: string
          enum:
            - mandatory
            - optional
            - do_not_ask
          example: mandatory
        cover_letter_requirement:
          type: string
          enum:
            - mandatory
            - optional
            - do_not_ask
          example: mandatory
        phone_requirement:
          type: string
          enum:
            - mandatory
            - optional
            - do_not_ask
          example: mandatory
        photo_requirement:
          type: string
          enum:
            - mandatory
            - optional
            - do_not_ask
          example: mandatory
    PostJobPostingUpdateRequest:
      type: object
      properties:
        title:
          type: string
          example: Developer
        description:
          type: string
          example: Full Stack Developer
        contract_type:
          type: string
          enum:
            - indefinite
            - temporary
            - fixed_discontinued
            - intern
            - training
          example: temporary
        remote:
          type: boolean
          example: true
        status:
          type: string
          enum:
            - draft
            - published
            - unlisted
            - archived
            - cancelled
          example: draft
        schedule_type:
          type: string
          enum:
            - full_time
            - part_time
          example: full_time
        team_id:
          type: integer
          example: 1
        location_id:
          type: integer
          example: 3
        salary_format:
          type: string
          enum:
            - range
            - fixed_amount
          example: range
        salary_from_amount_in_cents:
          type: integer
          example: 50000
        salary_to_amount_in_cents:
          type: integer
          example: 60000
        cv_requirement:
          type: string
          enum:
            - mandatory
            - optional
            - do_not_ask
          example: mandatory
        cover_letter_requirement:
          type: string
          enum:
            - mandatory
            - optional
            - do_not_ask
          example: mandatory
        phone_requirement:
          type: string
          enum:
            - mandatory
            - optional
            - do_not_ask
          example: mandatory
        photo_requirement:
          type: string
          enum:
            - mandatory
            - optional
            - do_not_ask
          example: mandatory
    CandidateCreateNewCandidateRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
      properties:
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        email:
          type: string
          example: bob_stone@factorial.co
        source:
          type: string
          enum:
            - indeed
            - linkedin
            - JobTarget
            - manually_added
            - organic
            - jobposting
            - JOIN
          example: indeed
        medium:
          type: string
          example: LinkedIn
    CandidateUpdateCandidateDataRequest:
      type: object
      properties:
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        email:
          type: string
          example: bob_stone@factorial.co
        talent_pool:
          type: boolean
          example: true
        consent_to_talent_pool:
          type: boolean
          example: false
    ContractVersionCreateNewVersionRequest:
      type: object
      properties:
        effective_on:
          type: string
          example: '2022-04-22'
        employee_id:
          type: integer
          example: 5
        starts_on:
          type: string
          example: '2021-04-22'
        ends_on:
          type: string
          example: '2023-04-22'
        working_hours_frequency:
          type: string
          enum:
            - week
            - day
            - month
            - year
          example: week
        working_week_days:
          type: string
          example: friday,tuesday,saturday
        working_hours:
          type: integer
          example: 800
        salary_frequency:
          type: string
          enum:
            - yearly
            - monthly
            - weekly
            - hourly
            - daily
          example: yearly
        salary_amount:
          type: integer
          example: 5000000
        job_title:
          type: string
          example: Jr Software Developer
    ContractUpdateVersionRequest:
      type: object
      required:
        - effective_on
      properties:
        effective_on:
          type: string
          example: '2022-04-22'
        employee_id:
          type: integer
          example: 5
        starts_on:
          type: string
          example: '2021-04-22'
        ends_on:
          type: string
          example: '2023-04-22'
        working_hours_frequency:
          type: string
          enum:
            - week
            - day
            - month
            - year
          example: week
        working_week_days:
          type: string
          example: friday,tuesday,saturday
        working_hours:
          type: integer
          example: 800
        salary_frequency:
          type: string
          enum:
            - yearly
            - monthly
            - weekly
            - hourly
            - daily
          example: yearly
        salary_amount:
          type: integer
          example: 5000000
        job_title:
          type: string
          example: Jr Software Developer
        es_cotization_group:
          description: the cotization group id for Spain contracts
          type: integer
          example: 1
          nullable: true
        es_professional_category_id:
          description: the professional category id for Spain contracts
          type: integer
          example: 2
          nullable: true
        es_education_level_id:
          description: the education level id for Spain contracts
          type: integer
          example: 4
          nullable: true
        es_contract_type_id:
          description: the contract type id for Spain contracts
          type: integer
          example: 2
          nullable: true
    SupplementCreateNewSupplementRequest:
      type: object
      properties:
        employee_id:
          type: integer
          example: 5
        amount_in_cents:
          type: integer
          example: 23333
        effective_on:
          type: string
          example: '2023-04-22'
        contracts_taxonomy_id:
          type: integer
          example: 2
        payroll_policy_period_id:
          type: integer
          example: 3
        unit:
          type: string
          example: usd
        contracts_compensation_id:
          type: integer
          example: 3
    SupplementUpdateByIdRequest:
      type: object
      properties:
        employee_id:
          type: integer
          example: 5
        amount_in_cents:
          type: integer
          example: 23333
        effective_on:
          type: string
          example: '2023-04-22'
        contracts_taxonomy_id:
          type: integer
          example: 2
        payroll_policy_period_id:
          type: integer
          example: 3
        unit:
          type: string
          example: usd
        contracts_compensation_id:
          type: integer
          example: 3
    IntegrationCodeCreatePayrollIntegrationCodeRequest:
      type: object
      required:
        - code
        - codeable_id
        - codeable_type
        - integration
      properties:
        code:
          type: string
          example: TEST_CODE
        codeable_id:
          type: integer
          example: 12
        codeable_type:
          type: string
          enum:
            - Company
            - Employee
            - CompanyCodeEnabled
            - CompanyDbFile
            - LegalEntity
            - CompanyTentantId
            - WorkplaceCodeEnabled
            - ContractsCompensationsTaxonomy
            - TimeoffLeaveType
            - Location
            - Bookkeper
            - ValidFrom
          example: Employee
        integration:
          type: string
          enum:
            - a3innuva
            - a3nom
            - silae
            - datev
            - zuccheti
            - kombo
            - parieh
          example: temporary
        forfait_jours:
          type: boolean
          example: true
    IntegrationUpdatePayrollCodeRequest:
      type: object
      properties:
        id:
          type: integer
          example: 3
        code:
          type: string
          example: TEST_CODE
    ShiftCreateNewShiftRequest:
      type: object
      required:
        - start_at
        - end_at
        - employee_id
      properties:
        start_at:
          type: string
          example: '2022-06-23T11:00:00.000+00:00'
        end_at:
          type: string
          example: '2022-06-23T17:00:00.000+00:00'
        employee_id:
          type: integer
          example: 3
        notes:
          type: string
          example: Note 2
        location_id:
          type: integer
          example: 1
        work_area_id:
          type: integer
          example: 1
    ShiftPublishShiftsInsideTimeRangeRequest:
      type: object
      properties:
        start_at:
          type: string
          example: '2022-06-23T11:00:00.000+00:00'
        end_at:
          type: string
          example: '2022-06-23T17:00:00.000+00:00'
        employee_ids:
          type: array
          items:
            type: integer
            example: 1
        send_notification:
          type: boolean
          example: false
    LocationUpdateShiftLocationRequest:
      type: object
      properties:
        location_id:
          type: integer
          example: 2
        work_area_id:
          type: integer
          example: 3
    ShiftUpdateNotesRequest:
      type: object
      properties:
        notes:
          type: string
          example: Note 1
    BreakStartBreakRequest:
      type: object
      required:
        - employee_id
        - now
      properties:
        now:
          type: string
          example: '2022-06-23T11:00:00.000+00:00'
        employee_id:
          type: integer
          example: 3
        observations:
          type: string
          example: New break observation
        time_settings_break_configuration_id:
          nullable: true
          type: integer
          example: 1
    BreakEndBreakRequest:
      type: object
      required:
        - employee_id
        - now
      properties:
        now:
          type: string
          example: '2022-06-23T11:00:00.000+00:00'
        employee_id:
          type: integer
          example: 3
        observations:
          type: string
          example: Updated break observation
    BreakCreateBreakRequest:
      type: object
      required:
        - employee_id
        - break_start
        - break_end
      properties:
        employee_id:
          type: integer
          example: 5
        break_start:
          type: string
          example: '2022-06-23T12:12:01-02:00'
        break_end:
          type: string
          example: '2022-06-23T13:12:01-02:00'
        observations:
          type: string
          example: New observation
    ApplicationCreateAtsApplicationRequest:
      type: object
      required:
        - ats_job_posting_id
        - source
      properties:
        ats_job_posting_id:
          type: integer
          example: 1
        source:
          type: string
          enum:
            - indeed
            - linkedin
            - JobTarget
            - manually_added
            - organic
            - jobposting
            - JOIN
          example: indeed
        medium:
          type: string
          example: LinkedIn
        ats_candidate_id:
          type: integer
          example: 2
        cover_letter:
          type: string
          example: ''
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        phone:
          type: string
          example: '1134124214'
        email:
          type: string
          example: bob_stone@factorial.co
        cv:
          type: string
          format: binary
          example: cv.pdf
        photo:
          type: string
          format: binary
          example: photo.jpg
        answers:
          type: array
          items:
            type: object
            properties:
              ats_question_id:
                type: number
                example: 1
              value:
                anyOf:
                  - type: string
                    example: Spain
                  - type: array
                    items:
                      type: string
                    example:
                      - Barcelona
                      - Madrid
                  - type: string
                    format: binary
                    example: cv.pdf
            required:
              - ats_question_id
              - value
          example:
            - ats_question_id: 10
              value: 'Yes'
            - ats_question_id: 11
              value:
                - Barcelona
                - Madrid
            - ats_question_id: 12
              value: cv.pdf
    ApplicationUpdateDataRequest:
      type: object
      properties:
        ats_application_phase_id:
          type: integer
          example: 1
        qualified:
          type: boolean
          example: true
        first_name:
          type: string
          example: Bob
        last_name:
          type: string
          example: Stone
        phone:
          type: string
          example: '1134124214'
        email:
          type: string
          example: bob_stone@factorial.co
        personal_url:
          type: string
          example: www.linkedin.com/awesome
        disqualified_reason:
          type: string
          example: not_a_fit
          enum:
            - not_a_fit
            - self_disqualified
            - salary
            - other_reason
            - underqualified
            - offer_not_accepted
            - other_offer
            - no_response
        cv:
          type: string
          format: binary
          example: cv.pdf
        photo:
          type: string
          format: binary
          example: photo.jpeg
    MessageCreateAtsMessageRequest:
      type: object
      required:
        - job_application_id
        - content
      properties:
        job_application_id:
          type: integer
          example: 1
        content:
          type: string
          example: Message 1
    TableCreateCustomTableRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Kudos
    TableCreateFieldRequest:
      type: object
      required:
        - id
      properties:
        id:
          description: The id of the custom table
          type: integer
          example: 86
        custom_field:
          type: object
          properties:
            id:
              type: integer
              example: 1
            label:
              type: string
              example: employee
            identifier:
              type: string
              example: label-1
            position:
              type: integer
              example: 90773647
            required:
              type: boolean
              example: false
            field_type:
              type: string
              example: text
            min_value:
              type: integer
              example: -439653
            max_value:
              type: integer
              example: 47114499
            slug_id:
              type: integer
              example: 47114499
            slug_name:
              type: string
              example: text
            choice_options:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                label:
                  type: string
                  example: Shirt Size
                value:
                  type: string
                  example: L
                is_active:
                  type: boolean
                  example: false
    EmployeeCreateCustomTableValueRequest:
      type: object
      required:
        - id
        - emloyee_id
      properties:
        id:
          description: The id of the custom table
          type: integer
          example: 86
        emloyee_id:
          description: >-
            The id of the employee whos custom value we are creating for custom
            resource
          type: integer
          example: 10
        table_values:
          type: array
          items:
            type: object
            required:
              - id
              - value
            properties:
              id:
                description: The id of the table custom field
                type: integer
                example: 1
              value:
                description: The value of the custom field
                type: string
                example: This is a custom value for a custom field
    WebhookCreateSubscriptionRequest:
      type: object
      required:
        - type
        - target_url
      properties:
        type:
          type: string
          example: employee_created
        target_url:
          type: string
          example: https://webhook.site/48103127-b1f6-3215-8f18-60fdbc013e3f
    CompensationCreateContractCompensationRequest:
      type: object
      required:
        - contract_version_id
      properties:
        description:
          type: string
          example: Meal 2
        contract_version_id:
          type: integer
          example: 2
        contracts_taxonomy_id:
          type: integer
          example: 2
        compensation_type:
          type: string
          example: fixed
          enum:
            - fixed
            - up_to
        amount:
          type: integer
          example: 2112
        unit:
          type: string
          example: money
          enum:
            - money
            - units
        sync_with_supplements:
          type: boolean
          example: true
        payroll_policy_id:
          type: integer
          example: 2
        recurrence_count:
          type: integer
          example: 2
        starts_on:
          type: string
          example: '2022-08-02'
        recurrence:
          type: string
          example: monthly
          enum:
            - monthly
            - every_2_months
            - every_3_months
            - every_4_months
            - every_5_months
            - every_6_months
            - every_7_months
            - every_8_months
            - every_9_months
            - every_10_months
            - every_11_months
            - every_12_months
        first_payment_on:
          type: string
          example: '2022-08-02'
        calculation:
          type: string
          example: current_period
          enum:
            - current_period
            - previous_period'
    CompensationUpdateForContractRequest:
      type: object
      properties:
        description:
          type: string
          example: Meal 2
        contracts_taxonomy_id:
          type: integer
          example: 2
        compensation_type:
          type: string
          example: fixed
          enum:
            - fixed
            - up_to
        amount:
          type: integer
          example: 2112
        unit:
          type: string
          example: money
          enum:
            - money
            - units
        sync_with_supplements:
          type: boolean
          example: true
        payroll_policy_id:
          type: integer
          example: 2
        recurrence_count:
          type: integer
          example: 2
        starts_on:
          type: string
          example: '2022-08-02'
        recurrence:
          type: string
          example: monthly
          enum:
            - monthly
            - every_2_months
            - every_3_months
            - every_4_months
            - every_5_months
            - every_6_months
            - every_7_months
            - every_8_months
            - every_9_months
            - every_10_months
            - every_11_months
            - every_12_months
        first_payment_on:
          type: string
          example: '2022-08-02'
        calculation:
          type: string
          example: current_period
          enum:
            - current_period
            - previous_period'
    WorkplaceCreateNewWorkplaceRequest:
      type: object
      required:
        - name
        - country
        - timezone
      properties:
        name:
          type: string
          example: First Workspace
        country:
          type: string
          example: es
        state:
          type: string
          example: CT
        city:
          type: string
          example: Barcelona
        address_line_1:
          type: string
          example: Swatch strasse 3
        address_line_2:
          type: string
          example: Atiquen terceren
        postal_code:
          type: string
          example: C1231
        phone_number:
          type: string
          example: '55555555'
        company_id:
          type: integer
          example: 2
        legal_entity_id:
          type: integer
          example: 2
        main:
          type: boolean
          example: true
        latitude:
          type: number
          format: float
          example: 41.39612
        longitude:
          type: number
          format: float
          example: 2.19123
        timezone:
          type: string
          example: etc/UTC
    WorkplaceUpdateWorkplaceByIdRequest:
      type: object
      properties:
        name:
          type: string
          example: First Workspace
        country:
          type: string
          example: es
        state:
          type: string
          example: CT
        city:
          type: string
          example: Barcelona
        address_line_1:
          type: string
          example: Swatch strasse 3
        address_line_2:
          type: string
          example: Atiquen terceren
        postal_code:
          type: string
          example: C1231
        phone_number:
          type: string
          example: '55555555'
        payroll_policy_id:
          type: integer
          example: 2
        main:
          type: boolean
          example: true
        timezone:
          type: string
          example: etc/UTC
    CustomFieldCreateFieldRequest:
      type: object
      required:
        - label
        - slug_name
        - field_type
        - required
        - visible
        - editable
      properties:
        label:
          type: string
          example: t shirt
        slug_name:
          type: string
          example: employees-questions
        field_type:
          type: string
          example: text
          enum:
            - text
            - long_text
            - number
            - single_choice
        min_value:
          type: integer
          example: 1
        max_value:
          type: integer
          example: 100
        required:
          type: boolean
          example: true
        editable:
          type: string
          example: text
          enum:
            - owned
            - reportees
            - team_leader
            - everybody
        visible:
          type: string
          example: text
          enum:
            - owned
            - reportees
            - team_leader
            - everybody
        choice_options:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
                example: red
              is_active:
                type: boolean
                example: true
    CustomFieldValueUpdateValueRequest:
      type: object
      required:
        - label
        - slug_name
        - field_type
        - required
        - visible
        - editable
      properties:
        value:
          type: string
          example: l
    EmployeeGetEmployeesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Employee'
    EmployeeGetAllEmployeesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Employee_v2'
    UserSubscribedWebhooksListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Webhook_v2'
    WebhookSubscriptionCreateResponse:
      type: array
      items:
        $ref: '#/components/schemas/Webhook_v2'
    LocationGetAllLocationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Location'
    HolidayGetAllCompanyHolidaysResponse:
      type: array
      items:
        $ref: '#/components/schemas/CompanyHoliday'
    TeamGetAllTeamsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Team'
    TeamGetByIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/Team'
    FolderGetByNameAndStatusResponse:
      type: array
      items:
        $ref: '#/components/schemas/Folder'
    FolderCreateNewFolderResponse:
      type: array
      items:
        $ref: '#/components/schemas/Folder'
    DocumentListGivenEmployeeOrFolderResponse:
      type: array
      items:
        $ref: '#/components/schemas/Document'
    LegalEntityListLegalEntitiesResponse:
      type: array
      items:
        $ref: '#/components/schemas/LegalEntity'
    KeyGetCollectionResponse:
      type: array
      items:
        $ref: '#/components/schemas/ApiKey'
    TaskGetAllTasksResponse:
      type: array
      items:
        $ref: '#/components/schemas/Task'
    ShiftGetFromCompanyResponse:
      type: array
      items:
        $ref: '#/components/schemas/Shift'
    AttendanceGetCompanyAttendanceResponse:
      type: array
      items:
        $ref: '#/components/schemas/Attendance'
    LeaveGetTypesResponse:
      type: array
      items:
        $ref: '#/components/schemas/LeaveType'
    LeaveGetCompanyLeavesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Leave'
    LeaveGetCompanyLeaves200Response:
      type: array
      items:
        $ref: '#/components/schemas/Leave_v2'
    EmployeeListFamilySituationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/FamilySituation'
    CustomFieldGetFieldsByGroupResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomField'
    PostListPostsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Post'
    PostCreateNewPostResponse:
      type: array
      items:
        $ref: '#/components/schemas/Post'
    PostUpdateExistingPostResponse:
      type: array
      items:
        $ref: '#/components/schemas/Post'
    PostGetAllPostingsResponse:
      type: array
      items:
        $ref: '#/components/schemas/AtsJobPosting'
    CandidateListAllCandidatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/AtsCandidate'
    ContractVersionGetAllVersionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ContractVersion'
    ContractGetAllReferenceContractsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ContractVersion'
    SupplementGetAllResponse:
      type: array
      items:
        $ref: '#/components/schemas/Supplement'
    IntegrationGetAllCodesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Code'
    EmployeeGetByPayrollIntegrationCodeResponse:
      type: array
      items:
        $ref: '#/components/schemas/Employee_v2'
    ShiftGetAllShiftsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ShiftManagement'
    EmployeeListBreakConfigurationsForDatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/BreakConfigurationsForDate'
    MessageGetAllMessagesResponse:
      type: array
      items:
        $ref: '#/components/schemas/AtsMessage'
    EmployeeGetBulkV2Response:
      type: array
      items:
        $ref: '#/components/schemas/Employee_v2'
    AttendanceGetBulkV2Response:
      type: array
      items:
        $ref: '#/components/schemas/Attendance'
    ContractVersionGetBulkVersionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ContractVersion'
    CustomTableGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomResource'
    TableGetFieldsResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomHeader'
    EmployeeGetCustomTableValuesResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomResourceValue'
    EventGetTriggeredEventsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    UserSubscribedWebhooksList200Response:
      type: array
      items:
        $ref: '#/components/schemas/Webhook'
    WebhookCreateSubscriptionResponse:
      type: array
      items:
        $ref: '#/components/schemas/Webhook'
    WebhookDeleteWebhookByIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/Webhook'
    PolicyGetTimeOffPoliciesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Policy'
    ExpenseGetCompanyExpensesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Expense'
    CompensationGetCompensationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Compensation'
    CompensationDeleteCompensationResponse:
      type: array
      items:
        $ref: '#/components/schemas/Compensation'
    TaxonomyGetCompanyTaxonomiesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Taxonomy'
    WorkplaceListAllWorkplacesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Workplace'
    WorkplaceRemoveWorkplaceResponse:
      type: array
      items:
        $ref: '#/components/schemas/Workplace'
    CustomFieldGetFieldsBySlugResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomField_v2'
    CustomFieldDeleteByIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomField_v2'
    CustomFieldValueGetBySlugNameResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomValue_v2'
security:
  - oauth2: []
x-readme:
  proxy-enabled: false
  explorer-enabled: true
_id: 6308963fa95be1003673e2ec
