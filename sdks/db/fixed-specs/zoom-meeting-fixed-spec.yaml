openapi: 3.0.0
info:
  title: Zoom Meeting API
  description: 'The Zoom Meeting APIs let developers to access information from Zoom. '
  version: '2'
  termsOfService: https://zoom.us/docs/en-us/zoom_api_license_and_tou.html
  contact:
    name: Zoom Developers
    url: https://developer.zoom.us/
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://api.zoom.us/v2
tags:
  - name: Webinars
  - name: Meetings
  - name: Reports
  - name: Cloud Recording
  - name: TSP
  - name: Devices
  - name: Archiving
  - name: Tracking Field
  - name: H323 Devices
  - name: SIP Phone
  - name: PAC
paths:
  /archive_files:
    get:
      tags:
        - Archiving
      summary: List archived files
      operationId: Archiving_meetingFilesList
      security:
        - openapi_oauth:
            - recording:read:admin
          openapi_authorization: []
      description: >-
        Get an account's archived meeting or webinar files. 

         Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA or other compliance requirements. 

         **Prerequisites:** 
        * The [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        enabled for your account by [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003).


        **Scopes:** `recording:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: >-
            The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
            and the `to` query parameter value cannot exceed seven days.
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-03-11T05:41:36Z'
        - description: >-
            The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
            and the `from` query parameter value cannot exceed seven days.
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-03-18T05:41:36Z'
        - description: |-
            The type of query date.
            * `meeting_start_time` 
            * `archive_complete_time` 

             This value defaults to `meeting_start_time`.
          name: query_date_type
          in: query
          required: false
          schema:
            type: string
            example: meeting_start_time
            default: meeting_start_time
            enum:
              - meeting_start_time
              - archive_complete_time
        - description: >-
            The group ID. To get a group ID, use the [List
            groups](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/groups)
            API.
          name: group_id
          in: query
          required: false
          schema:
            type: string
            example: pvFIYKSDTum9iCDOOtQL4w
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
             Archived files returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchivingMeetingFilesListResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request  

             **Error Code:** `2001` <br>
             Account does not exist: {accountId} <br>
      extensions:
        x-permissions:
          - Recording:Read
        x-macro-scopes:
          - recording:read:admin
  /archive_files/statistics:
    get:
      tags:
        - Archiving
      summary: Get archived file statistics
      operationId: Archiving_getStatistics
      security:
        - openapi_oauth:
            - recording:read:admin
          openapi_authorization: []
      description: >-
        Get statistics about an account's archived meeting or webinar files. 

         Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA and other compliance requirements. 

         **Prerequisites:** 
        * The [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        enabled for your account by [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003).


        **Scopes:** `recording:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            The query start date, `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
            and the `to` query parameter value cannot exceed seven days.
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-03-11T05:41:36Z'
        - description: >-
            The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
            and the `from` query parameter value cannot exceed seven days.
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-03-18T05:41:36Z'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
             The statistics of Archived files returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchivingGetStatisticsResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `2001` <br>
            Account does not exist: {accountId}

      extensions:
        x-macro-scopes:
          - recording:read:admin
  /archive_files/{fileId}:
    patch:
      tags:
        - Archiving
      summary: Update an archived file's auto-delete status
      operationId: Archiving_updateAutoDeleteStatus
      security:
        - openapi_oauth:
            - recording:write
            - recording:write:admin
          openapi_authorization: []
      description: >-
        Update an archived file's auto-delete status. 

         **Prerequisites:** 
        * [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003)
        must enable the [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        for your account.

        * Open the disabling auto-delete feature in OP. Contact [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003) to open.


        **Scopes:** `recording:write`,`recording:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - name: fileId
          in: path
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchivingUpdateAutoDeleteStatusRequest'
      responses:
        '204': {}
        '400':
          description: |-
            **HTTP Status Code:** `400` <br>
             Bad Request 

             
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
             Not Found 

             
      extensions:
        x-permissions:
          - Recording:Edit
        x-macro-scopes:
          - recording:write
          - recording:write:admin
  /past_meetings/{meetingUUID}/archive_files:
    get:
      tags:
        - Archiving
      summary: Get a meeting's archived files
      operationId: Archiving_meetingFilesList
      security:
        - openapi_oauth:
            - recording:read
          openapi_authorization: []
      description: >-
        Return a specific meeting instance's [archived
        files](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators). 

         **Prerequisites:** 
        * The [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        enabled for your account by [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003).


        **Scopes:** `recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: >-
            The meeting's universally unique identifier (UUID). Each meeting
            instance generates a UUID. After a meeting ends, a new UUID is
            generated for the next meeting instance.


            If the meeting UUID begins with a `/` character or contains a `//`
            character, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID when using the meeting UUID for other API calls.
          name: meetingUUID
          in: path
          required: true
          schema:
            type: string
            example: 4444AAAiAAAAAiAiAiiAii==
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   

             Meeting archived files returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchivingMeetingFilesList200Response'
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found  

             **Error Code:** `3001` <br>
             Meeting {meetingUUId} does not exist. <br> <br>
      extensions:
        x-permissions: []
        x-macro-scopes:
          - recording:read
    delete:
      tags:
        - Archiving
      summary: Delete a meeting's archived files
      operationId: Archiving_meetingFilesDelete
      security:
        - openapi_oauth:
            - recording:write:admin
            - recording:write
          openapi_authorization: []
      description: >-
        Use this API to delete all of a meeting's archived files. 

         **Prerequisites:** 
        * The [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        enabled for your account by [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003).


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            The meeting's universally unique identifier (UUID). Each meeting
            instance generates a UUID. For example, after a meeting ends, a new
            UUID is generated for the next meeting instance.


            If the meeting UUID begins with a `/` character or contains a `//`
            character, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID when using the meeting UUID for other API calls.
          name: meetingUUID
          in: path
          required: true
          schema:
            type: string
            example: 4444AAAiAAAAAiAiAiiAii==
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `200`   
             
             Meeting archived files returned.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            Only available for Paid account.

            **Error Code:** `200` <br>
            Not available for this account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `3001` <br>
            Meeting does not exist: {0}

      extensions:
        x-macro-scopes:
          - recording:write:admin
          - recording:write
  /meetings/{meetingId}/recordings:
    get:
      tags:
        - Cloud Recording
      summary: Get meeting recordings
      operationId: CloudRecording_getMeetingRecordings
      security:
        - openapi_oauth:
            - recording:read
            - phone_recording:read:admin
          openapi_authorization: []
      description: >-
        Returns all of a meeting's
        [recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_7420acb5-1897-4061-87b4-5b76e99c03b4).

         Use the `download_url` property listed in the response to download the recording files.  To access a passcode-protected cloud recording, send the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer token in the Authorization header. 
         
         Example:  `curl -H 'Authorization: Bearer <ACCESS_TOKEN>' https://{{base-domain}}/rec/archive/download/xyz`  

        **Scopes:** `recording:read`,`phone_recording:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: >-
            To get a meeting's cloud recordings, provide the meeting ID or UUID.
            If providing the meeting ID instead of UUID, the response will be
            for the latest meeting instance. 


            To get a webinar's cloud recordings, provide the webinar's ID or
            UUID. If providing the webinar ID instead of UUID, the response will
            be for the latest webinar instance. 


            If a UUID starts with `/` or contains `//` (example:
            `/ajXp112QmuoKj4854875==`), **[double
            encode](/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the UUID** before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
        - description: >-
            The `download_access_token` value for downloading the meeting's
            recordings.
          name: include_fields
          in: query
          required: false
          schema:
            type: string
            example: a2f19f96-9294-4f51-8134-6f0eea108eb2
        - description: >-
            The `download_access_token` Time to Live (TTL) value. This parameter
            is only valid if the `include_fields` query parameter contains the
            `download_access_token` value.
          name: ttl
          in: query
          required: false
          schema:
            maximum: 604800
            minimum: 0
            type: integer
            example: 1
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Recording object returned. 

            **Error Code:** `200`   
             
            You do not have the right permissions.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudRecordingGetMeetingRecordingsResponse
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request  

             **Error Code:** `1010` <br>
             User not found on this account: {accountId}. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found  

             **Error Code:** `1001` <br>
             User "{userId}" does not exist or does not belong to this account. <br>
            **Error Code:** `3301` <br>
             There is no recording for this meeting. <br>
      extensions:
        x-permissions: []
        x-macro-scopes:
          - recording:read
          - phone_recording:read:admin
    delete:
      tags:
        - Cloud Recording
      summary: Delete meeting recordings
      operationId: CloudRecording_deleteMeetingRecordings
      security:
        - openapi_oauth:
            - recording:write:admin
            - recording:write
          openapi_authorization: []
      description: >-
        Delete all recording files of a meeting.  
           
         

        **Prerequisites**:

        * Cloud Recording should be enabled on the user's account.  
         


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            To get Cloud Recordings of a meeting, provide the meeting ID or
            meeting UUID. If the meeting ID is provided instead of UUID,the
            response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
        - description: |-
            The recording delete actions:  
             `trash` - Move recording to trash.  
             `delete` - Delete recording permanently.
          name: action
          in: query
          required: false
          schema:
            type: string
            example: trash
            default: trash
            enum:
              - trash
              - delete
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Recordings deleted. 

            **Error Code:** `200`   
             
            You do not have the right permission.
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            Meeting recording deleted.
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}. <br/>


            **Error Code:** `3332` <br>

            This recording was selected for a simulive webinar. You cannot
            delete or trash it.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User {userId} does not exist or does not belong to this account.<br>

            **Error Code:** `3301` <br>
            There is no recording for this meeting.

      extensions:
        x-macro-scopes:
          - recording:write:admin
          - recording:write
  /meetings/{meetingId}/recordings/analytics_details:
    get:
      tags:
        - Cloud Recording
      summary: Get Meeting Recording's Analytics Details
      operationId: analytics_details
      security:
        - openapi_oauth:
            - recording:read:admin
            - recording:read
          openapi_authorization: []
      description: >-
        Use this API to return a meeting recording's [analytics
        details](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163).
        **Maximum duration: 1 Month**. To access a password-protected cloud
        recording, send the user's [OAuth access
        token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer
        token in the Authorization header. For example, 

         `curl -H &quot;Authorization: Bearer &lt;ACCESS_TOKEN&gt;&quot; https://{{base-domain}}/rec/archive/download/xyz` 

         

        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            To get Cloud Recordings of a meeting, provide the meeting ID or
            meeting UUID. If the meeting ID is provided instead of UUID,the
            response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: >-
            The start date for the monthly range to query. The maximum range can
            be a month. If you do not provide this value, this defaults to the
            current date.
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2020-06-30'
        - description: >-
            The end date for the monthly range to query. The maximum range can
            be a month.
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2020-07-30'
        - description: |-
            The type of analytics details: 
            * `by_view` &mdash; by_view. 
            * `by_download` &mdash; by_download.
          name: type
          in: query
          required: false
          schema:
            type: string
            example: by_view
            enum:
              - by_view
              - by_download
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Analytics Detail listed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsDetailsResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>
            User not found on this account: {accountId}

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User "{userId}" does not exist or does not belong to this account.

            **Error Code:** `3301` <br>
            There is no recording for this meeting.

      extensions:
        x-macro-scopes:
          - recording:read:admin
          - recording:read
  /meetings/{meetingId}/recordings/analytics_summary:
    get:
      tags:
        - Cloud Recording
      summary: Get Meeting Recording's Analytics Summary
      operationId: analytics_summary
      security:
        - openapi_oauth:
            - recording:read:admin
            - recording:read
          openapi_authorization: []
      description: >-
        Use this API to return a meeting recording's [analytics
        summary](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163).
        **Maximum duration: 1 Month**. To access a password-protected cloud
        recording, send the user's [OAuth access
        token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer
        token in the Authorization header. For example, 

         `curl -H &quot;Authorization: Bearer &lt;ACCESS_TOKEN&gt;&quot; https://{{base-domain}}/rec/archive/download/xyz` 

         

        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            To get Cloud Recordings of a meeting, provide the meeting ID or
            meeting UUID. If the meeting ID is provided instead of UUID,the
            response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
        - description: >-
            The start date for the monthly range to query. The maximum range can
            be a month. If you do not provide this value, this defaults to the
            current date.
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2020-06-30'
        - description: >-
            The end date for the monthly range to query. The maximum range can
            be a month.
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2020-07-30'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Analytics Summary listed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsSummaryResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>
            User not found on this account: {accountId}

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User "{userId}" does not exist or does not belong to this account.

            **Error Code:** `3301` <br>
            There is no recording for this meeting.

      extensions:
        x-macro-scopes:
          - recording:read:admin
          - recording:read
  /meetings/{meetingId}/recordings/registrants:
    get:
      tags:
        - Cloud Recording
      summary: List recording registrants
      operationId: CloudRecording_listRegistrants
      security:
        - openapi_oauth:
            - recording:read:admin
            - recording:read
          openapi_authorization: []
      description: >-
        Use this API to list registrants of a past meeting's [on-demand cloud
        recordings](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-recordings).
        Users must
        [register](/docs/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate)
        to view the recordings. 

         

        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: |-
            Query by the registrant's status: 
            * `pending` &mdash; The registration is pending. 
            * `approved` &mdash; The registrant is approved. 
            * `denied` &mdash; The registration is denied.
          name: status
          in: query
          required: false
          schema:
            type: string
            example: pending
            default: approved
            enum:
              - pending
              - approved
              - denied
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          name: page_number
          in: query
          required: false
          schema:
            type: integer
            example: 1
            default: 1
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
             Registrants returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudRecordingListRegistrantsResponse'
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - recording:read:admin
          - recording:read
    post:
      tags:
        - Cloud Recording
      summary: Create a recording registrant
      operationId: CloudRecording_createRegistrant
      security:
        - openapi_oauth:
            - recording:write:admin
            - recording:write
          openapi_authorization: []
      description: >-
        Cloud Recordings of past Zoom Meetings can be made
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings).
        Users should be
        [registered](/docs/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate)
        to view these recordings.


        Use this API to register a user to gain access to **On-demand Cloud
        Recordings** of a past meeting.  
         


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudRecordingCreateRegistrantRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Registration submitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudRecordingCreateRegistrantResponse'
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - recording:write:admin
          - recording:write
  /meetings/{meetingId}/recordings/registrants/questions:
    get:
      tags:
        - Cloud Recording
      summary: Get registration questions
      operationId: CloudRecording_listRegistrationQuestions
      security:
        - openapi_oauth:
            - recording:read:admin
            - recording:read
          openapi_authorization: []
      description: >-
        For
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
        meeting recordings, you can include fields with questions that will be
        shown to registrants when they register to view the recording.


        Use this API to retrieve a list of questions that are displayed for
        users to complete when registering to view the recording of a specific
        meeting.  
         


        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            To get Cloud Recordings of a meeting, provide the meeting ID or
            meeting UUID. If the meeting ID is provided instead of UUID,the
            response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Recording Registrant Question object returned.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudRecordingListRegistrationQuestionsResponse
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - recording:read:admin
          - recording:read
    patch:
      tags:
        - Cloud Recording
      summary: Update registration questions
      operationId: CloudRecording_updateRegistrationQuestions
      security:
        - openapi_oauth:
            - recording:write:admin
            - recording:write
          openapi_authorization: []
      description: >-
        For
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
        meeting recordings, you can include fields with questions that will be
        shown to registrants when they register to view the recording.


        Use this API to update registration questions that are to be answered by
        users while registering to view a recording.  
         


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            To get Cloud Recordings of a meeting, provide the meeting ID or
            meeting UUID. If the meeting ID is provided instead of UUID,the
            response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
      requestBody:
        description: Recording Registrant Questions
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudRecordingUpdateRegistrationQuestionsRequest
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `200`  
             
            Recording Registrant Questions Updated
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - recording:write:admin
          - recording:write
  /meetings/{meetingId}/recordings/registrants/status:
    put:
      tags:
        - Cloud Recording
      summary: Update registrant's status
      operationId: CloudRecording_updateRegistrantStatus
      security:
        - openapi_oauth:
            - recording:write:admin
            - recording:write
          openapi_authorization: []
      description: >-
        A registrant can either be approved or denied from viewing the
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
        recording. 

        Use this API to update a registrant's status.




        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudRecordingUpdateRegistrantStatusRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Registrant status updated.
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - recording:write:admin
          - recording:write
  /meetings/{meetingId}/recordings/settings:
    get:
      tags:
        - Cloud Recording
      summary: Get meeting recording settings
      operationId: CloudRecording_getSettings
      security:
        - openapi_oauth:
            - recording:read:admin
            - recording:read
          openapi_authorization: []
      description: >-
        Retrieves settings applied to a meeting's [Cloud
        Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  
           
         


        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: >-
            The meeting ID enables you to get cloud recording of a:

            - Meeting, provide the meeting ID or meeting UUID. If the meeting ID
            is provided instead of UUID,the response will be for the latest
            meeting instance. 


            - Webinar, provide the webinar ID or the webinar UUID. If the
            webinar ID is provided instead of UUID,the response will be for the
            latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **double
            encode** the UUID before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
      responses:
        '200':
          description: '**HTTP Status Code:** `200`    Meeting recording settings returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudRecordingGetSettingsResponse'
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
             Not Found 

             
      extensions:
        x-permissions: []
        x-macro-scopes:
          - recording:read:admin
          - recording:read
    patch:
      tags:
        - Cloud Recording
      summary: Update meeting recording settings
      operationId: CloudRecording_updateSettings
      security:
        - openapi_oauth:
            - recording:write
            - recording:write:admin
          openapi_authorization: []
      description: >-
        Updates settings applied to a meeting's [Cloud
        Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).      


        **Scopes:** `recording:write`,`recording:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: >-
            To get Cloud Recordings of a meeting, provide the meeting ID or
            meeting UUID. If the meeting ID is provided instead of UUID,the
            response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **double
            encode** the UUID before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudRecordingUpdateSettingsRequest'
      responses:
        '204':
          description: '**HTTP Status Code:** `204`    Meeting recording setting''s updated.'
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
             Not Found 

             
      extensions:
        x-permissions: []
        x-macro-scopes:
          - recording:write
          - recording:write:admin
  /meetings/{meetingId}/recordings/{recordingId}:
    delete:
      tags:
        - Cloud Recording
      summary: Delete a meeting recording file
      operationId: CloudRecording_deleteRecording
      security:
        - openapi_oauth:
            - recording:write:admin
            - recording:write
          openapi_authorization: []
      description: >-
        Delete a specific recording file from a meeting.&lt;p
        style=&quot;background-color:#e1f5fe; color:#01579b;
        padding:8px&quot;&gt; &lt;b&gt;Note:&lt;/b&gt; To use this API, you must
        enable the &lt;b&gt;The host can delete cloud recordings&lt;/b&gt;
        setting. You can find this setting in the &lt;b&gt;Recording&lt;/b&gt;
        tab of the &lt;b&gt;Settings&lt;/b&gt; interface in the [Zoom web
        portal](https://zoom.us/).&lt;/p&gt;




        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            To get Cloud Recordings of a meeting, provide the meeting ID or
            meeting UUID. If the meeting ID is provided instead of UUID,the
            response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
        - description: The recording ID.
          name: recordingId
          in: path
          required: true
          schema:
            type: string
            example: a2f19f96-9294-4f51-8134-6f0eea108eb2
        - description: |-
            The recording delete actions:  
             `trash` - Move recording to trash.  
             `delete` - Delete recording permanently.
          name: action
          in: query
          required: false
          schema:
            type: string
            example: trash
            default: trash
            enum:
              - trash
              - delete
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Recording deleted. 

            **Error Code:** `200`  
             
            You do not have the right permissions.
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            Meeting recording file deleted.
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}.<br>


            **Error Code:** `3303` <br>

            You can not delete an uncompleted meeting. <br/>


            **Error Code:** `3332` <br>

            This recording was selected for a simulive webinar. You cannot
            delete or trash it. <br>


            **Error Code:** `3332` <br>

            Unable to delete this file because this recording is being used for
            Zoom IQ for Sales.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User {userId} does not exist or does not belong to this account.<br>

            **Error Code:** `3301` <br>
            There is no recording for this meeting.

      extensions:
        x-macro-scopes:
          - recording:write:admin
          - recording:write
  /meetings/{meetingId}/recordings/{recordingId}/status:
    put:
      tags:
        - Cloud Recording
      summary: Recover a single recording
      operationId: CloudRecording_recoverStatus
      security:
        - openapi_oauth:
            - recording:write:admin
            - recording:write
          openapi_authorization: []
      description: >-
        Zoom allows users to recover recordings from trash for up to 30 days
        from the deletion date. Use this API to recover a single recording file
        from the meeting.  
         


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            To get Cloud Recordings of a meeting, provide the meeting ID or
            meeting UUID. If the meeting ID is provided instead of UUID,the
            response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: atsXxhSEQWit9t+U02HXNQ==
        - description: The recording ID.
          name: recordingId
          in: path
          required: true
          schema:
            type: string
            example: a2f19f96-9294-4f51-8134-6f0eea108eb2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudRecordingRecoverStatusRequest'
      responses:
        '204':
          description: |+
            **HTTP Status Code:** `204`   
              Meeting recording recovered.

        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}.


            **Error Code:** `3309` <br>

            Not enough cloud storage available. Either purchase additional
            storage or delete cloud recordings to free up storage.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User {userId} does not exist or does not belong to this account.<br>

            **Error Code:** `3301` <br>
            There is no recording for this meeting.

      extensions:
        x-macro-scopes:
          - recording:write:admin
          - recording:write
  /meetings/{meetingUUID}/recordings/status:
    put:
      tags:
        - Cloud Recording
      summary: Recover meeting recordings
      operationId: CloudRecording_recoverRecordingStatus
      security:
        - openapi_oauth:
            - recording:write:admin
            - recording:write
          openapi_authorization: []
      description: >-
        Zoom allows users to recover recordings from trash for up to 30 days
        from the deletion date. Use this API to recover all deleted [Cloud
        Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)
        of a specific meeting.  
           
         
        **Prerequisites**:  
         
        * A Pro user with Cloud Recording enabled.


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            The meeting's universally unique identifier (UUID). Each meeting
            instance generates a UUID. For example, after a meeting ends, a new
            UUID is generated for the next meeting instance.


            If the meeting UUID begins with a `/` character or contains a `//`
            character, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID when using the meeting UUID for other API calls.
          name: meetingUUID
          in: path
          required: true
          schema:
            type: string
            example: 4444AAAiAAAAAiAiAiiAii==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudRecordingRecoverRecordingStatusRequest'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Recordings recovered. 

            **Error Code:** `200`  
             
            You do not have the right permissions.
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            Deleted recordings of the meeting recovered.
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}.


            **Error Code:** `3309` <br>

            Not enough cloud storage available. Either purchase additional
            storage or delete cloud recordings to free up storage.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User does not exist: {userId}.<br>

            **Error Code:** `3301` <br>
            There is no recording for this meeting.

      extensions:
        x-macro-scopes:
          - recording:write:admin
          - recording:write
  /users/{userId}/recordings:
    get:
      tags:
        - Cloud Recording
      summary: List all recordings
      operationId: CloudRecording_listRecordings
      security:
        - openapi_oauth:
            - recording:read:admin
            - recording:read
          openapi_authorization: []
      description: >-
        Lists all [cloud
        recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)
        for a user.  


        For user-level apps, pass the [`me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter.  To access a user's passcode
        protected cloud recording, send the user's [OAuth access
        token](https://developers.zoom.us/docs/integrations/oauth/) as a bearer
        token in the authorization header.  


        Example:  `curl -H "Authorization: Bearer <ACCESS_TOKEN>"
        https://{{base-domain}}/rec/archive/download/xyz`  


        **Prerequisites:**  

        * Must have a Pro or a higher plan.  

        * Must enable Cloud Recording on the user's account.


        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: >-
            The user's ID or email address. For user-level apps, pass the `me`
            value.
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            The next page token paginates through a large set of results. A next
            page token returns whenever the set of available results exceeds the
            current page size. The expiration period for this token is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: >-
            The query metadata of the recording if using an on-premise meeting
            connector for the meeting.
          name: mc
          in: query
          required: false
          schema:
            type: string
            example: 'false'
            default: 'false'
        - description: >-
            The query trash.

            * `true` - List recordings from trash.  

            * `false` - Do not list recordings from the trash.  


            The default value is `false`. If you set it to `true`, you can use
            the `trash_type` property to indicate the type of Cloud recording
            that you need to retrieve. 
          name: trash
          in: query
          required: false
          schema:
            type: boolean
            example: false
            default: false
        - description: >-
            The start date in 'yyyy-mm-dd' UTC format for the date range where
            you would like to retrieve recordings. The maximum range can be a
            month. If no value is provided for this field, the default will be
            current date. 


            For example, if you make the API request on June 30, 2020, without
            providing the `from` and `to` parameters, by default the value of
            'from' field will be `2020-06-30` and the value of the 'to' field
            will be `2020-07-01`. 


            **Note**: The `trash` files cannot be filtered by date range and
            thus, the `from` and `to` fields should not be used for trash files.
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2020-06-30'
        - description: 'The end date in ''yyyy-mm-dd'' ''yyyy-mm-dd'' UTC format. '
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2020-06-30'
        - description: |-
            The type of cloud recording to retrieve from the trash. 
             
             *   `meeting_recordings`: List all meeting recordings from the trash.  
             *  `recording_file`: List all individual recording files from the trash. 
          name: trash_type
          in: query
          required: false
          schema:
            type: string
            example: meeting_recordings
            default: meeting_recordings
        - description: The meeting ID.
          name: meeting_id
          in: query
          required: false
          schema:
            type: integer
            example: 6840331990
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            List of recording objects returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudRecordingListRecordingsResponse'
        '401':
          description: |
            **HTTP Status Code:** `401` <br>
             Unauthorized  

             **Error Code:** `124` <br>
             Requires an access token. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found  

             **Error Code:** `1001` <br>
             User {userId} does not exist, or does not belong to this account. <br>
            **Error Code:** `3301` <br>
             There is no recording for this session. <br>
      extensions:
        x-permissions:
          - Recording:Read
        x-macro-scopes:
          - recording:read:admin
          - recording:read
        x-granular-scopes:
          - user:read:list_recordings
          - user:read:list_recordings:admin
          - user:read:list_recordings:master
  /devices:
    get:
      tags:
        - Devices
      summary: List devices
      operationId: Devices_list
      security:
        - openapi_oauth:
            - device:read:admin
            - device:write:admin
          openapi_authorization: []
      description: >-
        This API lets you list devices. 




        **Scopes:** `device:read:admin`,`device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      parameters:
        - description: Filter devices by name or serial number.
          name: search_text
          in: query
          required: false
          schema:
            type: string
            example: poly
        - description: Filter devices by platform operating system.
          name: platform_os
          in: query
          required: false
          schema:
            type: string
            example: win
            enum:
              - win
              - mac
              - ipad
              - iphone
              - android
              - linux
        - description: Filter devices by enrollment of ZDM (Zoom Device Management).
          name: is_enrolled_in_zdm
          in: query
          required: false
          schema:
            type: boolean
            example: true
            default: true
        - description: |-
            Filter devices by device type.  
              Device Type:  
             `-1` - All Zoom Room device(0,1,2,3,4,6).  
             `0` - Zoom Rooms Computer.  
             `1` - Zoom Rooms Controller.  
             `2` - Zoom Rooms Scheduling Display.  
             `3` - Zoom Rooms Control System.  
             `4` -  Zoom Rooms Whiteboard.  
             `5` - Zoom Phone Appliance.  
             `6` - Zoom Rooms Computer (with Controller).
          name: device_type
          in: query
          required: false
          schema:
            type: integer
            example: 0
            default: -1
            enum:
              - -1
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
        - description: Filter devices by vendor.
          name: device_vendor
          in: query
          required: false
          schema:
            type: string
            example: poly
        - description: Filter devices by model.
          name: device_model
          in: query
          required: false
          schema:
            type: string
            example: ep5
        - description: |-
            Filter devices by status.   
              Device Status:  
             `0` - offline.  
             `1` - online.  
             `-1` - unlink
          name: device_status
          in: query
          required: false
          schema:
            type: integer
            example: 0
            default: -1
            enum:
              - -1
              - 0
              - 1
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**  
             
            Device detail returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicesListResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `30055008` <br>
            no permission.

      extensions:
        x-permissions:
          - ZoomRooms:Read
          - ZoomRooms:Edit
        x-macro-scopes:
          - device:read:admin
          - device:write:admin
    post:
      tags:
        - Devices
      summary: Add new device
      operationId: Devices_createNewDevice
      security:
        - openapi_oauth:
            - device:write:admin
          openapi_authorization: []
      description: >-
        This Device API lets you add a new device to Zoom Account. 


        **Scope:** `device:write:admin`   
         
         **[Rate Limit Label](https://developers.zoom.us/docs/api/rest/rate-limits/):** `Medium`

        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicesCreateNewDeviceRequest'
      responses:
        '202':
          description: |-
            **HTTP Status:** `202` **Accepted**
            Request processed successfully.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `30055001` <br>
            zoom room does not exist. 

            **Error Code:** `30055002` <br>
            required param can not be empty or null.

            **Error Code:** `30055003` <br>
            device type does not support.

            **Error Code:** `30055004` <br>
            model or vendor not exist.

            **Error Code:** `30055005` <br>
            tag length can not be more than 64.

            **Error Code:** `30055006` <br>
            device has already exist.

            **Error Code:** `30055007` <br>
            invalid mac address.

            **Error Code:** `30055008` <br>
            no permission.

            **Error Code:** `30055009` <br>
            email does not have plan.

      extensions:
        x-permissions:
          - ZoomRooms:Edit
        x-macro-scopes:
          - device:write:admin
  /devices/{deviceId}:
    get:
      tags:
        - Devices
      summary: Get device detail
      operationId: Devices_getDetail
      security:
        - openapi_oauth:
            - device:read:admin
            - device:write:admin
          openapi_authorization: []
      description: >-
        Retrieve a device's details.


        **Scopes:** `device:read:admin`,`device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      parameters:
        - description: The device's unique identifier.
          name: deviceId
          in: path
          required: true
          schema:
            type: string
            example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK** 
             
            Device detail returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicesGetDetailResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `30055008` <br>
             No permission. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `30055012` <br>
             No found unified deviceId. <br>
      extensions:
        x-permissions:
          - ZoomRooms:Read
          - ZoomRooms:Edit
        x-macro-scopes:
          - device:read:admin
          - device:write:admin
    delete:
      tags:
        - Devices
      summary: Delete device
      operationId: Devices_removeDeviceZMD
      security:
        - openapi_oauth:
            - device:write:admin
          openapi_authorization: []
      description: >-
        Delete a device from a Zoom account. 


        **Prerequisites:**

        * Device must be enrolled in ZMD (Zoom Device Management)


        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      parameters:
        - description: Unique identifier of the device.
          name: deviceId
          in: path
          required: true
          schema:
            type: string
            example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
      responses:
        '204':
          description: >-
            **HTTP Status Code:** `204` **No Content** Device deleted
            successfully.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `30055008` <br>
             no permission. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `30055012` <br>
             no found unified deviceId. <br>
      extensions:
        x-permissions:
          - MobileDeviceManagement:Edit
        x-macro-scopes:
          - device:write:admin
    patch:
      tags:
        - Devices
      summary: 'Change device '
      operationId: Devices_updateDeviceName
      security:
        - openapi_oauth:
            - device:write:admin
          openapi_authorization: []
      description: >-
        Change device name. 


        **Prerequisites:**

        * Device must be enrolled in ZMD (Zoom Device Management)


        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: Unique identifier of the device.
          name: deviceId
          in: path
          required: true
          schema:
            type: string
            example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicesUpdateDeviceNameRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content** 
             
            Request processed successfully.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `30055001` <br>
             zoom room does not exist. . <br>
            **Error Code:** `30055002` <br>
             required param can not be empty or null. <br>
            **Error Code:** `30055003` <br>
             device type does not support. <br>
            **Error Code:** `30055011` <br>
             device is not enrolled. <br>
            **Error Code:** `30055013` <br>
             device not support this app. <br>
            **Error Code:** `30055014` <br>
             room not support this app. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `30055012` <br>
             Device does not exist: {deviceId}. <br>
      extensions:
        x-permissions:
          - ZoomRooms:Edit
        x-macro-scopes:
          - device:write:admin
  /devices/{deviceId}/assignment:
    patch:
      tags:
        - Devices
      summary: Change device association
      operationId: Devices_changeDeviceAssociation
      security:
        - openapi_oauth:
            - device:write:admin
          openapi_authorization: []
      description: >-
        This Device API lets you change device association from one Zoom Room to
        another. 


        **Prerequisites:**

        * Device must be enrolled in ZMD (Zoom Device Management) 




        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: Unique identifier of the device.
          name: deviceId
          in: path
          required: true
          schema:
            type: string
            example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicesChangeDeviceAssociationRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**  
             
            Request processed successfully.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `8500` <br>
            Device not enrolled in Zoom Device Management.

            **Error Code:** `8501` <br>
            Device does not support this app.

            **Error Code:** `8502` <br>
            Room does not support this app.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1012` <br>
            Room does not exist: {roomId}.

            **Error Code:** `8503` <br>
            Device does not exist: {deviceId}.

      extensions:
        x-macro-scopes:
          - device:write:admin
  /h323/devices:
    get:
      tags:
        - H323 Devices
      summary: List H.323/SIP devices
      operationId: H323Devices_listDevices
      security:
        - openapi_oauth:
            - h323:read:admin
          openapi_authorization: []
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to list
        all H.323/SIP Devices on a Zoom account.  
           
         


        **Scopes:** `h323:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          name: page_number
          in: query
          required: false
          schema:
            type: integer
            example: 1
            default: 1
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            List of H.323/SIP devices returned.  
             
            **Error Code:** `200`  
             
            No permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H323DevicesListDevicesResponse'
      extensions:
        x-macro-scopes:
          - h323:read:admin
    post:
      tags:
        - H323 Devices
      summary: Create a H.323/SIP device
      operationId: H323Devices_createDevice
      security:
        - openapi_oauth:
            - h323:write:admin
          openapi_authorization: []
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to add a
        H.323/SIP device to your Zoom account  
           
         


        **Scopes:** `h323:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        description: H.323/SIP device.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/H323DevicesCreateDeviceRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`  
             
            H.323/SIP device created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H323DevicesCreateDeviceResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            No permission.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `2020` <br>
            H.323 device's display name:{displayName} is already in use.

      extensions:
        x-macro-scopes:
          - h323:write:admin
  /h323/devices/{deviceId}:
    delete:
      tags:
        - H323 Devices
      summary: Delete a H.323/SIP device
      operationId: H323Devices_deleteDevice
      security:
        - openapi_oauth:
            - h323:write:admin
          openapi_authorization: []
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to delete
        a H.323/SIP device from your Zoom account.  
           
         


        **Scopes:** `h323:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The device ID.
          name: deviceId
          in: path
          required: true
          schema:
            type: string
            example: abceHewahkrehwiK
      responses:
        '200':
          description: You do not have the permission to delete this device.
        '204':
          description: H.323/SIP device deleted.
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - h323:write:admin
    patch:
      tags:
        - H323 Devices
      summary: Update a H.323/SIP device
      operationId: H323Devices_updateDeviceInfo
      security:
        - openapi_oauth:
            - h323:write:admin
          openapi_authorization: []
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to edit
        information of a H.323/SIP device from your Zoom account.  
           
         


        **Scopes:** `h323:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The device ID.
          name: deviceId
          in: path
          required: true
          schema:
            type: string
            example: abceHewahkrehwiK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/H323DevicesUpdateDeviceInfoRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            H.323/SIP device updated.
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `2020` <br>
            H.323 device's display name:{displayName} is already in use.

      extensions:
        x-macro-scopes:
          - h323:write:admin
  /live_meetings/{meetingId}/chat/messages/{messageId}:
    delete:
      tags:
        - Meetings
      summary: Delete a live meeting message
      operationId: Meetings_deleteMeetingChatMessage
      security:
        - openapi_oauth:
            - meeting:write
            - meeting:write:admin
          openapi_authorization: []
      description: >-
        Delete a message in a live meeting, based on ID. 


        **Prerequisites:** 

        * Have Zoom enable the DLP for the in-meeting chat feature to use this
        API.


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: >-
            The live meeting chat message's unique identifier (UUID), in
            base64-encoded format.
          name: messageId
          in: path
          required: true
          schema:
            type: string
            example: MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==
        - description: >-
            The live webinar chat file's universally unique identifier (UUID),
            in base64-encoded format. Separate multiple values with commas.
          name: file_ids
          in: query
          required: false
          schema:
            type: string
            example: >-
              MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==,MS17NDQ0OEU5MjMtM0JFOS1CMDA1LTQ0NDAtQjdGOTU0Rjk5MTkyfQ==
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            Meeting chat message deleted.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `200` <br>
             * Only available for Paid accounts. 
            * DLP is not enabled. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Meeting {meetingId} does not exist. <br>
      extensions:
        x-permissions: []
        x-macro-scopes:
          - meeting:write
          - meeting:write:admin
    patch:
      tags:
        - Meetings
      summary: Update a live meeting message
      operationId: Meetings_updateMessage
      security:
        - openapi_oauth:
            - meeting:write
            - meeting:write:admin
          openapi_authorization: []
      description: >-
        Update a message in a live meeting, based on ID. **Prerequisites:** *
        Have Zoom enable the DLP for the in-meeting chat feature to use this
        API.


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: >-
            The live meeting chat message's unique identifier (UUID), in
            base64-encoded format.
          name: messageId
          in: path
          required: true
          schema:
            type: string
            example: MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsUpdateMessageRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
             Meeting chat message updated.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             DLP is not enabled on this account <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Meeting {meetingId} does not exist. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - meeting:write
          - meeting:write:admin
  /live_meetings/{meetingId}/events:
    patch:
      tags:
        - Meetings
      summary: Use in-meeting controls
      operationId: Meetings_controlInMeetingFeatures
      security:
        - openapi_oauth:
            - meeting:write
            - meeting:write:admin
            - meeting:master
          openapi_authorization: []
      description: >-
        Control
        [in-meeting](https://support.zoom.us/hc/en-us/articles/360021921032-In-Meeting-Controls)
        features. In-meeting controls include starting and stopping a recording,
        pausing and resuming a recording, and inviting participants. 


        **Note:** This API's recording control only works for cloud recordings.
        It does **not** work for local recordings. 


        **Prerequisites:**

        * The meeting **must** be a live meeting **except** inviting
        participants to the meeting through [call out (phone)/(room system)]. 

        * Recording control: [Cloud
        recording](https://support.zoom.us/hc/en-us/articles/360060231472-Enabling-cloud-recording)
        must be enabled on the account. 

        * The user calling this API must be the host or an alternative meeting
        host.

         

        **Scopes:** `meeting:write`,`meeting:write:admin`,`meeting:master`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: The live meeting's ID.
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: '93398114182'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsControlInMeetingFeaturesRequest'
      responses:
        '202':
          description: |-
            **HTTP Status:** `202` **Accepted**
            Request processed successfully.
        '400':
          description: >
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             * Meeting id does not exist.<br>
            * Invalid meeting id.<br>

            * Meeting does not exist.<br>

            * No permission.<br>

            * This API is not available for this account, please contact Zoom
            support. <br>

            **Error Code:** `3309` <br>
             Not enough cloud storage available. Either purchase additional storage or delete cloud recordings to free up storage. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Meeting {meetingId} is not found or has expired. <br>
        '429':
          description: |-
            **HTTP Status Code:** `429` <br>
             undefined 

             
      extensions:
        x-macro-scopes:
          - meeting:write
          - meeting:write:admin
          - meeting:master
  /meetings/meeting_summaries:
    get:
      tags:
        - Meetings
      summary: List meeting summaries of an account
      operationId: Meetings_listMeetingSummaries
      security:
        - openapi_oauth:
            - meeting_summary:read:admin
          openapi_authorization: []
      description: >-
        Generates a list of all meeting summaries for an account.


        **Prerequisites**

        * Host user type must be Pro or higher plan.

        * The Meeting Summary with AI Companion feature enabled in the host's
        account.

        * E2ee meetings do not have summary feature enabled.


        **Scopes:** `meeting_summary:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            The next page token paginates through a large set of results. A next
            page token returns whenever the set of available results exceeds the
            current page size. The expiration period for this token is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: >-
            The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to
            retrieve the creation date range of the meeting summaries.
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '2023-10-19T07:00:00Z'
        - description: >-
            The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to
            retrieve the creation date range of the meeting summaries.
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '2023-10-20T07:00:00Z'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`

            Successfully listed meeting summaries of an account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsListMeetingSummariesResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
            **Error Code:** `3000` <br>
             Meeting summary disabled. To enable this feature, enable the "Meeting Summary with AI Companion" setting in the Zoom web portal's "Settings" interface. <br>
        '401':
          description: |
            **HTTP Status Code:** `401` <br>
             Unauthorized 

             **Error Code:** `1001` <br>
             User {userId} not exist or not belong to this account. <br>
      extensions:
        x-permissions:
          - SmartMeetingSummaryMgt:Read
        x-macro-scopes:
          - meeting_summary:read:admin
        x-granular-scopes:
          - meeting:read:list_summaries:admin
  /meetings/{meetingId}:
    get:
      tags:
        - Meetings
      summary: Get a meeting
      operationId: Meetings_getDetails
      security:
        - openapi_oauth:
            - meeting:read
            - meeting:read:admin
          openapi_authorization: []
      description: >-
        Retrieve the given meeting's details. 
         
         


        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be more than 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: >-
            Meeting occurrence ID. Provide this field to view meeting details of
            a particular occurrence of the [recurring
            meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
        - description: >-
            Set this field's value to `true` to view meeting details of all
            previous occurrences of a [recurring
            meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). 
          name: show_previous_occurrences
          in: query
          required: false
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Meeting object returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetDetailsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User not found on this account: {accountId}.<br> <br>
            **Error Code:** `3000` <br>
             Cannot access webinar info. <br>
            **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User not exist: {userId}.<br> <br>
            **Error Code:** `3001` <br>
             Meeting {meetingId} is not found or has expired. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - meeting:read
          - meeting:read:admin
        x-granular-scopes:
          - meeting:read:meeting
          - meeting:read:meeting:admin
    delete:
      tags:
        - Meetings
      summary: Delete a meeting
      operationId: Meetings_removeMeeting
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Delete a meeting.  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: The meeting or webinar occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
        - description: >-
            `true`: Notify host and alternative host about the meeting
            cancellation via email.

            `false`: Do not send any email notification.
          name: schedule_for_reminder
          in: query
          required: false
          schema:
            type: boolean
            example: true
        - description: >-
            `true`: Notify registrants about the meeting cancellation via
            email. 


            `false`: Do not send any email notification to meeting registrants. 


            The default value of this field is `false`.
          name: cancel_meeting_reminder
          in: query
          required: false
          schema:
            type: boolean
            example: true
      responses:
        '204':
          description: |-
            **HTTP Status Code**: `204`   
             
            Meeting deleted.
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}.<br>


            **Error Code:** `3000` <br>

            Cannot access meeting information.<br>Invalid occurrence_id.<br>


            **Error Code:** `3002` <br>

            Sorry, you cannot delete this meeting since it is in progress.<br>


            **Error Code:** `3003` <br>

            You are not the meeting host.<br>


            **Error Code:** `3007` <br>

            Sorry, you cannot delete this meeting since it has ended.<br>


            **Error Code:** `3018` <br>

            Not allowed to delete PMI.<br>


            **Error Code:** `3037` <br>

            Not allowed to delete PAC.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User does not exist: {userId}.<br>

            **Error Code:** `3001` <br>
            Meeting with this {meetingId} is not found or has expired.

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
    patch:
      tags:
        - Meetings
      summary: Update a meeting
      operationId: Meetings_updateDetails
      security:
        - openapi_oauth:
            - meeting:write
            - meeting:write:admin
          openapi_authorization: []
      description: >-
        Update meeting details.


        **Note** 

        * This API has a rate limit of **100 requests per day**. You can update
        a meeting for a maximum of **100 times within a 24-hour period**. 

        * The `start_time` value **must** be a future date. If the value is
        omitted or a date in the past, the API ignores this value and does
        **not** update any recurring meetings. 

        * The `recurrence` object is **required**.




        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be greater than 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: >-
            Meeting occurrence ID. Support change of agenda, `start_time`,
            duration, or settings {`host_video`, `participant_video`,
            `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`,
            `auto_recording`}.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
      requestBody:
        description: Meeting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsUpdateDetailsRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Meeting updated.
        '400':
          description: >
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User not found on this account: {accountId} <br>
            **Error Code:** `3000` <br>
             Cannot access meeting information. <br>
            **Error Code:** `3003` <br>
             You are not the meeting host. <br>
            **Error Code:** `3000` <br>
             * Instant meetings do not support the "schedule_for" parameter. You cannot schedule an instant meeting for another user. 
            * Users in "{0}" have been blocked from joining meetings and
            webinars. To unblock them, go to the "Settings" page in the Zoom web
            portal and update the "Block users in specific domains from joining
            meetings and webinars" setting. 

            * Prescheduling is only available for scheduled meetings (type 2)
            and recurring meetings with no fixed time (type 3). 

            * You cannot schedule a meeting for "{0}". 

            * You cannot update or delete meetings that have started using this
            method. 

            * Unable to schedule for a user outside of your account for a
            meeting with continuous chat. <br>

            **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
            **Error Code:** `300` <br>
             * The value that you entered for the schedule_for field is invalid. Enter a valid value and try again. <br> 
            * Invalid enforce_login_domains, separate multiple domains by
            semicolon. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User does not exist: {userId}.<br> <br>
            **Error Code:** `3001` <br>
             A meeting with this {meetingId} is not found or has expired. <br>
        '429':
          description: |-
            **HTTP Status Code:** `429` <br>
             Too Many Requests 

             
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - meeting:write
          - meeting:write:admin
  /meetings/{meetingId}/batch_polls:
    post:
      tags:
        - Meetings
      summary: Perform batch poll creation
      operationId: Meetings_createBatchPolls
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Polls allow the meeting host to survey attendees. Create batch
        [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        for a meeting.  
           
         

        **Prerequisites**:  
         
        * Host user type must be **Pro** or higher plan.

        * Polling feature must be enabled in the host's account.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: '93398114182'
      requestBody:
        description: Batch Meeting poll object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsCreateBatchPollsRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Meeting Poll Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsCreateBatchPollsResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid Meeting ID.


            **Error Code:** `300` <br>

            Meeting id does not exist.


            **Error Code:** `3000` <br>

            Cannot access meeting information.


            **Error Code:** `3001` <br>

            Meeting does not exist: {meetingId}.<br>


            **Error Code:** `4400` <br>

            * You can only add a maximum of 50 polls. 

            * Meeting polls disabled. To enable this feature, enable the
            "Meeting Polls/Quizzes" setting in the Zoom web portal's "Settings"
            interface. 

            * Advanced meeting polls disabled. To enable this feature, enable
            the "Allow host to create advanced polls and quizzes" setting in the
            Zoom web portal's "Settings" interface.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/batch_registrants:
    post:
      tags:
        - Meetings
      summary: Perform batch registration
      operationId: Meetings_batchRegistrantsCreate
      security:
        - openapi_oauth:
            - meeting:write
            - meeting:write:admin
          openapi_authorization: []
      description: >-
        Register up to 30 registrants at once for a meeting that requires
        [registration](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).   
         

        **Prerequisites:**  
         
        * The meeting host must be a Licensed user.

        * The meeting must require registration and should be of type `2`, i.e.,
        they should be scheduled meetings. Instant meetings and Recurring
        meetings are not supported by this API.  
           
         


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: Unique identifier of the meeting (Meeting Number).
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: '91498058927'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsBatchRegistrantsCreateRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `200` **OK**   
             
            Registrants added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsBatchRegistrantsCreateResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `3038` <br>

            Meeting is over, you can not register now. If you have any
            questions, please contact the Meeting host.<br><br>


            **Error Code:** `303` <br>

            This API can only be used for scheduled meeting(meeting type: 2).
            Batch registration is not supported for other meeting types.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `3001` <br>
            Meeting does not exist: {meetingId}.<br>

            **Error Code:** `3043` <br>
            Meeting has reached maximum attendee capacity.<br>

            **Error Code:** `404` <br>
            Registration has not been enabled for this meeting: {meetingId}.

      extensions:
        x-macro-scopes:
          - meeting:write
          - meeting:write:admin
  /meetings/{meetingId}/invitation:
    get:
      tags:
        - Meetings
      summary: Get meeting invitation
      operationId: Meetings_getInvitationNote
      security:
        - openapi_oauth:
            - meeting:read
            - meeting:read:admin
          openapi_authorization: []
      description: >-
        Retrieve the meeting invitation note for a specific meeting.


        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Meeting invitation returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetInvitationNoteResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - meeting:read
          - meeting:read:admin
  /meetings/{meetingId}/invite_links:
    post:
      tags:
        - Meetings
      summary: Create meeting's invite links
      operationId: Meetings_createInviteLinks
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Create a batch of invitation links for a meeting.




        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsCreateInviteLinksRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Meeting invitation links created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsCreateInviteLinksResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            * Meeting ID does not exist. 

            * Invalid meeting ID.


            **Error Code:** `3000` <br>

            Cannot access webinar information.


            **Error Code:** `3001` <br>

            Meeting does not exist: {meetingId}


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/jointoken/live_streaming:
    get:
      tags:
        - Meetings
      summary: Get a meeting's join token for live streaming
      operationId: Meetings_getJoinToken
      security:
        - openapi_oauth:
            - meeting_token:read:admin:live_streaming
            - meeting_token:read:live_streaming
          openapi_authorization: []
      description: >-
        Get a meeting's join token to allow live streaming. The join token
        allows a recording bot implemented using Zoom meeting SDK to connect to
        a Zoom meeting &quot;hosted by the issuer of the token&quot;, and can
        call the streaming method automatically. It supports both regular live
        streaming, and raw streaming. 


        **Prerequisites:** 

        * A Pro or higher plan for the meeting host. 

        * The **Allow livestreaming of meetings** user setting enabled in the
        Zoom web portal.


        **Scopes:**
        `meeting_token:read:admin:live_streaming`,`meeting_token:read:live_streaming`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Meeting live streaming token returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetJoinTokenResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid meeting ID.


            **Error Code:** `3000` <br>

            Cannot access Webinar information.


            **Error Code:** `124` <br>

            This API only supports OAuth2 authorization.


            **Error Code:** `3000` <br>

            Not allowed to start live streaming. To use this feature, enable the
            "Allow livestreaming of meetings" setting in the "Settings" page of
            the Zoom web portal.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Meeting ID does not exist.

            **Error Code:** `3001` <br>
            Meeting does not exist: {meetingId}

      extensions:
        x-macro-scopes:
          - meeting_token:read:admin:live_streaming
          - meeting_token:read:live_streaming
  /meetings/{meetingId}/jointoken/local_archiving:
    get:
      tags:
        - Meetings
      summary: Get a meeting's archive token for local archiving
      operationId: Meetings_getMeetingArchiveTokenForLocalArchiving
      security:
        - openapi_oauth:
            - meeting_token:read:admin:local_archiving
          openapi_authorization: []
      description: >-
        Get a meeting's archive token to allow local archiving. The archive
        token allows a meeting SDK app or bot to get archive permission to
        access the meeting's raw audio and video media stream in real-time. 


        **Prerequisites:** 

        * A Pro or higher plan for the meeting host. 

        * The **Archive meetings and webinars** account setting enabled in the
        Zoom web portal.


        **Scopes:** `meeting_token:read:admin:local_archiving`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Meeting local archiving token returned.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MeetingsGetMeetingArchiveTokenForLocalArchivingResponse
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid meeting ID.


            **Error Code:** `3000` <br>

            Cannot access Webinar information.


            **Error Code:** `124` <br>

            This API only supports OAuth2 authorization.


            **Error Code:** `3000` <br>

            Not allowed to start local archiving. To use this feature, enable
            the "Archive meetings and webinars" setting in the "Settings" page
            of the Zoom web portal.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Meeting ID does not exist.

            **Error Code:** `3001` <br>
            Meeting does not exist: {meetingId}

      extensions:
        x-macro-scopes:
          - meeting_token:read:admin:local_archiving
  /meetings/{meetingId}/jointoken/local_recording:
    get:
      tags:
        - Meetings
      summary: Get a meeting's join token for local recording
      operationId: Meetings_getJoinTokenLocalRecording
      security:
        - openapi_oauth:
            - meeting_token:read:admin:local_recording
            - meeting_token:read:local_recording
          openapi_authorization: []
      description: >-
        Get a meeting's join token to allow for local recording. The join token
        lets a recording bot implemented using Zoom Meeting SDK to connect to a
        Zoom meeting. The recording bot can then automatically start locally
        recording. This supports both regular and raw local recording types. 


        **Prerequisites:** 

        * The **Local recording** user setting enabled in the Zoom web portal.


        **Scopes:**
        `meeting_token:read:admin:local_recording`,`meeting_token:read:local_recording`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Meeting local recording token returned.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MeetingsGetJoinTokenLocalRecordingResponse
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid meeting ID.


            **Error Code:** `3000` <br>

            Cannot access Webinar information.


            **Error Code:** `124` <br>

            This API only supports OAuth2 authorization.


            **Error Code:** `3000` <br>

            Not allowed to start local recording. To use this feature, enable
            the "Local Recording" setting in the "Settings" page of the Zoom web
            portal.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Meeting ID does not exist.

            **Error Code:** `3001` <br>
            Meeting does not exist: {meetingId}

      extensions:
        x-macro-scopes:
          - meeting_token:read:admin:local_recording
          - meeting_token:read:local_recording
  /meetings/{meetingId}/livestream:
    get:
      tags:
        - Meetings
      summary: Get livestream details
      operationId: Meetings_getLivestreamDetails
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        Zoom allows users to [livestream a
        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Get a meeting's livestream configuration details
        such as Stream URL, Stream Key and Page URL.  
           
         
        **Prerequisites:**  
         
        * Meeting host must be a licensed user with a Pro or higher plan.  
         
        * Live streaming details must have been
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the meeting.  
           
         


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: Unique identifier of the meeting.
          name: meetingId
          in: path
          required: true
          schema:
            type: string
            example: '93398114182'
      responses:
        '200':
          description: |+
            **HTTP Status Code:** `200` **OK**  
             
            Live Stream details returned.

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetLivestreamDetailsResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Missing meetingId<br>

            Invalid meetingId<br><br>


            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User {userId} does not exist.

      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
    patch:
      tags:
        - Meetings
      summary: Update a livestream
      operationId: Meetings_updateLivestream
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Update a meeting's livestream information. Zoom allows users to
        [livestream a
        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform.


        **Prerequisites:** 

        * Meeting host must have a Pro license.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        description: Meeting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsUpdateLivestreamRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Meeting livestream updated.
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}.<br>


            **Error Code:** `3000` <br>

            Cannot access webinar info.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User {userId} does not exist.

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/livestream/status:
    patch:
      tags:
        - Meetings
      summary: Update Live Stream Status
      operationId: Meetings_livestreamStatusUpdate
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Zoom allows users to [livestream a
        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Update the status of a meeting's livestream.  
           
         
        **Prerequisites:**  
         
        * Meeting host must have a Pro license.  
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        description: Meeting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsLivestreamStatusUpdateRequest'
      responses:
        '204':
          description: |+
            **HTTP Status Code:** `204`   
             
            Meeting livestream updated.

        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `3000` <br>

            Cannot access webinar info.<br>


            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User {userId} does not exist.<br>

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/meeting_summary:
    get:
      tags:
        - Meetings
      summary: Get a meeting summary
      operationId: Meetings_getMeetingSummary
      security:
        - openapi_oauth:
            - meeting_summary:read:admin
            - meeting_summary:read
          openapi_authorization: []
      description: >-
        Displays information about a meeting summary.


        **Prerequisites**:

        * Host user type must be Pro or higher plan.

        * The Meeting Summary with AI Companion feature enabled in the host's
        account.

        * E2ee meetings do not have summary feature enabled.


        **Scopes:** `meeting_summary:read:admin`,`meeting_summary:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: >-
            The meeting's universally unique ID (UUID). When you provide a
            meeting UUID that begins with a `/` character or contains the `//`
            characters, you **must** double-encode the meeting UUID before
            making an API request.
          name: meetingId
          in: path
          required: false
          schema:
            type: string
            example: aDYlohsHRtCd4ii1uC2+hA==
      responses:
        '200':
          description: '**HTTP Status Code:** `200`Meeting Poll object returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetMeetingSummaryResponse'
      extensions:
        x-permissions:
          - SmartMeetingSummaryMgt:Read
        x-macro-scopes:
          - meeting_summary:read:admin
          - meeting_summary:read
        x-granular-scopes:
          - meeting:read:summary
          - meeting:read:summary:admin
  /meetings/{meetingId}/polls:
    get:
      tags:
        - Meetings
      summary: List meeting polls
      operationId: Meetings_listMeetingPolls
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        Polls allow the meeting host to survey attendees. List all
        [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        of a meeting.  
           
         

        **Prerequisites**:  
         
        * Host user type must be **Pro** or higher plan.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: >-
            Whether to query for polls with the **Anonymous** option enabled: 

            * `true` &mdash; Query for polls with the **Anonymous** option
            enabled. 

            * `false` &mdash; Do not query for polls with the **Anonymous**
            option enabled.
          name: anonymous
          in: query
          required: false
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: |-
            **HTTP Status Code:**   
             
            List polls of a Meeting  returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsListMeetingPollsResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `4400` <br>

            Meeting polls disabled. To enable this feature, enable the "Meeting
            Polls/Quizzes" setting in the Zoom web portal's "Settings"
            interface.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `404` <br>
            Meeting Poll not found

      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
    post:
      tags:
        - Meetings
      summary: Create a meeting poll
      operationId: Meetings_createPoll
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Polls allow the meeting host to survey attendees. Create a
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        for a meeting.  
           
         

        **Prerequisites**:  
         
        * Host user type must be **Pro** or higher plan.

        * Polling feature must be enabled in the host's account.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        description: Meeting poll object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsCreatePollRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Meeting Poll Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsCreatePollResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `4400` <br>

            * Meeting polls disabled. To enable this feature, enable the
            "Meeting Polls/Quizzes" setting in the Zoom web portal's "Settings"
            interface. 

            * Advanced meeting polls disabled. To enable this feature, enable
            the "Allow host to create advanced polls and quizzes" setting in the
            Zoom web portal's "Settings" interface.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `404` <br>
            Meeting not found

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/polls/{pollId}:
    get:
      tags:
        - Meetings
      summary: Get a meeting poll
      operationId: Meetings_getPoll
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        Polls allow the meeting host to survey attendees. Retrieve information
        about a specific meeting
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).  
           
         


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: The poll ID
          name: pollId
          in: path
          required: true
          schema:
            type: string
            example: QalIoKWLTJehBJ8e1xRrbQ
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Meeting Poll object returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetPollResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `4400` <br>

            Meeting polls disabled. To enable this feature, enable the "Meeting
            Polls/Quizzes" setting in the Zoom web portal's "Settings"
            interface.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `404` <br>
            Meeting Poll not found.

      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
    put:
      tags:
        - Meetings
      summary: Update a meeting poll
      operationId: Meetings_updateMeetingPoll
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Polls allow the meeting host to survey attendees. Update information of
        a specific meeting
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: The poll ID
          name: pollId
          in: path
          required: true
          schema:
            type: string
            example: QalIoKWLTJehBJ8e1xRrbQ
      requestBody:
        description: Meeting Poll
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsUpdateMeetingPollRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            Meeting Poll Updated
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `4400` <br>

            * Meeting polls disabled. To enable this feature, enable the
            "Meeting Polls/Quizzes" setting in the Zoom web portal's "Settings"
            interface. 

            * Advanced meeting polls disabled. To enable this feature, enable
            the "Allow host to create advanced polls and quizzes" setting in the
            Zoom web portal's "Settings" interface.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `404` <br>
            Meeting Poll not found

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
    delete:
      tags:
        - Meetings
      summary: Delete a meeting poll
      operationId: Meetings_pollDelete
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Polls allow the meeting host to survey attendees. Delete a meeting
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).  
         
        **Prerequisites**:  
         
        * Host user type must be **Pro**.

        * Polling feature should be enabled in the host's account.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: The poll ID
          name: pollId
          in: path
          required: true
          schema:
            type: string
            example: QalIoKWLTJehBJ8e1xRrbQ
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            Meeting Poll deleted
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `4400` <br>

            Meeting polls disabled. To enable this feature, enable the "Meeting
            Polls/Quizzes" setting in the Zoom web portal's "Settings"
            interface.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `404` <br>
            Meeting Poll not found

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/registrants:
    get:
      tags:
        - Meetings
      summary: List meeting registrants
      operationId: Meetings_listRegistrants
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        A host or a user with admin permission can require [registration for a
        Zoom
        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).
        List users that have registered for a meeting.  
           
         


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: The meeting or webinar occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
        - description: |-
            Query by the registrant's status. 
            * `pending` - The registration is pending. 
            * `approved` - The registrant is approved. 
            * `denied` - The registration is denied.
          name: status
          in: query
          required: false
          schema:
            type: string
            example: pending
            default: approved
            enum:
              - pending
              - approved
              - denied
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          name: page_number
          in: query
          required: false
          schema:
            type: integer
            example: 1
            default: 1
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Successfully listed meeting registrants.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsListRegistrantsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account: {accountId}.<br> <br>
            **Error Code:** `3003` <br>
             You are not the meeting host.<br> <br>
            **Error Code:** `3000` <br>
             Cannot access meeting info. <br>
            **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             Meeting host does not exist: {userId}. <br>
      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
    post:
      tags:
        - Meetings
      summary: Add a meeting registrant
      operationId: Meetings_addRegistrant
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Create and submit a user's registration to a meeting. See [Customizing
        webinar
        registration](https://support.zoom.us/hc/en-us/articles/202835649-Customizing-webinar-registration)
        for details on how to set the requirements for these fields. Note that
        there is a maximum limit of 4,999 registrants per meeting and users will
        see an error if the meeting's capacity is reached. 

         **Prerequisites:** 
        * The host must be a **Licensed** user type.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: >-
            A comma-separated list of meeting occurrence IDs. You can get this
            value with the [Get a
            meeting](/docs/api-reference/zoom-api/methods#operation/meeting)
            API.
          name: occurrence_ids
          in: query
          required: false
          schema:
            type: string
            example: 1648194360000,1648367160000
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsAddRegistrantRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Meeting registration created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsAddRegistrantResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}


            **Error Code:** `3003` <br>

            You are not the meeting host.


            **Error Code:** `3043` <br>

            Meeting has reached maximum attendee capacity.


            **Error Code:** `3000` <br>

            Cannot access meeting info.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            Meeting host does not exist: {userId}

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/registrants/questions:
    get:
      tags:
        - Meetings
      summary: 'List registration questions '
      operationId: Meetings_listRegistrationQuestions
      security:
        - openapi_oauth:
            - meeting:read
            - meeting:read:admin
          openapi_authorization: []
      description: >-
        List registration questions that will be displayed to users while
        [registering for a
        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).  
         



        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Meeting Registrant Question object returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsListRegistrationQuestionsResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - meeting:read
          - meeting:read:admin
    patch:
      tags:
        - Meetings
      summary: Update registration questions
      operationId: Meetings_updateRegistrationQuestions
      security:
        - openapi_oauth:
            - meeting:write
            - meeting:write:admin
          openapi_authorization: []
      description: >-
        Update registration questions that will be displayed to users while
        [registering for a
        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).  
           
         


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        description: Meeting Registrant Questions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsUpdateRegistrationQuestionsRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Meeting Registrant Questions Updated
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - meeting:write
          - meeting:write:admin
  /meetings/{meetingId}/registrants/status:
    put:
      tags:
        - Meetings
      summary: Update registrant's status
      operationId: Meetings_updateRegistrantStatus
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Update a meeting registrant's status by either approving, cancelling or
        denying a registrant from joining the meeting.  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: The meeting or webinar occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsUpdateRegistrantStatusRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Registrant status updated.
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}.<br>


            **Error Code:** `3000` <br>

            Cannot access meeting information.<br>


            **Error Code:** `3003` <br>

            You're not the meeting host.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User does not exist: {userId}.<br>

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/registrants/{registrantId}:
    get:
      tags:
        - Meetings
      summary: Get a meeting registrant
      operationId: Meetings_getRegistrantDetails
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        Retrieve details on a specific user who has registered for the meeting.
        A host or a user with administrative permissions can require
        [registration for Zoom
        meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).


        **Prerequisites:** 

        * The account must have a Meeting plan


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: The registrant ID.
          name: registrantId
          in: path
          required: true
          schema:
            type: string
            example: 9tboDiHUQAeOnbmudzWa5g
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetRegistrantDetailsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account: "{accountId}"<br> <br>
            **Error Code:** `3003` <br>
             You are not the meeting host.<br> <br>
            **Error Code:** `3000` <br>
             >
            Cannot access meeting info. <br>
            **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             Meeting host does not exist: "{userId}" <br>
      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
    delete:
      tags:
        - Meetings
      summary: Delete a meeting registrant
      operationId: Meetings_deleteRegistrant
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Delete a meeting registrant.  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The meeting occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: approved
        - description: The meeting ID.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            example: 91498058927
        - description: The meeting registrant ID.
          name: registrantId
          in: path
          required: true
          schema:
            type: string
            example: 9tboDiHUQAeOnbmudzWa5g
      responses:
        '204':
          description: |-
            **HTTP status code:** `204`   
             
            OK
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>

            Only available for paid users: {0}.<br>


            **Error Code:** `300` <br>

            The value that you entered for the Registrant ID field is invalid.
            Enter a valid value and try again.<br>


            **Error Code:** `404` <br>

            Registration has not been enabled for this meeting: {0}.<br>


            **Error Code:** `1001` <br>

            User {userId} does not exist or does not belong to this account.<br>


            **Error Code:** `3000` <br>

            Cannot access webinar info.


            **Error Code:** `3001` <br>

            Meeting does not exist: {0}.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/sip_dialing:
    post:
      tags:
        - Meetings
      summary: Get a meeting SIP URI with Passcode
      operationId: Meetings_getSipUriWithPasscode
      security:
        - openapi_oauth:
            - meeting:write:sip_dialing
            - meeting:write:admin:sip_dialing
          openapi_authorization: []
      description: >-
        Get a meeting's SIP URI.  The URI consists of the meeting ID, (optional,
        user-supplied) passcode and participant identifier code.  The API return
        data also includes additional fields to indicate whether the API caller
        has a valid Cloud Room Connector subscription, the participant
        identifier code from the URI, and the SIP URI validity period (in
        seconds). 




        **Scopes:**
        `meeting:write:sip_dialing`,`meeting:write:admin:sip_dialing`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsGetSipUriWithPasscodeRequest'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Meeting's encoded SIP URI returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetSipUriWithPasscodeResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>
            Invalid meeting ID.

            **Error Code:** `3000` <br>
            The meeting's SIP URI does not exist: {meetingId}.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Meeting ID does not exist.

            **Error Code:** `3001` <br>
            Meeting does not exist: {meetingId}

      extensions:
        x-macro-scopes:
          - meeting:write:sip_dialing
          - meeting:write:admin:sip_dialing
  /meetings/{meetingId}/status:
    put:
      tags:
        - Meetings
      summary: Update meeting status
      operationId: Meetings_updateMeetingStatus
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Update the status of a meeting.  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsUpdateMeetingStatusRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Meeting updated.
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>

            User does not belong to this account: {accountId}.


            **Error Code:** `3000` <br>

            Cannot access meeting info.


            **Error Code:** `3003` <br>

            You're not the meeting host.


            **Error Code:** `3063` <br>

            Can not end on-premise user's meeting: {meetingId}.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            Meeting host does not exist: {userId}.

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/survey:
    get:
      tags:
        - Meetings
      summary: Get a meeting survey
      operationId: Meetings_getMeetingSurvey
      security:
        - openapi_oauth:
            - meeting:read
            - meeting:read:admin
          openapi_authorization: []
      description: >-
        Display information about a [meeting
        survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). 
        **Prerequisites:** * The host has a **Pro** license. * The [**Meeting
        Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys)
        feature is enabled on the host's account. * The meeting must be a
        scheduled meeting. Instant meetings do not have survey features enabled.


        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be more than 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
             Meeting survey object returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetMeetingSurveyResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             Invalid meeting ID. <br>
            **Error Code:** `3000` <br>
             Cannot access Webinar information. <br>
            **Error Code:** `3000` <br>
             Meeting survey disabled. To enable this feature, enable the "Meeting Survey" setting in the Zoom web portal's "Settings" interface. <br>
            **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `300` <br>
             Meeting ID does not exist. <br>
            **Error Code:** `3001` <br>
             Meeting does not exist: {meetingId}. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - meeting:read
          - meeting:read:admin
    delete:
      tags:
        - Meetings
      summary: Delete a meeting survey
      operationId: Meetings_deleteMeetingSurvey
      security:
        - openapi_oauth:
            - meeting:write
            - meeting:write:admin
          openapi_authorization: []
      description: >-
        Delete a [meeting
        survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). 

         **Prerequisites:** 
        * The host must be a **Pro** user type. 

        * The [**Meeting
        Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys)
        feature enabled in the host's account. 

        * The meeting must be a scheduled meeting. Instant meetings do not have
        survey features enabled.


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
             Meeting survey deleted.
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid meeting ID.


            **Error Code:** `3000` <br>

            * Cannot access Webinar information. <br>
             * Meeting survey disabled. To enable this feature, enable the "Meeting Survey" setting in the Zoom web portal's "Settings" interface.

            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Meeting ID does not exist.

            **Error Code:** `3001` <br>
            Meeting does not exist: {meetingId}.

      extensions:
        x-macro-scopes:
          - meeting:write
          - meeting:write:admin
    patch:
      tags:
        - Meetings
      summary: Update a meeting survey
      operationId: Meetings_updateSurvey
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Update a [meeting
        survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). 
        **Prerequisites:** * The host must be a **Pro** user type. * The
        [**Meeting
        Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys)
        feature is enabled in the host's account. * The meeting must be a
        scheduled meeting. Instant meetings do not have survey features enabled.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be over 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsUpdateSurveyRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
             Meeting survey updated.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             Invalid meeting ID. <br>
            **Error Code:** `300` <br>
             Invalid third party survey: {third_party_survey}. <br>
            **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
            **Error Code:** `3000` <br>
             Cannot access Webinar information. <br>
            **Error Code:** `3000` <br>
             Meeting survey disabled. To enable this feature, enable the "Meeting Survey" setting in the Zoom web portal's "Settings" interface. <br>
            **Error Code:** `3000` <br>
             Not allowed host to use a 3rd-party survey link. To use this feature, enable the "Allow host to use a 3rd-party survey link" setting in the "Account Settings" page of the Zoom web portal. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `300` <br>
             Meeting ID does not exist. <br>
            **Error Code:** `3001` <br>
             Meeting does not exist: {meetingId}. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /meetings/{meetingId}/token:
    get:
      tags:
        - Meetings
      summary: Get meeting's token
      operationId: Meetings_getMeetingToken
      security:
        - openapi_oauth:
            - meeting:read
            - meeting:read:admin
          openapi_authorization: []
      description: >-
        Get a meeting's [closed caption token (caption
        URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service).
        This token lets you use a third-party service to stream text to their
        closed captioning software to the Zoom meeting. 


        **Prerequisites:** 

        * The **Closed captioning** setting enabled in the Zoom web portal. 

        * The **Allow use of caption API Token to integrate with 3rd-party
        Closed Captioning services** setting enabled.


        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: |-
            The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
        - description: >-
            The meeting token type: 

            * `closed_caption_token` &mdash; The third-party closed caption API
            token. 


            This defaults to `closed_caption_token`.
          name: type
          in: query
          required: false
          schema:
            type: string
            example: closed_caption_token
            default: closed_caption_token
            enum:
              - closed_caption_token
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Meeting token returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetMeetingTokenResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid meeting ID.


            **Error Code:** `3000` <br>

            * Cannot access Webinar information. <br>

            * Meeting survey disabled. To enable this feature, enable the
            "Meeting Survey" setting in the Zoom web portal's "Settings"
            interface.


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Meeting ID does not exist.

            **Error Code:** `3001` <br>
            Meeting does not exist: {meetingId}

      extensions:
        x-macro-scopes:
          - meeting:read
          - meeting:read:admin
  /past_meetings/{meetingId}:
    get:
      tags:
        - Meetings
      summary: Get past meeting details
      operationId: Meetings_getDetails
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        Get information about a past meeting. 

         

        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID before making an API request.
          name: meetingId
          in: path
          required: true
          schema:
            oneOf:
              - type: integer
                example: 5638296721
              - type: string
                example: 4444AAAiAAAAAiAiAiiAii==
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Meeting information returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsGetDetails200Response'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>
            * User does not exist: {userId} 
            * User "{userId}" does not exist or does not belong to this account.

            **Error Code:** `300` <br>
            Cannot access meeting information.

            **Error Code:** `200` <br>
            Only available for paid account: {accountId}

            **Error Code:** `12702` <br>
            Can not access a meeting a year ago.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `3001` <br>
            * This meeting is not available or the meeting ID is invalid. 
            * The meeting ID is invalid or the meeting has not ended.

      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
  /past_meetings/{meetingId}/instances:
    get:
      tags:
        - Meetings
      summary: List past meeting instances
      operationId: Meetings_listPastMeetingInstances
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        Return a list of past meeting instances. 

         

        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: The past meeting's ID.
          name: meetingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 93398114182
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
             List of ended meeting instances returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsListPastMeetingInstancesResponse'
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
  /past_meetings/{meetingId}/participants:
    get:
      tags:
        - Meetings
      summary: Get past meeting participants
      operationId: Meetings_getPastMeetingParticipants
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        Retrieve information on participants from a past meeting. Note the API
        doesn't return results if there's only one participant in a meeting.  
           
         
        **Prerequisites:**  
         
        * Paid account on a Pro or higher plan.

          
            
           **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          name: meetingId
          in: path
          required: true
          schema:
            type: string
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Meeting participants' report returned.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MeetingsGetPastMeetingParticipantsResponse
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User {userId} not exist or not belong to this account.<br><br> <br>
            **Error Code:** `300` <br>
             Cannot access meeting information.<br><br> <br>
            **Error Code:** `200` <br>
             Only available for paid account: {accountId} <br>
            **Error Code:** `12702` <br>
             Can not access a meeting a year ago. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} not exist or not belong to this account.<br>
            User not exist: {userId}<br><br> <br>
            **Error Code:** `3001` <br>
             This meeting is not available or ID is not valid.<br>
            Meeting ID is invalid or not end. <br>
      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
  /past_meetings/{meetingId}/polls:
    get:
      tags:
        - Meetings
      summary: List past meeting's poll results
      operationId: Meetings_listPastMeetingPolls
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        [Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        allow the meeting host to survey attendees. List poll results of a
        meeting.  
           
         

        **Prerequisites**:  
         
        * Host user type must be **Pro**.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          name: meetingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**  
             
            Polls returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsListPastMeetingPollsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `12702` <br>
             Can not access a meeting a year ago. <br>
      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
  /past_meetings/{meetingId}/qa:
    get:
      tags:
        - Meetings
      summary: List past meetings' Q&A
      operationId: Meetings_listPastMeetingQA
      security:
        - openapi_oauth:
            - meeting:read:admin
            - meeting:read
          openapi_authorization: []
      description: >-
        The question &amp; answer (Q&amp;A) feature for Zoom Meetings lets
        attendees ask questions during a meeting and lets the other attendees
        answer those questions.  
         
        List Q&amp;A of a specific meeting.


        **Prerequisites:**  
         
        * 


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          name: meetingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**  
             
            Q&amp;A returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsListPastMeetingQaResponse'
        '401':
          description: |
            **HTTP Status Code:** `401` <br>
             Unauthorized 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Meeting ID is invalid or not end.<br>
            This Meeting id does not belong to you:{meetingId}. <br>
      extensions:
        x-macro-scopes:
          - meeting:read:admin
          - meeting:read
  /users/{userId}/meeting_templates:
    get:
      tags:
        - Meetings
      summary: List meeting templates
      operationId: Meetings_listMeetingTemplates
      security:
        - openapi_oauth:
            - meeting:read
            - meeting:read:admin
          openapi_authorization: []
      description: >-
        List available [meeting
        templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates)
        for a user. For user-level apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter.




        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            The user ID retrievable from the [List
            users](/api-reference/zoom-api/methods#operation/users) API.
          name: userId
          in: path
          required: true
          schema:
            type: string
            example: 30R7kT7bTIKSNUFEuH_Qlg
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**   
             
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsListMeetingTemplatesResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
        '404':
          description: >
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User not exist: {userId}.<br>
            User {userId} does not exist or does not belong to this account.
            <br>
      extensions:
        x-macro-scopes:
          - meeting:read
          - meeting:read:admin
    post:
      tags:
        - Meetings
      summary: Create a meeting template from an existing meeting
      operationId: Meetings_createTemplateFromMeeting
      security:
        - openapi_oauth:
            - meeting:write:admin
            - meeting:write
          openapi_authorization: []
      description: >-
        Create a meeting template from an existing meeting. 




        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            The user ID retrievable from the [List
            users](/api-reference/zoom-api/methods#operation/users) API.
          name: userId
          in: path
          required: true
          schema:
            type: string
            example: 30R7kT7bTIKSNUFEuH_Qlg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsCreateTemplateFromMeetingRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`  
             
            Meeting template created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsCreateTemplateFromMeetingResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            * Meeting ID does not exist. 

            * Invalid meeting ID. 

            * You can only create up to 40 meeting templates.


            **Error Code:** `3000` <br>

            * Cannot access webinar information. 

            * Meeting template name already exists: {templateName}.


            **Error Code:** `3001` <br>

            Meeting does not exist: {meetingId}


            **Error Code:** `3161` <br>

            Meeting hosting and scheduling capabilities are not allowed for your
            user account.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            * User not exist: {userId}. 
            * User {userId} does not exist or does not belong to this account.

      extensions:
        x-macro-scopes:
          - meeting:write:admin
          - meeting:write
  /users/{userId}/meetings:
    get:
      tags:
        - Meetings
      summary: List meetings
      operationId: Meetings_listHostScheduled
      security:
        - openapi_oauth:
            - meeting:read
            - meeting:read:admin
          openapi_authorization: []
      description: >-
        List a meeting host user's scheduled meetings. For user-level apps, pass
        [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter. 


        **Note** 

        * This API **only** supports scheduled meetings. This API does not
        return information about instant meetings. 

        * This API only returns a user's [unexpired
        meetings](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). 

         

        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: >-
            The user's user ID or email address. For user-level apps, pass the
            `me` value.
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            The type of meeting. 

            * `scheduled` - All valid previous (unexpired) meetings, live
            meetings, and upcoming scheduled meetings. 

            * `live` - All the ongoing meetings. 

            * `upcoming` - All upcoming meetings, including live meetings. 

            * `upcoming_meetings` - All upcoming meetings, including live
            meetings. 

            * `previous_meetings` - All the previous meetings.
          name: type
          in: query
          required: false
          schema:
            type: string
            example: scheduled
            default: scheduled
            enum:
              - scheduled
              - live
              - upcoming
              - upcoming_meetings
              - previous_meetings
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: The page number of the current page in the returned records.
          name: page_number
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - description: The start date.
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2023-01-01'
        - description: The end data.
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2023-01-16'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            List of meeting objects returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsListHostScheduledResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} not exist or not belong to this account.<br> <br>
      extensions:
        x-macro-scopes:
          - meeting:read
          - meeting:read:admin
    post:
      tags:
        - Meetings
      summary: Create a meeting
      operationId: Meetings_createMeeting
      security:
        - openapi_oauth:
            - meeting:write
            - meeting:write:admin
          openapi_authorization: []
      description: >-
        [Create a
        meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings)
        for a user. For user-level apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter.


        * A meeting's `start_url` value is the URL a host or an alternative host
        can use to start a meeting. The expiration time for the `start_url`
        value is **two hours** for all regular users.

        * For `custCreate` meeting hosts (users created with the `custCreate`
        parameter via the [**Create
        users**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/userCreate)
        API), the expiration time of the `start_url` parameter is **90 days**
        from the generation of the `start_url`.


        **Note:** 


        For security reasons, the recommended way to programmatically get the
        updated `start_url` value after expiry is to call the [**Get a
        meeting**](/api-reference/zoom-api/methods#operation/meeting) API. Refer
        to the `start_url` value in the response. 

         **100 requests per day**. The rate limit is applied against the `userId` of the **meeting host** used to make the request.

        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: >-
            The user's user ID or email address. For user-level apps, pass the
            `me` value.
          name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Meeting object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsCreateMeetingRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`  
             
            Meeting created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingsCreateMeetingResponse'
        '400':
          description: >
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `3000` <br>
             * Instant meetings do not support the schedule_for parameter; you cannot schedule an instant meeting for another user.<br>
            * Users in '{0}' have been blocked from joining meetings and
            webinars. To unblock them, go to the Settings page in the Zoom web
            portal and update 'Block users in specific domains from joining
            meetings and webinars'.<br> 

            * You cannot schedule a meeting for {0}. <br>

            **Error Code:** `3161` <br>
             Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
            **Error Code:** `300` <br>
             * The value that you entered for the schedule_for field is invalid. Enter a valid value and try again. <br> 
            * Invalid enforce_login_domains, separate multiple domains by
            semicolon. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} not exist or not belong to this account. <br>
        '429':
          description: |-
            **HTTP Status Code:** `429` <br>
             Too Many Requests 

             
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - meeting:write
          - meeting:write:admin
        x-granular-scopes:
          - meeting:write:meeting
          - meeting:write:meeting:admin
  /users/{userId}/pac:
    get:
      tags:
        - PAC
      summary: List a user's PAC accounts
      operationId: Pac_listAccounts
      security:
        - openapi_oauth:
            - pac:read:admin
            - pac:read
          openapi_authorization: []
      description: >-
        Retrieve a list of a user's [personal audio conference
        (PAC)](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
        accounts. For user-level apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter. 

         PAC allows Pro or higher account holders to host meetings through PSTN (phone dial-in) only. 

         **Prerequisites** 
        * A Pro or higher plan with an [Audio
        Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
        subscription. 

        * The [**Personal Audio
        Conference**](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference#h_01F5BPM447M6QDJXX50RSFXKJ3)
        setting enabled in the user's profile.


        **Scopes:** `pac:read:admin`,`pac:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            The user's user ID or email address. For user-level apps, pass the
            `me` value.
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
             PAC account list returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacListAccountsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `2024` <br>
             User does not have PAC enabled. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User does not exist: $userId <br>
      extensions:
        x-macro-scopes:
          - pac:read:admin
          - pac:read
  /report/activities:
    get:
      tags:
        - Reports
      summary: Get sign In / sign out activity report
      operationId: Reports_listSignInSignOutActivities
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Retrieve a list of sign in / sign out activity logs
        [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports)
        of users under a Zoom account.  
         
        **Prerequisites**  
         
        * Pro or higher plan.  
         


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            Start date for which you would like to view the activity logs
            report. Using the `from` and `to` parameters, specify a monthly date
            range for the report as the API only provides one month worth of
            data in one request. The specified date range should fall within the
            last six months.
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2019-09-01'
        - description: >-
            End date up to which you would like to view the activity logs
            report.
          name: to
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2019-09-20'
        - description: The number of records to be returned within a single API call
          name: page_size
          in: query
          required: false
          schema:
            type: integer
            example: 30
        - description: Next page token is used to paginate through large result sets
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportsListSignInSignOutActivitiesResponse
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            No permission.<br>

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/billing:
    get:
      tags:
        - Reports
      summary: Get billing reports
      operationId: Reports_getBillingDepartmentReports
      security:
        - openapi_oauth:
            - report:read:admin
            - report:master
          openapi_authorization: []
      description: >-
        Get department billing reports of a Zoom account.


        **Prerequisites:**  
         
        * Pro or a higher account with Department Billing option enabled.
        Contact Zoom Support team for details.




        **Scopes:** `report:read:admin`,`report:master`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**  
             
            Billing report returned.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportsGetBillingDepartmentReportsResponse
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            No permission.

      extensions:
        x-macro-scopes:
          - report:read:admin
          - report:master
  /report/billing/invoices:
    get:
      tags:
        - Reports
      summary: Get billing invoice reports
      operationId: Reports_getBillingInvoices
      security:
        - openapi_oauth:
            - report:read:admin
            - report:master
          openapi_authorization: []
      description: >-
        Get department billing invoices reports for a specific billing period.
        Provide the `billing_id` of the billing period for which you would like
        to retrieve the invoices for. This ID can be retrieved from **Get
        Billing Reports** API. 


        **Prerequisites:**  
         
        * Pro or a higher account with Department Billing option enabled.
        Contact the Zoom Support team to enable this feature.




        **Scopes:** `report:read:admin`,`report:master`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >+
            Unique Identifier of the Billing Report. Retrieve this ID from the
            response of **Get Billing Reports** API request. 

          name: billing_id
          in: query
          required: true
          schema:
            type: string
            example: indfhgfhfho
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**  
             
            Billing Invoice reports returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetBillingInvoicesResponse'
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `5010` <br>
            Report does not exist.

      extensions:
        x-macro-scopes:
          - report:read:admin
          - report:master
  /report/cloud_recording:
    get:
      tags:
        - Reports
      summary: Get cloud recording usage report
      operationId: Reports_getCloudRecordingUsageReport
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Retrieve cloud recording usage report for a specified period. You can
        only get cloud recording reports that is one day earlier than the
        current date and for the most recent period of 6 months. The date gap
        between from and to dates should be smaller or equal to 30 days.   
         
        **Prerequisites**  
         
        * Pro or higher plan.  
         


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            Start date in 'yyyy-mm-dd' format. The date range defined by the
            &quot;from&quot; and &quot;to&quot; parameters should only be one
            month as the report includes only one month worth of data at once.
          name: from
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-01'
        - description: End date.
          name: to
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-28'
        - description: >-
            The group ID. To get a group ID, use the [**List
            groups**](/api-reference/zoom-api/methods#operation/groups) API. 

             **Note:** The API response will only contain users who are members of the queried group ID.
          name: group_id
          in: query
          required: false
          schema:
            type: string
            example: TaVA8QKik_1233
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Cloud Recording Report Returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportsGetCloudRecordingUsageReportResponse
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            No permission.<br>
            ’

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/daily:
    get:
      tags:
        - Reports
      summary: Get daily usage report
      operationId: Reports_getDailyUsageReport
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Retrieve daily report to access the account-wide usage of Zoom services
        for each day in a given month. It lists the number of new users,
        meetings, participants, and meeting minutes.  
         
        **Prerequisites**  
         
        * Pro or higher plan.  
         


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: Year for this report
          name: year
          in: query
          required: false
          schema:
            type: integer
            example: 2022
        - description: Month for this report
          name: month
          in: query
          required: false
          schema:
            type: integer
            example: 3
        - description: >-
            The group ID. To get a group ID, use the [**List
            groups**](/api-reference/zoom-api/methods#operation/groups) API. 

             **Note:** The API response will only contain users who are members of the queried group ID.
          name: group_id
          in: query
          required: false
          schema:
            type: string
            example: TaVA8QKik_1233
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Daily report retrieved.  
             
            This is only available for paid accounts:{accountId}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetDailyUsageReportResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Daily report can only be provided for a month that falls within the
            recent 6 months.


            **Error Code:** `200` <br>

            No permission.<br>

            ’

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/meetings/{meetingId}:
    get:
      tags:
        - Reports
      summary: Get meeting detail reports
      operationId: Reports_getMeetingDetailReports
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Get a detailed report for a past meeting.   
         
        **Prerequisites:**  
         
        * Pro or a higher plan.  
         
         

        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID before making an API request.
          name: meetingId
          in: path
          required: true
          schema:
            oneOf:
              - type: integer
                example: 5638296721
              - type: string
                example: 4444AAAiAAAAAiAiAiiAii==
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Meeting details returned.  
             
            This is only available for paid account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetMeetingDetailReportsResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `12702` <br>
            Can not access meeting a year ago.<br>

            **Error Code:** `200` <br>
            No permission.<br>

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `3001` <br>
            Meeting {meetingId} not found or has expired.<br>

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/meetings/{meetingId}/participants:
    get:
      tags:
        - Reports
      summary: Get meeting participant reports
      operationId: Reports_getMeetingParticipantReports
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Return a report of a past meeting with two or more participants,
        including the host. To return a report for past meeting with only
        **one** participant, use the [**List meeting
        participants**](/docs/api-reference/zoom-api/ma#operation/dashboardMeetingParticipants)
        API. 


        **Note:** 


        This API may return empty values for participants' `user_name`,
        `ip_address`, `location`, and `email` responses when the account calling
        this API: 

        * Does **not** have a signed HIPAA business associate agreement (BAA). 

        * Is a [**legacy** HIPAA BAA
        account](/docs/api-reference/other-references/legacy-business-associate-agreements). 


        **Prerequisites:** 

        * A Pro or a higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          name: meetingId
          in: path
          required: true
          schema:
            type: string
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: >-
            Provide `registrant_id` as the value for this field if you would
            like to see the registrant ID attribute in the response of this API
            call. A registrant ID is a unique identifier of a [meeting
            registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants).
          name: include_fields
          in: query
          required: false
          schema:
            type: string
            example: registrant_id
            enum:
              - registrant_id
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Meeting participants report returned.  
             
            Only available for Paid or ZMP account: {accountId}.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportsGetMeetingParticipantReportsResponse
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}.<br> <br>
            **Error Code:** `12702` <br>
             Can not access meeting a year ago.<br> <br>
            **Error Code:** `200` <br>
             No permission.<br> <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Meeting  {MeetingId} not found or has expired.<br> <br>
      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/meetings/{meetingId}/polls:
    get:
      tags:
        - Reports
      summary: Get meeting poll reports
      operationId: Reports_getMeetingPollReports
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Use this API to get a report of
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        results for a past meeting. 

         **Prerequisites:** 
        * A Pro or a higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID before making an API request.
          name: meetingId
          in: path
          required: true
          schema:
            oneOf:
              - type: integer
                example: 5638296721
              - type: string
                example: 4444AAAiAAAAAiAiAiiAii==
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` 
            * Meeting polls report returned. 
            * This is only available for paid account: {accountId}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetMeetingPollReportsResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `12702` <br>
            Can not access meeting a year ago.

            **Error Code:** `200` <br>
            No permission.<br>

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `3001` <br>
            Meeting "{meetingId}" not found or has expired.

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/meetings/{meetingId}/qa:
    get:
      tags:
        - Reports
      summary: Get meeting Q&A report
      operationId: Reports_getMeetingQaReport
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        The question &amp; answer (Q&amp;A) feature for meetings lets attendees
        ask questions during the meeting and lets the other attendees answer
        their questions.


        Use this API to retrieve a report on question and answers from past
        meetings.   
           
         
        **Prerequisites:**  
         
        * Pro or a higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID before making an API request.
          name: meetingId
          in: path
          required: true
          schema:
            oneOf:
              - type: integer
                example: 5638296721
              - type: string
                example: 4444AAAiAAAAAiAiAiiAii==
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Meeting Q&amp;A report returned.  
             
            Only available for Paid or ZMP account: {accountId}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetMeetingQaReportResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            No permission.<br>

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User does not exist: {userId}.<br>

            **Error Code:** `3001` <br>
            Meeting {meetingId} not found or has expired.<br>

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/operationlogs:
    get:
      tags:
        - Reports
      summary: Get operation logs report
      operationId: Reports_getOperationLogsReport
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        The [Operations
        Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs)
        report allows you to audit admin and user activity, such as adding a new
        user, changing account settings, and deleting recordings.  
         
        Use this API to retrieve operation logs report for a specified period of
        time.  
         
        **Prerequisites:**  
         
        * Pro or higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            Start date in 'yyyy-mm-dd' format. The date range defined by the
            &quot;from&quot; and &quot;to&quot; parameters should only be one
            month as the report includes only one month worth of data at once.
          name: from
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-01'
        - description: End date.
          name: to
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-28'
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: >-
            **Optional**  
             
            Filter your response by a category type to see reports for a
            specific category.

            The value for this field can be one of the following:  
              `all`  
             `user`  
             `user_settings`  
             `account`  
             `billing`  
             `im`  
             `recording`  
             `phone_contacts`  
             `webinar`  
             `sub_account`  
             `role`  
             `zoom_rooms`
          name: category_type
          in: query
          required: false
          schema:
            type: string
            example: user
            enum:
              - all
              - user
              - user_settings
              - account
              - billing
              - im
              - recording
              - phone_contacts
              - webinar
              - sub_account
              - role
              - zoom_rooms
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Operation Logs Report Returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetOperationLogsReportResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            No permission.<br>

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/telephone:
    get:
      tags:
        - Reports
      summary: Get telephone reports
      operationId: Reports_getTelephoneReports
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        The [telephone
        report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports)
        allows you to view who dialed into meetings via phone (Audio
        Conferencing or SIP Connected Audio) and which number they dialed into
        and other details. Use this API to get telephone report for a specified
        period of time.


        **Prerequisites:**  
         
        * Pro or higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: |-
            Audio types:  
             `1` - Toll-free Call-in &amp; Call-out.  
             `2` - Toll   
             
            `3` - SIP Connected Audio
          name: type
          in: query
          required: false
          schema:
            type: string
            example: '33'
            default: '1'
            enum:
              - '1'
              - '2'
              - '3'
        - description: |-
            The type of date to query. 
            * `start_time` &mdash; Query by call start time. 
            * `end_time` &mdash; Query by call end time. 
            * `meeting_start_time` &mdash; Query by meeting start time. 
            * `meeting_end_time` &mdash; Query by meeting end time. 

            This value defaults to `start_time`.
          name: query_date_type
          in: query
          required: false
          schema:
            type: string
            example: start_time
            default: start_time
            enum:
              - start_time
              - end_time
              - meeting_start_time
              - meeting_end_time
        - description: >-
            Start date in 'yyyy-mm-dd' format. The date range defined by the
            &quot;from&quot; and &quot;to&quot; parameters should only be one
            month as the report includes only one month worth of data at once.
          name: from
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-01'
        - description: End date.
          name: to
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-28'
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            The page number of the current page in the returned records. This
            field is **not** available if the `query_date_type` parameter is the
            `meeting_start_time` or `meeting_end_time` value. 


            This field is deprecated. Use the `next_page_token` query parameter
            for pagination.
          name: page_number
          in: query
          required: false
          schema:
            type: integer
            example: 1
            default: 1
        - description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
      responses:
        '200':
          description: >-
            **HTTP Status Code:** `200`  
             
            Telephone report returned.  
             
            This is only available for paid account:{accountId}.  
             
            The requested report cannot be generated for this account because
            this account has not subscribed to toll-free audio conference
            plan.  
             
            Toll Report feature must be enabled to perform this action. Contact
            the Zoom Support team for help.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetTelephoneReportsResponse'
      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/upcoming_events:
    get:
      tags:
        - Reports
      summary: Get upcoming events report
      operationId: Reports_listUpcomingEventsReport
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Use this API to list upcoming meeting and/or webinar events within a
        specified period of time. The report's time range is limited to one
        month.


        **Prerequisites:** 

        * A Pro or higher plan


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            Start date in 'yyyy-mm-dd' format. The date range defined by the
            &quot;from&quot; and &quot;to&quot; parameters should only be one
            month as the report includes only one month worth of data at once.
          name: from
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-01'
        - description: End date.
          name: to
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-28'
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: |-
            The type of event to query. 
            * `meeting` &mdash; A meeting event. 
            * `webinar` &mdash; A webinar event. 
            * `all` &mdash; Both meeting and webinar events.

            This value defaults to `all`.
          name: type
          in: query
          required: false
          schema:
            type: string
            example: meeting
            default: all
            enum:
              - meeting
              - webinar
              - all
        - description: >-
            The group ID. To get a group ID, use the [**List
            groups**](/api-reference/zoom-api/methods#operation/groups) API. 

             **Note:** The API response will only contain meetings where the host is a member of the queried group ID.
          name: group_id
          in: query
          required: false
          schema:
            type: string
            example: TaVA8QKik_1233
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200`  
             
            Upcoming events report returned.  
             
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsListUpcomingEventsReportResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            This is only available for the paid account: {accountId} <br>

            **Error Code:** `300` <br>
            The next page token is invalid or expired.

            **Error Code:** `200` <br>
            No permission.<br>

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/users:
    get:
      tags:
        - Reports
      summary: Get active/inactive host reports
      operationId: Reports_getActiveInactiveHostReports
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Retrieve a host report for a specified period of time within the last
        six months.  

        The report time range is limited to a month. 


        You can specify the type of report and date range using the query
        parameters.  



        * The **Active Hosts** report displays a list of meetings, participants,
        and meeting minutes.

        An **active host** is defined as any user who has hosted at least one
        meeting during the during the month specified in the `from` and `to`
        range.



        * The **Inactive Hosts** report pulls a list of users who were not
        active during a specific period of time.   

        An **inactive host** is defined as any user who has not hosted any
        meetings during the specified period of time for the report. to be
        inactive.  




         
         
         
        **Prerequisites:**  
         
        * Pro or higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      parameters:
        - description: |-
            Active or inactive hosts.  
             `active` - Active hosts.   
             `inactive` - Inactive hosts.
          name: type
          in: query
          required: false
          schema:
            type: string
            example: active
            enum:
              - active
              - inactive
        - description: >-
            Start date in 'yyyy-mm-dd' format. The date range defined by the
            `from` and `to` parameters should only be one month as the report
            includes only one month worth of data at once.
          name: from
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-01'
        - description: End date.
          name: to
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-28'
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: The page number of the current page in the returned records.
          name: page_number
          in: query
          required: false
          schema:
            type: integer
            example: 1
            default: 1
        - description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
        - description: >-
            The group ID. To get a group ID, use the [**List
            groups**](/api-reference/zoom-api/methods#operation/groups) API. 

             **Note:** The API response will only contain users who are members of the queried group ID.
          name: group_id
          in: query
          required: false
          schema:
            type: string
            example: TaVA8QKik_1233
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Active or inactive hosts report returned.  
             
            Only available for Paid or ZMP account: {accountId}.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportsGetActiveInactiveHostReportsResponse
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `200` <br>
             No permission.<br>
            ’ <br>
      extensions:
        x-permissions:
          - UsageReport:Read
        x-macro-scopes:
          - report:read:admin
        x-granular-scopes:
          - report:read:list_users:admin
  /report/users/{userId}/meetings:
    get:
      tags:
        - Reports
      summary: Get meeting reports
      operationId: Reports_getMeetingReports
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Retrieve
        [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting)
        on past meetings and webinars for a specified time period. The time
        range for the report is limited to a month and the month must fall
        within the past six months.


        Meetings and webinars are returned only if they have two or more unique
        participants.    
           
         
        **Prerequisites:**  
         
        * Pro or higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            The user ID or email address of the user. For user-level apps, pass
            the `me` value.
          name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
                example: 6dfgdfgdg444447b0egga
              - type: string
                format: email
                example: jchill@example.com
              - type: string
                example: me
                enum:
                  - me
        - description: >-
            Start date in 'yyyy-mm-dd' format. The date range defined by the
            &quot;from&quot; and &quot;to&quot; parameters should only be one
            month as the report includes only one month worth of data at once.
          name: from
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-01'
        - description: End date.
          name: to
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2022-01-28'
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: >-
            The meeting type to query for: 

            * `past` &mdash; All past meetings. 

            * `pastOne` &mdash; A single past user meeting. 

            * `pastJoined` &mdash; All past meetings the account's users hosted
            or joined.
          name: type
          in: query
          required: false
          schema:
            type: string
            example: past
            default: past
            enum:
              - past
              - pastOne
              - pastJoined
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200`  
             
            Active or inactive hosts report returned.  
             
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetMeetingReportsResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            This is only available for paid account:{accountId}.<br>

            **Error Code:** `300` <br>
            The next page token is invalid or expired.

            **Error Code:** `200` <br>
            No permission.<br>

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User {userId} not exist or not belong to this account.

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/webinars/{webinarId}:
    get:
      tags:
        - Reports
      summary: Get webinar detail reports
      operationId: Reports_getWebinarDetailsReport
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Retrieve a
        [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting)
        containing past webinar details.    
           
         
        **Prerequisites:**  
         
        * Pro or higher plan with Webinar add-on.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: ABCDE12345
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Webinar details returned.  
             
            This is only available for paid account:{accountId}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetWebinarDetailsReportResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>
            User does not belong to this account:{accountId}.<br>

            **Error Code:** `12702` <br>
            Can not access a webinar a year ago.<br>

            **Error Code:** `200` <br>
            No permission.<br>

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `3001` <br>
            Meeting  {meetingId} not found or has expired.<br>

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/webinars/{webinarId}/participants:
    get:
      tags:
        - Reports
      summary: Get webinar participant reports
      operationId: Reports_webinarParticipantsList
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Get a detailed report on each webinar attendee. You can get webinar
        participant reports for the last 6 months. 

         **Prerequisites:** 
        * A Pro or a higher plan with Webinar add-on enabled.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the webinar
            UUID before making an API request.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: ABCDE12345
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        - description: >-
            The additional query parameters to include. 

            * `registrant_id` - Include the registrant's ID in the API response.
            The registrant ID is the webinar participant's unique ID.
          name: include_fields
          in: query
          required: false
          schema:
            type: string
            example: registrant_id
            enum:
              - registrant_id
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` 
            * Meeting participants report returned.  
             
            Only available for Paid or ZMP account: {accountId}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsWebinarParticipantsListResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account: {accountId} <br>
            **Error Code:** `12702` <br>
             Can not access a webinar a year ago.<br> <br>
            **Error Code:** `200` <br>
             No permission.<br> <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Webinar "{webinarId}" not found or has expired <br>
      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/webinars/{webinarId}/polls:
    get:
      tags:
        - Reports
      summary: Get webinar poll reports
      operationId: Reports_getWebinarPollReports
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        Retrieve a report on past [webinar
        polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  
           
         
        **Prerequisites:**  
         
        * Pro or a higher plan with Webinar add-on enabled.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the webinar
            UUID before making an API request.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: ABCDE12345
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Webinar polls report returned.  
             
            Missing webinar subscription plan.  
             
            Only available for Paid or ZMP account: {accountId}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetWebinarPollReportsResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>
            User does not belong to this account:{accountId}.<br>

            **Error Code:** `12702` <br>
            Can not access a webinar a year ago.<br>

            **Error Code:** `200` <br>
            No permission.<br>

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `3001` <br>
            Webinar  {webinarId} not found or has expired.<br>

      extensions:
        x-macro-scopes:
          - report:read:admin
  /report/webinars/{webinarId}/qa:
    get:
      tags:
        - Reports
      summary: Get webinar Q&A report
      operationId: Reports_getWebinarQAReport
      security:
        - openapi_oauth:
            - report:read:admin
          openapi_authorization: []
      description: >-
        The Question &amp; Answer (Q&amp;A) feature for webinars allows
        attendees to ask questions during the webinar and for the panelists,
        co-hosts and host to answer their questions.


        Use this API to retrieve a report on question and answers from past
        webinars.   
           
         
        **Prerequisites:**  
         
        * Pro or a higher plan with Webinar add-on enabled.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      parameters:
        - description: >-
            The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: ABCDE12345
      responses:
        '200':
          description: >-
            **HTTP Status Code:** `200`  
             
            Webinar Q&amp;A report returned.  
             
            This is only available for paid account:{accountId}.  
             
            A report cannot be generated for this account because this account
            has not subscribed to a webinar plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsGetWebinarQaReportResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>
            No permission.<br>

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User does not exist: {userId}.<br>

            **Error Code:** `3001` <br>
            Webinar  {webinarId} not found or has expired.<br>

      extensions:
        x-macro-scopes:
          - report:read:admin
  /sip_phones:
    get:
      tags:
        - SIP Phone
      summary: List SIP phones
      operationId: SipPhone_list
      security:
        - openapi_oauth:
            - sip_phone:read:admin
          openapi_authorization: []
      description: >-
        Zoom's Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to list SIP phones on an account.  
           
         
        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * User must enable SIP Phone Integration by contacting the
        [Sales](https://zoom.us/contactsales) team.  
          

        **Scopes:** `sip_phone:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          name: page_number
          in: query
          required: false
          schema:
            type: integer
            example: 1
            default: 1
        - description: >-
            User name or email address of a user. If this parameter is provided,
            only the SIP phone system integration enabled for that specific user
            will be returned. Otherwise, all SIP phones on an account will be
            returned.
          name: search_key
          in: query
          required: false
          schema:
            type: string
            example: jchill@example.com
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            type: integer
            example: 30
        - description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
      responses:
        '200':
          description: >-
            **HTTP Status Code:** `200`  
             
            SIP Phones listed successfully.


            **Error Code:** `200`  
             
            Permission missing: Enable SIP Phone Integration by contacting a
            Zoom Admin first.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipPhoneListResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

      extensions:
        x-macro-scopes:
          - sip_phone:read:admin
    post:
      tags:
        - SIP Phone
      summary: Enable SIP phone
      operationId: SipPhone_enableUserSipPhone
      security:
        - openapi_oauth:
            - sip_phone:write:admin
          openapi_authorization: []
      description: >-
        Zoom's Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to enable a user to use SIP phone.  
           
         
        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * The account owner or account admin must first enable SIP Phone
        Integration by contacting the [Sales](https://zoom.us/contactsales)
        team.  
          

        **Scopes:** `sip_phone:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipPhoneEnableUserSipPhoneRequest'
      responses:
        '201':
          description: |
            **HTTP Status Code:** `201`  
             
            SIP Phone Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipPhoneEnableUserSipPhoneResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>

            Permission missing: Enable SIP Phone Integration by contacting a
            Zoom Admin first.<br>


            **Error Code:** `300` <br>

            SIP Phone with the same email already exists.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User {userId} not exist or not belong to this account.

      extensions:
        x-macro-scopes:
          - sip_phone:write:admin
  /sip_phones/{phoneId}:
    delete:
      tags:
        - SIP Phone
      summary: Delete SIP phone
      operationId: SipPhone_deletePhone
      security:
        - openapi_oauth:
            - sip_phone:write:admin
          openapi_authorization: []
      description: >-
        Use this API to delete a Zoom account's SIP phone. 

         **Prerequisites**: 
        * Currently only supported on Cisco and Avaya PBX systems. 

        * The user must enable **SIP Phone Integration** by contacting the [Zoom
        Sales](https://zoom.us/contactsales) team.


        **Scopes:** `sip_phone:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The SIP phone ID. It can be retrieved from the List SIP Phones API.
          name: phoneId
          in: path
          required: true
          schema:
            type: string
            example: '123456'
      responses:
        '200':
          description: |-
            **Error Code:** `200`  
             Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            SIP Phone deleted.
      extensions:
        x-macro-scopes:
          - sip_phone:write:admin
    patch:
      tags:
        - SIP Phone
      summary: Update SIP phone
      operationId: SipPhone_updateSpecificPhone
      security:
        - openapi_oauth:
            - sip_phone:write:admin
          openapi_authorization: []
      description: >-
        Zoom's Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to update information of a specific SIP Phone on a Zoom account.  
           
         
        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * The account owner or account admin must first enable SIP Phone
        Integration by contacting the [Sales](https://zoom.us/contactsales)
        team.  
          

        **Scopes:** `sip_phone:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            The SIP phone ID. This can be retrieved from the List SIP Phones
            API.
          name: phoneId
          in: path
          required: true
          schema:
            type: string
            example: '123456'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipPhoneUpdateSpecificPhoneRequest'
      responses:
        '200':
          description: >
            **Error Code:** `200`  
             
            Permission missing: Enable SIP Phone Integration by contacting a
            Zoom Admin first.
        '204':
          description: |
            **HTTP Status Code:** `204`  
             
            SIP Phone information updated successfully.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

      extensions:
        x-macro-scopes:
          - sip_phone:write:admin
  /tsp:
    get:
      tags:
        - TSP
      summary: Get account's TSP information
      operationId: Tsp_getAccountInfo
      security:
        - openapi_oauth:
            - tsp:read:admin
          openapi_authorization: []
      description: >-
        Get information on Telephony Service Provider on an account level.  
           
         
        **Prerequisites:**  
         
        * A Pro or a higher plan.


        **Scopes:** `tsp:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            TSP account detail returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TspGetAccountInfoResponse'
      extensions:
        x-macro-scopes:
          - tsp:read:admin
    patch:
      tags:
        - TSP
      summary: Update account's TSP information
      operationId: Tsp_updateAccountTspInformation
      security:
        - openapi_oauth:
            - tsp:write:admin
          openapi_authorization: []
      description: >-
        Update information of the Telephony Service Provider set up on an
        account.  
         
        **Prerequisites**:  
         
        TSP account option should be enabled.  
         


        **Scopes:** `tsp:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        description: TSP Account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TspUpdateAccountTspInformationRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**  
             
            TSP Account updated.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>
            Invalid parameter: tsp_bridge.

      extensions:
        x-macro-scopes:
          - tsp:write:admin
  /users/{userId}/tsp:
    get:
      tags:
        - TSP
      summary: List user's TSP accounts
      operationId: Tsp_listUserTspAccounts
      security:
        - openapi_oauth:
            - tsp:read:admin
            - tsp:read
          openapi_authorization: []
      description: >-
        A user can have a maximum of two TSP accounts. Use this API to list all
        TSP accounts of a user.  
           
         


        **Scopes:** `tsp:read:admin`,`tsp:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            The user ID or email address of the user. For user-level apps, pass
            the `me` value.
          name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
                example: 6dfgdfgdg444447b0egga
              - type: string
                format: email
                example: jchill@example.com
              - type: string
                example: me
                enum:
                  - me
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**  
             
            TSP account list returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TspListUserTspAccountsResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `2024` <br>
            Account has not enabled TSP.

        '404':
          description: >+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>

            User does not exist: $userId.<br>


            **Error Code:** `1120` <br>

            A valid invitation to join the Zoom account was not found for this
            user.<br>

            This error is thrown if you added a user in your account but the
            user did not accept the invitation on time and the invitation
            expired - thus making the userId invalid.

      extensions:
        x-macro-scopes:
          - tsp:read:admin
          - tsp:read
    post:
      tags:
        - TSP
      summary: Add a user's TSP account
      operationId: Tsp_addUserTspAccount
      security:
        - openapi_oauth:
            - tsp:write:admin
            - tsp:write
          openapi_authorization: []
      description: >-
        Add a user's TSP account.  
           
         


        **Scopes:** `tsp:write:admin`,`tsp:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            The user ID or email address of the user. For user-level apps, pass
            the `me` value.
          name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
                example: 6dfgdfgdg444447b0egga
              - type: string
                format: email
                example: jchill@example.com
              - type: string
                example: me
                enum:
                  - me
      requestBody:
        description: TSP account.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TspAddUserTspAccountRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`  
             
            TSP account added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TspAddUserTspAccountResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `2024` <br>
            Account has not enabled TSP.<br>

            **Error Code:** `300` <br>
            Media link is required for AT&T TSP accounts.<br>

            **Error Code:** `300` <br>
            You can add a max of two tsp configs.

        '404':
          description: >+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>

            User does not exist: $userId.<br>


            **Error Code:** `1120` <br>

            A valid invitation to join the Zoom account was not found for this
            user.<br>

            This error is thrown if you added a user in your account but the
            user did not accept the invitation on time and the invitation
            expired - thus making the userId invalid.

      extensions:
        x-macro-scopes:
          - tsp:write:admin
          - tsp:write
  /users/{userId}/tsp/settings:
    patch:
      tags:
        - TSP
      summary: Set global dial-in URL for a TSP user
      operationId: Tsp_setGlobalDialInUrl
      security:
        - openapi_oauth:
            - tsp:write:admin
            - tsp:write
          openapi_authorization: []
      description: >-
        A global dial-in page can provide a list of global access numbers using
        which audio conferencing can be conducted. By calling this API, you can
        set the url for the global dial-in page of a user whose Zoom account has
        TSP and special TSP with third-party audio conferencing options enabled.
        &lt;p&gt;&lt;/p&gt;



        **Scopes:** `tsp:write:admin`,`tsp:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The userId or email address of the user.
          name: userId
          in: path
          required: true
          schema:
            type: string
            example: 6dfgdfgdg444447b0egga
      requestBody:
        description: Global dial-in URL of the user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TspSetGlobalDialInUrlRequest'
      responses:
        '204':
          description: |-
            **Status Code:** `204` **No Content**   
             
            URL set successfully.
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `2000` <br>

            Not TSP special account.<br>


            Ths error means that the account does not have special TSP
            privilege. Contact Zoom Developer Support for details.<br>


            **Error Code:** `2024` <br>

            Account not enable TSP

        '404':
          description: >+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>

            User {userId} not exist or not belong to this account.


            **Error Code:** `1120` <br>

            Invite not exist.


            This error is thrown if you added a user in your account but the
            user did not accept the invitation on time and the invitation
            expired - thus making the userId invalid.

      extensions:
        x-macro-scopes:
          - tsp:write:admin
          - tsp:write
  /users/{userId}/tsp/{tspId}:
    get:
      tags:
        - TSP
      summary: Get a user's TSP account
      operationId: Tsp_getUserTspAccount
      security:
        - openapi_oauth:
            - tsp:read:admin
            - tsp:read
          openapi_authorization: []
      description: >-
        Each user can have a maximum of two TSP accounts. Use this API to
        retrieve details of a specific TSP account enabled for a specific
        user.  
           
         


        **Scopes:** `tsp:read:admin`,`tsp:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            The user ID or email address of the user. For user-level apps, pass
            the `me` value.
          name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
                example: 6dfgdfgdg444447b0egga
              - type: string
                format: email
                example: jchill@example.com
              - type: string
                example: me
                enum:
                  - me
        - description: TSP account ID.
          name: tspId
          in: path
          required: true
          schema:
            type: string
            example: '1'
            enum:
              - '1'
              - '2'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            TSP account retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TspGetUserTspAccountResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>
            The TSP id provided does not exist.<br>

            **Error Code:** `300` <br>
            TSP Config does not exist.<br>

            **Error Code:** `2024` <br>
            Account has not enabled TSP.

        '404':
          description: >+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>

            User does not exist: $userId.<br>


            **Error Code:** `1120` <br>

            A valid invitation to join the Zoom account was not found for this
            user.<br>

            This error is thrown if you added a user in your account but the
            user did not accept the invitation on time and the invitation
            expired - thus making the userId invalid.

      extensions:
        x-macro-scopes:
          - tsp:read:admin
          - tsp:read
    delete:
      tags:
        - TSP
      summary: Delete a user's TSP account
      operationId: Tsp_deleteUserTspAccount
      security:
        - openapi_oauth:
            - tsp:write:admin
            - tsp:write
          openapi_authorization: []
      description: >-
        Delete a user's TSP account.  
           
         


        **Scopes:** `tsp:write:admin`,`tsp:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            The user ID or email address of the user. For user-level apps, pass
            the `me` value.
          name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
                example: 6dfgdfgdg444447b0egga
              - type: string
                format: email
                example: jchill@example.com
              - type: string
                example: me
                enum:
                  - me
        - description: TSP account ID.
          name: tspId
          in: path
          required: true
          schema:
            type: string
            example: '1'
            enum:
              - '1'
              - '2'
      responses:
        '204':
          description: |-
            **Status Code:** `204` **No Content**  
             
            TSP account deleted.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `2024` <br>
            Account not enable TSP.<br>

            **Error Code:** `300` <br>
            The TSP id provided does not exist.<br>

            **Error Code:** `300` <br>
            TSP Config does not exist.<br>

            **Error Code:** `300` <br>
            At least one tsp config must be available.

        '404':
          description: >+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>

            User does not exist: $userId.<br>


            **Error Code:** `1120` <br>

            A valid invitation to join the Zoom account was not found for this
            user.<br>

            This error is thrown if you added a user in your account but the
            user did not accept the invitation on time and the invitation
            expired - thus making the userId invalid.

      extensions:
        x-macro-scopes:
          - tsp:write:admin
          - tsp:write
    patch:
      tags:
        - TSP
      summary: Update a TSP account
      operationId: Tsp_updateUserTspAccount
      security:
        - openapi_oauth:
            - tsp:write:admin
            - tsp:write
          openapi_authorization: []
      description: >-
        Update a user's TSP account.  
           
         


        **Scopes:** `tsp:write:admin`,`tsp:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: >-
            The user ID or email address of the user. For user-level apps, pass
            the `me` value.
          name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
                example: 6dfgdfgdg444447b0egga
              - type: string
                format: email
                example: jchill@example.com
              - type: string
                example: me
                enum:
                  - me
        - description: TSP account ID.
          name: tspId
          in: path
          required: true
          schema:
            type: string
            example: '1'
            enum:
              - '1'
              - '2'
      requestBody:
        description: TSP account.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TspUpdateUserTspAccountRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:**`204` **No Content**  
             
            TSP account updated.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `2024` <br>
            Account has not enabled TSP.<br>

            **Error Code:** `300` <br>
            The TSP id provided does not exist.<br>

            **Error Code:** `300` <br>
            TSP Config does not exist.<br>

            **Error Code:** `300` <br>
            At least one tsp config must be available.<br>

            **Error Code:** `300` <br>
            Media link is required for AT&T TSP accounts.

            **Error Code:** `300` <br>
            Invalid parameter: tsp_bridge.

        '404':
          description: >+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>

            User does not exist: $userId.<br>


            **Error Code:** `1120` <br>

            A valid invitation to join the Zoom account was not found for this
            user.<br>

            This error is thrown if you added a user in your account but the
            user did not accept the invitation on time and the invitation
            expired - thus making the userId invalid.

      extensions:
        x-macro-scopes:
          - tsp:write:admin
          - tsp:write
  /tracking_fields:
    get:
      tags:
        - Tracking Field
      summary: List tracking fields
      operationId: TrackingField_list
      security:
        - openapi_oauth:
            - tracking_fields:read:admin
          openapi_authorization: []
      description: >-
        Use this API to list all the [tracking
        fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
        on your Zoom account. Tracking fields let you analyze usage by various
        fields within an organization. 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            List of Tracking Fields returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingFieldListResponse'
      extensions:
        x-macro-scopes:
          - tracking_fields:read:admin
    post:
      tags:
        - Tracking Field
      summary: Create a tracking field
      operationId: TrackingField_createField
      security:
        - openapi_oauth:
            - tracking_fields:write:admin
          openapi_authorization: []
      description: >-
        Use this API to create a new [tracking
        field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields).
        Tracking fields let you analyze usage by various fields within an
        organization. When scheduling a meeting, tracking fields will be
        included in the meeting options. 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        description: Tracking Field
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingFieldCreateFieldRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`  
             
            Tracking Field created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingFieldCreateFieldResponse'
      extensions:
        x-macro-scopes:
          - tracking_fields:write:admin
  /tracking_fields/{fieldId}:
    get:
      tags:
        - Tracking Field
      summary: Get a tracking field
      operationId: TrackingField_get
      security:
        - openapi_oauth:
            - tracking_fields:read:admin
          openapi_authorization: []
      description: >-
        Use this API to return information about a [tracking
        field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The Tracking Field ID
          name: fieldId
          in: path
          required: true
          schema:
            type: string
            example: a32CJji-weJ92
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Tracking Field object returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingFieldGetResponse'
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - tracking_fields:read:admin
    delete:
      tags:
        - Tracking Field
      summary: Delete a tracking field
      operationId: TrackingField_deleteField
      security:
        - openapi_oauth:
            - tracking_fields:write:admin
          openapi_authorization: []
      description: >-
        Use this API to delete a [tracking
        field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The Tracking Field ID
          name: fieldId
          in: path
          required: true
          schema:
            type: string
            example: a32CJji-weJ92
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Tracking Field deleted
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - tracking_fields:write:admin
    patch:
      tags:
        - Tracking Field
      summary: Update a tracking field
      operationId: TrackingField_update
      security:
        - openapi_oauth:
            - tracking_fields:write:admin
          openapi_authorization: []
      description: >-
        Use this API to update a [tracking
        field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The Tracking Field ID
          name: fieldId
          in: path
          required: true
          schema:
            type: string
            example: a32CJji-weJ92
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingFieldUpdateRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Tracking Field updated
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - tracking_fields:write:admin
  /live_webinars/{webinarId}/chat/messages/{messageId}:
    delete:
      tags:
        - Webinars
      summary: Delete a live webinar message
      operationId: Webinars_deleteMessageById
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Deletes a message in a live webinar based on ID. 


        **Prerequisites:** 

        * Have Zoom enable the DLP for the in-meeting chat feature to use this
        API.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: >-
            The live webinar chat message's unique identifier (UUID), in
            base64-encoded format.
          name: messageId
          in: path
          required: true
          schema:
            type: string
            example: MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==
        - description: >-
            The live webinar chat file's universally unique identifier (UUID),
            in base64-encoded format. Separate multiple values with commas.
          name: file_ids
          in: query
          required: false
          schema:
            type: string
            example: >-
              MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==,MS17NDQ0OEU5MjMtM0JFOS1CMDA1LTQ0NDAtQjdGOTU0Rjk5MTkyfQ==
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            Webinar chat message deleted.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `200` <br>
             * Only available for paid accounts. * DLP is not enabled. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Webinar  {webinarId} does not exist. <br>
      extensions:
        x-permissions: []
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
  /past_webinars/{webinarId}/absentees:
    get:
      tags:
        - Webinars
      summary: Get webinar absentees
      operationId: Webinars_listAbsentees
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        List absentees of a webinar.  
           
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      parameters:
        - description: >-
            The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: ABCDE12345
        - description: The meeting or webinar occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
      responses:
        '200':
          description: >-
            **HTTP Status Code:** `200`  
             
            Success.  
             **Error Code:** `200`  
             
            Webinar plan subscription is missing. Enable webinar for this user
            once the subscription is added:{userId}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListAbsenteesResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             The request could not be completed because you have provided an invalid occurrence ID: {occurrenceId}<br> <br>
            **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}.<br> <br>
            **Error Code:** `3000` <br>
             This Webinar has not registration required: {webinarUUID} <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account.<br> <br>
            **Error Code:** `3001` <br>
             Meeting ID is invalid or not end. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_absentees
          - webinar:read:list_absentees:admin
  /past_webinars/{webinarId}/instances:
    get:
      tags:
        - Webinars
      summary: List past webinar instances
      operationId: Webinars_listPastInstances
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        List past webinar instances.  
           
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            List of past webinar instances returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListPastInstancesResponse'
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
             Not Found 

             
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_past_instances
          - webinar:read:list_past_instances:admin
  /past_webinars/{webinarId}/participants:
    get:
      tags:
        - Webinars
      summary: List webinar participants
      operationId: Webinars_listParticipants
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        Retrieve a list of all the participants who attended a webinar hosted in
        the past. 


        **Prerequisites:** 

        * A Pro or higher plan with a webinar add-on.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: >-
            The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API returns a response for the
            latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: ABCDE12345
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**  
             
            Participants list returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListParticipantsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `200` <br>
             No permission.<br>
            Only available for paid account: {accountId}.<br><br> <br>
            **Error Code:** `300` <br>
             The next page token is invalid or expired. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Webinar does not exist. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_past_participants:admin
          - webinar:read:list_past_participants
  /past_webinars/{webinarId}/polls:
    get:
      tags:
        - Webinars
      summary: List past webinar poll results
      operationId: Webinars_listPollResults
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        The polling feature for webinar lets you create single-choice or
        multiple-choice polling questions for your webinars. This API endpoint
        retrieves the results for webinar polls of a specific webinar.


        **Prerequisites:**  
         
        * [Webinar license](https://zoom.us/webinar)  
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: >-
            The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API returns a response for the
            latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: ABCDE12345
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**  
             
            Polls returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListPollResultsResponse'
        '401':
          description: |
            **HTTP Status Code:** `401` <br>
             Unauthorized 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Webinar ID is invalid or not end.<br>
            This webinar id does not belong to you:{webinarId}. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_past_polls
          - webinar:read:list_past_polls:admin
  /past_webinars/{webinarId}/qa:
    get:
      tags:
        - Webinars
      summary: List Q&As of a past webinar
      operationId: Webinars_listPastWebinarQa
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        List the Q&amp;A of a specific past webinar. 


        The [question &amp; answer
        (Q&amp;A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer)
        feature for webinars lets attendees ask questions during the webinar and
        for the panelists, co-hosts and host to answer their questions. 


        **Prerequisites**  
         
        * [Webinar license](https://zoom.us/webinar)  
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: >-
            The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API returns a response for the
            latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: ABCDE12345
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**  
             
            Q&amp;A returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListPastWebinarQaResponse'
        '401':
          description: |
            **HTTP Status Code:** `401` <br>
             Unauthorized 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Webinar ID is invalid or not end.<br>
            This webinar id does not belong to you:{webinarId}. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:past_qa
          - webinar:read:past_qa:admin
  /users/{userId}/webinar_templates:
    get:
      tags:
        - Webinars
      summary: List webinar templates
      operationId: Webinars_listWebinarTemplates
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        Display a list of a user's [webinar
        templates](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates).
        For user-level apps, pass [the `me`
        value](/docs/api-reference/using-zoom-apis#mekeyword) instead of the
        `userId` parameter. When you schedule a webinar, save the settings for
        that webinar as a template for scheduling future webinars.  To use a
        template when scheduling a webinar, use the `id` value in this API
        response in the `template_id` field of the [**Create a
        webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate)
        API. **Prerequisites:** * A Pro or a higher account with the [Zoom
        Webinar plan](https://zoom.us/pricing/webinar).


        **Scopes:** `webinar:read:admin`,`webinar:read`
      parameters:
        - description: >-
            The user's ID. To get a user's ID, use the [**List
            users**](/docs/api-reference/zoom-api/ma#operation/users) API. For
            user-level apps, pass the `me` value instead of the user ID value.
          name: userId
          in: path
          required: true
          schema:
            type: string
            example: abcD3ojfdbjfg
      responses:
        '200':
          description: >-
            **HTTP Status Code:** `200` **OK**  List of existing templates
            returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListWebinarTemplatesResponse'
        '400':
          description: >
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `200` <br>
             Cannot use webinar API, you need to subscribe webinar plan and then enable webinar for this user:{userId}.<br> <br>
            **Error Code:** `1001` <br>
             * User not exist: {userId}.
            * User {userId} does not exist or does not belong to this account.
            <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_templates
          - webinar:read:list_templates:admin
    post:
      tags:
        - Webinars
      summary: Create a webinar template
      operationId: Webinars_createWebinarTemplate
      security:
        - openapi_oauth:
            - webinar:write:admin
            - webinar:write
          openapi_authorization: []
      description: >-
        Use this API to create a webinar template from an existing webinar. 




        **Scopes:** `webinar:write:admin`,`webinar:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: >-
            The user ID retrievable from the [List
            users](/api-reference/zoom-api/methods#operation/users) API.
          name: userId
          in: path
          required: true
          schema:
            type: string
            example: 30R7kT7bTIKSNUFEuH_Qlg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsCreateWebinarTemplateRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`  
             
            Webinar template created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsCreateWebinarTemplateResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `200` <br>

            Webinar plan is missing. You must subscribe to the webinar plan and
            enable webinars for this user in order to perform this action:
            {userId}.


            **Error Code:** `300` <br>

            You can only create up to 40 webinar templates.


            **Error Code:** `3000` <br>

            * Cannot access meeting info. 

            * Webinar template name already exists: {templateName}.


            **Error Code:** `3001` <br>

            Webinar does not exist: {webinarId}.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            * User does not exist. 
            * User {userId} does not exist or does not belong to this account.

      extensions:
        x-macro-scopes:
          - webinar:write:admin
          - webinar:write
  /users/{userId}/webinars:
    get:
      tags:
        - Webinars
      summary: List webinars
      operationId: Webinars_listWebinars
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        List all the webinars scheduled by or on behalf a webinar host. For
        user-level apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter. 

         Zoom users with a [webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars let a host broadcast a Zoom meeting to up to 10,000 attendees. 

        **Note** This API only returns a user's [unexpired
        webinars](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). 

         **Prerequisites** 
        * A Pro or higher plan with the webinar add-on.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: >-
            The user's user ID or email address. For user-level apps, pass the
            `me` value.
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            The type of webinar. 

            * `scheduled` - All valid previous (unexpired) webinars, live
            webinars, and upcoming scheduled webinars. 

            * `upcoming` - All upcoming webinars, including live webinars.
          name: type
          in: query
          required: false
          schema:
            type: string
            example: scheduled
            default: scheduled
            enum:
              - scheduled
              - upcoming
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            **Deprecated** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          name: page_number
          in: query
          required: false
          schema:
            type: integer
            example: 1
            default: 1
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            List of webinar objects returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListWebinarsResponse'
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} not exist or not belong to this account. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_webinars
          - webinar:read:list_webinars:admin
    post:
      tags:
        - Webinars
      summary: Create a webinar
      operationId: Webinars_createWebinar
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Schedule a webinar for a user who is a webinar host. For user-level
        apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter. 

         Webinars allow a host to broadcast a Zoom meeting to up to 10,000 attendees. 

        **Rate limit:**

        Up to a maximum of **100 requests per day**. The rate limit is applied
        to the `userId` of the **webinar host** used to make the request. 


        **Prerequisites:** 

        * A Pro or higher plan with a [Webinar plan](https://zoom.us/webinar)
        add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: >-
            The user ID or email address of the user. For user-level apps, pass
            the `me` value.
          name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsCreateWebinarRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`  
             
            Webinar created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsCreateWebinarResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request  

             **Error Code:** `200` <br>
             Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}. <br>
            **Error Code:** `300` <br>
             The value that you entered for the schedule_for field is invalid. Enter a valid value and try again. <br>
            **Error Code:** `300` <br>
             Can not schedule simulive webinar for others. <br>
            **Error Code:** `300` <br>
             Account hasn't enabled Simulive Webinar. <br>
            **Error Code:** `300` <br>
             Record file does not exist. <br>
            **Error Code:** `3000` <br>
             You cannot schedule a meeting for {userId}. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found  

             **Error Code:** `1001` <br>
             User does not exist: {userId}. <br>
        '429':
          description: |
            **HTTP Status Code:** `429` <br>
             Too Many Requests  

             **Error Code:** `429` <br>
             A maximum of ({rateLimitNumber}) webinars can be created and updated for a single user in one day. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:write:webinar
          - webinar:write:webinar:admin
  /webinars/{webinarId}:
    get:
      tags:
        - Webinars
      summary: Get a webinar
      operationId: Webinars_getDetails
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        Get details for a scheduled Zoom Webinar.
          
           
         
        **Prerequisites:**

        * Pro or higher plan with a Webinar add-on.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID or universally unique ID (UUID).
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: '95204914252'
        - description: >-
            Unique identifier for an occurrence of a recurring webinar.
            [Recurring
            webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
            can have a maximum of 50 occurrences. When you create a recurring
            Webinar using [**Create a
            webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate)
            API, you can retrieve the Occurrence ID from the response of the API
            call.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648538280000'
        - description: >-
            Set the value of this field to `true` if you would like to view
            Webinar details of all previous occurrences of a recurring Webinar.
          name: show_previous_occurrences
          in: query
          required: false
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsGetDetailsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request  

             **Error Code:** `300` <br>
             Invalid webinar ID. <br>
            **Error Code:** `200` <br>
             Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user to perform this action. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found  

             **Error Code:** `3001` <br>
             Webinar does not exist: {webinarId}. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:webinar
          - webinar:read:webinar:admin
    delete:
      tags:
        - Webinars
      summary: Delete a webinar
      operationId: Webinars_removeWebinar
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Delete a webinar. 



        **Prerequisites:**  
         
        * Pro or higher plan with the webinar add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: The meeting or webinar occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
        - description: >-
            `true` - Notify panelists and registrants about the webinar
            cancellation via email. 


            `false` - Do not send any email notification to webinar registrants
            and panelists. 


            The default value of this field is `false`.
          name: cancel_webinar_reminder
          in: query
          required: false
          schema:
            type: boolean
            example: true
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
             Webinar deleted.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}.<br> <br>
            **Error Code:** `3002` <br>
             Sorry, you cannot delete this webinar since it is in progress.<br> <br>
            **Error Code:** `3003` <br>
             You are not the webinar host.<br> <br>
            **Error Code:** `3007` <br>
             Sorry, you cannot delete this webinar since it has ended.<br> <br>
            **Error Code:** `3018` <br>
             Not allowed to delete PMI.<br> <br>
            **Error Code:** `3037` <br>
             Not allowed to delete PAC.<br> <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account.<br> <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:delete:webinar
          - webinar:delete:webinar:admin
    patch:
      tags:
        - Webinars
      summary: Update a webinar
      operationId: Webinars_updateScheduledWebinar
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Make updates to a scheduled webinar. 


        **100 requests per day**. The rate limit is applied to the `userId` of
        the **webinar host** used to make the request. 


        **Prerequisites** 

        * A Pro or higher plan with a webinar add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: >-
            Webinar occurrence ID. Support change of agenda, start time,
            duration, and settings `host_video`, `panelist_video`, `hd_video,
            watermark`, `auto_recording`.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648538280000'
      requestBody:
        description: Webinar.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsUpdateScheduledWebinarRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Webinar updated.
        '400':
          description: >
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account: {accountId} <br>
            **Error Code:** `3003` <br>
             * You are not the meeting host. 
            * Users in "{0}" have been blocked from joining meetings and
            webinars. To unblock them, go to the "Settings" page in the Zoom web
            portal and update the "Block users in specific domains from joining
            meetings and webinars" setting. <br>

            **Error Code:** `3000` <br>
             You cannot update or delete simulive webinars that have started using this method. <br>
            **Error Code:** `300` <br>
             The value that you entered for the schedule_for field is invalid. Enter a valid value and try again. <br>
            **Error Code:** `200` <br>
             Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account.<br> <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:update:webinar
          - webinar:update:webinar:admin
  /webinars/{webinarId}/batch_registrants:
    post:
      tags:
        - Webinars
      summary: Perform batch registration
      operationId: Webinars_createBatchRegistrants
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Register up to 30 registrants at once for a scheduled webinar that
        requires
        [registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration).   
         

        **Prerequisites:**  
         
        * The webinar host must be a licensed user.

        * The webinar should be type `5`, a scheduled webinar. Other types of
        webinars are not supported by this API.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      parameters:
        - description: The webinar's unique identifier.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: '97871060099'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsCreateBatchRegistrantsRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `200` **OK**   
             
            Registrants added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsCreateBatchRegistrantsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `200` <br>
             Webinar plan is missing. You must subscribe to the Webinar plan and enable webinars for the "{0}" user to perform this action. <br>
            **Error Code:** `300` <br>
             This API can only be used for scheduled webinars (type 5). Batch registration is not supported for other webinar types. <br>
            **Error Code:** `3038` <br>
             The webinar is over. You cannot register now. If you have any questions, contact the Webinar host. <br>
            **Error Code:** `3000` <br>
             Registration not enabled for this webinar: {0} <br>
            **Error Code:** `3000` <br>
             You have reached the limit for the number of attendees you can add. Contact Zoom Support for more information. <br>
            **Error Code:** `3000` <br>
             The Zoom REST API does not support paid registration. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Webinar does not exist: {0}.<br><br> <br>
            **Error Code:** `3043` <br>
             Webinar has reached maximum attendee capacity.<br><br> <br>
            **Error Code:** `404` <br>
             Registration has not been enabled for this meeting: {meetingId}. <br>
        '429':
          description: |-
            **HTTP Status Code:** `429` <br>
             Too Many Requests 

             
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:write:batch_registrants
          - webinar:write:batch_registrants:admin
  /webinars/{webinarId}/branding:
    get:
      tags:
        - Webinars
      summary: Get webinar's session branding
      operationId: Webinars_getSessionBranding
      security:
        - openapi_oauth:
            - webinar:read
            - webinar:read:admin
          openapi_authorization: []
      description: >-
        Use this API to get the webinar's [Session
        Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
        information. Session branding lets hosts visually customize a webinar by
        setting a webinar wallpaper that displays behind video tiles. Session
        branding also lets hosts set the Virtual Background for and apply name
        tags to hosts, alternative hosts, panelists, interpreters, and
        speakers. 

         **Prerequisites:** 
        * A Pro or higher plan with the Webinar add-on. 

        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:read`,`webinar:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Webinar session branding returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsGetSessionBrandingResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>
            User does not belong to this account: {accountId}

            **Error Code:** `3000` <br>
            You cannot enable session branding for this webinar.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User "{userId}" does not exist or does not belong to this account.

            **Error Code:** `3001` <br>
            Webinar "{webinarId}" not found or has expired.

      extensions:
        x-macro-scopes:
          - webinar:read
          - webinar:read:admin
  /webinars/{webinarId}/branding/name_tags:
    post:
      tags:
        - Webinars
      summary: Create a webinar's branding name tag
      operationId: Webinars_createBrandingNameTag
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Use this API to create a webinar's [Session
        Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
        name tag. There's a limit of 20 name tags per webinar.
        **Prerequisites:** 

        *  The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsCreateBrandingNameTagRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Name tag created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsCreateBrandingNameTagResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `3000` <br>

            This webinar does not have session branding enabled.<br>

            You have reached the limit for the number of name tags you can add
            for this webinar. The limit is 20.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
    delete:
      tags:
        - Webinars
      summary: Delete a webinar's branding name tag
      operationId: Webinars_deleteBrandingNameTag
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Use this API to delete a webinar's [Session
        Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
        name tag. 

         **Prerequisites:** 
        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: A comma-separated list of the name tag IDs to delete.
          name: name_tag_ids
          in: query
          required: false
          schema:
            type: string
            example: zazQjwDuQkS3Q2EprNd7jQ,AsfE0cx2TFSfqqKbE0BUZg
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            * No content. 
            * Name tag(s) deleted.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>
            Invalid parameter: name_tag_ids

            **Error Code:** `3000` <br>
            This webinar does not have session branding enabled.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
  /webinars/{webinarId}/branding/name_tags/{nameTagId}:
    patch:
      tags:
        - Webinars
      summary: Update a webinar's branding name tag
      operationId: Webinars_updateBrandingNameTag
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Use this API to update a webinar's [Session
        Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
        name tag. **Prerequisites:** 

        *  The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: The name tag's ID.
          name: nameTagId
          in: path
          required: true
          schema:
            type: string
            example: J0sFXN2PSOCGrqTqLRwgAQ
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsUpdateBrandingNameTagRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            * No content. 
            * Name tag updated.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `3000` <br>
            This webinar does not have session branding enabled.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

      extensions:
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
  /webinars/{webinarId}/branding/virtual_backgrounds:
    post:
      tags:
        - Webinars
      summary: Upload a webinar's branding Virtual Background
      operationId: Webinars_uploadBrandingVirtualBackground
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Use this API to upload a webinar's session branding [Virtual
        Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background).
        Hosts and panelists can select and use these Virtual Backgrounds during
        the webinar. Branding Virtual Background files have the following
        restrictions: 

        * A webinar cannot exceed more than 10 Virtual Background files. 

        * You can only upload image files that are in JPG/JPEG, GIF or PNG
        format. 

        * The Virtual Background file size cannot exceed 15 megabytes (MB). 

         **Prerequisites:** 
        *  The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/WebinarsUploadBrandingVirtualBackgroundRequest
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Virtual Background uploaded.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WebinarsUploadBrandingVirtualBackgroundResponse
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `3000` <br>
            This webinar does not have session branding enabled.

            **Error Code:** `120` <br>
            * No file uploaded. Verify that a file has been uploaded. 
            * File size cannot exceed 15M. 
            * A maximum of 10 files are allowed for a webinar. 
            * Only JPG/JPEG, GIF, or PNG image files can be uploaded.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User "{userId}" does not exist or does not belong to this account.

            **Error Code:** `3001` <br>
            Webinar "{webinarId}" not found or has expired.

      extensions:
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
    delete:
      tags:
        - Webinars
      summary: Delete a webinar's branding Virtual Backgrounds
      operationId: Webinars_deleteBrandingVirtualBackground
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Use this API to delete a webinar's session branding [Virtual
        Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). 

         **Prerequisites:** 
        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: A comma-separated list of the Virtual Background file IDs to delete.
          name: ids
          in: query
          required: false
          schema:
            type: string
            example: zazQjwDuQkS3Q2EprNd7jQ,AsfE0cx2TFSfqqKbE0BUZg
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            * No content. 
            * Virtual Background file(s) deleted.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>
            User does not belong to this account: {accountId}

            **Error Code:** `300` <br>
            Invalid parameter: ids

            **Error Code:** `3000` <br>
            This webinar does not have session branding enabled.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User "{userId}" does not exist or does not belong to this account.

            **Error Code:** `3001` <br>
            Webinar "{webinarId}" not found or has expired.

      extensions:
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
    patch:
      tags:
        - Webinars
      summary: Set webinar's default branding Virtual Background
      operationId: Webinars_setDefaultBrandingVirtualBackground
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Use this API to set a webinar's default session branding [Virtual
        Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). 

         **Prerequisites:** 
        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The Virtual Background file ID to update.
          name: id
          in: query
          required: false
          schema:
            type: string
            example: zazQjwDuQkS3Q2EprNd7jQ
        - description: >-
            Whether to set the Virtual Background file as the new default for
            all panelists. This includes panelists not currently assigned a
            default Virtual Background.
          name: set_default_for_all_panelists
          in: query
          required: false
          schema:
            type: boolean
            example: true
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            * No content. 
            * Virtual Background updated.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>
            User does not belong to this account: {accountId}

            **Error Code:** `300` <br>
            Invalid parameter: {id}

            **Error Code:** `3000` <br>
            This webinar does not have session branding enabled.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User "{userId}" does not exist or does not belong to this account.

            **Error Code:** `3001` <br>
            Webinar "{webinarId}" not found or has expired.

      extensions:
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
  /webinars/{webinarId}/branding/wallpaper:
    post:
      tags:
        - Webinars
      summary: Upload a webinar's branding wallpaper
      operationId: Webinars_uploadBrandingWallpaper
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Use this API to upload a webinar's session branding wallpaper file.
        Webinar branding wallpaper files have the following requirements: 

        * A webinar can only have one wallpaper file. 

        * You can only upload image files that are in JPG/JPEG, GIF, or PNG
        format. 

        * Image files must be 16:9 ratio. The recommended image size is 1920 x
        1080 pixels (px). 

        * The wallpaper file size cannot exceed 15 megabytes (MB). 

         **Prerequisites:** 
        *  The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebinarsUploadBrandingWallpaperRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Webinar wallpaper uploaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsUploadBrandingWallpaperResponse'
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `3000` <br>
            This webinar does not have session branding enabled.

            **Error Code:** `120` <br>
            * No file uploaded. Verify that a file has been uploaded. 
            * File size cannot exceed 15M. 
            * A maximum of 10 files are allowed for a webinar. 
            * Only JPG/JPEG, GIF, or PNG image files can be uploaded.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User "{userId}" does not exist or does not belong to this account.

            **Error Code:** `3001` <br>
            Webinar "{webinarId}" not found or has expired.

      extensions:
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
    delete:
      tags:
        - Webinars
      summary: Delete a webinar's branding wallpaper
      operationId: Webinars_deleteBrandingWallpaper
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Use this API to delete a webinar's session branding wallpaper file. 

         **Prerequisites:** 
        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
            * No content. 
            * Webinar wallpaper deleted.
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `1010` <br>
            User does not belong to this account: {accountId}

            **Error Code:** `300` <br>
            Invalid parameter: {id}

            **Error Code:** `3000` <br>
            This webinar does not have session branding enabled.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `1001` <br>
            User "{userId}" does not exist or does not belong to this account.

            **Error Code:** `3001` <br>
            Webinar "{webinarId}" not found or has expired.

      extensions:
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
  /webinars/{webinarId}/invite_links:
    post:
      tags:
        - Webinars
      summary: Create webinar's invite links
      operationId: Webinars_createInviteLinks
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Create a batch of invitation links for a webinar.


        **Prerequisites:**


        * Business, Education or API Plan with the Webinar add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        description: Webinar invite link object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsCreateInviteLinksRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Webinar Invite Links Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsCreateInviteLinksResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             * Webinar Id does not exist.<br>
            * Invalid Webinar Id.<br> <br>
            **Error Code:** `3001` <br>
             Webinar does not exist: {webinarId}.<br> <br>
            **Error Code:** `1001` <br>
             User does not exist: {userId}.<br> <br>
            **Error Code:** `200` <br>
             Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:write:invite_links
          - webinar:write:invite_links:admin
  /webinars/{webinarId}/jointoken/live_streaming:
    get:
      tags:
        - Webinars
      summary: Get a webinar's join token for live streaming
      operationId: Webinars_joinTokenLiveStreaming
      security:
        - openapi_oauth:
            - webinar_token:read:admin:live_streaming
            - webinar_token:read:live_streaming
          openapi_authorization: []
      description: >-
        Use this API to get a webinar's archive token to allow live streaming.
        The join token allows a recording bot implemented using Zoom meeting SDK
        to connect to a Zoom meeting &quot;hosted by the issuer of the
        token&quot;, and can call the streaming method automatically. It
        supports both regular live streaming, and raw streaming. 

         **Prerequisites:** 
        * A Pro or higher plan with a Webinar Add-on. 

        * The **Allow livestreaming of webinars** user setting enabled in the
        Zoom web portal.


        **Scopes:**
        `webinar_token:read:admin:live_streaming`,`webinar_token:read:live_streaming`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Webinar live streaming token returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsJoinTokenLiveStreamingResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid webinar ID.


            **Error Code:** `124` <br>

            This API only supports OAuth2 authorization.


            **Error Code:** `3000` <br>

            Not allowed to start live streaming. To use this feature, enable the
            "Allow livestreaming of webinars" setting in the "Settings" page of
            the Zoom web portal.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Webinar ID does not exist.

            **Error Code:** `3001` <br>
            Webinar does not exist: {webinarId}

      extensions:
        x-macro-scopes:
          - webinar_token:read:admin:live_streaming
          - webinar_token:read:live_streaming
  /webinars/{webinarId}/jointoken/local_archiving:
    get:
      tags:
        - Webinars
      summary: Get a webinar's archive token for local archiving
      operationId: Webinars_getMeetingArchiveTokenForLocalArchiving
      security:
        - openapi_oauth:
            - webinar_token:read:admin:local_archiving
          openapi_authorization: []
      description: >-
        Use this API to get a webinar's archive token to allow local archiving.
        The archive token allows a meeting SDK app or bot to get archive
        permission to access the webinar's raw audio and video media stream in
        real-time. 

         **Prerequisites:** 
        * A Pro or higher plan with a Webinar Add-on. 

        * The **Archive meetings and webinars** account setting enabled in the
        Zoom web portal.


        **Scopes:** `webinar_token:read:admin:local_archiving`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Webinar local archiving token returned.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WebinarsGetMeetingArchiveTokenForLocalArchivingResponse
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid webinar ID.


            **Error Code:** `124` <br>

            This API only supports OAuth2 authorization.


            **Error Code:** `3000` <br>

            Not allowed to start local archiving. To use this feature, enable
            the "Archive meetings and webinars" setting in the "Settings" page
            of the Zoom web portal.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Webinar ID does not exist.

            **Error Code:** `3001` <br>
            Webinar does not exist: {webinarId}

      extensions:
        x-macro-scopes:
          - webinar_token:read:admin:local_archiving
  /webinars/{webinarId}/jointoken/local_recording:
    get:
      tags:
        - Webinars
      summary: Get a webinar's join token for local recording
      operationId: Webinars_getJoinTokenLocalRecording
      security:
        - openapi_oauth:
            - webinar_token:read:admin:local_recording
            - webinar_token:read:local_recording
          openapi_authorization: []
      description: >-
        Use this API to get a webinar's join token to allow for local recording.
        The join token lets a recording bot implemented using Zoom Meeting SDK
        to connect to a Zoom webinar. The recording bot can then automatically
        start locally recording. This supports both regular and raw local
        recording types. 

         **Prerequisites:** 
        * A Pro or higher plan with a Webinar Add-on. 

        * The **Local recording** user setting enabled in the Zoom web portal.


        **Scopes:**
        `webinar_token:read:admin:local_recording`,`webinar_token:read:local_recording`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Webinar local recording token returned.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WebinarsGetJoinTokenLocalRecordingResponse
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid webinar ID.


            **Error Code:** `124` <br>

            This API only supports OAuth2 authorization.


            **Error Code:** `3000` <br>

            Not allowed to start local recording. To use this feature, enable
            the "Local Recording" setting in the "Settings" page of the Zoom web
            portal.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Webinar ID does not exist.

            **Error Code:** `3001` <br>
            Webinar does not exist: {webinarId}

      extensions:
        x-macro-scopes:
          - webinar_token:read:admin:local_recording
          - webinar_token:read:local_recording
  /webinars/{webinarId}/livestream:
    get:
      tags:
        - Webinars
      summary: Get live stream details
      operationId: Webinars_getLiveStreamDetails
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        Get a webinar's live stream configuration details, such as Stream URL,
        Stream Key and Page URL.


        Zoom allows users to [live stream a
        webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform.

         
        **Prerequisites:**  
         
        * Pro or higher plan with the webinar add-on.  
         
        * Live streaming details must have been
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the webinar.  





        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's unique ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: string
            example: '95204914252'
      responses:
        '200':
          description: '**HTTP Status Code:** `200` **OK**   Live stream details returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsGetLiveStreamDetailsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             * Webinar ID does not exist.<br>* Invalid Webinar ID.<br> <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} does not exist.<br> <br>
            **Error Code:** `1001` <br>
             User {userId} does not exist.<br> <br>
            **Error Code:** `200` <br>
             * Webinar plan is missing. Subscribe to the webinar plan and enable webinars for user  {userId} in order to perform this action.<br>* The current user has not enabled the custom live streaming feature of the webinar. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:livestream
          - webinar:read:livestream:admin
    patch:
      tags:
        - Webinars
      summary: Update a live stream
      operationId: Webinars_updateLiveStream
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Update a webinar's live stream information. 
           
         
        **Prerequisites:**  
         
        * Pro or higher plan with the webinar add-on.  
         
        * Live streaming details must be
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the webinar.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        description: Webinar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsUpdateLiveStreamRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Meeting live stream updated.
        '400':
          description: >
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             * Webinar Id does not exist.<br>
            * Invalid Webinar Id.<br> <br>

            **Error Code:** `3001` <br>
             Webinar does not exist: {webinarId}.<br> <br>
            **Error Code:** `1001` <br>
             User does not exist: {userId}.<br> <br>
            **Error Code:** `200` <br>
             * Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}.<br>
            * The current user has not enabled the custom live streaming feature
            of the webinar. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:update:livestream
          - webinar:update:livestream:admin
  /webinars/{webinarId}/livestream/status:
    patch:
      tags:
        - Webinars
      summary: Update live stream status
      operationId: Webinars_updateLiveStreamStatus
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Let users [live stream a
        webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Update the status of a webinar's live stream.  
           
         
        **Prerequisites:**  
         
        * Pro or higher plan with a Webinar Add-on.  
         
        * Live streaming details must be
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the webinar.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        description: Webinar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsUpdateLiveStreamStatusRequest'
      responses:
        '204':
          description: |+
            **HTTP Status Code:** `204`   
             
            Meeting live stream updated.

        '400':
          description: >
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             * Webinar Id does not exist.<br>
            * Invalid Webinar Id.<br> <br>

            **Error Code:** `3001` <br>
             Webinar does not exist: {webinarId}.<br> <br>
            **Error Code:** `1001` <br>
             User does not exist: {userId}.<br> <br>
            **Error Code:** `200` <br>
             * Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}.<br>
            * The current user has not enabled the custom live streaming feature
            of the webinar.<br>

            * Webinar {0} has not started. <br> <br>

            **Error Code:** `3000` <br>
             The current webinar is not configured with a custom streaming service. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:update:livestream_status
          - webinar:update:livestream_status:admin
  /webinars/{webinarId}/panelists:
    get:
      tags:
        - Webinars
      summary: List panelists
      operationId: Webinars_listPanelists
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        List all of a webinar's panelists.  


        Webinar panelists can view and send video, screen share, annotate, and
        do much more compared to webinar attendees. 



        **Prerequisites:**  
         
        * Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).  
          

        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '200':
          description: >-
            **HTTP Status Code:** `200`  
             
            Webinar plan subscription missing. Enable webinar for this user once
            the subscription is added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListPanelistsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}.<br> <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account.<br> <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_panelists
          - webinar:read:list_panelists:admin
    post:
      tags:
        - Webinars
      summary: Add panelists
      operationId: Webinars_addPanelists
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Panelists in a webinar can view and send video, screen share, annotate,
        and do much more compared to attendees in a webinar.  
         [Add panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70) to a scheduled webinar.  
           
         
        **Prerequisites:**

        * Pro or a higher plan with the [Webinar
        Add-on](https://zoom.us/webinar).  
          

        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsAddPanelistsRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`  
             
            Panelist created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsAddPanelistsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}.<br> <br>
            **Error Code:** `3000` <br>
             You have reached the limit for the number of panelists you can add. Contact Zoom Support for more information.<br> <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account.<br> <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
        '429':
          description: |-
            **HTTP Status Code:** `429` <br>
             Too Many Requests 

             
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:write:panelist
          - webinar:write:panelist:admin
    delete:
      tags:
        - Webinars
      summary: Remove webinar panelists
      operationId: Webinars_removePanelists
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Remove all the panelists from a webinar.  
         
        **Prerequisites:**  
         
        * Pro or a higher plan with the [webinar
        add-on](https://zoom.us/webinar).  
          

        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Panelists removed.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}.<br> <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account.<br> <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:delete:panelist
          - webinar:delete:panelist:admin
  /webinars/{webinarId}/panelists/{panelistId}:
    delete:
      tags:
        - Webinars
      summary: Remove a panelist
      operationId: Webinars_removePanelist
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        [Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb)
        a single panelist from a webinar.  
          Retrieve the `panelistId` by calling **List Panelists API**.  
           
         
        **Prerequisites:**  
         
        * Pro or a higher plan with the [webinar
        add-on](https://zoom.us/webinar).  
          

        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: The panelist's ID or email.
          name: panelistId
          in: path
          required: true
          schema:
            type: string
            example: Tg2b6GhcQKKbV7nSCbDKug
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Panelist removed.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User  {accountId} does not belong to this account. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {email} does not exist or does not belong to this account. <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:delete:panelist
          - webinar:delete:panelist:admin
  /webinars/{webinarId}/polls:
    get:
      tags:
        - Webinars
      summary: 'List a webinar''s polls '
      operationId: Webinars_listPolls
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        List all the
        [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
        of a Webinar.  
           
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: >-
            Whether to query for polls with the **Anonymous** option enabled: 

            * `true` &mdash; Query for polls with the **Anonymous** option
            enabled. 

            * `false` &mdash; Do not query for polls with the **Anonymous**
            option enabled.
          name: anonymous
          in: query
          required: false
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            List polls of a Webinar  returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListPollsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `4400` <br>
             Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. <br>
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
             Not Found 

             
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_polls
          - webinar:read:list_polls:admin
    post:
      tags:
        - Webinars
      summary: Create a webinar's poll
      operationId: Webinars_createPoll
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Create a
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
        for a webinar.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        description: Webinar poll object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsCreatePollRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`  
             
            Webinar Poll Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsCreatePollResponse'
        '400':
          description: >
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `4400` <br>
             * Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. 
            * Advanced webinar polls disabled. To enable this feature, enable
            the "Allow host to create advanced polls and quizzes" setting in the
            Zoom web portal's "Settings" interface. <br>
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
             Not Found 

             
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:write:poll
          - webinar:write:poll:admin
  /webinars/{webinarId}/polls/{pollId}:
    get:
      tags:
        - Webinars
      summary: Get a webinar poll
      operationId: Webinars_getPollDetails
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        Get a webinar's
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
        details.  
           
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: The poll ID
          name: pollId
          in: path
          required: true
          schema:
            type: string
            example: QalIoKWLTJehBJ8e1xRrbQ
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`  
             
            Webinar Poll object returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsGetPollDetailsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `4400` <br>
             Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:poll
          - webinar:read:poll:admin
    put:
      tags:
        - Webinars
      summary: Update a webinar poll
      operationId: Webinars_updatePoll
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Update a webinar's
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: The poll ID
          name: pollId
          in: path
          required: true
          schema:
            type: string
            example: QalIoKWLTJehBJ8e1xRrbQ
      requestBody:
        description: Webinar Poll
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsUpdatePollRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Webinar Poll Updated
        '400':
          description: >
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `4400` <br>
             * Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. 
            * Advanced webinar polls disabled. To enable this feature, enable
            the "Allow host to create advanced polls and quizzes" setting in the
            Zoom web portal's "Settings" interface. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:update:poll
          - webinar:update:poll:admin
    delete:
      tags:
        - Webinars
      summary: Delete a webinar poll
      operationId: Webinars_deletePoll
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Delete a webinar's
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: The poll ID
          name: pollId
          in: path
          required: true
          schema:
            type: string
            example: QalIoKWLTJehBJ8e1xRrbQ
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`  
             
            Webinar Poll deleted
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `4400` <br>
             Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:delete:poll
          - webinar:delete:poll:admin
  /webinars/{webinarId}/registrants:
    get:
      tags:
        - Webinars
      summary: List webinar registrants
      operationId: Webinars_listRegistrants
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        List all users that have registered for a given webinar. Zoom users with
        a [webinar plan](https://zoom.us/webinar) have access to creating and
        managing webinars. The webinar functionality lets a host broadcast a
        Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form before receiving the
        link to join the webinar.  



        **Prerequisites**

        * Pro or higher plan with a Webinar Add-on.  
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: The meeting or webinar occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
        - description: |-
            Query by the registrant's status. 
            * `pending` - The registration is pending. 
            * `approved` - The registrant is approved. 
            * `denied` - The registration is denied.
          name: status
          in: query
          required: false
          schema:
            type: string
            example: pending
            default: approved
            enum:
              - pending
              - approved
              - denied
        - description: >-
            The tracking source ID for the registrants. Useful if you share the
            webinar registration page in multiple locations. See [Creating
            source tracking links for webinar
            registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration)
            for details.
          name: tracking_source_id
          in: query
          required: false
          schema:
            type: string
            example: '5516482804110'
        - description: The number of records returned within a single API call.
          name: page_size
          in: query
          required: false
          schema:
            maximum: 300
            type: integer
            example: 30
            default: 30
        - description: >-
            **Deprecated** This field will be deprecated. We will no longer
            support this field in a future release. Instead, use the
            `next_page_token` for pagination.
          name: page_number
          in: query
          required: false
          schema:
            type: integer
            example: 1
            default: 1
        - description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          name: next_page_token
          in: query
          required: false
          schema:
            type: string
            example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
      responses:
        '200':
          description: >-
            **HTTP Status Code:** `200`  
             
            Webinar plan subscription is missing. Enable webinar for this user
            once the subscription is added:{userId}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListRegistrantsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}.<br> <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account.<br> <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_registrants
          - webinar:read:list_registrants:admin
    post:
      tags:
        - Webinars
      summary: Add a webinar registrant
      operationId: Webinars_addRegistrant
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Create and submit a user's registration for a webinar. Zoom users with a
        [Webinar plan](https://zoom.us/webinar) have access to creating and
        managing webinars. Webinars allow hosts to broadcast a Zoom meeting to
        up to 10,000 attendees. Scheduling a [webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form before receiving the
        link to join the webinar. 


        **Prerequisites:** 

        * A Pro or higher plan with the Webinar add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: >-
            A comma-separated list of webinar occurrence IDs. Get this value
            with the [Get a
            webinar](/docs/api/rest/reference/zoom-api/methods/#operation/webinar)
            API. Make sure the `registration_type` is 3 if updating multiple
            occurrences with this API.
          name: occurrence_ids
          in: query
          required: false
          schema:
            type: string
            example: '1648538280000'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsAddRegistrantRequest'
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`   
             
            Webinar registration created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsAddRegistrantResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account: {accountId} <br>
            **Error Code:** `3000` <br>
             This webinar does not have registration as required: {webinarId}. <br>
            **Error Code:** `3027` <br>
             Host cannot register. <br>
            **Error Code:** `3034` <br>
             If you have been invited, please input your work email address. <br>
            **Error Code:** `3038` <br>
             Webinar is over, you cannot register now. If you have any questions, contact the webinar host. <br>
            **Error Code:** `3000` <br>
             You have reached the limit for the number of attendees you can add. Contact Zoom Support for more information. <br>
            **Error Code:** `3000` <br>
             The Zoom REST API does not support paid registration. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User "{userId}" does not exist or does not belong to this account. <br>
            **Error Code:** `3001` <br>
             Webinar "{webinarId}" not found or has expired. <br>
        '429':
          description: |-
            **HTTP Status Code:** `429` <br>
             Too Many Requests 

             
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:write:registrant
          - webinar:write:registrant:admin
  /webinars/{webinarId}/registrants/questions:
    get:
      tags:
        - Webinars
      summary: List registration questions
      operationId: Webinars_listRegistrationQuestions
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        List registration questions and fields that are to be answered by users
        while registering for a webinar. 

         Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the webinar.  
          
        **Prerequisites:**  
          
        * Pro or higher plan with the webinar add-on.



        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '200':
          description: >-
            **HTTP Status Code:** `200`   Webinar registrant question object
            returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListRegistrationQuestionsResponse'
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
             Not Found 

             
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_registration_questions
          - webinar:read:list_registration_questions:admin
    patch:
      tags:
        - Webinars
      summary: Update registration questions
      operationId: Webinars_updateRegistrationQuestions
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Update registration questions and fields of a scheduled webinar for
        users to answer during webinar registration. Scheduling a [webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form with fields and
        questions before they can receive the link to join the webinar.  
           
         
        **Prerequisites:**  
           
        * Pro or higher plan with a Webinar Add-on.

        * Registration option for Webinar should be set as required to use this
        API. 



        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        description: Webinar registrant questions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsUpdateRegistrationQuestionsRequest'
      responses:
        '204':
          description: '**HTTP Status Code:** `204`   Webinar registrant questions updated.'
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
             Not Found 

             
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:update:registration_question
          - webinar:update:registration_question:admin
  /webinars/{webinarId}/registrants/status:
    put:
      tags:
        - Webinars
      summary: Update registrant's status
      operationId: Webinars_updateRegistrantStatus
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Update webinar registrants' registration status. You can approve or deny
        a registrant, or revoke a registrant's approval. 


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: The meeting or webinar occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsUpdateRegistrantStatusRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
             Registrant status updated.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account: {accountId}. <br>
            **Error Code:** `3035` <br>
             Webinar has reached maximum attendee capacity. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account. <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired. <br>
        '429':
          description: |-
            **HTTP Status Code:** `429` <br>
             Too Many Requests 

             
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:update:registrant_status
          - webinar:update:registrant_status:admin
  /webinars/{webinarId}/registrants/{registrantId}:
    get:
      tags:
        - Webinars
      summary: Get a webinar registrant
      operationId: Webinars_registrantDetails
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        Zoom users with a [webinar plan](https://zoom.us/webinar) have access to
        creating and managing webinars. The webinar feature lets a host
        broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a
        [webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form before receiving the
        link to join the webinar.  
         Use this API to get details on a specific user who has registered for the webinar.  
           
         
        **Prerequisites:**  
         
        * The account must have a webinar plan.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: The registrant ID.
          name: registrantId
          in: path
          required: true
          schema:
            type: string
            example: 9tboDiHUQAeOnbmudzWa5g
        - description: The meeting or webinar occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648194360000'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsRegistrantDetailsResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}.<br> <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account.<br> <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:registrant
          - webinar:read:registrant:admin
    delete:
      tags:
        - Webinars
      summary: Delete a webinar registrant
      operationId: Webinars_deleteRegistrant
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Delete a webinar registrant.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            example: 95204914252
        - description: The registrant ID.
          name: registrantId
          in: path
          required: true
          schema:
            type: string
            example: 9tboDiHUQAeOnbmudzWa5g
        - description: The webinar occurrence ID.
          name: occurrence_id
          in: query
          required: false
          schema:
            type: string
            example: '1648538280000'
      responses:
        '204':
          description: |-
            **HTTP status code:** `204`   
             
            OK
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `200` <br>
             Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {0}.<br> <br>
            **Error Code:** `300` <br>
             The value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br> <br>
            **Error Code:** `404` <br>
             Registration has not been enabled for this webinar: {0}.<br> <br>
            **Error Code:** `3000` <br>
             Registrant {0} was not found.<br> <br>
            **Error Code:** `3001` <br>
             Webinar does not exist: {0}. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:delete:registrant
          - webinar:delete:registrant:admin
  /webinars/{webinarId}/sip_dialing:
    post:
      tags:
        - Webinars
      summary: Get a webinar SIP URI with Passcode
      operationId: Webinars_getSipUriWithPasscode
      security:
        - openapi_oauth:
            - webinar:write:admin:sip_dialing
            - webinar:write:sip_dialing
          openapi_authorization: []
      description: >-
        Get a webinar's SIP URI. The URI consists of the webinar ID, an optional
        user-supplied passcode, and participant identifier code. The API return
        data also includes additional fields to indicate whether the API caller
        has a valid Cloud Room Connector subscription, the participant
        identifier code from the URI, and the SIP URI validity period in
        seconds. 


        **Scopes:**
        `webinar:write:admin:sip_dialing`,`webinar:write:sip_dialing`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: |-
            The webinar's ID. 

             When storing this value in your database, store it as a long format integer and **not** an integer. Webinar IDs can exceed 10 digits.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 85746065
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsGetSipUriWithPasscodeRequest'
      responses:
        '201':
          description: '**HTTP Status Code:** `201`  Webinar''s encoded SIP URI returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsGetSipUriWithPasscodeResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             Webinar Id does not exist. <br>
            **Error Code:** `300` <br>
             Invalid Webinar Id. <br>
            **Error Code:** `3000` <br>
             Cannot access meeting info. <br>
            **Error Code:** `3000` <br>
             The webinar's SIP URI does not exist: {webinarId}. <br>
      extensions:
        x-permissions: []
        x-macro-scopes:
          - webinar:write:admin:sip_dialing
          - webinar:write:sip_dialing
  /webinars/{webinarId}/status:
    put:
      tags:
        - Webinars
      summary: Update webinar status
      operationId: Webinars_updateStatus
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Update a webinar's status. Use this API to end an ongoing webinar.  
           
         
        **Prerequisites:**  
         
        * The account must hold a valid [Webinar plan](https://zoom.us/webinar).


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsUpdateStatusRequest'
      responses:
        '200':
          description: >-
            Webinar plan subscription is missing. Enable webinar for this user
            once the subscription is added:{userId}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsUpdateStatusResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `1010` <br>
             User does not belong to this account:{accountId}.<br> <br>
            **Error Code:** `3003` <br>
             You are not the meeting host.<br> <br>
            **Error Code:** `3063` <br>
             Can not end on-premise user's meeting:{meetingId}.<br> <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `1001` <br>
             User {userId} does not exist or does not belong to this account.<br> <br>
            **Error Code:** `3001` <br>
             Webinar {webinarId} not found or has expired.<br> <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:update:status
          - webinar:update:status:admin
  /webinars/{webinarId}/survey:
    get:
      tags:
        - Webinars
      summary: Get a webinar survey
      operationId: Webinars_getSurvey
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        Return information about a [webinar
        survey](https://support.zoom.us/hc/en-us/articles/360048745651). 

         **Prerequisites:** 
        * A Pro or higher plan with the Webinar add-on. 

        * The [**Webinar
        Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey)
        feature enabled in the host's account.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
             Webinar survey object returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsGetSurveyResponse'
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             Invalid webinar ID. <br>
            **Error Code:** `3000` <br>
             Webinar survey disabled. To enable this feature, enable the "Webinar Survey" setting in the Zoom web portal's "Settings" interface. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `300` <br>
             Webinar ID does not exist. <br>
            **Error Code:** `3001` <br>
             Webinar does not exist: {webinarId}. <br>
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:survey
          - webinar:read:survey:admin
    delete:
      tags:
        - Webinars
      summary: Delete a webinar survey
      operationId: Webinars_deleteSurvey
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Use this API to delete a [webinar
        survey](https://support.zoom.us/hc/en-us/articles/360048745651). 

         **Prerequisites:** 
        * A Pro or higher plan with the Webinar Add-on. 

        * The [**Webinar
        Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey)
        feature enabled in the host's account.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
             Webinar survey deleted.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             Invalid webinar ID. <br>
            **Error Code:** `3000` <br>
             Webinar survey disabled. To enable this feature, enable the "Webinar Survey" setting in the Zoom web portal's "Settings" interface. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `300` <br>
             Webinar ID does not exist. <br>
            **Error Code:** `3001` <br>
             Webinar does not exist: {webinarId}. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:delete:survey
          - webinar:delete:survey:admin
    patch:
      tags:
        - Webinars
      summary: Update a webinar survey
      operationId: Webinars_updateSurvey
      security:
        - openapi_oauth:
            - webinar:write
            - webinar:write:admin
          openapi_authorization: []
      description: >-
        Update a [webinar
        survey](https://support.zoom.us/hc/en-us/articles/360048745651). 
        **Prerequisites:** * A Pro or higher plan with the Webinar add-on. *
        Enable the [**Webinar
        Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey)
        feature in the host's account.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarsUpdateSurveyRequest'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`   
             
             Webinar survey updated.
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
             Bad Request 

             **Error Code:** `300` <br>
             Invalid webinar ID. <br>
            **Error Code:** `300` <br>
             Invalid third party survey: {third_party_survey}. <br>
            **Error Code:** `3000` <br>
             Webinar survey disabled. To use this feature, enable the "Webinar Survey" setting in the Zoom web portal's "Settings" interface. <br>
            **Error Code:** `3000` <br>
             The host isn't allowed to use a third party survey link. To use this feature, enable the "Allow host to use a 3rd-party survey link" setting in the "Account Settings" page of the Zoom web portal. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
             Not Found 

             **Error Code:** `300` <br>
             Webinar ID does not exist. <br>
            **Error Code:** `3001` <br>
             Webinar does not exist: {webinarId}. <br>
      extensions:
        x-permissions:
          - User:Edit
        x-macro-scopes:
          - webinar:write
          - webinar:write:admin
        x-granular-scopes:
          - webinar:update:survey
          - webinar:update:survey:admin
  /webinars/{webinarId}/token:
    get:
      tags:
        - Webinars
      summary: Get webinar's token
      operationId: Webinars_getWebinarToken
      security:
        - openapi_oauth:
            - webinar:read
            - webinar:read:admin
          openapi_authorization: []
      description: >-
        Use this API to get a webinar's [closed caption token (caption
        URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service).
        This token lets you use a third-party service to stream text to their
        closed captioning software to the Zoom webinar. 


        **Prerequisites:** 

        * A Pro or higher plan with the Webinar add-on. 

        * The **Closed captioning** setting enabled in the Zoom web portal. 

        * 

        * The **Allow use of caption API Token to integrate with 3rd-party
        Closed Captioning services** setting enabled.


        **Scopes:** `webinar:read`,`webinar:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
        - description: >-
            The webinar token type: 

            * `closed_caption_token` &mdash; The third-party closed caption API
            token. 


            This defaults to `closed_caption_token`.
          name: type
          in: query
          required: false
          schema:
            type: string
            example: closed_caption_token
            default: closed_caption_token
            enum:
              - closed_caption_token
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`   
             
            Webinar token returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsGetWebinarTokenResponse'
        '400':
          description: >+
            **HTTP Status Code:** `400` <br>
             Bad Request

            **Error Code:** `300` <br>

            Invalid webinar ID.


            **Error Code:** `3000` <br>

            Closed captioning disabled. To enable this feature, enable the
            "Closed captioning" and "Allow use of caption API Token to integrate
            with 3rd-party Closed Captioning services" settings in the Zoom web
            portal's "Settings" interface.


            **Error Code:** `3000` <br>

            Webinar {webinarId} has not started.

        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
             Not Found

            **Error Code:** `300` <br>
            Webinar ID does not exist.

            **Error Code:** `3001` <br>
            Webinar does not exist: {webinarId}

      extensions:
        x-macro-scopes:
          - webinar:read
          - webinar:read:admin
  /webinars/{webinarId}/tracking_sources:
    get:
      tags:
        - Webinars
      summary: Get webinar tracking sources
      operationId: Webinars_listTrackingSources
      security:
        - openapi_oauth:
            - webinar:read:admin
            - webinar:read
          openapi_authorization: []
      description: >-
        [Webinar Registration Tracking
        Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking)
        allow you to see where your registrants are coming from if you share the
        webinar registration page in multiple platforms. You can then use the
        source tracking to see the number of registrants generated from each
        platform.  
          Use this API to list information on all the tracking sources of a Webinar.  
         
        **Prerequisites**:  
         
        * [Webinar license](https://zoom.us/webinar).

        * Registration must be required for the Webinar.



        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      parameters:
        - description: The webinar's ID.
          name: webinarId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 99289110036
      responses:
        '200':
          description: '**HTTP Status Code:** `200`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarsListTrackingSourcesResponse'
      extensions:
        x-permissions:
          - User:Read
        x-macro-scopes:
          - webinar:read:admin
          - webinar:read
        x-granular-scopes:
          - webinar:read:list_tracking_sources
          - webinar:read:list_tracking_sources:admin
components:
  securitySchemes:
    openapi_authorization:
      type: apiKey
      name: Authorization
      in: HEADER
    openapi_oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /
          tokenUrl: ''
          refreshUrl: ''
          scopes:
            recording:read:admin: recording:read:admin
            recording:write: recording:write
            recording:write:admin: recording:write:admin
            recording:read: recording:read
            phone_recording:read:admin: phone_recording:read:admin
            device:write:admin: device:write:admin
            device:read:admin: device:read:admin
            h323:write:admin: h323:write:admin
            h323:read:admin: h323:read:admin
            meeting:write: meeting:write
            meeting:write:admin: meeting:write:admin
            meeting:master: meeting:master
            meeting_summary:read:admin: meeting_summary:read:admin
            meeting:read: meeting:read
            meeting:read:admin: meeting:read:admin
            meeting_token:read:admin:live_streaming: meeting_token:read:admin:live_streaming
            meeting_token:read:live_streaming: meeting_token:read:live_streaming
            meeting_token:read:admin:local_archiving: meeting_token:read:admin:local_archiving
            meeting_token:read:admin:local_recording: meeting_token:read:admin:local_recording
            meeting_token:read:local_recording: meeting_token:read:local_recording
            meeting_summary:read: meeting_summary:read
            meeting:write:sip_dialing: meeting:write:sip_dialing
            meeting:write:admin:sip_dialing: meeting:write:admin:sip_dialing
            pac:read:admin: pac:read:admin
            pac:read: pac:read
            report:read:admin: report:read:admin
            report:master: report:master
            sip_phone:write:admin: sip_phone:write:admin
            sip_phone:read:admin: sip_phone:read:admin
            tsp:read:admin: tsp:read:admin
            tsp:write:admin: tsp:write:admin
            tsp:read: tsp:read
            tsp:write: tsp:write
            tracking_fields:write:admin: tracking_fields:write:admin
            tracking_fields:read:admin: tracking_fields:read:admin
            webinar:write: webinar:write
            webinar:write:admin: webinar:write:admin
            webinar:read:admin: webinar:read:admin
            webinar:read: webinar:read
            webinar_token:read:admin:live_streaming: webinar_token:read:admin:live_streaming
            webinar_token:read:live_streaming: webinar_token:read:live_streaming
            webinar_token:read:admin:local_archiving: webinar_token:read:admin:local_archiving
            webinar_token:read:admin:local_recording: webinar_token:read:admin:local_recording
            webinar_token:read:local_recording: webinar_token:read:local_recording
            webinar:write:admin:sip_dialing: webinar:write:admin:sip_dialing
            webinar:write:sip_dialing: webinar:write:sip_dialing
          extensions: {}
  schemas:
    ArchivingUpdateAutoDeleteStatusRequest:
      required:
        - auto_delete
      type: object
      properties:
        auto_delete:
          description: Whether to auto-delete the archived file.
          type: boolean
          example: true
    CloudRecordingCreateRegistrantRequest:
      description: ' Registrant.'
      required:
        - email
        - first_name
      type: object
      properties:
        address:
          description: The registrant's address.
          type: string
          example: 1800 Amphibious Blvd.
        city:
          description: The registrant's city.
          type: string
          example: Mountain View
        comments:
          description: The registrant's questions and comments.
          type: string
          example: Looking forward to the discussion.
        country:
          description: >-
            The registrant's two-letter [country
            code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).
          type: string
          example: US
        custom_questions:
          description: Information about custom questions.
          type: array
          items:
            description: Information about custom questions.
            type: object
            properties:
              title:
                description: The title of the custom question.
                type: string
                example: What do you hope to learn from this?
              value:
                description: >-
                  The custom question's response value. This has a limit of 128
                  characters.
                maxLength: 128
                type: string
                example: >-
                  Look forward to learning how you come up with new recipes and
                  what other services you offer.
        email:
          description: >-
            The registrant's email address. See [Email address display
            rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address)
            for return value details.
          maxLength: 128
          type: string
          format: email
          example: jchill@example.com
        first_name:
          description: The registrant's first name.
          maxLength: 64
          type: string
          example: Jill
        industry:
          description: The registrant's industry.
          type: string
          example: Food
        job_title:
          description: The registrant's job title.
          type: string
          example: Chef
        last_name:
          description: The registrant's last name.
          maxLength: 64
          type: string
          example: Chill
        no_of_employees:
          description: |-
            The registrant's number of employees: 
            * `1-20` 
            * `21-50` 
            * `51-100` 
            * `101-250` 
            * `251-500` 
            * `501-1,000` 
            * `1,001-5,000` 
            * `5,001-10,000` 
            * `More than 10,000`
          type: string
          example: 1-20
          enum:
            - ''
            - 1-20
            - 21-50
            - 51-100
            - 101-250
            - 251-500
            - 501-1,000
            - 1,001-5,000
            - 5,001-10,000
            - More than 10,000
        org:
          description: The registrant's organization.
          type: string
          example: Cooking Org
        phone:
          description: The registrant's phone number.
          type: string
          example: '5550100'
        purchasing_time_frame:
          description: |-
            The registrant's purchasing time frame: 
            * `Within a month` 
            * `1-3 months` 
            * `4-6 months` 
            * `More than 6 months` 
            * `No timeframe`
          type: string
          example: 1-3 months
          enum:
            - ''
            - Within a month
            - 1-3 months
            - 4-6 months
            - More than 6 months
            - No timeframe
        role_in_purchase_process:
          description: |-
            The registrant's role in the purchase process: 
            * `Decision Maker` 
            * `Evaluator/Recommender` 
            * `Influencer` 
            * `Not involved`
          type: string
          example: Influencer
          enum:
            - ''
            - Decision Maker
            - Evaluator/Recommender
            - Influencer
            - Not involved
        state:
          description: The registrant's state or province.
          type: string
          example: CA
        status:
          description: |-
            The registrant's status: 
            * `approved` &mdash; Registrant is approved. 
            * `denied` &mdash; Registrant is denied. 
            * `pending` &mdash; Registrant is waiting for approval.
          type: string
          example: approved
          enum:
            - approved
            - denied
            - pending
        zip:
          description: The registrant's ZIP or postal code.
          type: string
          example: '94045'
    CloudRecordingUpdateRegistrationQuestionsRequest:
      title: Recording Registrant Questions
      description: Recording Registrant Questions
      type: object
      properties:
        custom_questions:
          description: Array of Registrant Custom Questions
          type: array
          items:
            type: object
            properties:
              title:
                description: Title of the question.
                type: string
                example: What's your name?
              answers:
                description: >-
                  Answer choices for the question. Can not be used with Short
                  answer type.
                type: array
                items:
                  type: string
                  example: 'Yes'
              required:
                description: >-
                  State whether registrants are required to answer custom
                  questions or not.
                type: boolean
                example: true
              type:
                description: The type of registration question and answers.
                type: string
                example: short
                extensions:
                  x-enum-descriptions:
                    - Short Answer
                    - Single Answer
                    - Multiple Answer
                enum:
                  - short
                  - single
                  - multiple
        questions:
          description: Array of Registrant Questions
          type: array
          items:
            type: object
            properties:
              field_name:
                description: Field name.
                type: string
                example: last_name
                extensions:
                  x-enum-descriptions:
                    - Last Name
                    - Address
                    - City
                    - Country/Region
                    - Zip/Postal Code
                    - State/Province
                    - Phone
                    - Industry
                    - Organization
                    - Job Title
                    - Purchasing Time Frame
                    - Role in Purchase Process
                    - Number of Employees
                    - Questions & Comments
                enum:
                  - last_name
                  - address
                  - city
                  - country
                  - zip
                  - state
                  - phone
                  - industry
                  - org
                  - job_title
                  - purchasing_time_frame
                  - role_in_purchase_process
                  - no_of_employees
                  - comments
              required:
                description: >-
                  State whether the field is required to be answered by the
                  registrant or not.
                type: boolean
                example: true
    CloudRecordingUpdateRegistrantStatusRequest:
      description: Registrant Status
      required:
        - action
      type: object
      properties:
        action:
          type: string
          example: approve
          extensions:
            x-enum-descriptions:
              - Approve registrant
              - Deny registrant
          enum:
            - approve
            - deny
        registrants:
          description: List of registrants
          maximum: 30
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: 3Z7sEm0TQQieLav3c3OD_g
    CloudRecordingUpdateSettingsRequest:
      title: Recording settings
      type: object
      properties:
        approval_type:
          description: |-
            The approval type for the registration.  
             
            `0`- Automatically approve the registration when a user registers.  
             
            `1` - Manually approve or deny the registration of a user.  
             
            `2` - No registration required to view the recording.
          type: integer
          example: 0
          extensions:
            x-enum-descriptions:
              - Registrants can watch the recording directly after registration
              - >-
                Registrants will receive emails then watch the recording after
                you approve the registration
              - Disabled
          enum:
            - 0
            - 1
            - 2
        authentication_domains:
          description: The authentication domains.
          type: string
          example: test.com
        authentication_option:
          description: The authentication options.
          type: string
          example: auth_option
        on_demand:
          description: >-
            This field determines whether the registration is required to view
            the recording.
          type: boolean
          example: false
        password:
          description: >-
            This field enables passcode protection for the recording by setting
            a passcode. 


            The passcode must have a minimum of **eight** characters with a mix
            of numbers, letters and special characters.  
               
             
            **Note:** If the account owner or the admin has set minimum passcode
            strength requirements for recordings through Account Settings, the
            passcode value provided here must meet those requirements.   
               
             If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API.
          maxLength: 10
          minLength: 8
          type: string
          example: '975238724'
        recording_authentication:
          description: This field indicates that only authenticated users can view.
          type: boolean
          example: true
        send_email_to_host:
          description: >-
            This field sends an email to host when someone registers to view the
            recording. This setting applies for On-demand recordings only.
          type: boolean
          example: false
        share_recording:
          description: This field determines how the meeting recording is shared.
          type: string
          example: publicly
          extensions:
            x-enum-descriptions:
              - Publicly
              - Internally(account members only)
              - None
          enum:
            - publicly
            - internally
            - none
        show_social_share_buttons:
          description: >-
            This field shows social share buttons on registration page. This
            setting applies for On-demand recordings only.
          type: boolean
          example: true
        topic:
          description: The name of the recording.
          type: string
          example: My Personal Meeting Room
        viewer_download:
          description: >-
            This field determines whether a viewer can download the recording
            file or not.
          type: boolean
          example: true
    CloudRecordingRecoverStatusRequest:
      type: object
      properties:
        action:
          type: string
          example: recover
          extensions:
            x-enum-descriptions:
              - recover meeting recording
          enum:
            - recover
    CloudRecordingRecoverRecordingStatusRequest:
      type: object
      properties:
        action:
          type: string
          example: recover
          extensions:
            x-enum-descriptions:
              - recover meeting recording
          enum:
            - recover
    DevicesCreateNewDeviceRequest:
      required:
        - device_name
        - device_type
        - mac_address
        - model
        - serial_number
        - vendor
      type: object
      properties:
        device_name:
          description: The name of the device.
          type: string
          example: My device
        mac_address:
          description: The mac address of the device.
          type: string
          example: 01-23-45-67-89-AB
        serial_number:
          description: The device's serial number.
          type: string
          example: 6NRN2A0
        vendor:
          description: The device's manufacturer.
          type: string
          example: Poly
        model:
          description: The device's model.
          type: string
          example: StudioX30
        room_id:
          description: Id of the Zoom Room. Only for Zoom Room device
          type: string
          example: 72afdc13-a289-40c3-b358-50c8b8de
        user_email:
          description: >-
            User email for assigning the Zoom Phone device. Only for Zoom Phone
            device
          type: string
          example: test-user@ya.us
        device_type:
          description: |-
            Device Type:  
             `0` - Zoom Rooms Computer.  
             `1` - Zoom Rooms Controller.  
             `5` - Zoom Phone Appliance.
          type: integer
          example: 0
          enum:
            - 0
            - 1
            - 5
        tag:
          description: The name of the tag.
          type: string
          example: personal rooms
    DevicesUpdateDeviceNameRequest:
      required:
        - device_name
      type: object
      properties:
        device_name:
          description: The name of the device.
          type: string
          example: My device
        tag:
          description: The name of the tag.
          type: string
          example: personal rooms
        room_id:
          description: id of the Zoom Room.
          type: string
          example: 72afdc13-a289-40c3-b358-50c8b8de
        device_type:
          description: |-
            Device Type:  
             `0` - Zoom Rooms Computer.  
             `1` - Zoom Rooms Controller.  
             `2` - Zoom Rooms Scheduling Display.
          type: integer
          example: 1
          enum:
            - 0
            - 1
            - 3
    DevicesChangeDeviceAssociationRequest:
      required:
        - action
      type: object
      properties:
        room_id:
          description: >-
            The Zoom Room ID which device is being associated to. The `room_id`
            is required when `assign` is selected for `action` field.
          type: string
          example: qMOLddnySIGGVycz8aX_JQ
        app_type:
          description: |-
            Specify one of the following values for this field:

            `ZR`: Zoom Room Computer.  
             
            `ZRC`: Zoom Room Controller.  
             
            `ZRP`: Scheduling Display.  
             
            `ZRW`: Companion Whiteboard.
          type: string
          example: ZR
          default: ZR
          enum:
            - ZR
            - ZRC
            - ZRP
            - ZRW
    H323DevicesCreateDeviceRequest:
      title: The H.323/SIP device object.
      description: The H.323/SIP device object.
      required:
        - encryption
        - ip
        - name
        - protocol
      type: object
      properties:
        encryption:
          description: |-
            Device encryption:  
             `auto` - auto.  
             `yes` - yes.  
             `no` - no.
          type: string
          example: auto
          extensions:
            x-enum-descriptions:
              - auto
              - 'yes'
              - 'no'
          enum:
            - auto
            - 'yes'
            - 'no'
        ip:
          description: Device IP.
          type: string
          example: 127.0.0.1
        name:
          description: Device name.
          maxLength: 64
          type: string
          example: api_test_20190508
        protocol:
          description: |-
            Device protocol:  
             `H.323` - H.323.  
             `SIP` - SIP.
          type: string
          example: H.323
          extensions:
            x-enum-descriptions:
              - H.323
              - SIP
          enum:
            - H.323
            - SIP
    H323DevicesUpdateDeviceInfoRequest:
      title: The H.323/SIP device object.
      description: The H.323/SIP device object.
      required:
        - encryption
        - ip
        - name
        - protocol
      type: object
      properties:
        encryption:
          description: |-
            Device encryption:  
             `auto` - auto.  
             `yes` - yes.  
             `no` - no.
          type: string
          example: auto
          extensions:
            x-enum-descriptions:
              - auto
              - 'yes'
              - 'no'
          enum:
            - auto
            - 'yes'
            - 'no'
        ip:
          description: Device IP.
          type: string
          example: 127.0.0.1
        name:
          description: Device name.
          maxLength: 64
          type: string
          example: api_test_20190508
        protocol:
          description: |-
            Device protocol:  
             `H.323` - H.323.  
             `SIP` - SIP.
          type: string
          example: H.323
          extensions:
            x-enum-descriptions:
              - H.323
              - SIP
          enum:
            - H.323
            - SIP
    MeetingsUpdateMessageRequest:
      required:
        - message_content
      type: object
      properties:
        message_content:
          description: The content of the chat message.
          type: string
          example: This is a test message
    MeetingsControlInMeetingFeaturesRequest:
      type: object
      properties:
        method:
          description: >-
            The in-meeting method to control: 

            * `recording.start` &mdash; Start the recording. 

            * `recording.stop` &mdash; Stop the recording. 

            * `recording.pause` &mdash; Pause the recording. 

            * `recording.resume` &mdash; Resume a paused recording. 

            * `participant.invite` &mdash; Invite a participant to the meeting. 

            * `participant.invite.callout` &mdash; Invite a participant to the
            meeting through [call out
            (phone)](https://support.zoom.us/hc/en-us/articles/4404535651085-Inviting-others-by-phone-call-out). 

            * `participant.invite.room_system_callout` &mdash; Invite a
            participant to the meeting through [call out (room system)].
          type: string
          example: recording.start
        params:
          description: The in-meeting parameters.
          type: object
          properties:
            contacts:
              description: >-
                The user's email address or the user ID, up to a maximum of 10
                contacts. The account must be a part of the meeting host's
                account.
              maximum: 10
              type: array
              items:
                type: object
                properties:
                  email:
                    description: >-
                      The user's email address. Use this value if you do not
                      have the user's ID. 


                      If you pass the `id` value, the API ignores this query
                      parameter.
                    type: string
                    example: jchill@example.com
                  id:
                    description: The user's ID.
                    type: string
                    example: 30R7kT7bTIKSNUFEuH_Qlg
            invitee_name:
              description: >-
                The user's name to display in the meeting. Use this field if you
                pass the `participant.invite.callout` value for the `method`
                field.
              type: string
              example: Jill Chill
            phone_number:
              description: >-
                The user's phone number. Use this field if you pass the
                `participant.invite.callout` value for the `method` field. As a
                best practice, ensure this includes a country code and area
                code.
              type: string
              example: '5550100'
            invite_options:
              description: Information about the `participant.invite.callout` settings.
              type: object
              properties:
                require_greeting:
                  description: >-
                    Whether to require a greeting before being connected. Use
                    this field if you pass the `participant.invite.callout`
                    value for the `method` field.
                  type: boolean
                  example: true
                  default: true
                require_pressing_one:
                  description: >-
                    Whether to require pressing 1 before being connected. Use
                    this field if you pass the `participant.invite.callout`
                    value for the `method` field.
                  type: boolean
                  example: true
                  default: true
            call_type:
              description: >-
                The type of call out. Use a value of `h323` or `sip`. Use this
                field if you pass the `participant.invite.room_system_callout`
                value for the `method` field.
              type: string
              example: h323
            device_ip:
              description: >-
                The user's device IP address or URI. Use this field if you pass
                the `participant.invite.room_system_callout` value for the
                `method` field.
              type: string
              example: 10.100.111.237
            h323_headers:
              description: >-
                Enable customers to leverage services that require customization
                of the FROM header to identify the caller. Use this field if you
                pass the `participant.invite.room_system_callout` value for the
                `method` field and the `h323` value for the `call_type` field.
              type: object
              properties:
                from_display_name:
                  description: Custom name that will be used within the h323 Header.
                  maxLength: 64
                  type: string
                  example: display name
                to_display_name:
                  description: Custom remote name that will be used within the meeting.
                  maxLength: 64
                  type: string
                  example: display name
            sip_headers:
              description: >-
                Enable customers to leverage services that require customization
                of the FROM header to identify the caller. Use this field if you
                pass the `participant.invite.room_system_callout` value for the
                `method` field and the `sip` value for the `call_type` field.
              type: object
              properties:
                from_display_name:
                  description: Custom name that will be used within the SIP Header.
                  maxLength: 64
                  type: string
                  example: display name
                to_display_name:
                  description: Custom remote name that will be used within the meeting.
                  maxLength: 64
                  type: string
                  example: display name
                from_uri:
                  description: >-
                    Custom URI that will be used within the SIP Header. The URI
                    must start with 'sip:' or 'sips:' as a valid URI based on
                    parameters defined by the platform.
                  maxLength: 256
                  type: string
                  example: sip:username@domain.company.org
                additional_headers:
                  description: >-
                    Ability to add 1 to 10 custom headers, each of which has a
                    maximum length of 256 bytes to comply with SIP standards. 
                    Custom headers would leverage header names starting with
                    'X-' per SIP guidelines.
                  maximum: 10
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        description: Additional custom SIP header's key.
                        maxLength: 32
                        type: string
                        example: X-Header1
                      value:
                        description: Additional custom SIP header's value.
                        maxLength: 256
                        type: string
                        example: X-body1
    MeetingsUpdateDetailsRequest:
      description: Meeting object.
      type: object
      properties:
        agenda:
          description: Meeting description.
          maxLength: 2000
          type: string
          example: My Meeting
        duration:
          description: Meeting duration in minutes. Used for scheduled meetings only.
          type: integer
          example: 60
        password:
          description: >-
            Meeting passcode. Passcodes may only contain these characters [a-z
            A-Z 0-9 @ - _ *] and can have a maximum of 10 characters.


            **Note** If the account owner or the admin has configured [minimum
            passcode requirement
            settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
            the passcode value provided here must meet those requirements.   
               
             If the requirements are enabled, view those requirements by calling either the [**Get user settings**](/docs/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/docs/api-reference/zoom-api/ma#operation/accountSettings) API.
          maxLength: 10
          type: string
          example: '123456'
        pre_schedule:
          description: >-
            Whether to create a prescheduled meeting through the [GSuite
            app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on).
            This **only** supports the meeting `type` value of `2` - scheduled
            meetings- and `3` - recurring meetings with no fixed time. 

            * `true` - Create a prescheduled meeting. 

            * `false` - Create a regular meeting.
          type: boolean
          example: false
          default: false
        schedule_for:
          description: The email address or `userId` of the user to schedule a meeting for.
          type: string
          example: jchill@example.com
        recurrence:
          description: >-
            Recurrence object. Use this object only for a meeting with type `8`,
            a recurring meeting with fixed time. 
          required:
            - type
          type: object
          properties:
            end_date_time:
              description: >-
                Select the final date when the meeting recurs before it is
                canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z.
                Cannot be used with `end_times`.
              type: string
              format: date-time
              example: '2022-04-02T15:59:00Z'
            end_times:
              description: >-
                Select how many times the meeting should recur before it is
                canceled. The maximum number of recurrences is 60. Cannot be
                used with `end_date_time`.
              maximum: 60
              type: integer
              example: 7
              default: 1
            monthly_day:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state the day in a month when the meeting
                should recur. The value range is from 1 to 31.


                For instance, if the meeting should recur on 23rd of each month,
                provide `23` as this field's value and `1` as the
                `repeat_interval` field's value. If the meeting should recur
                every three months on 23rd of the month, change the
                `repeat_interval` field's value to `3`.
              type: integer
              example: 1
              default: 1
            monthly_week:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state the week of the month when the meeting
                should recur. If you use this field, you must also use the
                `monthly_week_day` field to state the day of the week when the
                meeting should recur.   
                 `-1` - Last week of the month.  
                 `1` - First week of the month.  
                 `2` - Second week of the month.  
                 `3` - Third week of the month.  
                 `4` - Fourth week of the month.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Last week
                  - First week
                  - Second week
                  - Third week
                  - Fourth week
              enum:
                - -1
                - 1
                - 2
                - 3
                - 4
            monthly_week_day:
              description: >-
                Use this field only if you're scheduling a recurring meeting of
                type `3` to state a specific day in a week when a monthly
                meeting should recur. To use this field, you must also use the
                `monthly_week` field. 

                  
                 `1` - Sunday.  
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` - Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
            repeat_interval:
              description: >+
                Define the interval when the meeting should recur. For instance,
                to schedule a meeting that recurs every two months, set this
                field's value as `2` and the `type` parameter's value to `3`. 


                For a daily meeting, the maximum interval is `90` days. For a
                weekly meeting, the maximum interval is `12` weeks. For a
                monthly meeting, the maximum value is `3` months.

              type: integer
              example: 1
            type:
              description: |-
                Recurrence meeting types. 
                 `1` - Daily.  
                 `2` - Weekly.  
                 `3` - Monthly.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Daily
                  - Weekly
                  - Monthly
              enum:
                - 1
                - 2
                - 3
            weekly_days:
              description: >-
                This field is required if you're scheduling a recurring meeting
                of type `2`, to state which days of the week the meeting should
                repeat.   


                Thiw field's value could be a number between `1` to `7` in
                string format. For instance, if the meeting should recur on
                Sunday, provide `1` as this field's value.  
                   
                  **Note** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as this field's value.

                   
                 `1`  - Sunday.   
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` -  Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: string
              example: '1'
              default: '1'
              enum:
                - '1'
                - '2'
                - '3'
                - '4'
                - '5'
                - '6'
                - '7'
        settings:
          description: Meeting settings.
          type: object
          properties:
            allow_multiple_devices:
              description: >-
                Allow attendees to join the meeting from multiple devices. This
                setting only works for meetings that require
                [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
              type: boolean
              example: true
            alternative_hosts:
              description: >-
                A semicolon-separated list of the meeting's alternative hosts'
                email addresses or IDs.
              type: string
              example: jchill@example.com;thill@example.com
            alternative_hosts_email_notification:
              description: >-
                Flag to determine whether to send email notifications to
                alternative hosts, default value is true.
              type: boolean
              example: true
              default: true
            alternative_host_update_polls:
              description: >-
                Whether the **Allow alternative hosts to add or edit polls**
                feature is enabled. This requires Zoom version 5.8.0 or higher.
              type: boolean
              example: true
            approval_type:
              description: >-
                Enable registration and set approval for the registration. Note
                that this feature requires the host to be of **Licensed** user
                type. **Registration cannot be enabled for a basic user.**   
                   
                 

                `0` - Automatically approve.  
                 `1` - Manually approve.  
                 `2` - No registration required.
              type: integer
              example: 0
              extensions:
                x-enum-descriptions:
                  - Automatically Approve
                  - Manually Approve
                  - No Registration Required
              default: 2
              enum:
                - 0
                - 1
                - 2
            approved_or_denied_countries_or_regions:
              description: >
                Approve or block users from specific regions or countries from
                joining this meeting. 
              type: object
              properties:
                approved_list:
                  description: >-
                    List of countries or regions from where participants can
                    join this meeting. 
                  type: array
                  items:
                    type: string
                    example: CX
                denied_list:
                  description: >-
                    List of countries or regions from where participants can not
                    join this meeting. 
                  type: array
                  items:
                    type: string
                    example: CA
                enable:
                  description: >-
                    `true` - Setting enabled to either allow users or block
                    users from specific regions to join your meetings.
                     

                    `false` - Setting disabled.
                  type: boolean
                  example: true
                method:
                  description: >-
                    Specify whether to allow users from specific regions to join
                    this meeting, or block users from specific regions from
                    joining this meeting.

                     
                    `approve` - Allow users from specific regions or countries
                    to join this meeting. If this setting is selected, include
                    the approved regions or countries in the `approved_list`.  



                    `deny` - Block users from specific regions or countries from
                    joining this meeting. If this setting is selected, include
                    the approved regions orcountries in the `denied_list`
                  type: string
                  example: approve
                  enum:
                    - approve
                    - deny
            audio:
              description: >-
                Determine how participants can join the audio portion of the
                meeting.  
                 `both` - Both Telephony and VoIP.  
                 `telephony` - Telephony only.  
                 `voip` - VoIP only.  
                 `thirdParty` - Third party audio conference.
              type: string
              example: telephony
              extensions:
                x-enum-descriptions:
                  - Both Telephony and VoIP
                  - Telephony only
                  - VoIP only
                  - Third party audio conference
              default: both
              enum:
                - both
                - telephony
                - voip
                - thirdParty
            audio_conference_info:
              description: Third party audio conference info.
              maxLength: 2048
              type: string
              example: test
            authentication_domains:
              description: >-
                If user has configured [Sign Into Zoom with Specified
                Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                option, this will list the domains that are authenticated.
              type: string
              example: example.com
            authentication_exception:
              description: >-
                The participants added here will receive unique meeting invite
                links and bypass authentication.
              type: array
              items:
                type: object
                properties:
                  email:
                    description: The participant's email address.
                    type: string
                    format: email
                    example: jchill@example.com
                  name:
                    description: The participant's name.
                    type: string
                    example: Jill Chill
                  join_url:
                    description: URL for participants to join the meeting
                    type: string
                    example: https://example.com/s/11111
            authentication_name:
              description: >-
                Authentication name set in the [authentication
                profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
              type: string
              example: Sign in to Zoom
            authentication_option:
              description: Meeting authentication option ID.
              type: string
              example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
            auto_recording:
              description: |-
                Automatic recording. 
                 `local` - Record on local.  
                 `cloud` -  Record on cloud.  
                 `none` - Disabled.
              type: string
              example: cloud
              extensions:
                x-enum-descriptions:
                  - Record to local device
                  - Record to cloud
                  - No Recording
              default: none
              enum:
                - local
                - cloud
                - none
            breakout_room:
              description: >-
                Setting to [pre-assign breakout
                rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
              type: object
              properties:
                enable:
                  description: >-
                    Set this field's value to `true` to enable the [breakout
                    room
                    pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)
                    option.
                  type: boolean
                  example: true
                rooms:
                  description: Create room(s).
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        description: The breakout room's name.
                        type: string
                        example: room1
                      participants:
                        description: >-
                          Email addresses of the participants who are to be
                          assigned to the breakout room.
                        type: array
                        items:
                          type: string
                          example: jchill@example.com
            calendar_type:
              description: >-
                The type of calendar integration used to schedule the meeting. 

                * `1` - [Zoom Outlook
                add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 

                * `2` - [Zoom for Google Workspace
                add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)


                Works with the `private_meeting` field to determine whether to
                share details of meetings.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Outlook
                  - Google Calendar
              enum:
                - 1
                - 2
            close_registration:
              description: Close registration after the event date.
              type: boolean
              example: false
              default: false
            cn_meeting:
              description: Host the meeting in China.
              type: boolean
              example: false
              deprecated: true
              default: false
            contact_email:
              description: Contact email for registration.
              type: string
              example: jchill@example.com
            contact_name:
              description: Contact name for registration.
              type: string
              example: Jill Chill
            custom_keys:
              description: Custom keys and values assigned to the meeting.
              maxItems: 10
              type: array
              items:
                type: object
                properties:
                  key:
                    description: Custom key associated with the user.
                    maxLength: 64
                    type: string
                    example: key1
                  value:
                    description: Value of the custom key associated with the user.
                    maxLength: 256
                    type: string
                    example: value1
            email_notification:
              description: >-
                Whether to send email notifications to [alternative
                hosts](https://support.zoom.us/hc/en-us/articles/208220166) and
                [users with scheduling
                privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege).
                This value defaults to `true`.
              type: boolean
              example: true
              default: true
            encryption_type:
              description: >-
                Choose between enhanced encryption and [end-to-end
                encryption](https://support.zoom.us/hc/en-us/articles/360048660871)
                when starting or a meeting. When using end-to-end encryption,
                several features such cloud recording and phone/SIP/H.323
                dial-in, will be **automatically disabled**.   


                `enhanced_encryption` - Enhanced encryption. Encryption is
                stored in the cloud if you enable this option.   
                 

                `e2ee` - [End-to-end
                encryption](https://support.zoom.us/hc/en-us/articles/360048660871).
                The encryption key is stored in your local device and can not be
                obtained by anyone else. Enabling this setting also **disables**
                the features join before host, cloud recording, streaming, live
                transcription, breakout rooms, polling, 1:1 private chat, and
                meeting reactions.
              type: string
              example: enhanced_encryption
              enum:
                - enhanced_encryption
                - e2ee
            enforce_login:
              description: >-
                Only signed in users can join this meeting.


                **This field is deprecated and will not be supported in the
                future.**    
                   
                 As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
              type: boolean
              example: true
              deprecated: true
            enforce_login_domains:
              description: >-
                Only signed in users with specified domains can join meetings.


                **This field is deprecated and will not be supported in the
                future.**    
                   
                 As an alternative, use the `meeting_authentication`, `authentication_option`. and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
              type: string
              example: example.com
              deprecated: true
            focus_mode:
              description: >-
                Whether the [**Focus Mode**
                feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode)
                is enabled when the meeting starts.
              type: boolean
              example: true
            global_dial_in_countries:
              description: List of global dial-in countries
              type: array
              items:
                type: string
                example: US
            global_dial_in_numbers:
              description: Global dial-in countries or regions
              type: array
              items:
                type: object
                properties:
                  city:
                    description: City of the number, if any, such as Chicago.
                    type: string
                    example: New York
                  country:
                    description: Country code, such as BR.
                    type: string
                    example: US
                  country_name:
                    description: Full name of country, such as Brazil.
                    type: string
                    example: US
                  number:
                    description: Phone number, such as +1 2332357613.
                    type: string
                    example: +1 1000200200
                  type:
                    description: 'Type of number. '
                    type: string
                    example: toll
                    enum:
                      - toll
                      - tollfree
            host_video:
              description: Start video when the host joins the meeting.
              type: boolean
              example: true
            in_meeting:
              description: Host meeting in India.
              type: boolean
              example: false
              deprecated: true
              default: false
            jbh_time:
              description: >-
                If the value of `join_before_host` field is set to true, use
                this field to indicate time limits for a participant to join a
                meeting before a host.


                *  `0` - Allow participant to join anytime.

                *  `5` - Allow participant to join 5 minutes before meeting
                start time.
                 * `10` - Allow participant to join 10 minutes before meeting start time.
              type: integer
              example: 0
              enum:
                - 0
                - 5
                - 10
            join_before_host:
              description: >-
                Allow participants to join the meeting before the host starts
                the meeting. Only used for scheduled or recurring meetings.
              type: boolean
              example: true
              default: false
            language_interpretation:
              description: >-
                The meeting's [language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** This feature is only available for certain Meeting
                add-on, Education, and Business and higher plans. If this
                feature is not enabled on the host's account, this setting will
                **not** be applied to the meeting.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [language
                    interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                    for the meeting.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the meeting's language interpreters.
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      languages:
                        description: >-
                          A comma-separated list of the interpreter's languages.
                          The string must contain two [country
                          IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                          For example, if the interpreter will translate from
                          English to Chinese, then this value will be `US,CN`.
                        type: string
                        example: US,FR
            sign_language_interpretation:
              description: >-
                The meeting's [sign language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** If this feature is not enabled on the host's account,
                this setting will **not** be applied to the meeting.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [sign language
                    interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                    for the meeting.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the meeting's sign language interpreters.
                  maximum: 20
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      sign_language:
                        description: |-
                          The interpreter's sign language. 

                           To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                        type: string
                        example: American
            meeting_authentication:
              description: '`true`- Only authenticated users can join meetings.'
              type: boolean
              example: true
            meeting_invitees:
              description: A list of the meeting's invitees.
              type: array
              items:
                type: object
                properties:
                  email:
                    description: The invitee's email address.
                    type: string
                    format: email
                    example: jchil@example.com
            mute_upon_entry:
              description: Mute participants upon entry.
              type: boolean
              example: false
              default: false
            participant_video:
              description: Start video when participants join the meeting.
              type: boolean
              example: false
            private_meeting:
              description: Whether the meeting is set as private.
              type: boolean
              example: false
            registrants_confirmation_email:
              description: |-
                Whether to send registrants an email confirmation.
                * `true` - Send a confirmation email.
                * `false` - Do not send a confirmation email.
              type: boolean
              example: true
            registrants_email_notification:
              description: >-
                Whether to send registrants email notifications about their
                registration approval, cancellation, or rejection.


                * `true` - Send an email notification.

                * `false` - Do not send an email notification.

                 Set this value to `true` to also use the `registrants_confirmation_email` parameter.
              type: boolean
              example: true
            registration_type:
              description: >-
                Registration type. Used for recurring meeting with fixed time
                only.
                 `1` - Attendees register once and can attend any of the occurrences.  
                 `2` - Attendees need to register for each occurrence to attend.  
                 `3` - Attendees register once and can choose one or more occurrences to attend.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - >-
                    Attendees register once and can attend any of the
                    occurrences
                  - Attendees need to register for each occurrence to attend
                  - >-
                    Attendees register once and can choose one or more
                    occurrences to attend
              default: 1
              enum:
                - 1
                - 2
                - 3
            show_share_button:
              description: >-
                Show social share buttons on the meeting registration page.

                This setting only works for meetings that require
                [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
              type: boolean
              example: true
            use_pmi:
              description: >-
                Use a [personal meeting ID
                (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                Only used for scheduled meetings and recurring meetings with no
                fixed time.
              type: boolean
              example: false
              default: false
            waiting_room:
              description: Enable waiting room.
              type: boolean
              example: false
              default: false
            watermark:
              description: Add a watermark when viewing a shared screen.
              type: boolean
              example: false
              default: false
            host_save_video_order:
              description: >-
                Whether the **Allow host to save video order** feature is
                enabled.
              type: boolean
              example: true
            internal_meeting:
              description: Whether to set the meeting as an internal meeting.
              type: boolean
              example: false
              default: false
            continuous_meeting_chat:
              description: >-
                Information about the **Enable continuous meeting chat**
                feature.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable the **Enable continuous meeting chat**
                    setting.
                  type: boolean
                  example: true
                auto_add_invited_external_users:
                  description: >-
                    Whether to enable the **Automatically add invited external
                    users** setting.
                  type: boolean
                  example: true
            participant_focused_meeting:
              description: Whether to set the meeting as a participant focused meeting.
              type: boolean
              example: false
              default: false
            resources:
              description: The meeting's resources.
              type: array
              items:
                type: object
                properties:
                  resource_type:
                    description: The resource type.
                    type: string
                    example: whiteboard
                    enum:
                      - whiteboard
                  resource_id:
                    description: The resource ID.
                    type: string
                    example: X4Hy02w3QUOdskKofgb9Jg
                  permission_level:
                    description: >-
                      The permission levels for users to access the whiteboard. 

                      * `editor` - Users with link access can edit the board. 

                      * `commenter` - Users with link access can comment on the
                      board. 

                      * `viewer` - Users with link access can view the board.
                    type: string
                    example: editor
                    default: editor
                    enum:
                      - editor
                      - commenter
                      - viewer
        start_time:
          description: >-
            Meeting start time. When using a format like
            `yyyy-MM-dd'T'HH:mm:ss'Z'`, always use GMT time. When using a format
            like `yyyy-MM-dd'T'HH:mm:ss`, use local time and specify the time
            zone. Only used for scheduled meetings and recurring meetings with a
            fixed time.
          type: string
          format: date-time
          example: '2022-03-25T07:29:29Z'
        template_id:
          description: >-
            Unique identifier of the meeting template. 


            [Schedule the meeting from a meeting
            template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb).
            Retrieve this field's value by calling the [List meeting
            templates](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/listMeetingTemplates)
            API.
          type: string
          example: 5Cj3ceXoStO6TGOVvIOVPA==
        timezone:
          description: >-
            The timezone to assign to the `start_time` value. Only use this
            field ifor scheduled or recurring meetings with a fixed time.


            For a list of supported timezones and their formats, see our
            [timezone
            list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
          type: string
          example: America/Los_Angeles
        topic:
          description: Meeting topic.
          maxLength: 200
          type: string
          example: My Meeting
        tracking_fields:
          description: Tracking fields.
          type: array
          items:
            type: object
            properties:
              field:
                description: Tracking fields type.
                type: string
                example: field1
              value:
                description: Tracking fields value.
                type: string
                example: value1
        type:
          description: |-
            Meeting types.
             `1` - Instant meeting.  
             `2` - Scheduled meeting.  
             `3` - Recurring meeting with no fixed time.  
             `8` - Recurring meeting with a fixed time.
          type: integer
          example: 2
          extensions:
            x-enum-descriptions:
              - Instant Meeting
              - Scheduled Meeting
              - Recurring Meeting with no fixed time
              - Recurring Meeting with fixed time
          default: 2
          enum:
            - 1
            - 2
            - 3
            - 8
    MeetingsCreateBatchPollsRequest:
      type: object
      properties:
        polls:
          description: Information about the meeting's polls.
          maxItems: 25
          minItems: 1
          type: array
          items:
            type: object
            properties:
              title:
                description: The poll's title, up to 64 characters.
                maxLength: 64
                type: string
                example: Learn something new
              anonymous:
                description: >-
                  Whether to allow meeting participants to answer poll questions
                  anonymously: 

                  * `true` &mdash; Anonymous polls enabled. 

                  * `false` &mdash; Participants cannot answer poll questions
                  anonymously. 


                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              poll_type:
                description: >-
                  The type of poll: 

                  * `1` &mdash; Poll. 

                  * `2` &mdash; Advanced Poll. This feature must be enabled in
                  your Zoom account. 

                  * `3` &mdash; Quiz. This feature must be enabled in your Zoom
                  account. 

                   This value defaults to `1`.
                type: integer
                example: 2
                default: 1
                enum:
                  - 1
                  - 2
                  - 3
              questions:
                description: Information about the poll's questions.
                minLength: 1
                required:
                  - name
                  - type
                type: array
                items:
                  type: object
                  properties:
                    answer_max_character:
                      description: >-
                        The allowed maximum number of characters. This field
                        only applies to `short_answer` and `long_answer` polls: 

                        * For `short_answer` polls, a maximum of 500
                        characters. 

                        * For `long_answer` polls, a maximum of 2,000
                        characters.
                      type: integer
                      example: 200
                    answer_min_character:
                      description: >-
                        The allowed minimum number of characters. This field
                        only applies to `short_answer` and `long_answer` polls.
                        You must provide at least a **one** character minimum
                        value.
                      minimum: 1
                      type: integer
                      example: 1
                    answer_required:
                      description: >-
                        Whether participants must answer the question: 

                        * `true` &mdash; The participant must answer the
                        question. 

                        * `false` &mdash; The participant does not need to
                        answer the question. 


                        **Note:** 

                        * When the poll's `type` value is `1` (Poll), this value
                        defaults to `true`. 

                        * When the poll's `type` value is the `2` (Advanced
                        Poll) or `3` (Quiz) values, this value defaults to
                        `false`.
                      type: boolean
                      example: false
                      default: false
                    answers:
                      description: >-
                        The poll question's available answers. This field
                        requires a **minimum** of two answers. 


                        * For `single` and `multiple` polls, you can only
                        provide a maximum of 10 answers. 

                        * For `matching` polls, you can only provide a maximum
                        of 16 answers. 

                        * For `rank_order` polls, you can only provide a maximum
                        of seven answers.
                      minItems: 2
                      type: array
                      items:
                        type: string
                        example: Extremely useful
                    case_sensitive:
                      description: >-
                        Whether the correct answer is case sensitive. This field
                        only applies to `fill_in_the_blank` polls: 

                        * `true` &mdash; The answer is case-sensitive. 

                        * `false` &mdash; The answer is not case-sensitive. 


                        This value defaults to `false`.
                      type: boolean
                      example: false
                      default: false
                    name:
                      description: >-
                        The poll question's title, up to 255 characters. 


                        For `fill_in_the_blank` polls, this field is the poll's
                        question. For each value that the user must fill in,
                        ensure that there are the same number of `right_answers`
                        values.
                      maxLength: 255
                      type: string
                      example: How useful was this meeting?
                    prompts:
                      description: >-
                        Information about the prompt questions. This field only
                        applies to `matching` and `rank_order` polls. You
                        **must** provide a minimum of two prompts, up to a
                        maximum of 10 prompts.
                      type: array
                      items:
                        type: object
                        properties:
                          prompt_question:
                            description: The question prompt's title.
                            type: string
                            example: How are you?
                          prompt_right_answers:
                            description: >-
                              The question prompt's correct answers: 

                              * For `matching` polls, you must provide a minimum
                              of two correct answers, up to a maximum of 10
                              correct answers. 

                              * For `rank_order` polls, you can only provide one
                              correct answer.
                            type: array
                            items:
                              type: string
                              example: Good
                    rating_max_label:
                      description: >-
                        The high score label used for the `rating_max_value`
                        field. 


                        This field only applies to the `rating_scale` poll.
                      type: string
                      example: Extremely Likely
                    rating_max_value:
                      description: >-
                        The rating scale's maximum value, up to a maximum value
                        of 10. 


                        This field only applies to the `rating_scale` poll.
                      maximum: 10
                      type: integer
                      example: 4
                    rating_min_label:
                      description: >-
                        The low score label used for the `rating_min_value`
                        field. 


                        This field only applies to the `rating_scale` poll.
                      type: string
                      example: Not likely
                    rating_min_value:
                      description: >-
                        The rating scale's minimum value. This value cannot be
                        less than zero. 


                        This field only applies to the `rating_scale` poll.
                      minimum: 1
                      type: integer
                      example: 1
                    right_answers:
                      description: >-
                        The poll question's correct answer(s). This field is
                        **required** if the poll's `type` value is `3` (Quiz). 

                         For `single` and `matching` polls, this field only accepts one answer.
                      minItems: 1
                      type: array
                      items:
                        type: string
                        example: Good
                    show_as_dropdown:
                      description: >-
                        Whether to display the radio selection as a drop-down
                        box: 

                        * `true` &mdash; Show as a drop-down box. 

                        * `false` &mdash; Do not show as a drop-down box. 


                        This value defaults to `false`.
                      type: boolean
                      example: false
                      default: false
                    type:
                      description: |-
                        The poll's question and answer type: 
                        * `single` &mdash; Single choice. 
                        * `multiple` &mdash; Multiple choice. 
                        * `matching` &mdash; Matching. 
                        * `rank_order` &mdash; Rank order. 
                        * `short_answer` &mdash; Short answer. 
                        * `long_answer` &mdash; Long answer. 
                        * `fill_in_the_blank` &mdash; Fill in the blank. 
                        * `rating_scale` &mdash; Rating scale.
                      type: string
                      example: single
                      extensions:
                        x-enum-descriptions:
                          - Single choice
                          - Multiple choice
                          - Matching
                          - Rank order
                          - Short answer
                          - Long answer
                          - Fill in the blank
                          - Rating scale
                      enum:
                        - single
                        - multiple
                        - matching
                        - rank_order
                        - short_answer
                        - long_answer
                        - fill_in_the_blank
                        - rating_scale
    MeetingsBatchRegistrantsCreateRequest:
      type: object
      properties:
        auto_approve:
          description: >-
            If a meeting was scheduled with approval_type `1` (manual approval),
            but you would like to automatically approve the registrants that are
            added via this API, you can set the value of this field to `true`. 


            You **cannot** use this field to change approval setting for a
            meeting  that was originally scheduled with approval_type `0`
            (automatic approval).
          type: boolean
          example: true
        registrants_confirmation_email:
          description: Send confirmation Email to Registrants
          type: boolean
          example: true
        registrants:
          type: array
          items:
            required:
              - email
              - first_name
            type: object
            properties:
              email:
                description: Email address of the registrant.
                type: string
                format: email
                example: jchill@example.com
              first_name:
                description: First name of the registrant.
                type: string
                example: Jill
              last_name:
                description: Last name of the registrant.
                type: string
                example: Chill
    MeetingsCreateInviteLinksRequest:
      title: Invite Links
      description: Invite Links
      type: object
      properties:
        attendees:
          description: The attendees list.
          maxItems: 500
          minItems: 1
          type: array
          items:
            required:
              - name
            type: object
            properties:
              name:
                description: User display name.
                maxLength: 64
                type: string
                example: Jill Chill
        ttl:
          description: |-
            The invite link's expiration time, in seconds. 

            This value defaults to `7200`.
          maximum: 7776000
          minimum: 0
          type: integer
          format: int64
          example: 1000
          default: 7200
    MeetingsUpdateLivestreamRequest:
      description: Meeting live stream.
      required:
        - page_url
        - stream_key
        - stream_url
      type: object
      properties:
        page_url:
          description: The live stream page URL.
          maxLength: 1024
          type: string
          format: uri
          example: https://example.com/livestream/123
        stream_key:
          description: Stream name and key.
          maxLength: 512
          type: string
          example: contact-it@example.com
        stream_url:
          description: Streaming URL.
          maxLength: 1024
          type: string
          example: https://example.com/livestream
        resolution:
          description: >-
            The number of pixels in each dimension that the video camera can
            display, required when a user enables 1080p. Use a value of `720p`
            or `1080p`
          type: string
          example: 720p
    MeetingsLivestreamStatusUpdateRequest:
      description: Meeting live stream status.
      type: object
      properties:
        action:
          description: |-
            Update the status of a live stream.

            The value can be one of the following:  
             
            `start`: Start a live stream.   
             
            `stop`: Stop an ongoing live stream.
          type: string
          example: start
          extensions:
            x-enum-descriptions:
              - Start a meeting live stream.
              - Stop a meeting live stream.
          enum:
            - start
            - stop
        settings:
          description: >-
            Update the settings of a live streaming session. The settings can
            only be updated for a live stream that has been stopped. You can not
            update the settings of an ongoing live stream.
          type: object
          properties:
            active_speaker_name:
              description: Display the name of the active speaker during a live stream.
              type: boolean
              example: true
            display_name:
              description: Display name of the live stream.
              maxLength: 50
              minLength: 1
              type: string
              example: Jill Chill
    MeetingsCreatePollRequest:
      title: Meeting and Webinar Polling Object
      description: Information about meeting and webinar polling.
      type: object
      properties:
        title:
          description: The poll's title, up to 64 characters.
          maxLength: 64
          type: string
          example: Learn something new
        anonymous:
          description: |-
            Allow meeting participants to answer poll questions anonymously. 

            This value defaults to `false`.
          type: boolean
          example: true
          default: false
        poll_type:
          description: >-
            The type of poll: 

            * `1` &mdash; Poll. 

            * `2` &mdash; Advanced Poll. This feature must be enabled in your
            Zoom account. 

            * `3` &mdash; Quiz. This feature must be enabled in your Zoom
            account. 

             This value defaults to `1`.
          type: integer
          example: 2
          enum:
            - 1
            - 2
            - 3
        questions:
          description: Information about the poll's questions.
          type: array
          items:
            type: object
            properties:
              answer_max_character:
                description: >-
                  The allowed maximum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls: 

                  * For `short_answer` polls, a maximum of 500 characters. 

                  * For `long_answer` polls, a maximum of 2,000 characters.
                type: integer
                example: 200
              answer_min_character:
                description: >-
                  The allowed minimum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls. You must
                  provide at least a **one** character minimum value.
                minimum: 1
                type: integer
                example: 1
              answer_required:
                description: >-
                  Whether participants must answer the question: 

                  * `true` &mdash; The participant must answer the question. 

                  * `false` &mdash; The participant does not need to answer the
                  question. 


                  **Note:** 

                  * When the poll's `type` value is `1` (Poll), this value
                  defaults to `true`. 

                  * When the poll's `type` value is the `2` (Advanced Poll) or
                  `3` (Quiz) values, this value defaults to `false`.
                type: boolean
                example: false
                default: false
              answers:
                description: >-
                  The poll question's available answers. This field requires a
                  **minimum** of two answers. 


                  * For `single` and `multiple` polls, you can only provide a
                  maximum of 10 answers. 

                  * For `matching` polls, you can only provide a maximum of 16
                  answers. 

                  * For `rank_order` polls, you can only provide a maximum of
                  seven answers.
                minItems: 2
                type: array
                items:
                  type: string
                  example: Extremely useful
              case_sensitive:
                description: >-
                  Whether the correct answer is case sensitive. This field only
                  applies to `fill_in_the_blank` polls: 

                  * `true` &mdash; The answer is case-sensitive. 

                  * `false` &mdash; The answer is not case-sensitive. 


                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              name:
                description: >-
                  The poll question, up to 255 characters. 


                  For `fill_in_the_blank` polls, this field is the poll's
                  question. For each value that the user must fill in, ensure
                  that there are the same number of `right_answers` values.
                maxLength: 255
                type: string
                example: How useful was this meeting?
              prompts:
                description: >-
                  Information about the prompt questions. This field only
                  applies to `matching` and `rank_order` polls. You **must**
                  provide a minimum of two prompts, up to a maximum of 10
                  prompts.
                type: array
                items:
                  type: object
                  properties:
                    prompt_question:
                      description: The question prompt's title.
                      type: string
                      example: How are you?
                    prompt_right_answers:
                      description: >-
                        The question prompt's correct answers: 

                        * For `matching` polls, you must provide a minimum of
                        two correct answers, up to a maximum of 10 correct
                        answers. 

                        * For `rank_order` polls, you can only provide one
                        correct answer.
                      type: array
                      items:
                        type: string
                        example: Good
              rating_max_label:
                description: |-
                  The high score label used for the `rating_max_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Extremely Likely
              rating_max_value:
                description: >-
                  The rating scale's maximum value, up to a maximum value of
                  10. 


                  This field only applies to the `rating_scale` poll.
                maximum: 10
                type: integer
                example: 4
              rating_min_label:
                description: |-
                  The low score label used for the `rating_min_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Not likely
              rating_min_value:
                description: >-
                  The rating scale's minimum value. This value cannot be less
                  than zero. 


                  This field only applies to the `rating_scale` poll.
                minimum: 0
                type: integer
                example: 0
              right_answers:
                description: >-
                  The poll question's correct answer(s). This field is
                  **required** if the poll's `type` value is `3` (Quiz). 

                   For `single` and `matching` polls, this field only accepts one answer.
                minItems: 1
                type: array
                items:
                  type: string
                  example: Good
              show_as_dropdown:
                description: |-
                  Whether to display the radio selection as a drop-down box: 
                  * `true` &mdash; Show as a drop-down box. 
                  * `false` &mdash; Do not show as a drop-down box. 

                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              type:
                description: |-
                  The poll's question and answer type: 
                  * `single` &mdash; Single choice. 
                  * `multiple` &mdash; Multiple choice. 
                  * `matching` &mdash; Matching. 
                  * `rank_order` &mdash; Rank order. 
                  * `short_answer` &mdash; Short answer. 
                  * `long_answer` &mdash; Long answer. 
                  * `fill_in_the_blank` &mdash; Fill in the blank. 
                  * `rating_scale` &mdash; Rating scale.
                type: string
                example: single
                extensions:
                  x-enum-descriptions:
                    - Single choice
                    - Multiple choice
                    - Matching
                    - Rank order
                    - Short answer
                    - Long answer
                    - Fill in the blank
                    - Rating scale
                enum:
                  - single
                  - multiple
                  - matching
                  - rank_order
                  - short_answer
                  - long_answer
                  - fill_in_the_blank
                  - rating_scale
    MeetingsUpdateMeetingPollRequest:
      title: Meeting and Webinar Polling Object
      description: Information about meeting and webinar polling.
      type: object
      properties:
        title:
          description: The poll's title, up to 64 characters.
          maxLength: 64
          type: string
          example: Learn something new
        anonymous:
          description: |-
            Allow meeting participants to answer poll questions anonymously. 

            This value defaults to `false`.
          type: boolean
          example: true
          default: false
        poll_type:
          description: >-
            The type of poll: 

            * `1` &mdash; Poll. 

            * `2` &mdash; Advanced Poll. This feature must be enabled in your
            Zoom account. 

            * `3` &mdash; Quiz. This feature must be enabled in your Zoom
            account. 

             This value defaults to `1`.
          type: integer
          example: 2
          enum:
            - 1
            - 2
            - 3
        questions:
          description: Information about the poll's questions.
          type: array
          items:
            type: object
            properties:
              answer_max_character:
                description: >-
                  The allowed maximum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls: 

                  * For `short_answer` polls, a maximum of 500 characters. 

                  * For `long_answer` polls, a maximum of 2,000 characters.
                type: integer
                example: 200
              answer_min_character:
                description: >-
                  The allowed minimum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls. You must
                  provide at least a **one** character minimum value.
                minimum: 1
                type: integer
                example: 1
              answer_required:
                description: >-
                  Whether participants must answer the question: 

                  * `true` &mdash; The participant must answer the question. 

                  * `false` &mdash; The participant does not need to answer the
                  question. 


                  **Note:** 

                  * When the poll's `type` value is `1` (Poll), this value
                  defaults to `true`. 

                  * When the poll's `type` value is the `2` (Advanced Poll) or
                  `3` (Quiz) values, this value defaults to `false`.
                type: boolean
                example: false
                default: false
              answers:
                description: >-
                  The poll question's available answers. This field requires a
                  **minimum** of two answers. 


                  * For `single` and `multiple` polls, you can only provide a
                  maximum of 10 answers. 

                  * For `matching` polls, you can only provide a maximum of 16
                  answers. 

                  * For `rank_order` polls, you can only provide a maximum of
                  seven answers.
                minItems: 2
                type: array
                items:
                  type: string
                  example: Extremely useful
              case_sensitive:
                description: >-
                  Whether the correct answer is case sensitive. This field only
                  applies to `fill_in_the_blank` polls: 

                  * `true` &mdash; The answer is case-sensitive. 

                  * `false` &mdash; The answer is not case-sensitive. 


                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              name:
                description: >-
                  The poll question, up to 255 characters. 


                  For `fill_in_the_blank` polls, this field is the poll's
                  question. For each value that the user must fill in, ensure
                  that there are the same number of `right_answers` values.
                maxLength: 255
                type: string
                example: How useful was this meeting?
              prompts:
                description: >-
                  Information about the prompt questions. This field only
                  applies to `matching` and `rank_order` polls. You **must**
                  provide a minimum of two prompts, up to a maximum of 10
                  prompts.
                type: array
                items:
                  type: object
                  properties:
                    prompt_question:
                      description: The question prompt's title.
                      type: string
                      example: How are you?
                    prompt_right_answers:
                      description: >-
                        The question prompt's correct answers: 

                        * For `matching` polls, you must provide a minimum of
                        two correct answers, up to a maximum of 10 correct
                        answers. 

                        * For `rank_order` polls, you can only provide one
                        correct answer.
                      type: array
                      items:
                        type: string
                        example: Good
              rating_max_label:
                description: |-
                  The high score label used for the `rating_max_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Extremely Likely
              rating_max_value:
                description: >-
                  The rating scale's maximum value, up to a maximum value of
                  10. 


                  This field only applies to the `rating_scale` poll.
                maximum: 10
                type: integer
                example: 4
              rating_min_label:
                description: |-
                  The low score label used for the `rating_min_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Not likely
              rating_min_value:
                description: >-
                  The rating scale's minimum value. This value cannot be less
                  than zero. 


                  This field only applies to the `rating_scale` poll.
                minimum: 0
                type: integer
                example: 0
              right_answers:
                description: >-
                  The poll question's correct answer(s). This field is
                  **required** if the poll's `type` value is `3` (Quiz). 

                   For `single` and `matching` polls, this field only accepts one answer.
                minItems: 1
                type: array
                items:
                  type: string
                  example: Good
              show_as_dropdown:
                description: |-
                  Whether to display the radio selection as a drop-down box: 
                  * `true` &mdash; Show as a drop-down box. 
                  * `false` &mdash; Do not show as a drop-down box. 

                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              type:
                description: |-
                  The poll's question and answer type: 
                  * `single` &mdash; Single choice. 
                  * `multiple` &mdash; Multiple choice. 
                  * `matching` &mdash; Matching. 
                  * `rank_order` &mdash; Rank order. 
                  * `short_answer` &mdash; Short answer. 
                  * `long_answer` &mdash; Long answer. 
                  * `fill_in_the_blank` &mdash; Fill in the blank. 
                  * `rating_scale` &mdash; Rating scale.
                type: string
                example: single
                extensions:
                  x-enum-descriptions:
                    - Single choice
                    - Multiple choice
                    - Matching
                    - Rank order
                    - Short answer
                    - Long answer
                    - Fill in the blank
                    - Rating scale
                enum:
                  - single
                  - multiple
                  - matching
                  - rank_order
                  - short_answer
                  - long_answer
                  - fill_in_the_blank
                  - rating_scale
    MeetingsAddRegistrantRequest:
      description: Information about the meeting registrant.
      required:
        - email
        - first_name
      type: object
      properties:
        first_name:
          description: The registrant's first name.
          maxLength: 64
          type: string
          example: Jill
        last_name:
          description: The registrant's last name.
          maxLength: 64
          type: string
          example: Chill
        email:
          description: The registrant's email address.
          maxLength: 128
          type: string
          format: email
          example: jchill@example.com
        address:
          description: The registrant's address.
          type: string
          example: 1800 Amphibious Blvd.
        city:
          description: The registrant's city.
          type: string
          example: Mountain View
        state:
          description: The registrant's state or province.
          type: string
          example: CA
        zip:
          description: The registrant's ZIP or postal code.
          type: string
          example: '94045'
        country:
          description: >-
            The registrant's two-letter [country
            code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).
          type: string
          example: US
        phone:
          description: The registrant's phone number.
          type: string
          example: '5550100'
        comments:
          description: The registrant's questions and comments.
          type: string
          example: Looking forward to the discussion.
        custom_questions:
          description: Information about custom questions.
          type: array
          items:
            description: Information about custom questions.
            type: object
            properties:
              title:
                description: The title of the custom question.
                type: string
                example: What do you hope to learn from this?
              value:
                description: >-
                  The custom question's response value. This has a limit of 128
                  characters.
                maxLength: 128
                type: string
                example: >-
                  Look forward to learning how you come up with new recipes and
                  what other services you offer.
        industry:
          description: The registrant's industry.
          type: string
          example: Food
        job_title:
          description: The registrant's job title.
          type: string
          example: Chef
        no_of_employees:
          description: |-
            The registrant's number of employees: 
            * `1-20` 
            * `21-50` 
            * `51-100` 
            * `101-500` 
            * `500-1,000` 
            * `1,001-5,000` 
            * `5,001-10,000` 
            * `More than 10,000`
          type: string
          example: 1-20
          enum:
            - ''
            - 1-20
            - 21-50
            - 51-100
            - 101-500
            - 500-1,000
            - 1,001-5,000
            - 5,001-10,000
            - More than 10,000
        org:
          description: The registrant's organization.
          type: string
          example: Cooking Org
        purchasing_time_frame:
          description: |-
            The registrant's purchasing time frame: 
            * `Within a month` 
            * `1-3 months` 
            * `4-6 months` 
            * `More than 6 months` 
            * `No timeframe`
          type: string
          example: 1-3 months
          enum:
            - ''
            - Within a month
            - 1-3 months
            - 4-6 months
            - More than 6 months
            - No timeframe
        role_in_purchase_process:
          description: |-
            The registrant's role in the purchase process: 
            * `Decision Maker` 
            * `Evaluator/Recommender` 
            * `Influencer` 
            * `Not involved`
          type: string
          example: Influencer
          enum:
            - ''
            - Decision Maker
            - Evaluator/Recommender
            - Influencer
            - Not involved
        language:
          description: |-
            The registrant's language preference for confirmation emails: 
            * `en-US` &mdash; English (US) 
            * `de-DE` &mdash; German (Germany) 
            * `es-ES` &mdash; Spanish (Spain) 
            * `fr-FR` &mdash; French (France) 
            * `jp-JP` &mdash; Japanese 
            * `pt-PT` &mdash; Portuguese (Portugal) 
            * `ru-RU` &mdash; Russian 
            * `zh-CN` &mdash; Chinese (PRC) 
            * `zh-TW` &mdash; Chinese (Taiwan) 
            * `ko-KO` &mdash; Korean 
            * `it-IT` &mdash; Italian (Italy) 
            * `vi-VN` &mdash; Vietnamese 
            * `pl-PL` &mdash; Polish 
            * `Tr-TR` &mdash; Turkish
          type: string
          example: en-US
          enum:
            - en-US
            - de-DE
            - es-ES
            - fr-FR
            - jp-JP
            - pt-PT
            - ru-RU
            - zh-CN
            - zh-TW
            - ko-KO
            - it-IT
            - vi-VN
            - pl-PL
            - Tr-TR
        auto_approve:
          description: >-
            If a meeting was scheduled with the `approval_type` field value of
            `1` (manual approval) but you want to automatically approve meeting
            registrants, set the value of this field to `true`. 


            **Note:** You cannot use this field to change approval setting for a
            meeting originally scheduled with the `approval_type` field value of
            `0` (automatic approval).
          type: boolean
          example: true
    MeetingsUpdateRegistrationQuestionsRequest:
      title: Meeting Registrant Questions
      description: Meeting Registrant Questions
      type: object
      properties:
        custom_questions:
          description: Array of Registrant Custom Questions
          type: array
          items:
            type: object
            properties:
              title:
                description: Title of the custom question.
                type: string
                example: How are you?
              answers:
                description: >-
                  Answer choices for the question. Can not be used for `short`
                  question type as this type of question requires registrants to
                  type out the answer.
                type: array
                items:
                  type: string
                  example: Good
              required:
                description: >-
                  Indicates whether or not the custom question is required to be
                  answered by participants or not.
                type: boolean
                example: true
              type:
                description: Type of the question being asked.
                type: string
                example: short
                extensions:
                  x-enum-descriptions:
                    - Short Answer
                    - Single Answer
                enum:
                  - short
                  - single
        questions:
          description: Array of Registrant Questions
          type: array
          items:
            type: object
            properties:
              field_name:
                description: Field name of the question.
                type: string
                example: last_name
                enum:
                  - last_name
                  - address
                  - city
                  - country
                  - zip
                  - state
                  - phone
                  - industry
                  - org
                  - job_title
                  - purchasing_time_frame
                  - role_in_purchase_process
                  - no_of_employees
                  - comments
              required:
                description: >-
                  Indicates whether or not the displayed fields are required to
                  be filled out by registrants.
                type: boolean
                example: true
    MeetingsUpdateRegistrantStatusRequest:
      required:
        - action
      type: object
      properties:
        action:
          description: |-
            Registrant Status:  
             `approve` - Approve registrant.  
             `cancel` - Cancel previously approved registrant's registration.  
             `deny` - Deny registrant.
          type: string
          example: approve
          extensions:
            x-enum-descriptions:
              - Approve registrant
              - Cancel previously approved registrant
              - Deny registrant
          enum:
            - approve
            - cancel
            - deny
        registrants:
          description: List of registrants.
          maximum: 30
          type: array
          items:
            type: object
            properties:
              email:
                type: string
                example: jchill@example.com
              id:
                type: string
                example: 9tboDiHUQAeOnbmudzWa5g
    MeetingsGetSipUriWithPasscodeRequest:
      type: object
      properties:
        passcode:
          description: >-
            If customers desire that a passcode be embedded in the SIP URI dial
            string, they must supply the passcode. Zoom will not validate the
            passcode.
          type: string
          example: xxxx
    MeetingsUpdateMeetingStatusRequest:
      type: object
      properties:
        action:
          description: >
            `end` - End a meeting.  
             
            `recover` -
            [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting)
            a deleted meeting.
          type: string
          example: recover
          enum:
            - end
            - recover
    MeetingsUpdateSurveyRequest:
      title: Meeting Survey Object
      description: Information about the meeting survey.
      type: object
      properties:
        custom_survey:
          description: Information about the customized meeting survey.
          type: object
          properties:
            title:
              description: The survey's title, up to 64 characters.
              maxLength: 64
              type: string
              example: Learn something new
            anonymous:
              description: |-
                Allow participants to anonymously answer survey questions. 

                 This value defaults to `true`.
              type: boolean
              example: false
              default: false
            numbered_questions:
              description: |-
                Whether to display the number in the question name. 

                 This value defaults to `true`.
              type: boolean
              example: false
              default: false
            show_question_type:
              description: |-
                Whether to display the question type in the question name. 

                 This value defaults to `false`.
              type: boolean
              example: false
              default: false
            feedback:
              description: |-
                The survey's feedback, up to 320 characters. 

                 This value defaults to `Thank you so much for taking the time to complete the survey. Your feedback really makes a difference.`.
              maxLength: 320
              type: string
              example: >-
                Thank you so much for taking the time to complete the survey.
                Your feedback really makes a difference.
            questions:
              description: Information about the meeting survey's questions.
              maxItems: 100
              minItems: 1
              type: array
              items:
                type: object
                properties:
                  name:
                    description: The survey question, up to 420 characters.
                    type: string
                    example: How useful was this meeting?
                  type:
                    description: |-
                      The survey's question and answer type. 
                      * `single` - Single choice. 
                      * `multiple` - Multiple choice. 
                      * `matching` - Matching. 
                      * `rank_order` - Rank order 
                      * `short_answer` - Short answer 
                      * `long_answer` - Long answer. 
                      * `fill_in_the_blank` - Fill in the blank 
                      * `rating_scale` - Rating scale.
                    type: string
                    example: single
                    extensions:
                      x-enum-descriptions:
                        - Single choice
                        - Multiple choice
                        - Matching
                        - Rank order
                        - Short answer
                        - Long answer
                        - Fill in the blank
                        - Rating scale
                    enum:
                      - single
                      - multiple
                      - matching
                      - rank_order
                      - short_answer
                      - long_answer
                      - fill_in_the_blank
                      - rating_scale
                  answer_required:
                    description: >-
                      Whether participants must answer the question. 

                      * `true` - The participant must answer the question. 

                      * `false` - The participant does not need to answer the
                      question. 

                       This value defaults to `false`.
                    type: boolean
                    example: false
                    default: false
                  show_as_dropdown:
                    description: >-
                      Whether to display the radio selection as a drop-down
                      box. 

                      * `true` - Show as a drop-down box. 

                      * `false` - Do not show as a drop-down box. 

                       This value defaults to `false`.
                    type: boolean
                    example: false
                    default: false
                  answers:
                    description: >-
                      The survey question's available answers. This field
                      requires a **minimum** of two answers. 


                      * For `single` and `multiple` questions, you can only
                      provide a maximum of 50 answers. 

                      * For `matching` polls, you can only provide a maximum of
                      16 answers. 

                      * For `rank_order` polls, you can only provide a maximum
                      of seven answers.
                    minItems: 2
                    type: array
                    items:
                      maxLength: 200
                      type: string
                      example: Extremely useful
                  prompts:
                    description: >-
                      Information about the prompt questions. This field only
                      applies to `matching` and `rank_order` questions. You
                      **must** provide a minimum of two prompts, up to a maximum
                      of 10 prompts.
                    maxItems: 10
                    minItems: 2
                    type: array
                    items:
                      type: object
                      properties:
                        prompt_question:
                          description: The question prompt's title.
                          maxLength: 200
                          type: string
                          example: How are you?
                  answer_min_character:
                    description: >-
                      The allowed minimum number of characters. This field only
                      applies to `short_answer` and `long_answer` questions. You
                      must provide at least a **one** character minimum value.
                    minimum: 1
                    type: integer
                    example: 1
                  answer_max_character:
                    description: >-
                      The allowed maximum number of characters. This field only
                      applies to `short_answer` and `long_answer` questions. 

                      * For `short_answer` question, a maximum of 500
                      characters. 

                      * For `long_answer` question, a maximum of 2,000
                      characters.
                    type: integer
                    example: 200
                  rating_min_value:
                    description: >-
                      The rating scale's minimum value. This value cannot be
                      less than zero. 

                       This field only applies to the `rating_scale` survey.
                    minimum: 0
                    type: integer
                    example: 1
                  rating_max_value:
                    description: >-
                      The rating scale's maximum value, up to a maximum value of
                      10. 

                       This field only applies to the `rating_scale` survey.
                    maximum: 10
                    type: integer
                    example: 4
                  rating_min_label:
                    description: >-
                      The low score label used for the `rating_min_value` field,
                      up to 50 characters. 

                       This field only applies to the `rating_scale` survey.
                    maxLength: 50
                    type: string
                    example: Not likely
                  rating_max_label:
                    description: >-
                      The high score label used for the `rating_max_value`
                      field, up to 50 characters. 

                       This field only applies to the `rating_scale` survey.
                    maxLength: 50
                    type: string
                    example: Extremely Likely
        show_in_the_browser:
          description: >-
            Whether the **Show in the browser when the meeting ends** option is
            enabled. 

            * `true` - Enabled. 

            * `false` - Disabled. 

             This value defaults to `true`.
          type: boolean
          example: true
          default: true
        third_party_survey:
          description: The link to the third party meeting survey.
          maxLength: 64
          type: string
          example: https://example.com
    MeetingsCreateTemplateFromMeetingRequest:
      type: object
      properties:
        meeting_id:
          description: The meeting ID aka the meeting number in long (int64) format.
          type: integer
          format: int64
          example: 96172769962
        name:
          description: The template name.
          type: string
          example: My Meeting Template
        save_recurrence:
          description: >-
            If the field is set to true, the recurrence meeting template will be
            saved as the scheduled meeting.
          type: boolean
          example: false
          default: false
        overwrite:
          description: >-
            Overwrite an existing meeting template if the template is created
            from same existing meeting.
          type: boolean
          example: false
          default: false
    MeetingsCreateMeetingRequest:
      description: The base meeting object.
      type: object
      properties:
        agenda:
          description: >-
            The meeting's agenda. This value has a maximum length of 2,000
            characters.
          maxLength: 2000
          type: string
          example: My Meeting
        default_password:
          description: >-
            Whether to generate a default passcode using the user's settings.
            This value defaults to `false`. 


            If this value is `true` and the user has the PMI setting enabled
            with a passcode, then the user's meetings will use the PMI passcode.
            It will **not** use a default passcode.
          type: boolean
          example: false
          default: false
        duration:
          description: >-
            The meeting's scheduled duration, in minutes. This field is only
            used for scheduled meetings (`2`).
          type: integer
          example: 60
        password:
          description: >-
            The passcode required to join the meeting. By default, a passcode
            can **only** have a maximum length of 10 characters and only contain
            alphanumeric characters and the `@`, `-`, `_`, and `*` characters. 

            * If the account owner or administrator has configured [minimum
            passcode requirement
            settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
            the passcode **must** meet those requirements. 

            * If passcode requirements are enabled, use the [**Get user
            settings**](https://developers.zoom.us/docs/api-reference/zoom-api/methods#operation/userSettings)
            API or the [**Get account
            settings**](https://developers.zoom.us/docs/api-reference/zoom-api/ma#operation/accountSettings)
            API to get the requirements.
          maxLength: 10
          type: string
          example: '123456'
        pre_schedule:
          description: >-
            Whether to create a prescheduled meeting via the [GSuite
            app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on).
            This **only** supports the meeting `type` value of `2` (scheduled
            meetings) and `3` (recurring meetings with no fixed time). 

            * `true` - Create a prescheduled meeting. 

            * `false` - Create a regular meeting.
          type: boolean
          example: false
          default: false
        recurrence:
          description: >-
            Recurrence object. Use this object only for a meeting with type `8`,
            a recurring meeting with a fixed time. 
          required:
            - type
          type: object
          properties:
            end_date_time:
              description: >-
                Select the final date when the meeting will recur before it is
                canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z.
                Cannot be used with `end_times`.
              type: string
              format: date-time
              example: '2022-04-02T15:59:00Z'
            end_times:
              description: >-
                Select how many times the meeting should recur before it is
                canceled. The maximum number of recurring is 60. Cannot be used
                with `end_date_time`.
              maximum: 60
              type: integer
              example: 7
              default: 1
            monthly_day:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state the day in a month when the meeting
                should recur. The value range is from 1 to 31.


                For the meeting to recur on 23rd of each month, provide `23` as
                this field's value and `1` as the `repeat_interval` field's
                value. Instead, if you would like the meeting to recur every
                three months, on 23rd of the month, change the value of the
                `repeat_interval` field to `3`.
              type: integer
              example: 1
              default: 1
            monthly_week:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state the week of the month when the meeting
                should recur. If you use this field, you must also use the
                `monthly_week_day` field to state the day of the week when the
                meeting should recur.   
                 `-1` - Last week of the month.  
                 `1` - First week of the month.  
                 `2` - Second week of the month.  
                 `3` - Third week of the month.  
                 `4` - Fourth week of the month.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Last week
                  - First week
                  - Second week
                  - Third week
                  - Fourth week
              enum:
                - -1
                - 1
                - 2
                - 3
                - 4
            monthly_week_day:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state a specific day in a week when the monthly
                meeting should recur. To use this field, you must also use the
                `monthly_week` field. 

                  
                 `1` - Sunday.  
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` - Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
            repeat_interval:
              description: >+
                Define the interval when the meeting should recur. For instance,
                to schedule a meeting that recurs every two months, set this
                field's value as `2` and the value of the `type` parameter as
                `3`. 


                For a daily meeting, the maximum interval you can set is `90`
                days. For a weekly meeting the maximum interval that you can set
                is  of `12` weeks. For a monthly meeting, there is a maximum of
                `3` months.

              type: integer
              example: 1
            type:
              description: |-
                Recurrence meeting types.
                 `1` - Daily.  
                 `2` - Weekly.  
                 `3` - Monthly.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Daily
                  - Weekly
                  - Monthly
              enum:
                - 1
                - 2
                - 3
            weekly_days:
              description: >-
                This field is required if you're scheduling a recurring meeting
                of type `2` to state the days of the week when the meeting
                should repeat. 
                  
                  The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
                   
                  **Note:** To set the meeting to occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays, provide `1,3` as this field's value.

                   
                 `1` - Sunday.   
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` -  Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: string
              example: '1'
              default: '1'
              enum:
                - '1'
                - '2'
                - '3'
                - '4'
                - '5'
                - '6'
                - '7'
        schedule_for:
          description: The email address or user ID of the user to schedule a meeting for.
          type: string
          example: jchill@example.com
        settings:
          description: Information about the meeting's settings.
          type: object
          properties:
            additional_data_center_regions:
              description: >-
                Add additional meeting [data center
                regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars).
                Provide this value as an array of [country
                codes](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)
                for the countries available as data center regions in the
                [**Account Profile**](https://zoom.us/account/setting) interface
                but have been opted out of in the [user
                settings](https://zoom.us/profile).


                For example, the data center regions selected in your [**Account
                Profile**](https://zoom.us/account) are `Europe`, `Hong Kong
                SAR`, `Australia`, `India`, `Japan`, `China`, `United States`,
                and `Canada`. However, in the [**My
                Profile**](https://zoom.us/profile) settings, you did **not**
                select `India` and `Japan` for meeting and webinar traffic
                routing.


                To include `India` and `Japan` as additional data centers, use
                the `[IN, TY]` value for this field.
              type: array
              items:
                type: string
                example: TY
            allow_multiple_devices:
              description: >-
                Whether to allow attendees to join a meeting from multiple
                devices. This setting is only applied to meetings with
                registration enabled.
              type: boolean
              example: true
            alternative_hosts:
              description: >-
                A semicolon-separated list of the meeting's alternative hosts'
                email addresses or IDs.
              type: string
              example: jchill@example.com;thill@example.com
            alternative_hosts_email_notification:
              description: >-
                Whether to send email notifications to alternative hosts. This
                value defaults to `true`.
              type: boolean
              example: true
              default: true
            approval_type:
              description: |-
                Enable meeting registration approval.
                * `0` - Automatically approve registration.
                * `1` - Manually approve registration.
                * `2` - No registration required.

                This value defaults to `2`.
              type: integer
              example: 2
              extensions:
                x-enum-descriptions:
                  - Automatically approve registration.
                  - Manually approve registration.
                  - No registration required.
              default: 2
              enum:
                - 0
                - 1
                - 2
            approved_or_denied_countries_or_regions:
              description: >-
                The list of approved or blocked users from specific countries or
                regions who can join the meeting.
              type: object
              properties:
                approved_list:
                  description: The list of approved countries or regions.
                  type: array
                  items:
                    type: string
                    example: CX
                denied_list:
                  description: The list of blocked countries or regions.
                  type: array
                  items:
                    type: string
                    example: CA
                enable:
                  description: >-
                    Whether to enable the [**Approve or block entry for users
                    from specific
                    countries/regions**](https://support.zoom.us/hc/en-us/articles/360060086231-Approve-or-block-entry-for-users-from-specific-countries-regions)
                    setting.
                  type: boolean
                  example: true
                method:
                  description: >-
                    Whether to allow or block users from specific countries or
                    regions.

                    * `approve` - Allow users from specific countries or regions
                    to join the meeting. If you select this setting, include the
                    approved countries or regions in the `approved_list` field. 

                    * `deny` - Block users from specific countries or regions
                    from joining the meeting. If you select this setting,
                    include the blocked countries or regions in the
                    `denied_list` field.
                  type: string
                  example: approve
                  enum:
                    - approve
                    - deny
            audio:
              description: |-
                How participants join the audio portion of the meeting.
                * `both` - Both telephony and VoIP. 
                * `telephony` - Telephony only. 
                * `voip` - VoIP only. 
                * `thirdParty` - Third party audio conference.
              type: string
              example: telephony
              extensions:
                x-enum-descriptions:
                  - Telephony and VoIP.
                  - Telephony only.
                  - VoIP only.
                  - Third party audio conference.
              default: both
              enum:
                - both
                - telephony
                - voip
                - thirdParty
            audio_conference_info:
              description: Third party audio conference info.
              maxLength: 2048
              type: string
              example: test
            authentication_domains:
              description: >-
                The meeting's authenticated domains. Only Zoom users whose email
                address contains an authenticated domain can join the meeting.
                Comma-separate multiple domains or use a wildcard for listing
                domains.
              type: string
              example: example.com
            authentication_exception:
              description: >-
                A list of participants that can bypass meeting authentication.
                These participants will receive a unique meeting invite.
              type: array
              items:
                type: object
                properties:
                  email:
                    description: The participant's email address.
                    type: string
                    format: email
                    example: jchill@example.com
                  name:
                    description: The participant's name.
                    type: string
                    example: Jill Chill
            authentication_option:
              description: >-
                If the `meeting_authentication` value is `true`, the type of
                authentication required for users to join a meeting.


                To get this value, use the `authentication_options` array's `id`
                value in the [**Get user
                settings**](https://developers.zoom.us/docs/api-reference/zoom-api/methods#operation/userSettings)
                API response.
              type: string
              example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
            auto_recording:
              description: |-
                The automatic recording settings. 
                * `local` - Record the meeting locally. 
                * `cloud` - Record the meeting to the cloud. 
                * `none` - Auto-recording disabled.

                This value defaults to `none`.
              type: string
              example: cloud
              extensions:
                x-enum-descriptions:
                  - Record the meeting locally.
                  - Record the meeting to the cloud.
                  - Auto-recording disabled.
              default: none
              enum:
                - local
                - cloud
                - none
            breakout_room:
              description: >-
                The [pre-assigned breakout
                rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms)
                settings.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable the [**Breakout Room
                    pre-assign**](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms)
                    option.
                  type: boolean
                  example: true
                rooms:
                  description: Information about the breakout rooms.
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        description: The breakout room's name.
                        type: string
                        example: room1
                      participants:
                        description: >-
                          The email addresses of the participants to assign to
                          the breakout room.
                        type: array
                        items:
                          type: string
                          example: jchill@example.com
            calendar_type:
              description: >-
                Indicates the type of calendar integration used to schedule the
                meeting.

                * `1` - [Zoom Outlook
                add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 

                * `2` - [Zoom for Google Workspace
                add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)


                Works with the `private_meeting` field to determine whether to
                share details of meetings or not.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Outlook
                  - Google Calendar
              enum:
                - 1
                - 2
            close_registration:
              description: >-
                Whether to close registration after the event date. This value
                defaults to `false`.
              type: boolean
              example: false
              default: false
            cn_meeting:
              description: >-
                Whether to host the meeting in China (CN). This value defaults
                to `false`.
              type: boolean
              example: false
              deprecated: true
              default: false
            contact_email:
              description: The contact email address for meeting registration.
              type: string
              example: jchill@example.com
            contact_name:
              description: The contact name for meeting registration.
              type: string
              example: Jill Chill
            email_notification:
              description: >-
                Whether to send email notifications to [alternative
                hosts](https://support.zoom.us/hc/en-us/articles/208220166) and
                [users with scheduling
                privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege).
                This value defaults to `true`.
              type: boolean
              example: true
              default: true
            encryption_type:
              description: >-
                The type of [end-to-end (E2EE)
                encryption](https://support.zoom.us/hc/en-us/articles/360048660871)
                to use for the meeting. 

                * `enhanced_encryption` - Enhanced encryption. Encryption is
                stored in the cloud when you enable this option. 

                * `e2ee` - End-to-end encryption. The encryption key is stored
                on your local device and **cannot** be obtained by anyone else.
                When you use E2EE encryption, [certain
                features](https://support.zoom.us/hc/en-us/articles/360048660871),
                such as cloud recording or phone and SIP/H.323 dial-in, are
                **disabled**.
              type: string
              example: enhanced_encryption
              enum:
                - enhanced_encryption
                - e2ee
            focus_mode:
              description: >-
                Whether to enable the [**Focus Mode**
                feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode)
                when the meeting starts.
              type: boolean
              example: true
            global_dial_in_countries:
              description: A list of available global dial-in countries.
              type: array
              items:
                type: string
                example: US
            host_video:
              description: Whether to start meetings with the host video on.
              type: boolean
              example: true
            in_meeting:
              description: >-
                Whether to host the meeting in India (IN). This value defaults
                to `false`.
              type: boolean
              example: false
              deprecated: true
              default: false
            jbh_time:
              description: >-
                If the value of the `join_before_host` field is `true`, this
                field indicates the time limits when a participant can join a
                meeting before the meeting's host.


                * `0` - Allow the participant to join the meeting at anytime.

                * `5` - Allow the participant to join 5 minutes before the
                meeting's start time.

                * `10` - Allow the participant to join 10 minutes before the
                meeting's start time.
              type: integer
              example: 0
              enum:
                - 0
                - 5
                - 10
            join_before_host:
              description: >-
                Whether participants can join the meeting before its host. This
                field is only used for scheduled meetings (`2`) or recurring
                meetings (`3` and `8`). This value defaults to `false`.


                If the [**Waiting Room**
                feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room)
                is enabled, this setting is **disabled**.
              type: boolean
              example: false
              default: false
            language_interpretation:
              description: >-
                The meeting's [language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** This feature is only available for certain Meeting
                add-on, Education, and Business and higher plans. If this
                feature is not enabled on the host's account, this setting will
                **not** be applied to the meeting.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [language
                    interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                    for the meeting.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the meeting's language interpreters.
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      languages:
                        description: >-
                          A comma-separated list of the interpreter's languages.
                          The string must contain two [country
                          IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                          For example, if the interpreter will translate from
                          English to Chinese, then this value will be `US,CN`.
                        type: string
                        example: US,FR
            sign_language_interpretation:
              description: >-
                The meeting's [sign language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** If this feature is not enabled on the host's account,
                this setting will **not** be applied to the meeting.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [sign language
                    interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                    for the meeting.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the meeting's sign language interpreters.
                  maximum: 20
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      sign_language:
                        description: |-
                          The interpreter's sign language. 

                           To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                        type: string
                        example: American
            meeting_authentication:
              description: >-
                If true, only
                [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars)
                users can join the meeting.
              type: boolean
              example: true
            meeting_invitees:
              description: A list of the meeting's invitees.
              type: array
              items:
                type: object
                properties:
                  email:
                    description: The invitee's email address.
                    type: string
                    format: email
                    example: jchill@example.com
            mute_upon_entry:
              description: Whether to mute participants upon entry.
              type: boolean
              example: false
              default: false
            participant_video:
              description: Whether to start meetings with the participant video on.
              type: boolean
              example: false
            private_meeting:
              description: Whether to set the meeting as private.
              type: boolean
              example: false
            registrants_confirmation_email:
              description: |-
                Whether to send registrants an email confirmation. 
                * `true` - Send a confirmation email. 
                * `false` - Do not send a confirmation email.
              type: boolean
              example: true
            registrants_email_notification:
              description: >-
                Whether to send registrants email notifications about their
                registration approval, cancellation, or rejection.


                * `true` - Send an email notification.

                * `false` - Do not send an email notification.

                 Set this value to `true` to also use the `registrants_confirmation_email` parameter.
              type: boolean
              example: true
            registration_type:
              description: >-
                The meeting's registration type. 

                * `1` - Attendees register once and can attend any meeting
                occurrence. 

                * `2` - Attendees must register for each meeting occurrence. 

                * `3` - Attendees register once and can select one or more
                meeting occurrences to attend.


                This field is only for recurring meetings with fixed times
                (`8`). This value defaults to `1`.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - >-
                    Attendees register once and can attend any meeting
                    occurrence.
                  - Attendees must register for each meeting occurrence.
                  - >-
                    Attendees register once and can select one or more meeting
                    occurrences to attend.
              default: 1
              enum:
                - 1
                - 2
                - 3
            show_share_button:
              description: >-
                Whether to include social media sharing buttons on the meeting's
                registration page. This setting is only applied to meetings with
                registration enabled.
              type: boolean
              example: true
            use_pmi:
              description: >-
                Whether to use a [Personal Meeting ID
                (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi)
                instead of a generated meeting ID. This field is only used for
                scheduled meetings (`2`), instant meetings (`1`), or recurring
                meetings with no fixed time (`3`). This value defaults to
                `false`.
              type: boolean
              example: false
              default: false
            waiting_room:
              description: >-
                Whether to enable the [**Waiting Room**
                feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room).
                If this value is `true`, this **disables** the
                `join_before_host` setting.
              type: boolean
              example: false
            watermark:
              description: Whether to add a watermark when viewing a shared screen.
              type: boolean
              example: false
              default: false
            host_save_video_order:
              description: >-
                Whether the **Allow host to save video order** feature is
                enabled.
              type: boolean
              example: true
            alternative_host_update_polls:
              description: >-
                Whether the **Allow alternative hosts to add or edit polls**
                feature is enabled. This requires Zoom version 5.8.0 or higher.
              type: boolean
              example: true
            internal_meeting:
              description: Whether to set the meeting as an internal meeting.
              type: boolean
              example: false
              default: false
            continuous_meeting_chat:
              description: >-
                Information about the **Enable continuous meeting chat**
                feature.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable the **Enable continuous meeting chat**
                    setting.
                  type: boolean
                  example: true
                auto_add_invited_external_users:
                  description: >-
                    Whether to enable the **Automatically add invited external
                    users** setting.
                  type: boolean
                  example: true
            participant_focused_meeting:
              description: Whether to set the meeting as a participant focused meeting.
              type: boolean
              example: false
              default: false
            push_change_to_calendar:
              description: |-
                Whether to push meeting changes to the calendar. 

                 To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.
                * `true` - Push meeting changes to the calendar.
                * `false` - Do not push meeting changes to the calendar.
              type: boolean
              example: false
              default: false
            resources:
              description: The meeting's resources.
              type: array
              items:
                type: object
                properties:
                  resource_type:
                    description: The resource type.
                    type: string
                    example: whiteboard
                    enum:
                      - whiteboard
                  resource_id:
                    description: The resource ID.
                    type: string
                    example: X4Hy02w3QUOdskKofgb9Jg
                  permission_level:
                    description: >-
                      The permission levels for users to access the whiteboard. 

                      * `editor` - Users with link access can edit the board. 

                      * `commenter` - Users with link access can comment on the
                      board. 

                      * `viewer` - Users with link access can view the board.
                    type: string
                    example: editor
                    default: editor
                    enum:
                      - editor
                      - commenter
                      - viewer
        start_time:
          description: >-
            The meeting's start time. This field is only used for scheduled or
            recurring meetings with a fixed time. This supports local time and
            GMT formats. 

            * To set a meeting's start time in GMT, use the
            `yyyy-MM-ddTHH:mm:ssZ` date-time format. For example,
            `2020-03-31T12:02:00Z`. 

            * To set a meeting's start time using a specific timezone, use the
            `yyyy-MM-ddTHH:mm:ss` date-time format and specify the [timezone
            ID](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)
            in the `timezone` field. If you do not specify a timezone, the
            `timezone` value defaults to your Zoom account's timezone. You can
            also use `UTC` for the `timezone` value.

            **Note:** If no `start_time` is set for a scheduled meeting, the
            `start_time` is set at the current time and the meeting type changes
            to an instant meeting, which expires after 30 days.
          type: string
          format: date-time
          example: '2022-03-25T07:32:55Z'
        template_id:
          description: >-
            The account admin meeting template ID used to schedule a meeting
            using a [meeting
            template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates).
            For a list of account admin-provided meeting templates, use the
            [**List meeting
            templates**](https://developers.zoom.us/docs/api-reference/zoom-api/methods#operation/listMeetingTemplates)
            API. 

            * At this time, this field **only** accepts account admin meeting
            template IDs. 

            * To enable the account admin meeting templates feature, [contact
            Zoom support](https://support.zoom.us/hc/en-us).
          type: string
          example: Dv4YdINdTk+Z5RToadh5ug==
        timezone:
          description: >-
            The timezone to assign to the `start_time` value. This field is only
            used for scheduled or recurring meetings with a fixed time.


            For a list of supported timezones and their formats, see our
            [timezone
            list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
          type: string
          example: America/Los_Angeles
        topic:
          description: The meeting's topic.
          maxLength: 200
          type: string
          example: My Meeting
        tracking_fields:
          description: Information about the meeting's tracking fields.
          type: array
          items:
            required:
              - field
            type: object
            properties:
              field:
                description: The tracking field's label.
                type: string
                example: field1
              value:
                description: The tracking field's value.
                type: string
                example: value1
        type:
          description: |-
            The type of meeting.
            * `1` - An instant meeting. 
            * `2` - A scheduled meeting. 
            * `3` - A recurring meeting with no fixed time. 
            * `8` - A recurring meeting with fixed time.
          type: integer
          example: 2
          extensions:
            x-enum-descriptions:
              - Instant meeting.
              - Scheduled meeting.
              - Recurring meeting with no fixed time.
              - Recurring meeting with fixed time.
          default: 2
          enum:
            - 1
            - 2
            - 3
            - 8
    SipPhoneEnableUserSipPhoneRequest:
      required:
        - authorization_name
        - domain
        - password
        - proxy_server
        - register_server
        - user_email
        - user_name
        - voice_mail
      type: object
      properties:
        authorization_name:
          description: The authorization name of the user that is registered for SIP phone.
          maxLength: 64
          type: string
          example: testname
        domain:
          description: >-
            The name or IP address of your provider's SIP domain (example:
            CDC.WEB). 
          maxLength: 64
          type: string
          example: example.com
        password:
          description: The password generated for the user in the SIP account.
          type: string
          example: '123456'
        proxy_server:
          description: >-
            The IP address of the proxy server for SIP requests. Note that if
            you are using the UDP transport protocol, the default port is 5060.
            If you are using UDP with a different port number, that port number
            must be included with the IP address. If you are not using a proxy
            server, this value can be the same as the Register Server.
          type: string
          example: 192.0.2.2
        proxy_server2:
          description: >-
            The IP address of the proxy server for SIP requests. Note that if
            you are using the UDP transport protocol, the default port is 5060.
            If you are using UDP with a different port number, that port number
            must be included with the IP address. If you are not using a proxy
            server, this value can be the same as the Register Server, or empty.
          type: string
          example: 192.0.2.4
        proxy_server3:
          description: >-
            The IP address of the proxy server for SIP requests. Note that if
            you are using the UDP transport protocol, the default port is 5060.
            If you are using UDP with a different port number, that port number
            must be included with the IP address. If you are not using a proxy
            server, this value can be the same as the Register Server, or empty.
          type: string
          example: 192.0.2.6
        register_server:
          description: >-
            The IP address of the server that accepts REGISTER requests. Note
            that if you are using the UDP transport protocol, the default port
            is 5060. If you are using UDP with a different port number, that
            port number must be included with the IP address.
          type: string
          example: 192.0.2.1
        register_server2:
          description: >-
            The IP address of the server that accepts REGISTER requests. Note
            that if you are using the UDP transport protocol, the default port
            is 5060. If you are using UDP with a different port number, that
            port number must be included with the IP address.
          type: string
          example: 192.0.2.3
        register_server3:
          description: >-
            The IP address of the server that accepts REGISTER requests. Note
            that if you are using the UDP transport protocol, the default port
            is 5060. If you are using UDP with a different port number, that
            port number must be included with the IP address.
          type: string
          example: 192.0.2.5
        registration_expire_time:
          description: >-
            The number of minutes after which the SIP registration of the Zoom
            client user will expire, and the client will auto register to the
            SIP server.
          maximum: 127
          minimum: 1
          type: integer
          example: 60
          default: 60
        transport_protocol:
          description: |-
            Protocols supported by the SIP provider.  
              The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
          type: string
          example: UDP
          enum:
            - UDP
            - TCP
            - TLS
            - AUTO
        transport_protocol2:
          description: |-
            Protocols supported by the SIP provider.  
              The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
          type: string
          example: UDP
          enum:
            - UDP
            - TCP
            - TLS
            - AUTO
        transport_protocol3:
          description: |-
            Protocols supported by the SIP provider.  
              The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
          type: string
          example: UDP
          enum:
            - UDP
            - TCP
            - TLS
            - AUTO
        user_email:
          description: >-
            The email address of the user to associate with the SIP Phone. Can
            add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`,
            `.mobile`, `.pad` at the end of the email (for example,
            `user@example.com.mac`) to add accounts for different platforms for
            the same user.
          maxLength: 64
          type: string
          format: email
          example: jchill@example.com
        user_name:
          description: The phone number associated with the user in the SIP account.
          maxLength: 64
          type: string
          example: Jill Chill
        voice_mail:
          description: The number to dial for checking voicemail.
          maxLength: 255
          type: string
          example: '4000'
    SipPhoneUpdateSpecificPhoneRequest:
      required:
        - authorization_name
        - domain
        - password
        - proxy_server
        - proxy_server2
        - proxy_server3
        - register_server
        - register_server2
        - register_server3
        - user_name
        - voice_mail
      type: object
      properties:
        authorization_name:
          description: The authorization name of the user that is registered for SIP phone.
          maxLength: 64
          type: string
          example: testname
        domain:
          description: >-
            The name or IP address of your provider's SIP domain (example:
            CDC.WEB). 
          maxLength: 64
          type: string
          example: example.com
        password:
          description: The password generated for the user in the SIP account.
          type: string
          example: '123456'
        proxy_server:
          description: >-
            The IP address of the proxy server for SIP requests. Note that if
            you are using the UDP transport protocol, the default port is 5060.
            If you are using UDP with a different port number, that port number
            must be included with the IP address. If you are not using a proxy
            server, this value can be the same as the Register Server.
          type: string
          example: 192.0.2.2
        proxy_server2:
          description: >-
            The IP address of the proxy server for SIP requests. Note that if
            you are using the UDP transport protocol, the default port is 5060.
            If you are using UDP with a different port number, that port number
            must be included with the IP address. If you are not using a proxy
            server, this value can be the same as the Register Server.
          type: string
          example: 192.0.2.4
        proxy_server3:
          description: >-
            The IP address of the proxy server for SIP requests. Note that if
            you are using the UDP transport protocol, the default port is 5060.
            If you are using UDP with a different port number, that port number
            must be included with the IP address. If you are not using a proxy
            server, this value can be the same as the Register Server.
          type: string
          example: 192.0.2.6
        register_server:
          description: >-
            The IP address of the server that accepts REGISTER requests. Note
            that if you are using the UDP transport protocol, the default port
            is 5060. If you are using UDP with a different port number, that
            port number must be included with the IP address.
          type: string
          example: 192.0.2.1
        register_server2:
          description: >-
            The IP address of the server that accepts REGISTER requests. Note
            that if you are using the UDP transport protocol, the default port
            is 5060. If you are using UDP with a different port number, that
            port number must be included with the IP address.
          type: string
          example: 192.0.2.3
        register_server3:
          description: >-
            The IP address of the server that accepts REGISTER requests. Note
            that if you are using the UDP transport protocol, the default port
            is 5060. If you are using UDP with a different port number, that
            port number must be included with the IP address.
          type: string
          example: 192.0.2.5
        registration_expire_time:
          description: >-
            The number of minutes after which the SIP registration of the Zoom
            client user will expire, and the client will auto register to the
            SIP server.
          maximum: 127
          minimum: 1
          type: integer
          example: 60
          default: 60
        transport_protocol:
          description: |-
            Protocols supported by the SIP provider.  
              The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
          type: string
          example: UDP
          enum:
            - UDP
            - TCP
            - TLS
            - AUTO
        transport_protocol2:
          description: |-
            Protocols supported by the SIP provider.  
              The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
          type: string
          example: UDP
          enum:
            - UDP
            - TCP
            - TLS
            - AUTO
        transport_protocol3:
          description: |-
            Protocols supported by the SIP provider.  
              The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
          type: string
          example: UDP
          enum:
            - UDP
            - TCP
            - TLS
            - AUTO
        user_name:
          description: The phone number associated with the user in the SIP account.
          maxLength: 64
          type: string
          example: Jill Chill
        voice_mail:
          description: The number to dial for checking voicemail.
          maxLength: 255
          type: string
          example: '4000'
    TspUpdateAccountTspInformationRequest:
      type: object
      properties:
        dial_in_number_unrestricted:
          description: >-
            Control restriction on account users adding a TSP number outside of
            account's dial in numbers.
          type: boolean
          example: true
        enable:
          description: Enable 3rd party audio conferencing for account users
          type: boolean
          example: true
        master_account_setting_extended:
          description: >-
            For master account, extend its TSP setting to all sub accounts. For
            sub account, extend TSP setting from master account.
          type: boolean
          example: true
        modify_credential_forbidden:
          description: >-
            Control restriction on account users being able to modify their TSP
            credentials.
          type: boolean
          example: true
        tsp_bridge:
          description: Telephony bridge
          type: string
          example: US_TSP_TB
          enum:
            - US_TSP_TB
            - EU_TSP_TB
        tsp_enabled:
          description: >-
            Enable TSP feature for account. This has to be enabled to use any
            other tsp settings/features.
          type: boolean
          example: true
        tsp_provider:
          description: 3rd party audio conferencing provider
          type: string
          example: someprovidername
    TspAddUserTspAccountRequest:
      title: TSP Accounts List
      description: List of TSP accounts.
      required:
        - conference_code
        - leader_pin
      type: object
      properties:
        conference_code:
          description: 'Conference code: numeric value, length is less than 16.'
          maxLength: 16
          minLength: 1
          type: string
          example: '0125'
        dial_in_numbers:
          description: List of dial in numbers.
          type: array
          items:
            type: object
            properties:
              code:
                description: Country code.
                maxLength: 6
                type: string
                example: '1'
              country_label:
                description: Country Label, if passed, will display in place of code.
                maxLength: 10
                type: string
                example: America
              number:
                description: 'Dial-in number: length is less than 16.'
                maxLength: 16
                minLength: 1
                type: string
                example: +1 1000200200
              type:
                description: |-
                  Dial-in number types:  
                   `toll` - Toll number.  
                   `tollfree` -Toll free number.  
                   
                  `media_link` - Media link.
                type: string
                example: toll
                extensions:
                  x-enum-descriptions:
                    - Toll number <br/>
                    - Toll free number <br/>
                    - Media link phone number <br/>
                enum:
                  - toll
                  - tollfree
                  - media_link
        leader_pin:
          description: 'Leader PIN: numeric value, length is less than 16.'
          maxLength: 16
          minLength: 1
          type: string
          example: US_TSP_TB
        tsp_bridge:
          description: Telephony bridge
          type: string
          example: US_TSP_TB
          enum:
            - US_TSP_TB
            - EU_TSP_TB
    TspSetGlobalDialInUrlRequest:
      title: TSP Global Dial-In URL Setting
      type: object
      properties:
        audio_url:
          description: >-
            The global dial-in URL for a TSP enabled account. The URL must be
            valid with a max-length of 512 characters.
          maxLength: 512
          type: string
          example: https://example.com
    TspUpdateUserTspAccountRequest:
      title: TSP Account
      description: TSP account.
      required:
        - conference_code
        - leader_pin
      type: object
      properties:
        conference_code:
          description: 'Conference code: numeric value, length is less than 16.'
          maxLength: 16
          minLength: 1
          type: string
          example: '0125'
        dial_in_numbers:
          description: List of dial in numbers.
          type: array
          items:
            type: object
            properties:
              code:
                description: Country code.
                maxLength: 6
                type: string
                example: '1'
              country_label:
                description: Country Label, if passed, will display in place of code.
                maxLength: 10
                type: string
                example: America
              number:
                description: 'Dial-in number: length is less than 16.'
                maxLength: 16
                minLength: 1
                type: string
                example: +1 1000200200
              type:
                description: |-
                  Dial-in number types:  
                   `toll` - Toll number.  
                   `tollfree` -Toll free number.  
                   `media_link` - Media Link Phone Number. It is used for PSTN integration instead of paid bridge number.
                type: string
                example: toll
                extensions:
                  x-enum-descriptions:
                    - Toll number <br/>
                    - Toll free number <br/>
                    - Media link phone number <br/>
                enum:
                  - toll
                  - tollfree
                  - media_link
        leader_pin:
          description: 'Leader PIN: numeric value, length is less than 16.'
          maxLength: 16
          minLength: 1
          type: string
          example: '11189898'
        tsp_bridge:
          description: Telephony bridge
          type: string
          example: US_TSP_TB
          enum:
            - US_TSP_TB
            - EU_TSP_TB
    TrackingFieldCreateFieldRequest:
      title: Tracking Field
      description: Tracking Field
      type: object
      properties:
        field:
          description: Label/ Name for the tracking field.
          type: string
          example: field1
        recommended_values:
          description: Array of recommended values
          type: array
          items:
            type: string
            example: value1
        required:
          description: Tracking Field Required
          type: boolean
          example: false
        visible:
          description: Tracking Field Visible
          type: boolean
          example: true
    TrackingFieldUpdateRequest:
      title: Tracking Field
      description: Tracking Field
      type: object
      properties:
        field:
          description: Label/ Name for the tracking field.
          type: string
          example: field1
        recommended_values:
          description: Array of recommended values
          type: array
          items:
            type: string
            example: value1
        required:
          description: Tracking Field Required
          type: boolean
          example: false
        visible:
          description: Tracking Field Visible
          type: boolean
          example: true
    WebinarsCreateWebinarTemplateRequest:
      type: object
      properties:
        webinar_id:
          description: The webinar ID in long (int64) format.
          type: integer
          format: int64
          example: 96172769962
        name:
          description: The webinar template's name.
          type: string
          example: Weekly Meeting Template
        save_recurrence:
          description: >-
            If the field is set to true, the recurrence webinar template will be
            saved as the scheduled webinar.
          type: boolean
          example: false
          default: false
        overwrite:
          description: >-
            Overwrite an existing webinar template if the template is created
            from same existing webinar.
          type: boolean
          example: false
          default: false
    WebinarsCreateWebinarRequest:
      description: Webinar object.
      type: object
      properties:
        agenda:
          description: Webinar description.
          type: string
          example: My Webinar
        duration:
          description: Webinar duration in minutes. Used for scheduled webinars only.
          type: integer
          example: 60
        password:
          description: >-
            Webinar passcode. Passcode may only contain the characters [a-z A-Z
            0-9 @ - _ * !]. Maximum of 10 characters.


            If **Require a passcode when scheduling new meetings** setting has
            been **enabled** **and**
            [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
            for the user, the passcode field will be autogenerated for the
            Webinar in the response even if it is not provided in the API
            request. 
             

            **Note:** If the account owner or the admin has configured [minimum
            passcode requirement
            settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
            the passcode value provided here must meet those requirements.   
               
             If the requirements are enabled, you can view those requirements by calling the [**Get account settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/ma#operation/accountSettings) API.
          type: string
          example: '123456'
        recurrence:
          title: Recurrence webinar
          description: >-
            Recurrence object. Use this object only for a webinar of type `9`, a
            recurring webinar with fixed time. 
          required:
            - type
          type: object
          properties:
            end_date_time:
              description: >-
                Select a date when the webinar will recur before it is canceled.
                Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be
                used with `end_times`.
              type: string
              format: date-time
              example: '2022-04-02T15:59:00Z'
            end_times:
              description: >-
                Select how many times the webinar will recur before it is
                canceled. The maximum number of recurring is 60. Cannot be used
                with `end_date_time`.
              maximum: 60
              type: integer
              example: 7
              default: 1
            monthly_day:
              description: >-
                Use this field **only if you're scheduling a recurring webinar
                of type** `3` to state which day in a month the webinar should
                recur. The value range is from 1 to 31.


                For instance, if you would like the webinar to recur on 23rd of
                each month, provide `23` as the value of this field and `1` as
                the value of the `repeat_interval` field. Instead, if you would
                like the webinar to recur once every three months, on 23rd of
                the month, change the value of the `repeat_interval` field to
                `3`.
              type: integer
              example: 1
            monthly_week:
              description: >-
                Use this field **only if you're scheduling a recurring webinar
                of type** `3` to state the week of the month when the webinar
                should recur. If you use this field, **you must also use the
                `monthly_week_day` field to state the day of the week when the
                webinar should recur.**   
                 `-1` - Last week of the month.  
                 `1` - First week of the month.  
                 `2` - Second week of the month.  
                 `3` - Third week of the month.  
                 `4` - Fourth week of the month.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Last week
                  - First week
                  - Second week
                  - Third week
                  - Fourth week
              enum:
                - -1
                - 1
                - 2
                - 3
                - 4
            monthly_week_day:
              description: >-
                Use this field **only if you're scheduling a recurring webinar
                of type** `3` to state a specific day in a week when the monthly
                webinar should recur. To use this field, you must also use the
                `monthly_week` field.   
                 `1` - Sunday.  
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` - Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
            repeat_interval:
              description: >-
                Define the interval when the webinar should recur. For instance,
                if you would like to schedule a Webinar that recurs every two
                months, you must set the value of this field as `2` and the
                value of the `type` parameter as `3`. 


                For a daily webinar, the maximum interval you can set is `90`
                days. For a weekly webinar, the maximum interval that you can
                set is `12` weeks. For a monthly webinar, the maximum interval
                that you can set is `3` months.
              type: integer
              example: 1
            type:
              description: |-
                Recurrence webinar types.
                 `1` - Daily.  
                 `2` - Weekly.  
                 `3` - Monthly.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Daily
                  - Weekly
                  - Monthly
              enum:
                - 1
                - 2
                - 3
            weekly_days:
              description: >+
                Use this field **only if you're scheduling a recurring webinar
                of type** `2` to state which day(s) of the week the webinar
                should repeat.

                The value for this field could be a number between `1` to `7` in
                string format. For instance, if the webinar should recur on
                Sunday, provide `1` as the value of this field.    
                   
                  **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the webinar should recur on Sundays and Tuesdays, provide `1,3` as the value of this field.

                  
                 `1`  - Sunday.   
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` -  Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.

              type: string
              example: '1'
        schedule_for:
          description: The email address or user ID of the user to schedule a webinar for.
          type: string
          example: jchill@example.com
        settings:
          description: Create webinar settings.
          type: object
          properties:
            allow_multiple_devices:
              description: Allow attendees to join from multiple devices.
              type: boolean
              example: true
            alternative_hosts:
              description: >-
                Alternative host emails or IDs. Multiple values separated by
                comma.
              type: string
              example: jchill@example.com;thill@example.com
            alternative_host_update_polls:
              description: >-
                Whether the **Allow alternative hosts to add or edit polls**
                feature is enabled. This requires Zoom version 5.8.0 or higher.
              type: boolean
              example: true
            approval_type:
              description: >-
                The default value is `2`. To enable registration required, set
                the approval type to `0` or `1`.  Values include:  
                 

                `0` - Automatically approve.  
                 `1` - Manually approve.  
                 `2` - No registration required.
              type: integer
              example: 0
              extensions:
                x-enum-descriptions:
                  - Automatically Approve
                  - Manually Approve
                  - No Registration Required
              default: 2
              enum:
                - 0
                - 1
                - 2
            attendees_and_panelists_reminder_email_notification:
              description: Send reminder email to attendees and panelists.
              type: object
              properties:
                enable:
                  description: >-
                    * `true`: Send reminder email to attendees and panelists.


                    * `false`: Do not send reminder email to attendees and
                    panelists.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 hour before webinar.  
                     `2` - Send 1 day before webinar.  
                     `3` - Send 1 hour and 1 day before webinar.  
                     `4` - Send 1 week before webinar.  
                     `5` - Send 1 hour and 1 week before webinar.  
                     `6` - Send 1 day and 1 week before webinar.  
                     `7` - Send 1 hour, 1 day and 1 week before webinar.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 hour before webinar.
                      - Send 1 day before webinar.
                      - Send 1 hour and 1 day before webinar.
                      - Send 1 week before webinar.
                      - Send 1 hour and 1 week before webinar.
                      - Send 1 day and 1 week before webinar.
                      - Send 1 hour, 1 day and 1 week before webinar.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            audio:
              description: >-
                Determine how participants can join the audio portion of the
                meeting.(Not supported for simulive webinar.)
              type: string
              example: telephony
              extensions:
                x-enum-descriptions:
                  - Both Telephony and VoIP
                  - Telephony only
                  - VoIP only
                  - Third party audio conference
              default: both
              enum:
                - both
                - telephony
                - voip
                - thirdParty
            audio_conference_info:
              description: Third party audio conference info.
              maxLength: 2048
              type: string
              example: test
            authentication_domains:
              description: >-
                Meeting authentication domains. This option allows you to
                specify the rule so that Zoom users whose email address contains
                a certain domain can join the webinar. You can either provide
                multiple comma-separated domains, use a wildcard for listing
                domains, or use both methods.
              type: string
              example: example.com
            authentication_option:
              description: >-
                Specify the authentication type for users to join a Webinar
                with`meeting_authentication` setting set to `true`. The value of
                this field can be retrieved from the `id` field within
                `authentication_options` array in the response of [**Get user
                settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings)
                API.
              type: string
              example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
            auto_recording:
              description: |-
                Automatic recording. Not supported for simulive webinar.   
                 `local` - Record on local.  
                 `cloud` -  Record on cloud.  
                 `none` - Disabled.
              type: string
              example: cloud
              extensions:
                x-enum-descriptions:
                  - Record to local device
                  - Record to cloud
                  - No Recording
              default: none
              enum:
                - local
                - cloud
                - none
            close_registration:
              description: Close registration after event date.
              type: boolean
              example: true
              deprecated: true
            contact_email:
              description: Contact email for registration
              type: string
              example: jchill@example.com
            contact_name:
              description: Contact name for registration
              type: string
              example: Jill Chill
            email_language:
              description: >-
                Set the email language.

                `en-US`,`de-DE`,`es-ES`,`fr-FR`,`id-ID`,`jp-JP`,`nl-NL`,`pl-PL`,`pt-PT`,`ru-RU`,`tr-TR`,`zh-CN`,
                `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
              type: string
              example: en-US
            enforce_login:
              description: >-
                Only signed-in users can join this meeting. 


                **This field is deprecated and will not be supported in
                future.**   
                   
                  Instead of this field, use the `meeting_authentication`, `authentication_option`, or `authentication_domains` fields to establish the authentication mechanism for this Webinar. 
              type: boolean
              example: true
              deprecated: true
            enforce_login_domains:
              description: >-
                Only signed-in users with specified domains can join meetings.


                **This field is deprecated and will not be supported in
                future.**   
                 
                  Instead of this field, use the `authentication_domains` field for this webinar. 
              type: string
              example: example.com
              deprecated: true
            follow_up_absentees_email_notification:
              description: Send follow-up email to absentees.
              type: object
              properties:
                enable:
                  description: |-
                    * `true` - Send follow-up email to absentees.

                    * `false` - Do not send follow-up email to absentees.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 days after the scheduled end date.  
                     `2` - Send 2 days after the scheduled end date.  
                     `3` - Send 3 days after the scheduled end date.  
                     `4` - Send 4 days after the scheduled end date.  
                     `5` - Send 5 days after the scheduled end date.  
                     `6` - Send 6 days after the scheduled end date.  
                     `7` - Send 7 days after the scheduled end date.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 days after the scheduled end date.
                      - Send 2 days after the scheduled end date.
                      - Send 3 days after the scheduled end date.
                      - Send 4 days after the scheduled end date.
                      - Send 5 days after the scheduled end date.
                      - Send 6 days after the scheduled end date.
                      - Send 7 days after the scheduled end date.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            follow_up_attendees_email_notification:
              description: Send follow-up email to attendees.
              type: object
              properties:
                enable:
                  description: |-
                    * `true`: Send follow-up email to attendees.

                    * `false`: Do not send follow-up email to attendees.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 day after the scheduled end date.  
                     `2` - Send 2 days after the scheduled end date.  
                     `3` - Send 3 days after the scheduled end date.  
                     `4` - Send 4 days after the scheduled end date.  
                     `5` - Send 5 days after the scheduled end date.  
                     `6` - Send 6 days after the scheduled end date.  
                     `7` - Send 7 days after the scheduled end date.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 day after the scheduled end date.
                      - Send 2 days after the scheduled end date.
                      - Send 3 days after the scheduled end date.
                      - Send 4 days after the scheduled end date.
                      - Send 5 days after the scheduled end date.
                      - Send 6 days after the scheduled end date.
                      - Send 7 days after the scheduled end date.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            global_dial_in_countries:
              description: List of global dial-in countries
              type: array
              items:
                type: string
                example: US
            hd_video:
              description: Default to HD video.(Not supported for simulive webinar.)
              type: boolean
              example: false
              default: false
            hd_video_for_attendees:
              description: >-
                Whether HD video for attendees is enabled. This value defaults
                to `false`.(Not supported for simulive webinar.)
              type: boolean
              example: false
              default: false
            host_video:
              description: >-
                Start video when host joins webinar.(Not supported for simulive
                webinar.)
              type: boolean
              example: true
            language_interpretation:
              description: >-
                The webinar's [language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** This feature is only available for certain Webinar
                add-on, Education, and Business and higher plans. If this
                feature is not enabled on the host's account, this setting will
                **not** be applied to the webinar. This is not supported for
                simulive webinars.
              type: object
              properties:
                enable:
                  description: >-
                    Enable [language
                    interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                    for the webinar.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the webinar's language interpreters.
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      languages:
                        description: >-
                          A comma-separated list of the interpreter's languages.
                          The string must contain two [country
                          IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                          For example, if the interpreter will translate from
                          English to Chinese, then this value will be `US,CN`.
                        type: string
                        example: US,CN
            sign_language_interpretation:
              description: >-
                The webinar's [sign language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** If this feature is not enabled on the host's account,
                this setting will **not** be applied to the webinar.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [sign language
                    interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                    for the webinar.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the webinar's sign language interpreters.
                  maximum: 20
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      sign_language:
                        description: |-
                          The interpreter's sign language. 

                           To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API response.
                        type: string
                        example: American
            panelist_authentication:
              description: Require panelists to authenticate to join
              type: boolean
              example: true
            meeting_authentication:
              description: >-
                Only
                [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars)
                users can join meeting if the value of this field is set to
                `true`.
              type: boolean
              example: true
            add_watermark:
              description: >-
                Add watermark that identifies the viewing participant. Not
                supported for simulive webinar.
              type: boolean
              example: true
            add_audio_watermark:
              description: >-
                Add audio watermark that identifies the participants. Not
                supported for simulive webinar.
              type: boolean
              example: true
            on_demand:
              description: Make the webinar on-demand. Not supported for simulive webinar.
              type: boolean
              example: false
              default: false
            panelists_invitation_email_notification:
              description: >-
                Send invitation email to panelists. If `false`, do not send
                invitation email to panelists.
              type: boolean
              example: true
            panelists_video:
              description: >-
                Start video when panelists join webinar. Not supported for
                simulive webinar.
              type: boolean
              example: true
            post_webinar_survey:
              description: >-
                Zoom will open a survey page in attendees' browsers after
                leaving the webinar
              type: boolean
              example: true
            practice_session:
              description: Enable practice session.
              type: boolean
              example: false
              default: false
            question_and_answer:
              description: >-
                [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                for webinar.
              type: object
              properties:
                allow_submit_questions:
                  description: |-
                    * `true`: Allow participants to submit questions.

                    * `false`: Do not allow submit questions.
                  type: boolean
                  example: true
                allow_anonymous_questions:
                  description: >-
                    * `true` - Allow participants to send questions without
                    providing their name to the host, co-host, and panelists..


                    * `false` - Do not allow anonymous questions.(Not supported
                    for simulive webinar.)
                  type: boolean
                  example: true
                answer_questions:
                  description: >-
                    Indicate whether you want attendees to be able to view
                    answered questions only or view all questions.


                    * `only` - Attendees are able to view answered questions
                    only.


                    *  `all` - Attendees are able to view all questions
                    submitted in the Q&amp;A.
                  type: string
                  example: all
                  enum:
                    - only
                    - all
                attendees_can_comment:
                  description: >-
                    * `true` - Attendees can answer questions or leave a comment
                    in the question thread.


                    * `false` - Attendees can not answer questions or leave a
                    comment in the question thread
                  type: boolean
                  example: true
                attendees_can_upvote:
                  description: >-
                    * `true` - Attendees can click the thumbs up button to bring
                    popular questions to the top of the Q&amp;A window.


                    * `false` - Attendees can not click the thumbs up button on
                    questions.
                  type: boolean
                  example: true
                allow_auto_reply:
                  description: |-
                    If simulive webinar, 

                    * `true` - allow auto-reply to attendees. 

                    * `false` - don't allow auto-reply to the attendees.
                  type: boolean
                  example: true
                auto_reply_text:
                  description: >-
                    If `allow_auto_reply` = true, the text to be included in the
                    automatic response. 
                  type: string
                  example: >-
                    Thank you for your question. We will get back to you
                    shortly.
                enable:
                  description: >-
                    * `true` - Enable
                    [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                    for webinar.


                    * `false` - Disable Q&amp;A for webinar.
                  type: boolean
                  example: true
            registrants_email_notification:
              description: >-
                Send email notifications to registrants about approval,
                cancellation, denial of the registration. The value of this
                field must be set to true in order to use the
                `registrants_confirmation_email` field.
              type: boolean
              example: true
            registrants_restrict_number:
              description: >-
                Restrict number of registrants for a webinar. By default, it is
                set to `0`. A `0` value means that the restriction option is
                disabled. Provide a number higher than 0 to restrict the webinar
                registrants by the that number.
              maximum: 20000
              minimum: 0
              type: integer
              example: 100
              default: 0
            registration_type:
              description: >-
                Registration types. Only used for recurring webinars with a
                fixed time.  
                 `1` - Attendees register once and can attend any of the webinar sessions.  
                 `2` - Attendees need to register for each session in order to attend.  
                 `3` - Attendees register once and can choose one or more sessions to attend.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - >-
                    Attendees register once and can attend any of the
                    occurrences
                  - Attendees need to register for each occurrence to attend
                  - >-
                    Attendees register once and can choose one or more
                    occurrences to attend
              default: 1
              enum:
                - 1
                - 2
                - 3
            send_1080p_video_to_attendees:
              description: >-
                Whether to always send 1080p video to attendees. This value
                defaults to `false`.(Not supported for simulive webinar.)
              type: boolean
              example: false
              default: false
            show_share_button:
              description: Show social share buttons on the registration page.
              type: boolean
              example: true
            survey_url:
              description: Survey URL for post webinar survey
              type: string
              example: https://example.com
            enable_session_branding:
              description: >-
                Whether the **Webinar Session Branding** setting is enabled.
                This setting lets hosts visually customize a webinar by setting
                a session background. This also lets hosts set Virtual
                Background and apply name tags to hosts, alternative hosts,
                panelists, interpreters, and speakers.
              type: boolean
              example: true
        start_time:
          description: >-
            Webinar start time. We support two formats for `start_time` - local
            time and GMT.  
              

            To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.


            To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss`
            format and specify the timezone
            [ID](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)
            in the `timezone` field OR leave it blank and the timezone set on
            your Zoom account will be used. You can also set the time as UTC as
            the timezone field.


            The `start_time` should only be used for scheduled and / or
            recurring webinars with fixed time.
          type: string
          format: date-time
          example: '2022-03-26T06:44:14Z'
        template_id:
          description: >-
            The webinar template ID to schedule a webinar using a [webinar
            template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates)
            or a [admin webinar
            template](https://support.zoom.us/hc/en-us/articles/8137753618957-Configuring-admin-webinar-templates).
            For a list of webinar templates, use the [**List webinar
            templates**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/listWebinarTemplates)
            API.
          type: string
          example: 5Cj3ceXoStO6TGOVvIOVPA==
        timezone:
          description: >-
            The timezone to assign to the `start_time` value. This field is only
            used for scheduled or recurring webinars with a fixed time.


            For a list of supported timezones and their formats, see our
            [timezone
            list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
          type: string
          example: America/Los_Angeles
        topic:
          description: Webinar topic.
          type: string
          example: My Webinar
        tracking_fields:
          description: Tracking fields.
          type: array
          items:
            required:
              - field
            type: object
            properties:
              field:
                description: Tracking fields type.
                type: string
                example: field1
              value:
                description: Tracking fields value.
                type: string
                example: value1
        type:
          description: |-
            Webinar types.
             `5` - Webinar.  
             `6` - Recurring webinar with no fixed time.  
             `9` - Recurring webinar with a fixed time.
          type: integer
          example: 5
          extensions:
            x-enum-descriptions:
              - Webinar
              - Recurring webinar with no fixed time
              - Recurring webinar with fixed time
          default: 5
          enum:
            - 5
            - 6
            - 9
        is_simulive:
          description: Whether to set the webinar simulive.
          type: boolean
          example: true
        record_file_id:
          description: The previously recorded file's ID for `simulive`.
          type: string
          example: f09340e1-cdc3-4eae-9a74-98f9777ed908
    WebinarsUpdateScheduledWebinarRequest:
      description: Webinar object.
      type: object
      properties:
        agenda:
          description: Webinar description.
          type: string
          example: My Webinar
        duration:
          description: Webinar duration, in minutes. Used for scheduled webinar only.
          type: integer
          example: 60
        password:
          description: >-
            [Webinar
            passcode](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords).
            By default, passcode may only contain the following characters: [a-z
            A-Z 0-9 @ - _ * !] and can have a maximum of 10 characters.


            **Note:** If the account owner or the admin has configured [minimum
            passcode requirement
            settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
            the passcode value provided here must meet those requirements.   
               
             If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/docs/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/docs/api-reference/zoom-api/ma#operation/accountSettings) API. 

            If **Require a passcode when scheduling new meetings** setting has
            been **enabled** **and**
            [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
            for the user, the passcode field will be autogenerated for the
            webinar in the response even if it is not provided in the API
            request.
          maxLength: 10
          type: string
          example: '123456'
        schedule_for:
          description: The user's email address or `userId` to schedule a webinar for.
          type: string
          example: jchill@example.com
        recurrence:
          description: >-
            Recurrence object. Use this object only for a meeting with type `8`,
            a recurring meeting with fixed time. 
          required:
            - type
          type: object
          properties:
            end_date_time:
              description: >-
                Select the final date when the meeting will recur before it is
                canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z.
                Cannot be used with `end_times`.
              type: string
              format: date-time
              example: '2022-04-02T15:59:00Z'
            end_times:
              description: >-
                Select how many times the webinar will recur before it is
                canceled. The maximum number of recurring is 60. Cannot be used
                with `end_date_time`.
              maximum: 60
              type: integer
              example: 7
              default: 1
            monthly_day:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state which day in a month, the meeting should
                recur. The value range is from 1 to 31.


                If you would like the meeting to recur on 23rd of each month,
                provide `23` as the value of this field and `1` as the value of
                the `repeat_interval` field. If you would like the meeting to
                recur every three months, on 23rd of the month, change the value
                of the `repeat_interval` field to `3`.
              type: integer
              example: 1
              default: 1
            monthly_week:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state the week of the month when the meeting
                should recur. If you use this field, **you must also use the
                `monthly_week_day` field to state the day of the week when the
                meeting should recur.**   
                 `-1` - Last week of the month.  
                 `1` - First week of the month.  
                 `2` - Second week of the month.  
                 `3` - Third week of the month.  
                 `4` - Fourth week of the month.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Last week
                  - First week
                  - Second week
                  - Third week
                  - Fourth week
              enum:
                - -1
                - 1
                - 2
                - 3
                - 4
            monthly_week_day:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state a specific day in a week when the monthly
                meeting should recur. To use this field, you must also use the
                `monthly_week` field. 

                  
                 `1` - Sunday.  
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` - Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
            repeat_interval:
              description: >+
                Define the interval when the meeting should recur. If you would
                like to schedule a meeting that recurs every two months, set the
                value of this field as `2` and the value of the `type` parameter
                as `3`. 


                For a daily meeting, the maximum interval you can set is `90`
                days. For a weekly meeting the maximum interval that you can set
                is  of `12` weeks. For a monthly meeting, there is a maximum of
                `3` months.

              type: integer
              example: 1
            type:
              description: |-
                Recurrence meeting types. 
                 `1` - Daily.  
                 `2` - Weekly.  
                 `3` - Monthly.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Daily
                  - Weekly
                  - Monthly
              enum:
                - 1
                - 2
                - 3
            weekly_days:
              description: >-
                This field is required **if you're scheduling a recurring
                meeting of type** `2` to state which day(s) of the week the
                meeting should repeat.   
                    
                  The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as the value of this field.  
                   
                  **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as the value of this field.

                   
                 `1`  - Sunday.   
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` -  Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: string
              example: '1'
              default: '1'
              enum:
                - '1'
                - '2'
                - '3'
                - '4'
                - '5'
                - '6'
                - '7'
        settings:
          description: Webinar settings.
          type: object
          properties:
            allow_multiple_devices:
              description: Allow attendees to join from multiple devices.
              type: boolean
              example: true
            alternative_hosts:
              description: >-
                Alternative host emails or IDs. Separate multiple values by
                commas.
              type: string
              example: jchill@example.com
            alternative_host_update_polls:
              description: >-
                Whether the **Allow alternative hosts to add or edit polls**
                feature is enabled. This requires Zoom version 5.8.0 or higher.
              type: boolean
              example: true
            approval_type:
              description: |-
                `0` - Automatically approve.  
                 `1` - Manually approve.  
                 `2` - No registration required.
              type: integer
              example: 0
              extensions:
                x-enum-descriptions:
                  - Automatically Approve
                  - Manually Approve
                  - No Registration Required
              default: 2
              enum:
                - 0
                - 1
                - 2
            attendees_and_panelists_reminder_email_notification:
              description: Send reminder email to attendees and panelists.
              type: object
              properties:
                enable:
                  description: >-
                    * `true` - Send reminder email to attendees and panelists.


                    * `false` - Do not send reminder email to attendees and
                    panelists.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 hour before webinar.  
                     `2` - Send 1 day before webinar.  
                     `3` - Send 1 hour and 1 day before webinar.  
                     `4` - Send 1 week before webinar.  
                     `5` - Send 1 hour and 1 week before webinar.  
                     `6` - Send 1 day and 1 week before webinar.  
                     `7` - Send 1 hour, 1 day and 1 week before webinar.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 hour before webinar.
                      - Send 1 day before webinar.
                      - Send 1 hour and 1 day before webinar.
                      - Send 1 week before webinar.
                      - Send 1 hour and 1 week before webinar.
                      - Send 1 day and 1 week before webinar.
                      - Send 1 hour, 1 day and 1 week before webinar.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            audio:
              description: >-
                Determine how participants can join the audio portion of the
                webinar.
              type: string
              example: telephony
              extensions:
                x-enum-descriptions:
                  - Both Telephony and VoIP
                  - Telephony only
                  - VoIP only
                  - Third party audio conference
              default: both
              enum:
                - both
                - telephony
                - voip
                - thirdParty
            audio_conference_info:
              description: Third party audio conference info.
              maxLength: 2048
              type: string
              example: test
            authentication_domains:
              description: >-
                If user has configured [**Sign Into Zoom with Specified
                Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                option, this will list the domains that are authenticated.
              type: string
              example: example.com
            authentication_name:
              description: >-
                Authentication name set in the [authentication
                profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
              type: string
              example: Sign in to Zoom
            authentication_option:
              description: Webinar authentication option ID.
              type: string
              example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
            auto_recording:
              description: |-
                Automatic recording. 
                 `local` - Record on local.  
                 `cloud` -  Record on cloud.  
                 `none` - Disabled.
              type: string
              example: cloud
              extensions:
                x-enum-descriptions:
                  - Record to local device
                  - Record to cloud
                  - No Recording
              default: none
              enum:
                - local
                - cloud
                - none
            close_registration:
              description: Close registration after event date.
              type: boolean
              example: true
              deprecated: true
            contact_email:
              description: Contact email for registration
              type: string
              example: jchill@example.com
            contact_name:
              description: Contact name for registration
              type: string
              example: Jill Chill
            email_language:
              description: >-
                Set the email language to one of the following.

                `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`,
                `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
              type: string
              example: en-US
            enforce_login:
              description: >-
                Only signed in users can join this meeting.


                **This field is deprecated and will not be supported in the
                future.** 

                 As an alternative, use the ``meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
              type: boolean
              example: true
              deprecated: true
            enforce_login_domains:
              description: >-
                Only signed in users with specified domains can join meetings.


                **This field is deprecated and will not be supported in the
                future.**

                 As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
              type: string
              example: example.com
              deprecated: true
            follow_up_absentees_email_notification:
              description: Send follow-up email to absentees.
              type: object
              properties:
                enable:
                  description: |-
                    * `true` - Send follow-up email to absentees.

                    * `false` - Do not send follow-up email to absentees.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 days after the scheduled end date.  
                     `2` - Send 2 days after the scheduled end date.  
                     `3` - Send 3 days after the scheduled end date.  
                     `4` - Send 4 days after the scheduled end date.  
                     `5` - Send 5 days after the scheduled end date.  
                     `6` - Send 6 days after the scheduled end date.  
                     `7` - Send 7 days after the scheduled end date.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 days after the scheduled end date.
                      - Send 2 days after the scheduled end date.
                      - Send 3 days after the scheduled end date.
                      - Send 4 days after the scheduled end date.
                      - Send 5 days after the scheduled end date.
                      - Send 6 days after the scheduled end date.
                      - Send 7 days after the scheduled end date.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            follow_up_attendees_email_notification:
              description: Send follow-up email to attendees.
              type: object
              properties:
                enable:
                  description: |-
                    * `true` - Send follow-up email to attendees.

                    * `false` - Do not send follow-up email to attendees.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 day after the scheduled end date.  
                     `2` - Send 2 days after the scheduled end date.  
                     `3` - Send 3 days after the scheduled end date.  
                     `4` - Send 4 days after the scheduled end date.  
                     `5` - Send 5 days after the scheduled end date.  
                     `6` - Send 6 days after the scheduled end date.  
                     `7` - Send 7 days after the scheduled end date.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 day after the scheduled end date.
                      - Send 2 days after the scheduled end date.
                      - Send 3 days after the scheduled end date.
                      - Send 4 days after the scheduled end date.
                      - Send 5 days after the scheduled end date.
                      - Send 6 days after the scheduled end date.
                      - Send 7 days after the scheduled end date.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            global_dial_in_countries:
              description: List of global dial-in countries
              type: array
              items:
                type: string
                example: US
            hd_video:
              description: Default to HD video.
              type: boolean
              example: false
              default: false
            hd_video_for_attendees:
              description: Whether HD video for attendees is enabled.
              type: boolean
              example: false
              default: false
            host_video:
              description: Start video when host joins the webinar.
              type: boolean
              example: true
            language_interpretation:
              description: >-
                The webinar's [language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note** This feature is only available for certain webinar
                add-ons, and for Education, and Business, and higher plans. If
                this feature is not enabled on the host's account, this setting
                will **not** be applied to the webinar.
              type: object
              properties:
                enable:
                  description: >-
                    Enable [language
                    interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                    for the webinar.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the webinar's language interpreters.
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      languages:
                        description: >-
                          A comma-separated list of the interpreter's languages.
                          The string must contain two letter [country
                          codes](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                          If the interpreter will translate from English to
                          Chinese, then this value will be `US,CN`.
                        type: string
                        example: US,CN
            sign_language_interpretation:
              description: >-
                The webinar's [sign language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** If this feature is not enabled on the host's account,
                this setting will **not** be applied to the webinar.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [sign language
                    interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                    for the webinar.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the webinar's sign language interpreters.
                  maximum: 20
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      sign_language:
                        description: |-
                          The interpreter's sign language. 

                           To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                        type: string
                        example: American
            panelist_authentication:
              description: Require panelists to authenticate to join.
              type: boolean
              example: true
            meeting_authentication:
              description: Only authenticated users can join the webinar.
              type: boolean
              example: true
            add_watermark:
              description: Add watermark that identifies the viewing participant.
              type: boolean
              example: true
            add_audio_watermark:
              description: Add audio watermark that identifies the participants.
              type: boolean
              example: true
            notify_registrants:
              description: >-
                Send notification email to registrants when the host updates a
                webinar.
              type: boolean
              example: true
            on_demand:
              description: Make the webinar on-demand.
              type: boolean
              example: false
              default: false
            panelists_invitation_email_notification:
              description: >-
                Send invitation email to panelists. If `false`, do not send
                invitation email to panelists.
              type: boolean
              example: true
            panelists_video:
              description: Start video when panelists join the webinar.
              type: boolean
              example: true
            post_webinar_survey:
              description: >-
                Zoom will open a survey page in attendees' browsers after
                leaving the webinar.
              type: boolean
              example: true
            practice_session:
              description: Enable practice session.
              type: boolean
              example: false
              default: false
            question_and_answer:
              description: >-
                [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                for webinar.
              type: object
              properties:
                allow_submit_questions:
                  description: |-
                    * `true` - Allow participants to submit questions.

                    * `false` - Do not allow submit questions.
                  type: boolean
                  example: true
                allow_anonymous_questions:
                  description: >-
                    * `true` - Allow participants to send questions without
                    providing their name to the host, co-host, and panelists..


                    * `false` - Do not allow anonymous questions.
                  type: boolean
                  example: true
                answer_questions:
                  description: >-
                    Indicate whether you want attendees to be able to view
                    answered questions only or view all questions.


                    * `only` - Attendees are able to view answered questions
                    only.


                    *  `all` - Attendees are able to view all questions
                    submitted in the Q&amp;A.
                  type: string
                  example: all
                  enum:
                    - only
                    - all
                attendees_can_comment:
                  description: >-
                    * `true` - Attendees can answer questions or leave a comment
                    in the question thread.


                    * `false` - Attendees can't answer questions or leave a
                    comment in the question thread.
                  type: boolean
                  example: true
                attendees_can_upvote:
                  description: >-
                    * `true` - Attendees can click the thumbs up button to bring
                    popular questions to the top of the Q&amp;A window.


                    * `false` - Attendees can't click the thumbs up button on
                    questions.
                  type: boolean
                  example: true
                allow_auto_reply:
                  description: |-
                    If simulive webinar, 

                    * `true` - allow auto-reply to attendees. 

                    * `false` - don't allow auto-reply to the attendees.
                  type: boolean
                  example: true
                auto_reply_text:
                  description: >-
                    If `allow_auto_reply` = true, the text to be included in the
                    automatic response. 
                  type: string
                  example: >-
                    Thank you for your question. We will get back to you
                    shortly.
                enable:
                  description: >-
                    * `true` - Enable
                    [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                    for webinar.


                    * `false` - Disable Q&amp;A for webinar.
                  type: boolean
                  example: true
            registrants_confirmation_email:
              description: Send confirmation email to registrants
              type: boolean
              example: true
            registrants_email_notification:
              description: >-
                Send email notifications to registrants about approval,
                cancellation, denial of the registration. The value of this
                field must be set to true in order to use the
                `registrants_confirmation_email` field.
              type: boolean
              example: true
            registrants_restrict_number:
              description: >-
                Restrict number of registrants for a webinar. By default, it is
                set to `0`. A `0` value means that the restriction option is
                disabled. Provide a number higher than 0 to restrict the webinar
                registrants by the that number.
              maximum: 20000
              minimum: 0
              type: integer
              example: 100
              default: 0
            registration_type:
              description: >-
                Registration types. Only used for recurring webinars with a
                fixed time.  
                 `1` - Attendees register once and can attend any of the webinar sessions.  
                 `2` - Attendees need to register for each session in order to attend.  
                 `3` - Attendees register once and can choose one or more sessions to attend.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - >-
                    Attendees register once and can attend any of the
                    occurrences
                  - Attendees need to register for each occurrence to attend
                  - >-
                    Attendees register once and can choose one or more
                    occurrences to attend
              default: 1
              enum:
                - 1
                - 2
                - 3
            send_1080p_video_to_attendees:
              description: Always send 1080p video to attendees.
              type: boolean
              example: false
              default: false
            show_share_button:
              description: Show social share buttons on the registration page.
              type: boolean
              example: true
            survey_url:
              description: Survey url for post webinar survey
              type: string
              example: https://example.com
            enable_session_branding:
              description: >-
                Whether the **Webinar Session Branding** setting is enabled.
                This setting lets hosts visually customize a webinar by setting
                a session background. This also lets hosts use [Webinar Session
                Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
                to set the virtual background for and apply name tags to hosts,
                alternative hosts, panelists, interpreters, and speakers.
              type: boolean
              example: true
        start_time:
          description: >-
            Webinar start time, in the format `yyyy-MM-dd'T'HH:mm:ss'Z'`. Should
            be in GMT time. In the format `yyyy-MM-dd'T'HH:mm:ss`. This should
            be in local time and the timezone should be specified. Only used for
            scheduled webinars and recurring webinars with a fixed time.
          type: string
          format: date-time
          example: '2022-03-26T07:18:32Z'
        timezone:
          description: >-
            The timezone to assign to the `start_time` value. This field is only
            used for scheduled or recurring webinars with a fixed time.


            For a list of supported timezones and their formats, see our
            [timezone
            list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
          type: string
          example: America/Los_Angeles
        topic:
          description: The webinar topic.
          type: string
          example: My webinar
        tracking_fields:
          description: Tracking fields.
          type: array
          items:
            type: object
            properties:
              field:
                description: Tracking fields type.
                type: string
                example: field1
              value:
                description: Tracking fields value.
                type: string
                example: value1
        type:
          description: |-
            Webinar types. 
             `5` - webinar.  
             `6` - Recurring webinar with no fixed time.  
             `9` - Recurring webinar with a fixed time.
          type: integer
          example: 5
          extensions:
            x-enum-descriptions:
              - Webinar
              - Recurring Webinar with no fixed time
              - Recurring Webinar with fixed time
          default: 5
          enum:
            - 5
            - 6
            - 9
        is_simulive:
          description: Whether to set the webinar simulive.
          type: boolean
          example: true
        record_file_id:
          description: The previously recorded file's ID for `simulive`.
          type: string
          example: f09340e1-cdc3-4eae-9a74-98f9777ed908
    WebinarsCreateBatchRegistrantsRequest:
      type: object
      properties:
        auto_approve:
          description: >-
            If a meeting was scheduled with approval_type `1` (manual approval),
            but you want to automatically approve registrants added via this
            API, set the value of this field to `true`. 


            You **cannot** use this field to change approval setting for a
            meeting that was originally scheduled with approval_type `0`
            (automatic approval).
          type: boolean
          example: true
        registrants:
          type: array
          items:
            required:
              - email
              - first_name
            type: object
            properties:
              email:
                description: The registrant's email address.
                type: string
                format: email
                example: jchill@example.com
              first_name:
                description: The registrant's first name.
                type: string
                example: Jill
              last_name:
                description: The registrant's last name.
                type: string
                example: Chill
    WebinarsCreateBrandingNameTagRequest:
      description: Name tag information
      required:
        - accent_color
        - background_color
        - name
        - text_color
      type: object
      properties:
        name:
          description: |-
            The name tag's name.

            **Note:** This value cannot exceed more than 50 characters.
          type: string
          example: name
        text_color:
          description: The name tag's text color.
          type: string
          format: Hex color code
          example: 0e72ed
        accent_color:
          description: The name tag's accent color.
          type: string
          format: Hex color code
          example: 0e72ed
        background_color:
          description: The name tag's background color.
          type: string
          format: Hex color code
          example: 0e72ed
        is_default:
          description: Whether set the name tag as the default name tag or not.
          type: boolean
          example: true
          default: false
        set_default_for_all_panelists:
          description: >-
            Whether to set the name tag as the new default for all panelists or
            not. This includes panelists not currently assigned a default name
            tag.
          type: boolean
          example: true
          default: true
    WebinarsUpdateBrandingNameTagRequest:
      description: Name tag information
      type: object
      properties:
        name:
          description: |-
            The name tag's name.

            **Note:** This value cannot exceed more than 50 characters.
          type: string
          example: name
        text_color:
          description: The name tag's text color.
          type: string
          format: Hex color code
          example: 0e72ed
        accent_color:
          description: The name tag's accent color.
          type: string
          format: Hex color code
          example: 0e72ed
        background_color:
          description: The name tag's background color.
          type: string
          format: Hex color code
          example: 0e72ed
        is_default:
          description: Whether set the name tag as the default name tag or not.
          type: boolean
          example: true
          default: false
        set_default_for_all_panelists:
          description: >-
            Whether to set the name tag as the new default for all panelists or
            not. This includes panelists not currently assigned a default name
            tag.
          type: boolean
          example: true
          default: true
    WebinarsUploadBrandingVirtualBackgroundRequest:
      required:
        - file
      type: object
      properties:
        file:
          description: The Virtual Background's file path, in binary format.
          type: string
          format: binary
          example: WVVoU01HTklUVFpNZVRsc1pVZEdkR05IZUd4TWJVNTJZbEU5UFE9PQ==
        default:
          description: Whether set the file as the default Virtual Background file.
          type: boolean
          example: true
          default: false
        set_default_for_all_panelists:
          description: >-
            Whether to set the Virtual Background file as the new default for
            all panelists. This includes panelists not currently assigned a
            default Virtual Background.
          type: boolean
          example: true
          default: true
    WebinarsUploadBrandingWallpaperRequest:
      required:
        - file
      type: object
      properties:
        file:
          description: The wallpaper's file path, in binary format.
          type: string
          format: binary
    WebinarsCreateInviteLinksRequest:
      title: Invite links
      description: Invite Links
      type: object
      properties:
        attendees:
          description: The attendees list.
          maxItems: 500
          minItems: 1
          type: array
          items:
            required:
              - name
            type: object
            properties:
              name:
                description: User display name.
                maxLength: 64
                type: string
                example: Jill Chill
        ttl:
          description: |-
            The invite link's expiration time, in seconds. 

            This value defaults to `7200`.
          maximum: 7776000
          minimum: 0
          type: integer
          format: int64
          example: 1000
          default: 7200
    WebinarsUpdateLiveStreamRequest:
      description: Webinar live stream.
      required:
        - page_url
        - stream_key
        - stream_url
      type: object
      properties:
        page_url:
          description: The webinar live stream page's URL.
          maxLength: 1024
          type: string
          format: uri
          example: https://example.com/livestream/123
        stream_key:
          description: The webinar live stream name and key.
          maxLength: 512
          type: string
          example: contact-it@example.com
        stream_url:
          description: The webinar live stream URL.
          maxLength: 1024
          type: string
          example: https://example.com/livestream
        resolution:
          description: >-
            The number of pixels in each dimension that the video camera can
            display, required when a user enables 1080p. Use a value of `720p`
            or `1080p`
          type: string
          example: 720p
    WebinarsUpdateLiveStreamStatusRequest:
      description: Webinar live stream status.
      type: object
      properties:
        action:
          description: |-
            Update the live stream's status. 

            * `start` - Start a webinar live stream.

            * `stop`- Stop an ongoing webinar live stream.
          type: string
          example: start
          extensions:
            x-enum-descriptions:
              - Start a webinar live stream.
              - Stop a webinar live stream.
          enum:
            - start
            - stop
        settings:
          description: >-
            Update the live stream session's settings.  **Only** settings for a
            stopped live stream can be updated.
          type: object
          properties:
            active_speaker_name:
              description: Display the name of the active speaker during a live stream.
              type: boolean
              example: true
            display_name:
              description: Display the live stream's name.
              maxLength: 50
              minLength: 1
              type: string
              example: Jill Chill
    WebinarsAddPanelistsRequest:
      description: Webinar panelist.
      type: object
      properties:
        panelists:
          description: List of panelist objects.
          maximum: 30
          type: array
          items:
            description: Panelist base object.
            type: object
            properties:
              email:
                description: >-
                  Panelist's email. See the [email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for return value details.
                type: string
                format: email
                example: jchill@example.com
              name:
                description: >-
                  The panelist's full name.


                  **Note:** This value cannot exceed more than 12 Chinese
                  characters.
                type: string
                example: Jill Chill
              virtual_background_id:
                description: The virtual background ID to bind.
                type: string
                example: xHhPyb8ERMCmiC5njPjFdQ
              name_tag_id:
                description: The name tag ID to bind.
                type: string
                example: xHhPyb8ERMCmiC5njPjFdQ
              name_tag_name:
                description: The panelist's name to display in the name tag.
                type: string
                example: xHhPyb8ERMCmiC5njPjFdQ
              name_tag_pronouns:
                description: The pronouns to display in the name tag.
                type: string
                example: pronouns
              name_tag_description:
                description: The description for the name tag, such the person's title.
                type: string
                example: description
    WebinarsCreatePollRequest:
      title: Meeting and webinar polling object.
      description: Information about meeting and webinar polling.
      type: object
      properties:
        title:
          description: The poll's title, up to 64 characters.
          maxLength: 64
          type: string
          example: Learn something new
        anonymous:
          description: |-
            Allow meeting participants to answer poll questions anonymously. 

            This value defaults to `false`.
          type: boolean
          example: true
          default: false
        poll_type:
          description: >-
            The type of poll. 

            * `1` - Poll. 

            * `2` - Advanced Poll. This feature must be enabled in your Zoom
            account. 

            * `3` - Quiz. This feature must be enabled in your Zoom account. 

             This value defaults to `1`.
          type: integer
          example: 2
          enum:
            - 1
            - 2
            - 3
        questions:
          description: Information about the poll's questions.
          type: array
          items:
            type: object
            properties:
              answer_max_character:
                description: >-
                  The allowed maximum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls: 

                  * For `short_answer` polls, a maximum of 500 characters. 

                  * For `long_answer` polls, a maximum of 2,000 characters.
                type: integer
                example: 200
              answer_min_character:
                description: >-
                  The allowed minimum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls. You must
                  provide at least a **one** character minimum value.
                minimum: 1
                type: integer
                example: 1
              answer_required:
                description: >-
                  Whether participants must answer the question. 

                  * `true` - The participant must answer the question. 

                  * `false` - The participant does not need to answer the
                  question. 


                  **Note:** 

                  * When the poll's `type` value is `1` (Poll), this value
                  defaults to `true`. 

                  * When the poll's `type` value is the `2` (Advanced Poll) or
                  `3` (Quiz) values, this value defaults to `false`.
                type: boolean
                example: false
                default: false
              answers:
                description: >-
                  The poll question's available answers. This field requires a
                  **minimum** of two answers. 


                  * For `single` and `multiple` polls, you can only provide a
                  maximum of 10 answers. 

                  * For `matching` polls, you can only provide a maximum of 16
                  answers. 

                  * For `rank_order` polls, you can only provide a maximum of
                  seven answers.
                minItems: 2
                type: array
                items:
                  type: string
                  example: Extremely useful
              case_sensitive:
                description: >-
                  Whether the correct answer is case sensitive. This field only
                  applies to `fill_in_the_blank` polls. 

                  * `true` - The answer is case-sensitive. 

                  * `false` - The answer is not case-sensitive. 


                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              name:
                description: >-
                  The poll question, up to 255 characters. 


                  For `fill_in_the_blank` polls, this field is the poll's
                  question. For each value that the user must fill in, ensure
                  that there are the same number of `right_answers` values.
                maxLength: 255
                type: string
                example: How useful was this meeting?
              prompts:
                description: >-
                  Information about the prompt questions. This field only
                  applies to `matching` and `rank_order` polls. You **must**
                  provide a minimum of two prompts, up to a maximum of 10
                  prompts.
                type: array
                items:
                  type: object
                  properties:
                    prompt_question:
                      description: The question prompt's title.
                      type: string
                      example: How are you?
                    prompt_right_answers:
                      description: >-
                        The question prompt's correct answers: 

                        * For `matching` polls, you must provide a minimum of
                        two correct answers, up to a maximum of 10 correct
                        answers. 

                        * For `rank_order` polls, you can only provide one
                        correct answer.
                      type: array
                      items:
                        type: string
                        example: Good
              rating_max_label:
                description: |-
                  The high score label used for the `rating_max_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Extremely Likely
              rating_max_value:
                description: >-
                  The rating scale's maximum value, up to a maximum value of
                  10. 


                  This field only applies to the `rating_scale` poll.
                maximum: 10
                type: integer
                example: 4
              rating_min_label:
                description: |-
                  The low score label used for the `rating_min_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Not likely
              rating_min_value:
                description: >-
                  The rating scale's minimum value. This value cannot be less
                  than zero. 


                  This field only applies to the `rating_scale` poll.
                minimum: 0
                type: integer
                example: 0
              right_answers:
                description: >-
                  The poll question's correct answer(s). This field is
                  **required** if the poll's `type` value is `3` (Quiz). 

                   For `single` and `matching` polls, this field only accepts one answer.
                minItems: 1
                type: array
                items:
                  type: string
                  example: Good
              show_as_dropdown:
                description: |-
                  Whether to display the radio selection as a drop-down box. 
                  * `true` - Show as a drop-down box. 
                  * `false` - Do not show as a drop-down box. 

                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              type:
                description: |-
                  The poll's question and answer type. 
                  * `single` - Single choice. 
                  * `multiple` - Multiple choice. 
                  * `matching` - Matching. 
                  * `rank_order` - Rank order. 
                  * `short_answer` - Short answer. 
                  * `long_answer` - Long answer. 
                  * `fill_in_the_blank` - Fill in the blank. 
                  * `rating_scale` - Rating scale.
                type: string
                example: single
                extensions:
                  x-enum-descriptions:
                    - Single choice
                    - Multiple choice
                    - Matching
                    - Rank order
                    - Short answer
                    - Long answer
                    - Fill in the blank
                    - Rating scale
                enum:
                  - single
                  - multiple
                  - matching
                  - rank_order
                  - short_answer
                  - long_answer
                  - fill_in_the_blank
                  - rating_scale
    WebinarsUpdatePollRequest:
      title: Meeting and Webinar Polling Object
      description: Information about meeting and webinar polling.
      type: object
      properties:
        title:
          description: The poll's title, up to 64 characters.
          maxLength: 64
          type: string
          example: Learn something new
        anonymous:
          description: |-
            Allow meeting participants to answer poll questions anonymously. 

            This value defaults to `false`.
          type: boolean
          example: true
          default: false
        poll_type:
          description: >-
            The type of poll: 

            * `1` &mdash; Poll. 

            * `2` &mdash; Advanced Poll. This feature must be enabled in your
            Zoom account. 

            * `3` &mdash; Quiz. This feature must be enabled in your Zoom
            account. 

             This value defaults to `1`.
          type: integer
          example: 2
          enum:
            - 1
            - 2
            - 3
        questions:
          description: Information about the poll's questions.
          type: array
          items:
            type: object
            properties:
              answer_max_character:
                description: >-
                  The allowed maximum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls: 

                  * For `short_answer` polls, a maximum of 500 characters. 

                  * For `long_answer` polls, a maximum of 2,000 characters.
                type: integer
                example: 200
              answer_min_character:
                description: >-
                  The allowed minimum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls. You must
                  provide at least a **one** character minimum value.
                minimum: 1
                type: integer
                example: 1
              answer_required:
                description: >-
                  Whether participants must answer the question: 

                  * `true` &mdash; The participant must answer the question. 

                  * `false` &mdash; The participant does not need to answer the
                  question. 


                  **Note:** 

                  * When the poll's `type` value is `1` (Poll), this value
                  defaults to `true`. 

                  * When the poll's `type` value is the `2` (Advanced Poll) or
                  `3` (Quiz) values, this value defaults to `false`.
                type: boolean
                example: false
                default: false
              answers:
                description: >-
                  The poll question's available answers. This field requires a
                  **minimum** of two answers. 


                  * For `single` and `multiple` polls, you can only provide a
                  maximum of 10 answers. 

                  * For `matching` polls, you can only provide a maximum of 16
                  answers. 

                  * For `rank_order` polls, you can only provide a maximum of
                  seven answers.
                minItems: 2
                type: array
                items:
                  type: string
                  example: Extremely useful
              case_sensitive:
                description: >-
                  Whether the correct answer is case sensitive. This field only
                  applies to `fill_in_the_blank` polls: 

                  * `true` &mdash; The answer is case-sensitive. 

                  * `false` &mdash; The answer is not case-sensitive. 


                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              name:
                description: >-
                  The poll question, up to 255 characters. 


                  For `fill_in_the_blank` polls, this field is the poll's
                  question. For each value that the user must fill in, ensure
                  that there are the same number of `right_answers` values.
                maxLength: 255
                type: string
                example: How useful was this meeting?
              prompts:
                description: >-
                  Information about the prompt questions. This field only
                  applies to `matching` and `rank_order` polls. You **must**
                  provide a minimum of two prompts, up to a maximum of 10
                  prompts.
                type: array
                items:
                  type: object
                  properties:
                    prompt_question:
                      description: The question prompt's title.
                      type: string
                      example: How are you?
                    prompt_right_answers:
                      description: >-
                        The question prompt's correct answers: 

                        * For `matching` polls, you must provide a minimum of
                        two correct answers, up to a maximum of 10 correct
                        answers. 

                        * For `rank_order` polls, you can only provide one
                        correct answer.
                      type: array
                      items:
                        type: string
                        example: Good
              rating_max_label:
                description: |-
                  The high score label used for the `rating_max_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Extremely Likely
              rating_max_value:
                description: >-
                  The rating scale's maximum value, up to a maximum value of
                  10. 


                  This field only applies to the `rating_scale` poll.
                maximum: 10
                type: integer
                example: 4
              rating_min_label:
                description: |-
                  The low score label used for the `rating_min_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Not likely
              rating_min_value:
                description: >-
                  The rating scale's minimum value. This value cannot be less
                  than zero. 


                  This field only applies to the `rating_scale` poll.
                minimum: 0
                type: integer
                example: 0
              right_answers:
                description: >-
                  The poll question's correct answer(s). This field is
                  **required** if the poll's `type` value is `3` (Quiz). 

                   For `single` and `matching` polls, this field only accepts one answer.
                minItems: 1
                type: array
                items:
                  type: string
                  example: Good
              show_as_dropdown:
                description: |-
                  Whether to display the radio selection as a drop-down box: 
                  * `true` &mdash; Show as a drop-down box. 
                  * `false` &mdash; Do not show as a drop-down box. 

                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              type:
                description: |-
                  The poll's question and answer type: 
                  * `single` &mdash; Single choice. 
                  * `multiple` &mdash; Multiple choice. 
                  * `matching` &mdash; Matching. 
                  * `rank_order` &mdash; Rank order. 
                  * `short_answer` &mdash; Short answer. 
                  * `long_answer` &mdash; Long answer. 
                  * `fill_in_the_blank` &mdash; Fill in the blank. 
                  * `rating_scale` &mdash; Rating scale.
                type: string
                example: single
                extensions:
                  x-enum-descriptions:
                    - Single choice
                    - Multiple choice
                    - Matching
                    - Rank order
                    - Short answer
                    - Long answer
                    - Fill in the blank
                    - Rating scale
                enum:
                  - single
                  - multiple
                  - matching
                  - rank_order
                  - short_answer
                  - long_answer
                  - fill_in_the_blank
                  - rating_scale
    WebinarsAddRegistrantRequest:
      description: Information about the webinar registrant.
      required:
        - email
        - first_name
      type: object
      properties:
        first_name:
          description: The registrant's first name.
          maxLength: 64
          type: string
          example: Jill
        last_name:
          description: The registrant's last name.
          maxLength: 64
          type: string
          example: Chill
        email:
          description: The registrant's email address.
          maxLength: 128
          type: string
          format: email
          example: jchill@example.com
        address:
          description: The registrant's address.
          type: string
          example: 1800 Amphibious Blvd.
        city:
          description: The registrant's city.
          type: string
          example: Mountain View
        state:
          description: The registrant's state or province.
          type: string
          example: CA
        zip:
          description: The registrant's ZIP or postal code.
          type: string
          example: '94045'
        country:
          description: >-
            The registrant's two-letter [country
            code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
          type: string
          example: US
        phone:
          description: The registrant's phone number.
          type: string
          example: '5550100'
        comments:
          description: The registrant's questions and comments.
          type: string
          example: Looking forward to the discussion.
        custom_questions:
          description: Information about custom questions.
          type: array
          items:
            description: Information about custom questions.
            type: object
            properties:
              title:
                description: The custom question's title.
                type: string
                example: What do you hope to learn from this?
              value:
                description: >-
                  The custom question's response value. This has a limit of 128
                  characters.
                maxLength: 128
                type: string
                example: >-
                  Look forward to learning how you come up with new recipes and
                  what other services you offer.
        industry:
          description: The registrant's industry.
          type: string
          example: Food
        job_title:
          description: The registrant's job title.
          type: string
          example: Chef
        no_of_employees:
          description: |-
            The registrant's number of employees: 
            * `1-20` 
            * `21-50` 
            * `51-100` 
            * `101-500` 
            * `500-1,000` 
            * `1,001-5,000` 
            * `5,001-10,000` 
            * `More than 10,000`
          type: string
          example: 1-20
          enum:
            - ''
            - 1-20
            - 21-50
            - 51-100
            - 101-500
            - 500-1,000
            - 1,001-5,000
            - 5,001-10,000
            - More than 10,000
        org:
          description: The registrant's organization.
          type: string
          example: Cooking Org
        purchasing_time_frame:
          description: |-
            The registrant's purchasing time frame: 
            * `Within a month` 
            * `1-3 months` 
            * `4-6 months` 
            * `More than 6 months` 
            * `No timeframe`
          type: string
          example: 1-3 months
          enum:
            - ''
            - Within a month
            - 1-3 months
            - 4-6 months
            - More than 6 months
            - No timeframe
        role_in_purchase_process:
          description: |-
            The registrant's role in the purchase process: 
            * `Decision Maker` 
            * `Evaluator/Recommender` 
            * `Influencer` 
            * `Not involved`
          type: string
          example: Influencer
          enum:
            - ''
            - Decision Maker
            - Evaluator/Recommender
            - Influencer
            - Not involved
        language:
          description: |-
            The registrant's language preference for confirmation emails: 
            * `en-US` - English (US) 
            * `de-DE` - German (Germany) 
            * `es-ES` - Spanish (Spain) 
            * `fr-FR` - French (France) 
            * `jp-JP` - Japanese 
            * `pt-PT` - Portuguese (Portugal) 
            * `ru-RU` - Russian 
            * `zh-CN` - Chinese (PRC) 
            * `zh-TW` - Chinese (Taiwan) 
            * `ko-KO` - Korean 
            * `it-IT` - Italian (Italy) 
            * `vi-VN` - Vietnamese 
            * `pl-PL` - Polish 
            * `Tr-TR` - Turkish
          type: string
          example: en-US
          enum:
            - en-US
            - de-DE
            - es-ES
            - fr-FR
            - jp-JP
            - pt-PT
            - ru-RU
            - zh-CN
            - zh-TW
            - ko-KO
            - it-IT
            - vi-VN
            - pl-PL
            - Tr-TR
        source_id:
          description: The tracking source's unique identifier.
          type: string
          example: '4816766181770'
    WebinarsUpdateRegistrationQuestionsRequest:
      title: Webinar registrant questions
      description: Webinar registrant questions.
      type: object
      properties:
        custom_questions:
          description: Array of custom questions for registrants.
          type: array
          items:
            type: object
            properties:
              title:
                description: Custom question.
                type: string
                example: How are you?
              answers:
                description: >-
                  An array of answer choices. Can't be used for short answer
                  type.
                type: array
                items:
                  type: string
                  example: Good
              required:
                description: >-
                  State whether or not a registrant is required to answer the
                  custom question.
                type: boolean
                example: true
              type:
                description: The question-answer type.
                type: string
                example: short
                extensions:
                  x-enum-descriptions:
                    - Short Answer
                    - Single Radio Answer
                    - Single Dropdown Answer
                    - Multiple Answer
                enum:
                  - short
                  - single_radio
                  - single_dropdown
                  - multiple
        questions:
          description: >-
            Array of registration fields whose values should be provided by
            registrants.
          type: array
          items:
            type: object
            properties:
              field_name:
                description: Field name
                type: string
                example: last_name
                extensions:
                  x-enum-descriptions:
                    - Last name
                    - Address
                    - City
                    - Country/Region
                    - Zip/Postal code
                    - State/Province
                    - Phone
                    - Industry
                    - Organization
                    - Job title
                    - Purchasing time frame
                    - Role in purchase process
                    - Number of employees
                    - Questions & comments
                enum:
                  - last_name
                  - address
                  - city
                  - country
                  - zip
                  - state
                  - phone
                  - industry
                  - org
                  - job_title
                  - purchasing_time_frame
                  - role_in_purchase_process
                  - no_of_employees
                  - comments
              required:
                description: State whether the selected fields are required or optional.
                type: boolean
                example: true
    WebinarsUpdateRegistrantStatusRequest:
      required:
        - action
      type: object
      properties:
        action:
          description: |-
            The registration action to perform. 
            * `approve` - Approve the registrant. 
            * `deny` - Reject the registrant. 
            * `cancel` - Cancel the registrant's approval.
          type: string
          example: approve
          extensions:
            x-enum-descriptions:
              - Approve
              - Deny
              - Cancel
          enum:
            - approve
            - deny
            - cancel
        registrants:
          description: The registrant information.
          maximum: 30
          type: array
          items:
            type: object
            properties:
              email:
                description: The registrant's email address.
                type: string
                format: email
                example: jchill@example.com
              id:
                description: The registrant's ID.
                type: string
                example: 9tboDiHUQAeOnbmudzWa5g
    WebinarsGetSipUriWithPasscodeRequest:
      type: object
      properties:
        passcode:
          description: >-
            If customers want a passcode to be embedded in the SIP URI dial
            string, they must supply the passcode. Zoom will not validate the
            passcode.
          type: string
          example: xxxx
    WebinarsUpdateStatusRequest:
      type: object
      properties:
        action:
          type: string
          example: end
          extensions:
            x-enum-descriptions:
              - end a webinar
          enum:
            - end
    WebinarsUpdateSurveyRequest:
      title: Webinar survey object
      description: Information about the webinar survey.
      type: object
      properties:
        custom_survey:
          description: Information about the customized webinar survey.
          type: object
          properties:
            title:
              description: The survey's title, up to 64 characters.
              maxLength: 64
              type: string
              example: Learn something new
            anonymous:
              description: >-
                Allow participants to anonymously answer survey questions. 

                * `true` - Anonymous survey enabled. 

                * `false` - Participants cannot answer survey questions
                anonymously. 

                 This value defaults to `true`.
              type: boolean
              example: false
              default: false
            numbered_questions:
              description: |-
                Whether to display the number in the question name. 

                 This value defaults to `true`.
              type: boolean
              example: false
              default: false
            show_question_type:
              description: |-
                Whether to display the question type in the question name. 

                 This value defaults to `false`.
              type: boolean
              example: false
              default: false
            feedback:
              description: |-
                The survey's feedback, up to 320 characters. 

                 This value defaults to `Thank you so much for taking the time to complete the survey, your feedback really makes a difference.`.
              maxLength: 320
              type: string
              example: >-
                Thank you so much for taking the time to complete the survey.
                Your feedback really makes a difference.
            questions:
              description: Information about the webinar survey's questions.
              maxItems: 100
              minItems: 1
              type: array
              items:
                type: object
                properties:
                  name:
                    description: The survey question, up to 420 characters.
                    type: string
                    example: How useful was this webinar?
                  type:
                    description: |-
                      The survey's question and answer type. 
                      * `single` - Single choice. 
                      * `multiple` - Multiple choice. 
                      * `matching` - Matching. 
                      * `rank_order` - Rank order 
                      * `short_answer` - Short answer 
                      * `long_answer` - Long answer. 
                      * `fill_in_the_blank` - Fill in the blank 
                      * `rating_scale` - Rating scale.
                    type: string
                    example: single
                    extensions:
                      x-enum-descriptions:
                        - Single choice
                        - Multiple choice
                        - Matching
                        - Rank order
                        - Short answer
                        - Long answer
                        - Fill in the blank
                        - Rating scale
                    enum:
                      - single
                      - multiple
                      - matching
                      - rank_order
                      - short_answer
                      - long_answer
                      - fill_in_the_blank
                      - rating_scale
                  answer_required:
                    description: >-
                      Whether participants must answer the question. 

                      * `true` - The participant must answer the question. 

                      * `false` - The participant does not need to answer the
                      question. 

                       This value defaults to `false`.
                    type: boolean
                    example: false
                    default: false
                  show_as_dropdown:
                    description: >-
                      Whether to display the radio selection as a drop-down
                      box. 

                      * `true` - Show as a drop-down box. 

                      * `false` - Do not show as a drop-down box. 

                       This value defaults to `false`.
                    type: boolean
                    example: false
                    default: false
                  answers:
                    description: >-
                      The survey question's available answers. This field
                      requires a **minimum** of two answers. 


                      * For `single` and `multiple` questions, you can only
                      provide a maximum of 50 answers. 

                      * For `matching` polls, you can only provide a maximum of
                      16 answers. 

                      * For `rank_order` polls, you can only provide a maximum
                      of seven answers.
                    minItems: 2
                    type: array
                    items:
                      maxLength: 200
                      type: string
                      example: Extremely useful
                  prompts:
                    description: >-
                      Information about the prompt questions. This field only
                      applies to `matching` and `rank_order` questions. You
                      **must** provide a minimum of two prompts, up to a maximum
                      of 10 prompts.
                    maxItems: 10
                    minItems: 2
                    type: array
                    items:
                      type: object
                      properties:
                        prompt_question:
                          description: The question prompt's title.
                          maxLength: 200
                          type: string
                          example: How are you?
                  answer_min_character:
                    description: >-
                      The allowed minimum number of characters. This field only
                      applies to `short_answer` and `long_answer` questions. You
                      must provide at least a **one** character minimum value.
                    minimum: 1
                    type: integer
                    example: 1
                  answer_max_character:
                    description: >-
                      The allowed maximum number of characters. This field only
                      applies to `short_answer` and `long_answer` questions. 

                      * For `short_answer` question, a maximum of 500
                      characters. 

                      * For `long_answer` question, a maximum of 2,000
                      characters.
                    type: integer
                    example: 200
                  rating_min_value:
                    description: >-
                      The rating scale's minimum value. This value can't be less
                      than zero. 

                       This field only applies to the `rating_scale` survey.
                    minimum: 0
                    type: integer
                    example: 1
                  rating_max_value:
                    description: >-
                      The rating scale's maximum value, up to a maximum value of
                      10. 

                       This field only applies to the `rating_scale` survey.
                    maximum: 10
                    type: integer
                    example: 4
                  rating_min_label:
                    description: >-
                      The low score label used for the `rating_min_value` field,
                      up to 50 characters. 

                       This field only applies to the `rating_scale` survey.
                    maxLength: 50
                    type: string
                    example: Not likely
                  rating_max_label:
                    description: >-
                      The high score label used for the `rating_max_value`
                      field, up to 50 characters. 

                       This field only applies to the `rating_scale` survey.
                    maxLength: 50
                    type: string
                    example: Extremely Likely
        show_in_the_browser:
          description: >-
            Whether the **Show in the browser when the webinar ends** option is
            enabled. 

            * `true` - Enabled. 

            * `false` - Disabled. 

             This value defaults to `true`.
          type: boolean
          example: true
          default: true
        show_in_the_follow_up_email:
          description: >-
            Whether the **Show the link on the follow-up email** option is
            enabled. 

            * `true` - Enabled. 

            * `false` - Disabled. 

             This value defaults to `false`.
          type: boolean
          example: false
          default: false
        third_party_survey:
          description: The link to the third party webinar survey.
          maxLength: 64
          type: string
          example: https://example.com
    ArchivingMeetingFilesListResponse:
      type: object
      properties:
        from:
          description: The queried start date.
          type: string
          format: date-time
          example: '2021-03-12T02:12:27Z'
        meetings:
          description: Information about the meeting or webinar.
          type: array
          items:
            required:
              - account_name
              - archive_files
              - complete_time
              - duration
              - duration_in_second
              - host_id
              - id
              - is_breakout_room
              - meeting_type
              - recording_count
              - start_time
              - status
              - timezone
              - topic
              - total_size
              - type
              - uuid
            type: object
            properties:
              account_name:
                description: The user's account name.
                type: string
                example: account_01
              archive_files:
                description: Information about the archive files.
                type: array
                items:
                  required:
                    - download_url
                    - encryption_fingerprint
                    - file_extension
                    - file_size
                    - file_type
                    - id
                    - individual
                    - participant_join_time
                    - participant_leave_time
                    - recording_type
                    - status
                  type: object
                  properties:
                    download_url:
                      description: |-
                        The URL to download the the archive file. 

                         **OAuth apps** 

                         If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example, `https://{{base-domain}}/rec/archive/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` 

                         **Note:** This field does **not** return for [Zoom on-premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field.
                      type: string
                      example: >-
                        https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
                    file_extension:
                      description: The archived file's extension.
                      type: string
                      example: JSON
                    file_path:
                      description: |-
                        The file path to the on-premise account archive file. 

                         **Note:** The API only returns this field for [Zoom on-premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field.
                      type: string
                      example: /9090876528/path01/demo.mp4
                    file_size:
                      description: The archived file's size, in bytes.
                      type: integer
                      example: 165743
                    file_type:
                      description: >-
                        The archive file's type. 

                        * `MP4` - Video file. 

                        * `M4A` - Audio-only file. 

                        * `CHAT` - A TXT file containing in-meeting chat
                        messages. 

                        * `CC` - A file containing the closed captions of the
                        recording, in VTT file format. 

                        *  `CHAT_MESSAGE` - A JSON file encoded in base64 format
                        containing chat messages. The file also includes waiting
                        room chats, deleted messages, meeting emojis and
                        non-verbal feedback.
                      type: string
                      example: CHAT
                      enum:
                        - MP4
                        - M4A
                        - CHAT
                        - CC
                        - CHAT_MESSAGE
                    id:
                      description: The archive file's unique ID.
                      type: string
                      example: a2f19f96-9294-4f51-8134-6f0eea108eb2
                    individual:
                      description: >-
                        Whether the archive file is an individual recording
                        file. 

                        * `true` - An individual recording file. 
                         * `false` - An entire meeting file.
                      type: boolean
                      example: true
                    participant_email:
                      description: >-
                        The individual recording file's participant email
                        address. This value is returned when the `individual`
                        value is `true`. If the participant is **not** part of
                        the host's account, this returns an empty string value,
                        with some exceptions. See [Email address display
                        rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                        for details.
                      type: string
                      format: email
                      example: jchill@example.com
                    participant_join_time:
                      description: >-
                        The join time for the generated recording file. If this
                        value is returned when the individual value is `true`,
                        it is the recording file's participant join time. When
                        the individual value is `false`, it returns the join
                        time for the archiving gateway.
                      type: string
                      format: date-time
                      example: '2021-03-12T02:07:27Z'
                    participant_leave_time:
                      description: >-
                        The leave time for the generated recording file. If this
                        value is returned when the individual value is `true`,
                        it is the recording file's participant leave time. When
                        the individual value is `false`, it returns the leave
                        time for the archiving gateway.
                      type: string
                      format: date-time
                      example: '2021-03-12T02:12:27Z'
                    recording_type:
                      description: |-
                        The archive file's recording type. 
                        * `shared_screen_with_speaker_view` 
                        * `audio_only` 
                        * `chat_file` 
                        * `closed_caption` 
                        * `chat_message` 

                         For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.
                      type: string
                      example: chat_message
                      enum:
                        - shared_screen_with_speaker_view
                        - audio_only
                        - chat_file
                        - closed_caption
                        - chat_message
                    status:
                      description: |-
                        The archived file's processing status. 
                        * `completed` - The processing of the file is complete. 
                        * `processing` - The file is processing. 
                        * `failed` - The processing of the file failed.
                      type: string
                      example: completed
                      enum:
                        - completed
                        - processing
                        - failed
                    encryption_fingerprint:
                      description: >-
                        The archived file's encryption fingerprint, using the
                        SHA256 hash algorithm.
                      type: string
                      example: >-
                        abf85f0fe6a4db3cdd8c37e505e1dd18a34d9696170a14b5bc6395677472cf43
                    number_of_messages:
                      description: >-
                        The number of `TXT` or `JSON` file messages. This field
                        returns only when the `file_extension` is `JSON` or
                        `TXT`.
                      type: integer
                      example: 150
                    storage_location:
                      description: >-
                        The region where the file is stored. This field returns
                        only `Enable Distributed Compliance Archiving` op
                        feature is enabled.
                      type: string
                      example: US
                      enum:
                        - US
                        - AU
                        - BR
                        - CA
                        - EU
                        - IN
                        - JP
                        - SG
                        - CH
                    auto_delete:
                      description: >-
                        Whether to auto delete the archived file.


                        **Prerequisites:** 


                        Enable the "Tag Archiving Files for Deletion" feature in
                        OP. Contact [Zoom
                        Support](https://support.zoom.us/hc/en-us/articles/201362003)
                        to open.
                      type: boolean
                      example: false
              complete_time:
                description: The meeting or webinar's archive completion time.
                type: string
                format: date-time
                example: '2021-03-12T02:57:27Z'
                anyOf:
                  - description: The archive completion time.
                    minLength: 1
                    type: object
                    format: date-time
                    example: '2021-03-12T02:12:27Z'
                  - description: An empty string.
                    type: string
                    enum:
                      - ''
              duration:
                description: The meeting or webinar's scheduled duration.
                type: integer
                example: 1
              duration_in_second:
                description: The meeting or webinar's duration, in seconds.
                type: integer
                example: 1800
              host_id:
                description: >-
                  The ID of the user set as the host of the archived meeting or
                  webinar.
                type: string
                example: Dhjdfgdkg8w
              id:
                description: The meeting or webinar ID, either `meetingId` or `webinarId`.
                type: integer
                format: int64
                example: 553068284
              is_breakout_room:
                description: >-
                  Whether the room is a [breakout
                  room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).
                type: boolean
                example: false
              meeting_type:
                description: |-
                  Whether the meeting or webinar is internal or external. 
                  * `internal` - An internal meeting or webinar. 
                  * `external` - An external meeting or webinar. 

                   The `id`, `host_id`, and `topic` PII (Personal Identifiable Information) values in this response are removed when this value is `external`.
                type: string
                example: internal
                enum:
                  - internal
                  - external
              parent_meeting_id:
                description: >-
                  The parent meeting's universally unique ID (UUID). Each
                  meeting or webinar instance generates a UUID. If the
                  `is_breakout_room` value is `true`, the API returns this
                  value.
                type: string
                example: atsXxhSEQWit9t+U02HXNQ==
              recording_count:
                description: >-
                  The number of archived files returned in the API call
                  response.
                type: integer
                example: 2
              start_time:
                description: The meeting or webinar's start time.
                type: string
                format: date-time
                example: '2021-04-26T05:23:18Z'
              timezone:
                description: >-
                  The meeting or webinar's
                  [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
                type: string
                example: Asia/Shanghai
              topic:
                description: The meeting or webinar topic.
                type: string
                example: My Personal Meeting Room
              total_size:
                description: The total size of the archive file, in bytes.
                type: integer
                example: 364463
              type:
                description: >-
                  The type of archived meeting or webinar. 

                   Meeting recordings use these archive types. 
                  * `1` - Instant meeting. 

                  * `2` - Scheduled meeting. 

                  * `3` - A recurring meeting with no fixed time. 

                  * `4` - A meeting created via PMI (Personal Meeting ID). 

                  * `7` - A [Personal Audio
                  Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
                  (PAC). 

                  * `8` - Recurring meeting with a fixed time. 

                   Webinar recordings use these archive types. 
                  * `5` - A webinar. 

                  * `6` - A recurring webinar without a fixed time. 

                  * `9` - A recurring webinar with a fixed time. 

                   If the recording is **not** from a meeting or webinar: 

                  * `100` - A [breakout
                  room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).
                type: integer
                example: 1
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 100
              uuid:
                description: >-
                  The recorded meeting or webinar instance's universally unique
                  identifier (UUID). Each meeting or webinar instance generates
                  a UUID.
                type: string
                example: yO3dfhh3t467UkQ==
              status:
                description: |-
                  The archive's processing status. 
                  * `completed` - The archive's processing is complete. 
                  * `processing` - The archive is processing.
                type: string
                example: completed
                enum:
                  - completed
                  - processing
              group_id:
                description: >-
                  Primary group IDs of participants who belong to your account.
                  Each group ID is separated by a comma.
                type: string
                example: pvFIYKSDTum9iCDOOtQL4w,_FsqLyI0RlO6LVPeUVWi8g
        next_page_token:
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.

             **Note:** if you use `next_page_token` as a parameter, your other request parameters should be changeless to make sure that the large result set is what you want. For example, if your `to` parameter is for a future time, Zoom resets this value to the current time and returns this value in the response body, along with the `next_page_token` value. Use these same `to` and `next_page_token` values in requests for the remaining results set; otherwise you will get an invalid token error.
          type: string
          example: At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2
        page_size:
          description: The number of records returned within a single API call.
          type: integer
          example: 20
        to:
          description: The queried end date.
          type: string
          format: date-time
          example: '2021-03-12T02:12:27Z'
        total_records:
          description: The total number of returned meeting records.
          type: integer
          example: 20
    ArchivingGetStatisticsResponse:
      type: object
      properties:
        from:
          description: The queried start date.
          type: string
          format: date-time
          example: '2021-03-18T05:41:36Z'
        to:
          description: The queried end date.
          type: string
          format: date-time
          example: '2021-03-18T05:41:36Z'
        total_records:
          description: The total number of returned meeting records.
          type: integer
          example: 20
        statistic_by_file_extension:
          description: Statistics about archive files, by file extension.
          type: object
          properties:
            mp4_file_count:
              description: The number of mp4 files.
              type: integer
              example: 1
            m4a_file_count:
              description: The number of m4a files.
              type: integer
              example: 1
            txt_file_count:
              description: The number of txt files.
              type: integer
              example: 1
            json_file_count:
              description: The number of json files.
              type: integer
              example: 1
            vtt_file_count:
              description: The number of vtt files.
              type: integer
              example: 1
        statistic_by_file_status:
          description: Statistics about archive files, by file status.
          type: object
          properties:
            processing_file_count:
              description: The number of processing files.
              type: integer
              example: 1
            completed_file_count:
              description: The number of completed files.
              type: integer
              example: 1
            failed_file_count:
              description: The number of failed files.
              type: integer
              example: 1
    ArchivingMeetingFilesList200Response:
      required:
        - account_name
        - archive_files
        - complete_time
        - duration
        - duration_in_second
        - host_id
        - id
        - is_breakout_room
        - meeting_type
        - recording_count
        - start_time
        - status
        - timezone
        - topic
        - total_size
        - type
        - uuid
      type: object
      properties:
        account_name:
          description: The user's account name.
          type: string
          example: account_01
        archive_files:
          description: Information about the archive files.
          type: array
          items:
            required:
              - download_url
              - encryption_fingerprint
              - file_extension
              - file_size
              - file_type
              - id
              - individual
              - participant_join_time
              - participant_leave_time
              - recording_type
              - status
            type: object
            properties:
              download_url:
                description: |-
                  The URL to download the the archive file. 

                   **OAuth apps** 

                   If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example: 

                   `https://{{base-domain}}/rec/archive/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` 

                   **Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field.
                type: string
                example: >-
                  https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
              file_extension:
                description: The archived file's extension.
                type: string
                example: JSON
              file_path:
                description: |-
                  The file path to the on-premise account archive file. 

                   **Note:** The API only returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field.
                type: string
                example: /9090876528/path01/demo.mp4
              file_size:
                description: The archived file's size, in bytes.
                type: integer
                example: 165743
              file_type:
                description: >-
                  The archive file's type. 

                  * `MP4` - Video file. 

                  * `M4A` - Audio-only file. 

                  * `CHAT` - A TXT file containing in-meeting chat messages. 

                  * `CC` - A file containing the closed captions of the
                  recording, in VTT file format. 

                  * `CHAT_MESSAGE` - A JSON file encoded in base64 format
                  containing chat messages. The file also includes waiting room
                  chats, deleted messages, meeting emojis and non-verbal
                  feedback.
                type: string
                example: CHAT
                enum:
                  - MP4
                  - M4A
                  - CHAT
                  - CC
                  - CHAT_MESSAGE
              id:
                description: The archive file's unique ID.
                type: string
                example: a2f19f96-9294-4f51-8134-6f0eea108eb2
              individual:
                description: |-
                  Whether the archive file is an individual recording file. 
                  * `true` - An individual recording file. 
                   * `false` - An entire meeting file.
                type: boolean
                example: true
              participant_email:
                description: >-
                  The individual recording file's participant email address.
                  This value is returned when the `individual` value is `true`.
                  If the participant is **not** part of the host's account, this
                  returns an empty string value, with some exceptions. See
                  [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for details.
                type: string
                format: email
                example: jchill@example.com
              participant_join_time:
                description: >-
                  The join time for the generated recording file. If this value
                  is returned when the individual value is true, then it is the
                  recording file's participant join time. When the individual
                  value is false, it returns the join time for the archiving
                  gateway.
                type: string
                format: date-time
                example: '2021-03-12T02:07:27Z'
              participant_leave_time:
                description: >-
                  The leave time for the generated recording file. If this value
                  is returned when the individual value is true, then it is the
                  recording file's participant leave time. When the individual
                  value is false, it returns the leave time for the archiving
                  gateway.
                type: string
                format: date-time
                example: '2021-03-12T02:12:27Z'
              recording_type:
                description: |-
                  The archive file's recording type. 
                  * `shared_screen_with_speaker_view` 
                  * `audio_only` 
                  * `chat_file` 
                  * `closed_caption` 
                  * `chat_message` 

                   For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.
                type: string
                example: chat_message
                enum:
                  - shared_screen_with_speaker_view
                  - audio_only
                  - chat_file
                  - closed_caption
                  - chat_message
              status:
                description: |-
                  The archived file's processing status. 
                  * `completed` - The processing of the file is complete. 
                  * `processing` - The file is processing. 
                  * `failed` - The processing of the file failed.
                type: string
                example: completed
                enum:
                  - completed
                  - processing
                  - failed
              encryption_fingerprint:
                description: >-
                  The archived file's encryption fingerprint, using the SHA256
                  hash algorithm.
                type: string
                example: >-
                  abf85f0fe6a4db3cdd8c37e505e1dd18a34d9696170a14b5bc6395677472cf43
              number_of_messages:
                description: >-
                  The number of `TXT` or `JSON` file messages. This field
                  returns only when the `file_extension` is `JSON` or `TXT`
                type: integer
                example: 150
              storage_location:
                description: >-
                  The region where the file is stored. This field returns only
                  `Enable Distributed Compliance Archiving` op feature is
                  enabled.
                type: string
                example: US
                enum:
                  - US
                  - AU
                  - BR
                  - CA
                  - EU
                  - IN
                  - JP
                  - SG
                  - CH
              auto_delete:
                description: >
                  Whether to auto delete the archived file.

                   **Prerequisites:** 

                  * The "Tag Archiving Files for Deletion" feature must be
                  enabled in OP. Contact [Zoom
                  Support](https://support.zoom.us/hc/en-us/articles/201362003)
                  to open.
                type: boolean
                example: false
        complete_time:
          description: The meeting or webinar's archive completion time.
          type: string
          format: date-time
          example: '2021-03-12T02:57:27Z'
          anyOf:
            - description: The archive completion time.
              minLength: 1
              type: object
              format: date-time
              example: '2021-03-12T02:12:27Z'
            - description: An empty string.
              type: string
              enum:
                - ''
        duration:
          description: The meeting or webinar's scheduled duration.
          type: integer
          example: 1
        duration_in_second:
          description: The meeting or webinar's duration, in seconds.
          type: integer
          example: 1800
        host_id:
          description: The host's user ID for the archived meeting or webinar.
          type: string
          example: Dhjdfgdkg8w
        id:
          description: The meeting or webinar ID, either `meetingId` or `webinarId`.
          type: integer
          format: int64
          example: 553068284
        is_breakout_room:
          description: >-
            Whether the room is a [breakout
            room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).
          type: boolean
          example: false
        meeting_type:
          description: |-
            Whether the meeting or webinar is internal or external. 
            * `internal` - An internal meeting or webinar. 
            * `external` - An external meeting or webinar. 

             The `id`, `host_id`, and `topic` PII (Personal Identifiable Information) values in this response are removed when this value is `external`.
          type: string
          example: internal
          enum:
            - internal
            - external
        parent_meeting_id:
          description: >-
            The parent meeting's universally unique ID (UUID). Each meeting or
            webinar instance generates a UUID. If the `is_breakout_room` value
            is `true`, the API returns this value.
          type: string
          example: atsXxhSEQWit9t+U02HXNQ==
        recording_count:
          description: The number of archived files returned in the API call response.
          type: integer
          example: 2
        start_time:
          description: The meeting or webinar's start time.
          type: string
          format: date-time
          example: '2021-04-26T05:23:18Z'
        timezone:
          description: >-
            The meeting or webinar's
            [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
          type: string
          example: Asia/Shanghai
        topic:
          description: The meeting or webinar topic.
          type: string
          example: My Personal Meeting Room
        total_size:
          description: The total size of the archive file, in bytes.
          type: integer
          example: 364463
        type:
          description: >-
            The type of archived meeting or webinar. 

             If the recording is of a meeting: 
            * `1` - Instant meeting. 

            * `2` - Scheduled meeting. 

            * `3` - A recurring meeting with no fixed time. 

            * `4` - A meeting created via PMI (Personal Meeting ID). 

            * `7` - A [Personal Audio
            Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
            (PAC). 

            * `8` - Recurring meeting with a fixed time. 

             If the recording is of a webinar: 
            * `5` - A webinar. 

            * `6` - A recurring webinar without a fixed time. 

            * `9` - A recurring webinar with a fixed time. 

             If the recording is **not** from a meeting or webinar: 

            * `100` - A [breakout
            room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).
          type: integer
          example: 1
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 100
        uuid:
          description: >-
            The universally unique identifier (UUID) of the recorded meeting or
            webinar instance. Each meeting or webinar instance generates a UUID.
          type: string
          example: yO3dfhh3t467UkQ==
        status:
          description: |-
            The archive's processing status. 
            * `completed` - The archive's processing is complete. 
            * `processing` - The archive is processing.
          type: string
          example: completed
          enum:
            - completed
            - processing
        group_id:
          description: >-
            Primary group IDs of participants who belong to your account. Each
            group ID is separated by a comma.
          type: string
          example: pvFIYKSDTum9iCDOOtQL4w,_FsqLyI0RlO6LVPeUVWi8g
    CloudRecordingGetMeetingRecordingsResponse:
      description: >-
        This field returns a list of recording files for each participant. The
        API only returns this response when the **Record a separate audio file
        of each participant** setting is enabled.
      type: object
      properties:
        account_id:
          description: The user account's unique identifier.
          type: string
          example: Cx3wERazSgup7ZWRHQM8-w
        duration:
          description: The meeting duration.
          type: integer
          example: 20
        host_id:
          description: The ID of the user set as host of meeting.
          type: string
          example: _0ctZtY0REqWalTmwvrdIw
        id:
          description: The meeting ID, also known as the meeting number.
          type: integer
          example: 6840331990
        recording_count:
          description: ' The number of recording files returned in the response of this API call. This includes the `recording_files` and  `participant_audio_files` files.'
          type: integer
          example: 22
        start_time:
          description: The time when the meeting started.
          type: string
          format: date-time
          example: '2021-03-18T05:41:36Z'
        topic:
          description: The meeting topic.
          type: string
          example: My Personal Meeting
        total_size:
          description: >-
            The recording's total file size. This includes the `recording_files`
            and `participant_audio_files` files.
          type: integer
          format: int64
          example: 22
        type:
          description: >-
            The recording's associated type of meeting or webinar. 


            If the recording is of a meeting: 

            * `1` - Instant meeting. 

            * `2` - Scheduled meeting. 

            * `3` - A recurring meeting with no fixed time. 

            * `4` - A meeting created via PMI (Personal Meeting ID). 

            * `7` - A [Personal Audio
            Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
            (PAC). 

            * `8` - Recurring meeting with a fixed time. 


            If the recording is of a webinar: 

            * `5` - A webinar. 

            * `6` - A recurring webinar without a fixed time 

            * `9` - A recurring webinar with a fixed time.


            If the recording is **not** from a meeting or webinar: 


            * `99` - A recording uploaded via the
            [**Recordings**](https://zoom.us/recording) interface on the Zoom
            Web Portal.
          type: string
          example: '1'
          extensions:
            x-enum-descriptions:
              - Instant Meeting
              - Scheduled Meeting
              - Recurring Meeting with no fixed time
              - Meeting created using a Personal Meeting ID
              - A webinar
              - Recurring webinar without a fixed time
              - Personal Audio Conference
              - Recurring meeting with a fixed time
              - Recurring webinar with a fixed time
              - A recording uploaded
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
            - '99'
        uuid:
          description: >-
            The unique meeting identifier. Each instance of the meeting has its
            own UUID.
          type: string
          example: BOKXuumlTAGXuqwr3bLyuQ==
        recording_play_passcode:
          description: >-
            The cloud recording's passcode to be used in the URL. Directly
            splice this recording's passcode in `play_url` or `share_url` with
            `?pwd=` to access and play. Example:
            'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'.
          type: string
          example: yNYIS408EJygs7rE5vVsJwXIz4-VW7MH
        recording_files:
          description: The list of recording file.
          type: array
          items:
            description: Recording file object.
            type: object
            properties:
              deleted_time:
                description: >-
                  The time when recording was deleted. Returned in the response
                  only for trash query.
                type: string
                example: '2021-03-18T05:41:36Z'
              download_url:
                description: >-
                  The URL to download the recording. 


                  If a user has authorized and installed your OAuth app that
                  contains recording scopes, use the `download_access_token` or
                  the the user's [OAuth access
                  token](https://developers.zoom.us/docs/integrations/oauth/) to
                  download the file, and set the `access_token` as a Bearer
                  token in the Authorization header.


                  `curl -H 'Authorization: Bearer <ACCESS_TOKEN>'
                  https://{{base-domain}}/rec/archive/download/xyz`.


                  **Note:** This field does **not** return for [Zoom on-premise
                  accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                  Instead, this API returns the `file_path` field.
                type: string
                example: https://example.com/rec/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
              file_path:
                description: >-
                  The file path to the on-premise account recording. 


                  **Note:** This API only returns this field for [Zoom
                  On-Premise
                  accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                  It does **not** return the `download_url` field.
                type: string
                example: /9090876528/path01/demo.mp4
              file_size:
                description: The recording file size.
                type: number
                example: 7220
              file_type:
                description: "The recording file type. \n \n`MP4` - Video file of the recording.  \n `M4A` - Audio-only file of the recording.  \n `TIMELINE` - Timestamp file of the recording in JSON file format. To get a timeline file, the **Add a timestamp to the recording** setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.\n  \n  `TRANSCRIPT` - Transcription file of the recording in VTT format.  \n  `CHAT` - A TXT file containing in-meeting chat messages that were sent during the meeting.  \n `CC` - File containing closed captions of the recording in VTT file format.  \n `CSV` - File containing polling data in csv format.\n\n  \n \n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** these properties.  \n \n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`.  \n `SUMMARY` - Summary file of the recording in JSON file format."
                type: string
                example: MP4
                enum:
                  - MP4
                  - M4A
                  - CHAT
                  - TRANSCRIPT
                  - CSV
                  - TB
                  - CC
                  - CHAT_MESSAGE
                  - SUMMARY
              file_extension:
                description: The file extension type of the recording file.
                type: string
                example: M4A
                enum:
                  - MP4
                  - M4A
                  - TXT
                  - VTT
                  - CSV
                  - JSON
                  - JPG
              id:
                description: >-
                  The recording file ID. It's included in the response of
                  general query.
                type: string
                example: 72576a1f-4e66-4a77-87c4-f13f9808bd76
              meeting_id:
                description: 'The meeting ID. '
                type: string
                example: L0AGOEPVR9m5WSOOs/d+FQ==
              play_url:
                description: The URL that can play a recording file.
                type: string
                example: https://example.com/rec/play/Qg75t7xZBtEbAkjdlgbfdngBBBB
              recording_end:
                description: The recording end time. The response is in general query.
                type: string
                example: '2021-03-18T05:41:36Z'
              recording_start:
                description: The recording start time.
                type: string
                example: '2021-03-18T05:41:36Z'
              recording_type:
                description: |-
                  The recording type.  
                   `shared_screen_with_speaker_view(CC)`  
                   `shared_screen_with_speaker_view`  
                   `shared_screen_with_gallery_view`  
                   `speaker_view`  
                   `gallery_view`  
                   `shared_screen`  
                   `audio_only`  
                   `audio_transcript`  
                   `chat_file`  
                   `active_speaker`  
                   `poll`  
                   `timeline`  
                   `closed_caption`  
                   `audio_interpretation`  
                   `summary`  
                   `summary_next_steps`  
                   `summary_smart_chapters`  
                   `sign_interpretation`  
                   `production_studio`
                type: string
                example: shared_screen_with_speaker_view
                enum:
                  - shared_screen_with_speaker_view(CC)
                  - shared_screen_with_speaker_view
                  - shared_screen_with_gallery_view
                  - active_speaker
                  - gallery_view
                  - shared_screen
                  - audio_only
                  - audio_transcript
                  - chat_file
                  - poll
                  - host_video
                  - closed_caption
                  - timeline
                  - thumbnail
                  - audio_interpretation
                  - summary
                  - summary_next_steps
                  - summary_smart_chapters
                  - sign_interpretation
                  - production_studio
              status:
                description: The recording status.
                type: string
                example: completed
                enum:
                  - completed
        download_access_token:
          description: >-
            The JWT token to download the meeting's recording. This response
            only returns if the `download_access_token` is included in the
            `include_fields` query parameter.
          type: string
          example: >-
            abJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJodHRwczovL2V2ZW50Lnpvb20udXMiLCJhY2NvdW50SWQiOiJNdDZzdjR1MFRBeVBrd2dzTDJseGlBIiwiYXVkIjoiaHR0cHM6Ly9vYXV0aC56b29tLnVzIiwibWlkIjoieFp3SEc0c3BRU2VuekdZWG16dnpiUT09IiwiZXhwIjoxNjI2MTM5NTA3LCJ1c2VySWQiOiJEWUhyZHBqclMzdWFPZjdkUGtrZzh3In0.a6KetiC6BlkDhf1dP4KBGUE1bb2brMeraoD45yhFx0eSSSTFdkHQnsKmlJQ-hdo9Zy-4vQw3rOxlyoHv583JyZ
        password:
          description: The cloud recording's passcode.
          type: string
          example: '981651'
        participant_audio_files:
          description: >-
            A list of recording files. The API only returns this response when
            the **Record a separate audio file of each participant** setting is
            enabled.
          type: array
          items:
            description: The recording file object.
            type: object
            properties:
              download_url:
                description: >-
                  The URL to download the recording. If a user has authorized
                  and installed your OAuth app that contains recording scopes,
                  use the user's [OAuth access
                  token](https://developers.zoom.us/docs/integrations/oauth/) to
                  download the file, and set the `access_token` as a Bearer
                  token in the Authorization header.


                  `curl -H 'Authorization: Bearer <ACCESS_TOKEN>'
                  https://{{base-domain}}/rec/archive/download/xyz` 


                  **Note:** This field does **not** return for [Zoom On-Premise
                  accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                  Instead, this API will return the `file_path` field.
                type: string
                example: https://example.com/rec/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
              file_name:
                description: The recording file's name.
                type: string
                example: test.json
              file_path:
                description: >-
                  The file path to the on-premise account recording. 


                  **Note:** This API only returns this field for [Zoom
                  on-premise
                  accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                  It does **not** return the `download_url` field.
                type: string
                example: /9090876528/path01/demo.mp4
              file_size:
                description: The recording file's size, in bytes.
                type: number
                example: 65536
              file_type:
                description: >-
                  The recording file's format. 


                  * `MP4` - Video file.

                  * `M4A` - Audio-only file.

                  * `TIMELINE` - Timestamp file of the recording, in JSON file
                  format. To get a timeline file, the **Add a timestamp to the
                  recording** setting **must** be enabled in the [recording
                  settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048).
                  The time will display in the host's timezone.

                  * `TRANSCRIPT` - A transcript of the recording, in VTT format.

                  * `CHAT` - A text file containing chat messages sent during
                  the meeting.

                  * `CC` - A file containing the closed captions of the
                  recording, in VTT file format.

                  * `CSV` - A file containing polling data, in CSV format.


                  A recording file object with file the `CC` or `TIMELINE` value
                  **does not** have the `id`, `status`, `file_size`,
                  `recording_type`, and `play_url` properties.
                type: string
                example: M4A
              id:
                description: >-
                  The recording file's unique ID. This is included in the
                  general query response.
                type: string
                example: a2f19f96-9294-4f51-8134-6f0eea108eb2
              play_url:
                description: The URL where the recording file can be opened and played.
                type: string
                example: https://example.com/rec/play/Qg75t7xZBtEbAkjdlgbfdngBBBB
              recording_end:
                description: >-
                  The recording file's end time. This is included in the general
                  query response.
                type: string
                format: date-time
                example: '2021-06-30T22:14:57Z'
              recording_start:
                description: The recording file's start time.
                type: string
                format: date-time
                example: '2021-06-30T22:14:57Z'
              status:
                description: The recording file's status.
                type: string
                example: completed
                enum:
                  - completed
    AnalyticsDetailsResponse:
      type: object
      properties:
        from:
          description: The queried start date
          type: string
          format: date
          example: '2020-07-30'
        to:
          description: The queried end date.
          type: string
          format: date
          example: '2020-07-30'
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42
        page_size:
          description: The number of records returned within a single API call.
          maximum: 300
          type: integer
          example: 30
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 5
        analytics_details:
          description: Analytics Detail.
          type: array
          items:
            properties:
              date_time:
                description: Explicit time to watch or download the recording.
                type: string
                format: date-time
                example: '2021-07-04T22:14:57Z'
              name:
                description: The user's name who watched or downloaded.
                type: string
                example: '2'
              email:
                description: The user's email who downloaded this Meeting Recording.
                type: string
                example: '2'
              duration:
                description: >-
                  When the query type is `by_view`, this field indicates the
                  viewing time, unit: seconds
                type: integer
                example: 60
    AnalyticsSummaryResponse:
      type: object
      properties:
        from:
          description: The queried start date
          type: string
          format: date
          example: '2020-07-30'
        to:
          description: The queried end date.
          type: string
          format: date
          example: '2020-07-30'
        analytics_summary:
          description: Analytics Summary.
          type: array
          items:
            properties:
              date:
                description: Date of viewing or downloading the recording.
                type: string
                example: '2022-07-06'
              views_total_count:
                description: The number of people who have watched this Meeting Recording.
                type: integer
                example: 2
              downloads_total_count:
                description: The number of people who downloaded this Meeting Recording.
                type: integer
                example: 2
    CloudRecordingListRegistrantsResponse:
      title: Meeting Cloud Recording Registration
      description: Information about the meeting cloud recording registrant.
      type: object
      properties:
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: w7587w4eiyfsudgf
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_number:
          description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          type: integer
          example: 1
          deprecated: true
          default: 1
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 20
        registrants:
          description: Information about the cloud recording registrants.
          type: array
          items:
            description: ' Registrant.'
            type: object
            properties:
              id:
                description: The registrant's ID.
                type: string
                example: 3Z7sEm0TQQieLav3c3OD_g
              address:
                description: The registrant's address.
                type: string
                example: 1800 Amphibious Blvd.
              city:
                description: The registrant's city.
                type: string
                example: Mountain View
              comments:
                description: The registrant's questions and comments.
                type: string
                example: Looking forward to the discussion.
              country:
                description: >-
                  The registrant's two-letter [country
                  code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).
                type: string
                example: US
              custom_questions:
                description: Information about custom questions.
                type: array
                items:
                  description: Information about custom questions.
                  type: object
                  properties:
                    title:
                      description: The title of the custom question.
                      type: string
                      example: What do you hope to learn from this?
                    value:
                      description: >-
                        The custom question's response value. This has a limit
                        of 128 characters.
                      maxLength: 128
                      type: string
                      example: >-
                        Look forward to learning how you come up with new
                        recipes and what other services you offer.
              email:
                description: >-
                  The registrant's email address. See [Email address display
                  rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address)
                  for return value details.
                maxLength: 128
                type: string
                format: email
                example: jchill@example.com
              first_name:
                description: The registrant's first name.
                maxLength: 64
                type: string
                example: Jill
              industry:
                description: The registrant's industry.
                type: string
                example: Food
              job_title:
                description: The registrant's job title.
                type: string
                example: Chef
              last_name:
                description: The registrant's last name.
                maxLength: 64
                type: string
                example: Chill
              no_of_employees:
                description: |-
                  The registrant's number of employees: 
                  * `1-20` 
                  * `21-50` 
                  * `51-100` 
                  * `101-250` 
                  * `251-500` 
                  * `501-1,000` 
                  * `1,001-5,000` 
                  * `5,001-10,000` 
                  * `More than 10,000`
                type: string
                example: 1-20
                enum:
                  - ''
                  - 1-20
                  - 21-50
                  - 51-100
                  - 101-250
                  - 251-500
                  - 501-1,000
                  - 1,001-5,000
                  - 5,001-10,000
                  - More than 10,000
              org:
                description: The registrant's organization.
                type: string
                example: Cooking Org
              phone:
                description: The registrant's phone number.
                type: string
                example: '5550100'
              purchasing_time_frame:
                description: |-
                  The registrant's purchasing time frame: 
                  * `Within a month` 
                  * `1-3 months` 
                  * `4-6 months` 
                  * `More than 6 months` 
                  * `No timeframe`
                type: string
                example: 1-3 months
                enum:
                  - ''
                  - Within a month
                  - 1-3 months
                  - 4-6 months
                  - More than 6 months
                  - No timeframe
              role_in_purchase_process:
                description: |-
                  The registrant's role in the purchase process: 
                  * `Decision Maker` 
                  * `Evaluator/Recommender` 
                  * `Influencer` 
                  * `Not involved`
                type: string
                example: Influencer
                enum:
                  - ''
                  - Decision Maker
                  - Evaluator/Recommender
                  - Influencer
                  - Not involved
              state:
                description: The registrant's state or province.
                type: string
                example: CA
              status:
                description: |-
                  The registrant's status: 
                  * `approved` &mdash; Registrant is approved. 
                  * `denied` &mdash; Registrant is denied. 
                  * `pending` &mdash; Registrant is waiting for approval.
                type: string
                example: approved
                enum:
                  - approved
                  - denied
                  - pending
              zip:
                description: The registrant's ZIP or postal code.
                type: string
                example: '94045'
            required:
              - email
              - first_name
    CloudRecordingCreateRegistrantResponse:
      type: object
      properties:
        id:
          description: >-
            [Meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
            Unique identifier of the meeting in &quot;**long**&quot;
            format(represented as int64 data type in JSON), also known as the
            meeting number.
          type: integer
          format: int64
          example: 6840331990
        registrant_id:
          description: Registrant ID
          type: string
          example: 3Z7sEm0TQQieLav3c3OD_g
        share_url:
          description: >-
            Share URL for the on-demand recording. This includes the
            &ldquo;tk&rdquo; token for the registrant. This is similar to the
            token that Zoom returns in the URL response to join a registered
            meeting, for example: `url?tk=xxxx`. Except while the meeting
            registration token can be used to join the meeting, this token can
            only be used to watch the recording.
          type: string
          example: https://example.com/rec/share/Qg75t7xZBtEbAkjdlgbfdngBBBB
        topic:
          description: Meeting Topic
          type: string
          example: My Personal Meeting Room
    CloudRecordingListRegistrationQuestionsResponse:
      title: Recording Registrant Questions
      description: Recording Registrant Questions
      type: object
      properties:
        custom_questions:
          description: Array of Registrant Custom Questions
          type: array
          items:
            type: object
            properties:
              title:
                description: Title of the question.
                type: string
                example: What's your name?
              answers:
                description: >-
                  Answer choices for the question. Can not be used with Short
                  answer type.
                type: array
                items:
                  type: string
                  example: 'Yes'
              required:
                description: >-
                  State whether registrants are required to answer custom
                  questions or not.
                type: boolean
                example: true
              type:
                description: The type of registration question and answers.
                type: string
                example: short
                extensions:
                  x-enum-descriptions:
                    - Short Answer
                    - Single Answer
                    - Multiple Answer
                enum:
                  - short
                  - single
                  - multiple
        questions:
          description: Array of Registrant Questions
          type: array
          items:
            type: object
            properties:
              field_name:
                description: Field name.
                type: string
                example: last_name
                extensions:
                  x-enum-descriptions:
                    - Last Name
                    - Address
                    - City
                    - Country/Region
                    - Zip/Postal Code
                    - State/Province
                    - Phone
                    - Industry
                    - Organization
                    - Job Title
                    - Purchasing Time Frame
                    - Role in Purchase Process
                    - Number of Employees
                    - Questions & Comments
                enum:
                  - last_name
                  - address
                  - city
                  - country
                  - zip
                  - state
                  - phone
                  - industry
                  - org
                  - job_title
                  - purchasing_time_frame
                  - role_in_purchase_process
                  - no_of_employees
                  - comments
              required:
                description: >-
                  State whether the field is required to be answered by the
                  registrant or not.
                type: boolean
                example: true
    CloudRecordingGetSettingsResponse:
      title: Recording settings
      type: object
      properties:
        approval_type:
          description: |-
            The approval type for the registration.  
             
            `0`- Automatically approve the registration when a user registers.  
             
            `1` - Manually approve or deny the registration of a user.  
             
            `2` - No registration required to view the recording.
          type: integer
          example: 0
          extensions:
            x-enum-descriptions:
              - Registrants can watch the recording directly after registration
              - >-
                Registrants receive emails then watch the recording after you
                approve the registration
              - Disabled
          enum:
            - 0
            - 1
            - 2
        authentication_domains:
          description: The domains for authentication.
          type: string
          example: test.com
        authentication_option:
          description: The options for authentication .
          type: string
          example: auth_option
        on_demand:
          description: >-
            This field determines whether registration is required to view the
            recording.
          type: boolean
          example: false
        password:
          description: >-
            This field enables passcode protection for the recording by setting
            a passcode. The passcode must have a minimum of **eight** characters
            with a mix of numbers, letters and special characters.  
               
             
            **Note:** If the account owner or the admin has set minimum passcode
            strength requirements for recordings through Account Settings, the
            passcode value provided here must meet those requirements.   
               
             If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API.
          maxLength: 10
          minLength: 8
          type: string
          example: '975238724'
        recording_authentication:
          description: THis field only authenticated users can view.
          type: boolean
          example: true
        send_email_to_host:
          description: >-
            This field enables you to send an email to the host when someone
            registers to view the recording. This applies for On-demand
            recordings only.
          type: boolean
          example: false
        share_recording:
          description: This field determines how the meeting recording is shared.
          type: string
          example: publicly
          extensions:
            x-enum-descriptions:
              - Publicly
              - Internally(account members only)
              - None
          enum:
            - publicly
            - internally
            - none
        show_social_share_buttons:
          description: >-
            This field shows social share buttons on registration page. This
            applies for On-demand recordings only.
          type: boolean
          example: true
        topic:
          description: The name of the recording.
          type: string
          example: My Personal Meeting Room
        viewer_download:
          description: >-
            This field determines whether a viewer can download the recording
            file or not.
          type: boolean
          example: true
    CloudRecordingListRecordingsResponse:
      description: The pagination object.
      type: object
      properties:
        from:
          description: The start date.
          type: string
          format: date
          example: '2022-01-01'
        to:
          description: The end date.
          type: string
          format: date
          example: '2022-04-01'
        next_page_token:
          description: >-
            The next page token paginates through a large set of results. A next
            page token returns whenever the set of available results exceeds the
            current page size. The expiration period for this token is 15
            minutes.
          type: string
          example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_size:
          description: The number of records returned within a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The number of all records available across pages.
          type: integer
          example: 1
        meetings:
          description: List of recordings.
          type: array
          items:
            description: The recording meeting object.
            type: object
            properties:
              account_id:
                description: Unique Identifier of the user account.
                type: string
                example: Cx3wERazSgup7ZWRHQM8-w
              duration:
                description: Meeting duration.
                type: integer
                example: 20
              host_id:
                description: ID of the user set as host of meeting.
                type: string
                example: _0ctZtY0REqWalTmwvrdIw
              id:
                description: Meeting ID - also known as the meeting number.
                type: integer
                example: 6840331990
              recording_count:
                description: >-
                  Number of recording files returned in the response of this API
                  call. This includes the `recording_files` and 
                  `participant_audio_files` files.
                type: integer
                example: 22
              start_time:
                description: The time when the meeting started.
                type: string
                format: date-time
                example: '2021-03-18T05:41:36Z'
              topic:
                description: Meeting topic.
                type: string
                example: My Personal Meeting
              total_size:
                description: >-
                  The total file size of the recording. This includes the
                  `recording_files` and `participant_audio_files` files.
                type: integer
                format: int64
                example: 22
              type:
                description: >-
                  The recording's associated type of meeting or webinar: 


                  If the recording is of a meeting: 

                  * `1` - Instant meeting. 

                  * `2` - Scheduled meeting. 

                  * `3` - A recurring meeting with no fixed time. 

                  * `4` - A meeting created viaPersonal Meeting ID (PMI). 

                  * `7` - A [Personal Audio
                  Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
                  (PAC). 

                  * `8` - Recurring meeting with a fixed time. 


                  If the recording is of a webinar: 

                  * `5` - A webinar. 

                  * `6` - A recurring webinar without a fixed time 

                  * `9` - A recurring webinar with a fixed time.


                  If the recording is **not** from a meeting or webinar: 


                  * `99` - A recording uploaded via the
                  [**Recordings**](https://zoom.us/recording) interface on the
                  Zoom Web Portal.
                type: string
                example: '1'
                extensions:
                  x-enum-descriptions:
                    - Instant Meeting
                    - Scheduled Meeting
                    - Recurring Meeting with no fixed time
                    - Meeting created using a Personal Meeting ID
                    - A webinar
                    - Recurring webinar without a fixed time
                    - Personal Audio Conference
                    - Recurring meeting with a fixed time
                    - Recurring webinar with a fixed time
                    - A recording uploaded
                enum:
                  - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                  - '6'
                  - '7'
                  - '8'
                  - '9'
                  - '99'
              uuid:
                description: >-
                  Unique Meeting Identifier. Each instance of the meeting will
                  have its own UUID.
                type: string
                example: BOKXuumlTAGXuqwr3bLyuQ==
              recording_play_passcode:
                description: >-
                  The cloud recording's passcode to be used in the URL. This
                  recording's passcode can be directly spliced in `play_url` or
                  `share_url` with `?pwd=` to access and play. For example,
                  'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'.
                  If you want to use this field, please contact Zoom support.
                type: string
                example: yNYIS408EJygs7rE5vVsJwXIz4-VW7MH
              recording_files:
                description: List of recording file.
                type: array
                items:
                  description: Recording file object.
                  type: object
                  properties:
                    deleted_time:
                      description: >-
                        The time when recording was deleted. Returned in the
                        response only for trash query.
                      type: string
                      example: '2021-03-18T05:41:36Z'
                    download_url:
                      description: >-
                        The URL to download the recording. 


                        **OAuth apps** 


                        If a user has authorized and installed your OAuth app
                        that contains recording scopes, use the
                        download_access_token or the user's [OAuth access
                        token](https://developers.zoom.us/docs/integrations/oauth/)
                        to download the file, and set the access_token as a
                        Bearer token in the Authorization header. 


                        `curl -H 'Authorization: Bearer <ACCESS_TOKEN>'
                        https://{{base-domain}}/rec/archive/download/xyz`. 


                        **Note:** This field does **not** return for [Zoom
                        On-Premise
                        accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                        Instead, this API will return the `file_path` field.
                      type: string
                      example: >-
                        https://example.com/rec/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
                    file_path:
                      description: >-
                        The file path to the On-Premise account recording. 


                        **Note:** This API only returns this field for [Zoom
                        On-Premise
                        accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                        It does **not** return the `download_url` field.
                      type: string
                      example: /9090876528/path01/demo.mp4
                    file_size:
                      description: The recording file size.
                      type: number
                      example: 7220
                    file_type:
                      description: "The recording file type.  \n \n`MP4` - Video file of the recording.  \n `M4A` Audio-only file of the recording.  \n `TIMELINE` - Timestamp file of the recording in JSON file format. To get a timeline file, the **Add a timestamp to the recording** setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.\n  \n  `TRANSCRIPT` - Transcription file of the recording in VTT format.  \n  `CHAT` - A TXT file containing in-meeting chat messages that were sent during the meeting.  \n `CC` - File containing closed captions of the recording in VTT file format.  \n `CSV` - File containing polling data in CSV format.\n\n  \n \n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:  \n \n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`.  \n `SUMMARY` - Summary file of the recording in JSON file format."
                      type: string
                      example: MP4
                      enum:
                        - MP4
                        - M4A
                        - CHAT
                        - TRANSCRIPT
                        - CSV
                        - TB
                        - CC
                        - CHAT_MESSAGE
                        - SUMMARY
                    file_extension:
                      description: The file extension type of the recording file.
                      type: string
                      example: M4A
                      enum:
                        - MP4
                        - M4A
                        - TXT
                        - VTT
                        - CSV
                        - JSON
                        - JPG
                    id:
                      description: >-
                        The recording file ID. Included in the response of
                        general query.
                      type: string
                      example: 72576a1f-4e66-4a77-87c4-f13f9808bd76
                    meeting_id:
                      description: 'The meeting ID. '
                      type: string
                      example: L0AGOEPVR9m5WSOOs/d+FQ==
                    play_url:
                      description: The URL to play a recording file.
                      type: string
                      example: https://example.com/rec/play/Qg75t7xZBtEbAkjdlgbfdngBBBB
                    recording_end:
                      description: The recording end time. Response in general query.
                      type: string
                      example: '2021-03-18T05:41:36Z'
                    recording_start:
                      description: The recording start time.
                      type: string
                      example: '2021-03-18T05:41:36Z'
                    recording_type:
                      description: |-
                        The recording type.  
                         `shared_screen_with_speaker_view(CC)`  
                         `shared_screen_with_speaker_view`  
                         `shared_screen_with_gallery_view`  
                         `speaker_view`  
                         `gallery_view`  
                         `shared_screen`  
                         `audio_only`  
                         `audio_transcript`  
                         `chat_file`  
                         `active_speaker`  
                         `poll`  
                         `timeline`  
                         `closed_caption`  
                         `audio_interpretation`  
                         `summary`  
                         `summary_next_steps`  
                         `summary_smart_chapters`  
                         `sign_interpretation`  
                         `production_studio`
                      type: string
                      example: shared_screen_with_speaker_view
                      enum:
                        - shared_screen_with_speaker_view(CC)
                        - shared_screen_with_speaker_view
                        - shared_screen_with_gallery_view
                        - active_speaker
                        - gallery_view
                        - shared_screen
                        - audio_only
                        - audio_transcript
                        - chat_file
                        - poll
                        - host_video
                        - closed_caption
                        - timeline
                        - thumbnail
                        - audio_interpretation
                        - summary
                        - summary_next_steps
                        - summary_smart_chapters
                        - sign_interpretation
                        - production_studio
                    status:
                      description: The recording status.
                      type: string
                      example: completed
                      enum:
                        - completed
    DevicesListResponse:
      type: object
      properties:
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2
        page_size:
          description: The number of records returned within a single API call.
          type: integer
          example: 20
        devices:
          type: array
          items:
            description: The information about the device.
            type: object
            properties:
              device_id:
                description: Unique identifier of the device.
                type: string
                example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
              device_name:
                description: The name of the device.
                type: string
                example: My device
              mac_address:
                description: The mac address of the device.
                type: string
                example: 01-23-45-67-89-AB
              serial_number:
                description: The device's serial number.
                type: string
                example: 6NRN2A0
              vendor:
                description: The device's manufacturer.
                type: string
                example: Poly
              model:
                description: The device's model.
                type: string
                example: StudioX30
              platform_os:
                description: The device's platform.
                type: string
                example: Epos expandvision5 1.2.22315.04
              app_version:
                description: App version of Zoom Rooms.
                type: string
                example: 5.13.0.5762
              tag:
                description: The name of the tag.
                type: string
                example: personal rooms
              enrolled_in_zdm:
                description: Whether the device enrolled in ZDM (Zoom Device Management).
                type: boolean
                example: true
              connected_to_zdm:
                description: Whether the device connected to ZDM (Zoom Device Management).
                type: boolean
                example: true
              room_id:
                description: id of the Zoom Room.
                type: string
                example: 72afdc13-a289-40c3-b358-50c8b8de
              room_name:
                description: Name of the Zoom Room.
                type: string
                example: My Personal Meeting Room
              device_type:
                description: |-
                  Filter devices by device type.  
                    Device Type:  
                   `-1` - All Zoom Room device(0,1,2,3,4,6).  
                   `0` - Zoom Rooms Computer.  
                   `1` - Zoom Rooms Controller.  
                   `2` - Zoom Rooms Scheduling Display.  
                   `3` - Zoom Rooms Control System.  
                   `4` -  Zoom Rooms Whiteboard.  
                   `5` - Zoom Phone Appliance.  
                   `6` - Zoom Rooms Computer (with Controller).
                type: integer
                example: 0
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
              skd_version:
                description: The version of the SDK.
                type: string
                example: 2.0.11
              device_status:
                description: |-
                  Filter devices by status.   
                    Device Status:  
                   `0` - offline.  
                   `1` - online.  
                   `-1` - unlink
                type: integer
                example: 0
                enum:
                  - -1
                  - 0
                  - 1
              last_online:
                description: The time when device was online last time.
                type: string
                example: '2022-10-27T10:23:15Z'
              user_email:
                description: The owner of the phone device
                type: string
                example: test-user@ya.us
    DevicesGetDetailResponse:
      description: Information about the device.
      type: object
      properties:
        device_id:
          description: The device's unique identifier.
          type: string
          example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
        device_name:
          description: The name of the device.
          type: string
          example: My device
        mac_address:
          description: The device's MAC address.
          type: string
          example: 01-23-45-67-89-AB
        serial_number:
          description: The device's serial number.
          type: string
          example: 6NRN2A0
        vendor:
          description: The device's manufacturer.
          type: string
          example: Poly
        model:
          description: The device's model.
          type: string
          example: StudioX30
        platform_os:
          description: The device's platform.
          type: string
          example: Epos expandvision5 1.2.22315.04
        app_version:
          description: App version of Zoom Rooms.
          type: string
          example: 5.13.0.5762
        tag:
          description: The tag's name.
          type: string
          example: personal rooms
        enrolled_in_zdm:
          description: Whether the device is enrolled in ZDM (Zoom Device Management).
          type: boolean
          example: true
        connected_to_zdm:
          description: Whether the device is connected to ZDM (Zoom Device Management).
          type: boolean
          example: true
        room_id:
          description: The Zoom Room's ID.
          type: string
          example: 72afdc13-a289-40c3-b358-50c8b8de
        room_name:
          description: The Zoom Room's name.
          type: string
          example: My Personal Meeting Room
        device_type:
          description: |-
            Filter devices by device type.  
            Device Type:  
             `-1` - All Zoom Room device(0,1,2,3,4,6).  
             `0` - Zoom Rooms Computer.  
             `1` - Zoom Rooms Controller.  
             `2` - Zoom Rooms Scheduling Display.  
             `3` - Zoom Rooms Control System.  
             `4` - Zoom Rooms Whiteboard.  
             `5` - Zoom Phone Appliance.  
             `6` - Zoom Rooms Computer (with Controller).
          type: integer
          example: 0
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        sdk_version:
          description: The SDK version.
          type: string
          example: 2.0.11
        device_status:
          description: |-
            Filter devices by status.  
             Device Status:  
             `0` - offline.  
             `1` - online.  
             `-1` - unlink
          type: integer
          example: 0
          enum:
            - -1
            - 0
            - 1
        last_online:
          description: The time when the device was last online.
          type: string
          example: '2022-10-27T10:23:15Z'
        user_email:
          description: The phone device's owner.
          type: string
          example: test-user@ya.us
    H323DevicesListDevicesResponse:
      title: H.323/SIP Device List
      description: List of H.323/SIP Devices.
      type: object
      properties:
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: w7587w4eiyfsudgf
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_number:
          description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          type: integer
          example: 1
          deprecated: true
          default: 1
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 20
        devices:
          description: List of H.323/SIP Device objects.
          type: array
          items:
            title: The H.323/SIP device object.
            description: The H.323/SIP device object.
            type: object
            properties:
              id:
                description: Device ID.
                type: string
                example: abceHewahkrehwiK
              encryption:
                description: |-
                  Device encryption:  
                   `auto` - auto.  
                   `yes` - yes.  
                   `no` - no.
                type: string
                example: auto
                extensions:
                  x-enum-descriptions:
                    - auto
                    - 'yes'
                    - 'no'
                enum:
                  - auto
                  - 'yes'
                  - 'no'
              ip:
                description: Device IP.
                type: string
                example: 127.0.0.1
              name:
                description: Device name.
                maxLength: 64
                type: string
                example: api_test_20190508
              protocol:
                description: |-
                  Device protocol:  
                   `H.323` - H.323.  
                   `SIP` - SIP.
                type: string
                example: H.323
                extensions:
                  x-enum-descriptions:
                    - H.323
                    - SIP
                enum:
                  - H.323
                  - SIP
            required:
              - encryption
              - ip
              - name
              - protocol
    H323DevicesCreateDeviceResponse:
      title: The H.323/SIP device object.
      description: The H.323/SIP device object.
      type: object
      properties:
        id:
          description: Device ID.
          type: string
          example: abceHewahkrehwiK
        encryption:
          description: |-
            Device encryption:  
             `auto` - auto.  
             `yes` - yes.  
             `no` - no.
          type: string
          example: auto
          extensions:
            x-enum-descriptions:
              - auto
              - 'yes'
              - 'no'
          enum:
            - auto
            - 'yes'
            - 'no'
        ip:
          description: Device IP.
          type: string
          example: 127.0.0.1
        name:
          description: Device name.
          maxLength: 64
          type: string
          example: api_test_20190508
        protocol:
          description: |-
            Device protocol:  
             `H.323` - H.323.  
             `SIP` - SIP.
          type: string
          example: H.323
          extensions:
            x-enum-descriptions:
              - H.323
              - SIP
          enum:
            - H.323
            - SIP
      required:
        - encryption
        - ip
        - name
        - protocol
    MeetingsListMeetingSummariesResponse:
      type: object
      properties:
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        next_page_token:
          description: >-
            The next page token paginates through a large set of results. A next
            page token returns whenever the set of available results exceeds the
            current page size. The expiration period for this token is 15
            minutes.
          type: string
          example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
        from:
          description: >-
            The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to
            retrieve the creation date range of the meeting summaries.
          type: string
          format: date-time
          example: '2023-10-19T07:00:00Z'
        to:
          description: >-
            The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to
            retrieve the creation date range of the meeting summaries.
          type: string
          format: date-time
          example: '2023-10-20T07:00:00Z'
        summaries:
          description: List of meeting summary objects.
          type: array
          items:
            description: The meeting summary object.
            type: object
            properties:
              meeting_host_id:
                description: The ID of the user who is set as the meeting host.
                type: string
                example: 30R7kT7bTIKSNUFEuH_Qlg
              meeting_host_email:
                description: The meeting host's email address.
                type: string
                format: email
                example: jchill@example.com
              meeting_uuid:
                description: >
                  Unique meeting ID. Each meeting instance generates its own
                  meeting UUID - after a meeting ends, a new UUID is generated
                  for the next instance of the meeting. Retrieve a list of UUIDs
                  from past meeting instances using the [**List past meeting
                  instances**](/docs/api-reference/zoom-api/methods#operation/pastMeetings)
                  API. [Double
                  encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
                  your UUID when using it for API calls if the UUID begins with
                  a `/` or contains `//` in it.
                type: string
                example: aDYlohsHRtCd4ii1uC2+hA==
              meeting_id:
                description: >-
                  [Meeting
                  ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-)
                  - the meeting's unique identifier in **long** format,
                  represented as int64 data type in JSON, also known as the
                  meeting number.
                type: integer
                format: int64
                example: 97763643886
              meeting_topic:
                description: Meeting topic.
                type: string
                example: My Meeting
              meeting_start_time:
                description: The meeting's start date and time.
                type: string
                format: date-time
                example: '2019-07-15T23:24:52Z'
              meeting_end_time:
                description: The meeting's end date and time.
                type: string
                format: date-time
                example: '2020-07-15T23:30:19Z'
              summary_start_time:
                description: The summary's start date and time.
                type: string
                format: date-time
                example: '2019-07-15T23:24:52Z'
              summary_end_time:
                description: The summary's end date and time.
                type: string
                format: date-time
                example: '2020-07-15T23:30:19Z'
              summary_created_time:
                description: The date and time at which the meeting summary was created.
                type: string
                format: date-time
                example: '2019-07-15T23:24:52Z'
              summary_last_modified_time:
                description: >-
                  The date and time at which the meeting summary was last
                  modified.
                type: string
                format: date-time
                example: '2020-07-15T23:30:19Z'
    MeetingsGetDetailsResponse:
      description: Meeting object.
      type: object
      properties:
        assistant_id:
          description: The ID of the user who scheduled this meeting on behalf of the host.
          type: string
          example: kFFvsJc-Q1OSxaJQLvaa_A
        host_email:
          description: The meeting host's email address.
          type: string
          format: email
          example: jchill@example.com
        host_id:
          description: The ID of the user who is set as the meeting host.
          type: string
          example: 30R7kT7bTIKSNUFEuH_Qlg
        id:
          description: >-
            [Meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
            Unique identifier of the meeting in **long** format, represented as
            int64 data type in JSON, also known as the meeting number.
          type: integer
          format: int64
          example: 97763643886
        uuid:
          description: >
            Unique meeting ID. Each meeting instance generates its own meeting
            UUID - after a meeting ends, a new UUID is generated for the next
            instance of the meeting. Retrieve a list of UUIDs from past meeting
            instances using the [**List past meeting
            instances**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/pastMeetings)
            API. [Double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            your UUID when using it for API calls if the UUID begins with a `/`
            or contains `//` in it.
          type: string
          example: aDYlohsHRtCd4ii1uC2+hA==
        agenda:
          description: The meeting description.
          maxLength: 2000
          type: string
          example: My Meeting
        created_at:
          description: 'The creation time. '
          type: string
          format: date-time
          example: '2022-03-25T07:29:29Z'
        duration:
          description: The meeting duration.
          type: integer
          example: 60
        encrypted_password:
          description: Encrypted passcode for third party endpoints (H323/SIP).
          type: string
          example: 8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1
        h323_password:
          description: H.323/SIP room system passcode.
          type: string
          example: '123456'
        join_url:
          description: >-
            The URL for participants to join the meeting. This URL should only
            be shared with users invited to the meeting.
          type: string
          example: https://example.com/j/11111
        chat_join_url:
          description: The URL to join the chat.
          type: string
          example: https://example.com/launch/jc/11111
        occurrences:
          description: Array of occurrence objects.
          type: array
          items:
            description: >-
              Occurrence object. This object is only returned for recurring
              meetings.
            type: object
            properties:
              duration:
                description: Duration.
                type: integer
                example: 60
              occurrence_id:
                description: >-
                  Occurrence ID: Unique Identifier that identifies an occurrence
                  of a recurring meeting. [Recurring
                  meetings](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings)
                  can have a maximum of 50 occurrences.
                type: string
                example: '1648194360000'
              start_time:
                description: Start time.
                type: string
                format: date-time
                example: '2022-03-25T07:46:00Z'
              status:
                description: |-
                  Occurrence status: 
                   `available` - Available occurrence.  
                   `deleted` -  Deleted occurrence.
                type: string
                example: available
                enum:
                  - available
                  - deleted
        password:
          description: Meeting passcode.
          minimum: 8
          type: string
          example: '123456'
        pmi:
          description: >-
            [Personal meeting ID
            (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
            Only used for scheduled meetings and recurring meetings with no
            fixed time.
          type: string
          example: '97891943927'
        pre_schedule:
          description: >-
            Whether the prescheduled meeting was created via the [GSuite
            app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on).
            This **only** supports the meeting `type` value of `2` (scheduled
            meetings) and `3` (recurring meetings with no fixed time): 

            * `true` - A GSuite prescheduled meeting. 

            * `false` - A regular meeting.
          type: boolean
          example: false
          default: false
        recurrence:
          description: >-
            Recurrence object. Use this object only for a meeting with type `8`,
            a recurring meeting with a fixed time. 
          required:
            - type
          type: object
          properties:
            end_date_time:
              description: >-
                Select the final date when the meeting will recur before it is
                canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z.
                (Cannot be used with `end_times`.)
              type: string
              format: date-time
              example: '2022-04-02T15:59:00Z'
            end_times:
              description: >-
                Select how many times the meeting should recur before it is
                canceled. The maximum number of recurring is 60. Cannot be used
                with `end_date_time`.
              maximum: 60
              type: integer
              example: 7
              default: 1
            monthly_day:
              description: >-
                Use this field only if you're scheduling a recurring meeting of
                type `3` to state the day in a month when the meeting should
                recur. The value range is from 1 to 31.


                For example, for a meeting to recur on 23rd of each month,
                provide `23` as this field's value and `1` as the
                `repeat_interval` field's value. Instead, to have the meeting to
                recur every three months on 23rd of the month, change the
                `repeat_interval` field's value to `3`.
              type: integer
              example: 1
              default: 1
            monthly_week:
              description: >-
                Use this field only if you're scheduling a recurring meeting of
                type `3` to state the week of the month when the meeting should
                recur. If you use this field, **you must also use the
                `monthly_week_day` field to state the day of the week when the
                meeting should recur.**   
                 `-1` - Last week of the month.  
                 `1` - First week of the month.  
                 `2` - Second week of the month.  
                 `3` - Third week of the month.  
                 `4` - Fourth week of the month.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Last week
                  - First week
                  - Second week
                  - Third week
                  - Fourth week
              enum:
                - -1
                - 1
                - 2
                - 3
                - 4
            monthly_week_day:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state a specific day in a week when the monthly
                meeting should recur. To use this field, you must also use the
                `monthly_week` field. 

                  
                 `1` - Sunday.  
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` - Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
            repeat_interval:
              description: >+
                Define the interval when the meeting should recur. For instance,
                to schedule a meeting that recurs every two months, you must set
                this field's value as `2` and the `type` parameter's value as
                `3`. 


                For a daily meeting, the maximum interval you can set is `90`
                days. For a weekly meeting the maximum interval that you can set
                is  of `12` weeks. For a monthly meeting, there is a maximum of
                `3` months.

              type: integer
              example: 1
            type:
              description: |-
                Recurrence meeting types:  
                 `1` - Daily.  
                 `2` - Weekly.  
                 `3` - Monthly.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Daily
                  - Weekly
                  - Monthly
              enum:
                - 1
                - 2
                - 3
            weekly_days:
              description: >-
                This field is required if you're scheduling a recurring meeting
                of type `2` to state which days of the week the meeting should
                repeat.   
                    
                  The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
                   
                  **Note** To have the meeting occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as this field's value.


                 `1`  - Sunday.   
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` -  Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: string
              example: '1'
              default: '1'
              enum:
                - '1'
                - '2'
                - '3'
                - '4'
                - '5'
                - '6'
                - '7'
        settings:
          description: Meeting settings.
          type: object
          properties:
            allow_multiple_devices:
              description: >-
                Allow attendees to join the meeting from multiple devices. This
                setting only works for meetings that require
                [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
              type: boolean
              example: true
            alternative_hosts:
              description: >-
                A semicolon-separated list of the meeting's alternative hosts'
                email addresses or IDs.
              type: string
              example: jchill@example.com;thill@example.com
            alternative_hosts_email_notification:
              description: >-
                Flag to determine whether to send email notifications to
                alternative hosts, default value is true.
              type: boolean
              example: true
              default: true
            alternative_host_update_polls:
              description: >-
                Whether the **Allow alternative hosts to add or edit polls**
                feature is enabled. This requires Zoom version 5.8.0 or higher.
              type: boolean
              example: true
            approval_type:
              description: >-
                Enable registration and set approval for the registration. Note
                that this feature requires the host to be of **Licensed** user
                type. **Registration cannot be enabled for a basic user.**   
                   
                 

                `0` - Automatically approve.  
                 `1` - Manually approve.  
                 `2` - No registration required.
              type: integer
              example: 0
              extensions:
                x-enum-descriptions:
                  - Automatically Approve
                  - Manually Approve
                  - No Registration Required
              default: 2
              enum:
                - 0
                - 1
                - 2
            approved_or_denied_countries_or_regions:
              description: >
                Approve or block users from specific regions/countries from
                joining this meeting. 
              type: object
              properties:
                approved_list:
                  description: >-
                    List of countries/regions from where participants can join
                    this meeting. 
                  type: array
                  items:
                    type: string
                    example: CX
                denied_list:
                  description: >-
                    List of countries/regions from where participants can not
                    join this meeting. 
                  type: array
                  items:
                    type: string
                    example: CA
                enable:
                  description: >-
                    `true`: Setting enabled to either allow users or block users
                    from specific regions to join your meetings.   
                     

                    `false`: Setting disabled.
                  type: boolean
                  example: true
                method:
                  description: >-
                    Specify whether to allow users from specific regions to join
                    this meeting; or block users from specific regions from
                    joining this meeting.   
                       
                     
                    `approve`: Allow users from specific regions/countries to
                    join this meeting. If this setting is selected, the approved
                    regions/countries must be included in the `approved_list`.  
                       
                     
                    `deny`: Block users from specific regions/countries from
                    joining this meeting. If this setting is selected, the
                    approved regions/countries must be included in the
                    `denied_list`
                  type: string
                  example: approve
                  enum:
                    - approve
                    - deny
            audio:
              description: >-
                Determine how participants can join the audio portion of the
                meeting.  
                 `both` - Both Telephony and VoIP.  
                 `telephony` - Telephony only.  
                 `voip` - VoIP only.  
                 `thirdParty` - Third party audio conference.
              type: string
              example: telephony
              extensions:
                x-enum-descriptions:
                  - Both Telephony and VoIP
                  - Telephony only
                  - VoIP only
                  - Third party audio conference
              default: both
              enum:
                - both
                - telephony
                - voip
                - thirdParty
            audio_conference_info:
              description: Third party audio conference info.
              maxLength: 2048
              type: string
              example: test
            authentication_domains:
              description: >-
                If user has configured [Sign Into Zoom with Specified
                Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                option, this will list the domains that are authenticated.
              type: string
              example: example.com
            authentication_exception:
              description: >-
                The participants added here will receive unique meeting invite
                links and bypass authentication.
              type: array
              items:
                type: object
                properties:
                  email:
                    description: Email address of the participant.
                    type: string
                    format: email
                    example: jchill@example.com
                  name:
                    description: Name of the participant.
                    type: string
                    example: Jill Chill
                  join_url:
                    description: URL for participants to join the meeting
                    type: string
                    example: https://example.com/s/11111
            authentication_name:
              description: >-
                Authentication name set in the [authentication
                profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
              type: string
              example: Sign in to Zoom
            authentication_option:
              description: Meeting authentication option id.
              type: string
              example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
            auto_recording:
              description: |-
                Automatic recording:  
                 `local` - Record on local.  
                 `cloud` -  Record on cloud.  
                 `none` - Disabled.
              type: string
              example: cloud
              extensions:
                x-enum-descriptions:
                  - Record to local device
                  - Record to cloud
                  - No Recording
              default: none
              enum:
                - local
                - cloud
                - none
            breakout_room:
              description: >-
                Setting to [pre-assign breakout
                rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
              type: object
              properties:
                enable:
                  description: >-
                    Set this field's value to `true` if you would like to enable
                    the [breakout room
                    pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)
                    option.
                  type: boolean
                  example: true
                rooms:
                  description: Create room(s).
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        description: The breakout room's name.
                        type: string
                        example: room1
                      participants:
                        description: >-
                          Email addresses of the participants who are to be
                          assigned to the breakout room.
                        type: array
                        items:
                          type: string
                          example: jchill@example.com
            calendar_type:
              description: >-
                Indicates the type of calendar integration used to schedule the
                meeting. 

                * `1` - [Zoom Outlook
                add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 

                * `2` - [Zoom for Google Workspace
                add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)


                Works with the `private_meeting` field to determine whether to
                share details of meetings or not.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Outlook
                  - Google Calendar
              enum:
                - 1
                - 2
            close_registration:
              description: Close registration after event date
              type: boolean
              example: false
              default: false
            cn_meeting:
              description: Host meeting in China.
              type: boolean
              example: false
              deprecated: true
              default: false
            contact_email:
              description: Contact email for registration
              type: string
              example: jchill@example.com
            contact_name:
              description: Contact name for registration
              type: string
              example: Jill Chill
            custom_keys:
              description: Custom keys and values assigned to the meeting.
              maxItems: 10
              type: array
              items:
                type: object
                properties:
                  key:
                    description: Custom key associated with the user.
                    maxLength: 64
                    type: string
                    example: key1
                  value:
                    description: Value of the custom key associated with the user.
                    maxLength: 256
                    type: string
                    example: value1
            email_notification:
              description: >-
                Whether to send email notifications to [alternative
                hosts](https://support.zoom.us/hc/en-us/articles/208220166) and
                [users with scheduling
                privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege).
                This value defaults to `true`.
              type: boolean
              example: true
              default: true
            encryption_type:
              description: >-
                Choose between enhanced encryption and [end-to-end
                encryption](https://support.zoom.us/hc/en-us/articles/360048660871)
                when starting or a meeting. When using end-to-end encryption,
                several features (e.g. cloud recording, phone/SIP/H.323 dial-in)
                will be **automatically disabled**. 
                 
                `enhanced_encryption` - Enhanced encryption. Encryption is
                stored in the cloud if you enable this option.   
                 

                `e2ee` - [End-to-end
                encryption](https://support.zoom.us/hc/en-us/articles/360048660871).
                The encryption key is stored in your local device and can not be
                obtained by anyone else. Enabling this setting also **disables**
                the join before host, cloud recording, streaming, live
                transcription, breakout rooms, polling, 1:1 private chat, and
                meeting reactions features.
              type: string
              example: enhanced_encryption
              enum:
                - enhanced_encryption
                - e2ee
            enforce_login:
              description: >-
                Only signed in users can join this meeting.


                **This field is deprecated and will not be supported in the
                future.**    
                   
                 As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
              type: boolean
              example: true
              deprecated: true
            enforce_login_domains:
              description: >-
                Only signed in users with specified domains can join meetings.


                **This field is deprecated and will not be supported in the
                future.**    
                   
                 As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
              type: string
              example: example.com
              deprecated: true
            focus_mode:
              description: >-
                Whether the [**Focus Mode**
                feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode)
                is enabled when the meeting starts.
              type: boolean
              example: true
            global_dial_in_countries:
              description: List of global dial-in countries
              type: array
              items:
                type: string
                example: US
            global_dial_in_numbers:
              description: Global Dial-in Countries/Regions
              type: array
              items:
                type: object
                properties:
                  city:
                    description: City of the number, if any. For example, Chicago.
                    type: string
                    example: New York
                  country:
                    description: Country code. For example, BR.
                    type: string
                    example: US
                  country_name:
                    description: Full name of country. For example, Brazil.
                    type: string
                    example: US
                  number:
                    description: Phone number. For example, +1 2332357613.
                    type: string
                    example: +1 1000200200
                  type:
                    description: 'Type of number. '
                    type: string
                    example: toll
                    enum:
                      - toll
                      - tollfree
            host_video:
              description: Start video when the host joins the meeting.
              type: boolean
              example: true
            in_meeting:
              description: Host meeting in India.
              type: boolean
              example: false
              deprecated: true
              default: false
            jbh_time:
              description: >-
                If the value of `join_before_host` field is set to true, this
                field can be used to indicate time limits when a participant may
                join a meeting before a host.


                *  `0` - Allow participant to join anytime.

                *  `5` - Allow participant to join 5 minutes before meeting
                start time.
                 * `10` - Allow participant to join 10 minutes before meeting start time.
              type: integer
              example: 0
              enum:
                - 0
                - 5
                - 10
            join_before_host:
              description: >-
                Allow participants to join the meeting before the host starts
                the meeting. Only used for scheduled or recurring meetings.
              type: boolean
              example: true
              default: false
            language_interpretation:
              description: >-
                The meeting's [language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** This feature is only available for certain Meeting
                add-on, Education, and Business and higher plans. If this
                feature is not enabled on the host's account, this setting will
                **not** be applied to the meeting.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [language
                    interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                    for the meeting.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the meeting's language interpreters.
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      languages:
                        description: >-
                          A comma-separated list of the interpreter's languages.
                          The string must contain two [country
                          IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                          For example, if the interpreter will translate from
                          English to Chinese, then this value will be `US,CN`.
                        type: string
                        example: US,FR
            sign_language_interpretation:
              description: >-
                The meeting's [sign language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** If this feature is not enabled on the host's account,
                this setting will **not** be applied to the meeting.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [sign language
                    interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                    for the meeting.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the meeting's sign language interpreters.
                  maximum: 20
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      sign_language:
                        description: |-
                          The interpreter's sign language. 

                           To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API response.
                        type: string
                        example: American
            meeting_authentication:
              description: '`true` - Only authenticated users can join meetings.'
              type: boolean
              example: true
            mute_upon_entry:
              description: Mute participants upon entry.
              type: boolean
              example: false
              default: false
            participant_video:
              description: Start video when participants join the meeting.
              type: boolean
              example: false
            private_meeting:
              description: Whether the meeting is set as private.
              type: boolean
              example: false
            registrants_confirmation_email:
              description: |-
                Whether to send registrants an email confirmation.
                * `true` - Send a confirmation email.
                * `false` - Do not send a confirmation email.
              type: boolean
              example: true
            registrants_email_notification:
              description: >-
                Whether to send registrants email notifications about their
                registration approval, cancellation, or rejection.


                * `true` - Send an email notification.

                * `false` - Do not send an email notification.

                 Set this value to `true` to also use the `registrants_confirmation_email` parameter.
              type: boolean
              example: true
            registration_type:
              description: >-
                Registration type. Used for recurring meeting with fixed time
                only. 
                 `1` Attendees register once and can attend any of the occurrences.  
                 `2` Attendees need to register for each occurrence to attend.  
                 `3` Attendees register once and can choose one or more occurrences to attend.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - >-
                    Attendees register once and can attend any of the
                    occurrences
                  - Attendees need to register for each occurrence to attend
                  - >-
                    Attendees register once and can choose one or more
                    occurrences to attend
              default: 1
              enum:
                - 1
                - 2
                - 3
            show_share_button:
              description: >-
                Show social share buttons on the meeting registration page.

                This setting only works for meetings that require
                [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
              type: boolean
              example: true
            use_pmi:
              description: >-
                Use a [personal meeting ID
                (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                Only used for scheduled meetings and recurring meetings with no
                fixed time.
              type: boolean
              example: false
              default: false
            waiting_room:
              description: Enable waiting room
              type: boolean
              example: false
              default: false
            watermark:
              description: Add watermark when viewing a shared screen.
              type: boolean
              example: false
              default: false
            host_save_video_order:
              description: >-
                Whether the **Allow host to save video order** feature is
                enabled.
              type: boolean
              example: true
            internal_meeting:
              description: Whether to set the meeting as an internal meeting.
              type: boolean
              example: false
              default: false
            continuous_meeting_chat:
              description: >-
                Information about the **Enable continuous meeting chat**
                feature.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable the **Enable continuous meeting chat**
                    setting.
                  type: boolean
                  example: true
                auto_add_invited_external_users:
                  description: >-
                    Whether to enable the **Automatically add invited external
                    users** setting.
                  type: boolean
                  example: true
                channel_id:
                  description: The channel's ID.
                  type: string
                  example: cabc1234567defghijkl01234
            participant_focused_meeting:
              description: Whether to set the meeting as a participant focused meeting.
              type: boolean
              example: false
              default: false
            push_change_to_calendar:
              description: |-
                Whether to push meeting changes to the calendar. 

                 To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.
                * `true` - Push meeting changes to the calendar.
                * `false` - Do not push meeting changes to the calendar.
              type: boolean
              example: false
              default: false
            resources:
              description: The meeting's resources.
              type: array
              items:
                type: object
                properties:
                  resource_type:
                    description: The resource type.
                    type: string
                    example: whiteboard
                    enum:
                      - whiteboard
                  resource_id:
                    description: The resource ID.
                    type: string
                    example: X4Hy02w3QUOdskKofgb9Jg
                  permission_level:
                    description: >-
                      The permission levels for users to access the whiteboard. 

                      * `editor` - Users with link access can edit the board. 

                      * `commenter` - Users with link access can comment on the
                      board. 

                      * `viewer` - Users with link access can view the board.
                    type: string
                    example: editor
                    default: editor
                    enum:
                      - editor
                      - commenter
                      - viewer
        start_time:
          description: >
            Meeting start time in GMT or UTC. Start time will not be returned if
            the meeting is an **instant** meeting. 
          type: string
          format: date-time
          example: '2022-03-25T07:29:29Z'
        start_url:
          description: "The `start_url` of a meeting is a URL that a host or an alternative host can start the meeting. \n\nThe expiration time for the `start_url` field listed in the response of the [**Create a meeting**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/meetingCreate) API is two hours for all regular users. \n\t\nFor users created using the `custCreate` option via the [**Create users**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.\n\t\nFor security reasons, to retrieve the updated value for the `start_url` field programmatically after the expiry time, you must call the [**Get a meeting](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/meeting) API and refer to the value of the `start_url` field in the response.  \n This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting."
          type: string
          example: https://example.com/s/11111
        status:
          description: Meeting status
          type: string
          example: waiting
          enum:
            - waiting
            - started
        timezone:
          description: The timezone to format the meeting start time.
          type: string
          example: America/Los_Angeles
        topic:
          description: Meeting topic.
          type: string
          example: My Meeting
        tracking_fields:
          description: Tracking fields.
          type: array
          items:
            type: object
            properties:
              field:
                description: The tracking field's label.
                type: string
                example: field1
              value:
                description: The tracking field's value.
                type: string
                example: value1
              visible:
                description: >-
                  Indicates whether the [tracking
                  field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
                  is visible in the meeting scheduling options in the Zoom Web
                  Portal or not.


                  `true`: Tracking field is visible.   
                   

                  `false`: Tracking field is not visible to the users when they
                  look at the meeting details in the Zoom Web Portal but the
                  field was used while scheduling this meeting via API. An
                  invisible tracking field can be used by users while scheduling
                  meetings via API only. 
                type: boolean
                example: true
        type:
          description: |-
            Meeting types. 
             `1` - Instant meeting.  
             `2` - Scheduled meeting.  
             `3` - Recurring meeting with no fixed time.  
             `4` - PMI Meeting  
             
            `8` - Recurring meeting with a fixed time.
          type: integer
          example: 2
          extensions:
            x-enum-descriptions:
              - Instant Meeting
              - Scheduled Meeting
              - Recurring Meeting with no fixed time
              - Recurring Meeting with fixed time
          default: 2
          enum:
            - 1
            - 2
            - 3
            - 8
    MeetingsCreateBatchPollsResponse:
      type: object
      properties:
        polls:
          type: array
          items:
            type: object
            properties:
              title:
                description: Title for the Poll
                type: string
                example: Learn something new
              anonymous:
                description: >-
                  Whether to allow meeting participants to answer poll questions
                  anonymously: 

                  * `true` &mdash; Anonymous polls enabled. 

                  * `false` &mdash; Participants cannot answer poll questions
                  anonymously.
                type: boolean
                example: true
              id:
                description: Meeting Poll ID
                type: string
                example: QalIoKWLTJehBJ8e1xRrbQ
              poll_type:
                description: >-
                  The type of poll: 

                  * `1` &mdash; Poll. 

                  * `2` &mdash; Advanced Poll. This feature must be enabled in
                  your Zoom account. 

                  * `3` &mdash; Quiz. This feature must be enabled in your Zoom
                  account.
                type: integer
                example: 2
                enum:
                  - 1
                  - 2
                  - 3
              questions:
                description: Information about the poll's questions.
                type: array
                items:
                  type: object
                  properties:
                    answer_max_character:
                      description: >-
                        The allowed maximum number of characters. This field
                        only returns for `short_answer` and `long_answer` polls.
                      type: integer
                      example: 200
                    answer_min_character:
                      description: >-
                        The allowed minimum number of characters. This field
                        only returns for `short_answer` and `long_answer` polls.
                      type: integer
                      example: 1
                    answer_required:
                      description: >-
                        Whether participants must answer the question: 

                        * `true` &mdash; The participant must answer the
                        question. 

                        * `false` &mdash; The participant does not need to
                        answer the question.
                      type: boolean
                      example: false
                    answers:
                      description: The poll question's available answers.
                      type: array
                      items:
                        type: string
                        example: Extremely useful
                    case_sensitive:
                      description: >-
                        Whether the correct answer is case sensitive. This field
                        only returns for `fill_in_the_blank` polls: 

                        * `true` &mdash; The answer is case-sensitive. 

                        * `false` &mdash; The answer is not case-sensitive.
                      type: boolean
                      example: false
                      default: false
                    name:
                      description: >-
                        The poll question's title. For `fill_in_the_blank`
                        polls, this field is the poll's question.
                      type: string
                      example: How useful was this meeting?
                    prompts:
                      description: >-
                        Information about the prompt questions. This object only
                        returns for `matching` and `rank_order` polls.
                      type: array
                      items:
                        type: object
                        properties:
                          prompt_question:
                            description: The question prompt's title.
                            type: string
                            example: How are you?
                          prompt_right_answers:
                            description: The question prompt's correct answers.
                            type: array
                            items:
                              type: string
                              example: Good
                    rating_max_label:
                      description: >-
                        The high score label used for the `rating_max_value`
                        field. This field only returns for `rating_scale` polls.
                      type: string
                      example: Extremely Likely
                    rating_max_value:
                      description: >-
                        The rating scale's maximum value. This field only
                        returns for `rating_scale` polls.
                      maximum: 10
                      type: integer
                      example: 4
                    rating_min_label:
                      description: >-
                        The low score label used for the `rating_min_value`
                        field. This field only returns for `rating_scale` polls.
                      type: string
                      example: Not likely
                    rating_min_value:
                      description: >-
                        The rating scale's minimum value. This field only
                        returns for `rating_scale` polls.
                      type: integer
                      example: 0
                    right_answers:
                      description: The poll question's correct answer(s).
                      type: array
                      items:
                        type: string
                        example: Good
                    show_as_dropdown:
                      description: >-
                        Whether to display the radio selection as a drop-down
                        box: 

                        * `true` &mdash; Show as a drop-down box. 

                        * `false` &mdash; Do not show as a drop-down box.
                      type: boolean
                      example: false
                    type:
                      description: |-
                        The poll's question and answer type: 
                        * `single` &mdash; Single choice. 
                        * `multiple` &mdash; Multiple choice. 
                        * `matching` &mdash; Matching. 
                        * `rank_order` &mdash; Rank order. 
                        * `short_answer` &mdash; Short answer. 
                        * `long_answer` &mdash; Long answer. 
                        * `fill_in_the_blank` &mdash; Fill in the blank. 
                        * `rating_scale` &mdash; Rating scale.
                      type: string
                      example: single
                      extensions:
                        x-enum-descriptions:
                          - Single choice
                          - Multiple choice
                          - Matching
                          - Rank order
                          - Short answer
                          - Long answer
                          - Fill in the blank
                          - Rating scale
                      enum:
                        - single
                        - multiple
                        - matching
                        - rank_order
                        - short_answer
                        - long_answer
                        - fill_in_the_blank
                        - rating_scale
              status:
                description: |-
                  Status of the Meeting Poll:  
                   `notstart` - Poll not started  
                   `started` - Poll started  
                   `ended` - Poll ended  
                   `sharing` - Sharing poll results
                type: string
                example: notstart
                extensions:
                  x-enum-descriptions:
                    - Poll not start
                    - Poll started
                    - Poll ended
                    - Poll is sharing
                enum:
                  - notstart
                  - started
                  - ended
                  - sharing
    MeetingsBatchRegistrantsCreateResponse:
      type: object
      properties:
        registrants:
          type: array
          items:
            type: object
            properties:
              email:
                description: Email address of the registrant.
                type: string
                example: jchill@example.com
              join_url:
                description: Unique URL using which registrant can join the meeting.
                type: string
                example: https://example.com/j/11111
              registrant_id:
                description: Unique identifier of the registrant.
                type: string
                example: 9tboDiHUQAeOnbmudzWa5g
              participant_pin_code:
                description: >-
                  The participant PIN code is used to authenticate audio
                  participants before they join the meeting.
                type: integer
                format: int64
                example: 380303
    MeetingsGetInvitationNoteResponse:
      title: Meeting Invitation
      description: Meeting invitation details.
      type: object
      properties:
        invitation:
          description: Meeting invitation.
          type: string
          example: "Jill Chill is inviting you to a scheduled Zoom meeting.\r\n\r\nTopic: My Meeting\r\nTime: Mar 25, 2022 03:32 PM America, Los_Angeles\r\n\r\nJoin Zoom Meeting\r\nhttps://zoom.us/j/55544443210?pwd=8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1\r\n\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\nOne tap mobile\r\n+5678901234,,55544443210#,,,,*123456# US (gg)\r\n\r\nDial by your location\r\n+1 15550100 US (gg)\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\nFind your local number: https://zoom.us/u/ab12cdef34jh\r\n\r\nJoin by SIP\r\n5550100@zoomcrc.com\r\n\r\nJoin by H.323\r\n192.0.2.1 (US West)\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\n\r\n"
        sip_links:
          description: A list of SIP phone addresses.
          type: array
          items:
            type: string
            example: 5550100@zoomcrc.com
    MeetingsCreateInviteLinksResponse:
      title: Invite Links
      description: Invite links response.
      type: object
      properties:
        attendees:
          description: The attendee list.
          type: array
          items:
            type: object
            properties:
              join_url:
                description: The URL to join the meeting.
                type: string
                example: https://example.com/j/11111
              name:
                description: The user's display name.
                type: string
                example: Jill Chill
    MeetingsGetJoinTokenResponse:
      description: Information about the meeting's join token.
      type: object
      properties:
        expire_in:
          description: >-
            The number of seconds the join token is valid for before it expires.
            This value always returns `120`.
          type: integer
          format: int64
          example: 120
          enum:
            - 120
        token:
          description: The join token.
          type: string
          example: 2njt50mj
    MeetingsGetMeetingArchiveTokenForLocalArchivingResponse:
      description: Information about the meeting's local archive token.
      type: object
      properties:
        expire_in:
          description: >-
            The number of seconds the archive token is valid for before it
            expires. This value always returns `120`.
          type: integer
          format: int64
          example: 120
          enum:
            - 120
        token:
          description: The archive token.
          type: string
          example: 2njt50mj
    MeetingsGetJoinTokenLocalRecordingResponse:
      description: Information about the meeting's local recorder join token.
      type: object
      properties:
        expire_in:
          description: >-
            The number of seconds the join token is valid for before it expires.
            This value always returns `120`.
          type: integer
          format: int64
          example: 120
          enum:
            - 120
        token:
          description: The join token.
          type: string
          example: 2njt50mj
    MeetingsGetLivestreamDetailsResponse:
      type: object
      properties:
        page_url:
          description: >-
            Live streaming page URL. This is the URL using which anyone can view
            the livestream of the meeting.
          type: string
          example: https://example.com/livestream/123
        stream_key:
          description: Stream Key.
          type: string
          example: contact-ic@example.com
        stream_url:
          description: Stream URL.
          type: string
          example: https://example.com/livestream
        resolution:
          description: >-
            The number of pixels in each dimension that the video camera can
            display.
          type: string
          example: 720p
    MeetingsGetMeetingSummaryResponse:
      type: object
      properties:
        meeting_host_id:
          description: The ID of the user who is set as the meeting host.
          type: string
          example: 30R7kT7bTIKSNUFEuH_Qlg
        meeting_host_email:
          description: The meeting host's email address.
          type: string
          format: email
          example: jchill@example.com
        meeting_uuid:
          description: >
            The unique meeting ID. 


            Each meeting instance generates its own meeting UUID. After a
            meeting ends, a new UUID is generated for the next instance of the
            meeting.

             Use the [**List past meeting instances**](/docs/api-reference/zoom-api/methods#operation/pastMeetings) API to retrieve a list of UUIDs from past meeting instances. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it.
          type: string
          example: aDYlohsHRtCd4ii1uC2+hA==
        meeting_id:
          description: >-
            [ The meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) 

            The meeting's unique identifier in **long** format, represented as
            int64 data type in JSON. Also known as the meeting number.
          type: integer
          format: int64
          example: 97763643886
        meeting_topic:
          description: The meeting topic.
          type: string
          example: My Meeting
        meeting_start_time:
          description: The meeting's start date and time.
          type: string
          format: date-time
          example: '2019-07-15T23:24:52Z'
        meeting_end_time:
          description: The meeting's end date and time.
          type: string
          format: date-time
          example: '2020-07-15T23:30:19Z'
        summary_start_time:
          description: The summary's start date and time.
          type: string
          format: date-time
          example: '2019-07-15T23:24:52Z'
        summary_end_time:
          description: The summary's end date and time.
          type: string
          format: date-time
          example: '2020-07-15T23:30:19Z'
        summary_created_time:
          description: The date and time when the meeting summary was created.
          type: string
          format: date-time
          example: '2019-07-15T23:24:52Z'
        summary_last_modified_time:
          description: The date and time when the meeting summary was last modified.
          type: string
          format: date-time
          example: '2020-07-15T23:30:19Z'
        summary_title:
          description: The summary title.
          type: string
          example: Meeting summary for my meeting
        summary_overview:
          description: The summary overview.
          type: string
          example: Meeting overview
        summary_details:
          description: The summary content details.
          type: array
          items:
            description: The summary detail object.
            type: object
            properties:
              summary:
                description: The summary content.
                type: string
                example: Meeting overview
              label:
                description: The summary label.
                type: string
                example: Meeting overview
        next_steps:
          description: The next steps.
          type: array
          items:
            description: The next step.
            type: string
            example: step1
        edited_summary:
          type: object
          properties:
            summary_details:
              description: The user edited summary details.
              type: string
              example: Meeting overview
            next_steps:
              description: The user edited next steps.
              type: array
              items:
                description: The user edited next step.
                type: string
                example: step1
    MeetingsListMeetingPollsResponse:
      title: Poll List
      description: Poll List
      type: object
      properties:
        polls:
          description: Array of Polls
          type: array
          items:
            title: Meeting and Webinar Polling Object
            description: Information about meeting and webinar polling.
            type: object
            properties:
              title:
                description: The poll's title, up to 64 characters.
                maxLength: 64
                type: string
                example: Learn something new
              id:
                description: ID of Poll
                type: string
                example: QalIoKWLTJehBJ8e1xRrbQ
              status:
                description: |-
                  Status of Poll:  
                   `notstart` - Poll not started  
                   `started` - Poll started  
                   `ended` - Poll ended  
                   `sharing` - Sharing poll results
                type: string
                example: notstart
                extensions:
                  x-enum-descriptions:
                    - Poll not start
                    - Poll started
                    - Poll ended
                    - Poll is sharing
                enum:
                  - notstart
                  - started
                  - ended
                  - sharing
              anonymous:
                description: >-
                  Allow meeting participants to answer poll questions
                  anonymously. 


                  This value defaults to `false`.
                type: boolean
                example: true
                default: false
              poll_type:
                description: >-
                  The type of poll: 

                  * `1` &mdash; Poll. 

                  * `2` &mdash; Advanced Poll. This feature must be enabled in
                  your Zoom account. 

                  * `3` &mdash; Quiz. This feature must be enabled in your Zoom
                  account. 

                   This value defaults to `1`.
                type: integer
                example: 2
                enum:
                  - 1
                  - 2
                  - 3
              questions:
                description: Information about the poll's questions.
                type: array
                items:
                  type: object
                  properties:
                    answer_max_character:
                      description: >-
                        The allowed maximum number of characters. This field
                        only applies to `short_answer` and `long_answer` polls: 

                        * For `short_answer` polls, a maximum of 500
                        characters. 

                        * For `long_answer` polls, a maximum of 2,000
                        characters.
                      type: integer
                      example: 200
                    answer_min_character:
                      description: >-
                        The allowed minimum number of characters. This field
                        only applies to `short_answer` and `long_answer` polls.
                        You must provide at least a **one** character minimum
                        value.
                      minimum: 1
                      type: integer
                      example: 1
                    answer_required:
                      description: >-
                        Whether participants must answer the question: 

                        * `true` &mdash; The participant must answer the
                        question. 

                        * `false` &mdash; The participant does not need to
                        answer the question. 


                        **Note:** 

                        * When the poll's `type` value is `1` (Poll), this value
                        defaults to `true`. 

                        * When the poll's `type` value is the `2` (Advanced
                        Poll) or `3` (Quiz) values, this value defaults to
                        `false`.
                      type: boolean
                      example: false
                      default: false
                    answers:
                      description: >-
                        The poll question's available answers. This field
                        requires a **minimum** of two answers. 


                        * For `single` and `multiple` polls, you can only
                        provide a maximum of 10 answers. 

                        * For `matching` polls, you can only provide a maximum
                        of 16 answers. 

                        * For `rank_order` polls, you can only provide a maximum
                        of seven answers.
                      minItems: 2
                      type: array
                      items:
                        type: string
                        example: Extremely useful
                    case_sensitive:
                      description: >-
                        Whether the correct answer is case sensitive. This field
                        only applies to `fill_in_the_blank` polls: 

                        * `true` &mdash; The answer is case-sensitive. 

                        * `false` &mdash; The answer is not case-sensitive. 


                        This value defaults to `false`.
                      type: boolean
                      example: false
                      default: false
                    name:
                      description: >-
                        The poll question, up to 255 characters. 


                        For `fill_in_the_blank` polls, this field is the poll's
                        question. For each value that the user must fill in,
                        ensure that there are the same number of `right_answers`
                        values.
                      maxLength: 255
                      type: string
                      example: How useful was this meeting?
                    prompts:
                      description: >-
                        Information about the prompt questions. This field only
                        applies to `matching` and `rank_order` polls. You
                        **must** provide a minimum of two prompts, up to a
                        maximum of 10 prompts.
                      type: array
                      items:
                        type: object
                        properties:
                          prompt_question:
                            description: The question prompt's title.
                            type: string
                            example: How are you?
                          prompt_right_answers:
                            description: >-
                              The question prompt's correct answers: 

                              * For `matching` polls, you must provide a minimum
                              of two correct answers, up to a maximum of 10
                              correct answers. 

                              * For `rank_order` polls, you can only provide one
                              correct answer.
                            type: array
                            items:
                              type: string
                              example: Good
                    rating_max_label:
                      description: >-
                        The high score label used for the `rating_max_value`
                        field. 


                        This field only applies to the `rating_scale` poll.
                      type: string
                      example: Extremely Likely
                    rating_max_value:
                      description: >-
                        The rating scale's maximum value, up to a maximum value
                        of 10. 


                        This field only applies to the `rating_scale` poll.
                      maximum: 10
                      type: integer
                      example: 4
                    rating_min_label:
                      description: >-
                        The low score label used for the `rating_min_value`
                        field. 


                        This field only applies to the `rating_scale` poll.
                      type: string
                      example: Not likely
                    rating_min_value:
                      description: >-
                        The rating scale's minimum value. This value cannot be
                        less than zero. 


                        This field only applies to the `rating_scale` poll.
                      minimum: 0
                      type: integer
                      example: 0
                    right_answers:
                      description: >-
                        The poll question's correct answer(s). This field is
                        **required** if the poll's `type` value is `3` (Quiz). 

                         For `single` and `matching` polls, this field only accepts one answer.
                      minItems: 1
                      type: array
                      items:
                        type: string
                        example: Good
                    show_as_dropdown:
                      description: >-
                        Whether to display the radio selection as a drop-down
                        box: 

                        * `true` &mdash; Show as a drop-down box. 

                        * `false` &mdash; Do not show as a drop-down box. 


                        This value defaults to `false`.
                      type: boolean
                      example: false
                      default: false
                    type:
                      description: |-
                        The poll's question and answer type: 
                        * `single` &mdash; Single choice. 
                        * `multiple` &mdash; Multiple choice. 
                        * `matching` &mdash; Matching. 
                        * `rank_order` &mdash; Rank order. 
                        * `short_answer` &mdash; Short answer. 
                        * `long_answer` &mdash; Long answer. 
                        * `fill_in_the_blank` &mdash; Fill in the blank. 
                        * `rating_scale` &mdash; Rating scale.
                      type: string
                      example: single
                      extensions:
                        x-enum-descriptions:
                          - Single choice
                          - Multiple choice
                          - Matching
                          - Rank order
                          - Short answer
                          - Long answer
                          - Fill in the blank
                          - Rating scale
                      enum:
                        - single
                        - multiple
                        - matching
                        - rank_order
                        - short_answer
                        - long_answer
                        - fill_in_the_blank
                        - rating_scale
        total_records:
          description: The number of all records available across pages
          type: integer
          example: 1
    MeetingsCreatePollResponse:
      title: Meeting and Webinar Polling Object
      description: Information about meeting and webinar polling.
      type: object
      properties:
        title:
          description: The poll's title, up to 64 characters.
          maxLength: 64
          type: string
          example: Learn something new
        id:
          description: Meeting Poll ID
          type: string
          example: QalIoKWLTJehBJ8e1xRrbQ
        status:
          description: |-
            Status of the Meeting Poll:  
             `notstart` - Poll not started  
             `started` - Poll started  
             `ended` - Poll ended  
             `sharing` - Sharing poll results
          type: string
          example: notstart
          extensions:
            x-enum-descriptions:
              - Poll not start
              - Poll started
              - Poll ended
              - Poll is sharing
          enum:
            - notstart
            - started
            - ended
            - sharing
        anonymous:
          description: |-
            Allow meeting participants to answer poll questions anonymously. 

            This value defaults to `false`.
          type: boolean
          example: true
          default: false
        poll_type:
          description: >-
            The type of poll: 

            * `1` &mdash; Poll. 

            * `2` &mdash; Advanced Poll. This feature must be enabled in your
            Zoom account. 

            * `3` &mdash; Quiz. This feature must be enabled in your Zoom
            account. 

             This value defaults to `1`.
          type: integer
          example: 2
          enum:
            - 1
            - 2
            - 3
        questions:
          description: Information about the poll's questions.
          type: array
          items:
            type: object
            properties:
              answer_max_character:
                description: >-
                  The allowed maximum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls: 

                  * For `short_answer` polls, a maximum of 500 characters. 

                  * For `long_answer` polls, a maximum of 2,000 characters.
                type: integer
                example: 200
              answer_min_character:
                description: >-
                  The allowed minimum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls. You must
                  provide at least a **one** character minimum value.
                minimum: 1
                type: integer
                example: 1
              answer_required:
                description: >-
                  Whether participants must answer the question: 

                  * `true` &mdash; The participant must answer the question. 

                  * `false` &mdash; The participant does not need to answer the
                  question. 


                  **Note:** 

                  * When the poll's `type` value is `1` (Poll), this value
                  defaults to `true`. 

                  * When the poll's `type` value is the `2` (Advanced Poll) or
                  `3` (Quiz) values, this value defaults to `false`.
                type: boolean
                example: false
                default: false
              answers:
                description: >-
                  The poll question's available answers. This field requires a
                  **minimum** of two answers. 


                  * For `single` and `multiple` polls, you can only provide a
                  maximum of 10 answers. 

                  * For `matching` polls, you can only provide a maximum of 16
                  answers. 

                  * For `rank_order` polls, you can only provide a maximum of
                  seven answers.
                minItems: 2
                type: array
                items:
                  type: string
                  example: Extremely useful
              case_sensitive:
                description: >-
                  Whether the correct answer is case sensitive. This field only
                  applies to `fill_in_the_blank` polls: 

                  * `true` &mdash; The answer is case-sensitive. 

                  * `false` &mdash; The answer is not case-sensitive. 


                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              name:
                description: >-
                  The poll question, up to 255 characters. 


                  For `fill_in_the_blank` polls, this field is the poll's
                  question. For each value that the user must fill in, ensure
                  that there are the same number of `right_answers` values.
                maxLength: 255
                type: string
                example: How useful was this meeting?
              prompts:
                description: >-
                  Information about the prompt questions. This field only
                  applies to `matching` and `rank_order` polls. You **must**
                  provide a minimum of two prompts, up to a maximum of 10
                  prompts.
                type: array
                items:
                  type: object
                  properties:
                    prompt_question:
                      description: The question prompt's title.
                      type: string
                      example: How are you?
                    prompt_right_answers:
                      description: >-
                        The question prompt's correct answers: 

                        * For `matching` polls, you must provide a minimum of
                        two correct answers, up to a maximum of 10 correct
                        answers. 

                        * For `rank_order` polls, you can only provide one
                        correct answer.
                      type: array
                      items:
                        type: string
                        example: Good
              rating_max_label:
                description: |-
                  The high score label used for the `rating_max_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Extremely Likely
              rating_max_value:
                description: >-
                  The rating scale's maximum value, up to a maximum value of
                  10. 


                  This field only applies to the `rating_scale` poll.
                maximum: 10
                type: integer
                example: 4
              rating_min_label:
                description: |-
                  The low score label used for the `rating_min_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Not likely
              rating_min_value:
                description: >-
                  The rating scale's minimum value. This value cannot be less
                  than zero. 


                  This field only applies to the `rating_scale` poll.
                minimum: 0
                type: integer
                example: 0
              right_answers:
                description: >-
                  The poll question's correct answer(s). This field is
                  **required** if the poll's `type` value is `3` (Quiz). 

                   For `single` and `matching` polls, this field only accepts one answer.
                minItems: 1
                type: array
                items:
                  type: string
                  example: Good
              show_as_dropdown:
                description: |-
                  Whether to display the radio selection as a drop-down box: 
                  * `true` &mdash; Show as a drop-down box. 
                  * `false` &mdash; Do not show as a drop-down box. 

                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              type:
                description: |-
                  The poll's question and answer type: 
                  * `single` &mdash; Single choice. 
                  * `multiple` &mdash; Multiple choice. 
                  * `matching` &mdash; Matching. 
                  * `rank_order` &mdash; Rank order. 
                  * `short_answer` &mdash; Short answer. 
                  * `long_answer` &mdash; Long answer. 
                  * `fill_in_the_blank` &mdash; Fill in the blank. 
                  * `rating_scale` &mdash; Rating scale.
                type: string
                example: single
                extensions:
                  x-enum-descriptions:
                    - Single choice
                    - Multiple choice
                    - Matching
                    - Rank order
                    - Short answer
                    - Long answer
                    - Fill in the blank
                    - Rating scale
                enum:
                  - single
                  - multiple
                  - matching
                  - rank_order
                  - short_answer
                  - long_answer
                  - fill_in_the_blank
                  - rating_scale
    MeetingsGetPollResponse:
      title: Meeting and Webinar Polling Object
      description: Information about meeting and webinar polling.
      type: object
      properties:
        title:
          description: The poll's title, up to 64 characters.
          maxLength: 64
          type: string
          example: Learn something new
        id:
          description: Meeting Poll ID
          type: string
          example: QalIoKWLTJehBJ8e1xRrbQ
        status:
          description: |-
            Status of the Meeting Poll:  
             `notstart` - Poll not started  
             `started` - Poll started  
             `ended` - Poll ended  
             `sharing` - Sharing poll results
          type: string
          example: notstart
          extensions:
            x-enum-descriptions:
              - Poll not start
              - Poll started
              - Poll ended
              - Poll is sharing
          enum:
            - notstart
            - started
            - ended
            - sharing
        anonymous:
          description: |-
            Allow meeting participants to answer poll questions anonymously. 

            This value defaults to `false`.
          type: boolean
          example: true
          default: false
        poll_type:
          description: >-
            The type of poll: 

            * `1` &mdash; Poll. 

            * `2` &mdash; Advanced Poll. This feature must be enabled in your
            Zoom account. 

            * `3` &mdash; Quiz. This feature must be enabled in your Zoom
            account. 

             This value defaults to `1`.
          type: integer
          example: 2
          enum:
            - 1
            - 2
            - 3
        questions:
          description: Information about the poll's questions.
          type: array
          items:
            type: object
            properties:
              answer_max_character:
                description: >-
                  The allowed maximum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls: 

                  * For `short_answer` polls, a maximum of 500 characters. 

                  * For `long_answer` polls, a maximum of 2,000 characters.
                type: integer
                example: 200
              answer_min_character:
                description: >-
                  The allowed minimum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls. You must
                  provide at least a **one** character minimum value.
                minimum: 1
                type: integer
                example: 1
              answer_required:
                description: >-
                  Whether participants must answer the question: 

                  * `true` &mdash; The participant must answer the question. 

                  * `false` &mdash; The participant does not need to answer the
                  question. 


                  **Note:** 

                  * When the poll's `type` value is `1` (Poll), this value
                  defaults to `true`. 

                  * When the poll's `type` value is the `2` (Advanced Poll) or
                  `3` (Quiz) values, this value defaults to `false`.
                type: boolean
                example: false
                default: false
              answers:
                description: >-
                  The poll question's available answers. This field requires a
                  **minimum** of two answers. 


                  * For `single` and `multiple` polls, you can only provide a
                  maximum of 10 answers. 

                  * For `matching` polls, you can only provide a maximum of 16
                  answers. 

                  * For `rank_order` polls, you can only provide a maximum of
                  seven answers.
                minItems: 2
                type: array
                items:
                  type: string
                  example: Extremely useful
              case_sensitive:
                description: >-
                  Whether the correct answer is case sensitive. This field only
                  applies to `fill_in_the_blank` polls: 

                  * `true` &mdash; The answer is case-sensitive. 

                  * `false` &mdash; The answer is not case-sensitive. 


                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              name:
                description: >-
                  The poll question, up to 255 characters. 


                  For `fill_in_the_blank` polls, this field is the poll's
                  question. For each value that the user must fill in, ensure
                  that there are the same number of `right_answers` values.
                maxLength: 255
                type: string
                example: How useful was this meeting?
              prompts:
                description: >-
                  Information about the prompt questions. This field only
                  applies to `matching` and `rank_order` polls. You **must**
                  provide a minimum of two prompts, up to a maximum of 10
                  prompts.
                type: array
                items:
                  type: object
                  properties:
                    prompt_question:
                      description: The question prompt's title.
                      type: string
                      example: How are you?
                    prompt_right_answers:
                      description: >-
                        The question prompt's correct answers: 

                        * For `matching` polls, you must provide a minimum of
                        two correct answers, up to a maximum of 10 correct
                        answers. 

                        * For `rank_order` polls, you can only provide one
                        correct answer.
                      type: array
                      items:
                        type: string
                        example: Good
              rating_max_label:
                description: |-
                  The high score label used for the `rating_max_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Extremely Likely
              rating_max_value:
                description: >-
                  The rating scale's maximum value, up to a maximum value of
                  10. 


                  This field only applies to the `rating_scale` poll.
                maximum: 10
                type: integer
                example: 4
              rating_min_label:
                description: |-
                  The low score label used for the `rating_min_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Not likely
              rating_min_value:
                description: >-
                  The rating scale's minimum value. This value cannot be less
                  than zero. 


                  This field only applies to the `rating_scale` poll.
                minimum: 0
                type: integer
                example: 0
              right_answers:
                description: >-
                  The poll question's correct answer(s). This field is
                  **required** if the poll's `type` value is `3` (Quiz). 

                   For `single` and `matching` polls, this field only accepts one answer.
                minItems: 1
                type: array
                items:
                  type: string
                  example: Good
              show_as_dropdown:
                description: |-
                  Whether to display the radio selection as a drop-down box: 
                  * `true` &mdash; Show as a drop-down box. 
                  * `false` &mdash; Do not show as a drop-down box. 

                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              type:
                description: |-
                  The poll's question and answer type: 
                  * `single` &mdash; Single choice. 
                  * `multiple` &mdash; Multiple choice. 
                  * `matching` &mdash; Matching. 
                  * `rank_order` &mdash; Rank order. 
                  * `short_answer` &mdash; Short answer. 
                  * `long_answer` &mdash; Long answer. 
                  * `fill_in_the_blank` &mdash; Fill in the blank. 
                  * `rating_scale` &mdash; Rating scale.
                type: string
                example: single
                extensions:
                  x-enum-descriptions:
                    - Single choice
                    - Multiple choice
                    - Matching
                    - Rank order
                    - Short answer
                    - Long answer
                    - Fill in the blank
                    - Rating scale
                enum:
                  - single
                  - multiple
                  - matching
                  - rank_order
                  - short_answer
                  - long_answer
                  - fill_in_the_blank
                  - rating_scale
    MeetingsListRegistrantsResponse:
      title: Registration List
      description: List of users.
      type: object
      properties:
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: w7587w4eiyfsudgf
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_number:
          description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          type: integer
          example: 1
          deprecated: true
          default: 1
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 20
        registrants:
          description: List of registrant objects.
          type: array
          items:
            description: ' Registrant.'
            type: object
            properties:
              id:
                description: Registrant ID.
                type: string
                example: 9tboDiHUQAeOnbmudzWa5g
              address:
                description: The registrant's address.
                type: string
                example: 1800 Amphibious Blvd.
              city:
                description: The registrant's city.
                type: string
                example: Mountain View
              comments:
                description: The registrant's questions and comments.
                type: string
                example: Looking forward to the discussion.
              country:
                description: >-
                  The registrant's two-letter [country
                  code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
                type: string
                example: US
              custom_questions:
                description: Information about custom questions.
                type: array
                items:
                  description: Information about custom questions.
                  type: object
                  properties:
                    title:
                      description: The title of the custom question.
                      type: string
                      example: What do you hope to learn from this?
                    value:
                      description: >-
                        The custom question's response value. This has a limit
                        of 128 characters.
                      maxLength: 128
                      type: string
                      example: >-
                        Look forward to learning how you come up with new
                        recipes and what other services you offer.
              email:
                description: >-
                  The registrant's email address. See [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for return value details.
                maxLength: 128
                type: string
                format: email
                example: jchill@example.com
              first_name:
                description: The registrant's first name.
                maxLength: 64
                type: string
                example: Jill
              industry:
                description: The registrant's industry.
                type: string
                example: Food
              job_title:
                description: The registrant's job title.
                type: string
                example: Chef
              last_name:
                description: The registrant's last name.
                maxLength: 64
                type: string
                example: Chill
              no_of_employees:
                description: |-
                  The registrant's number of employees. 
                  * `1-20` 
                  * `21-50` 
                  * `51-100` 
                  * `101-250` 
                  * `251-500` 
                  * `501-1,000` 
                  * `1,001-5,000` 
                  * `5,001-10,000` 
                  * `More than 10,000`
                type: string
                example: 1-20
                enum:
                  - ''
                  - 1-20
                  - 21-50
                  - 51-100
                  - 101-250
                  - 251-500
                  - 501-1,000
                  - 1,001-5,000
                  - 5,001-10,000
                  - More than 10,000
              org:
                description: The registrant's organization.
                type: string
                example: Cooking Org
              phone:
                description: The registrant's phone number.
                type: string
                example: '5550100'
              purchasing_time_frame:
                description: |-
                  The registrant's purchasing time frame. 
                  * `Within a month` 
                  * `1-3 months` 
                  * `4-6 months` 
                  * `More than 6 months` 
                  * `No timeframe`
                type: string
                example: 1-3 months
                enum:
                  - ''
                  - Within a month
                  - 1-3 months
                  - 4-6 months
                  - More than 6 months
                  - No timeframe
              role_in_purchase_process:
                description: |-
                  The registrant's role in the purchase process. 
                  * `Decision Maker` 
                  * `Evaluator/Recommender` 
                  * `Influencer` 
                  * `Not involved`
                type: string
                example: Influencer
                enum:
                  - ''
                  - Decision Maker
                  - Evaluator/Recommender
                  - Influencer
                  - Not involved
              state:
                description: The registrant's state or province.
                type: string
                example: CA
              status:
                description: |-
                  The status of the registrant's registration.   
                    `approved`: User has been successfully approved for the webinar.  
                    `pending`:  The registration is still pending.  
                    `denied`: User has been denied from joining the webinar.
                type: string
                example: approved
                enum:
                  - approved
                  - denied
                  - pending
              zip:
                description: The registrant's ZIP or postal code.
                type: string
                example: '94045'
              create_time:
                description: The time at which the registrant registered.
                type: string
                format: date-time
                example: '2022-03-22T05:59:09Z'
              join_url:
                description: >-
                  The URL using which an approved registrant can join the
                  meeting or webinar.
                type: string
                format: string
                example: https://example.com/j/11111
              participant_pin_code:
                description: >-
                  The participant PIN code is used to authenticate audio
                  participants before they join the meeting.
                type: integer
                format: int64
                example: 380303
            required:
              - email
              - first_name
    MeetingsAddRegistrantResponse:
      type: object
      properties:
        id:
          description: The meeting ID.
          type: integer
          format: int64
          example: 85746065
        join_url:
          description: >-
            The URL the registrant can use to join the meeting. 


            The API will not return this field if the meeting was
            [created](/docs/api-reference/zoom-api/methods#operation/meetingCreate)
            with the `approval_type` field value of `1` (manual approval).
          type: string
          example: https://example.com/j/11111
        registrant_id:
          description: The registrant's ID.
          type: string
          example: fdgsfh2ey82fuh
        start_time:
          description: The meeting's start time.
          type: string
          format: date-time
          example: '2021-07-13T21:44:51Z'
        topic:
          description: The meeting's topic.
          maxLength: 200
          type: string
          example: My Meeting
        occurrences:
          description: Array of occurrence objects.
          type: array
          items:
            description: >-
              Occurrence object. This object is only returned for Recurring
              Webinars.
            type: object
            properties:
              duration:
                description: Duration.
                type: integer
                example: 60
              occurrence_id:
                description: >-
                  Occurrence ID: Unique Identifier that identifies an occurrence
                  of a recurring webinar. [Recurring
                  webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                  can have a maximum of 50 occurrences.
                type: string
                example: '1648194360000'
              start_time:
                description: Start time.
                type: string
                format: date-time
                example: '2022-03-25T07:46:00Z'
              status:
                description: Occurrence status.
                type: string
                example: available
        participant_pin_code:
          description: >-
            The participant PIN code is used to authenticate audio participants
            before they join the meeting.
          type: integer
          format: int64
          example: 380303
    MeetingsListRegistrationQuestionsResponse:
      title: Meeting Registrant Questions
      description: Meeting Registrant Questions
      type: object
      properties:
        custom_questions:
          description: Array of Registrant Custom Questions
          type: array
          items:
            type: object
            properties:
              title:
                description: Title of the custom question.
                type: string
                example: How are you?
              answers:
                description: >-
                  Answer choices for the question. Can not be used for `short`
                  question type as this type of question requires registrants to
                  type out the answer.
                type: array
                items:
                  type: string
                  example: Good
              required:
                description: >-
                  Indicates whether or not the custom question is required to be
                  answered by participants or not.
                type: boolean
                example: true
              type:
                description: Type of the question being asked.
                type: string
                example: short
                extensions:
                  x-enum-descriptions:
                    - Short Answer
                    - Single Answer
                enum:
                  - short
                  - single
        questions:
          description: Array of Registrant Questions
          type: array
          items:
            type: object
            properties:
              field_name:
                description: Field name of the question.
                type: string
                example: last_name
                enum:
                  - last_name
                  - address
                  - city
                  - country
                  - zip
                  - state
                  - phone
                  - industry
                  - org
                  - job_title
                  - purchasing_time_frame
                  - role_in_purchase_process
                  - no_of_employees
                  - comments
              required:
                description: >-
                  Indicates whether or not the displayed fields are required to
                  be filled out by registrants.
                type: boolean
                example: true
    MeetingsGetRegistrantDetailsResponse:
      title: Meeting Registrant
      description: ' Registrant.'
      type: object
      properties:
        id:
          type: string
          example: 9tboDiHUQAeOnbmudzWa5g
        address:
          description: The registrant's address.
          type: string
          example: 1800 Amphibious Blvd.
        city:
          description: The registrant's city.
          type: string
          example: Mountain View
        comments:
          description: The registrant's questions and comments.
          type: string
          example: Looking forward to the discussion.
        country:
          description: >-
            The registrant's two-letter [country
            code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
          type: string
          example: US
        custom_questions:
          description: Information about custom questions.
          type: array
          items:
            description: Information about custom questions.
            type: object
            properties:
              title:
                description: The title of the custom question.
                type: string
                example: What do you hope to learn from this?
              value:
                description: >-
                  The custom question's response value. This has a limit of 128
                  characters.
                maxLength: 128
                type: string
                example: >-
                  Look forward to learning how you come up with new recipes and
                  what other services you offer.
        email:
          description: >-
            The registrant's email address. See [Email address display
            rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
            for return value details.
          maxLength: 128
          type: string
          format: email
          example: jchill@example.com
        first_name:
          description: The registrant's first name.
          maxLength: 64
          type: string
          example: Jill
        industry:
          description: The registrant's industry.
          type: string
          example: Food
        job_title:
          description: The registrant's job title.
          type: string
          example: Chef
        last_name:
          description: The registrant's last name.
          maxLength: 64
          type: string
          example: Chill
        no_of_employees:
          description: |-
            The registrant's number of employees. 
            * `1-20` 
            * `21-50` 
            * `51-100` 
            * `101-250` 
            * `251-500` 
            * `501-1,000` 
            * `1,001-5,000` 
            * `5,001-10,000` 
            * `More than 10,000`
          type: string
          example: 1-20
          enum:
            - ''
            - 1-20
            - 21-50
            - 51-100
            - 101-250
            - 251-500
            - 501-1,000
            - 1,001-5,000
            - 5,001-10,000
            - More than 10,000
        org:
          description: The registrant's organization.
          type: string
          example: Cooking Org
        phone:
          description: The registrant's phone number.
          type: string
          example: '5550100'
        purchasing_time_frame:
          description: |-
            The registrant's purchasing time frame. 
            * `Within a month` 
            * `1-3 months` 
            * `4-6 months` 
            * `More than 6 months` 
            * `No timeframe`
          type: string
          example: 1-3 months
          enum:
            - ''
            - Within a month
            - 1-3 months
            - 4-6 months
            - More than 6 months
            - No timeframe
        role_in_purchase_process:
          description: |-
            The registrant's role in the purchase process. 
            * `Decision Maker` 
            * `Evaluator/Recommender` 
            * `Influencer` 
            * `Not involved`
          type: string
          example: Influencer
          enum:
            - ''
            - Decision Maker
            - Evaluator/Recommender
            - Influencer
            - Not involved
        state:
          description: The registrant's state or province.
          type: string
          example: CA
        status:
          description: |-
            The registrant's registration status.
            * `approved` - The registrant is approved to join the meeting. 
            * `pending` - The registrant's registration is pending.
            * `denied` - The registrant was declined to join the meeting.
          type: string
          example: approved
          enum:
            - approved
            - denied
            - pending
        zip:
          description: The registrant's ZIP or postal code.
          type: string
          example: '94045'
        create_time:
          description: The registrant's registration date and time.
          type: string
          format: date-time
          example: '2022-03-22T05:58:44Z'
        join_url:
          description: The URL with which the approved registrant can join the meeting.
          type: string
          format: url
          example: https://example.com/j/11111
        participant_pin_code:
          description: >-
            The participant PIN code is used to authenticate audio participants
            before they join the meeting.
          type: integer
          format: int64
          example: 380303
      required:
        - email
        - first_name
    MeetingsGetSipUriWithPasscodeResponse:
      description: Information about the meeting's encoded SIP URI.
      type: object
      properties:
        sip_dialing:
          description: The meeting's encoded SIP URI.
          type: string
          example: 9678722567.xxxx....30qonrvgy@zoomcrc.com
        paid_crc_plan_participant:
          description: Whether the API caller has a CRC (Conference Room Connector) plan.
          type: boolean
          example: true
        participant_identifier_code:
          description: >-
            This value identifies the meeting participant. It is automatically
            embedded in the SIP URI if the API caller has a CRC (Conference Room
            Connector) plan.
          type: string
          example: 30qonrvgy
        expire_in:
          description: >-
            The number of seconds the encoded SIP URI is valid before it
            expires.
          type: integer
          format: int64
          example: 7200
    MeetingsGetMeetingSurveyResponse:
      title: Meeting Survey Object
      description: Information about the meeting survey.
      type: object
      properties:
        custom_survey:
          description: Information about the customized meeting survey.
          type: object
          properties:
            title:
              description: The survey's title, up to 64 characters.
              maxLength: 64
              type: string
              example: Learn something new
            anonymous:
              description: |-
                Allow participants to anonymously answer survey questions. 

                 This value defaults to `true`.
              type: boolean
              example: false
              default: false
            numbered_questions:
              description: |-
                Whether to display the number in the question name. 

                 This value defaults to `true`.
              type: boolean
              example: false
              default: false
            show_question_type:
              description: |-
                Whether to display the question type in the question name. 

                 This value defaults to `false`.
              type: boolean
              example: false
              default: false
            feedback:
              description: |-
                The survey's feedback, up to 320 characters. 

                 This value defaults to `Thank you so much for taking the time to complete the survey. Your feedback really makes a difference.`.
              maxLength: 320
              type: string
              example: >-
                Thank you so much for taking the time to complete the survey.
                Your feedback really makes a difference.
            questions:
              description: Information about the meeting survey's questions.
              maxItems: 100
              minItems: 1
              type: array
              items:
                type: object
                properties:
                  name:
                    description: The survey question, up to 420 characters.
                    type: string
                    example: How useful was this meeting?
                  type:
                    description: |-
                      The survey's question and answer type. 
                      * `single` - Single choice. 
                      * `multiple` - Multiple choice. 
                      * `matching` - Matching. 
                      * `rank_order` - Rank order 
                      * `short_answer` - Short answer 
                      * `long_answer` - Long answer. 
                      * `fill_in_the_blank` - Fill in the blank 
                      * `rating_scale` - Rating scale.
                    type: string
                    example: single
                    extensions:
                      x-enum-descriptions:
                        - Single choice
                        - Multiple choice
                        - Matching
                        - Rank order
                        - Short answer
                        - Long answer
                        - Fill in the blank
                        - Rating scale
                    enum:
                      - single
                      - multiple
                      - matching
                      - rank_order
                      - short_answer
                      - long_answer
                      - fill_in_the_blank
                      - rating_scale
                  answer_required:
                    description: >-
                      Whether participants must answer the question. 

                      * `true` - The participant must answer the question. 

                      * `false` - The participant does not need to answer the
                      question. 

                       This value defaults to `false`.
                    type: boolean
                    example: false
                    default: false
                  show_as_dropdown:
                    description: >-
                      Whether to display the radio selection as a drop-down
                      box. 

                      * `true` - Show as a drop-down box. 

                      * `false` - Do not show as a drop-down box. 

                       This value defaults to `false`.
                    type: boolean
                    example: false
                    default: false
                  answers:
                    description: >-
                      The survey question's available answers. This field
                      requires a **minimum** of two answers. 


                      * For `single` and `multiple` questions, you can only
                      provide a maximum of 50 answers. 

                      * For `matching` polls, you can only provide a maximum of
                      16 answers. 

                      * For `rank_order` polls, you can only provide a maximum
                      of seven answers.
                    minItems: 2
                    type: array
                    items:
                      maxLength: 200
                      type: string
                      example: Extremely useful
                  prompts:
                    description: >-
                      Information about the prompt questions. This field only
                      applies to `matching` and `rank_order` questions. You
                      **must** provide a minimum of two prompts, up to a maximum
                      of 10 prompts.
                    maxItems: 10
                    minItems: 2
                    type: array
                    items:
                      type: object
                      properties:
                        prompt_question:
                          description: The question prompt's title.
                          maxLength: 200
                          type: string
                          example: How are you?
                  answer_min_character:
                    description: >-
                      The allowed minimum number of characters. This field only
                      applies to `short_answer` and `long_answer` questions. You
                      must provide at least a **one** character minimum value.
                    minimum: 1
                    type: integer
                    example: 1
                  answer_max_character:
                    description: >-
                      The allowed maximum number of characters. This field only
                      applies to `short_answer` and `long_answer` questions. 

                      * For `short_answer` question, a maximum of 500
                      characters. 

                      * For `long_answer` question, a maximum of 2,000
                      characters.
                    type: integer
                    example: 200
                  rating_min_value:
                    description: >-
                      The rating scale's minimum value. This value cannot be
                      less than zero. 

                       This field only applies to the `rating_scale` survey.
                    minimum: 0
                    type: integer
                    example: 1
                  rating_max_value:
                    description: >-
                      The rating scale's maximum value, up to a maximum value of
                      10. 

                       This field only applies to the `rating_scale` survey.
                    maximum: 10
                    type: integer
                    example: 4
                  rating_min_label:
                    description: >-
                      The low score label used for the `rating_min_value` field,
                      up to 50 characters. 

                       This field only applies to the `rating_scale` survey.
                    maxLength: 50
                    type: string
                    example: Not likely
                  rating_max_label:
                    description: >-
                      The high score label used for the `rating_max_value`
                      field, up to 50 characters. 

                       This field only applies to the `rating_scale` survey.
                    maxLength: 50
                    type: string
                    example: Extremely Likely
        show_in_the_browser:
          description: >-
            Whether the **Show in the browser when the meeting ends** option is
            enabled. 

            * `true` - Enabled. 

            * `false` - Disabled. 

             This value defaults to `true`.
          type: boolean
          example: true
          default: true
        third_party_survey:
          description: The link to the third party meeting survey.
          maxLength: 64
          type: string
          example: https://example.com
    MeetingsGetMeetingTokenResponse:
      description: Information about the meeting token.
      type: object
      properties:
        token:
          description: The generated meeting token.
          type: string
          example: >-
            https://example.com/closedcaption?id=200610693&ns=GZHkEA==&expire=86400&spparams=id%2Cns%2Cexpire&signature=nYtXJqRKCW
    MeetingsGetDetails200Response:
      type: object
      properties:
        id:
          description: >-
            The [meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).
          type: integer
          format: int64
          example: 5638296721
        uuid:
          description: >-
            The meeting's UUID. You **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            this value if the meeting UUID begins with a `/` character or
            contains the `//` character.
          type: string
          example: 4444AAAiAAAAAiAiAiiAii==
        duration:
          description: The meeting's duration, in minutes.
          type: integer
          example: 60
        start_time:
          description: The meeting's start date and time.
          type: string
          format: date-time
          example: '2021-07-13T21:44:51Z'
        end_time:
          description: The meeting's end date and time.
          type: string
          format: date-time
          example: '2021-07-13T23:00:51Z'
        host_id:
          description: The host's ID.
          type: string
          example: x1yCzABCDEfg23HiJKl4mN
        dept:
          description: The meeting host's department.
          type: string
          example: Developers
        participants_count:
          description: The number of meeting participants.
          type: integer
          example: 2
        source:
          description: >-
            Whether the meeting was created directly through Zoom or via an API
            request: 

            * If the meeting was created via an OAuth app, this field returns
            the OAuth app's name. 

            * If the meeting was created via JWT or the Zoom Web Portal, this
            returns the `Zoom` value.
          type: string
          example: Zoom
        topic:
          description: The meeting's topic.
          type: string
          example: My Meeting
        total_minutes:
          description: >-
            The total number of minutes attended by the meeting's host and
            participants.
          type: integer
          example: 55
        type:
          description: >-
            The meeting type: 

            * `0` &mdash; A prescheduled meeting. 

            * `1` &mdash; An instant meeting. 

            * `2` &mdash; A scheduled meeting. 

            * `3` &mdash; A recurring meeting with no fixed time. 

            * `4` &mdash; A [personal meeting
            room](https://support.zoom.us/hc/en-us/articles/201362843). 

            * `7` &mdash; A [PAC (Personal Audio
            Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting)
            meeting. 

            * `8` &mdash; A recurring meeting with a fixed time.
          type: integer
          example: 1
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 7
            - 8
        user_email:
          description: The user's email address.
          type: string
          format: email
          example: jchill@example.com
        user_name:
          description: The user's display name.
          type: string
          example: Jill Chill
    MeetingsListPastMeetingInstancesResponse:
      title: Meeting instances
      description: List of Meetings
      type: object
      properties:
        meetings:
          description: List of ended meeting instances.
          type: array
          items:
            type: object
            properties:
              start_time:
                description: Start time
                type: string
                format: date-time
                example: '2022-03-26T05:37:59Z'
              uuid:
                description: >+
                  Meeting UUID. Unique meeting ID. Each meeting instance will
                  generate its own Meeting UUID (i.e., after a meeting ends, a
                  new UUID will be generated for the next instance of the
                  meeting). [Double
                  encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
                  your UUID when using it for API calls if the UUID begins with
                  a '/'or contains '//' in it.

                type: string
                example: Vg8IdgluR5WDeWIkpJlElQ==
    MeetingsGetPastMeetingParticipantsResponse:
      description: Pagination object.
      type: object
      properties:
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_size:
          description: The number of records returned within a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The number of all records available across pages.
          type: integer
          example: 1
        participants:
          description: Array of meeting participant objects.
          type: array
          items:
            type: object
            properties:
              id:
                description: >-
                  Universally unique identifier of the Participant. It is the
                  same as the User ID of the participant if the participant
                  joins the meeting by logging into Zoom. If the participant
                  joins the meeting without logging in, the value of this field
                  will be blank.
                type: string
                example: 30R7kT7bTIKSNUFEuH_Qlg
              name:
                description: Participant display name.
                type: string
                example: Jill Chill
              user_id:
                description: >-
                  Participant ID. This is a unique ID assigned to the
                  participant joining a meeting and is valid for that meeting
                  only.
                type: string
                example: '27423744'
              registrant_id:
                description: >-
                  The participant's unique registrant ID. This field only
                  returns if you pass the `registrant_id` value for the
                  `include_fields` query parameter. 


                  This field does not return if the `type` query parameter is
                  the `live` value.
                type: string
                example: _f08HhPJS82MIVLuuFaJPg
              user_email:
                description: >-
                  Email address of the user. If the participant is **not** part
                  of the host's account, this returns an empty string value,
                  with some exceptions. See [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for details.
                type: string
                example: jchill@example.com
              join_time:
                description: Participant join time.
                type: string
                format: date-time
                example: '2022-03-23T06:58:09Z'
              leave_time:
                description: Participant leave time.
                type: string
                format: date-time
                example: '2022-03-23T07:02:28Z'
              duration:
                description: Participant duration.
                type: integer
                example: 259
              failover:
                description: Indicates if failover happened during the meeting.
                type: boolean
                example: false
              status:
                description: |-
                  The participant's status. 
                  * `in_meeting` - In a meeting. 
                  * `in_waiting_room` - In a waiting room.
                type: string
                example: in_meeting
                enum:
                  - in_meeting
                  - in_waiting_room
    MeetingsListPastMeetingPollsResponse:
      type: object
      properties:
        id:
          description: >-
            [Meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
            Unique identifier of the meeting in **long** format(represented as
            int64 data type in JSON), also known as the meeting number.
          type: integer
          format: int64
          example: 93398114182
        questions:
          type: array
          items:
            type: object
            properties:
              email:
                description: >-
                  Email address of the user who submitted answers to the poll.
                  If the user is **not** part of the host's account, this
                  returns an empty string value, with some exceptions. See
                  [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for details.
                type: string
                example: jchill@example.com
              name:
                description: >-
                  Name of the user who submitted answers to the poll. If
                  `anonymous` option is enabled for a poll, the participant's
                  polling information will be kept anonymous and the value of
                  `name` field will be `Anonymous Attendee`.
                type: string
                example: Jill Chill
              question_details:
                type: array
                items:
                  type: object
                  properties:
                    answer:
                      description: Answer submitted by the user.
                      type: string
                      example: Good
                    date_time:
                      description: >-
                        Date and time at which the answer to the poll was
                        submitted.
                      type: string
                      format: date-time
                      example: '2022-03-26T05:37:59Z'
                    polling_id:
                      description: Unique identifier of the poll.
                      type: string
                      example: QalIoKWLTJehBJ8e1xRrbQ
                    question:
                      description: Question asked during the poll.
                      type: string
                      example: How are you?
        start_time:
          description: The start time of the meeting.
          type: string
          format: date-time
          example: '2022-03-26T05:37:59Z'
        uuid:
          description: Meeting UUID.
          type: string
          example: Vg8IdgluR5WDeWIkpJlElQ==
    MeetingsListPastMeetingQaResponse:
      type: object
      properties:
        id:
          description: >-
            [Meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
            Unique identifier of the meeting in **long** format, represented as
            int64 data type in JSON, also known as the meeting number.
          type: integer
          format: int64
          example: 95204914252
        questions:
          type: array
          items:
            type: object
            properties:
              email:
                description: >-
                  The user's email address. If the user is **not** part of the
                  host's account, this returns an empty string value, with some
                  exceptions. See [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for details.
                type: string
                example: jchill@example.com
              name:
                description: >-
                  The user's name. If `anonymous` option is enabled for the
                  Q&amp;A, the participant's information is be kept anonymous
                  and the value of `name` field is `Anonymous Attendee`.
                type: string
                example: Jill Chill
              question_details:
                type: array
                items:
                  type: object
                  properties:
                    answer:
                      description: >-
                        An answer submitted for the question. The value is 'live
                        answered' if this is a live answer.
                      type: string
                      example: Good
                    question:
                      description: A question asked during the Q&amp;A.
                      type: string
                      example: How are you?
        start_time:
          description: The meeting's start time.
          type: string
          format: date-time
          example: '2022-03-26T06:44:14Z'
        uuid:
          description: Meeting UUID.
          type: string
          example: Bznyg8KZTdCVbQxvS/oZ7w==
    MeetingsListMeetingTemplatesResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            type: object
            properties:
              id:
                description: The template ID.
                type: string
                example: AdxbhxCzKgSiWAw
              name:
                description: The template name.
                type: string
                example: My meeting template
              type:
                description: |-
                  The template type:   
                   
                  `1`: Meeting template   
                   
                  `2`: Admin meeting template
                type: integer
                example: 1
        total_records:
          description: Total records found for this request.
          type: integer
          example: 1
    MeetingsCreateTemplateFromMeetingResponse:
      type: object
      properties:
        id:
          description: The template ID.
          type: string
          example: AdxbhxCzKgSiWAw
        name:
          description: The template name.
          type: string
          example: My Meeting Template
    MeetingsListHostScheduledResponse:
      description: Pagination Object.
      type: object
      properties:
        next_page_token:
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. This token's expiration
            period is 15 minutes.
          type: string
          example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_number:
          description: The page number of the current results.
          type: integer
          example: 1
          default: 1
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 1
        meetings:
          description: List of Meeting objects.
          type: array
          items:
            type: object
            properties:
              agenda:
                description: >-
                  Meeting description. The length of agenda gets truncated to
                  250 characters when you list all meetings for a user. To view
                  the complete agenda of a meeting, retrieve details for a
                  single meeting, use the [**Get a
                  meeting**](/docs/api-reference/zoom-api/methods#operation/meeting)
                  API.
                type: string
                example: My Meeting
              created_at:
                description: 'Time of creation. '
                type: string
                format: date-time
                example: '2022-03-23T05:31:16Z'
              duration:
                description: Meeting duration.
                type: integer
                example: 60
              host_id:
                description: ID of the user who is set as the host of the meeting.
                type: string
                example: 30R7kT7bTIKSNUFEuH_Qlg
              id:
                description: >-
                  Meeting ID - also known as the meeting number in long (int64)
                  format.
                type: integer
                format: int64
                example: 97763643886
              join_url:
                description: URL using which participants can join a meeting.
                type: string
                example: https://example.com/j/11111
              pmi:
                description: >-
                  [Personal meeting
                  ID](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                  This field is only returned if PMI was used to schedule the
                  meeting.
                type: string
                example: '97891943927'
              start_time:
                description: Meeting start time.
                type: string
                format: date-time
                example: '2022-03-23T06:00:00Z'
              timezone:
                description: 'Timezone to format the meeting start time. '
                type: string
                example: America/Los_Angeles
              topic:
                description: Meeting topic.
                type: string
                example: My Meeting
              type:
                description: |-
                  Meeting Types:  
                   `1` - Instant meeting.  
                   `2` - Scheduled meeting.  
                   `3` - Recurring meeting with no fixed time.  
                   `8` - Recurring meeting with fixed time.
                type: integer
                example: 2
                extensions:
                  x-enum-descriptions:
                    - Instant Meeting
                    - Scheduled Meeting
                    - Recurring Meeting with no fixed time
                    - Recurring Meeting with fixed time
                enum:
                  - 1
                  - 2
                  - 3
                  - 8
              uuid:
                description: >-
                  Unique Meeting ID. Each meeting instance will generate its own
                  Meeting UUID.
                type: string
                example: aDYlohsHRtCd4ii1uC2+hA==
    MeetingsCreateMeetingResponse:
      description: Meeting object.
      type: object
      properties:
        assistant_id:
          description: The ID of the user who scheduled this meeting on behalf of the host.
          type: string
          example: kFFvsJc-Q1OSxaJQLvaa_A
        host_email:
          description: The meeting host's email address.
          type: string
          format: email
          example: jchill@example.com
        id:
          description: >-
            The [meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
            Unique identifier of the meeting in **long** format(represented as
            int64 data type in JSON), also known as the meeting number.
          type: integer
          format: int64
          example: 92674392836
        registration_url:
          description: >-
            The URL that registrants can use to register for a meeting. This
            field is only returned for meetings that have enabled registration.
          type: string
          example: >-
            https://example.com/meeting/register/7ksAkRCoEpt1Jm0wa-E6lICLur9e7Lde5oW6
        agenda:
          description: Agenda
          type: string
          example: My Meeting
        created_at:
          description: The date and time when this meeting was created.
          type: string
          format: date-time
          example: '2022-03-25T07:29:29Z'
        duration:
          description: The meeting duration.
          type: integer
          example: 60
        h323_password:
          description: H.323/SIP room system passcode
          type: string
          example: '123456'
        join_url:
          description: >-
            URL for participants to join the meeting. This URL should only be
            shared with users that you would like to invite for the meeting.
          type: string
          example: https://example.com/j/11111
        chat_join_url:
          description: The URL to join the chat.
          type: string
          example: https://example.com/launch/jc/11111
        occurrences:
          description: Array of occurrence objects.
          type: array
          items:
            description: >-
              Occurrence object. This object is only returned for recurring
              webinars.
            type: object
            properties:
              duration:
                description: Duration.
                type: integer
                example: 60
              occurrence_id:
                description: >-
                  Occurrence ID: Unique Identifier that identifies an occurrence
                  of a recurring webinar. [Recurring
                  webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                  can have a maximum of 50 occurrences.
                type: string
                example: '1648194360000'
              start_time:
                description: Start time.
                type: string
                format: date-time
                example: '2022-03-25T07:46:00Z'
              status:
                description: |-
                  Occurrence status. 
                   `available` - Available occurrence.  
                   `deleted` -  Deleted occurrence.
                type: string
                example: available
                enum:
                  - available
                  - deleted
        password:
          description: >+
            The meeting passcode. This passcode may only contain these
            characters: `[a-z A-Z 0-9 @ - _ * !]`


            If **Require a passcode when scheduling new meetings** setting has
            been enabled and
            [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
            for the user, the passcode field will be autogenerated in the
            response even if it is not provided in the API request. 


          type: string
          example: '123456'
        pmi:
          description: >-
            [Personal meeting ID
            (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
            Only used for scheduled meetings and recurring meetings with no
            fixed time.
          type: string
          example: '97891943927'
        pre_schedule:
          description: >-
            Whether the prescheduled meeting was created via the [GSuite
            app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on).
            This only supports the meeting `type` value of `2` (scheduled
            meetings) and `3` (recurring meetings with no fixed time). 

            * `true` - A GSuite prescheduled meeting. 

            * `false` - A regular meeting.
          type: boolean
          example: false
          default: false
        recurrence:
          description: >-
            Recurrence object. Use this object only for a meeting with type `8`,
            a recurring meeting with fixed time. 
          required:
            - type
          type: object
          properties:
            end_date_time:
              description: >-
                Select the final date when the meeting will recur before it is
                canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z.
                Cannot be used with `end_times`.
              type: string
              format: date-time
              example: '2022-04-02T15:59:00Z'
            end_times:
              description: >-
                Select how many times the meeting should recur before it is
                canceled. The maximum number of recurring is 60. Cannot be used
                with `end_date_time`.
              maximum: 60
              type: integer
              example: 7
              default: 1
            monthly_day:
              description: >-
                Use this field only if you're scheduling a recurring meeting of
                type `3` to state the day in a month when the meeting should
                recur. The value range is from 1 to 31.


                For instance, if you would like the meeting to recur on 23rd of
                each month, provide `23` as this field's value and `1` as the
                `repeat_interval` field's value. Instead, to have the meeting
                recur every three months on 23rd of the month, change the value
                of the `repeat_interval` field to `3`.
              type: integer
              example: 1
              default: 1
            monthly_week:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state the week of the month when the meeting
                should recur. If you use this field, you must also use the
                `monthly_week_day` field to state the day of the week when the
                meeting should recur.   
                 `-1` - Last week of the month.  
                 `1` - First week of the month.  
                 `2` - Second week of the month.  
                 `3` - Third week of the month.  
                 `4` - Fourth week of the month.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Last week
                  - First week
                  - Second week
                  - Third week
                  - Fourth week
              enum:
                - -1
                - 1
                - 2
                - 3
                - 4
            monthly_week_day:
              description: >-
                Use this field **only if you're scheduling a recurring meeting
                of type** `3` to state a specific day in a week when the monthly
                meeting should recur. To use this field, you must also use the
                `monthly_week` field. 

                  
                 `1` - Sunday.  
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` - Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
            repeat_interval:
              description: >+
                Define the interval for the meeting to recur. For instance, to
                schedule a meeting that recurs every two months, set this
                field's value to `2` and the value of the `type` parameter as
                `3`. 


                For a daily meeting, the maximum interval you can set is `90`
                days. For a weekly meeting the maximum interval that you can set
                is  of `12` weeks. For a monthly meeting, there is a maximum of
                `3` months.

              type: integer
              example: 1
            type:
              description: |-
                Recurrence meeting types.
                 `1` - Daily.  
                 `2` - Weekly.  
                 `3` - Monthly.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Daily
                  - Weekly
                  - Monthly
              enum:
                - 1
                - 2
                - 3
            weekly_days:
              description: >-
                This field is required **if you're scheduling a recurring
                meeting of type** `2` to state the days of the week when the
                meeting should repeat.
                 
                  This field's value could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
                   
                  **Note:** If you would like the meeting to occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays, provide `1,3` as this field's value.

                   
                 `1`  - Sunday.   
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` -  Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: string
              example: '1'
              default: '1'
              enum:
                - '1'
                - '2'
                - '3'
                - '4'
                - '5'
                - '6'
                - '7'
        settings:
          description: Meeting settings.
          type: object
          properties:
            allow_multiple_devices:
              description: >-
                Allow attendees to join the meeting from multiple devices. This
                setting only works for meetings that require
                [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
              type: boolean
              example: true
            alternative_hosts:
              description: >-
                A semicolon-separated list of the meeting's alternative hosts'
                email addresses or IDs.
              type: string
              example: jchill@example.com;thill@example.com
            alternative_hosts_email_notification:
              description: >-
                Flag to determine whether to send email notifications to
                alternative hosts, default value is true.
              type: boolean
              example: true
              default: true
            alternative_host_update_polls:
              description: >-
                Whether the **Allow alternative hosts to add or edit polls**
                feature is enabled. This requires Zoom version 5.8.0 or higher.
              type: boolean
              example: true
            approval_type:
              description: >-
                Enable registration and set approval for the registration. Note
                that this feature requires the host to be of **Licensed** user
                type. **Registration cannot be enabled for a basic user.**   
                   
                 

                `0` - Automatically approve.  
                 `1` - Manually approve.  
                 `2` - No registration required.
              type: integer
              example: 0
              extensions:
                x-enum-descriptions:
                  - Automatically Approve
                  - Manually Approve
                  - No Registration Required
              default: 2
              enum:
                - 0
                - 1
                - 2
            approved_or_denied_countries_or_regions:
              description: >
                Approve or block users from specific regions or countries from
                joining this meeting. 
              type: object
              properties:
                approved_list:
                  description: >-
                    List of countries or regions from where participants can
                    join this meeting. 
                  type: array
                  items:
                    type: string
                    example: CX
                denied_list:
                  description: >-
                    List of countries or regions from where participants can not
                    join this meeting. 
                  type: array
                  items:
                    type: string
                    example: CA
                enable:
                  description: >-
                    `true` - Setting enabled to either allow users or block
                    users from specific regions to join your meetings.   
                     

                    `false` - Setting disabled.
                  type: boolean
                  example: true
                method:
                  description: >-
                    Specify whether to allow users from specific regions to join
                    this meeting; or block users from specific regions from
                    joining this meeting.   
                       
                     
                    `approve`: Allow users from specific regions/countries to
                    join this meeting. If this setting is selected, the approved
                    regions/countries must be included in the `approved_list`.  
                       
                     
                    `deny`: Block users from specific regions/countries from
                    joining this meeting. If this setting is selected, the
                    approved regions/countries must be included in the
                    `denied_list`
                  type: string
                  example: approve
                  enum:
                    - approve
                    - deny
            audio:
              description: >-
                Determine how participants can join the audio portion of the
                meeting.  
                 `both` - Both Telephony and VoIP.  
                 `telephony` - Telephony only.  
                 `voip` - VoIP only.  
                 `thirdParty` - Third party audio conference.
              type: string
              example: telephony
              extensions:
                x-enum-descriptions:
                  - Both Telephony and VoIP
                  - Telephony only
                  - VoIP only
                  - Third party audio conference
              default: both
              enum:
                - both
                - telephony
                - voip
                - thirdParty
            audio_conference_info:
              description: Third party audio conference info.
              maxLength: 2048
              type: string
              example: test
            authentication_domains:
              description: >-
                If user has configured [Sign Into Zoom with Specified
                Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                option, this will list the domains that are authenticated.
              type: string
              example: example.com
            authentication_exception:
              description: >-
                The participants added here will receive unique meeting invite
                links and bypass authentication.
              type: array
              items:
                type: object
                properties:
                  email:
                    description: The participant's email address.
                    type: string
                    format: email
                    example: jchill@example.com
                  name:
                    description: The participant's name.
                    type: string
                    example: Jill Chill
                  join_url:
                    description: URL for participants to join the meeting.
                    type: string
                    example: https://example.com/s/11111
            authentication_name:
              description: >-
                Authentication name set in the [authentication
                profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
              type: string
              example: Sign in to Zoom
            authentication_option:
              description: Meeting authentication option ID.
              type: string
              example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
            auto_recording:
              description: |-
                Automatic recording.
                 `local` - Record on local.  
                 `cloud` -  Record on cloud.  
                 `none` - Disabled.
              type: string
              example: cloud
              extensions:
                x-enum-descriptions:
                  - Record to local device
                  - Record to cloud
                  - No Recording
              default: none
              enum:
                - local
                - cloud
                - none
            breakout_room:
              description: >-
                Setting to [pre-assign breakout
                rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
              type: object
              properties:
                enable:
                  description: >-
                    Set this field's value to `true` to enable the [breakout
                    room
                    pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)
                    option.
                  type: boolean
                  example: true
                rooms:
                  description: Create a room or rooms.
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        description: The breakout room's name.
                        type: string
                        example: room1
                      participants:
                        description: >-
                          Email addresses of the participants who are to be
                          assigned to the breakout room.
                        type: array
                        items:
                          type: string
                          example: jchill@example.com
            calendar_type:
              description: >-
                The type of calendar integration used to schedule the meeting. 

                * `1` - [Zoom Outlook
                add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 

                * `2` - [Zoom for Google Workspace
                add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)


                Works with the `private_meeting` field to determine whether to
                share details of meetings or not.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Outlook
                  - Google Calendar
              enum:
                - 1
                - 2
            close_registration:
              description: Close registration after event date.
              type: boolean
              example: false
              default: false
            cn_meeting:
              description: Host meeting in China.
              type: boolean
              example: false
              deprecated: true
              default: false
            contact_email:
              description: Contact email for registration
              type: string
              example: jchill@example.com
            contact_name:
              description: Contact name for registration
              type: string
              example: Jill Chill
            custom_keys:
              description: Custom keys and values assigned to the meeting.
              maxItems: 10
              type: array
              items:
                type: object
                properties:
                  key:
                    description: Custom key associated with the user.
                    maxLength: 64
                    type: string
                    example: key1
                  value:
                    description: Value of the custom key associated with the user.
                    maxLength: 256
                    type: string
                    example: value1
            email_notification:
              description: >-
                Whether to send email notifications to [alternative
                hosts](https://support.zoom.us/hc/en-us/articles/208220166) and
                [users with scheduling
                privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege).
                This value defaults to `true`.
              type: boolean
              example: true
              default: true
            encryption_type:
              description: >-
                Choose between enhanced encryption and [end-to-end
                encryption](https://support.zoom.us/hc/en-us/articles/360048660871)
                when starting or a meeting. When using end-to-end encryption,
                several features (e.g. cloud recording, phone/SIP/H.323 dial-in)
                will be **automatically disabled**.
                 
                `enhanced_encryption` - Enhanced encryption. Encryption is
                stored in the cloud if you enable this option.   
                 

                `e2ee` - [End-to-end
                encryption](https://support.zoom.us/hc/en-us/articles/360048660871).
                The encryption key is stored in your local device and can not be
                obtained by anyone else. Enabling this setting also **disables**
                the join before host, cloud recording, streaming, live
                transcription, breakout rooms, polling, 1:1 private chat, and
                meeting reactions features.
              type: string
              example: enhanced_encryption
              enum:
                - enhanced_encryption
                - e2ee
            enforce_login:
              description: >-
                Only signed in users can join this meeting.


                **This field is deprecated and will not be supported in the
                future.**    
                   
                 As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
              type: boolean
              example: true
              deprecated: true
            enforce_login_domains:
              description: >-
                Only signed in users with specified domains can join meetings.


                **This field is deprecated and will not be supported in the
                future.**    
                   
                 As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
              type: string
              example: example.com
              deprecated: true
            focus_mode:
              description: >-
                Whether the [**Focus Mode**
                feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode)
                is enabled when the meeting starts.
              type: boolean
              example: true
            global_dial_in_countries:
              description: List of global dial-in countries.
              type: array
              items:
                type: string
                example: US
            global_dial_in_numbers:
              description: Global dial-in countries or regions.
              type: array
              items:
                type: object
                properties:
                  city:
                    description: City of the number, such as Chicago.
                    type: string
                    example: New York
                  country:
                    description: The country code, such as BR.
                    type: string
                    example: US
                  country_name:
                    description: Full name of country, such as Brazil.
                    type: string
                    example: US
                  number:
                    description: A phone number, such as +1 2332357613.
                    type: string
                    example: +1 1000200200
                  type:
                    description: Type of number.
                    type: string
                    example: toll
                    enum:
                      - toll
                      - tollfree
            host_video:
              description: Start video when the host joins the meeting.
              type: boolean
              example: true
            in_meeting:
              description: Host meeting in India.
              type: boolean
              example: false
              deprecated: true
              default: false
            jbh_time:
              description: >-
                If the value of `join_before_host` field is set to `true`, use
                this field to indicate time limits when a participant may join a
                meeting before a host.


                *  `0` - Allow participant to join anytime.

                *  `5`- Allow participant to join 5 minutes before meeting start
                time.
                 * `10` - Allow participant to join 10 minutes before meeting start time.
              type: integer
              example: 0
              enum:
                - 0
                - 5
                - 10
            join_before_host:
              description: >-
                Allow participants to join the meeting before the host starts
                the meeting. Only used for scheduled or recurring meetings.
              type: boolean
              example: true
              default: false
            language_interpretation:
              description: >-
                The meeting's [language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** This feature is only available for certain Meeting
                add-on, Education, and Business and higher plans. If this
                feature is not enabled on the host's account, this setting will
                **not** be applied to the meeting.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [language
                    interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                    for the meeting.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the meeting's language interpreters.
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      languages:
                        description: >-
                          A comma-separated list of the interpreter's languages.
                          The string must contain two [country
                          IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                          For example, if the interpreter will translate from
                          English to Chinese, then this value will be `US,CN`.
                        type: string
                        example: US,FR
            sign_language_interpretation:
              description: >-
                The meeting's [sign language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** If this feature is not enabled on the host's account,
                this setting will **not** be applied to the meeting.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [sign language
                    interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                    for the meeting.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the meeting's sign language interpreters.
                  maximum: 20
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      sign_language:
                        description: |-
                          The interpreter's sign language. 

                           To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                        type: string
                        example: American
            meeting_authentication:
              description: '`true` - Only authenticated users can join meetings.'
              type: boolean
              example: true
            mute_upon_entry:
              description: Mute participants upon entry.
              type: boolean
              example: false
              default: false
            participant_video:
              description: Start video when participants join the meeting.
              type: boolean
              example: false
            private_meeting:
              description: Whether the meeting is set as private.
              type: boolean
              example: false
            registrants_confirmation_email:
              description: |-
                Whether to send registrants an email confirmation.
                * `true` - Send a confirmation email.
                * `false` - Do not send a confirmation email.
              type: boolean
              example: true
            registrants_email_notification:
              description: >-
                Whether to send registrants email notifications about their
                registration approval, cancellation, or rejection.


                * `true` - Send an email notification.

                * `false` - Do not send an email notification.

                 Set this value to `true` to also use the `registrants_confirmation_email` parameter.
              type: boolean
              example: true
            registration_type:
              description: >-
                Registration type. Used for recurring meeting with fixed time
                only. 
                 `1` - Attendees register once and can attend any of the occurrences.  
                 `2` - Attendees need to register for each occurrence to attend.  
                 `3` - Attendees register once and can choose one or more occurrences to attend.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - >-
                    Attendees register once and can attend any of the
                    occurrences
                  - Attendees need to register for each occurrence to attend
                  - >-
                    Attendees register once and can choose one or more
                    occurrences to attend
              default: 1
              enum:
                - 1
                - 2
                - 3
            show_share_button:
              description: >-
                Show social share buttons on the meeting registration page.

                This setting only works for meetings that require
                [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
              type: boolean
              example: true
            use_pmi:
              description: >-
                Use a [personal meeting ID
                (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                Only used for scheduled meetings and recurring meetings with no
                fixed time.
              type: boolean
              example: false
              default: false
            waiting_room:
              description: Enable the waiting room.
              type: boolean
              example: false
              default: false
            watermark:
              description: Add a watermark when viewing a shared screen.
              type: boolean
              example: false
              default: false
            host_save_video_order:
              description: >-
                Whether the **Allow host to save video order** feature is
                enabled.
              type: boolean
              example: true
            internal_meeting:
              description: Whether to set the meeting as an internal meeting.
              type: boolean
              example: false
              default: false
            continuous_meeting_chat:
              description: >-
                Information about the **Enable continuous meeting chat**
                feature.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable the **Enable continuous meeting chat**
                    setting.
                  type: boolean
                  example: true
                auto_add_invited_external_users:
                  description: >-
                    Whether to enable the **Automatically add invited external
                    users** setting.
                  type: boolean
                  example: true
                channel_id:
                  description: The channel's ID.
                  type: string
                  example: cabc1234567defghijkl01234
            participant_focused_meeting:
              description: Whether to set the meeting as a participant focused meeting.
              type: boolean
              example: false
              default: false
            push_change_to_calendar:
              description: |-
                Whether to push meeting changes to the calendar. 

                 To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.
                * `true` - Push meeting changes to the calendar.
                * `false` - Do not push meeting changes to the calendar.
              type: boolean
              example: false
              default: false
            resources:
              description: The meeting's resources.
              type: array
              items:
                type: object
                properties:
                  resource_type:
                    description: The resource type.
                    type: string
                    example: whiteboard
                    enum:
                      - whiteboard
                  resource_id:
                    description: The resource ID.
                    type: string
                    example: X4Hy02w3QUOdskKofgb9Jg
                  permission_level:
                    description: >-
                      The permission levels for users to access the whiteboard. 

                      * `editor` - Users with link access can edit the board. 

                      * `commenter` - Users with link access can comment on the
                      board. 

                      * `viewer` - Users with link access can view the board.
                    type: string
                    example: editor
                    default: editor
                    enum:
                      - editor
                      - commenter
                      - viewer
        start_time:
          description: Meeting start date-time in UTC/GMT, such as `2020-03-31T12:02:00Z`.
          type: string
          format: date-time
          example: '2022-03-25T07:29:29Z'
        start_url:
          description: >-
            URL to start the meeting. This URL should only be used by the host
            of the meeting and **should not be shared with anyone other than the
            host** of the meeting, since anyone with this URL will be able to
            log in to the Zoom Client as the host of the meeting.
          type: string
          example: https://example.com/s/11111
        timezone:
          description: Timezone to format `start_time`.
          type: string
          example: America/Los_Angeles
        topic:
          description: Meeting topic.
          maxLength: 200
          type: string
          example: My Meeting
        tracking_fields:
          description: Tracking fields.
          type: array
          items:
            type: object
            properties:
              field:
                description: The tracking field's label.
                type: string
                example: field1
              value:
                description: The tracking field's value.
                type: string
                example: value1
              visible:
                description: >-
                  Indicates whether the [tracking
                  field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
                  is visible in the meeting scheduling options in the Zoom Web
                  Portal or not.


                  `true`: Tracking field is visible.   
                   

                  `false`: Tracking field is not visible to the users in the
                  meeting options in the Zoom Web Portal but the field was used
                  while scheduling this meeting via API. An invisible tracking
                  field can be used by users while scheduling meetings via API
                  only. 
                type: boolean
                example: true
        type:
          description: Meeting type.
          type: integer
          example: 2
          extensions:
            x-enum-descriptions:
              - Instant Meeting
              - Scheduled Meeting
              - Recurring Meeting with no fixed time
              - Recurring Meeting with fixed time
          default: 2
          enum:
            - 1
            - 2
            - 3
            - 8
    PacListAccountsResponse:
      type: object
      properties:
        pac_accounts:
          description: Information about the PAC accounts.
          type: array
          items:
            type: object
            properties:
              conference_id:
                description: The conference ID.
                type: integer
                format: int64
                example: 111111
              dedicated_dial_in_number:
                description: Information about the account's dedicated dial-in numbers.
                type: array
                items:
                  type: object
                  properties:
                    country:
                      description: The dial-in country code.
                      type: string
                      example: USA
                    number:
                      description: The dial-in number.
                      maxLength: 16
                      type: string
                      example: '5550110'
              global_dial_in_numbers:
                description: Information about the account's global dial-in numbers.
                type: array
                items:
                  type: object
                  properties:
                    country:
                      description: The global dial-in country code.
                      type: string
                      example: USA
                    number:
                      description: The global dial-in number.
                      maxLength: 16
                      type: string
                      example: '5550100'
              listen_only_password:
                description: The listen-only password, up to six characters in length.
                maxLength: 6
                type: string
                example: 3c2b1a
              participant_password:
                description: The participant password, up to six characters in length.
                maxLength: 6
                type: string
                example: a1b2c3
    ReportsListSignInSignOutActivitiesResponse:
      description: Report object
      type: object
      properties:
        activity_logs:
          description: Array of activity logs.
          type: array
          items:
            type: object
            properties:
              version:
                description: Zoom client version of the user.
                type: string
                example: 5.9.1.2581
              client_type:
                description: >-
                  The client interface type using which the activity was
                  performed.
                type: string
                example: Browser
              email:
                description: Email address of the user used for the activity.
                type: string
                format: email
                example: jchill@example.com
              ip_address:
                description: The IP address of the user's device.
                type: string
                example: 192.0.2.1
              time:
                description: Time during which the activity occurred.
                type: string
                format: date-time
                example: '2019-09-15T19:13:41Z'
              type:
                description: |-
                  The type of activity. 
                  * `Sign in` &mdash; Sign in activity by user. 
                  * `Sign out` &mdash; Sign out activity by user.
                type: string
                example: Sign out
                enum:
                  - Sign in
                  - Sign out
        from:
          description: >-
            Start date from which you want the activity logs report to be
            generated.
          type: string
          example: '2019-09-01T00:00:00Z'
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
        page_size:
          description: The number of records returned with a single API call.
          type: integer
          example: 30
        to:
          description: >-
            End date until which you want the activity logs report to be
            generated
          type: string
          example: '2019-09-20T00:00:00Z'
    ReportsGetBillingDepartmentReportsResponse:
      type: object
      properties:
        billing_reports:
          type: array
          items:
            type: object
            properties:
              end_date:
                description: End date of the billing period.
                type: string
                format: date
                example: '2022-03-25'
              id:
                description: >-
                  Unique Identifier of the report. Use this ID to retrieve
                  billing invoice via the &quot;Get Billing Invoices API&quot;. 


                  You can also use this ID to export a CSV file of the billing
                  report from this URL:
                  `https://zoom.us/account/report/billing/export?id={id}`.
                type: string
                example: indfhgfhfho
              start_date:
                description: Start date of the billing period.
                type: string
                format: date
                example: '2022-03-25'
              tax_amount:
                description: Total tax amount for this billing period.
                type: string
                example: '456'
              total_amount:
                description: Total billing amount for this billing period.
                type: string
                example: '456'
              type:
                description: >-
                  Type of the billing report. The value should be either of the
                  following:  
                   
                  `0` - Detailed Billing Reports

                  `1` - Custom Billing Reports
                type: integer
                example: 1
                enum:
                  - 0
                  - 1
        currency:
          description: Currency of the billed amount.
          type: string
          example: USD
    ReportsGetBillingInvoicesResponse:
      type: object
      properties:
        currency:
          description: Currency of the billed amount in the invoice.
          type: string
          example: USD
        invoices:
          type: array
          items:
            type: object
            properties:
              end_date:
                description: End date of the invoice period.
                type: string
                format: date
                example: '2022-03-25'
              invoice_charge_name:
                description: Name of the invoice.
                type: string
                example: Audio Conferencing Options
              invoice_number:
                description: 'Invoice number '
                type: string
                example: '3'
              quantity:
                description: Number of licenses bought.
                type: integer
                example: 45
              start_date:
                description: Start date of the invoice period.
                type: string
                format: date
                example: '2022-03-25'
              tax_amount:
                description: Tax amount in the invoice.
                type: string
                example: '34'
              total_amount:
                description: Total billed amount in the invoice.
                type: string
                example: '45'
    ReportsGetCloudRecordingUsageReportResponse:
      type: object
      properties:
        from:
          description: Start date for this report
          type: string
          format: date
          example: '2021-12-01'
        to:
          description: End date for this report
          type: string
          format: date
          example: '2021-12-30'
        cloud_recording_storage:
          description: Array of cloud usage objects
          type: array
          items:
            type: object
            properties:
              date:
                description: Date of the usage
                type: string
                format: date
                example: '2021-12-05'
              free_usage:
                description: Free storage
                type: string
                example: Unlimited
              plan_usage:
                description: Paid storage
                type: string
                example: 3 TB
              usage:
                description: Storage used on the date
                type: string
                example: 3 MB
    ReportsGetDailyUsageReportResponse:
      type: object
      properties:
        dates:
          description: Array of date objects.
          type: array
          items:
            type: object
            properties:
              date:
                description: Date for this object.
                type: string
                format: date
                example: '2022-03-01'
              meeting_minutes:
                description: Number of meeting minutes on this date.
                type: integer
                example: 34
              meetings:
                description: Number of meetings on this date.
                type: integer
                example: 2
              new_users:
                description: Number of new users on this date.
                type: integer
                example: 3
              participants:
                description: Number of participants on this date.
                type: integer
                example: 4
        month:
          description: Month for this report.
          type: integer
          example: 3
        year:
          description: Year for this report.
          type: integer
          example: 2022
    ReportsGetMeetingDetailReportsResponse:
      type: object
      properties:
        custom_keys:
          description: Custom keys and values assigned to the meeting.
          maxItems: 10
          type: array
          items:
            type: object
            properties:
              key:
                description: Custom key associated with the user.
                maxLength: 64
                type: string
                example: Host Nation
              value:
                description: Value of the custom key associated with the user.
                maxLength: 256
                type: string
                example: US
        dept:
          description: Department of the host.
          type: string
          example: HR
        duration:
          description: Meeting duration.
          type: integer
          example: 2
        end_time:
          description: Meeting end time.
          type: string
          format: date-time
          example: '2022-03-15T07:42:22Z'
        id:
          description: >-
            [Meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
            Unique identifier of the meeting in &quot;**long**&quot;
            format(represented as int64 data type in JSON), also known as the
            meeting number.
          type: integer
          format: int64
          example: 3927350525
        participants_count:
          description: Number of meeting participants.
          type: integer
          example: 2
        start_time:
          description: Meeting start time.
          type: string
          format: date-time
          example: '2022-03-15T07:40:46Z'
        topic:
          description: Meeting topic.
          type: string
          example: My Meeting
        total_minutes:
          description: >-
            Number of meeting minutes. This represents the total amount of
            meeting minutes attended by each participant including the host, for
            meetings hosted by the user. For instance if there were one
            host(named A) and one participant(named B) in a meeting, the value
            of total_minutes would be calculated as below:


            **total_minutes** = Total Meeting Attendance Minutes of A + Total
            Meeting Attendance Minutes of B
          type: integer
          example: 3
        tracking_fields:
          description: Tracking fields.
          type: array
          items:
            type: object
            properties:
              field:
                description: Tracking fields type.
                type: string
                example: Host Nation
              value:
                description: Tracking fields value.
                type: string
                example: US
        type:
          description: Meeting type.
          type: integer
          example: 2
        user_email:
          description: User email.
          type: string
          example: jchill@example.com
        user_name:
          description: User display name.
          type: string
          example: Jill Chill
        uuid:
          description: >-
            Meeting UUID. Each meeting instance will generate its own UUID(i.e.,
            after a meeting ends, a new UUID will be generated for the next
            instance of the meeting). [Double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            your UUID when using it for API calls if the UUID begins with a '/'
            or contains '//' in it.
          type: string
          example: iOTQZPmhTUq5a232ETb9eg==
    ReportsGetMeetingParticipantReportsResponse:
      description: Pagination object.
      type: object
      properties:
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_size:
          description: The number of records returned within a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The number of all records available across pages.
          type: integer
          example: 1
        participants:
          description: Array of meeting participant objects.
          type: array
          items:
            type: object
            properties:
              customer_key:
                description: >-
                  The participant's SDK identifier. This value can be
                  alphanumeric, up to a maximum length of 35 characters.
                maxLength: 35
                type: string
                example: 349589LkJyeW
              duration:
                description: Participant duration.
                type: integer
                example: 259
              failover:
                description: Indicates if failover happened during the meeting.
                type: boolean
                example: false
              id:
                description: >-
                  The participant's universally unique ID (UUID). 

                  * If the participant joins the meeting by logging into Zoom,
                  this value is the `id` value in the [**Get a
                  user**](/docs/api-reference/zoom-api/methods#operation/user)
                  API response. 

                  * If the participant joins the meeting **without** logging
                  into Zoom, this returns an empty string value. 


                  **Note:** Use the `participant_user_id` value instead of this
                  value. We will remove this response in a future release.
                type: string
                example: 30R7kT7bTIKSNUFEuH_Qlg
              join_time:
                description: Participant join time.
                type: string
                format: date-time
                example: '2022-03-23T06:58:09Z'
              leave_time:
                description: Participant leave time.
                type: string
                format: date-time
                example: '2022-03-23T07:02:28Z'
              name:
                description: >-
                  Participant display name.


                  This returns an empty string value if the account calling the
                  API is a BAA account.
                type: string
                example: example
              registrant_id:
                description: >-
                  Unique identifier of the registrant. This field is only
                  returned if you entered &quot;registrant_id&quot; as the value
                  of `include_fields` query parameter.
                type: string
                example: abcdefghij0-klmnopq23456
              status:
                description: |-
                  The participant's status. 
                  * `in_meeting` - In a meeting. 
                  * `in_waiting_room` - In a waiting room.
                type: string
                example: in_meeting
                enum:
                  - in_meeting
                  - in_waiting_room
              user_email:
                description: >-
                  Participant email.


                  If the participant is **not** part of the host's account, this
                  returns an empty string value, with some exceptions. See
                  [Email address display
                  rules](/docs/api-reference/using-zoom-apis#email-address) for
                  details. This returns an empty string value if the account
                  calling the API is a BAA account.
                type: string
                example: jchill@example.com
              user_id:
                description: >-
                  Participant ID. This is a unique ID assigned to the
                  participant joining a meeting and is valid for that meeting
                  only.
                type: string
                example: '27423744'
              bo_mtg_id:
                description: >-
                  The [breakout
                  room](https://support.zoom.us/hc/en-us/articles/206476313-Managing-breakout-rooms)
                  ID. Each breakout room is assigned a unique ID.
                type: string
                example: '27423744'
              participant_user_id:
                description: >-
                  The participant's universally unique ID (UUID). 

                  * If the participant joins the meeting by logging into Zoom,
                  this value is the `id` value in the [**Get a
                  user**](/docs/api-reference/zoom-api/methods#operation/user)
                  API response. 

                  * If the participant joins the meeting **without** logging
                  into Zoom, this returns an empty string value.
                type: string
                example: DYHrdpjrS3uaOf7dPkkg8w
    ReportsGetMeetingPollReportsResponse:
      type: object
      properties:
        id:
          description: >-
            The [meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).
          type: integer
          format: int64
          example: 123456
        uuid:
          description: >-
            The meeting's universally unique identifier (UUID). Each meeting
            instance generates a meeting UUID.
          type: string
          example: 4444AAAiAAAAAiAiAiiAii==
        start_time:
          description: The meeting's start time.
          type: string
          format: date-time
          example: '2022-02-01T12:34:12.660Z'
        questions:
          description: Information about the meeting questions.
          type: array
          items:
            type: object
            properties:
              email:
                description: The participant's email address.
                type: string
                format: email
                example: jchill@example.com
              name:
                description: >-
                  The participant's display name. If the **Allow participants to
                  answer questions anonymously** setting is enabled for a
                  [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                  the participant's polling information is kept anonymous and
                  the `name` field will return the &quot;Anonymous
                  Attendee&quot; value.
                type: string
                example: Jill Chill
              first_name:
                description: >-
                  The participant's first name. If the **Allow participants to
                  answer questions anonymously** setting is enabled for a
                  [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                  the participant's polling information is kept anonymous and
                  the `first_name` field will return the &quot;Anonymous
                  Attendee&quot; value.
                type: string
                example: Jill
              last_name:
                description: >-
                  The participant's last name. If the **Allow participants to
                  answer questions anonymously** setting is enabled for a
                  [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                  the participant's polling information is kept anonymous and
                  the `last_name` field will return the &quot;Anonymous
                  Attendee&quot; value.
                type: string
                example: Chill
              question_details:
                description: Information about the user's questions and answers.
                type: array
                items:
                  type: object
                  properties:
                    answer:
                      description: The user's given answer.
                      type: string
                      example: I am wonderful.
                    date_time:
                      description: >-
                        The date and time at which the user answered the poll
                        question.
                      type: string
                      example: '2022-02-01T12:37:12.660Z'
                    polling_id:
                      description: The poll's ID.
                      type: string
                      example: 798fGJEWrA
                    question:
                      description: The poll question.
                      type: string
                      example: How are you?
    ReportsGetMeetingQaReportResponse:
      type: object
      properties:
        id:
          description: >-
            The meeting ID in &quot;**long**&quot; format(represented as int64
            data type in JSON), also known as the meeting number.
          type: integer
          format: int64
          example: 245603123123
        questions:
          description: Array of meeting question objects.
          type: array
          items:
            type: object
            properties:
              email:
                description: >-
                  Participant email. If the participant is **not** part of the
                  host's account, this returns an empty string value, with some
                  exceptions. See [Email address display
                  rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address)
                  for details.
                type: string
                example: jchilll@example.com
              name:
                description: >-
                  Participant display name.  
                    

                  If the anonymous
                  [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer)
                  option is enabled and if a participant submits the Q&amp;A
                  without providing their name, the value of the `name` field is
                  &quot;Anonymous Attendee&quot;.
                type: string
                example: Jill Chill
              question_details:
                description: Array of questions from user.
                type: array
                items:
                  type: object
                  properties:
                    answer:
                      description: >-
                        The given answer. If this is a live answer, the value is
                        'live answered'.
                      type: string
                      example: fine
                    question:
                      description: Asked question.
                      type: string
                      example: how are you
        start_time:
          description: Meeting start time.
          type: string
          format: date-time
          example: '2022-03-15T07:40:46Z'
        uuid:
          description: >-
            The meeting UUID. Each meeting instance will generate its own UUID -
            for example, after a meeting ends, a new UUID will be generated for
            the next instance of the Meeting. Double encode your UUID when using
            it for API calls if the UUID begins with a '/' or contains '//'.
          type: string
          example: 4444AAAiAAAAAiAiAiiAii==
    ReportsGetOperationLogsReportResponse:
      description: Pagination object.
      type: object
      properties:
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of the available
            result list exceeds the page size. The expiration period is 15
            minutes.
          type: string
          example: uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2
        page_size:
          description: 'The amount of records returns within a single API call. '
          maximum: 300
          type: integer
          example: 30
          default: 30
        operation_logs:
          description: Array of operation log objects
          type: array
          items:
            type: object
            properties:
              action:
                description: Action
                type: string
                example: delete
              category_type:
                description: Category type
                type: string
                example: user
              operation_detail:
                description: Operation detail
                type: string
                example: delete user - user2@example.com
              operator:
                description: The user who performed the operation.
                type: string
                example: admin@example.com
              time:
                description: The time at which the operation was performed.
                type: string
                format: date-time
                example: '2022-01-25T17:52:16Z'
    ReportsGetTelephoneReportsResponse:
      type: object
      properties:
        from:
          description: Start date for this report.
          type: string
          format: date
          example: '2019-06-20'
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: w7587w4eiyfsudgk
        page_count:
          description: >-
            The number of pages returned for the request made. This field does
            **not** return if the `query_date_type` parameter is the
            `meeting_start_time` or `meeting_end_time` value.
          type: integer
          example: 1
        page_size:
          description: The number of records returned with a single API call.
          type: integer
          example: 30
        to:
          description: End date for this report.
          type: string
          format: date
          example: '2019-07-20'
        total_records:
          description: >-
            The total number of all the records available across pages. This
            field does **not** return if the `query_date_type` parameter is the
            `meeting_start_time` or `meeting_end_time` value.
          type: integer
          example: 1
        telephony_usage:
          description: Array of telephony objects.
          type: array
          items:
            type: object
            properties:
              call_in_number:
                description: Caller's call-in number.
                type: string
                example: ZoomGW
              country_name:
                description: Country name.
                type: string
                example: US
              dept:
                description: User department.
                type: string
                example: HR
              duration:
                description: Call leg duration
                type: integer
                example: 2
              end_time:
                description: Call leg end time
                type: string
                format: date-time
                example: '2022-03-15T07:42:22Z'
              host_email:
                description: User email.
                type: string
                example: jchill@example.com
              host_id:
                description: The user ID of the meeting host.
                type: string
                example: _Rn_hal7ToG5p0AWwIIsjQ
              host_name:
                description: User display name.
                type: string
                example: Jill Chill
              meeting_id:
                description: >-
                  [Meeting
                  ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
                  Unique identifier of the meeting in &quot;**long**&quot;
                  format(represented as int64 data type in JSON), also known as
                  the meeting number.
                type: integer
                format: int64
                example: 94908911701
              meeting_type:
                description: Meeting type.
                type: string
                example: Meeting
              phone_number:
                description: 'Toll-free telephone number. '
                type: string
                example: +1 8243
              rate:
                description: Calling rate for the telephone call.
                type: number
                example: 0.03
              signaled_number:
                description: 'The number that is signaled to Zoom. '
                type: string
                example: +1 8243
              start_time:
                description: Call leg start time
                type: string
                format: date-time
                example: '2022-03-15T07:40:46Z'
              total:
                description: >-
                  Total cost (USD) for Call Out. Calculated as plan rate by
                  duration.
                type: number
                example: 0.03
              type:
                description: Call type.
                type: string
                example: call-out
                enum:
                  - toll-free
                  - call-out
                  - call-in
                  - US toll-number
                  - global toll-number
                  - premium
                  - premium call-in
                  - Toll
              uuid:
                description: Meeting UUID.
                type: string
                example: 4444AAAiAAAAAiAiAiiAii==
    ReportsListUpcomingEventsReportResponse:
      type: object
      properties:
        from:
          description: >-
            The report's start date. This value must be within the past six
            months.
          type: string
          format: date
          example: '2022-03-01'
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token returns when the set of available results exceeds
            the current page size. The expiration period for this token is 15
            minutes.
          type: string
          example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
        page_size:
          description: The number of records returned in a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        to:
          description: >-
            The report's end date. This value must be within the past six months
            and cannot exceed a month from the `from` value.
          type: string
          format: date
          example: '2022-03-25'
        upcoming_events:
          description: Information about the upcoming event.
          type: array
          items:
            type: object
            properties:
              dept:
                description: The event host's department.
                type: string
                example: HR
              host_id:
                description: The event host's ID.
                type: string
                example: Or4-ZeV_SHCOfWRC71O1Fg
              host_name:
                description: The event host's name.
                type: string
                example: chi chi
              id:
                description: The event's unique ID.
                type: string
                example: vawMH9zAQLytjCnQiQXSUg==
              start_time:
                description: The event's start time.
                type: string
                example: '2022-03-15T07:40:46Z'
              topic:
                description: The event's topic.
                type: string
                example: My Meeting
    ReportsGetActiveInactiveHostReportsResponse:
      type: object
      properties:
        from:
          description: Start date for this report.
          type: string
          format: date
          example: '2022-03-01'
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 30
        page_number:
          description: The page number of the current results.
          type: integer
          example: 1
          default: 1
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        to:
          description: End date for this report.
          type: string
          format: date
          example: '2022-03-25'
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 850
        total_meeting_minutes:
          description: Number of meeting minutes for this range.
          type: integer
          example: 345
        total_meetings:
          description: Number of meetings for this range.
          type: integer
          example: 34
        total_participants:
          description: Number of participants for this range.
          type: integer
          example: 56
        users:
          description: Array of user objects.
          type: array
          items:
            type: array of objects
            properties:
              custom_attributes:
                description: Custom attributes that have been assigned to the user.
                type: array
                items:
                  properties:
                    key:
                      description: Identifier for the custom attribute.
                      type: string
                      example: 4444AAAiAAAAAiAiAiiAii==
                    name:
                      description: Name of the custom attribute.
                      type: string
                      example: age
                    value:
                      description: Value of the custom attribute.
                      type: string
                      example: '18'
              dept:
                description: User department.
                type: string
                example: HR
              email:
                description: User email.
                type: string
                example: jchill@example.com
              id:
                description: User ID.
                type: string
                example: 2pyjK5VNQHadb2BY6Z4GbA
              meeting_minutes:
                description: Number of meeting minutes for user.
                type: integer
                example: 342
              meetings:
                description: Number of meetings for user.
                type: integer
                example: 45
              participants:
                description: Number of participants in meetings for user.
                type: integer
                example: 56
              type:
                description: User type.
                type: integer
                example: 1
              user_name:
                description: User display name.
                type: string
                example: Jill Chill
    ReportsGetMeetingReportsResponse:
      description: Pagination Object.
      type: object
      properties:
        next_page_token:
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          type: string
          example: w7587w4eiyfsudgk
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_number:
          description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          type: integer
          example: 1
          deprecated: true
          default: 1
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 20
        from:
          description: The report's start date.
          type: string
          format: date
          example: '2020-07-14'
        meetings:
          description: Information about the meeting.
          type: array
          items:
            type: object
            properties:
              custom_keys:
                description: >-
                  Information about the meeting's assigned custom keys and
                  values. This returns a maximum of 10 items.
                maxItems: 10
                type: array
                items:
                  type: object
                  properties:
                    key:
                      description: The custom key name.
                      maxLength: 64
                      type: string
                      example: Host Nation
                    value:
                      description: The custom key's value.
                      maxLength: 256
                      type: string
                      example: US
              duration:
                description: The meeting's duration.
                type: integer
                example: 6
              end_time:
                description: The meeting's end date and time.
                type: string
                format: date-time
                example: '2020-07-15T23:30:19Z'
              id:
                description: >-
                  The [meeting
                  ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).
                type: integer
                example: 12345
              participants_count:
                description: The number of meeting participants.
                type: integer
                example: 2
              session_key:
                description: The Video SDK custom session ID.
                type: string
                example: ABC36jaBI145
              source:
                description: >-
                  Whether the meeting was created directly through Zoom or via
                  an API request: 

                  * If the meeting was created via an OAuth app, this field
                  returns the OAuth app's name. 

                  * If the meeting was created via JWT or the Zoom Web Portal,
                  this returns the `Zoom` value.
                type: string
                example: Zoom
              start_time:
                description: The meeting's start date and time.
                type: string
                format: date-time
                example: '2019-07-15T23:24:52Z'
              topic:
                description: The meeting's topic.
                type: string
                example: My Meeting
              total_minutes:
                description: >-
                  The sum of meeting minutes from all meeting participants in
                  the meeting.
                type: integer
                example: 11
              type:
                description: >-
                  The type of meeting or webinar. 


                  meeting: 

                  * `1` &mdash; Instant meeting. 

                  * `2` &mdash; Scheduled meeting. 

                  * `3` &mdash; A recurring meeting with no fixed time. 

                  * `4` &mdash; A meeting created via PMI (Personal Meeting
                  ID). 

                  * `7` &mdash; A [Personal Audio
                  Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
                  (PAC). 

                  * `8` - Recurring meeting with a fixed time. 


                  webinar: 

                  * `5` &mdash; A webinar. 

                  * `6` &mdash; A recurring webinar without a fixed time 

                  * `9` &mdash; A recurring webinar with a fixed time. 
                type: integer
                example: 2
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
              user_email:
                description: The user's email address.
                type: string
                format: email
                example: jchill@example.com
              user_name:
                description: The user's display name.
                type: string
                example: Jill Chill
              uuid:
                description: >-
                  The meeting's universally unique identifier (UUID). Each
                  meeting instance generates a meeting UUID.
                type: string
                example: 4444AAAiAAAAAiAiAiiAii==
              schedule_time:
                description: The meeting's scheduled date and time.
                type: string
                example: 12/22/2021 16:20
              join_waiting_room_time:
                description: >-
                  The date and time at which the attendee joined the waiting
                  room.
                type: string
                example: 02/11/2022 16:15
              join_time:
                description: The date and time at which the attendee joined the meeting.
                type: string
                example: 12/22/2021 16:20
              leave_time:
                description: The date and time at which the attendee left the meeting.
                type: string
                example: 12/22/2021 17:13
              host_organization:
                description: Host Account Name of Hosting Organization.
                type: string
                example: org
              host_name:
                description: Host's name.
                type: string
                example: Jill
              has_screen_share:
                description: >-
                  Indicates whether or not the screenshare feature was used in
                  the meeting.
                type: boolean
                example: false
              has_recording:
                description: >-
                  Indicates whether or not the recording feature was used in the
                  meeting.
                type: boolean
                example: false
              has_chat:
                description: >-
                  Indicates whether or not the chat feature was used in the
                  meeting.
                type: boolean
                example: false
              meeting_encryption_status:
                description: |-
                  The meeting's encryption status. 
                  * `1` &mdash; E2E encryption. 
                  * `2` &mdash; Enhanced encryption.
                type: integer
                example: 1
                enum:
                  - 1
                  - 2
              participants_count_my_account:
                description: The number of meeting participants from my account.
                type: integer
                example: 2
        to:
          description: The report's end date.
          type: string
          format: date
          example: '2020-08-14'
    ReportsGetWebinarDetailsReportResponse:
      type: object
      properties:
        custom_keys:
          description: Custom keys and values assigned to the meeting.
          maxItems: 10
          type: array
          items:
            type: object
            properties:
              key:
                description: Custom key associated with the user.
                maxLength: 64
                type: string
                example: Host Nation
              value:
                description: Value of the custom key associated with the user.
                maxLength: 256
                type: string
                example: US
        dept:
          description: Department of the host.
          type: string
          example: HR
        duration:
          description: Meeting duration.
          type: integer
          example: 2
        end_time:
          description: Meeting end time.
          type: string
          format: date-time
          example: '2022-03-15T07:42:22Z'
        id:
          description: >-
            [Meeting
            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
            Unique identifier of the meeting in &quot;**long**&quot;
            format(represented as int64 data type in JSON), also known as the
            meeting number.
          type: integer
          format: int64
          example: 345678902224
        participants_count:
          description: Number of meeting participants.
          type: integer
          example: 4
        start_time:
          description: Meeting start time.
          type: string
          format: date-time
          example: '2022-03-15T07:40:46Z'
        topic:
          description: Meeting topic.
          type: string
          example: My Meeting
        total_minutes:
          description: >-
            Number of Webinar minutes. This represents the total amount of
            Webinar minutes attended by each participant including the host, for
            a Webinar hosted by the user. For instance if there were one
            host(named A) and one participant(named B) in a Webinar, the value
            of total_minutes would be calculated as below:


            **total_minutes** = Total Webinar Attendance Minutes of A + Total
            Webinar Attendance Minutes of B
          type: integer
          example: 3
        tracking_fields:
          description: Tracking fields.
          type: array
          items:
            type: object
            properties:
              field:
                description: Tracking fields type.
                type: string
                example: Host Nation
              value:
                description: Tracking fields value.
                type: string
                example: US
        type:
          description: Meeting type.
          type: integer
          example: 4
        user_email:
          description: User email.
          type: string
          example: jchill@example.com
        user_name:
          description: User display name.
          type: string
          example: Jill Chill
        uuid:
          description: >-
            Webinar UUID. Each webinar instance will generate its own UUID(i.e.,
            after a meeting ends, a new UUID will be generated when the next
            instance of the webinar starts). [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the UUID when using it for API calls if the UUID begins with a '/'
            or contains '//' in it.
          type: string
          example: 4444AAAiAAAAAiAiAiiAii==
    ReportsWebinarParticipantsListResponse:
      description: Pagination object.
      type: object
      properties:
        next_page_token:
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          type: string
          example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_size:
          description: The number of records returned within a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The number of all records available across pages.
          type: integer
          example: 1
        participants:
          description: Information about the webinar participant.
          type: array
          items:
            type: object
            properties:
              customer_key:
                description: >-
                  The participant's SDK identifier. This value can be
                  alphanumeric, up to a maximum length of 35 characters.
                maxLength: 35
                type: string
                example: 349589LkJyeW
              duration:
                description: The participant's attendance duration.
                type: integer
                example: 20
              failover:
                description: Whether failover occurred during the webinar.
                type: boolean
                example: false
              id:
                description: >-
                  The participant's universally unique ID (UUID). 

                  * If the participant joins the meeting by logging into Zoom,
                  this value is the `id` value in the [**Get a
                  user**](/docs/api-reference/zoom-api/methods#operation/user)
                  API response. 

                  * If the participant joins the meeting **without** logging
                  into Zoom, this returns an empty string value. 


                  **Note:** Use the `participant_user_id` value instead of this
                  value. We will remove this response in a future release.
                type: string
                example: ABCDEF123456
              join_time:
                description: The participant's join time.
                type: string
                format: date-time
                example: '2019-02-01T12:34:12.660Z'
              leave_time:
                description: The participant's leave time.
                type: string
                format: date-time
                example: '2019-02-01T12:54:12.660Z'
              name:
                description: >-
                  The participant's display name. This returns an empty string
                  value if the account calling the API is a BAA account.
                type: string
                example: jchill
              registrant_id:
                description: >-
                  The registrant's ID. This field only returns if you provide
                  the `registrant_id` value for the `include_fields` query
                  parameter.
                type: string
                example: 123456FEDCBA
              status:
                description: |-
                  The participant's status. 
                  * `in_meeting` - In a meeting. 
                  * `in_waiting_room` - In a waiting room.
                type: string
                example: in_meeting
                enum:
                  - in_meeting
                  - in_waiting_room
              user_email:
                description: >-
                  The participant's email address. If the participant is **not**
                  part of the host's account, this returns an empty string
                  value, with some exceptions. See [Email address display
                  rules](/docs/api-reference/using-zoom-apis#email-address) for
                  details. This returns an empty string value if the account
                  calling the API is a BAA account.
                pattern: >-
                  (^\s*$|^[A-Za-z0-9!#$%&''*+/=?^_`{|}~-]+(\.[A-Za-z0-9!#$%&''*+/=?^_`{|}~-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)*(\.[A-Za-z]{2,})$)
                type: string
                example: jchill@example.com
              user_id:
                description: >-
                  The participant's ID. This ID is assigned to the participant
                  upon joining the webinar and is only valid for that webinar.
                type: string
                example: ABCDEF123456
              participant_user_id:
                description: >-
                  The participant's universally unique ID (UUID). 

                  * If the participant joins the meeting by logging into Zoom,
                  this value is the `id` value in the [**Get a
                  user**](/docs/api-reference/zoom-api/methods#operation/user)
                  API response. 

                  * If the participant joins the meeting **without** logging
                  into Zoom, this returns an empty string value.
                type: string
                example: DYHrdpjrS3uaOf7dPkkg8w
    ReportsGetWebinarPollReportsResponse:
      type: object
      properties:
        id:
          description: The webinar ID.
          type: integer
          format: int64
          example: 123456
        questions:
          description: Information about the webinar questions.
          type: array
          items:
            type: object
            properties:
              email:
                description: The participant's email address.
                type: string
                format: email
                example: jchill@example.com
              name:
                description: >-
                  The participant's display name. **Allow participants to answer
                  questions anonymously** setting is enabled for a
                  [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                  the participant's polling information is kept anonymous and
                  the `name` field will return the &quot;Anonymous
                  Attendee&quot; value.
                type: string
                example: Jill Chill
              first_name:
                description: >-
                  The participant's first name. If the **Allow participants to
                  answer questions anonymously** setting is enabled for a
                  [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                  the participant's polling information is kept anonymous and
                  the `first_name` field will return the &quot;Anonymous
                  Attendee&quot; value.
                type: string
                example: Jill
              last_name:
                description: >-
                  The participant's last name. If the **Allow participants to
                  answer questions anonymously** setting is enabled for a
                  [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                  the participant's polling information is kept anonymous and
                  the `last_name` field will return the &quot;Anonymous
                  Attendee&quot; value.
                type: string
                example: Chill
              question_details:
                description: Information about the user's questions and answers.
                type: array
                items:
                  type: object
                  properties:
                    answer:
                      description: The user's given answer.
                      type: string
                      example: I am wonderful.
                    date_time:
                      description: >-
                        The date and time at which the user answered the poll
                        question.
                      type: string
                      example: '2022-02-01T12:37:12.660Z'
                    polling_id:
                      description: The poll's ID.
                      type: string
                      example: 798fGJEWrA
                    question:
                      description: The poll question.
                      type: string
                      example: How are you?
        start_time:
          description: The webinar's start time.
          type: string
          format: date-time
          example: '2022-02-01T12:34:12.660Z'
        uuid:
          description: >-
            The webinar's universally unique identifier (UUID). Each webinar
            instance generates a webinar UUID.
          type: string
          example: 4444AAAiAAAAAiAiAiiAii==
    ReportsGetWebinarQaReportResponse:
      type: object
      properties:
        id:
          description: >-
            Webinar ID in &quot;**long**&quot; format(represented as int64 data
            type in JSON), also known as the webinar number.
          type: integer
          format: int64
          example: 245603123123
        questions:
          description: Array of webinar question objects.
          type: array
          items:
            type: object
            properties:
              email:
                description: >-
                  Participant email. If the participant is **not** part of the
                  host's account, this returns an empty string value, with some
                  exceptions. See [Email address display
                  rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address)
                  for details.
                type: string
                example: jchilll@example.com
              name:
                description: >-
                  Participant display name.  
                    

                  If anonymous
                  [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer)
                  option is enabled and if a participant submits the Q&amp;A
                  without providing their name, the value of the `name` field
                  will be &quot;Anonymous Attendee&quot;.
                type: string
                example: Jill Chill
              question_details:
                description: Array of questions from user.
                type: array
                items:
                  type: object
                  properties:
                    answer:
                      description: >-
                        Given answer. The value will be 'live answered' if this
                        is a live answer.
                      type: string
                      example: fine
                    question:
                      description: Asked question.
                      type: string
                      example: how are you
        start_time:
          description: Webinar start time.
          type: string
          format: date-time
          example: '2022-03-15T07:40:46Z'
        uuid:
          description: >-
            Webinar UUID. Each Webinar instance will generate its own UUID(i.e.,
            after a Webinar ends, a new UUID will be generated for the next
            instance of the Webinar). [Double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            your UUID when using it for API calls if the UUID begins with a '/'
            or contains '//' in it.
          type: string
          example: 4444AAAiAAAAAiAiAiiAii==
    SipPhoneListResponse:
      type: object
      properties:
        next_page_token:
          type: string
          example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_number:
          description: The page number of the current results.
          type: integer
          example: 1
        page_size:
          description: The number of records returned within a single API call.
          type: integer
          example: 30
        phones:
          description: SIP phones object.
          type: array
          items:
            type: object
            properties:
              authorization_name:
                description: >-
                  The authorization name of the user that is registered for SIP
                  phone.
                type: string
                example: testname
              domain:
                description: The name or IP address of your provider's SIP domain.
                type: string
                example: example.com
              id:
                description: The SIP phone ID.
                type: string
                example: '123456'
              password:
                description: |
                  The password generated for the user in the SIP account.
                type: string
                example: apassword1
              proxy_server:
                description: >-
                  The IP address of the proxy server for SIP requests. Note that
                  if you are using the UDP transport protocol, the default port
                  is 5060. If you are using UDP with a different port number,
                  that port number must be included with the IP address. If you
                  are not using a proxy server, this value can be the same as
                  the Register Server, or empty.
                type: string
                example: 192.0.2.2
              proxy_server2:
                description: >-
                  The IP address of the proxy server for SIP requests. Note that
                  if you are using the UDP transport protocol, the default port
                  is 5060. If you are using UDP with a different port number,
                  that port number must be included with the IP address. If you
                  are not using a proxy server, this value can be the same as
                  the Register Server, or empty.
                type: string
                example: 192.0.2.4
              proxy_server3:
                description: >-
                  The IP address of the proxy server for SIP requests. Note that
                  if you are using the UDP transport protocol, the default port
                  is 5060. If you are using UDP with a different port number,
                  that port number must be included with the IP address. If you
                  are not using a proxy server, this value can be the same as
                  the Register Server, or empty.
                type: string
                example: 192.0.2.6
              register_server:
                description: >-
                  The IP address of the server that accepts REGISTER requests.
                  Note that if you are using the UDP transport protocol, the
                  default port is 5060. If you are using UDP with a different
                  port number, that port number must be included with the IP
                  address.
                type: string
                example: 192.0.2.1
              register_server2:
                description: >-
                  The IP address of the server that accepts REGISTER requests.
                  Note that if you are using the UDP transport protocol, the
                  default port is 5060. If you are using UDP with a different
                  port number, that port number must be included with the IP
                  address.
                type: string
                example: 192.0.2.3
              register_server3:
                description: >-
                  The IP address of the server that accepts REGISTER requests.
                  Note that if you are using the UDP transport protocol, the
                  default port is 5060. If you are using UDP with a different
                  port number, that port number must be included with the IP
                  address.
                type: string
                example: 192.0.2.5
              registration_expire_time:
                description: >-
                  The number of minutes after which the SIP registration of the
                  Zoom client user will expire, and the client will auto
                  register to the SIP server. 
                type: integer
                example: 60
              transport_protocol:
                description: |-
                  Protocols supported by the SIP provider.  
                    The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                type: string
                example: UDP
                enum:
                  - UDP
                  - TCP
                  - TLS
                  - AUTO
              transport_protocol2:
                description: |-
                  Protocols supported by the SIP provider.  
                    The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                type: string
                example: UDP
                enum:
                  - UDP
                  - TCP
                  - TLS
                  - AUTO
              transport_protocol3:
                description: |-
                  Protocols supported by the SIP provider.  
                    The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                type: string
                example: UDP
                enum:
                  - UDP
                  - TCP
                  - TLS
                  - AUTO
              user_email:
                description: >-
                  The email address of the user to associate with the SIP Phone.
                  Can add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`,
                  `.linux`, `.pc`, `.mobile`, `.pad` at the end of the email
                  (for example, `user@example.com.mac`) to add accounts for
                  different platforms for the same user.
                type: string
                format: email
                example: jchill@example.com
              user_name:
                description: 'The phone number associated with the user in the SIP account. '
                type: string
                example: Jill Chill
              voice_mail:
                description: The number to dial for checking voicemail.
                type: string
                example: '4000'
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 20
    SipPhoneEnableUserSipPhoneResponse:
      type: object
      properties:
        id:
          description: The SIP phone ID.
          type: string
          example: '123456'
        authorization_name:
          description: The authorization name of the user that is registered for SIP phone.
          maxLength: 64
          type: string
          example: testname
        domain:
          description: >-
            The name or IP address of your provider's SIP domain (example:
            CDC.WEB). 
          maxLength: 64
          type: string
          example: example.com
        password:
          description: The password generated for the user in the SIP account.
          type: string
          example: '123456'
        proxy_server:
          description: >-
            The IP address of the proxy server for SIP requests. Note that if
            you are using the UDP transport protocol, the default port is 5060.
            If you are using UDP with a different port number, that port number
            must be included with the IP address. If you are not using a proxy
            server, this value can be the same as the Register Server.
          type: string
          example: 192.0.2.2
        proxy_server2:
          description: >-
            The IP address of the proxy server for SIP requests. Note that if
            you are using the UDP transport protocol, the default port is 5060.
            If you are using UDP with a different port number, that port number
            must be included with the IP address. If you are not using a proxy
            server, this value can be the same as the Register Server, or empty.
          type: string
          example: 192.0.2.4
        proxy_server3:
          description: >-
            The IP address of the proxy server for SIP requests. Note that if
            you are using the UDP transport protocol, the default port is 5060.
            If you are using UDP with a different port number, that port number
            must be included with the IP address. If you are not using a proxy
            server, this value can be the same as the Register Server, or empty.
          type: string
          example: 192.0.2.6
        register_server:
          description: >-
            The IP address of the server that accepts REGISTER requests. Note
            that if you are using the UDP transport protocol, the default port
            is 5060. If you are using UDP with a different port number, that
            port number must be included with the IP address.
          type: string
          example: 192.0.2.1
        register_server2:
          description: >-
            The IP address of the server that accepts REGISTER requests. Note
            that if you are using the UDP transport protocol, the default port
            is 5060. If you are using UDP with a different port number, that
            port number must be included with the IP address.
          type: string
          example: 192.0.2.3
        register_server3:
          description: >-
            The IP address of the server that accepts REGISTER requests. Note
            that if you are using the UDP transport protocol, the default port
            is 5060. If you are using UDP with a different port number, that
            port number must be included with the IP address.
          type: string
          example: 192.0.2.5
        registration_expire_time:
          description: >-
            The number of minutes after which the SIP registration of the Zoom
            client user will expire, and the client will auto register to the
            SIP server.
          maximum: 127
          minimum: 1
          type: integer
          example: 60
          default: 60
        transport_protocol:
          description: |-
            Protocols supported by the SIP provider.  
              The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
          type: string
          example: UDP
          enum:
            - UDP
            - TCP
            - TLS
            - AUTO
        transport_protocol2:
          description: |-
            Protocols supported by the SIP provider.  
              The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
          type: string
          example: UDP
          enum:
            - UDP
            - TCP
            - TLS
            - AUTO
        transport_protocol3:
          description: |-
            Protocols supported by the SIP provider.  
              The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
          type: string
          example: UDP
          enum:
            - UDP
            - TCP
            - TLS
            - AUTO
        user_email:
          description: >-
            The email address of the user to associate with the SIP Phone. Can
            add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`,
            `.mobile`, `.pad` at the end of the email (for example,
            `user@example.com.mac`) to add accounts for different platforms for
            the same user.
          maxLength: 64
          type: string
          format: email
          example: jchill@example.com
        user_name:
          description: The phone number associated with the user in the SIP account.
          maxLength: 64
          type: string
          example: Jill Chill
        voice_mail:
          description: The number to dial for checking voicemail.
          maxLength: 255
          type: string
          example: '4000'
    TspGetAccountInfoResponse:
      type: object
      properties:
        dial_in_number_unrestricted:
          description: >-
            Control restriction on account users adding a TSP number outside of
            account's dial in numbers.
          type: boolean
          example: false
        dial_in_numbers:
          type: array
          items:
            type: object
            properties:
              code:
                description: Country Code
                type: string
                example: '1'
              number:
                description: Dial-in number, length is less than 16
                maxLength: 16
                type: string
                example: +1 1000200200
              type:
                description: Dial-in number type.
                type: string
                example: toll
        enable:
          description: Enable Telephony Service Provider for account users.
          type: boolean
          example: true
        master_account_setting_extended:
          description: >-
            For master account, extend its TSP setting to all sub accounts. For
            sub account, extend TSP setting from master account.
          type: boolean
          example: true
        modify_credential_forbidden:
          description: >-
            Control restriction on account users being able to modify their TSP
            credentials.
          type: boolean
          example: true
        tsp_bridge:
          description: Telephony bridge zone
          type: string
          example: US_TSP_TB
          enum:
            - US_TSP_TB
            - EU_TSP_TB
        tsp_enabled:
          description: >-
            Enable TSP feature for account. This has to be enabled to use any
            other tsp settings/features.
          type: boolean
          example: true
        tsp_provider:
          description: Telephony Service Provider.
          type: string
          example: someprovidername
    TspListUserTspAccountsResponse:
      type: object
      properties:
        tsp_accounts:
          type: array
          items:
            title: TSP Accounts List
            description: List of TSP accounts.
            required:
              - conference_code
              - leader_pin
            type: object
            properties:
              conference_code:
                description: 'Conference code: numeric value, length is less than 16.'
                maxLength: 16
                minLength: 1
                type: string
                example: '0125'
              dial_in_numbers:
                description: List of dial in numbers.
                type: array
                items:
                  type: object
                  properties:
                    code:
                      description: Country code.
                      maxLength: 6
                      type: string
                      example: '1'
                    country_label:
                      description: Country Label, if passed, will display in place of code.
                      maxLength: 10
                      type: string
                      example: America
                    number:
                      description: 'Dial-in number: length is less than 16.'
                      maxLength: 16
                      minLength: 1
                      type: string
                      example: +1 1000200200
                    type:
                      description: |-
                        Dial-in number types:  
                         `toll` - Toll number.  
                         `tollfree` -Toll free number.  
                         
                        `media_link` - Media link
                      type: string
                      example: toll
                      extensions:
                        x-enum-descriptions:
                          - Toll number <br/>
                          - Toll free number <br/>
                          - Media link phone number <br/>
                      enum:
                        - toll
                        - tollfree
                        - media_link
              id:
                description: The TSP credential ID.
                type: string
                example: '1'
                enum:
                  - '1'
                  - '2'
              leader_pin:
                description: 'Leader PIN: numeric value, length is less than 16.'
                maxLength: 16
                minLength: 1
                type: string
                example: '11189898'
              tsp_bridge:
                description: |
                  Telephony bridge
                type: string
                example: US_TSP_TB
                enum:
                  - US_TSP_TB
                  - EU_TSP_TB
    TspAddUserTspAccountResponse:
      title: TSP Accounts List
      description: List of TSP accounts.
      properties:
        id:
          description: The ID of the TSP account.
          type: string
          example: '1'
        conference_code:
          description: 'Conference code: numeric value, length is less than 16.'
          maxLength: 16
          minLength: 1
          type: string
          example: '0125'
        dial_in_numbers:
          description: List of dial in numbers.
          type: array
          items:
            type: object
            properties:
              code:
                description: Country code.
                maxLength: 6
                type: string
                example: '1'
              country_label:
                description: Country Label, if passed, will display in place of code.
                maxLength: 10
                type: string
                example: America
              number:
                description: 'Dial-in number: length is less than 16.'
                maxLength: 16
                minLength: 1
                type: string
                example: +1 1000200200
              type:
                description: |-
                  Dial-in number types:  
                   `toll` - Toll number.  
                   `tollfree` -Toll free number.  
                   
                  `media_link` - Media link.
                type: string
                example: toll
                extensions:
                  x-enum-descriptions:
                    - Toll number <br/>
                    - Toll free number <br/>
                    - Media link phone number <br/>
                enum:
                  - toll
                  - tollfree
                  - media_link
        leader_pin:
          description: 'Leader PIN: numeric value, length is less than 16.'
          maxLength: 16
          minLength: 1
          type: string
          example: US_TSP_TB
        tsp_bridge:
          description: Telephony bridge
          type: string
          example: US_TSP_TB
          enum:
            - US_TSP_TB
            - EU_TSP_TB
      required:
        - conference_code
        - leader_pin
      type: object
    TspGetUserTspAccountResponse:
      title: TSP Account
      description: TSP account of the user.
      required:
        - conference_code
        - leader_pin
      type: object
      properties:
        conference_code:
          description: 'Conference code: numeric value, length is less than 16.'
          maxLength: 16
          minLength: 1
          type: string
          example: '0125'
        dial_in_numbers:
          description: List of dial in numbers.
          type: array
          items:
            type: object
            properties:
              code:
                description: Country code.
                maxLength: 6
                type: string
                example: '1'
              country_label:
                description: Country Label, if passed, will display in place of code.
                maxLength: 10
                type: string
                example: America
              number:
                description: 'Dial-in number: length is less than 16.'
                maxLength: 16
                minLength: 1
                type: string
                example: +1 1000200200
              type:
                description: |-
                  Dial-in number types:  
                   `toll` - Toll number.  
                   `tollfree` -Toll free number.   
                    `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number.
                type: string
                example: toll
                extensions:
                  x-enum-descriptions:
                    - Toll number <br/>
                    - Toll free number <br/>
                    - Media link phone number <br/>
                enum:
                  - toll
                  - tollfree
                  - media_link
        id:
          description: The TSP account ID.
          type: string
          example: '1'
        leader_pin:
          description: 'Leader PIN: numeric value, length is less than 16.'
          maxLength: 16
          minLength: 1
          type: string
          example: '11189898'
        tsp_bridge:
          description: Telephony bridge
          type: string
          example: US_TSP_TB
          enum:
            - US_TSP_TB
            - EU_TSP_TB
    TrackingFieldListResponse:
      description: Tracking Field List
      type: object
      properties:
        total_records:
          description: The number of all records available across pages
          type: integer
          example: 1
        tracking_fields:
          description: Array of Tracking Fields
          type: array
          items:
            title: Tracking Field
            description: Tracking Field
            type: object
            properties:
              id:
                description: ID of Tracking Field
                type: string
                example: a32CJji-weJ92
              field:
                description: Label/ Name for the tracking field.
                type: string
                example: field1
              recommended_values:
                description: Array of recommended values
                type: array
                items:
                  type: string
                  example: value1
              required:
                description: Tracking Field Required
                type: boolean
                example: false
              visible:
                description: Tracking Field Visible
                type: boolean
                example: true
    TrackingFieldCreateFieldResponse:
      title: Tracking Field
      description: Tracking Field
      type: object
      properties:
        id:
          description: Tracking Field ID
          type: string
          example: a32CJji-weJ92
        field:
          description: Label/ Name for the tracking field.
          type: string
          example: field1
        recommended_values:
          description: Array of recommended values
          type: array
          items:
            type: string
            example: value1
        required:
          description: Tracking Field Required
          type: boolean
          example: false
        visible:
          description: Tracking Field Visible
          type: boolean
          example: true
    TrackingFieldGetResponse:
      title: Tracking Field
      description: Tracking Field
      type: object
      properties:
        id:
          description: Tracking Field ID
          type: string
          example: a32CJji-weJ92
        field:
          description: Label/ Name for the tracking field.
          type: string
          example: field1
        recommended_values:
          description: Array of recommended values
          type: array
          items:
            type: string
            example: value1
        required:
          description: Tracking Field Required
          type: boolean
          example: false
        visible:
          description: Tracking Field Visible
          type: boolean
          example: true
    WebinarsListAbsenteesResponse:
      title: Registration List
      description: List of users.
      type: object
      properties:
        next_page_token:
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          type: string
          example: w7587w4eiyfsudgf
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_number:
          description: >-
            **Deprecated.** This field is deprecated. We will no longer support
            this field in a future release. Instead, use the `next_page_token`
            for pagination.
          type: integer
          example: 1
          deprecated: true
          default: 1
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 20
        registrants:
          description: List of registrant objects.
          type: array
          items:
            description: ' Registrant.'
            type: object
            properties:
              id:
                description: Registrant ID.
                type: string
                example: 9tboDiHUQAeOnbmudzWa5g
              address:
                description: The registrant's address.
                type: string
                example: 1800 Amphibious Blvd.
              city:
                description: The registrant's city.
                type: string
                example: Mountain View
              comments:
                description: The registrant's questions and comments.
                type: string
                example: Looking forward to the discussion.
              country:
                description: >-
                  The registrant's two-letter ISO [country
                  code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
                type: string
                example: US
              custom_questions:
                description: Information about custom questions.
                type: array
                items:
                  description: Information about custom questions.
                  type: object
                  properties:
                    title:
                      description: The title of the custom question.
                      type: string
                      example: What do you hope to learn from this?
                    value:
                      description: >-
                        The custom question's response value. This has a limit
                        of 128 characters.
                      maxLength: 128
                      type: string
                      example: >-
                        Look forward to learning how you come up with new
                        recipes and what other services you offer.
              email:
                description: >-
                  The registrant's email address. See [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for return value details.
                maxLength: 128
                type: string
                format: email
                example: jchill@example.com
              first_name:
                description: The registrant's first name.
                maxLength: 64
                type: string
                example: Jill
              industry:
                description: The registrant's industry.
                type: string
                example: Food
              job_title:
                description: The registrant's job title.
                type: string
                example: Chef
              last_name:
                description: The registrant's last name.
                maxLength: 64
                type: string
                example: Chill
              no_of_employees:
                description: |-
                  The registrant's number of employees. 
                  * `1-20` 
                  * `21-50` 
                  * `51-100` 
                  * `101-250` 
                  * `251-500` 
                  * `501-1,000` 
                  * `1,001-5,000` 
                  * `5,001-10,000` 
                  * `More than 10,000`
                type: string
                example: 1-20
                enum:
                  - ''
                  - 1-20
                  - 21-50
                  - 51-100
                  - 101-250
                  - 251-500
                  - 501-1,000
                  - 1,001-5,000
                  - 5,001-10,000
                  - More than 10,000
              org:
                description: The registrant's organization.
                type: string
                example: Cooking Org
              phone:
                description: The registrant's phone number.
                type: string
                example: '5550100'
              purchasing_time_frame:
                description: |-
                  The registrant's purchasing time frame. 
                  * `Within a month` 
                  * `1-3 months` 
                  * `4-6 months` 
                  * `More than 6 months` 
                  * `No timeframe`
                type: string
                example: 1-3 months
                enum:
                  - ''
                  - Within a month
                  - 1-3 months
                  - 4-6 months
                  - More than 6 months
                  - No timeframe
              role_in_purchase_process:
                description: |-
                  The registrant's role in the purchase process. 
                  * `Decision Maker` 
                  * `Evaluator/Recommender` 
                  * `Influencer` 
                  * `Not involved`
                type: string
                example: Influencer
                enum:
                  - ''
                  - Decision Maker
                  - Evaluator/Recommender
                  - Influencer
                  - Not involved
              state:
                description: The registrant's state or province.
                type: string
                example: CA
              status:
                description: |-
                  The status of the registrant's registration.
                    `approved` - User has been successfully approved for the webinar.  
                    `pending` -  The registration is still pending.  
                    `denied` - User has been denied from joining the webinar.
                type: string
                example: approved
                enum:
                  - approved
                  - denied
                  - pending
              zip:
                description: The registrant's ZIP or postal code.
                type: string
                example: '94045'
              create_time:
                description: The time when the registrant registered.
                type: string
                format: date-time
                example: '2022-03-22T05:59:09Z'
              join_url:
                description: >-
                  The URL that an approved registrant can use to join the
                  meeting or webinar.
                type: string
                format: string
                example: https://example.com/j/11111
            required:
              - email
              - first_name
    WebinarsListPastInstancesResponse:
      title: Webinar instances
      description: List of webinars.
      type: object
      properties:
        webinars:
          description: List of ended webinar instances.
          type: array
          items:
            type: object
            properties:
              start_time:
                description: Start time.
                type: string
                format: date-time
                example: '2022-03-26T06:44:14Z'
              uuid:
                description: Webinar UUID.
                type: string
                example: Bznyg8KZTdCVbQxvS/oZ7w==
    WebinarsListParticipantsResponse:
      type: object
      properties:
        next_page_token:
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          type: string
          example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
        page_count:
          description: The number of pages returned for this request.
          type: integer
          example: 1
        page_size:
          description: The total number of records returned from a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        participants:
          type: array
          items:
            type: object
            properties:
              id:
                description: The participant's unique identifier.
                type: string
                example: 30R7kT7bTIKSNUFEuH_Qlg
              name:
                description: The participant's name.
                type: string
                example: Jill Chill
              user_id:
                description: >-
                  The participant's ID. This ID is assigned to the participant
                  upon joining the webinar and is only valid for that webinar.
                type: string
                example: ABCDEF123456
              registrant_id:
                description: >-
                  The participant's unique registrant ID. This field only
                  returns if you pass the `registrant_id` value for the
                  `include_fields` query parameter. 


                  This field does not return if the `type` query parameter is
                  the `live` value.
                type: string
                example: _f08HhPJS82MIVLuuFaJPg
              user_email:
                description: >-
                  Email address of the participant. If the participant is
                  **not** part of the host's account, this returns an empty
                  string value, with some exceptions. See [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for details.
                type: string
                format: email
                example: jchill@example.com
              join_time:
                description: The participant's join time.
                type: string
                format: date-time
                example: '2019-02-01T12:34:12.660Z'
              leave_time:
                description: The participant's leave time.
                type: string
                format: date-time
                example: '2019-02-01T12:54:12.660Z'
              duration:
                description: The participant's attendance duration.
                type: integer
                example: 20
              failover:
                description: Whether failover occurred during the webinar.
                type: boolean
                example: false
              status:
                description: |-
                  The participant's status. 
                  * `in_meeting` - In a meeting. 
                  * `in_waiting_room` - In a waiting room.
                type: string
                example: in_meeting
                enum:
                  - in_meeting
                  - in_waiting_room
        total_records:
          description: The total number of records available across all pages.
          type: integer
          example: 1
    WebinarsListPollResultsResponse:
      type: object
      properties:
        id:
          description: >-
            Webinar ID in **long** format, represented as int64 data type in
            JSON, also known as the webinar number.
          type: integer
          format: int64
          example: 95204914252
        questions:
          type: array
          items:
            type: object
            properties:
              email:
                description: >-
                  Email address of the user who submitted answers to the poll.
                  If the participant is **not** part of the host's account, this
                  returns an empty string value, with some exceptions. See
                  [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for details.
                type: string
                example: jchill@example.com
              name:
                description: >-
                  Name of the user who submitted answers to the poll. If the
                  `anonymous` option is enabled for a poll, the participant's
                  polling information will be kept anonymous and the value of
                  `name` field will be `Anonymous Attendee`.
                type: string
                example: Jill Chill
              question_details:
                type: array
                items:
                  type: object
                  properties:
                    answer:
                      description: Answer submitted by the user.
                      type: string
                      example: Good
                    date_time:
                      description: Date and time when the answer to the poll was submitted.
                      type: string
                      format: date-time
                      example: '2022-03-26T05:37:59Z'
                    polling_id:
                      description: Unique identifier of the poll.
                      type: string
                      example: QalIoKWLTJehBJ8e1xRrbQ
                    question:
                      description: Question asked during the poll.
                      type: string
                      example: How are you?
        start_time:
          description: The webinar's start time.
          type: string
          format: date-time
          example: '2022-03-26T05:37:59Z'
        uuid:
          description: Webinar UUID.
          type: string
          example: Bznyg8KZTdCVbQxvS/oZ7w==
    WebinarsListPastWebinarQaResponse:
      type: object
      properties:
        id:
          description: >-
            Webinar ID in **long** format, represented as int64 data type in
            JSON, also known as the webinar number.
          type: integer
          format: int64
          example: 95204914252
        questions:
          type: array
          items:
            type: object
            properties:
              email:
                description: >-
                  Email address of the user. If the participant is **not** part
                  of the host's account, this returns an empty string value,
                  with some exceptions. See [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for details.
                type: string
                example: jchill@example.com
              name:
                description: >-
                  Name of the user. If `anonymous` option is enabled for the
                  Q&amp;A, the participant's information will be kept anonymous
                  and the value of `name` field will be `Anonymous Attendee`.
                type: string
                example: Jill Chill
              question_details:
                type: array
                items:
                  type: object
                  properties:
                    answer:
                      description: >-
                        Answer submitted for the question. The value will be
                        'live answered' if this is a live answer.
                      type: string
                      example: Good
                    question:
                      description: Question asked during the Q&amp;A.
                      type: string
                      example: How are you?
        start_time:
          description: The webinar's start time.
          type: string
          format: date-time
          example: '2022-03-26T06:44:14Z'
        uuid:
          description: Webinar UUID.
          type: string
          example: Bznyg8KZTdCVbQxvS/oZ7w==
    WebinarsListWebinarTemplatesResponse:
      type: object
      properties:
        templates:
          description: Information about the webinar templates.
          type: array
          items:
            type: object
            properties:
              id:
                description: The webinar template's ID.
                type: string
                example: ull6574eur
              name:
                description: The webinar template's name.
                type: string
                example: Weekly Meeting Template
              type:
                description: >-
                  The webinar template type.  `1`: Webinar template    `2`:
                  Admin webinar template
                type: integer
                example: 1
        total_records:
          description: The total number of records returned.
          type: integer
          example: 1
    WebinarsCreateWebinarTemplateResponse:
      type: object
      properties:
        id:
          description: The webinar template's ID.
          type: string
          example: ull6574eur
        name:
          description: The webinar template's name.
          type: string
          example: Weekly Meeting Template
    WebinarsListWebinarsResponse:
      description: List of webinars.
      type: object
      properties:
        next_page_token:
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          type: string
          example: w7587w4eiyfsudgf
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_number:
          description: >-
            **Deprecated** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          type: integer
          example: 1
          deprecated: true
          default: 1
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 20
        webinars:
          description: List of webinar objects.
          type: array
          items:
            type: object
            properties:
              agenda:
                description: >-
                  Webinar description. The agenda length gets truncated to 250
                  characters when you list all webinars for a user. To view the
                  complete agenda, retrieve details for a single webinar, use
                  the [**Get a
                  webinar**](/docs/api-reference/zoom-api/methods#operation/webinar)
                  API.
                type: string
                example: Learn more about Zoom APIs
              created_at:
                description: The webinar's creation time.
                type: string
                format: date-time
                example: '2021-07-01T22:00:00Z'
              duration:
                description: The webinar's duration, in minutes.
                type: integer
                example: 60
              host_id:
                description: The host's ID.
                type: string
                example: x1yCzABCDEfg23HiJKl4mN
              id:
                description: The webinar ID.
                type: integer
                format: int64
                example: 1234567890
              join_url:
                description: The URL to join the webinar.
                type: string
                example: https://example.com/j/11111
              start_time:
                description: The webinar's start time.
                type: string
                format: date-time
                example: '2021-07-13T21:00:00Z'
              timezone:
                description: >-
                  The webinar's
                  [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
                type: string
                example: America/Los_Angeles
              topic:
                description: The webinar's topic.
                type: string
                example: My Webinar
              type:
                description: |-
                  The webinar type. 
                  * `5` - A webinar. 
                  * `6` - A recurring webinar without a fixed time. 
                  * `9` - A recurring webinar with a fixed time.
                type: integer
                example: 9
                default: 5
                enum:
                  - 5
                  - 6
                  - 9
              uuid:
                description: >-
                  The webinar's universally unique identifier (UUID). Each
                  webinar instance generates a webinar UUID.
                type: string
                example: 4444AAAiAAAAAiAiAiiAii==
              is_simulive:
                description: Whether the webinar is `simulive`.
                type: boolean
                example: true
    WebinarsCreateWebinarResponse:
      description: Webinar object.
      type: object
      properties:
        host_email:
          description: Email address of the meeting host.
          type: string
          format: email
          example: jchill@example.com
        host_id:
          description: ID of the user set as host of the webinar.
          type: string
          example: 30R7kT7bTIKSNUFEuH_Qlg
        id:
          description: >-
            Webinar ID in **long** format, represented as int64 data type in
            JSON. Also known as the webinar number.
          type: integer
          format: int64
          example: 95204914252
        registrants_confirmation_email:
          description: >-
            Specify whether or not registrants of this webinar should receive
            confirmation emails.
          type: boolean
          example: true
        template_id:
          description: >-
            Unique identifier of the webinar template. Use this field only if
            you would like to [schedule the webinar using an existing
            template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates#schedule).
            The value of this field can be retrieved from [**List webinar
            templates**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/listWebinarTemplates)
            API.

            You must provide the user ID of the host instead of the email
            address in the `userId` path parameter in order to use a template
            for scheduling a Webinar.
          type: string
          example: ull6574eur
        uuid:
          description: >-
            Unique identifier of a webinar. Each webinar instance will generate
            its own UUID. Ror example, after a webinar ends, a new UUID will be
            generated for the next instance of the Webinar). Once a Webinar
            ends, the value of the UUID for the same webinar will be different
            from when it was scheduled.
          type: string
          example: Bznyg8KZTdCVbQxvS/oZ7w==
        agenda:
          description: Webinar agenda.
          type: string
          example: My Webinar
        created_at:
          description: Create time.
          type: string
          format: date-time
          example: '2022-03-26T07:18:32Z'
        duration:
          description: Webinar duration.
          type: integer
          example: 60
        join_url:
          description: >-
            URL to join the webinar. Only share this URL with the users who
            should be invited to the Webinar.
          type: string
          example: https://example.com/j/11111
        occurrences:
          description: Array of occurrence objects.
          type: array
          items:
            description: >-
              Occurrence object. This object is only returned for recurring
              webinars.
            type: object
            properties:
              duration:
                description: Duration.
                type: integer
                example: 60
              occurrence_id:
                description: >-
                  Occurrence ID: Unique Identifier that identifies an occurrence
                  of a recurring webinar. [Recurring
                  webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                  can have a maximum of 50 occurrences.
                type: string
                example: '1648194360000'
              start_time:
                description: Start time.
                type: string
                format: date-time
                example: '2022-03-25T07:46:00Z'
              status:
                description: |-
                  Occurrence status. 
                   `available` - Available occurrence.  
                   `deleted` -  Deleted occurrence.
                type: string
                example: available
                enum:
                  - available
                  - deleted
        password:
          description: >-
            Webinar passcode. 


            If **Require a passcode when scheduling new meetings** setting has
            been **enabled** **and**
            [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
            for the user, the passcode field will be autogenerated for the
            Webinar in the response even if it is not provided in the API
            request.   
               
             
            **Note:** If the account owner or the admin has configured [minimum
            passcode requirement
            settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
            the passcode value provided here must meet those requirements.   
               
             If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/ma#operation/accountSettings) API.
          maxLength: 10
          type: string
          example: '123456'
        encrypted_passcode:
          description: Encrypted passcode for third party endpoints (H323/SIP).
          type: string
          example: 8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1
        h323_passcode:
          description: H.323/SIP room system passcode.
          type: string
          example: '123456'
        recurrence:
          title: Recurrence webinar
          description: >-
            Recurrence object. Use this object only for a webinar of type `9`
            i.e., a recurring webinar with fixed time. 
          required:
            - type
          type: object
          properties:
            end_date_time:
              description: >-
                Select a date when the webinar will recur before it is canceled.
                Should be in UTC time, such as 2017-11-25T12:00:00Z. Can't be
                used with `end_times`.
              type: string
              format: date-time
              example: '2022-04-02T15:59:00Z'
            end_times:
              description: >-
                Select how many times the webinar will recur before it is
                canceled. The maximum number of recurring is 60. Can't be used
                with `end_date_time`.
              maximum: 60
              type: integer
              example: 7
              default: 1
            monthly_day:
              description: >-
                Use this field **only if you're scheduling a recurring webinar
                of type** `3` to state which day in a month the webinar should
                recur. The value range is from 1 to 31.


                For instance, if you would like the webinar to recur on 23rd of
                each month, provide `23` as the value of this field and `1` as
                the value of the `repeat_interval` field. Instead, if you would
                like the webinar to recur once every three months, on 23rd of
                the month, change the value of the `repeat_interval` field to
                `3`.
              type: integer
              example: 1
            monthly_week:
              description: >-
                Use this field **only if you're scheduling a recurring webinar
                of type** `3` to state the week of the month when the webinar
                should recur. If you use this field, **you must also use the
                `monthly_week_day` field to state the day of the week when the
                webinar should recur.**   
                 `-1` - Last week of the month.  
                 `1` - First week of the month.  
                 `2` - Second week of the month.  
                 `3` - Third week of the month.  
                 `4` - Fourth week of the month.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Last week
                  - First week
                  - Second week
                  - Third week
                  - Fourth week
              enum:
                - -1
                - 1
                - 2
                - 3
                - 4
            monthly_week_day:
              description: >-
                Use this field **only if you're scheduling a recurring webinar
                of type** `3` to state a specific day in a week when the monthly
                webinar should recur. To use this field, you must also use the
                `monthly_week` field.   
                 `1` - Sunday.  
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` - Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
            repeat_interval:
              description: >-
                Define the interval when the webinar should recur. For instance,
                if you would like to schedule a Webinar that recurs every two
                months, you must set the value of this field as `2` and the
                value of the `type` parameter as `3`. 


                For a daily webinar, the maximum interval you can set is `90`
                days. For a weekly webinar, the maximum interval that you can
                set is `12` weeks. For a monthly webinar, the maximum interval
                that you can set is `3` months.
              type: integer
              example: 1
            type:
              description: |-
                Recurrence webinar types. 
                 `1` - Daily.  
                 `2` - Weekly.  
                 `3` - Monthly.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Daily
                  - Weekly
                  - Monthly
              enum:
                - 1
                - 2
                - 3
            weekly_days:
              description: >+
                Use this field **only if you're scheduling a recurring webinar
                of type** `2` to state which day(s) of the week the webinar
                should repeat.   
                  The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `1` as the value of this field.

                **Note:** If you would like the webinar to occur on multiple
                days of a week, you should provide comma separated values for
                this field. For instance, if the webinar should recur on Sundays
                and Tuesdays, provide `1,3` as the value of this field.

                  
                 `1` - Sunday.   
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` -  Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.

              type: string
              example: '1'
        settings:
          description: Webinar settings.
          type: object
          properties:
            allow_multiple_devices:
              description: Allow attendees to join from multiple devices.
              type: boolean
              example: true
            alternative_hosts:
              description: >-
                Alternative host emails or IDs. Multiple values separated by
                comma.
              type: string
              example: jchill@example.com
            alternative_host_update_polls:
              description: >-
                Whether the **Allow alternative hosts to add or edit polls**
                feature is enabled. This requires Zoom version 5.8.0 or higher.
              type: boolean
              example: true
            approval_type:
              description: |-
                `0` - Automatically approve.  
                 `1` - Manually approve.  
                 `2` - No registration required.
              type: integer
              example: 0
              extensions:
                x-enum-descriptions:
                  - Automatically Approve
                  - Manually Approve
                  - No Registration Required
              default: 2
              enum:
                - 0
                - 1
                - 2
            attendees_and_panelists_reminder_email_notification:
              description: Send reminder email to attendees and panelists.
              type: object
              properties:
                enable:
                  description: >-
                    * `true` - Send reminder email to attendees and panelists.


                    * `false` - Do not send reminder email to attendees and
                    panelists.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 hour before webinar.  
                     `2` - Send 1 day before webinar.  
                     `3` - Send 1 hour and 1 day before webinar.  
                     `4` - Send 1 week before webinar.  
                     `5` - Send 1 hour and 1 week before webinar.  
                     `6` - Send 1 day and 1 week before webinar.  
                     `7` - Send 1 hour, 1 day and 1 week before webinar.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 hour before webinar.
                      - Send 1 day before webinar.
                      - Send 1 hour and 1 day before webinar.
                      - Send 1 week before webinar.
                      - Send 1 hour and 1 week before webinar.
                      - Send 1 day and 1 week before webinar.
                      - Send 1 hour, 1 day and 1 week before webinar.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            audio:
              description: >-
                Determine how participants can join the audio portion of the
                webinar.
              type: string
              example: telephony
              extensions:
                x-enum-descriptions:
                  - Both Telephony and VoIP
                  - Telephony only
                  - VoIP only
                  - Third party audio conference
              default: both
              enum:
                - both
                - telephony
                - voip
                - thirdParty
            audio_conference_info:
              description: Third party audio conference info.
              maxLength: 2048
              type: string
              example: test
            authentication_domains:
              description: >-
                If user has configured [**Sign Into Zoom with Specified
                Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                option, this will list the domains that are authenticated.
              type: string
              example: example.com
            authentication_name:
              description: >-
                Authentication name set in the [authentication
                profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
              type: string
              example: Sign in to Zoom
            authentication_option:
              description: Webinar authentication option ID.
              type: string
              example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
            auto_recording:
              description: |-
                Automatic recording. 
                 `local` - Record on local.  
                 `cloud` -  Record on cloud.  
                 `none` - Disabled.
              type: string
              example: cloud
              extensions:
                x-enum-descriptions:
                  - Record to local device
                  - Record to cloud
                  - No Recording
              default: none
              enum:
                - local
                - cloud
                - none
            close_registration:
              description: Close registration after event date.
              type: boolean
              example: true
              deprecated: true
            contact_email:
              description: Contact email for registration
              type: string
              example: jchill@example.com
            contact_name:
              description: Contact name for registration
              type: string
              example: Jill Chill
            email_language:
              description: >-
                Set the email language to one of the following:

                `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`,
                `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
              type: string
              example: en-US
            enforce_login:
              description: >-
                Only signed in users can join this meeting.


                **This field is deprecated and will not be supported in the
                future.**

                 As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
              type: boolean
              example: true
              deprecated: true
            enforce_login_domains:
              description: >-
                Only signed in users with specified domains can join meetings.


                **This field is deprecated and will not be supported in the
                future.**

                 As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
              type: string
              example: example.com
              deprecated: true
            follow_up_absentees_email_notification:
              description: Send follow-up email to absentees.
              type: object
              properties:
                enable:
                  description: |-
                    * `true`: Send follow-up email to absentees.

                    * `false`: Do not send follow-up email to absentees.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 days after the scheduled end date.  
                     `2` - Send 2 days after the scheduled end date.  
                     `3` - Send 3 days after the scheduled end date.  
                     `4` - Send 4 days after the scheduled end date.  
                     `5` - Send 5 days after the scheduled end date.  
                     `6` - Send 6 days after the scheduled end date.  
                     `7` - Send 7 days after the scheduled end date.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 days after the scheduled end date.
                      - Send 2 days after the scheduled end date.
                      - Send 3 days after the scheduled end date.
                      - Send 4 days after the scheduled end date.
                      - Send 5 days after the scheduled end date.
                      - Send 6 days after the scheduled end date.
                      - Send 7 days after the scheduled end date.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            follow_up_attendees_email_notification:
              description: Send follow-up email to attendees.
              type: object
              properties:
                enable:
                  description: |-
                    * `true`: Send follow-up email to attendees.

                    * `false`: Do not send follow-up email to attendees.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 day after the scheduled end date.  
                     `2` - Send 2 days after the scheduled end date.  
                     `3` - Send 3 days after the scheduled end date.  
                     `4` - Send 4 days after the scheduled end date.  
                     `5` - Send 5 days after the scheduled end date.  
                     `6` - Send 6 days after the scheduled end date.  
                     `7` - Send 7 days after the scheduled end date.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 day after the scheduled end date.
                      - Send 2 days after the scheduled end date.
                      - Send 3 days after the scheduled end date.
                      - Send 4 days after the scheduled end date.
                      - Send 5 days after the scheduled end date.
                      - Send 6 days after the scheduled end date.
                      - Send 7 days after the scheduled end date.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            global_dial_in_countries:
              description: List of global dial-in countries
              type: array
              items:
                type: string
                example: US
            hd_video:
              description: Default to HD video.
              type: boolean
              example: false
              default: false
            hd_video_for_attendees:
              description: Whether HD video for attendees is enabled.
              type: boolean
              example: false
              default: false
            host_video:
              description: Start video when host joins webinar.
              type: boolean
              example: true
            language_interpretation:
              description: >-
                The webinar's [language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** This feature is only available for certain Webinar
                add-on, Education, and Business and higher plans. If this
                feature is not enabled on the host's account, this setting will
                **not** be applied to the webinar.
              type: object
              properties:
                enable:
                  description: >-
                    Enable [language
                    interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                    for the webinar.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the webinar's language interpreters.
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      languages:
                        description: >-
                          A comma-separated list of the interpreter's languages.
                          The string must contain two [country
                          IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                          For example, if the interpreter will translate from
                          English to Chinese, then this value will be `US,CN`.
                        type: string
                        example: US,CN
            sign_language_interpretation:
              description: >-
                The webinar's [sign language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** If this feature is not enabled on the host's account,
                this setting will **not** be applied to the webinar.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [sign language
                    interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                    for the webinar.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the webinar's sign language interpreters.
                  maximum: 20
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      sign_language:
                        description: |-
                          The interpreter's sign language. 

                           To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API response.
                        type: string
                        example: American
            panelist_authentication:
              description: Require panelists to authenticate to join
              type: boolean
              example: true
            meeting_authentication:
              description: Only authenticated users can join Webinar.
              type: boolean
              example: true
            add_watermark:
              description: Add watermark that identifies the viewing participant.
              type: boolean
              example: true
            add_audio_watermark:
              description: Add audio watermark that identifies the participants.
              type: boolean
              example: true
            notify_registrants:
              description: >-
                Send notification email to registrants when the host updates a
                webinar.
              type: boolean
              example: true
            on_demand:
              description: Make the webinar on-demand
              type: boolean
              example: false
              default: false
            panelists_invitation_email_notification:
              description: >-
                Send invitation email to panelists. If `false`, do not send
                invitation email to panelists.
              type: boolean
              example: true
            panelists_video:
              description: Start video when panelists join webinar.
              type: boolean
              example: true
            post_webinar_survey:
              description: >-
                Zoom will open a survey page in attendees' browsers after
                leaving the webinar
              type: boolean
              example: true
            practice_session:
              description: Enable practice session.
              type: boolean
              example: false
              default: false
            question_and_answer:
              description: >-
                [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                for webinar.
              type: object
              properties:
                allow_submit_questions:
                  description: |-
                    * `true`: Allow participants to submit questions.

                    * `false`: Do not allow submit questions.
                  type: boolean
                  example: true
                allow_anonymous_questions:
                  description: >-
                    * `true`: Allow participants to send questions without
                    providing their name to the host, co-host, and panelists..


                    * `false`: Do not allow anonymous questions.
                  type: boolean
                  example: true
                answer_questions:
                  description: >-
                    Indicate whether you want attendees to be able to view
                    answered questions only or view all questions.


                    * `only`: Attendees are able to view answered questions
                    only.


                    *  `all`: Attendees are able to view all questions submitted
                    in the Q&amp;A.
                  type: string
                  example: all
                  enum:
                    - only
                    - all
                attendees_can_comment:
                  description: >-
                    * `true`: Attendees can answer questions or leave a comment
                    in the question thread.


                    * `false`: Attendees can not answer questions or leave a
                    comment in the question thread
                  type: boolean
                  example: true
                attendees_can_upvote:
                  description: >-
                    * `true`: Attendees can click the thumbs up button to bring
                    popular questions to the top of the Q&amp;A window.


                    * `false`: Attendees can not click the thumbs up button on
                    questions.
                  type: boolean
                  example: true
                allow_auto_reply:
                  description: |-
                    If simulive webinar, 

                    * `true`: allow auto-reply to attendees. 

                    * `false`: don't allow auto-reply to the attendees.
                  type: boolean
                  example: true
                auto_reply_text:
                  description: >-
                    If `allow_auto_reply` = true, the text to be included in the
                    automatic response. 
                  type: string
                  example: >-
                    Thank you for your question. We will get back to you
                    shortly.
                enable:
                  description: >-
                    * `true`: Enable
                    [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                    for webinar.


                    * `false`: Disable Q&amp;A for webinar.
                  type: boolean
                  example: true
            registrants_confirmation_email:
              description: Send confirmation email to registrants
              type: boolean
              example: true
            registrants_email_notification:
              description: >-
                Send email notifications to registrants about approval,
                cancellation, denial of the registration. The value of this
                field must be set to true in order to use the
                `registrants_confirmation_email` field.
              type: boolean
              example: true
            registrants_restrict_number:
              description: >-
                Restrict number of registrants for a webinar. By default, it is
                set to `0`. A `0` value means that the restriction option is
                disabled. Provide a number higher than 0 to restrict the webinar
                registrants by the that number.
              maximum: 20000
              minimum: 0
              type: integer
              example: 100
              default: 0
            registration_type:
              description: >-
                Registration types. Only used for recurring webinars with a
                fixed time.  
                 `1` - Attendees register once and can attend any of the webinar sessions.  
                 `2` - Attendees need to register for each session in order to attend.  
                 `3` - Attendees register once and can choose one or more sessions to attend.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - >-
                    Attendees register once and can attend any of the
                    occurrences
                  - Attendees need to register for each occurrence to attend
                  - >-
                    Attendees register once and can choose one or more
                    occurrences to attend
              default: 1
              enum:
                - 1
                - 2
                - 3
            send_1080p_video_to_attendees:
              description: Always send 1080p video to attendees.
              type: boolean
              example: false
              default: false
            show_share_button:
              description: Show social share buttons on the registration page.
              type: boolean
              example: true
            survey_url:
              description: Survey url for post webinar survey
              type: string
              example: https://example.com
            enable_session_branding:
              description: >-
                Whether the **Webinar Session Branding** setting is enabled.
                This setting lets hosts visually customize a webinar by setting
                a session background. This also lets hosts use [Webinar Session
                Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
                to set the Virtual Background for and apply name tags to hosts,
                alternative hosts, panelists, interpreters, and speakers.
              type: boolean
              example: true
        start_time:
          description: Webinar start time in GMT/UTC.
          type: string
          format: date-time
          example: '2022-03-26T07:18:32Z'
        start_url:
          description: "  \n The `start_url` of a webinar is a URL using which a host or an alternative host can start the webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the webinar. \n\nThe expiration time for the `start_url` field listed in the response of the [**Create a webinar**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/webinarCreate) API is two hours for all regular users. \n\t\nFor users created using the `custCreate` option via the [**Create users**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the `start_url` field programmatically after expiry, call the [**Get a webinar**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/webinar) API and refer to the value of the `start_url` field in the response.  \n   \n   \n "
          type: string
          example: https://example.com/s/11111
        timezone:
          description: Time zone to format start_time.
          type: string
          example: America/Los_Angeles
        topic:
          description: Webinar topic.
          maxLength: 200
          type: string
          example: My Webinar
        tracking_fields:
          description: Tracking fields
          type: array
          items:
            type: object
            properties:
              field:
                description: Tracking fields type
                type: string
                example: field1
              value:
                description: Tracking fields value
                type: string
                example: value1
        type:
          description: |-
            Webinar Types:  
             `5` - Webinar.  
             `6` - Recurring webinar with no fixed time.  
             `9` - Recurring webinar with a fixed time.
          type: integer
          example: 5
          extensions:
            x-enum-descriptions:
              - Webinar
              - Recurring Webinar with no fixed time
              - Recurring Webinar with fixed time
          default: 5
          enum:
            - 5
            - 6
            - 9
        is_simulive:
          description: Whether the webinar is `simulive`.
          type: boolean
          example: true
        record_file_id:
          description: The previously recorded file's ID for `simulive`.
          type: string
          example: f09340e1-cdc3-4eae-9a74-98f9777ed908
    WebinarsGetDetailsResponse:
      description: Webinar object.
      type: object
      properties:
        host_email:
          description: Email address of the meeting host.
          type: string
          format: email
          example: jchill@example.com
        host_id:
          description: ID of the user set as host of webinar.
          type: string
          example: 30R7kT7bTIKSNUFEuH_Qlg
        id:
          description: >-
            Webinar ID in **long** format(represented as int64 data type in
            JSON), also known as the webinar number.
          type: integer
          format: int64
          example: 97871060099
        uuid:
          description: >+
            Unique webinar ID. Each webinar instance will generate its own
            webinar UUID. After a webinar ends, a new UUID is generated for the
            next instance of the webinar. Retrieve a list of UUIDs from past
            webinar instances using the [**List past webinar
            instances**](/docs/api-reference/zoom-api/methods#operation/pastWebinars)
            API. [Double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            your UUID when using it for API calls if the UUID begins with a `/`
            or contains `//` in it.

          type: string
          example: m3WqMkvuRXyYqH+eKWhk9w==
        agenda:
          description: Webinar agenda.
          type: string
          example: My webinar
        created_at:
          description: Create time.
          type: string
          format: date-time
          example: '2022-03-26T07:18:32Z'
        duration:
          description: Webinar duration.
          type: integer
          example: 60
        join_url:
          description: >-
            URL to join the webinar. Only share this URL with the users who
            should be invited to the webinar.
          type: string
          example: https://example.com/j/11111
        occurrences:
          description: Array of occurrence objects.
          type: array
          items:
            description: >-
              Occurrence object. This object is only returned for recurring
              webinars.
            type: object
            properties:
              duration:
                description: Duration.
                type: integer
                example: 60
              occurrence_id:
                description: >-
                  Occurrence ID: Unique Identifier that identifies an occurrence
                  of a recurring webinar. [Recurring
                  webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                  can have a maximum of 50 occurrences.
                type: string
                example: '1648194360000'
              start_time:
                description: Start time.
                type: string
                format: date-time
                example: '2022-03-25T07:46:00Z'
              status:
                description: |-
                  Occurrence status: 
                   `available` - Available occurrence.  
                   `deleted` -  Deleted occurrence.
                type: string
                example: available
                enum:
                  - available
                  - deleted
        password:
          description: >-
            Webinar passcode. 


            If **Require a passcode when scheduling new meetings** setting has
            been **enabled** **and**
            [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
            for the user, the passcode field will be autogenerated for the
            Webinar in the response even if it is not provided in the API
            request.   
               
             
            **Note:** If the account owner or the admin has configured [minimum
            passcode requirement
            settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
            the passcode value provided here must meet those requirements.   
               
             If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/docs/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/docs/api-reference/zoom-api/ma#operation/accountSettings) API.
          maxLength: 10
          type: string
          example: '123456'
        encrypted_passcode:
          description: Encrypted passcode for third party endpoints (H323/SIP).
          type: string
          example: 8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1
        h323_passcode:
          description: H.323/SIP room system passcode.
          type: string
          example: '123456'
        recurrence:
          title: Recurrence webinar
          description: >-
            Recurrence object. Use this object only for a webinar of type `9`
            i.e., a recurring webinar with fixed time. 
          required:
            - type
          type: object
          properties:
            end_date_time:
              description: >-
                Select a date when the webinar will recur before it is canceled.
                Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be
                used with `end_times`.)
              type: string
              format: date-time
              example: '2022-04-02T15:59:00Z'
            end_times:
              description: >-
                Select how many times the webinar will recur before it is
                canceled. The maximum number of recurring is 60. Cannot be used
                with `end_date_time`.
              maximum: 60
              type: integer
              example: 7
              default: 1
            monthly_day:
              description: >-
                Use this field **only if you're scheduling a recurring webinar
                of type** `3` to state which day in a month, the webinar should
                recur. The value range is from 1 to 31.


                For instance, if you would like the webinar to recur on 23rd of
                each month, provide `23` as the value of this field and `1` as
                the value of the `repeat_interval` field. Instead, if you would
                like the webinar to recur once every three months, on 23rd of
                the month, change the value of the `repeat_interval` field to
                `3`.
              type: integer
              example: 1
            monthly_week:
              description: >-
                Use this field **only if you're scheduling a recurring webinar
                of type** `3` to state the week of the month when the webinar
                should recur. If you use this field, **you must also use the
                `monthly_week_day` field to state the day of the week when the
                webinar should recur.**   
                 `-1` - Last week of the month.  
                 `1` - First week of the month.  
                 `2` - Second week of the month.  
                 `3` - Third week of the month.  
                 `4` - Fourth week of the month.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Last week
                  - First week
                  - Second week
                  - Third week
                  - Fourth week
              enum:
                - -1
                - 1
                - 2
                - 3
                - 4
            monthly_week_day:
              description: >-
                Use this field **only if you're scheduling a recurring webinar
                of type** `3` to state a specific day in a week when the monthly
                webinar should recur. To use this field, you must also use the
                `monthly_week` field.   
                 `1` - Sunday.  
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` - Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
            repeat_interval:
              description: >-
                Define the interval when the webinar should recur. For instance,
                to schedule a webinar that recurs every two months, you must set
                the value of this field as `2` and the value of the `type`
                parameter as `3`. 


                For a daily webinar, the maximum interval you can set is `90`
                days. For a weekly webinar, the maximum interval that you can
                set is `12` weeks. For a monthly webinar, the maximum interval
                that you can set is `3` months.
              type: integer
              example: 1
            type:
              description: |-
                Recurrence webinar types.  
                 `1` - Daily.  
                 `2` - Weekly.  
                 `3` - Monthly.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - Daily
                  - Weekly
                  - Monthly
              enum:
                - 1
                - 2
                - 3
            weekly_days:
              description: >+
                Use this field **only if you're scheduling a recurring webinar
                of type** `2` to state which day(s) of the week the webinar
                should repeat.   
                  The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `1` as the value of this field.    
                   
                  **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `1,3` as the value of this field.

                  
                 `1`  - Sunday.   
                 `2` - Monday.  
                 `3` - Tuesday.  
                 `4` -  Wednesday.  
                 `5` -  Thursday.  
                 `6` - Friday.  
                 `7` - Saturday.

              type: string
              example: '1'
        settings:
          description: Webinar settings.
          type: object
          properties:
            allow_multiple_devices:
              description: Allow attendees to join from multiple devices.
              type: boolean
              example: true
            alternative_hosts:
              description: >-
                Alternative host emails or IDs. Multiple values separated by
                comma.
              type: string
              example: jchill@example.com
            alternative_host_update_polls:
              description: >-
                Whether the **Allow alternative hosts to add or edit polls**
                feature is enabled. This requires Zoom version 5.8.0 or higher.
              type: boolean
              example: true
            approval_type:
              description: |-
                `0` - Automatically approve.  
                 `1` - Manually approve.  
                 `2` - No registration required.
              type: integer
              example: 0
              extensions:
                x-enum-descriptions:
                  - Automatically Approve
                  - Manually Approve
                  - No Registration Required
              default: 2
              enum:
                - 0
                - 1
                - 2
            attendees_and_panelists_reminder_email_notification:
              description: Send reminder email to attendees and panelists.
              type: object
              properties:
                enable:
                  description: >-
                    * `true` - Send reminder email to attendees and panelists.


                    * `false` - Do not send reminder email to attendees and
                    panelists.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 hour before webinar.  
                     `2` - Send 1 day before webinar.  
                     `3` - Send 1 hour and 1 day before webinar.  
                     `4` - Send 1 week before webinar.  
                     `5` - Send 1 hour and 1 week before webinar.  
                     `6` - Send 1 day and 1 week before webinar.  
                     `7` - Send 1 hour, 1 day and 1 week before webinar.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 hour before webinar.
                      - Send 1 day before webinar.
                      - Send 1 hour and 1 day before webinar.
                      - Send 1 week before webinar.
                      - Send 1 hour and 1 week before webinar.
                      - Send 1 day and 1 week before webinar.
                      - Send 1 hour, 1 day and 1 week before webinar.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            audio:
              description: >-
                Determine how participants can join the audio portion of the
                webinar.
              type: string
              example: telephony
              extensions:
                x-enum-descriptions:
                  - Both Telephony and VoIP
                  - Telephony only
                  - VoIP only
                  - Third party audio conference
              default: both
              enum:
                - both
                - telephony
                - voip
                - thirdParty
            audio_conference_info:
              description: Third party audio conference info.
              maxLength: 2048
              type: string
              example: test
            authentication_domains:
              description: >-
                If user has configured [**Sign Into Zoom with Specified
                Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                option, this will list the domains that are authenticated.
              type: string
              example: example.com
            authentication_name:
              description: >-
                Authentication name set in the [authentication
                profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
              type: string
              example: Sign in to Zoom
            authentication_option:
              description: Webinar authentication option id.
              type: string
              example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
            auto_recording:
              description: |-
                Automatic recording. 
                 `local` - Record on local.  
                 `cloud` -  Record on cloud.  
                 `none` - Disabled.
              type: string
              example: cloud
              extensions:
                x-enum-descriptions:
                  - Record to local device
                  - Record to cloud
                  - No Recording
              default: none
              enum:
                - local
                - cloud
                - none
            close_registration:
              description: Close registration after event date.
              type: boolean
              example: true
              deprecated: true
            contact_email:
              description: Contact email for registration.
              type: string
              example: jchill@example.com
            contact_name:
              description: Contact name for registration.
              type: string
              example: Jill Chill
            email_language:
              description: >-
                Set the email language. The only options are

                `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`,
                `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
              type: string
              example: en-US
            enforce_login:
              description: >-
                Only signed in users can join this meeting.


                **This field is deprecated and will not be supported in the
                future.**    

                 As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
              type: boolean
              example: true
              deprecated: true
            enforce_login_domains:
              description: >-
                Only signed in users with specified domains can join meetings.


                **This field is deprecated and will not be supported in the
                future.**    

                 As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
              type: string
              example: example.com
              deprecated: true
            follow_up_absentees_email_notification:
              description: Send follow-up email to absentees.
              type: object
              properties:
                enable:
                  description: |-
                    * `true` - Send follow-up email to absentees.

                    * `false` - Do not send follow-up email to absentees.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 days after the scheduled end date.  
                     `2` - Send 2 days after the scheduled end date.  
                     `3` - Send 3 days after the scheduled end date.  
                     `4` - Send 4 days after the scheduled end date.  
                     `5` - Send 5 days after the scheduled end date.  
                     `6` - Send 6 days after the scheduled end date.  
                     `7` - Send 7 days after the scheduled end date.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 days after the scheduled end date.
                      - Send 2 days after the scheduled end date.
                      - Send 3 days after the scheduled end date.
                      - Send 4 days after the scheduled end date.
                      - Send 5 days after the scheduled end date.
                      - Send 6 days after the scheduled end date.
                      - Send 7 days after the scheduled end date.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            follow_up_attendees_email_notification:
              description: Send follow-up email to attendees.
              type: object
              properties:
                enable:
                  description: |-
                    * `true` - Send follow-up email to attendees.

                    * `false` - Do not send follow-up email to attendees.
                  type: boolean
                  example: true
                type:
                  description: |-
                    `0` - No plan.  
                     `1` - Send 1 day after the scheduled end date.  
                     `2` - Send 2 days after the scheduled end date.  
                     `3` - Send 3 days after the scheduled end date.  
                     `4` - Send 4 days after the scheduled end date.  
                     `5` - Send 5 days after the scheduled end date.  
                     `6` - Send 6 days after the scheduled end date.  
                     `7` - Send 7 days after the scheduled end date.
                  type: integer
                  example: 0
                  extensions:
                    x-enum-descriptions:
                      - Send 1 day after the scheduled end date.
                      - Send 2 days after the scheduled end date.
                      - Send 3 days after the scheduled end date.
                      - Send 4 days after the scheduled end date.
                      - Send 5 days after the scheduled end date.
                      - Send 6 days after the scheduled end date.
                      - Send 7 days after the scheduled end date.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
            global_dial_in_countries:
              description: List of global dial-in countries
              type: array
              items:
                type: string
                example: US
            hd_video:
              description: Default to HD video.
              type: boolean
              example: false
              default: false
            hd_video_for_attendees:
              description: Whether HD video for attendees is enabled.
              type: boolean
              example: false
              default: false
            host_video:
              description: Start video when host joins webinar.
              type: boolean
              example: true
            language_interpretation:
              description: >-
                The webinar's [language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** This feature is only available for certain Webinar
                add-on, Education, and Business and higher plans. If this
                feature is not enabled on the host's account, this setting will
                **not** be applied to the webinar.
              type: object
              properties:
                enable:
                  description: >-
                    Enable [language
                    interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                    for the webinar.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the webinar's language interpreters.
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      languages:
                        description: >-
                          A comma-separated list of the interpreter's languages.
                          The string must contain two [country
                          IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                          For example, if the interpreter will translate from
                          English to Chinese, then this value will be `US,CN`.
                        type: string
                        example: US,CN
            sign_language_interpretation:
              description: >-
                The webinar's [sign language interpretation
                settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                Make sure to add the language in the web portal in order to use
                it in the API. See link for details. 


                **Note:** If this feature is not enabled on the host's account,
                this setting will **not** be applied to the webinar.
              type: object
              properties:
                enable:
                  description: >-
                    Whether to enable [sign language
                    interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                    for the webinar.
                  type: boolean
                  example: true
                interpreters:
                  description: Information about the webinar's sign language interpreters.
                  maximum: 20
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: The interpreter's email address.
                        type: string
                        format: email
                        example: interpreter@example.com
                      sign_language:
                        description: |-
                          The interpreter's sign language. 

                           To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                        type: string
                        example: American
            panelist_authentication:
              description: Require panelists to authenticate to join.
              type: boolean
              example: true
            meeting_authentication:
              description: Only authenticated users can join the webinar.
              type: boolean
              example: true
            add_watermark:
              description: Add watermark that identifies the viewing participant.
              type: boolean
              example: true
            add_audio_watermark:
              description: Add audio watermark that identifies the participants.
              type: boolean
              example: true
            notify_registrants:
              description: >-
                Send notification email to registrants when the host updates a
                webinar.
              type: boolean
              example: true
            on_demand:
              description: Make the webinar on-demand.
              type: boolean
              example: false
              default: false
            panelists_invitation_email_notification:
              description: >-
                Send invitation email to panelists. If `false`, do not send
                invitation email to panelists.
              type: boolean
              example: true
            panelists_video:
              description: Start video when panelists join webinar.
              type: boolean
              example: true
            post_webinar_survey:
              description: >-
                Zoom will open a survey page in attendees' browsers after
                leaving the webinar.
              type: boolean
              example: true
            practice_session:
              description: Enable practice session.
              type: boolean
              example: false
              default: false
            question_and_answer:
              description: >-
                [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                for webinar.
              type: object
              properties:
                allow_submit_questions:
                  description: |-
                    * `true` - Allow participants to submit questions.

                    * `false` - Do not allow submit questions.
                  type: boolean
                  example: true
                allow_anonymous_questions:
                  description: >-
                    * `true` - Allow participants to send questions without
                    providing their name to the host, co-host, and panelists.


                    * `false` - Do not allow anonymous questions.
                  type: boolean
                  example: true
                answer_questions:
                  description: >-
                    Indicate whether you want attendees to be able to view
                    answered questions only or view all questions.


                    * `only` - Attendees are able to view answered questions
                    only.


                    *  `all` - Attendees are able to view all questions
                    submitted in the Q&amp;A.
                  type: string
                  example: all
                  enum:
                    - only
                    - all
                attendees_can_comment:
                  description: >-
                    * `true` - Attendees can answer questions or leave a comment
                    in the question thread.


                    * `false` - Attendees can not answer questions or leave a
                    comment in the question thread
                  type: boolean
                  example: true
                attendees_can_upvote:
                  description: >-
                    * `true` - Attendees can click the thumbs up button to bring
                    popular questions to the top of the Q&amp;A window.


                    * `false` - Attendees can not click the thumbs up button on
                    questions.
                  type: boolean
                  example: true
                allow_auto_reply:
                  description: |-
                    If simulive webinar, 

                    * `true` - allow auto-reply to attendees. 

                    * `false` - don't allow auto-reply to the attendees.
                  type: boolean
                  example: true
                auto_reply_text:
                  description: >-
                    If `allow_auto_reply` = true, the text to be included in the
                    automatic response. 
                  type: string
                  example: >-
                    Thank you for your question. We will get back to you
                    shortly.
                enable:
                  description: >-
                    * `true`: Enable
                    [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                    for webinar.


                    * `false`: Disable Q&amp;A for webinar.
                  type: boolean
                  example: true
            registrants_confirmation_email:
              description: Send confirmation email to registrants
              type: boolean
              example: true
            registrants_email_notification:
              description: >-
                Send email notifications to registrants about approval,
                cancellation, denial of the registration. The value of this
                field must be set to true in order to use the
                `registrants_confirmation_email` field.
              type: boolean
              example: true
            registrants_restrict_number:
              description: >-
                Restrict number of registrants for a webinar. By default, it is
                set to `0`. A `0` value means that the restriction option is
                disabled. Provide a number higher than 0 to restrict the webinar
                registrants by the that number.
              maximum: 20000
              minimum: 0
              type: integer
              example: 100
              default: 0
            registration_type:
              description: >-
                Registration types. Only used for recurring webinars with a
                fixed time.  
                 `1` - Attendees register once and can attend any of the webinar sessions.  
                 `2` - Attendees need to register for each session in order to attend.  
                 `3` - Attendees register once and can choose one or more sessions to attend.
              type: integer
              example: 1
              extensions:
                x-enum-descriptions:
                  - >-
                    Attendees register once and can attend any of the
                    occurrences
                  - Attendees need to register for each occurrence to attend
                  - >-
                    Attendees register once and can choose one or more
                    occurrences to attend
              default: 1
              enum:
                - 1
                - 2
                - 3
            send_1080p_video_to_attendees:
              description: Always send 1080p video to attendees.
              type: boolean
              example: false
              default: false
            show_share_button:
              description: Show social share buttons on the registration page.
              type: boolean
              example: true
            survey_url:
              description: Survey URL for post webinar survey.
              type: string
              example: https://example.com
            enable_session_branding:
              description: >-
                Whether the **Webinar Session Branding** setting is enabled.
                This setting lets hosts visually customize a webinar by setting
                a session background. This also lets hosts use [webinar session
                branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
                to set the Virtual Background for and apply name tags to hosts,
                alternative hosts, panelists, interpreters, and speakers.
              type: boolean
              example: true
        start_time:
          description: Webinar start time in GMT/UTC.
          type: string
          format: date-time
          example: '2022-03-26T07:18:32Z'
        start_url:
          description: "  \n The `start_url` of a webinar is a URL using which a host or an alternative host can start the webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the webinar. \n\nThe expiration time for the `start_url` field listed in the response of the [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API is two hours for all regular users. \n\t\nFor users created using the `custCreate` option via the [**Create users**](/docs/api-reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the `start_url` field programmatically (after expiry), you must call the [**Get a webinar**](/docs/api-reference/zoom-api/methods#operation/webinar) API and refer to the value of the `start_url` field in the response.\n\n\n "
          type: string
          example: https://example.com/s/11111
        timezone:
          description: Time zone to format `start_time`.
          type: string
          example: America/Los_Angeles
        topic:
          description: Webinar topic.
          maxLength: 200
          type: string
          example: My Webinar
        tracking_fields:
          description: Tracking fields.
          type: array
          items:
            type: object
            properties:
              field:
                description: Tracking fields type.
                type: string
                example: field1
              value:
                description: Tracking fields value.
                type: string
                example: value1
        type:
          description: |-
            Webinar types. 
             `5` - Webinar.  
             `6` - Recurring webinar with no fixed time.  
             `9` - Recurring webinar with a fixed time.
          type: integer
          example: 5
          extensions:
            x-enum-descriptions:
              - Webinar
              - Recurring Webinar with no fixed time
              - Recurring Webinar with fixed time
          default: 5
          enum:
            - 5
            - 6
            - 9
        is_simulive:
          description: Whether the webinar is `simulive`.
          type: boolean
          example: true
        record_file_id:
          description: The previously recorded file's ID for `simulive`.
          type: string
          example: f09340e1-cdc3-4eae-9a74-98f9777ed908
    WebinarsCreateBatchRegistrantsResponse:
      type: object
      properties:
        registrants:
          type: array
          items:
            type: object
            properties:
              email:
                description: The registrant's email address.
                type: string
                example: jchill@example.com
              join_url:
                description: Unique URL using which registrant can join the webinar.
                type: string
                example: https://example.com/j/11111
              registrant_id:
                description: The registrant's unique identifier.
                type: string
                example: '-rOym-zdTHOdbT3A7u7u5g'
    WebinarsGetSessionBrandingResponse:
      description: Information about the webinar's sessions branding.
      type: object
      properties:
        wallpaper:
          description: Information about the webinar's [Wallpaper] file.
          type: object
          properties:
            id:
              description: The wallpaper's file ID.
              type: string
              example: zazQjwDuQkS3Q2EprNd7jQ
        virtual_backgrounds:
          description: >-
            Information about the webinar's [Virtual
            Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background)
            files.
          type: array
          items:
            type: object
            properties:
              id:
                description: The Virtual Background's file ID.
                type: string
                example: zazQjwDuQkS3Q2EprNd7jQ
              name:
                description: The Virtual Background's file name.
                type: string
                example: beach.jpg
              is_default:
                description: Whether the file is the default Virtual Background file.
                type: boolean
                example: true
        name_tags:
          description: Information about the webinar's name tag.
          type: array
          items:
            type: object
            properties:
              id:
                description: The name tag's ID.
                type: string
                example: zazQjwDuQkS3Q2EprNd7jQ
              name:
                description: The name tag's name.
                type: string
                example: name
              text_color:
                description: The name tag's text color.
                type: string
                example: 0e72ed
              accent_color:
                description: The name tag's accent color.
                type: string
                example: 0e72ed
              background_color:
                description: The name tag's background color.
                type: string
                example: 0e72ed
              is_default:
                description: Whether the file is the default name tag or not.
                type: boolean
                example: true
    WebinarsCreateBrandingNameTagResponse:
      type: object
      properties:
        id:
          description: The name tag's ID.
          type: string
          example: J0sFXN2PSOCGrqTqLRwgAQ
        name:
          description: The name tag's name.
          type: string
          example: name
        text_color:
          description: The name tag's text color.
          type: string
          example: 0e72ed
        accent_color:
          description: The name tag's accent color.
          type: string
          example: 0e72ed
        background_color:
          description: The name tag's background_color color.
          type: string
          example: 0e72ed
        is_default:
          description: Whether the name tag is the default name tag or not.
          type: boolean
          example: true
    WebinarsUploadBrandingVirtualBackgroundResponse:
      type: object
      properties:
        id:
          description: The Virtual Background file's ID.
          type: string
          example: J0sFXN2PSOCGrqTqLRwgAQ
        name:
          description: The Virtual Background file's name.
          type: string
          example: beach.jpg
        is_default:
          description: Whether the file is the default Virtual Background file.
          type: boolean
          example: true
        size:
          description: The Virtual Background file's size, in bytes.
          type: integer
          example: 524288
        type:
          description: |-
            The Virtual Background file's file type: 
            * `image` &mdash; An image file.
          type: string
          example: image
          enum:
            - image
    WebinarsUploadBrandingWallpaperResponse:
      type: object
      properties:
        id:
          description: The wallpaper file's ID.
          type: string
          example: zazQjwDuQkS3Q2EprNd7jQ
        name:
          description: The wallpaper file's name.
          type: string
          example: logo.jpg
        size:
          description: The wallpaper file's size, in bytes.
          type: integer
          example: 262144
        type:
          description: |-
            The wallpaper file's file type: 
            * `image` &mdash; An image file.
          type: string
          example: image
          enum:
            - image
    WebinarsCreateInviteLinksResponse:
      title: Invite Links
      description: Invite links response.
      type: object
      properties:
        attendees:
          description: The attendee list.
          type: array
          items:
            type: object
            properties:
              join_url:
                description: The URL to join the meeting.
                type: string
                example: https://example.com/j/11111
              name:
                description: The user's display name.
                type: string
                example: Jill Chill
    WebinarsJoinTokenLiveStreamingResponse:
      description: Information about the webinar's join token.
      type: object
      properties:
        expire_in:
          description: >-
            The number of seconds the join token is valid for before it expires.
            This value always returns `120`.
          type: integer
          format: int64
          example: 120
          enum:
            - 120
        token:
          description: The join token.
          type: string
          example: 2njt50mj
    WebinarsGetMeetingArchiveTokenForLocalArchivingResponse:
      description: Information about the webinar's local archive token.
      type: object
      properties:
        expire_in:
          description: >-
            The number of seconds the archive token is valid for before it
            expires. This value always returns `120`.
          type: integer
          format: int64
          example: 120
          enum:
            - 120
        token:
          description: The archive token.
          type: string
          example: 2njt50mj
    WebinarsGetJoinTokenLocalRecordingResponse:
      description: Information about the webinar's local recorder join token.
      type: object
      properties:
        expire_in:
          description: >-
            The number of seconds the join token is valid for before it expires.
            This value always returns `120`.
          type: integer
          format: int64
          example: 120
          enum:
            - 120
        token:
          description: The join token.
          type: string
          example: 2njt50mj
    WebinarsGetLiveStreamDetailsResponse:
      type: object
      properties:
        page_url:
          description: >-
            Live streaming page URL. This is the URL using which anyone can view
            the live stream of the webinar.
          type: string
          example: https://example.com/livestream/123
        stream_key:
          description: Stream key.
          type: string
          example: contact-it@example.com
        stream_url:
          description: Stream URL.
          type: string
          example: https://example.com/livestream
        resolution:
          description: >-
            The number of pixels in each dimension that the video camera can
            display.
          type: string
          example: 720p
    WebinarsListPanelistsResponse:
      title: Panelist List
      description: Webinar panelist.
      type: object
      properties:
        panelists:
          description: List of panelist objects.
          type: array
          items:
            description: Panelist base object.
            type: object
            properties:
              id:
                description: Panelist's ID.
                type: string
                example: Tg2b6GhcQKKbV7nSCbDKug
              email:
                description: >-
                  Panelist's email. See [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for return value details.
                type: string
                format: email
                example: jchill@example.com
              name:
                description: >-
                  The panelist's full name.


                  **Note** This value cannot exceed more than 12 Chinese
                  characters.
                type: string
                example: Jill Chill
              join_url:
                description: Join URL.
                type: string
                example: https://example.com/j/11111
              virtual_background_id:
                description: The virtual background's ID.
                type: string
                example: xHhPyb8ERMCmiC5njPjFdQ
              name_tag_id:
                description: The name tag ID to bind.
                type: string
                example: xHhPyb8ERMCmiC5njPjFdQ
              name_tag_name:
                description: The panelist's name to display in the name tag.
                type: string
                example: name
              name_tag_pronouns:
                description: The pronouns to display in the name tag.
                type: string
                example: pronouns
              name_tag_description:
                description: The description for the name tag, such as the person's title).
                type: string
                example: description
        total_records:
          description: Total records.
          type: integer
          example: 1
    WebinarsAddPanelistsResponse:
      type: object
      properties:
        id:
          description: Webinar Id.
          type: string
          example: '95204914252'
        updated_at:
          description: The time when the panelist was added.
          type: string
          format: date-time
          example: '2022-03-26T07:30:16Z'
    WebinarsListPollsResponse:
      title: Poll List
      description: Poll List
      type: object
      properties:
        polls:
          description: Array of Polls
          type: array
          items:
            title: Meeting and Webinar Polling Object
            description: Information about meeting and webinar polling.
            type: object
            properties:
              title:
                description: The poll's title, up to 64 characters.
                maxLength: 64
                type: string
                example: Learn something new
              id:
                description: ID of Poll
                type: string
                example: QalIoKWLTJehBJ8e1xRrbQ
              status:
                description: |-
                  Status of Poll:  
                   `notstart` - Poll not started  
                   `started` - Poll started  
                   `ended` - Poll ended  
                   `sharing` - Sharing poll results
                type: string
                example: notstart
                extensions:
                  x-enum-descriptions:
                    - Poll not start
                    - Poll started
                    - Poll ended
                    - Poll is sharing
                enum:
                  - notstart
                  - started
                  - ended
                  - sharing
              anonymous:
                description: >-
                  Allow meeting participants to answer poll questions
                  anonymously. 


                  This value defaults to `false`.
                type: boolean
                example: true
                default: false
              poll_type:
                description: >-
                  The type of poll: 

                  * `1` &mdash; Poll. 

                  * `2` &mdash; Advanced Poll. This feature must be enabled in
                  your Zoom account. 

                  * `3` &mdash; Quiz. This feature must be enabled in your Zoom
                  account. 

                   This value defaults to `1`.
                type: integer
                example: 2
                enum:
                  - 1
                  - 2
                  - 3
              questions:
                description: Information about the poll's questions.
                type: array
                items:
                  type: object
                  properties:
                    answer_max_character:
                      description: >-
                        The allowed maximum number of characters. This field
                        only applies to `short_answer` and `long_answer` polls: 

                        * For `short_answer` polls, a maximum of 500
                        characters. 

                        * For `long_answer` polls, a maximum of 2,000
                        characters.
                      type: integer
                      example: 200
                    answer_min_character:
                      description: >-
                        The allowed minimum number of characters. This field
                        only applies to `short_answer` and `long_answer` polls.
                        You must provide at least a **one** character minimum
                        value.
                      minimum: 1
                      type: integer
                      example: 1
                    answer_required:
                      description: >-
                        Whether participants must answer the question: 

                        * `true` &mdash; The participant must answer the
                        question. 

                        * `false` &mdash; The participant does not need to
                        answer the question. 


                        **Note:** 

                        * When the poll's `type` value is `1` (Poll), this value
                        defaults to `true`. 

                        * When the poll's `type` value is the `2` (Advanced
                        Poll) or `3` (Quiz) values, this value defaults to
                        `false`.
                      type: boolean
                      example: false
                      default: false
                    answers:
                      description: >-
                        The poll question's available answers. This field
                        requires a **minimum** of two answers. 


                        * For `single` and `multiple` polls, you can only
                        provide a maximum of 10 answers. 

                        * For `matching` polls, you can only provide a maximum
                        of 16 answers. 

                        * For `rank_order` polls, you can only provide a maximum
                        of seven answers.
                      minItems: 2
                      type: array
                      items:
                        type: string
                        example: Extremely useful
                    case_sensitive:
                      description: >-
                        Whether the correct answer is case sensitive. This field
                        only applies to `fill_in_the_blank` polls: 

                        * `true` &mdash; The answer is case-sensitive. 

                        * `false` &mdash; The answer is not case-sensitive. 


                        This value defaults to `false`.
                      type: boolean
                      example: false
                      default: false
                    name:
                      description: >-
                        The poll question, up to 255 characters. 


                        For `fill_in_the_blank` polls, this field is the poll's
                        question. For each value that the user must fill in,
                        ensure that there are the same number of `right_answers`
                        values.
                      maxLength: 255
                      type: string
                      example: How useful was this meeting?
                    prompts:
                      description: >-
                        Information about the prompt questions. This field only
                        applies to `matching` and `rank_order` polls. You
                        **must** provide a minimum of two prompts, up to a
                        maximum of 10 prompts.
                      type: array
                      items:
                        type: object
                        properties:
                          prompt_question:
                            description: The question prompt's title.
                            type: string
                            example: How are you?
                          prompt_right_answers:
                            description: >-
                              The question prompt's correct answers: 

                              * For `matching` polls, you must provide a minimum
                              of two correct answers, up to a maximum of 10
                              correct answers. 

                              * For `rank_order` polls, you can only provide one
                              correct answer.
                            type: array
                            items:
                              type: string
                              example: Good
                    rating_max_label:
                      description: >-
                        The high score label used for the `rating_max_value`
                        field. 


                        This field only applies to the `rating_scale` poll.
                      type: string
                      example: Extremely Likely
                    rating_max_value:
                      description: >-
                        The rating scale's maximum value, up to a maximum value
                        of 10. 


                        This field only applies to the `rating_scale` poll.
                      maximum: 10
                      type: integer
                      example: 4
                    rating_min_label:
                      description: >-
                        The low score label used for the `rating_min_value`
                        field. 


                        This field only applies to the `rating_scale` poll.
                      type: string
                      example: Not likely
                    rating_min_value:
                      description: >-
                        The rating scale's minimum value. This value cannot be
                        less than zero. 


                        This field only applies to the `rating_scale` poll.
                      minimum: 0
                      type: integer
                      example: 0
                    right_answers:
                      description: >-
                        The poll question's correct answer(s). This field is
                        **required** if the poll's `type` value is `3` (Quiz). 

                         For `single` and `matching` polls, this field only accepts one answer.
                      minItems: 1
                      type: array
                      items:
                        type: string
                        example: Good
                    show_as_dropdown:
                      description: >-
                        Whether to display the radio selection as a drop-down
                        box: 

                        * `true` &mdash; Show as a drop-down box. 

                        * `false` &mdash; Do not show as a drop-down box. 


                        This value defaults to `false`.
                      type: boolean
                      example: false
                      default: false
                    type:
                      description: |-
                        The poll's question and answer type: 
                        * `single` &mdash; Single choice. 
                        * `multiple` &mdash; Multiple choice. 
                        * `matching` &mdash; Matching. 
                        * `rank_order` &mdash; Rank order. 
                        * `short_answer` &mdash; Short answer. 
                        * `long_answer` &mdash; Long answer. 
                        * `fill_in_the_blank` &mdash; Fill in the blank. 
                        * `rating_scale` &mdash; Rating scale.
                      type: string
                      example: single
                      extensions:
                        x-enum-descriptions:
                          - Single choice
                          - Multiple choice
                          - Matching
                          - Rank order
                          - Short answer
                          - Long answer
                          - Fill in the blank
                          - Rating scale
                      enum:
                        - single
                        - multiple
                        - matching
                        - rank_order
                        - short_answer
                        - long_answer
                        - fill_in_the_blank
                        - rating_scale
        total_records:
          description: The number of all records available across pages
          type: integer
          example: 1
    WebinarsCreatePollResponse:
      title: Meeting and webinar polling object.
      description: Information about meeting and webinar polling.
      type: object
      properties:
        title:
          description: The poll's title, up to 64 characters.
          maxLength: 64
          type: string
          example: Learn something new
        id:
          description: Webinar Poll ID
          type: string
          example: QalIoKWLTJehBJ8e1xRrbQ
        status:
          description: |-
            Status of the Webinar Poll:  
             `notstart` - Poll not started  
             `started` - Poll started  
             `ended` - Poll ended  
             `sharing` - Sharing poll results
          type: string
          example: notstart
          extensions:
            x-enum-descriptions:
              - Poll not start
              - Poll started
              - Poll ended
              - Poll is sharing
          enum:
            - notstart
            - started
            - ended
            - sharing
        anonymous:
          description: |-
            Allow meeting participants to answer poll questions anonymously. 

            This value defaults to `false`.
          type: boolean
          example: true
          default: false
        poll_type:
          description: >-
            The type of poll. 

            * `1` - Poll. 

            * `2` - Advanced Poll. This feature must be enabled in your Zoom
            account. 

            * `3` - Quiz. This feature must be enabled in your Zoom account. 

             This value defaults to `1`.
          type: integer
          example: 2
          enum:
            - 1
            - 2
            - 3
        questions:
          description: Information about the poll's questions.
          type: array
          items:
            type: object
            properties:
              answer_max_character:
                description: >-
                  The allowed maximum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls: 

                  * For `short_answer` polls, a maximum of 500 characters. 

                  * For `long_answer` polls, a maximum of 2,000 characters.
                type: integer
                example: 200
              answer_min_character:
                description: >-
                  The allowed minimum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls. You must
                  provide at least a **one** character minimum value.
                minimum: 1
                type: integer
                example: 1
              answer_required:
                description: >-
                  Whether participants must answer the question. 

                  * `true` - The participant must answer the question. 

                  * `false` - The participant does not need to answer the
                  question. 


                  **Note:** 

                  * When the poll's `type` value is `1` (Poll), this value
                  defaults to `true`. 

                  * When the poll's `type` value is the `2` (Advanced Poll) or
                  `3` (Quiz) values, this value defaults to `false`.
                type: boolean
                example: false
                default: false
              answers:
                description: >-
                  The poll question's available answers. This field requires a
                  **minimum** of two answers. 


                  * For `single` and `multiple` polls, you can only provide a
                  maximum of 10 answers. 

                  * For `matching` polls, you can only provide a maximum of 16
                  answers. 

                  * For `rank_order` polls, you can only provide a maximum of
                  seven answers.
                minItems: 2
                type: array
                items:
                  type: string
                  example: Extremely useful
              case_sensitive:
                description: >-
                  Whether the correct answer is case sensitive. This field only
                  applies to `fill_in_the_blank` polls. 

                  * `true` - The answer is case-sensitive. 

                  * `false` - The answer is not case-sensitive. 


                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              name:
                description: >-
                  The poll question, up to 255 characters. 


                  For `fill_in_the_blank` polls, this field is the poll's
                  question. For each value that the user must fill in, ensure
                  that there are the same number of `right_answers` values.
                maxLength: 255
                type: string
                example: How useful was this meeting?
              prompts:
                description: >-
                  Information about the prompt questions. This field only
                  applies to `matching` and `rank_order` polls. You **must**
                  provide a minimum of two prompts, up to a maximum of 10
                  prompts.
                type: array
                items:
                  type: object
                  properties:
                    prompt_question:
                      description: The question prompt's title.
                      type: string
                      example: How are you?
                    prompt_right_answers:
                      description: >-
                        The question prompt's correct answers: 

                        * For `matching` polls, you must provide a minimum of
                        two correct answers, up to a maximum of 10 correct
                        answers. 

                        * For `rank_order` polls, you can only provide one
                        correct answer.
                      type: array
                      items:
                        type: string
                        example: Good
              rating_max_label:
                description: |-
                  The high score label used for the `rating_max_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Extremely Likely
              rating_max_value:
                description: >-
                  The rating scale's maximum value, up to a maximum value of
                  10. 


                  This field only applies to the `rating_scale` poll.
                maximum: 10
                type: integer
                example: 4
              rating_min_label:
                description: |-
                  The low score label used for the `rating_min_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Not likely
              rating_min_value:
                description: >-
                  The rating scale's minimum value. This value cannot be less
                  than zero. 


                  This field only applies to the `rating_scale` poll.
                minimum: 0
                type: integer
                example: 0
              right_answers:
                description: >-
                  The poll question's correct answer(s). This field is
                  **required** if the poll's `type` value is `3` (Quiz). 

                   For `single` and `matching` polls, this field only accepts one answer.
                minItems: 1
                type: array
                items:
                  type: string
                  example: Good
              show_as_dropdown:
                description: |-
                  Whether to display the radio selection as a drop-down box. 
                  * `true` - Show as a drop-down box. 
                  * `false` - Do not show as a drop-down box. 

                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              type:
                description: |-
                  The poll's question and answer type. 
                  * `single` - Single choice. 
                  * `multiple` - Multiple choice. 
                  * `matching` - Matching. 
                  * `rank_order` - Rank order. 
                  * `short_answer` - Short answer. 
                  * `long_answer` - Long answer. 
                  * `fill_in_the_blank` - Fill in the blank. 
                  * `rating_scale` - Rating scale.
                type: string
                example: single
                extensions:
                  x-enum-descriptions:
                    - Single choice
                    - Multiple choice
                    - Matching
                    - Rank order
                    - Short answer
                    - Long answer
                    - Fill in the blank
                    - Rating scale
                enum:
                  - single
                  - multiple
                  - matching
                  - rank_order
                  - short_answer
                  - long_answer
                  - fill_in_the_blank
                  - rating_scale
    WebinarsGetPollDetailsResponse:
      title: Meeting and Webinar Polling Object
      description: Information about meeting and webinar polling.
      type: object
      properties:
        title:
          description: The poll's title, up to 64 characters.
          maxLength: 64
          type: string
          example: Learn something new
        id:
          description: Webinar Poll ID
          type: string
          example: QalIoKWLTJehBJ8e1xRrbQ
        status:
          description: |-
            Status of the Webinar Poll:  
             `notstart` - Poll not started  
             `started` - Poll started  
             `ended` - Poll ended  
             `sharing` - Sharing poll results
          type: string
          example: notstart
          extensions:
            x-enum-descriptions:
              - Poll not start
              - Poll started
              - Poll ended
              - Poll is sharing
          enum:
            - notstart
            - started
            - ended
            - sharing
        anonymous:
          description: |-
            Allow meeting participants to answer poll questions anonymously. 

            This value defaults to `false`.
          type: boolean
          example: true
          default: false
        poll_type:
          description: >-
            The type of poll: 

            * `1` &mdash; Poll. 

            * `2` &mdash; Advanced Poll. This feature must be enabled in your
            Zoom account. 

            * `3` &mdash; Quiz. This feature must be enabled in your Zoom
            account. 

             This value defaults to `1`.
          type: integer
          example: 2
          enum:
            - 1
            - 2
            - 3
        questions:
          description: Information about the poll's questions.
          type: array
          items:
            type: object
            properties:
              answer_max_character:
                description: >-
                  The allowed maximum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls: 

                  * For `short_answer` polls, a maximum of 500 characters. 

                  * For `long_answer` polls, a maximum of 2,000 characters.
                type: integer
                example: 200
              answer_min_character:
                description: >-
                  The allowed minimum number of characters. This field only
                  applies to `short_answer` and `long_answer` polls. You must
                  provide at least a **one** character minimum value.
                minimum: 1
                type: integer
                example: 1
              answer_required:
                description: >-
                  Whether participants must answer the question: 

                  * `true` &mdash; The participant must answer the question. 

                  * `false` &mdash; The participant does not need to answer the
                  question. 


                  **Note:** 

                  * When the poll's `type` value is `1` (Poll), this value
                  defaults to `true`. 

                  * When the poll's `type` value is the `2` (Advanced Poll) or
                  `3` (Quiz) values, this value defaults to `false`.
                type: boolean
                example: false
                default: false
              answers:
                description: >-
                  The poll question's available answers. This field requires a
                  **minimum** of two answers. 


                  * For `single` and `multiple` polls, you can only provide a
                  maximum of 10 answers. 

                  * For `matching` polls, you can only provide a maximum of 16
                  answers. 

                  * For `rank_order` polls, you can only provide a maximum of
                  seven answers.
                minItems: 2
                type: array
                items:
                  type: string
                  example: Extremely useful
              case_sensitive:
                description: >-
                  Whether the correct answer is case sensitive. This field only
                  applies to `fill_in_the_blank` polls: 

                  * `true` &mdash; The answer is case-sensitive. 

                  * `false` &mdash; The answer is not case-sensitive. 


                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              name:
                description: >-
                  The poll question, up to 255 characters. 


                  For `fill_in_the_blank` polls, this field is the poll's
                  question. For each value that the user must fill in, ensure
                  that there are the same number of `right_answers` values.
                maxLength: 255
                type: string
                example: How useful was this meeting?
              prompts:
                description: >-
                  Information about the prompt questions. This field only
                  applies to `matching` and `rank_order` polls. You **must**
                  provide a minimum of two prompts, up to a maximum of 10
                  prompts.
                type: array
                items:
                  type: object
                  properties:
                    prompt_question:
                      description: The question prompt's title.
                      type: string
                      example: How are you?
                    prompt_right_answers:
                      description: >-
                        The question prompt's correct answers: 

                        * For `matching` polls, you must provide a minimum of
                        two correct answers, up to a maximum of 10 correct
                        answers. 

                        * For `rank_order` polls, you can only provide one
                        correct answer.
                      type: array
                      items:
                        type: string
                        example: Good
              rating_max_label:
                description: |-
                  The high score label used for the `rating_max_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Extremely Likely
              rating_max_value:
                description: >-
                  The rating scale's maximum value, up to a maximum value of
                  10. 


                  This field only applies to the `rating_scale` poll.
                maximum: 10
                type: integer
                example: 4
              rating_min_label:
                description: |-
                  The low score label used for the `rating_min_value` field. 

                  This field only applies to the `rating_scale` poll.
                type: string
                example: Not likely
              rating_min_value:
                description: >-
                  The rating scale's minimum value. This value cannot be less
                  than zero. 


                  This field only applies to the `rating_scale` poll.
                minimum: 0
                type: integer
                example: 0
              right_answers:
                description: >-
                  The poll question's correct answer(s). This field is
                  **required** if the poll's `type` value is `3` (Quiz). 

                   For `single` and `matching` polls, this field only accepts one answer.
                minItems: 1
                type: array
                items:
                  type: string
                  example: Good
              show_as_dropdown:
                description: |-
                  Whether to display the radio selection as a drop-down box: 
                  * `true` &mdash; Show as a drop-down box. 
                  * `false` &mdash; Do not show as a drop-down box. 

                  This value defaults to `false`.
                type: boolean
                example: false
                default: false
              type:
                description: |-
                  The poll's question and answer type: 
                  * `single` &mdash; Single choice. 
                  * `multiple` &mdash; Multiple choice. 
                  * `matching` &mdash; Matching. 
                  * `rank_order` &mdash; Rank order. 
                  * `short_answer` &mdash; Short answer. 
                  * `long_answer` &mdash; Long answer. 
                  * `fill_in_the_blank` &mdash; Fill in the blank. 
                  * `rating_scale` &mdash; Rating scale.
                type: string
                example: single
                extensions:
                  x-enum-descriptions:
                    - Single choice
                    - Multiple choice
                    - Matching
                    - Rank order
                    - Short answer
                    - Long answer
                    - Fill in the blank
                    - Rating scale
                enum:
                  - single
                  - multiple
                  - matching
                  - rank_order
                  - short_answer
                  - long_answer
                  - fill_in_the_blank
                  - rating_scale
    WebinarsListRegistrantsResponse:
      title: Registration list
      description: List of users.
      type: object
      properties:
        next_page_token:
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          type: string
          example: w7587w4eiyfsudgf
        page_count:
          description: The number of pages returned for the request made.
          type: integer
          example: 1
        page_number:
          description: >-
            **Deprecated** This field will be deprecated. We will no longer
            support this field in a future release. Instead, use
            `next_page_token` for pagination.
          type: integer
          example: 1
          deprecated: true
          default: 1
        page_size:
          description: The number of records returned with a single API call.
          maximum: 300
          type: integer
          example: 30
          default: 30
        total_records:
          description: The total number of all the records available across pages.
          type: integer
          example: 20
        registrants:
          description: List of registrant objects.
          type: array
          items:
            description: ' Registrant.'
            type: object
            properties:
              id:
                description: Registrant ID.
                type: string
                example: 9tboDiHUQAeOnbmudzWa5g
              address:
                description: The registrant's address.
                type: string
                example: 1800 Amphibious Blvd.
              city:
                description: The registrant's city.
                type: string
                example: Mountain View
              comments:
                description: The registrant's questions and comments.
                type: string
                example: Looking forward to the discussion.
              country:
                description: >-
                  The registrant's two-letter ISO [country
                  code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
                type: string
                example: US
              custom_questions:
                description: Information about custom questions.
                type: array
                items:
                  description: Information about custom questions.
                  type: object
                  properties:
                    title:
                      description: The title of the custom question.
                      type: string
                      example: What do you hope to learn from this?
                    value:
                      description: >-
                        The custom question's response value. This has a limit
                        of 128 characters.
                      maxLength: 128
                      type: string
                      example: >-
                        Look forward to learning how you come up with new
                        recipes and what other services you offer.
              email:
                description: >-
                  The registrant's email address. See [Email address display
                  rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                  for return value details.
                maxLength: 128
                type: string
                format: email
                example: jchill@example.com
              first_name:
                description: The registrant's first name.
                maxLength: 64
                type: string
                example: Jill
              industry:
                description: The registrant's industry.
                type: string
                example: Food
              job_title:
                description: The registrant's job title.
                type: string
                example: Chef
              last_name:
                description: The registrant's last name.
                maxLength: 64
                type: string
                example: Chill
              no_of_employees:
                description: |-
                  The registrant's number of employees. 
                  * `1-20` 
                  * `21-50` 
                  * `51-100` 
                  * `101-250` 
                  * `251-500` 
                  * `501-1,000` 
                  * `1,001-5,000` 
                  * `5,001-10,000` 
                  * `More than 10,000`
                type: string
                example: 1-20
                enum:
                  - ''
                  - 1-20
                  - 21-50
                  - 51-100
                  - 101-250
                  - 251-500
                  - 501-1,000
                  - 1,001-5,000
                  - 5,001-10,000
                  - More than 10,000
              org:
                description: The registrant's organization.
                type: string
                example: Cooking Org
              phone:
                description: The registrant's phone number.
                type: string
                example: '5550100'
              purchasing_time_frame:
                description: |-
                  The registrant's purchasing time frame. 
                  * `Within a month.` 
                  * `1-3 months.` 
                  * `4-6 months.` 
                  * `More than 6 months.` 
                  * `No timeframe.`
                type: string
                example: 1-3 months
                enum:
                  - ''
                  - Within a month
                  - 1-3 months
                  - 4-6 months
                  - More than 6 months
                  - No timeframe
              role_in_purchase_process:
                description: |-
                  The registrant's role in the purchase process. 
                  * `Decision maker` 
                  * `Evaluator/Recommender.` 
                  * `Influencer.` 
                  * `Not involved.`
                type: string
                example: Influencer
                enum:
                  - ''
                  - Decision Maker
                  - Evaluator/Recommender
                  - Influencer
                  - Not involved
              state:
                description: The registrant's state or province.
                type: string
                example: CA
              status:
                description: |-
                  The status of the registrant's registration.   
                    `approved` - User has been successfully approved for the webinar.  
                    `pending` -  The registration is still pending.  
                    `denied` - User has been denied from joining the webinar.
                type: string
                example: approved
                enum:
                  - approved
                  - denied
                  - pending
              zip:
                description: The registrant's ZIP or postal code.
                type: string
                example: '94045'
              create_time:
                description: The time when the registrant registered.
                type: string
                format: date-time
                example: '2022-03-22T05:59:09Z'
              join_url:
                description: >-
                  The URL that an approved registrant can use to join the
                  meeting or webinar.
                type: string
                format: string
                example: https://example.com/j/11111
            required:
              - email
              - first_name
    WebinarsAddRegistrantResponse:
      type: object
      properties:
        id:
          description: The webinar's ID.
          type: integer
          format: int64
          example: 92674392836
        join_url:
          description: The URL the registrant can use to join the webinar.
          type: string
          example: https://example.com/j/22222
        registrant_id:
          description: The registrant's ID.
          type: string
          example: fdgsfh2ey82fuh
        start_time:
          description: The webinar's start time.
          type: string
          format: date-time
          example: '2021-07-13T21:44:51Z'
        topic:
          description: The webinar's topic.
          maxLength: 200
          type: string
          example: My Webinar
        occurrences:
          description: Array of occurrence objects.
          type: array
          items:
            description: >-
              Occurrence object. This object is only returned for recurring
              webinars.
            type: object
            properties:
              duration:
                description: Duration.
                type: integer
                example: 60
              occurrence_id:
                description: >-
                  Occurrence ID: Unique identifier that identifies an occurrence
                  of a recurring webinar. [Recurring
                  webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                  can have a maximum of 50 occurrences.
                type: string
                example: '1648194360000'
              start_time:
                description: Start time.
                type: string
                format: date-time
                example: '2022-03-25T07:46:00Z'
              status:
                description: Occurrence status.
                type: string
                example: available
    WebinarsListRegistrationQuestionsResponse:
      title: Webinar Registrant Questions
      description: Webinar Registrant Questions
      type: object
      properties:
        custom_questions:
          description: Array of Registrant Custom Questions.
          type: array
          items:
            type: object
            properties:
              title:
                description: Custom question.
                type: string
                example: How are you?
              answers:
                description: >-
                  An array of answer choices. Can't be used for short answer
                  type.
                type: array
                items:
                  type: string
                  example: Good
              required:
                description: >-
                  State whether or not the custom question is required to be
                  answered by a registrant.
                type: boolean
                example: true
              type:
                description: The question-answer type.
                type: string
                example: short
                extensions:
                  x-enum-descriptions:
                    - Short Answer
                    - Single Radio Answer
                    - Single Dropdown Answer
                    - Multiple Answer
                enum:
                  - short
                  - single_radio
                  - single_dropdown
                  - multiple
        questions:
          description: >-
            Array of registration fields whose values should be provided by
            registrants during registration.
          type: array
          items:
            type: object
            properties:
              field_name:
                description: Field name
                type: string
                example: last_name
                extensions:
                  x-enum-descriptions:
                    - Last Name
                    - Address
                    - City
                    - Country/Region
                    - Zip/Postal Code
                    - State/Province
                    - Phone
                    - Industry
                    - Organization
                    - Job Title
                    - Purchasing Time Frame
                    - Role in Purchase Process
                    - Number of Employees
                    - Questions & Comments
                enum:
                  - last_name
                  - address
                  - city
                  - country
                  - zip
                  - state
                  - phone
                  - industry
                  - org
                  - job_title
                  - purchasing_time_frame
                  - role_in_purchase_process
                  - no_of_employees
                  - comments
              required:
                description: State whether the selected fields are required or optional.
                type: boolean
                example: true
    WebinarsRegistrantDetailsResponse:
      title: Webinar Registrant
      description: Webinar registrant.
      type: object
      properties:
        id:
          type: string
          example: '95204914252'
        address:
          description: The registrant's address.
          type: string
          example: 1800 Amphibious Blvd.
        city:
          description: The registrant's city.
          type: string
          example: Mountain View
        comments:
          description: The registrant's questions and comments.
          type: string
          example: Looking forward to the discussion.
        country:
          description: >-
            The registrant's two-letter ISO [country
            code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
          type: string
          example: US
        custom_questions:
          description: Information about custom questions.
          type: array
          items:
            description: Information about custom questions.
            type: object
            properties:
              title:
                description: The title of the custom question.
                type: string
                example: What do you hope to learn from this?
              value:
                description: >-
                  The custom question's response value. This has a limit of 128
                  characters.
                maxLength: 128
                type: string
                example: >-
                  Look forward to learning how you come up with new recipes and
                  what other services you offer.
        email:
          description: >-
            The registrant's email address. See [Email address display
            rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
            for return value details.
          maxLength: 128
          type: string
          format: email
          example: jchill@example.com
        first_name:
          description: The registrant's first name.
          maxLength: 64
          type: string
          example: Jill
        industry:
          description: The registrant's industry.
          type: string
          example: Food
        job_title:
          description: The registrant's job title.
          type: string
          example: Chef
        last_name:
          description: The registrant's last name.
          maxLength: 64
          type: string
          example: Chill
        no_of_employees:
          description: |-
            The registrant's number of employees: 
            * `1-20` 
            * `21-50` 
            * `51-100` 
            * `101-250` 
            * `251-500` 
            * `501-1,000` 
            * `1,001-5,000` 
            * `5,001-10,000` 
            * `More than 10,000`
          type: string
          example: 1-20
          enum:
            - ''
            - 1-20
            - 21-50
            - 51-100
            - 101-250
            - 251-500
            - 501-1,000
            - 1,001-5,000
            - 5,001-10,000
            - More than 10,000
        org:
          description: The registrant's organization.
          type: string
          example: Cooking Org
        phone:
          description: The registrant's phone number.
          type: string
          example: '5550100'
        purchasing_time_frame:
          description: |-
            The registrant's purchasing time frame: 
            * `Within a month` 
            * `1-3 months` 
            * `4-6 months` 
            * `More than 6 months` 
            * `No timeframe`
          type: string
          example: 1-3 months
          enum:
            - ''
            - Within a month
            - 1-3 months
            - 4-6 months
            - More than 6 months
            - No timeframe
        role_in_purchase_process:
          description: |-
            The registrant's role in the purchase process: 
            * `Decision Maker` 
            * `Evaluator/Recommender` 
            * `Influencer` 
            * `Not involved`
          type: string
          example: Influencer
          enum:
            - ''
            - Decision Maker
            - Evaluator/Recommender
            - Influencer
            - Not involved
        state:
          description: The registrant's state or province.
          type: string
          example: CA
        status:
          description: |-
            The registrant's status: 
            * `approved` &mdash; Registrant is approved. 
            * `denied` &mdash; Registrant is denied. 
            * `pending` &mdash; Registrant is waiting for approval.
          type: string
          example: approved
          enum:
            - approved
            - denied
            - pending
        zip:
          description: The registrant's ZIP or postal code.
          type: string
          example: '94045'
        language:
          description: |-
            The registrant's language preference for confirmation emails: 
            * `en-US` &mdash; English (US) 
            * `de-DE` &mdash; German (Germany) 
            * `es-ES` &mdash; Spanish (Spain) 
            * `fr-FR` &mdash; French (France) 
            * `jp-JP` &mdash; Japanese 
            * `pt-PT` &mdash; Portuguese (Portugal) 
            * `ru-RU` &mdash; Russian 
            * `zh-CN` &mdash; Chinese (PRC) 
            * `zh-TW` &mdash; Chinese (Taiwan) 
            * `ko-KO` &mdash; Korean 
            * `it-IT` &mdash; Italian (Italy) 
            * `vi-VN` &mdash; Vietnamese 
            * `pl-PL` &mdash; Polish 
            * `Tr-TR` &mdash; Turkish
          type: string
          example: en-US
          enum:
            - en-US
            - de-DE
            - es-ES
            - fr-FR
            - jp-JP
            - pt-PT
            - ru-RU
            - zh-CN
            - zh-TW
            - ko-KO
            - it-IT
            - vi-VN
            - pl-PL
            - Tr-TR
        create_time:
          type: string
          format: date-time
          example: '2022-03-26T06:44:14Z'
        join_url:
          type: string
          format: string
          example: https://example.com/j/11111
      required:
        - email
        - first_name
    WebinarsGetSipUriWithPasscodeResponse:
      description: Information about the webinar's encoded SIP URI.
      type: object
      properties:
        sip_dialing:
          description: The webinar's encoded SIP URI.
          type: string
          example: 9678722567.xxxx....30qonrvgy@zoomcrc.com
        paid_crc_plan_participant:
          description: Whether the API caller has a Conference Room Connector (CRC) plan.
          type: boolean
          example: true
        participant_identifier_code:
          description: >-
            This value identifies the webinar participant. It is automatically
            embedded in the SIP URI if the API caller has a CRC plan.
          type: string
          example: 30qonrvgy
        expire_in:
          description: >-
            The number of seconds the encoded SIP URI is valid before it
            expires.
          type: integer
          format: int64
          example: 7200
    WebinarsUpdateStatusResponse:
      type: object
      properties: {}
    WebinarsGetSurveyResponse:
      title: Webinar survey object
      description: Information about the webinar survey.
      type: object
      properties:
        custom_survey:
          description: Information about the customized webinar survey.
          type: object
          properties:
            title:
              description: The survey's title, up to 64 characters.
              maxLength: 64
              type: string
              example: Learn something new
            anonymous:
              description: >-
                Allow participants to anonymously answer survey questions. 

                * `true` - Anonymous survey enabled. 

                * `false` - Participants cannot answer survey questions
                anonymously. 

                 This value defaults to `true`.
              type: boolean
              example: false
              default: false
            numbered_questions:
              description: |-
                Whether to display the number in the question name. 

                 This value defaults to `true`.
              type: boolean
              example: false
              default: false
            show_question_type:
              description: |-
                Whether to display the question type in the question name. 

                 This value defaults to `false`.
              type: boolean
              example: false
              default: false
            feedback:
              description: |-
                The survey's feedback, up to 320 characters. 

                 This value defaults to `Thank you so much for taking the time to complete the survey, your feedback really makes a difference.`.
              maxLength: 320
              type: string
              example: >-
                Thank you so much for taking the time to complete the survey.
                Your feedback really makes a difference.
            questions:
              description: Information about the webinar survey's questions.
              maxItems: 100
              minItems: 1
              type: array
              items:
                type: object
                properties:
                  name:
                    description: The survey question, up to 420 characters.
                    type: string
                    example: How useful was this webinar?
                  type:
                    description: |-
                      The survey's question and answer type. 
                      * `single` - Single choice. 
                      * `multiple` - Multiple choice. 
                      * `matching` - Matching. 
                      * `rank_order` - Rank order 
                      * `short_answer` - Short answer 
                      * `long_answer` - Long answer. 
                      * `fill_in_the_blank` - Fill in the blank 
                      * `rating_scale` - Rating scale.
                    type: string
                    example: single
                    extensions:
                      x-enum-descriptions:
                        - Single choice
                        - Multiple choice
                        - Matching
                        - Rank order
                        - Short answer
                        - Long answer
                        - Fill in the blank
                        - Rating scale
                    enum:
                      - single
                      - multiple
                      - matching
                      - rank_order
                      - short_answer
                      - long_answer
                      - fill_in_the_blank
                      - rating_scale
                  answer_required:
                    description: >-
                      Whether participants must answer the question. 

                      * `true` - The participant must answer the question. 

                      * `false` - The participant does not need to answer the
                      question. 

                       This value defaults to `false`.
                    type: boolean
                    example: false
                    default: false
                  show_as_dropdown:
                    description: >-
                      Whether to display the radio selection as a drop-down
                      box. 

                      * `true` - Show as a drop-down box. 

                      * `false` - Do not show as a drop-down box. 

                       This value defaults to `false`.
                    type: boolean
                    example: false
                    default: false
                  answers:
                    description: >-
                      The survey question's available answers. This field
                      requires a **minimum** of two answers. 


                      * For `single` and `multiple` questions, you can only
                      provide a maximum of 50 answers. 

                      * For `matching` polls, you can only provide a maximum of
                      16 answers. 

                      * For `rank_order` polls, you can only provide a maximum
                      of seven answers.
                    minItems: 2
                    type: array
                    items:
                      maxLength: 200
                      type: string
                      example: Extremely useful
                  prompts:
                    description: >-
                      Information about the prompt questions. This field only
                      applies to `matching` and `rank_order` questions. You
                      **must** provide a minimum of two prompts, up to a maximum
                      of 10 prompts.
                    maxItems: 10
                    minItems: 2
                    type: array
                    items:
                      type: object
                      properties:
                        prompt_question:
                          description: The question prompt's title.
                          maxLength: 200
                          type: string
                          example: How are you?
                  answer_min_character:
                    description: >-
                      The allowed minimum number of characters. This field only
                      applies to `short_answer` and `long_answer` questions. You
                      must provide at least a **one** character minimum value.
                    minimum: 1
                    type: integer
                    example: 1
                  answer_max_character:
                    description: >-
                      The allowed maximum number of characters. This field only
                      applies to `short_answer` and `long_answer` questions. 

                      * For `short_answer` question, a maximum of 500
                      characters. 

                      * For `long_answer` question, a maximum of 2,000
                      characters.
                    type: integer
                    example: 200
                  rating_min_value:
                    description: >-
                      The rating scale's minimum value. This value cannot be
                      less than zero. 

                       This field only applies to the `rating_scale` survey.
                    minimum: 0
                    type: integer
                    example: 1
                  rating_max_value:
                    description: >-
                      The rating scale's maximum value, up to a maximum value of
                      10. 

                       This field only applies to the `rating_scale` survey.
                    maximum: 10
                    type: integer
                    example: 4
                  rating_min_label:
                    description: >-
                      The low score label used for the `rating_min_value` field,
                      up to 50 characters. 

                       This field only applies to the `rating_scale` survey.
                    maxLength: 50
                    type: string
                    example: Not likely
                  rating_max_label:
                    description: >-
                      The high score label used for the `rating_max_value`
                      field, up to 50 characters. 

                       This field only applies to the `rating_scale` survey.
                    maxLength: 50
                    type: string
                    example: Extremely Likely
        show_in_the_browser:
          description: >-
            Whether the **Show in the browser when the webinar ends** option is
            enabled. 

            * `true` - Enabled. 

            * `false` - Disabled. 

             This value defaults to `true`.
          type: boolean
          example: true
          default: true
        show_in_the_follow_up_email:
          description: >-
            Whether the **Show the link on the follow-up email** option is
            enabled. 

            * `true` - Enabled. 

            * `false` - Disabled. 

             This value defaults to `false`.
          type: boolean
          example: false
          default: false
        third_party_survey:
          description: The link to the third party webinar survey.
          maxLength: 64
          type: string
          example: https://example.com
    WebinarsGetWebinarTokenResponse:
      description: Information about the webinar token.
      type: object
      properties:
        token:
          description: The generated webinar token.
          type: string
          example: >-
            https://example.com/closedcaption?id=200610693&ns=GZHkEA==&expire=86400&spparams=id%2Cns%2Cexpire&signature=nYtXJqRKCW
    WebinarsListTrackingSourcesResponse:
      type: object
      properties:
        total_records:
          description: The total number of registration records for this Webinar.
          type: integer
          example: 1
        tracking_sources:
          description: Tracking Sources object.
          type: array
          items:
            type: object
            properties:
              id:
                description: Unique Identifier of the tracking source.
                type: string
                example: '5516482804110'
              registration_count:
                description: Number of registrations made from this source.
                type: integer
                example: 1
              source_name:
                description: >-
                  Name of the source (platform) where the registration URL was
                  shared.
                type: string
                example: https://example.com
              tracking_url:
                description: Tracking URL. The URL that was shared for the registration.
                type: string
                example: >-
                  https://example.com/webinar/register/5516482804110/WN_juM2BGyLQMyQ_ZrqiGRhLg
              visitor_count:
                description: >-
                  Number of visitors who visited the registration page from this
                  source.
                type: integer
                example: 1
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
