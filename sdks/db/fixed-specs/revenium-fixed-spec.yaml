openapi: 3.0.1
info:
  title: Revenium Metering API
  description: Revenium Metering API
  version: 1.14.0-SNAPSHOT
  contact:
    name: Revenium
    url: https://revenium.io
    email: info@revenium.io
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - description: Revenium Metering API (Production)
    url: https://api.revenium.io/meter/v1/api
tags:
  - name: Invoice Reports
  - name: Invoices
  - name: Product Keys
  - name: Products
  - name: Account Tiers
  - name: Asset Metrics
  - name: Users
  - name: Notifications
  - name: Payment Methods
  - name: Assets
  - name: Payment
  - name: Consumer Data Provider Configurations
  - name: API Management Configurations
  - name: Product Family
  - name: Organizations
  - name: Notification Provider Configurations
  - name: Applications
  - name: Site Provider Configurations
  - name: Pricing Rules
  - name: Plans
  - name: Identity Provider Configurations
  - name: Tiers
  - name: Tenants
  - name: Subscription Notifications
  - name: SLA Definitions
  - name: Elements
  - name: Payment Configurations
  - name: Features
  - name: Export Configurations
  - name: Stored filters
  - name: Sites
  - name: Element Definitions
  - name: Asset Reports
  - name: Billing Metadata
  - name: SLA Violations
  - name: Traffic Anomalies
  - name: API Keys
  - description: Metering operations
    name: Metring
  - name: Notification Custom Content
  - name: Communications
  - name: Commerce Portal Acceptance Terms
  - name: Admin
  - name: Internal System Audit Trail
  - name: External System Audit Trail
  - description: Event based metering operations
    name: Events
  - name: Templates
  - name: Registration
  - name: Demo Pricing Rules
  - name: Tags
  - name: SLAs
  - name: Product Reports
  - name: Hubspot
  - name: Environments
paths:
  /users/{id}:
    get:
      tags:
        - Users
      summary: Retrieve a user
      operationId: Users_getUser
      description: Retrieve a user
      parameters:
        - description: The user id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetUserResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetUser404Response'
    put:
      tags:
        - Users
      summary: Update a user
      operationId: Users_updateUserOperation
      description: Update a user
      parameters:
        - description: The user id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
        required: true
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateUserOperationResponse'
    delete:
      tags:
        - Users
      summary: Delete a User
      operationId: Users_deleteUser
      description: Delete a User
      parameters:
        - description: The user id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUserResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUser403Response'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUser404Response'
  /users/{id}/deactivate:
    put:
      tags:
        - Users
      summary: Deactivate a user
      operationId: Users_deactivateUserOperation
      description: Deactivate a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeactivateUserOperationResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeactivateUserOperation404Response'
  /users/{id}/activate:
    put:
      tags:
        - Users
      summary: Activate a user
      operationId: Users_activateUserOperation
      description: Activate a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersActivateUserOperationResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersActivateUserOperation404Response'
  /traffic-anomalies/rules:
    put:
      tags:
        - Traffic Anomalies
      summary: Update a traffic anomaly rule
      operationId: TrafficAnomalies_updateRule
      description: Update a traffic anomaly rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrafficAnomalyRuleRequest'
        required: true
      responses:
        '201':
          description: The traffic anomaly rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomalyRuleView'
        '403':
          description: Forbidden to create traffic anomaly rules for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomaliesUpdateRuleResponse'
    post:
      tags:
        - Traffic Anomalies
      summary: Create a traffic anomaly rule
      operationId: TrafficAnomalies_createRule
      description: Create a traffic anomaly rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrafficAnomalyRuleRequest'
        required: true
      responses:
        '201':
          description: The traffic anomaly rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomalyRuleView'
        '403':
          description: Forbidden to create traffic anomaly rules for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomaliesCreateRuleResponse'
  /tiers/{id}:
    get:
      tags:
        - Tiers
      summary: Get a tier
      operationId: Tiers_getTier
      description: Get a tier
      parameters:
        - description: The tier id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierView'
        '403':
          description: Forbidden to access this tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersGetTierResponse'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersGetTier404Response'
    put:
      tags:
        - Tiers
      summary: Update a tier
      operationId: Tiers_updateTier
      description: Update a tier
      parameters:
        - description: The tier id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTierRequest'
        required: true
      responses:
        '200':
          description: The updated plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersUpdateTierResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersUpdateTier404Response'
    delete:
      tags:
        - Tiers
      summary: Delete a tier
      operationId: Tiers_deleteTierOperation
      description: Delete a tier
      parameters:
        - description: The tier id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersDeleteTierOperationResponse'
        '403':
          description: Forbidden to access this tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersDeleteTierOperation403Response'
        '404':
          description: Tier not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersDeleteTierOperation404Response'
  /tenants/{id}:
    get:
      tags:
        - Tenants
      summary: Retrieve a tenant
      operationId: Tenants_getTenantById
      description: Retrieve a tenant
      parameters:
        - description: The tenant id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
    put:
      tags:
        - Tenants
      summary: Update a tenant
      operationId: Tenants_updateTenantById
      description: Update a tenant
      parameters:
        - description: The tenant id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantDto'
        required: true
      responses:
        '200':
          description: The updated tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
    delete:
      tags:
        - Tenants
      summary: Delete a tenant
      operationId: Tenants_deleteTenant
      description: Delete a tenant
      parameters:
        - description: The tenant id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The tenant has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsDeleteTenantResponse'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsDeleteTenant404Response'
  /subscription-notification:
    put:
      tags:
        - Subscription Notifications
      summary: Update a subscriber notification
      operationId: SubscriptionNotifications_updateSubscriberNotification
      description: Update a subscriber notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberNotificationRequest'
        required: true
      responses:
        '200':
          description: The subscriber notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberNotificationView'
        '403':
          description: Forbidden to access this subscriber notification
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsUpdateSubscriberNotificationResponse
        '404':
          description: Subscriber notification not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsUpdateSubscriberNotification404Response
    post:
      tags:
        - Subscription Notifications
      summary: Create an subscriber notification
      operationId: SubscriptionNotifications_createSubscriberNotification
      description: Create an subscriber notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriberNotificationRequest'
        required: true
      responses:
        '201':
          description: The subscription notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberNotificationView'
        '403':
          description: Forbidden create a subscriber notification
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsCreateSubscriberNotificationResponse
  /stored-filters/{filterId}:
    get:
      tags:
        - Stored filters
      summary: Get an stored filter
      operationId: StoredFilters_getFilterById
      description: Get an stored filter
      parameters:
        - description: The stored filter id
          name: filterId
          in: path
          required: true
          schema:
            type: string
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '403':
          description: Forbidden to access this stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '404':
          description: Stored filter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
    put:
      tags:
        - Stored filters
      summary: Update an stored filter
      operationId: StoredFilters_updateFilterById
      description: Update an stored filter
      parameters:
        - description: The stored filter id
          name: filterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoredFilterRequest'
        required: true
      responses:
        '200':
          description: The updated stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '403':
          description: Forbidden to access this stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
    delete:
      tags:
        - Stored filters
      summary: Delete an stored filter
      operationId: StoredFilters_deleteFilterById
      description: Delete an stored filter
      parameters:
        - description: Id of asset's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The stored filter id
          name: filterId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFiltersDeleteFilterByIdResponse'
        '403':
          description: Forbidden to access this stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFiltersDeleteFilterById403Response'
        '404':
          description: Stored filter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFiltersDeleteFilterById404Response'
  /sla-definitions/{id}:
    get:
      tags:
        - SLA Definitions
      summary: Retrieve a sla definition
      operationId: SlaDefinitions_getDefinition
      description: Retrieve a sla definition
      parameters:
        - description: The sla definition id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The SLA Definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLADefinitionView'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaDefinitionsGetDefinitionResponse'
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaDefinitionsGetDefinition404Response'
    put:
      tags:
        - SLA Definitions
      summary: Update an sla definition
      operationId: SlaDefinitions_updateSlaDefinition
      description: Update an sla definition
      parameters:
        - description: The sla definition id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSLADefinitionRequest'
        required: true
      responses:
        '200':
          description: The updated sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLADefinitionView'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaDefinitionsUpdateSlaDefinitionResponse'
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SlaDefinitionsUpdateSlaDefinition404Response
    delete:
      tags:
        - SLA Definitions
      summary: Delete a sla definition
      operationId: SlaDefinitions_deleteDefinition
      description: Delete a sla definition
      parameters:
        - description: The sla definition id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaDefinitionsDeleteDefinitionResponse'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaDefinitionsDeleteDefinition403Response'
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaDefinitionsDeleteDefinition404Response'
  /sites:
    get:
      tags:
        - Sites
      summary: List sites
      operationId: Sites_list
      description: List sites
      parameters:
        - description: Id of site's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePageResponse'
        '403':
          description: Forbidden to list sites for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesListResponse'
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesList404Response'
    put:
      tags:
        - Sites
      summary: Update a site
      operationId: Sites_updateSite
      description: Update a site
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSiteRequest'
        required: true
      responses:
        '200':
          description: The site
          content:
            site/json:
              schema:
                $ref: '#/components/schemas/SiteView'
        '403':
          description: Forbidden to access this site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesUpdateSiteResponse'
        '404':
          description: Site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesUpdateSite404Response'
    post:
      tags:
        - Sites
      summary: Create an site
      operationId: Sites_createSite
      description: Create a site
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSiteRequest'
        required: true
      responses:
        '201':
          description: The site
          content:
            site/json:
              schema:
                $ref: '#/components/schemas/SiteView'
        '403':
          description: Forbidden to access this site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesCreateSiteResponse'
        '404':
          description: Site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesCreateSite404Response'
  /site-provider/configurations/{id}:
    get:
      tags:
        - Site Provider Configurations
      summary: Retrieve a site provider configuration
      operationId: SiteProviderConfigurations_getConfiguration
      description: Retrieve a site provider configuration
      parameters:
        - description: The site provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The site provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfigurationView'
        '403':
          description: Forbidden to access this site provider configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsGetConfigurationResponse
        '404':
          description: Site provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsGetConfiguration404Response
    put:
      tags:
        - Site Provider Configurations
      summary: Update a site provider configuration
      operationId: SiteProviderConfigurations_updateConfiguration
      description: Update a siteprovider configuration
      parameters:
        - description: The site provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSiteConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated site provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfigurationView'
        '403':
          description: Forbidden to access this site provider configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsUpdateConfigurationResponse
        '404':
          description: Sitep rovider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsUpdateConfiguration404Response
    delete:
      tags:
        - Site Provider Configurations
      summary: Delete an site configuration
      operationId: SiteProviderConfigurations_deleteConfiguration
      description: Delete an site configuration
      parameters:
        - description: The sit eprovider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsDeleteConfigurationResponse
        '403':
          description: Forbidden to delete this site provider configurations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsDeleteConfiguration403Response
        '404':
          description: Site provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsDeleteConfiguration404Response
  /products/{id}:
    get:
      tags:
        - Products
      summary: Get a product
      operationId: Products_getById
      description: Get a product
      parameters:
        - description: The product id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetByIdResponse'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetById404Response'
    put:
      tags:
        - Products
      summary: Update a product
      operationId: Products_updateProductById
      description: Update a product
      parameters:
        - description: The product id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
        required: true
      responses:
        '200':
          description: The updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsUpdateProductByIdResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsUpdateProductById404Response'
    delete:
      tags:
        - Products
      summary: Delete a product
      operationId: Products_removeById
      description: Delete a product
      parameters:
        - description: The product id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsRemoveByIdResponse'
        '403':
          description: Forbidden to delete this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsRemoveById403Response'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsRemoveById404Response'
  /products/{id}/remove-trial:
    put:
      tags:
        - Products
      summary: Remove trial from a product
      operationId: Products_removeTrialFromProduct
      description: Remove trial from a product
      parameters:
        - description: The product id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to update this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsRemoveTrialFromProductResponse'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsRemoveTrialFromProduct404Response'
  /product/families/{id}:
    get:
      tags:
        - Product Family
      summary: Get an product family
      operationId: ProductFamily_getById
      description: Get an product family
      parameters:
        - description: The product family id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyView'
        '403':
          description: Forbidden to access this product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyGetByIdResponse'
        '404':
          description: Product family not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyGetById404Response'
    put:
      tags:
        - Product Family
      summary: Update an product family
      operationId: ProductFamily_updateFamilyOperation
      description: Update an product family
      parameters:
        - description: The product family id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductFamilyRequest'
        required: true
      responses:
        '200':
          description: The updated product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductFamilyUpdateFamilyOperationResponse
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductFamilyUpdateFamilyOperation404Response
    delete:
      tags:
        - Product Family
      summary: Delete a product family
      operationId: ProductFamily_deleteOperation
      description: Delete a product family
      parameters:
        - description: The product family id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyDeleteOperationResponse'
        '403':
          description: Forbidden to access this product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyDeleteOperation403Response'
        '404':
          description: Product family not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyDeleteOperation404Response'
  /product-keys/{productKeyId}/upgrade-product-to/{productId}:
    put:
      tags:
        - Product Keys
      summary: Upgrade a product key's product
      operationId: ProductKeys_upgradeProductTo
      description: Upgrade a product key's product
      parameters:
        - description: The product key id
          name: productKeyId
          in: path
          required: true
          schema:
            type: string
        - description: The product to upgrade the product key to
          name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysUpgradeProductToResponse'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysUpgradeProductTo403Response'
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysUpgradeProductTo404Response'
  /product-keys/{productKeyId}/downgrade-product-to/{productId}:
    put:
      tags:
        - Product Keys
      summary: Downgrade a product key's product
      operationId: ProductKeys_downgradeProductTo
      description: Downgrade a product key's product
      parameters:
        - description: The product key id
          name: productKeyId
          in: path
          required: true
          schema:
            type: string
        - description: The product to downgrade the product key to
          name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysDowngradeProductToResponse'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysDowngradeProductTo403Response'
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysDowngradeProductTo404Response'
  /product-keys/{id}:
    get:
      tags:
        - Product Keys
      summary: Retrieve a product key
      operationId: ProductKeys_getKeyById
      description: Retrieve a product key
      parameters:
        - description: The product key id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyView'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetKeyByIdResponse'
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetKeyById404Response'
    put:
      tags:
        - Product Keys
      summary: Update a product key
      operationId: ProductKeys_updateKeyOperation
      description: Update a product key
      parameters:
        - description: The Product Key ID
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductKeyRequest'
        required: true
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyView'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysUpdateKeyOperationResponse'
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysUpdateKeyOperation404Response'
  /product-keys/reactivate/{productKeyId}:
    put:
      tags:
        - Product Keys
      summary: Reactivate a product key
      operationId: ProductKeys_reactivateKeyOperation
      description: Reactivate a product key
      parameters:
        - description: The product key id
          name: productKeyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysReactivateKeyOperationResponse'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductKeysReactivateKeyOperation403Response
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductKeysReactivateKeyOperation404Response
  /product-keys/force-reset/{productKeyId}:
    put:
      tags:
        - Product Keys
      summary: Force reset a product key
      operationId: ProductKeys_forceResetKey
      description: Force reset a product key
      parameters:
        - description: The product key id
          name: productKeyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysForceResetKeyResponse'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysForceResetKey403Response'
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysForceResetKey404Response'
  /pricing-rules/{ruleId}:
    get:
      tags:
        - Pricing Rules
      summary: Get a pricing rule
      operationId: PricingRules_getRuleById
      description: Get a pricing rule
      parameters:
        - description: The rule id
          name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRuleView'
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesGetRuleByIdResponse'
        '404':
          description: Asset or pricing rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesGetRuleById404Response'
    put:
      tags:
        - Pricing Rules
      summary: Update a pricing rule
      operationId: PricingRules_updateRuleById
      description: Update a pricing rule
      parameters:
        - description: The rule id
          name: ruleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricingRuleRequest'
        required: true
      responses:
        '201':
          description: The created pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRuleView'
        '403':
          description: Forbidden to create the pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesUpdateRuleByIdResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesUpdateRuleById404Response'
    delete:
      tags:
        - Pricing Rules
      summary: Delete a pricing rule
      operationId: PricingRules_deleteRule
      description: Delete a pricing rule
      parameters:
        - description: The rule id
          name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesDeleteRuleResponse'
        '403':
          description: Forbidden to access this pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesDeleteRule403Response'
        '404':
          description: Pricing rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesDeleteRule404Response'
  /plans/{id}:
    get:
      tags:
        - Plans
      summary: Get an plan
      operationId: Plans_getPlan
      description: Get an plan
      parameters:
        - description: The plan id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to access this plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansGetPlanResponse'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansGetPlan404Response'
    put:
      tags:
        - Plans
      summary: Update an plan
      operationId: Plans_updatePlanById
      description: Update an plan
      parameters:
        - description: The plan id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanRequest'
        required: true
      responses:
        '200':
          description: The updated plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansUpdatePlanByIdResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansUpdatePlanById404Response'
    delete:
      tags:
        - Plans
      summary: Delete a plan
      operationId: Plans_deletePlan
      description: Delete a plan
      parameters:
        - description: The plan id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansDeletePlanResponse'
        '403':
          description: Forbidden to access this plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansDeletePlan403Response'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansDeletePlan404Response'
  /plans/{id}/remove-trial:
    put:
      tags:
        - Plans
      summary: Remove trial from a plan
      operationId: Plans_removeTrialOperation
      description: Remove trial from a plan
      parameters:
        - description: The plan id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to update this plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansRemoveTrialOperationResponse'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansRemoveTrialOperation404Response'
  /plan-elements/{id}:
    get:
      tags:
        - Elements
      summary: Get an plan element
      operationId: Elements_getById
      description: Get an plan element
      parameters:
        - description: The plan element id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementView'
        '403':
          description: Forbidden to access this plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsGetByIdResponse'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsGetById404Response'
    put:
      tags:
        - Elements
      summary: Update a plan element
      operationId: Elements_updateElementById
      description: Update a plan element
      parameters:
        - description: The plan element id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanElementRequest'
        required: true
      responses:
        '200':
          description: The updated plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsUpdateElementByIdResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsUpdateElementById404Response'
    delete:
      tags:
        - Elements
      summary: Delete a plan element
      operationId: Elements_deletePlanElement
      description: Delete a plan element
      parameters:
        - description: The plan element id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsDeletePlanElementResponse'
        '403':
          description: Forbidden to access this plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsDeletePlanElement403Response'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsDeletePlanElement404Response'
  /payment/pay/customer/{customerId}:
    put:
      tags:
        - Payment
      summary: Pay outstanding invoices
      operationId: Payment_outstandingInvoices
      description: Pay outstanding invoices
      parameters:
        - description: Customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The client secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOutstandingInvoicesResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOutstandingInvoices404Response'
  /payment/force-reset/product/{productId}/user/{userId}:
    put:
      tags:
        - Payment
      summary: Force reset payment record and payment customer for testing
      operationId: Payment_forceResetProductUser
      description: Force reset payment record and payment customer for testing
      parameters:
        - description: Product id
          name: productId
          in: path
          required: true
          schema:
            type: string
        - description: User id
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentForceResetProductUserResponse'
  /payment/customers/{id}/pay:
    put:
      tags:
        - Payment Methods
      summary: Pay all outstanding invoices for payment customer
      operationId: PaymentMethods_payOutstandingInvoices
      description: Pay all outstanding invoices for payment customer
      parameters:
        - description: The payment customer id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentMethodsPayOutstandingInvoicesResponse
  /payment/customers/{customerId}/default/method/{methodId}:
    put:
      tags:
        - Payment Methods
      summary: Set default payment method for a payment customer
      operationId: PaymentMethods_setDefaultMethod
      description: Set default payment method for a payment customer
      parameters:
        - description: The payment customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
        - description: The default payment method id
          name: methodId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsSetDefaultMethodResponse'
  /payment/customers/force-reset/{id}:
    put:
      tags:
        - Payment Methods
      summary: Force reset payment customer for testing
      operationId: PaymentMethods_forceResetCustomer
      description: Force reset payment customer for testing
      parameters:
        - description: The payment customer id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsForceResetCustomerResponse'
  /payment/customers/force-reset/user/{userId}/configuration/{paymentConfigurationId}:
    put:
      tags:
        - Payment Methods
      summary: Force reset payment customer for testing
      operationId: PaymentMethods_forceResetCustomerForTesting
      description: Force reset payment customer for testing
      parameters:
        - description: User Id
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: Product Id
          name: paymentConfigurationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentMethodsForceResetCustomerForTestingResponse
  /payment/configurations/{id}:
    get:
      tags:
        - Payment Configurations
      summary: Retrieve a payment configuration
      operationId: PaymentConfigurations_getConfiguration
      description: Retrieve a payment configuration
      parameters:
        - description: The payment configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfigurationView'
        '403':
          description: Forbidden to access this payment configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsGetConfigurationResponse
        '404':
          description: Payment configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsGetConfiguration404Response
    put:
      tags:
        - Payment Configurations
      summary: Update a payment configuration
      operationId: PaymentConfigurations_updateConfigurationOperation
      description: Update a payment configuration
      parameters:
        - description: The payment configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated payment configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfigurationView'
        '403':
          description: Forbidden to access this payment configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsUpdateConfigurationOperationResponse
        '404':
          description: Payment configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsUpdateConfigurationOperation404Response
    delete:
      tags:
        - Payment Configurations
      summary: Delete a payment configuration
      operationId: PaymentConfigurations_deleteConfiguration
      description: Delete a payment configuration
      parameters:
        - description: The payment configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsDeleteConfigurationResponse
        '403':
          description: Forbidden to access this payment configurations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsDeleteConfiguration403Response
        '404':
          description: Payment configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsDeleteConfiguration404Response
  /payment/complete-subscription/product/{productId}/user/{userId}:
    put:
      tags:
        - Payment
      summary: Get product key for payment
      operationId: Payment_getProductKey
      description: Get product key for payment
      parameters:
        - description: Product Id
          name: productId
          in: path
          required: true
          schema:
            type: string
        - description: User Id
          name: userId
          in: path
          required: true
          schema:
            type: string
        - name: applicationId
          in: query
          required: false
          schema:
            type: string
        - name: contractExternalId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Payment record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecordView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentGetProductKeyResponse'
  /payment/cancel/product/{productId}/user/{userId}:
    put:
      tags:
        - Payment
      summary: Cancel payment
      operationId: Payment_cancelProductPayment
      description: Cancel payment
      parameters:
        - description: Product Id
          name: productId
          in: path
          required: true
          schema:
            type: string
        - description: User Id
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCancelProductPaymentResponse'
  /organizations/{id}:
    get:
      tags:
        - Organizations
      summary: Retrieve an organization
      operationId: Organizations_getOrganization
      description: Retrieve an organization
      parameters:
        - description: The organization id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationView'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetOrganizationResponse'
    put:
      tags:
        - Organizations
      summary: Update an organization
      operationId: Organizations_updateOrganizationOperation
      description: Update an organization
      parameters:
        - description: The organization id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationDto'
        required: true
      responses:
        '200':
          description: The organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationsUpdateOrganizationOperationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationsUpdateOrganizationOperation404Response
    delete:
      tags:
        - Organizations
      summary: Delete an organization
      operationId: Organizations_removeById
      description: Delete an organization
      parameters:
        - description: The Organization ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsRemoveByIdResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsRemoveById404Response'
  /notification-provider/configurations/{id}:
    get:
      tags:
        - Notification Provider Configurations
      summary: Retrieve a notification provider configuration
      operationId: NotificationProviderConfigurations_getById
      description: Retrieve a notification provider configuration
      parameters:
        - description: The notification provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The notification provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationProviderConfigurationView'
        '403':
          description: Forbidden to access this notification provider configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsGetByIdResponse
        '404':
          description: Notification provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsGetById404Response
    put:
      tags:
        - Notification Provider Configurations
      summary: Update a notification provider configuration
      operationId: NotificationProviderConfigurations_updateConfiguration
      description: Update a notification provider configuration
      parameters:
        - description: The notification provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpdateNotificationProviderConfigurationRequest
        required: true
      responses:
        '200':
          description: The updated notification provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationProviderConfigurationView'
        '403':
          description: Forbidden to access this notification provider configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsUpdateConfigurationResponse
        '404':
          description: Notification provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsUpdateConfiguration404Response
    delete:
      tags:
        - Notification Provider Configurations
      summary: Delete a notification provider configuration
      operationId: NotificationProviderConfigurations_removeConfiguration
      description: Delete a notification provider configuration
      parameters:
        - description: The notification provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsRemoveConfigurationResponse
        '403':
          description: Forbidden to delete this notification provider configurations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsRemoveConfiguration403Response
        '404':
          description: Notification provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsRemoveConfiguration404Response
  /notification-custom-content:
    put:
      tags:
        - Notification Custom Content
      summary: Update a notification template
      operationId: NotificationCustomContent_updateTemplate
      description: Update a notification template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationTemplateRequest'
        required: true
      responses:
        '200':
          description: The notification templates
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationCustomContentUpdateTemplateResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationCustomContentUpdateTemplate404Response
  /identity-provider/configurations/{id}:
    get:
      tags:
        - Identity Provider Configurations
      summary: Retrieve an Identity Provider Configuration
      operationId: IdentityProviderConfigurations_getConfiguration
      description: Retrieve an Identity Provider Configuration
      parameters:
        - description: The API Management Configuration ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Identity Provider Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderConfigurationView'
        '403':
          description: Forbidden to access this Identity Provider Configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsGetConfigurationResponse
        '404':
          description: Identity Provider Configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsGetConfiguration404Response
    put:
      tags:
        - Identity Provider Configurations
      summary: Update an identity provider management configuration
      operationId: IdentityProviderConfigurations_updateProviderConfig
      description: Update an identity provider configuration
      parameters:
        - description: The identity provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIdentityProviderConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated identity provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderConfigurationView'
        '403':
          description: Forbidden to access this identity provider configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsUpdateProviderConfigResponse
        '404':
          description: Identity provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsUpdateProviderConfig404Response
    delete:
      tags:
        - Identity Provider Configurations
      summary: Delete an Identity Provider Configuration
      operationId: IdentityProviderConfigurations_deleteProviderConfig
      description: Delete an dentity Provider Configuration
      parameters:
        - description: The Identity Provider Configuration ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsDeleteProviderConfigResponse
        '403':
          description: Forbidden to delete this Identity Provider Configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsDeleteProviderConfig403Response
        '404':
          description: Identity Provider Configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsDeleteProviderConfig404Response
  /features/{id}:
    get:
      tags:
        - Features
      summary: Get an feature
      operationId: Features_getById
      description: Get an feature
      parameters:
        - description: The feature id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureView'
        '403':
          description: Forbidden to access this feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesGetByIdResponse'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesGetById404Response'
    put:
      tags:
        - Features
      summary: Update an feature
      operationId: Features_updateFeatureById
      description: Update an feature
      parameters:
        - description: The feature id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeatureRequest'
        required: true
      responses:
        '200':
          description: The updated feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesUpdateFeatureByIdResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesUpdateFeatureById404Response'
    delete:
      tags:
        - Features
      summary: Delete a feature
      operationId: Features_deleteFeatureById
      description: Delete a feature
      parameters:
        - description: The Feature ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesDeleteFeatureByIdResponse'
        '403':
          description: Forbidden to access this feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesDeleteFeatureById403Response'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesDeleteFeatureById404Response'
  /export/configurations/{id}:
    get:
      tags:
        - Export Configurations
      summary: Retrieve an export configuration
      operationId: ExportConfigurations_getConfiguration
      description: Retrieve an export configuration
      parameters:
        - description: The export configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The export configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportConfigurationView'
        '403':
          description: Forbidden to access this export configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsGetConfigurationResponse
        '404':
          description: Export configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsGetConfiguration404Response
    put:
      tags:
        - Export Configurations
      summary: Update an export configuration
      operationId: ExportConfigurations_updateConfiguration
      description: Update an export configuration
      parameters:
        - description: The export configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExportConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated export configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportConfigurationView'
        '403':
          description: Forbidden to access this export configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsUpdateConfigurationResponse
        '404':
          description: Export configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsUpdateConfiguration404Response
    delete:
      tags:
        - Export Configurations
      summary: Delete an export configuration
      operationId: ExportConfigurations_deleteConfiguration
      description: Delete an export configuration
      parameters:
        - description: The export configuration's id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsDeleteConfigurationResponse
        '403':
          description: Forbidden to access this export configurations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsDeleteConfiguration403Response
        '404':
          description: Export configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsDeleteConfiguration404Response
  /element-definitions/{id}:
    get:
      tags:
        - Element Definitions
      operationId: ElementDefinitions_getById
      parameters:
        - description: The element definition id
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementDefinitionView'
    put:
      tags:
        - Element Definitions
      operationId: ElementDefinitions_updatePricingRule
      parameters:
        - description: The element definition id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementDefinitionUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementDefinitionView'
    delete:
      tags:
        - Element Definitions
      operationId: ElementDefinitions_deleteById
      parameters:
        - description: The element definition id
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementDefinitionsDeleteByIdResponse'
  /consumer-data-provider/configurations/{id}:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve an data provider configuration
      operationId: ConsumerDataProviderConfigurations_getConfiguration
      description: Retrieve an data provider configuration
      parameters:
        - description: The data provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The data provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
        '403':
          description: Forbidden to access this data provider configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsGetConfigurationResponse
        '404':
          description: Data provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsGetConfiguration404Response
    put:
      tags:
        - Consumer Data Provider Configurations
      summary: Update an data provider configuration
      operationId: ConsumerDataProviderConfigurations_updateConfiguration
      description: Update an consumer data provider configuration
      parameters:
        - description: The consumer data provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpdateConsumerDataProviderConfigurationRequest
        required: true
      responses:
        '200':
          description: The updated consumer data provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
        '403':
          description: Forbidden to access this consumer data provider configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsUpdateConfigurationResponse
        '404':
          description: Consumer data provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsUpdateConfiguration404Response
    delete:
      tags:
        - Consumer Data Provider Configurations
      summary: Delete a data provider configuration
      operationId: ConsumerDataProviderConfigurations_deleteConfiguration
      description: Delete a data provider configuration
      parameters:
        - description: The consumer data provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsDeleteConfigurationResponse
        '403':
          description: Forbidden to delete this consumer data provider configurations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsDeleteConfiguration403Response
        '404':
          description: Consumer data provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsDeleteConfiguration404Response
  /billing-metadata/{id}:
    put:
      tags:
        - Billing Metadata
      summary: Update an billing metadata
      operationId: BillingMetadata_updateOperation
      description: Update an billing metadata
      parameters:
        - description: The billing metadata id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBillingMetadataRequest'
        required: true
      responses:
        '201':
          description: The created billing netadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataView'
        '403':
          description: Forbidden to create the billingmetadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataUpdateOperationResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataUpdateOperation404Response'
    delete:
      tags:
        - Billing Metadata
      summary: Delete billing metadata
      operationId: BillingMetadata_deleteOperation
      description: Delete billing metadata
      parameters:
        - description: The billing metadata id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataDeleteOperationResponse'
        '403':
          description: Forbidden to access this billing metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataDeleteOperation403Response'
        '404':
          description: Billing metadata not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataDeleteOperation404Response'
  /assets/{id}:
    get:
      tags:
        - Assets
      summary: Get an asset
      operationId: Assets_getById
      description: Get an asset
      parameters:
        - description: The asset id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetView'
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsGetByIdResponse'
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsGetById404Response'
    put:
      tags:
        - Assets
      summary: Update an asset
      operationId: Assets_updateAssetById
      description: Update an asset
      parameters:
        - description: The asset id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssetRequest'
        required: true
      responses:
        '200':
          description: The updated asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetView'
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsUpdateAssetByIdResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsUpdateAssetById404Response'
    delete:
      tags:
        - Assets
      summary: Delete an asset
      operationId: Assets_deleteAsset
      description: Delete an asset
      parameters:
        - description: The asset id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsDeleteAssetResponse'
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsDeleteAsset403Response'
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsDeleteAsset404Response'
  /applications:
    get:
      tags:
        - Applications
      summary: List applications
      operationId: Applications_listApplications
      description: List applications
      parameters:
        - description: Id of application's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: sort
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsListApplicationsResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsListApplications404Response'
    put:
      tags:
        - Applications
      summary: Update an application
      operationId: Applications_updateApplicationOperation
      description: Update an application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
        required: true
      responses:
        '200':
          description: The application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
        '403':
          description: Forbidden to access this application
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsUpdateApplicationOperationResponse
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsUpdateApplicationOperation404Response
    post:
      tags:
        - Applications
      summary: Create an application
      operationId: Applications_createNewApplication
      description: Create an application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '201':
          description: The application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
        '403':
          description: Forbidden to access this application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsCreateNewApplicationResponse'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsCreateNewApplication404Response
  /apim/configurations/{id}:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve an API management configuration
      operationId: ApiManagementConfigurations_getConfigurationById
      description: Retrieve an API management configuration
      parameters:
        - description: The API management configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The API management configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMConfigurationView'
        '403':
          description: Forbidden to access this API management configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetConfigurationByIdResponse
        '404':
          description: API management configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetConfigurationById404Response
    put:
      tags:
        - API Management Configurations
      summary: Update an API management configuration
      operationId: ApiManagementConfigurations_updateConfiguration
      description: Update an API management configuration
      parameters:
        - description: The API management configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAPIMConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated API management configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMConfigurationView'
        '403':
          description: Forbidden to access this API management configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsUpdateConfigurationResponse
        '404':
          description: API management configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsUpdateConfiguration404Response
    delete:
      tags:
        - API Management Configurations
      summary: Delete an API management configuration
      operationId: ApiManagementConfigurations_deleteConfiguration
      description: Delete an API management configuration
      parameters:
        - description: The API management configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsDeleteConfigurationResponse
        '403':
          description: Forbidden to delete this API management configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsDeleteConfiguration403Response
        '404':
          description: API management configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsDeleteConfiguration404Response
  /account-tier:
    get:
      tags:
        - Account Tiers
      summary: Get all account tiers
      operationId: AccountTiers_listAllTiers
      description: Get all account tiers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersListAllTiersResponse'
    put:
      tags:
        - Account Tiers
      summary: Update an account tier
      operationId: AccountTiers_updateTierOperation
      description: Update an account tier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountTierRequest'
        required: true
      responses:
        '200':
          description: The account tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTierView'
        '404':
          description: Account tier not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersUpdateTierOperationResponse'
    post:
      tags:
        - Account Tiers
      summary: Create an AccountTier
      operationId: AccountTiers_createAccountTier
      description: Create an AccountTier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountTierRequest'
        required: true
      responses:
        '201':
          description: The account tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTierView'
        '404':
          description: Account tier not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersCreateAccountTierResponse'
  /account-tier/{id}/upgrade:
    put:
      tags:
        - Account Tiers
      summary: Upgrade account tier
      operationId: AccountTiers_upgradeTier
      description: Upgrade account tier
      parameters:
        - description: The account tier ID
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeAccountTierRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersUpgradeTierResponse'
  /account-tier/{id}/sync:
    put:
      tags:
        - Account Tiers
      summary: Sync account tier data
      operationId: AccountTiers_syncTierData
      description: Sync account tier data
      parameters:
        - description: The account tier id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersSyncTierDataResponse'
  /account-tier/{id}/payment-methods/{paymentMethodId}/default:
    put:
      tags:
        - Account Tiers
      summary: Set default payment method
      operationId: AccountTiers_setDefaultPaymentMethod
      description: Set default payment method
      parameters:
        - description: The account tier id
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The payment method ID
          name: paymentMethodId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AccountTiersSetDefaultPaymentMethodResponse
  /account-tier/{id}/downgrade:
    put:
      tags:
        - Account Tiers
      summary: Downgrade account tier
      operationId: AccountTiers_downgradeTierById
      description: Downgrade account tier
      parameters:
        - description: The account tier id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DowngradeAccountTierRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersDowngradeTierByIdResponse'
  /users:
    get:
      tags:
        - Users
      summary: Retrieve a lst of users for the supplied organzization / tenant
      operationId: Users_getUserList
      description: Retrieve a lst of users for the supplied organzization / tenant
      parameters:
        - description: The Organization ID
          name: organizationId
          in: query
          required: false
          schema:
            type: string
        - description: The Tenant ID
          name: tenantId
          in: query
          required: false
          schema:
            type: string
        - description: The current organization ID
          name: currentOrganizationId
          in: query
          required: false
          schema:
            type: string
        - name: roleNames
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetUserListResponse'
    post:
      tags:
        - Users
      summary: Create a user
      operationId: Users_createUser
      description: Create a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
        required: true
      responses:
        '201':
          description: The User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
  /tiers:
    get:
      tags:
        - Tiers
      summary: List of tiers owned by a organization
      operationId: Tiers_listOwnedByOrganization
      description: List of tiers owned by a organization
      parameters:
        - description: Id of tiers organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Tiers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersListOwnedByOrganizationResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersListOwnedByOrganization404Response'
    post:
      tags:
        - Tiers
      summary: Create a tier
      operationId: Tiers_createTier
      description: Create a tier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTierRequest'
        required: true
      responses:
        '201':
          description: The created tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierView'
        '403':
          description: Forbidden to create the tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersCreateTierResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersCreateTier404Response'
  /tenants:
    get:
      tags:
        - Tenants
      summary: List tenants
      operationId: Tenants_list
      description: List tenants
      responses:
        '200':
          description: The tenants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsListResponse'
    post:
      tags:
        - Tenants
      summary: Create a tenant
      operationId: Tenants_create
      description: Create a tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantDto'
        required: true
      responses:
        '201':
          description: The Tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
  /templates:
    post:
      tags:
        - Templates
      summary: Create a template
      operationId: Templates_createTemplate
      description: Create a template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateRequest'
        required: true
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesCreateTemplateResponse'
        '403':
          description: Forbidden to manage templates for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesCreateTemplate403Response'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesCreateTemplate404Response'
  /stored-filters:
    post:
      tags:
        - Stored filters
      summary: Create an storedfilter
      operationId: StoredFilters_createStoredfilter
      description: Create an storedfilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoredFilterRequest'
        required: true
      responses:
        '201':
          description: The created stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '403':
          description: Forbidden to create the stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
  /sla-violations/review:
    post:
      tags:
        - SLA Violations
      summary: Review sla violations
      operationId: SlaViolations_reviewAction
      description: Review sla violations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewSLAViolationRequest'
        required: true
      responses:
        '201':
          description: The sla violation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaViolationsReviewActionResponse'
        '404':
          description: Organization or sla not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaViolationsReviewAction404Response'
  /sla-definitions:
    get:
      tags:
        - SLA Definitions
      summary: List sla definitions by organization
      operationId: SlaDefinitions_getByOrganization
      description: List sla definitions by organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sla definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaDefinitionsGetByOrganizationResponse'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SlaDefinitionsGetByOrganization403Response
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SlaDefinitionsGetByOrganization404Response
    post:
      tags:
        - SLA Definitions
      summary: Create a sla definition
      operationId: SlaDefinitions_createDefinition
      description: Create a sla definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSLADefinitionDTO'
        required: true
      responses:
        '201':
          description: The sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLADefinitionView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaDefinitionsCreateDefinitionResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaDefinitionsCreateDefinition404Response'
  /site-provider/configurations:
    get:
      tags:
        - Site Provider Configurations
      summary: List site provider configurations
      operationId: SiteProviderConfigurations_list
      description: List site provider configurations
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - name: paged
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: List of site provider configurations for organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteProviderConfigurationsListResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteProviderConfigurationsList403Response'
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteProviderConfigurationsList404Response'
    post:
      tags:
        - Site Provider Configurations
      summary: Create an consumerdataprovider configuration
      operationId: SiteProviderConfigurations_createConsumerDataProviderConfiguration
      description: Create an consumerdataprovider configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSiteConfigurationRequest'
        required: true
      responses:
        '201':
          description: The site provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfigurationView'
        '403':
          description: Forbidden to create site configurations for this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsCreateConsumerDataProviderConfigurationResponse
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsCreateConsumerDataProviderConfiguration404Response
  /registration:
    post:
      tags:
        - Registration
      operationId: Registration_createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSelfServiceUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            site/json:
              schema:
                $ref: '#/components/schemas/SelfServiceUserResponse'
  /products:
    get:
      tags:
        - Products
      summary: List products
      operationId: Products_list
      description: |-
        List products (three modes of pperation):  
        mode 1: [organizationId, userId, cpqConfigurationId, cpqStaged] 
        mode 2: [organizationId, userId, expand, start, end] 
        mode 3: [organizationId, tag]
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: false
          schema:
            type: string
        - description: The owner id
          name: ownerId
          in: query
          required: false
          schema:
            type: string
        - name: tag
          in: query
          required: false
          schema:
            type: string
        - description: Retrieve cpq staged products?
          name: cpqStaged
          in: query
          required: false
          schema:
            type: boolean
        - description: The cpq configuration id
          name: cpqConfigurationId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Attributes to expand (any combination of the following allowed):
            [calls, spends, consumers]
          name: expand
          in: query
          required: false
          schema:
            type: string
        - description: The starting timestamp (for expanded sla violations and invoices)
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (for expanded sla violations and invoices)
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsList403Response'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsList404Response'
    post:
      tags:
        - Products
      summary: Create a product
      operationId: Products_createProduct
      description: Create a product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        '201':
          description: The Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to create the product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsCreateProductResponse'
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsCreateProduct404Response'
  /product/families:
    get:
      tags:
        - Product Family
      summary: List of product families owned by a organization
      operationId: ProductFamily_listOwnedByOrganization
      description: List of product families owned by a organization
      parameters:
        - description: Id of product families organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product families
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductFamilyListOwnedByOrganizationResponse
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductFamilyListOwnedByOrganization404Response
    post:
      tags:
        - Product Family
      summary: Create an product family
      operationId: ProductFamily_createNewFamily
      description: Create an product family
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductFamilyRequest'
        required: true
      responses:
        '201':
          description: The created product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyView'
        '403':
          description: Forbidden to create the product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyCreateNewFamilyResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyCreateNewFamily404Response'
  /product-keys:
    post:
      tags:
        - Product Keys
      summary: Create a product key
      operationId: ProductKeys_createNewKey
      description: Create a product key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductKeyRequest'
        required: true
      responses:
        '201':
          description: The Product Keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyView'
        '400':
          description: User doesn't belong to the organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysCreateNewKeyResponse'
        '403':
          description: Forbidden to access this organization or user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysCreateNewKey403Response'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysCreateNewKey404Response'
  /product-keys/validate:
    post:
      tags:
        - Product Keys
      summary: Retrieve the status of a product key
      operationId: ProductKeys_getStatus
      description: Retrieve the status of a product key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductKeyStatusRequestRequest'
        required: true
      responses:
        '200':
          description: The product key's status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyStatusResponseView'
  /pricing-rules:
    post:
      tags:
        - Pricing Rules
      summary: Create a pricing rule
      operationId: PricingRules_createRule
      description: Create a pricing rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePricingRuleRequest'
        required: true
      responses:
        '201':
          description: The created pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRuleView'
        '403':
          description: Forbidden to create the pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesCreateRuleResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesCreateRule404Response'
  /plans:
    get:
      tags:
        - Plans
      summary: List of plans owned by a organization
      operationId: Plans_listOwnedByOrganization
      description: List of plans owned by a organization
      parameters:
        - description: ID of Plans Organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plans
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansListOwnedByOrganizationResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansListOwnedByOrganization404Response'
    post:
      tags:
        - Plans
      summary: Create an plan
      operationId: Plans_createPlan
      description: Create an plan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanRequest'
        required: true
      responses:
        '201':
          description: The created plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to create the plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansCreatePlanResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansCreatePlan404Response'
  /plan-elements:
    get:
      tags:
        - Elements
      summary: List of plan elements owned by a organization
      operationId: Elements_listOwnedByOrganization
      description: List of plan elements owned by a organization
      parameters:
        - description: Id of plan elements organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan elements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsListOwnedByOrganizationResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ElementsListOwnedByOrganization404Response
    post:
      tags:
        - Elements
      summary: Create a plan element
      operationId: Elements_createPlanElement
      description: Create a plan element
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanElementRequest'
        required: true
      responses:
        '201':
          description: The created plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementView'
        '403':
          description: Forbidden to create the plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsCreatePlanElementResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsCreatePlanElement404Response'
  /payment/open:
    post:
      tags:
        - Payment
      summary: Initiate payment
      operationId: Payment_initiatePaymentOperation
      description: Initiate payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
        required: true
      responses:
        '200':
          description: The client secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiatePaymentOperationResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentInitiatePaymentOperation404Response
  /payment/customers:
    get:
      tags:
        - Payment Methods
      summary: List Payment Customers
      operationId: PaymentMethods_listCustomers
      description: List Payment Customers
      parameters:
        - description: The Organization ID
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List payment customers for organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsListCustomersResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsListCustomers403Response'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsListCustomers404Response'
    post:
      tags:
        - Payment Methods
      summary: Add a new payment method
      operationId: PaymentMethods_addNewMethod
      description: Add a new payment method to payment customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentCustomerRequest'
        required: true
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsAddNewMethodResponse'
  /payment/customers/{id}/method:
    post:
      tags:
        - Payment Methods
      summary: Add a new payment method
      operationId: PaymentMethods_addNewMethodOperation
      description: Add a new payment method to payment customer
      parameters:
        - description: The Payment Customer ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The client secret
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentMethodsAddNewMethodOperationResponse
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentMethodsAddNewMethodOperation404Response
  /payment/configurations:
    get:
      tags:
        - Payment Configurations
      summary: List payment configurations
      operationId: PaymentConfigurations_list
      description: List payment configurations
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of payment configurations for organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfigurationsListResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfigurationsList403Response'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfigurationsList404Response'
    post:
      tags:
        - Payment Configurations
      summary: Create a payment configuration
      operationId: PaymentConfigurations_createConfigurationOperation
      description: Create a payment configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentConfigurationRequest'
        required: true
      responses:
        '201':
          description: The payment configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfigurationView'
        '403':
          description: Forbidden to create paymentconfigurations for this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsCreateConfigurationOperationResponse
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsCreateConfigurationOperation404Response
  /payment/checkout:
    post:
      tags:
        - Payment
      summary: Initiate payment
      operationId: Payment_initiateCheckoutPayment
      description: Initiate payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequestRequest'
        required: true
      responses:
        '200':
          description: The payment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiateCheckoutPaymentResponse'
  /organizations:
    get:
      tags:
        - Organizations
      summary: List organizations
      operationId: Organizations_getList
      description: List organizations
      parameters:
        - description: The tenant id
          name: tenantId
          in: query
          required: false
          schema:
            type: string
        - description: The parent organization id
          name: organizationId
          in: query
          required: false
          schema:
            type: string
        - description: The current organization id
          name: currentOrganizationId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetListResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetList404Response'
    post:
      tags:
        - Organizations
      summary: Create an organization
      operationId: Organizations_createOrganization
      description: Create an organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationDto'
        required: true
      responses:
        '201':
          description: The organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationView'
  /notification-provider/configurations:
    get:
      tags:
        - Notification Provider Configurations
      operationId: NotificationProviderConfigurations_getConfigurationProperties
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of notification provider configuration for organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsGetConfigurationPropertiesResponse
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNotificationProviderConfigurationView'
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNotificationProviderConfigurationView'
    post:
      tags:
        - Notification Provider Configurations
      summary: Create a notificationprovider configuration
      operationId: NotificationProviderConfigurations_createConfiguration
      description: Create a notificationprovider configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateNotificationProviderConfigurationRequest
        required: true
      responses:
        '201':
          description: The notification provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationProviderConfigurationView'
        '403':
          description: >-
            Forbidden to create a notification provider configurations for this
            organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsCreateConfigurationResponse
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsCreateConfiguration404Response
  /invoices/refunds:
    post:
      tags:
        - Invoices
      summary: Issue a refund
      operationId: Invoices_issueRefundOperation
      description: Issue a refund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundRequest'
        required: true
      responses:
        '204':
          description: 'If the refund was successfully created '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesIssueRefundOperationResponse'
        '403':
          description: Forbidden to issue refunds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesIssueRefundOperation403Response'
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesIssueRefundOperation404Response'
  /invoices/payment:
    post:
      tags:
        - Invoices
      summary: Add a received payment to an invoice
      operationId: Invoices_addReceivedPayment
      description: Add a received payment to an invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentReceivedRequest'
        required: true
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesAddReceivedPaymentResponse'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesAddReceivedPayment404Response'
  /invoices/line-items:
    post:
      tags:
        - Invoices
      summary: Submit a line item to be recorded
      operationId: Invoices_submitLineItem
      description: Submit a line item to be recorded
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLineItemRequest'
        required: true
      responses:
        '204':
          description: When the line item is successfully recorded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesSubmitLineItemResponse'
        '403':
          description: Forbidden to record a line item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesSubmitLineItem403Response'
        '404':
          description: Product key or asset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesSubmitLineItem404Response'
  /identity-provider/configurations:
    get:
      tags:
        - Identity Provider Configurations
      summary: List Identity Provide Configurations
      operationId: IdentityProviderConfigurations_list
      description: List Identity Provide Configurations
      parameters:
        - description: The Organization ID
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of Identity Provider Configurations for Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsListResponse
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsList403Response
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsList404Response
    post:
      tags:
        - Identity Provider Configurations
      summary: Create an Identity Provider Configuration
      operationId: IdentityProviderConfigurations_createProviderConfig
      description: Create an Identity Provider Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIdentityProviderConfigurationRequest'
        required: true
      responses:
        '201':
          description: The Identity Ptovider Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderConfigurationView'
        '403':
          description: >-
            Forbidden to create Identity Provider Configurations for this
            Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsCreateProviderConfigResponse
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsCreateProviderConfig404Response
  /features:
    get:
      tags:
        - Features
      summary: List of features owned by a organization
      operationId: Features_listOrganizationFeatures
      description: List of features owned by a organization
      parameters:
        - description: Id of features organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The features
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesListOrganizationFeaturesResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FeaturesListOrganizationFeatures404Response
    post:
      tags:
        - Features
      summary: Create an feature
      operationId: Features_createFeature
      description: Create an feature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeatureRequest'
        required: true
      responses:
        '201':
          description: The created feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureView'
        '403':
          description: Forbidden to create the feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesCreateFeatureResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesCreateFeature404Response'
  /export/configurations:
    get:
      tags:
        - Export Configurations
      summary: List export configurations
      operationId: ExportConfigurations_listExportConfigurations
      description: List export configurations
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The export configurations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsListExportConfigurationsResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsListExportConfigurations403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsListExportConfigurations404Response
    post:
      tags:
        - Export Configurations
      summary: Create an export configuration
      operationId: ExportConfigurations_createConfiguration
      description: Create an export configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExportConfigurationRequest'
        required: true
      responses:
        '201':
          description: The export configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportConfigurationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsCreateConfigurationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsCreateConfiguration404Response
  /element-definitions:
    get:
      tags:
        - Element Definitions
      operationId: ElementDefinitions_getList
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementDefinitionsGetListResponse'
    post:
      tags:
        - Element Definitions
      operationId: ElementDefinitions_createPricingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementDefinitionCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementDefinitionView'
  /demo/rules/lineitem:
    post:
      tags:
        - Demo Pricing Rules
      summary: Evaluate a pricing rule against some demo data
      operationId: DemoPricingRules_evaluatePricingRuleOperation
      description: Evaluate a pricing rule against some demo data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoPricingRulesDSLRequest'
        required: true
      responses:
        '200':
          description: Demo pricing rule evaluation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoPricingRuleResultView'
  /consumer-data-provider/configurations:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: List data provider configurations
      operationId: ConsumerDataProviderConfigurations_listDataProviderConfigurations
      description: List data provider configurations
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - name: paged
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: List of data provider configurations for organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsListDataProviderConfigurationsResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsListDataProviderConfigurations403Response
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsListDataProviderConfigurations404Response
    post:
      tags:
        - Consumer Data Provider Configurations
      summary: Create an consumerdataprovider configuration
      operationId: ConsumerDataProviderConfigurations_createConfigurationOperation
      description: Create an consumerdataprovider configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateConsumerDataProviderConfigurationRequest
        required: true
      responses:
        '201':
          description: The data provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
        '403':
          description: >-
            Forbidden to create consumer data provider configurations for this
            organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsCreateConfigurationOperationResponse
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsCreateConfigurationOperation404Response
  /communications:
    get:
      tags:
        - Communications
      summary: List communications (paginated)
      operationId: Communications_listPaginatedCommunications
      description: List communications (paginated)
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The communications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CommunicationsListPaginatedCommunicationsResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CommunicationsListPaginatedCommunications404Response
    post:
      tags:
        - Communications
      summary: Create a communication
      operationId: Communications_createCommunication
      description: Create a communication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommunicationRequest'
        required: true
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationsCreateCommunicationResponse'
        '403':
          description: Forbidden to create communications
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CommunicationsCreateCommunication403Response
  /commerce/terms:
    get:
      tags:
        - Commerce Portal Acceptance Terms
      operationId: CommercePortalAcceptanceTerms_getTerms
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/CommercePortalAcceptanceTermsGetTermsResponse
    post:
      tags:
        - Commerce Portal Acceptance Terms
      operationId: CommercePortalAcceptanceTerms_acceptancePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptTermsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /billing-metadata:
    get:
      tags:
        - Billing Metadata
      summary: List billing metadata by organization
      operationId: BillingMetadata_listByOrganization
      description: List billing metadata by organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The billing metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataListByOrganizationResponse'
        '403':
          description: Forbidden to access billing metadata for this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BillingMetadataListByOrganization403Response
    post:
      tags:
        - Billing Metadata
      summary: Create billing metadata
      operationId: BillingMetadata_createOperation
      description: Create billing metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingMetadataRequest'
        required: true
      responses:
        '201':
          description: The created billin gmetadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataView'
        '403':
          description: Forbidden to create the billin gmetadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataCreateOperationResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataCreateOperation404Response'
  /assets:
    get:
      tags:
        - Assets
      summary: List of assets owned by a user
      operationId: Assets_listOwnedByUser
      description: List of assets owned by an organization
      parameters:
        - description: Id of assets organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: Id of the API management configuration
          name: apimConfigurationId
          in: query
          required: true
          schema:
            type: string
        - description: Id of the environment
          name: environmentId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The APIs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListOwnedByUserResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListOwnedByUser404Response'
    post:
      tags:
        - Assets
      summary: Create an asset
      operationId: Assets_createAsset
      description: Create an asset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssetRequest'
        required: true
      responses:
        '201':
          description: The created asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetView'
        '403':
          description: Forbidden to create the asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsCreateAssetResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsCreateAsset404Response'
  /apim/configurations:
    get:
      tags:
        - API Management Configurations
      summary: List API management configurations
      operationId: ApiManagementConfigurations_list
      description: List API management configurations
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of API management configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementConfigurationsListResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsList403Response
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsList404Response
    post:
      tags:
        - API Management Configurations
      summary: Create an API management configuration
      operationId: ApiManagementConfigurations_createApiConfiguration
      description: Create an API management configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAPIMConfigurationRequest'
        required: true
      responses:
        '201':
          description: The API management configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMConfigurationView'
        '403':
          description: >-
            Forbidden to create API management configurations for this
            organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsCreateApiConfigurationResponse
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsCreateApiConfiguration404Response
  /api-keys:
    get:
      tags:
        - API Keys
      summary: List API leys
      operationId: ApiKeys_list
      description: List API keys
      parameters:
        - description: Id of API key's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The API keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyPageResponse'
        '403':
          description: Forbidden to list API keys for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysListResponse'
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysList404Response'
    post:
      tags:
        - API Keys
      summary: Create an API key
      operationId: ApiKeys_createApiKey
      description: Create an API key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAPIRequest'
        required: true
      responses:
        '201':
          description: The API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyView'
        '403':
          description: Forbidden to create API keys for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysCreateApiKeyResponse'
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysCreateApiKey404Response'
  /admin/tenant/unsuspend:
    post:
      tags:
        - Admin
      operationId: Admin_unsuspendTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnsuspendTenant'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUnsuspendTenantResponse'
  /admin/tenant/suspend:
    post:
      tags:
        - Admin
      operationId: Admin_suspendTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendTenant'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSuspendTenantResponse'
  /account-tier/{id}/payment-methods:
    get:
      tags:
        - Account Tiers
      summary: Get details of loaded payment methods for account tiers
      operationId: AccountTiers_getPaymentMethods
      description: Get details of loaded payment methods for account tiers
      parameters:
        - description: The account tier id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersGetPaymentMethodsResponse'
    post:
      tags:
        - Account Tiers
      summary: Get details of loaded payment methods for account tiers
      operationId: AccountTiers_loadPaymentMethods
      description: Get details of loaded payment methods for account tiers
      parameters:
        - description: The account tier ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersLoadPaymentMethodsResponse'
  /users/paged:
    get:
      tags:
        - Users
      summary: Paginated list of users
      operationId: Users_listPaged
      description: Paginated list of users
      parameters:
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: Name of role
          name: roleName
          in: query
          required: false
          schema:
            type: string
        - description: The query string
          name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithInvoiceView'
  /users/notification-sources:
    get:
      tags:
        - Users
      summary: Retrieve the currently logged in/authenticated user
      operationId: Users_getCurrentAuthenticatedUser
      description: Retrieve the currently logged in/authenticated user
      parameters:
        - name: tenantId
          in: query
          required: true
          schema:
            type: string
        - name: currentOrganizationId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetCurrentAuthenticatedUserResponse'
  /users/isotope/entrypoint:
    get:
      tags:
        - Users
      summary: Generate the isotope docker entrypoint
      operationId: Users_generateIsotopeDockerEntrypoint
      description: Generate the isotope docker entrypoint
      parameters:
        - description: Id of the organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: ID of the user
          name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The isotope entrypoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsotopeCommand'
  /users/isotope/command:
    get:
      tags:
        - Users
      summary: Generate the isotope install command string
      operationId: Users_generateIsotopeCommandString
      description: Generate the isotope install command string
      parameters:
        - description: ID of the organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: ID of the user
          name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The isotope command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsotopeCommand'
  /users/current:
    get:
      tags:
        - Users
      summary: Retrieve the currently logged in/authenticated user
      operationId: Users_getCurrentAuthenticatedUser
      description: Retrieve the currently logged in/authenticated user
      responses:
        '200':
          description: The User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
  /traffic-anomalies:
    get:
      tags:
        - Traffic Anomalies
      summary: List traffic anomalies for the organization
      operationId: TrafficAnomalies_list
      description: List traffic anomalies for the organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The anomalies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomalyView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomaliesListResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomaliesList404Response'
  /tiers/paged:
    get:
      tags:
        - Tiers
      summary: List of tiers (paginated)
      operationId: Tiers_listPaged
      description: List of tiers (paginated)
      parameters:
        - description: Id of tier's owner
          name: ownerId
          in: query
          required: true
          schema:
            type: string
        - description: Id of tier's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Tiers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersListPagedResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersListPaged404Response'
  /tenants/paged:
    get:
      tags:
        - Tenants
      summary: List tenants (paginated)
      operationId: Tenants_listPaginatedTenants
      description: List tenants (paginated)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsListPaginatedTenantsResponse'
  /tags:
    get:
      tags:
        - Tags
      summary: List tags by organization
      operationId: Tags_listByOrganization
      description: List tags by organization
      parameters:
        - description: The Organization ID
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The tags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsListByOrganizationResponse'
        '403':
          description: Forbidden to access tag for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsListByOrganization403Response'
        '404':
          description: Tag not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsListByOrganization404Response'
  /subscription-notification/{id}:
    get:
      tags:
        - Subscription Notifications
      summary: Retrieve subscriber notifications for the organization
      operationId: SubscriptionNotifications_getSubscriberNotifications
      description: Retrieve subscriber notifications for the organization
      parameters:
        - description: The organization id
          name: id
          in: path
          required: true
          schema:
            type: string
        - name: affectedProducts
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - name: specificRecipients
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - name: affectedOwners
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The subscription notifications
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsGetSubscriberNotificationsResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsGetSubscriberNotifications403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsGetSubscriberNotifications404Response
    delete:
      tags:
        - Subscription Notifications
      summary: Delete an subscribernotification
      operationId: SubscriptionNotifications_deleteSubscriberNotification
      description: Delete an subscribernotification
      parameters:
        - description: The subscriber notification id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsDeleteSubscriberNotificationResponse
        '403':
          description: Forbidden to access this subscriber notification
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsDeleteSubscriberNotification403Response
        '404':
          description: Subscriber notification not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsDeleteSubscriberNotification404Response
  /subscription-notification/owners/{id}:
    get:
      tags:
        - Subscription Notifications
      summary: Retrieve the number of recipients for a subscription notification
      operationId: SubscriptionNotifications_getRecipientsCount
      description: Retrieve the number of recipients for a subscription notification
      parameters:
        - description: The organization id
          name: id
          in: path
          required: true
          schema:
            type: string
        - name: affectedProducts
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - name: affectedProductLicenseOwners
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The subscription notification recipient size
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsGetRecipientsCountResponse
        '403':
          description: Forbidden to access this subscription notification
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsGetRecipientsCount403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsGetRecipientsCount404Response
  /subscription-notification/body/{id}:
    get:
      tags:
        - Subscription Notifications
      operationId: SubscriptionNotifications_getById
      parameters:
        - description: The subscriber notification id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The subscriber notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecificSubscriberNotificationView'
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionNotificationsGetByIdResponse'
        '403':
          description: Forbidden to access this subscriber notification
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsGetById403Response
        '404':
          description: Subscriber notification not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SubscriptionNotificationsGetById404Response
  /stored-filters/userId/{userId}:
    get:
      tags:
        - Stored filters
      summary: Get an stored filters
      operationId: StoredFilters_getUserFilters
      description: Get an stored filters
      parameters:
        - description: Id of stored filter's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The user id
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '403':
          description: Forbidden to access this stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFiltersGetUserFiltersResponse'
        '404':
          description: Stored filter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFiltersGetUserFilters404Response'
  /slas/summarized-by-violation:
    get:
      tags:
        - SLAs
      summary: List slas by organization
      operationId: SlAs_listByOrganization
      description: List slas by organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The product id
          name: productId
          in: query
          required: false
          schema:
            type: string
        - description: The sla definition id
          name: slaDefinitionId
          in: query
          required: false
          schema:
            type: string
        - description: The consuming organization id
          name: consumingOrganizationId
          in: query
          required: false
          schema:
            type: string
        - description: Filter on reviewed
          name: isReviewed
          in: query
          required: false
          schema:
            type: boolean
        - description: The sla violation type
          name: violationType
          in: query
          required: false
          schema:
            type: string
          example: LATENCY, RESPONSE_CODE
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The sla definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlAsListByOrganizationResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlAsListByOrganization403Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SlAsListByOrganization403Response1'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlAsListByOrganization404Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/SlAsListByOrganization404Response1'
  /sla-violations/{slaId}/summarized:
    get:
      tags:
        - SLA Violations
      summary: List summarized sla violations
      operationId: SlaViolations_listSummarized
      description: List summarized sla violations
      parameters:
        - name: slaId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sla violations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaViolationsListSummarizedResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaViolationsListSummarized404Response'
  /sla-violations/total-refunded:
    get:
      tags:
        - SLA Violations
      summary: Get total refund amount for slas for an organization or consumer
      operationId: SlaViolations_getTotalRefundedAmount
      description: Get total refund amount for slas for an organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The consumer id
          name: consumerId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAWithSLAEnforcedView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SlaViolationsGetTotalRefundedAmountResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SlaViolationsGetTotalRefundedAmount404Response
  /sla-violations/slas:
    get:
      tags:
        - SLA Violations
      summary: List slas by organization
      operationId: SlaViolations_listByOrganization
      description: List slas by organization
      parameters:
        - description: The Organization ID
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sla definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaViolationsListByOrganizationResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SlaViolationsListByOrganization403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SlaViolationsListByOrganization404Response
  /sla-definitions/paged:
    get:
      tags:
        - SLA Definitions
      summary: List sla definitions (paginated)
      operationId: SlaDefinitions_listPaginatedSlaDefinitions
      description: List sla definitions (paginated)
      parameters:
        - description: Id of the organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sla definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLADefinitionPageResponse'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SlaDefinitionsListPaginatedSlaDefinitionsResponse
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SlaDefinitionsListPaginatedSlaDefinitions404Response
  /sites/{id}:
    get:
      tags:
        - Sites
      summary: Get an site
      operationId: Sites_getSiteById
      description: Get an site
      parameters:
        - description: The asset id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The site
          content:
            site/json:
              schema:
                $ref: '#/components/schemas/SiteView'
        '403':
          description: Forbidden to access this site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesGetSiteByIdResponse'
        '404':
          description: Site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesGetSiteById404Response'
    delete:
      tags:
        - Sites
      summary: Delete an site
      operationId: Sites_removeSite
      description: Delete an site
      parameters:
        - description: The Site ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesRemoveSiteResponse'
        '403':
          description: Forbidden to access this site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesRemoveSite403Response'
        '404':
          description: Site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesRemoveSite404Response'
  /site-provider/configurations/property-names:
    get:
      tags:
        - Site Provider Configurations
      summary: Retrieve site provider configuration property names
      operationId: SiteProviderConfigurations_getPropertyNames
      description: Retrieve site provider configuration property names
      parameters:
        - description: The site provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of site provider property names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsGetPropertyNamesResponse
        '404':
          description: Site provider  not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsGetPropertyNames404Response
  /site-provider/configurations/property-descriptions:
    get:
      tags:
        - Site Provider Configurations
      summary: Retrieve site provider configuration property descriptions
      operationId: SiteProviderConfigurations_getPropertyDescriptions
      description: Retrieve site provider configuration property descriptions
      parameters:
        - description: The site provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of site provider property descriptions
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsGetPropertyDescriptionsResponse
        '404':
          description: Sitep provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SiteProviderConfigurationsGetPropertyDescriptions404Response
  /products/{id}/trial:
    get:
      tags:
        - Products
      summary: Get trial data for product and owner
      operationId: Products_getTrialDataForOwner
      description: Get trial data for product and owner
      parameters:
        - description: The product id
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The client id
          name: clientId
          in: query
          required: false
          schema:
            type: string
        - description: The client email address
          name: clientEmailAddress
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The product trial data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTrialView'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetTrialDataForOwnerResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetTrialDataForOwner404Response'
  /products/{id}/product-keys:
    get:
      tags:
        - Products
      summary: Retrieve product keys associated with an product
      operationId: Products_getProductKeys
      description: Retrieve product keys associated with an product
      parameters:
        - description: The product id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetProductKeysResponse'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetProductKeys403Response'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetProductKeys404Response'
  /products/trial:
    get:
      tags:
        - Products
      summary: Get product trial data for owner
      operationId: Products_getTrialDataForOwner
      description: Get product trial data for owner
      parameters:
        - description: The client id
          name: clientId
          in: query
          required: false
          schema:
            type: string
        - description: The client email address
          name: clientEmailAddress
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of product trial data for client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetTrialDataForOwner200Response'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetTrialDataForOwner403Response'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetTrialDataForOwner404Response'
  /products/summarized:
    get:
      tags:
        - Products
      summary: List products (summarized)
      operationId: Products_listSummarized
      description: List products (summarized)
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The environment id
          name: environmentId
          in: query
          required: true
          schema:
            type: string
        - description: The ownerid id
          name: ownerId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListSummarizedResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListSummarized403Response'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListSummarized404Response'
  /products/summarized/{id}:
    get:
      tags:
        - Products
      summary: Get a product
      operationId: Products_getById
      description: Get a product
      parameters:
        - description: The product id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetById403Response'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetById404Response'
  /products/summarized/paged:
    get:
      tags:
        - Products
      summary: List products (paginated and summarized)
      operationId: Products_listSummarizedProducts
      description: List products (paginated and summarized)
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The environment id
          name: environmentId
          in: query
          required: true
          schema:
            type: string
        - description: The owner id
          name: ownerId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter on products being staged or unstaged for commerce portal
            publication
          name: staged
          in: query
          required: false
          schema:
            type: boolean
        - description: The query string
          name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListSummarizedProductsResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListSummarizedProducts403Response'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListSummarizedProducts404Response'
  /products/search:
    get:
      tags:
        - Products
      summary: Search for products
      operationId: Products_searchProducts
      description: Search for products
      parameters:
        - description: Id of product's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: Search by the external id
          name: externalId
          in: query
          required: true
          schema:
            type: string
        - description: The query string
          name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsSearchProductsResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsSearchProducts404Response'
  /products/reports/asset-consumer-count-by-product:
    get:
      tags:
        - Product Reports
      summary: Retrieve asset consumer count associated with a product
      operationId: ProductReports_getAssetConsumerCountByProduct
      description: Retrieve asset consumer count associated with a product
      parameters:
        - description: The Product ID
          name: productId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The count of asset consumers
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductReportsGetAssetConsumerCountByProductResponse
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductReportsGetAssetConsumerCountByProduct403Response
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductReportsGetAssetConsumerCountByProduct404Response
  /products/paged:
    get:
      tags:
        - Products
      summary: List products (paginated)
      operationId: Products_listPagedProducts
      description: List products (paginated)
      parameters:
        - description: The Organization ID
          name: organizationId
          in: query
          required: false
          schema:
            type: string
        - description: The Owner ID
          name: ownerId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Attributes to expand (any combination of the following allowed):
            [calls, spends, consumers]
          name: expand
          in: query
          required: false
          schema:
            type: string
        - description: The starting timestamp (for expanded sla violations and invoices)
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (for expanded sla violations and invoices)
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Zero-based page index (0..N)
          name: page
          in: query
          schema:
            type: integer
            default: 0
        - description: The size of the page to be returned
          name: size
          in: query
          schema:
            type: integer
            default: 20
        - description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          name: sort
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPagedResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListPagedProductsResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListPagedProducts404Response'
  /products/metrics:
    get:
      tags:
        - Products
      summary: Retrieve product metrics for the organization
      operationId: Products_getMetricsForOrganization
      description: Retrieve product metrics for the organization
      parameters:
        - description: The Organization ID
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: 'The starting timestamp '
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The Product Metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetMetricsForOrganizationResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductsGetMetricsForOrganization403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductsGetMetricsForOrganization404Response
  /products/metrics/organization:
    get:
      tags:
        - Products
      summary: Retrieve consumer product metrics for the organization
      operationId: Products_getMetricsForOrganization
      description: Retrieve product metrics for the organization
      parameters:
        - description: The Organization ID
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: 'The starting timestamp '
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The Product Metrics
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductsGetMetricsForOrganization200Response
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductsGetMetricsForOrganization403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductsGetMetricsForOrganization404Response
  /products/counts:
    get:
      tags:
        - Products
      summary: Get product counts
      operationId: Products_getProductCounts
      description: Get product counts
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetProductCountsResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetProductCounts403Response'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetProductCounts404Response'
  /products/changelogs/{id}:
    get:
      tags:
        - Products
      summary: Get changelogs for a product
      operationId: Products_getChangelogsById
      description: Get changelogs for a product
      parameters:
        - description: The product id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Changelogs for a product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetChangelogsByIdResponse'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetChangelogsById403Response'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetChangelogsById404Response'
  /product/families/summarized/{id}:
    get:
      tags:
        - Product Family
      summary: Get an product family
      operationId: ProductFamily_getById
      description: Get an product family
      parameters:
        - description: The product family id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilySummaryView'
        '403':
          description: Forbidden to access this product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyGetById403Response'
        '404':
          description: Product family not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyGetById404Response'
  /product/families/summarized/paged:
    get:
      tags:
        - Product Family
      summary: List of product families (paginated)
      operationId: ProductFamily_listSummarizedPaged
      description: List of product families (paginated)
      parameters:
        - description: Id of product families owner
          name: ownerId
          in: query
          required: true
          schema:
            type: string
        - description: Id of product families organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product families
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilySummaryPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyListSummarizedPagedResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductFamilyListSummarizedPaged404Response
  /product/families/paged:
    get:
      tags:
        - Product Family
      summary: List of product families (paginated)
      operationId: ProductFamily_listPaged
      description: List of product families (paginated)
      parameters:
        - description: Id of product families owner
          name: ownerId
          in: query
          required: true
          schema:
            type: string
        - description: Id of product families organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product families
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyListPagedResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyListPaged404Response'
  /product-keys/{id}/line-items:
    get:
      tags:
        - Product Keys
      summary: Retrieve line items associated with a product key
      operationId: ProductKeys_getLineItemsById
      description: Retrieve line items associated with a product key
      parameters:
        - description: The ProductKey ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The LineItems
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetLineItemsByIdResponse'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetLineItemsById403Response'
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetLineItemsById404Response'
  /product-keys/summarized/{id}:
    get:
      tags:
        - Product Keys
      summary: Get summarized product key
      operationId: ProductKeys_getSummarizedByKey
      description: Get summarized product key
      parameters:
        - description: The product key id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Product Key
          content:
            ProductKey/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this Product Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetSummarizedByKeyResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetSummarizedByKey404Response'
  /product-keys/search:
    get:
      tags:
        - Product Keys
      summary: Search for product keys
      operationId: ProductKeys_searchProductKeys
      description: Search for product keys
      parameters:
        - description: Id of product key's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The query string
          name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysSearchProductKeysResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysSearchProductKeys404Response'
  /product-keys/paged:
    get:
      tags:
        - Product Keys
      summary: Retrieve product keys for the organization
      operationId: ProductKeys_getOrganizationKeys
      description: Retrieve product keys for the organization
      parameters:
        - name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetOrganizationKeysResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetOrganizationKeys404Response'
  /product-keys/events/summarized:
    get:
      tags:
        - Product Keys
      summary: >-
        Retrieve summarized productkeyevents associated with the supplied
        organization
      operationId: ProductKeys_getSummarizedEvents
      description: >-
        Retrieve summarized productkeyevents associated with the supplied
        organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The summarized product key events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetSummarizedEventsResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductKeysGetSummarizedEvents403Response'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetSummarizedEvents404Response'
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/ProductKeysGetSummarizedEvents404Response1
  /product-keys/events/search:
    get:
      tags:
        - Product Keys
      summary: Search for product key events
      operationId: ProductKeys_searchProductKeyEvents
      description: Search for product key events
      parameters:
        - name: organizationId
          in: query
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product key events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyEventPageResponse'
        '403':
          description: Forbidden to access product key events for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysSearchProductKeyEventsResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductKeysSearchProductKeyEvents404Response
  /product-keys/events/paged:
    get:
      tags:
        - Product Keys
      summary: Paginated list of product key events
      operationId: ProductKeys_getEventsPaged
      description: Paginated list of product key events
      parameters:
        - name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product key events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyEventPageResponse'
        '403':
          description: Forbidden to access product key events for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetEventsPagedResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetEventsPaged404Response'
  /product-keys/client:
    get:
      tags:
        - Product Keys
      summary: Retrieve product keys for the user
      operationId: ProductKeys_getUserKeys
      description: Retrieve product keys for the user
      parameters:
        - description: The Email Address
          name: emailAddress
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetUserKeysResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetUserKeys403Response'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetUserKeys404Response'
  /product-keys/client/{id}:
    get:
      tags:
        - Product Keys
      summary: Retrieve product keys for the user
      operationId: ProductKeys_getUserKeys
      description: Retrieve product keys for the user
      parameters:
        - description: The User ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetUserKeys200Response'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetUserKeys403Response'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetUserKeys404Response'
  /product-keys/client/{id}/paged:
    get:
      tags:
        - Product Keys
      summary: Retrieve product keys for the user
      operationId: ProductKeys_getForUserPaged
      description: Retrieve product keys for the user
      parameters:
        - name: organizationId
          in: query
          required: false
          schema:
            type: string
        - description: The user id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetForUserPagedResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetForUserPaged404Response'
  /product-keys/client/summarized:
    get:
      tags:
        - Product Keys
      summary: Retrieve all product keys associated with the user
      operationId: ProductKeys_getAssociatedUserKeys
      description: Retrieve all product keys associated with the user
      parameters:
        - description: The email address
          name: emailAddress
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Product Keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysGetAssociatedUserKeysResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProductKeysGetAssociatedUserKeys404Response
  /pricing-rules/{accountId}/cost:
    get:
      tags:
        - Pricing Rules
      summary: Retrieve cost by account
      operationId: PricingRules_getCostByAccount
      description: Retrieve cost by account
      parameters:
        - description: The Account ID
          name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The cost
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesGetCostByAccountResponse'
        '403':
          description: Forbidden to access this account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesGetCostByAccount403Response'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesGetCostByAccount404Response'
  /pricing-rules/organization/{organizationId}:
    get:
      tags:
        - Pricing Rules
      summary: Get all pricing rules for an organization
      operationId: PricingRules_getAllForOrganization
      description: Get all pricing rules for an organization
      parameters:
        - description: The organization id
          name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulePageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulesGetAllForOrganizationResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PricingRulesGetAllForOrganization404Response
  /pricing-rules/execution-logs:
    get:
      tags:
        - Pricing Rules
      summary: Get pricing rule execution logs for an organization
      operationId: PricingRules_getLogsForOrganization
      description: Get pricing rule execution logs for an organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The pricing rule execution logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRuleExecutionLogPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PricingRulesGetLogsForOrganizationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PricingRulesGetLogsForOrganization404Response
  /plans/paged:
    get:
      tags:
        - Plans
      summary: List of plans (paginated)
      operationId: Plans_listPaged
      description: List of plans (paginated)
      parameters:
        - description: Id of plans owner
          name: ownerId
          in: query
          required: true
          schema:
            type: string
        - description: Id of plans organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plans
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansListPagedResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansListPaged404Response'
  /plan-elements/paged:
    get:
      tags:
        - Elements
      summary: List of plan elements (paginated)
      operationId: Elements_listPaged
      description: List of plan elements (paginated)
      parameters:
        - description: Id of plan elements owner
          name: ownerId
          in: query
          required: true
          schema:
            type: string
        - description: Id of plan elements organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan elements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsListPagedResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementsListPaged404Response'
  /payment/record/product/{productId}/user/{userId}:
    get:
      tags:
        - Payment
      summary: Get payment record
      operationId: Payment_recordGet
      description: Get payment record
      parameters:
        - description: Product Id
          name: productId
          in: path
          required: true
          schema:
            type: string
        - description: User Id
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecordView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecordGetResponse'
  /payment/paged:
    get:
      tags:
        - Payment
      summary: List payment records (paginated)
      operationId: Payment_listPagedPaymentRecords
      description: List payment records (paginated)
      parameters:
        - description: ID of Tenant
          name: tenantId
          in: query
          required: true
          schema:
            type: string
        - description: Zero-based page index (0..N)
          name: page
          in: query
          schema:
            type: integer
            default: 0
        - description: The size of the page to be returned
          name: size
          in: query
          schema:
            type: integer
            default: 20
        - description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          name: sort
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecordPagedResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentListPagedPaymentRecordsResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentListPagedPaymentRecords404Response'
  /payment/history/tenant/{tenantId}:
    get:
      tags:
        - Payment
      summary: Get payment records
      operationId: Payment_getPaymentRecords
      description: Get payment records
      parameters:
        - description: Tenant id
          name: tenantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentGetPaymentRecordsResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentGetPaymentRecords404Response'
  /payment/history/product/{productId}/user/{userId}:
    get:
      tags:
        - Payment
      summary: Get payment record
      operationId: Payment_getPaymentRecord
      description: Get payment record
      parameters:
        - description: Product id
          name: productId
          in: path
          required: true
          schema:
            type: string
        - description: User id
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentGetPaymentRecordResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentGetPaymentRecord404Response'
  /payment/customers/{id}:
    get:
      tags:
        - Payment Methods
      summary: 'Retrieve payment customer data '
      operationId: PaymentMethods_getCustomerData
      description: Retrieve payment customer data including payment methods
      parameters:
        - description: The payment customer id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '403':
          description: Forbidden to access this payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsGetCustomerDataResponse'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsGetCustomerData404Response'
    delete:
      tags:
        - Payment Methods
      summary: Delete a payment customer
      operationId: PaymentMethods_deleteCustomer
      description: Delete a payment customer
      parameters:
        - description: The payment customer id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsDeleteCustomerResponse'
        '403':
          description: Forbidden to access this payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsDeleteCustomer403Response'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsDeleteCustomer404Response'
  /payment/customers/user/{userId}/configuration/{paymentConfigurationId}:
    get:
      tags:
        - Payment Methods
      summary: Get payment customer
      operationId: PaymentMethods_getPaymentCustomer
      description: Get payment customer
      parameters:
        - description: User id
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: Payment configuration id
          name: paymentConfigurationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The API management configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsGetPaymentCustomerResponse'
  /payment/configurations/property-names:
    get:
      tags:
        - Payment Configurations
      summary: Retrieve payment configuration property names
      operationId: PaymentConfigurations_getPropertyNames
      description: Retrieve payment configuration property names
      parameters:
        - description: The payment provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of payment property names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsGetPropertyNamesResponse
        '404':
          description: Payment provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentConfigurationsGetPropertyNames404Response
  /organizations/{id}/product-keys:
    get:
      tags:
        - Organizations
      summary: Retrieve all product keys associated with an organization
      operationId: Organizations_getProductKeys
      description: Retrieve all product keys associated with an organization
      parameters:
        - description: The organization id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Product Keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetProductKeysResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetProductKeys404Response'
  /organizations/{id}/product-keys/summarized:
    get:
      tags:
        - Organizations
      summary: Retrieve all product keys associated with an organization
      operationId: Organizations_getProductKeys
      description: Retrieve all product keys associated with an organization
      parameters:
        - description: The organization id
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The owner id
          name: ownerId
          in: query
          required: false
          schema:
            type: string
        - description: The client id
          name: clientId
          in: query
          required: false
          schema:
            type: string
        - description: The consuming organization id
          name: consumingOrganizationId
          in: query
          required: false
          schema:
            type: string
        - description: Include deactivated keys?
          name: includeDeactivated
          in: query
          required: false
          schema:
            type: boolean
        - description: Return paginated data?
          name: paged
          in: query
          required: false
          schema:
            type: boolean
        - description: The query string
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Filter product keys on productid
          name: productId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetProductKeys403Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationsGetProductKeys403Response1'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetProductKeys404Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationsGetProductKeys404Response1'
  /organizations/paged:
    get:
      tags:
        - Organizations
      summary: List organizations (paginated)
      operationId: Organizations_listPaged
      description: List organizations (paginated)
      parameters:
        - description: The tenant id
          name: tenantId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationPageResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsListPagedResponse'
  /notifications/update/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock update notification
      operationId: Notifications_sendMockUpdateNotification
      description: Send mock update notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsSendMockUpdateNotificationResponse
  /notifications/successful-payment/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock successful payment notification
      operationId: Notifications_sendMockSuccessfulPaymentNotification
      description: Send mock successful payment notification
      parameters:
        - description: The current organization id
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user id
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsSendMockSuccessfulPaymentNotificationResponse
  /notifications/reactivation/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock reactivation notification
      operationId: Notifications_sendMockReactivationNotification
      description: Send mock reactivation notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsSendMockReactivationNotificationResponse
  /notifications/quota/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock quota warning notification
      operationId: Notifications_mockQuotaWarningNotification
      description: Send mock quota warning notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsMockQuotaWarningNotificationResponse
  /notifications/quota-tier/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock quota tier warning notification
      operationId: Notifications_sendMockQuotaTierWarningNotification
      description: Send mock quota tier warning notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsSendMockQuotaTierWarningNotificationResponse
  /notifications/invoice/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock invoice notification
      operationId: Notifications_sendMockInvoiceNotification
      description: Send mock invoice notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsSendMockInvoiceNotificationResponse
  /notifications/invalid/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock invalid notification
      operationId: Notifications_sendMockInvalidNotification
      description: Send mock invalid notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsSendMockInvalidNotificationResponse
  /notifications/free-trial/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock free trial notification
      operationId: Notifications_sendMockFreeTrialNotification
      description: Send mock free trial notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsSendMockFreeTrialNotificationResponse
  /notifications/failed-payment/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock failed payment notification
      operationId: Notifications_sendMockFailedPaymentNotification
      description: Send mock failed payment notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsSendMockFailedPaymentNotificationResponse
  /notifications/deactivate/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock update notification
      operationId: Notifications_sendMockUpdateNotification
      description: Send mock update notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsSendMockUpdateNotification200Response
  /notifications/creation/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock creation notification
      operationId: Notifications_mockCreationNotification
      description: Send mock creation notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsMockCreationNotificationResponse
  /notifications/activation/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock activation notification
      operationId: Notifications_sendMockActivation
      description: Send mock activation notification
      parameters:
        - description: The current organization ID
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The current user ID
          name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsSendMockActivationResponse'
  /notification-provider/configurations/{id}/connectivity-status:
    get:
      tags:
        - Notification Provider Configurations
      summary: Retrieve a notification provider configuration's connectivity status
      operationId: NotificationProviderConfigurations_getConnectivityStatus
      description: Retrieve a notification provider configuration's connectivity status
      parameters:
        - description: The notification provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsGetConnectivityStatusResponse
  /notification-provider/configurations/property-names:
    get:
      tags:
        - Notification Provider Configurations
      summary: Retrieve notification provider configuration property names
      operationId: NotificationProviderConfigurations_getPropertyNames
      description: Retrieve notification provider configuration property names
      parameters:
        - description: The notification provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of notification provider property names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsGetPropertyNamesResponse
        '404':
          description: Notification provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsGetPropertyNames404Response
  /notification-provider/configurations/property-descriptions:
    get:
      tags:
        - Notification Provider Configurations
      summary: Retrieve notification provider configuration property descriptions
      operationId: NotificationProviderConfigurations_getPropertyDescriptions
      description: Retrieve notification provider configuration property descriptions
      parameters:
        - description: The notification provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of NotificationProvider Property Names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsGetPropertyDescriptionsResponse
        '404':
          description: NotificationProvider Provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationProviderConfigurationsGetPropertyDescriptions404Response
  /notification-custom-content/{id}:
    get:
      tags:
        - Notification Custom Content
      summary: Get notification templates for org
      operationId: NotificationCustomContent_getTemplatesForOrg
      description: Get notification templates for org
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The notification templates
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationCustomContentGetTemplatesForOrgResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationCustomContentGetTemplatesForOrg404Response
  /invoices:
    get:
      tags:
        - Invoices
      summary: List invoices for a user
      operationId: Invoices_listForUser
      description: List invoices for a user
      parameters:
        - description: The User ID
          name: userId
          in: query
          required: false
          schema:
            type: string
        - description: The User's email address
          name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListForUserResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListForUser403Response'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListForUser404Response'
  /invoices/{id}:
    get:
      tags:
        - Invoices
      summary: Retrieve an invoice
      operationId: Invoices_getById
      description: Retrieve an invoice
      parameters:
        - description: The invoice id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceView'
        '403':
          description: Forbidden to access this Invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetByIdResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoicesGetById403Response'
            application/pdf:
              schema:
                $ref: '#/components/schemas/InvoicesGetById403Response'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetById404Response'
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoicesGetById404Response1'
            application/pdf:
              schema:
                $ref: '#/components/schemas/InvoicesGetById404Response2'
  /invoices/{id}/refunds:
    get:
      tags:
        - Invoices
      summary: Retrieve refunds by invoice
      operationId: Invoices_getRefundsByInvoice
      description: Retrieve refunds by invoice
      parameters:
        - description: The invoice id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The refunds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetRefundsByInvoiceResponse'
        '403':
          description: Forbidden to access this invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetRefundsByInvoice403Response'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetRefundsByInvoice404Response'
  /invoices/{id}/line-items:
    get:
      tags:
        - Invoices
      summary: Retrieve line items by invoice
      operationId: Invoices_getLineItemsByInvoice
      description: Retrieve line items by invoice
      parameters:
        - description: The invoice id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetLineItemsByInvoiceResponse'
        '403':
          description: Forbidden to access this invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetLineItemsByInvoice403Response'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetLineItemsByInvoice404Response'
  /invoices/user/{userId}/summarized:
    get:
      tags:
        - Invoices
      summary: Paginated list of summarized invoices
      operationId: Invoices_listSummarizedByUser
      description: Paginated list of summarized invoices
      parameters:
        - description: The user's id
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListSummarizedByUserResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListSummarizedByUser404Response'
  /invoices/user/{id}:
    get:
      tags:
        - Invoices
      summary: Retrieve invoices for a user
      operationId: Invoices_getUserInvoices
      description: Retrieve invoices for a user
      parameters:
        - description: The user id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetUserInvoicesResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetUserInvoices403Response'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetUserInvoices404Response'
  /invoices/user/{id}/refunds/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve refunds for a user
      operationId: Invoices_getRefundsForUser
      description: Retrieve refunds for a user
      parameters:
        - description: The user id
          name: id
          in: path
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The refunds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundViewPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetRefundsForUserResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetRefundsForUser404Response'
  /invoices/user/{id}/recent-transactions/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve transactions for a user
      operationId: Invoices_getUserRecentTransactions
      description: Retrieve transactions for a user
      parameters:
        - description: The User ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The Line Items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionViewPageResponse'
        '403':
          description: Forbidden to access this User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetUserRecentTransactionsResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetUserRecentTransactions404Response
  /invoices/user/{id}/line-items:
    get:
      tags:
        - Invoices
      summary: Retrieve line items for a user
      operationId: Invoices_getUserLineItems
      description: Retrieve line items for a user
      parameters:
        - description: The user id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetUserLineItemsResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetUserLineItems403Response'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetUserLineItems404Response'
  /invoices/user/{id}/line-items/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve line items for a user (paginated)
      operationId: Invoices_getLineItemsForUserPaged
      description: Retrieve line items for a user (paginated)
      parameters:
        - description: The User ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: Results page you want to retrieve (0..N)
          name: page
          in: query
          content:
            '*/*':
              schema:
                type: integer
                default: '0'
        - description: Number of records per page.
          name: size
          in: query
          content:
            '*/*':
              schema:
                type: integer
                default: '5'
        - description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          name: sort
          in: query
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: The Line Items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineItemPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetLineItemsForUserPagedResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetLineItemsForUserPaged404Response
  /invoices/summarized/{id}:
    get:
      tags:
        - Invoices
      summary: Retrieve a summarized invoice
      operationId: Invoices_getSummarizedInvoice
      description: Retrieve a summarized invoice
      parameters:
        - description: The invoice id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceView'
        '403':
          description: Forbidden to access this invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetSummarizedInvoiceResponse'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetSummarizedInvoice404Response'
  /invoices/reset-quotas:
    get:
      tags:
        - Invoices
      summary: Reset quotas for the given settlement period
      operationId: Invoices_resetQuotasForSettlementPeriod
      description: Reset quotas for the given settlement period
      parameters:
        - name: settlementPeriod
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesResetQuotasForSettlementPeriodResponse
        '403':
          description: Forbidden to access this API
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesResetQuotasForSettlementPeriod403Response
  /invoices/reports/total-revenue-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for an asset over the defined interval
      operationId: InvoiceReports_getTotalSpendByAsset
      description: Retrieve total spend for an asset over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByAssetResponse
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByAsset403Response
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByAsset404Response
  /invoices/reports/total-requests-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total requests by organization over the defined interval
      operationId: InvoiceReports_getTotalRequestsByOrganization
      description: Retrieve total requests by organization over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalRequestsByOrganizationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalRequestsByOrganization404Response
  /invoices/reports/top-requests-by-consuming-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top requests by consuming organization over the defined
        interval
      operationId: InvoiceReports_getTopRequestsByConsumingOrganization
      description: >-
        Retrieve top requests by consuming organization over the defined
        interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopRequestsByConsumingOrganizationResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopRequestsByConsumingOrganization403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopRequestsByConsumingOrganization404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopRequestsByConsumingOrganization404Response1
  /invoices/reports/top-products-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating products for an organization over the
        defined interval
      operationId: InvoiceReports_getTopProductsByOrganization
      description: >-
        Retrieve top revenue generating products for an organization over the
        defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopProductsByOrganizationResponse
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopProductsByOrganization404Response
  /invoices/reports/top-producer-requests-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top producer requests over the defined interval
      operationId: InvoiceReports_getTopProducerRequestsByOrganization
      description: Retrieve top producer requests over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopProducerRequestsByOrganizationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopProducerRequestsByOrganization404Response
  /invoices/reports/top-elements-by-product:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating elements for an organization over the
        defined interval
      operationId: InvoiceReports_getTopRevenueGeneratingElements
      description: Retrieve top consumed elements for a product over the defined interval
      parameters:
        - description: The product id
          name: productId
          in: query
          required: true
          schema:
            type: string
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The intervals (days, weeks or months)
          name: interval
          in: query
          required: false
          schema:
            type: string
            default: days
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopRevenueGeneratingElementsResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopRevenueGeneratingElements404Response
  /invoices/reports/top-elements-by-consuming-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating elements for an organization over the
        defined interval
      operationId: InvoiceReports_getTopElementsByConsumingOrganization
      description: >-
        Retrieve top consumed elements for a consuming organizations over the
        defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The tenant id
          name: tenantId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopElementsByConsumingOrganizationResponse
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopElementsByConsumingOrganization404Response
  /invoices/reports/top-consumers-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top consumers over the defined interval
      operationId: InvoiceReports_getTopConsumersInterval
      description: Retrieve top consumers over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumersIntervalResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumersInterval404Response
  /invoices/reports/top-consumer-revenue-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top consumer revenue over the defined interval
      operationId: InvoiceReports_getTopConsumerRevenueByOrganization
      description: Retrieve top consumer revenue over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRevenueByOrganizationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRevenueByOrganization404Response
  /invoices/reports/top-consumer-requests-by-product-key-creation:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top consumer requests by productkey creation over the defined
        interval
      operationId: InvoiceReports_getTopConsumerRequestsByProductKeyCreation
      description: >-
        Retrieve top consumer requests by productkey creation over the defined
        interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          required: true
          schema:
            type: string
        - name: aggregationType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT_KEY_CLIENT
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsByProductKeyCreationResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsByProductKeyCreation403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsByProductKeyCreation404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsByProductKeyCreation404Response1
  /invoices/reports/top-consumer-requests-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top consumer requests over the defined interval
      operationId: InvoiceReports_getTopConsumerRequestsByOrganization
      description: Retrieve top consumer requests over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: aggregationType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT_KEY_CLIENT
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsByOrganizationResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsByOrganization403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsByOrganization404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsByOrganization404Response1
  /invoices/reports/top-consumer-line-items-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top consumer requests over the defined interval
      operationId: InvoiceReports_getTopConsumerRequestsOverInterval
      description: Retrieve top consumer requests over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsOverIntervalResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsOverInterval403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsOverInterval404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopConsumerRequestsOverInterval404Response1
  /invoices/reports/top-assets-by-providing-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating assets for an organization over the
        defined interval
      operationId: InvoiceReports_getTopAssetsByProvidingOrganization
      description: >-
        Retrieve top consumed assets by producing organization over the defined
        interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopAssetsByProvidingOrganizationResponse
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopAssetsByProvidingOrganization404Response
  /invoices/reports/top-assets-by-product:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating assets for an organization over the
        defined interval
      operationId: InvoiceReports_getTopAssetsByProduct
      description: Retrieve top consumed assets for a product over the defined interval
      parameters:
        - description: The product id
          name: productId
          in: query
          required: true
          schema:
            type: string
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The intervals (days, weeks or months)
          name: interval
          in: query
          required: false
          schema:
            type: string
            default: days
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopAssetsByProductResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopAssetsByProduct404Response
  /invoices/reports/top-assets-by-consuming-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating assets for an organization over the
        defined interval
      operationId: InvoiceReports_getTopAssetsByConsumingOrganization
      description: >-
        Retrieve top consumed assets for a consuming organizations over the
        defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The tenant id
          name: tenantId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopAssetsByConsumingOrganizationResponse
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTopAssetsByConsumingOrganization404Response
  /invoices/reports/spend-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for a user over the defined interval
      operationId: InvoiceReports_getTotalSpendByUser
      description: Retrieve total spend for a user over the defined interval
      parameters:
        - description: The user id
          name: userId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total user spend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceReportsGetTotalSpendByUserResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByUser403Response
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByUser404Response
  /invoices/reports/spend-by-product:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for an asset over the defined interval
      operationId: InvoiceReports_getTotalSpendByProduct
      description: Retrieve total spend for an asset over the defined interval
      parameters:
        - description: The product id
          name: productId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByProductResponse
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByProduct403Response
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByProduct404Response
  /invoices/reports/spend-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for an organization over the defined interval
      operationId: InvoiceReports_getSpendByOrganization
      description: Retrieve total spend for an organization over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetSpendByOrganizationResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetSpendByOrganization403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetSpendByOrganization404Response
  /invoices/reports/spend-by-assets:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend across multiple assets over the defined interval
      operationId: InvoiceReports_getTotalSpendByAssets
      description: Retrieve total spend across multiple assets over the defined interval
      parameters:
        - description: A list of asset ids
          name: assetIds
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByAssetsResponse
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByAssets403Response
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByAssets404Response
  /invoices/reports/spend-by-asset:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for an asset over the defined interval
      operationId: InvoiceReports_getTotalSpendByAsset
      description: Retrieve total spend for an asset over the defined interval
      parameters:
        - description: The asset id
          name: assetId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByAsset200Response
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByAsset403Response
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendByAsset404Response
  /invoices/reports/recent-charges-by-product-owner:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total charges across all assets over the defined intervals
      operationId: InvoiceReports_getChargesByInterval
      description: Retrieve total charges across all assets over the defined intervals
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: false
          schema:
            type: string
        - description: The product owner (user) id
          name: ownerId
          in: query
          required: false
          schema:
            type: string
        - description: The quarter start timestamp (milliseconds)
          name: quarterStart
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The quarter end timestamp (milliseconds)
          name: quarterEnd
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The year start timestamp (milliseconds)
          name: yearStart
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The year end timestamp (milliseconds)
          name: yearEnd
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The month start timestamp (milliseconds)
          name: monthStart
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The month end timestamp(milliseconds)
          name: monthEnd
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The charge data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetChargesByIntervalResponse
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetChargesByInterval403Response
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetChargesByInterval404Response
  /invoices/reports/recent-charges-by-product-consumer:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total charges across all assets over the defined intervals
      operationId: InvoiceReports_totalChargeIntervals
      description: Retrieve total charges across all assets over the defined intervals
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: false
          schema:
            type: string
        - description: The product owner (user) id
          name: consumerId
          in: query
          required: false
          schema:
            type: string
        - description: The quarter start timestamp (milliseconds)
          name: quarterStart
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The quarter end timestamp (milliseconds)
          name: quarterEnd
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The year start timestamp (milliseconds)
          name: yearStart
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The year end timestamp (milliseconds)
          name: yearEnd
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The month start timestamp (milliseconds)
          name: monthStart
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The month end timestamp(milliseconds)
          name: monthEnd
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The charge data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsTotalChargeIntervalsResponse
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsTotalChargeIntervals403Response
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsTotalChargeIntervals404Response
  /invoices/reports/recent-charges-by-asset:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total charges across all assets over the defined intervals
      operationId: InvoiceReports_getChargesByAsset
      description: Retrieve total charges across all assets over the defined intervals
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The quarter start timestamp (milliseconds)
          name: quarterStart
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The quarter end timestamp (milliseconds)
          name: quarterEnd
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The year start timestamp (milliseconds)
          name: yearStart
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The year end timestamp (milliseconds)
          name: yearEnd
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The month start timestamp (milliseconds)
          name: monthStart
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The month end timestamp(milliseconds)
          name: monthEnd
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The charge data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceReportsGetChargesByAssetResponse'
        '403':
          description: Forbidden to access this Asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetChargesByAsset403Response
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetChargesByAsset404Response
  /invoices/reports/product-keys-without-activity:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve productkeys without activity over the defined interval
      operationId: InvoiceReports_getProductKeysWithoutActivity
      description: Retrieve productkeys without activity over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetProductKeysWithoutActivityResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetProductKeysWithoutActivity403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetProductKeysWithoutActivity404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetProductKeysWithoutActivity404Response1
  /invoices/reports/most-engaged-consuming-organizations:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve most engaged consuming organizations over the defined interval
      operationId: InvoiceReports_getMostEngagedConsumingOrganizations
      description: Retrieve most engaged consuming organizations over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The intervals (days, weeks or months)
          name: interval
          in: query
          required: false
          schema:
            type: string
            default: days
        - name: aggregationType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT_KEY_CLIENT
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetMostEngagedConsumingOrganizationsResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetMostEngagedConsumingOrganizations403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetMostEngagedConsumingOrganizations404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetMostEngagedConsumingOrganizations404Response1
  /invoices/reports/most-engaged-consumers:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve most engaged consumers over the defined interval
      operationId: InvoiceReports_getMostEngagedConsumers
      description: Retrieve most engaged consumers over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The intervals (days, weeks or months)
          name: interval
          in: query
          required: false
          schema:
            type: string
            default: days
        - name: aggregationType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT_KEY_CLIENT
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetMostEngagedConsumersResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetMostEngagedConsumers403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetMostEngagedConsumers404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetMostEngagedConsumers404Response1
  /invoices/reports/inactive-consumers:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve most inactive consumers consumers over the defined interval
      operationId: InvoiceReports_getInactiveConsumersInterval
      description: Retrieve inactive consumers over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The intervals (days, weeks or months)
          name: interval
          in: query
          required: false
          schema:
            type: string
            default: days
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetInactiveConsumersIntervalResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetInactiveConsumersInterval403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetInactiveConsumersInterval404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetInactiveConsumersInterval404Response1
  /invoices/reports/created-product-key-counts:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total active product key counts over the defined interval
      operationId: InvoiceReports_getActiveProductKeyCountsOverInterval
      description: Retrieve total active product key counts over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The organization id
          name: productId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: >-
            The total active product key count grouped by day over the supplied
            interval
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetActiveProductKeyCountsOverIntervalResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetActiveProductKeyCountsOverInterval403Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetActiveProductKeyCountsOverInterval403Response1
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetActiveProductKeyCountsOverInterval404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetActiveProductKeyCountsOverInterval404Response1
  /invoices/reports/consumers-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve consumers for an organization
      operationId: InvoiceReports_getConsumersByOrganization
      description: Retrieve consumers for an organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetConsumersByOrganizationResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetConsumersByOrganization403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetConsumersByOrganization404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetConsumersByOrganization404Response1
  /invoices/reports/calls-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total call count for a user over the defined interval
      operationId: InvoiceReports_getTotalCallCountForUser
      description: Retrieve total call count for a user over the defined interval
      parameters:
        - description: The user id
          name: userId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The interval (days, weeks or months)
          name: interval
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The total asset call counts
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForUserResponse
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForUser403Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForUser403Response1
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForUser404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForUser404Response1
  /invoices/reports/calls-by-product:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total calls for a product over the defined interval
      operationId: InvoiceReports_getCallsByProductTotal
      description: Retrieve total calls for a product over the defined interval
      parameters:
        - description: The asset id
          name: productId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetCallsByProductTotalResponse
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetCallsByProductTotal403Response
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetCallsByProductTotal404Response
  /invoices/reports/calls-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total call count for an organization over the defined interval
      operationId: InvoiceReports_getTotalCallCountForOrganization
      description: Retrieve total call count for an organization over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The consuming organization id
          name: consumingOrganizationId
          in: query
          required: false
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The interval (days, weeks or months)
          name: interval
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The total Organization call counts
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForOrganizationResponse
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForOrganization403Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForOrganization403Response1
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForOrganization404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForOrganization404Response1
  /invoices/reports/calls-by-client-and-product:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve total call count for an product's usage by a given client over
        the defined interval
      operationId: InvoiceReports_getTotalCallCountForProductUsageByClientOverInterval
      description: >-
        Retrieve total call count for an product's usage by a given client over
        the defined interval
      parameters:
        - description: The client id
          name: clientId
          in: query
          required: true
          schema:
            type: string
        - description: The product id
          name: productId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total product calls
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForProductUsageByClientOverIntervalResponse
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForProductUsageByClientOverInterval403Response
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallCountForProductUsageByClientOverInterval404Response
  /invoices/reports/calls-by-client-and-asset:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve total call count for an asset's usage by a given client over
        the defined interval
      operationId: InvoiceReports_getCallCountByClientAndAsset
      description: >-
        Retrieve total call count for an asset's usage by a given client over
        the defined interval
      parameters:
        - description: The client id
          name: clientId
          in: query
          required: true
          schema:
            type: string
        - description: The asset id
          name: assetId
          in: query
          required: true
          schema:
            type: string
        - description: The number of months of data to get
          name: numberOfMonths
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset calls
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetCallCountByClientAndAssetResponse
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetCallCountByClientAndAsset403Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetCallCountByClientAndAsset403Response1
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetCallCountByClientAndAsset404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetCallCountByClientAndAsset404Response1
  /invoices/reports/calls-by-asset:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total calls for an asset over the defined interval
      operationId: InvoiceReports_getTotalCallsByAsset
      description: Retrieve total calls for an asset over the defined interval
      parameters:
        - description: The asset id
          name: assetId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallsByAssetResponse
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallsByAsset403Response
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalCallsByAsset404Response
  /invoices/reports/asset-total-spend-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset spend for a user
      operationId: InvoiceReports_getTotalAssetSpendByUser
      description: Retrieve total asset spend for a user
      parameters:
        - description: The user id
          name: userId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetSpendByUserResponse
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetSpendByUser403Response
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetSpendByUser404Response
  /invoices/reports/asset-spend-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset spend for a user
      operationId: InvoiceReports_getTotalAssetSpendForUser
      description: Retrieve total asset spend for a user
      parameters:
        - description: The user id
          name: userId
          in: query
          required: true
          schema:
            type: string
        - description: The asset id
          name: assetId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetSpendForUserResponse
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetSpendForUser403Response
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetSpendForUser404Response
  /invoices/reports/asset-spend-by-owner:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset spend for an organization over the defined interval
      operationId: InvoiceReports_getTotalSpendOverInterval
      description: Retrieve total asset spend for an organization over the defined interval
      parameters:
        - description: The owner id
          name: ownerId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendOverIntervalResponse
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendOverInterval403Response
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalSpendOverInterval404Response
  /invoices/reports/asset-spend-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset spend for an organization over the defined interval
      operationId: InvoiceReports_getTotalAssetSpendByOrganization
      description: Retrieve total asset spend for an organization over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The asset id
          name: assetId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetSpendByOrganizationResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetSpendByOrganization403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetSpendByOrganization404Response
  /invoices/reports/asset-calls-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset call count for a user over the defined interval
      operationId: InvoiceReports_getTotalAssetCallsByUser
      description: Retrieve total asset call count for a user over the defined interval
      parameters:
        - description: The user id
          name: userId
          in: query
          required: true
          schema:
            type: string
        - description: The asset id
          name: assetId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset call counts
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetCallsByUserResponse
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetCallsByUser403Response
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalAssetCallsByUser404Response
  /invoices/reports/asset-calls-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve total asset call count for an organization over the defined
        interval
      operationId: InvoiceReports_getAssetCallCountByOrganization
      description: >-
        Retrieve total asset call count for an organization over the defined
        interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The asset id
          name: assetId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset call counts
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetAssetCallCountByOrganizationResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetAssetCallCountByOrganization403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetAssetCallCountByOrganization404Response
  /invoices/reports/applications-value-by-product:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve the product applications values for an organization over the
        defined interval
      operationId: InvoiceReports_getApplicationValuesByProduct
      description: Retrieve the product applications values over the defined interval
      parameters:
        - description: The product id
          name: productId
          in: query
          required: false
          schema:
            type: string
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The intervals (days, weeks or months)
          name: interval
          in: query
          required: false
          schema:
            type: string
            default: days
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetApplicationValuesByProductResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetApplicationValuesByProduct404Response
  /invoices/reports/active-product-key-counts:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total active product key counts over the defined interval
      operationId: InvoiceReports_getTotalActiveProductKeyCounts
      description: Retrieve total active product key counts over the defined interval
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The total active productkey count grouped by day over the supplied
            interval
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalActiveProductKeyCountsResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalActiveProductKeyCounts403Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalActiveProductKeyCounts403Response1
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalActiveProductKeyCounts404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoiceReportsGetTotalActiveProductKeyCounts404Response1
  /invoices/product-keys/top:
    get:
      tags:
        - Invoices
      summary: Retrieve top consuming product keys for the current user
      operationId: Invoices_getTopConsumingProductKeys
      description: Retrieve top consuming product keys for the current user
      parameters:
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The top consumed product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetConsumerRollUpByChargeDTO'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetTopConsumingProductKeysResponse
  /invoices/paged:
    get:
      tags:
        - Invoices
      summary: List invoices (paginated)
      operationId: Invoices_listPaged
      description: List invoices (paginated)
      parameters:
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The organization's id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListPagedResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListPaged404Response'
  /invoices/paged/{id}/refunds:
    get:
      tags:
        - Invoices
      summary: List refunds (paginated)
      operationId: Invoices_listPagedRefunds
      description: List refunds (paginated)
      parameters:
        - description: Id of invoice
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The SLA Refunds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundViewPageResponse'
        '403':
          description: Forbidden to access this Invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListPagedRefundsResponse'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListPagedRefunds404Response'
  /invoices/paged/{id}/line-items:
    get:
      tags:
        - Invoices
      summary: List of line items (paginated)
      operationId: Invoices_listLineItemsPaged
      description: List of line items (paginated)
      parameters:
        - description: Id of the invoice
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineItemPageResponse'
        '403':
          description: Forbidden to access this invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListLineItemsPagedResponse'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListLineItemsPaged404Response'
  /invoices/organization/{organizationId}/summarized:
    get:
      tags:
        - Invoices
      summary: Paginated list of summarized invoices
      operationId: Invoices_listSummarizedByOrganization
      description: Paginated list of summarized invoices
      parameters:
        - description: The organization's id
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesListSummarizedByOrganizationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesListSummarizedByOrganization404Response
  /invoices/organization/{organizationId}/paged:
    get:
      tags:
        - Invoices
      summary: Paginated list of invoices
      operationId: Invoices_listPagedByOrganization
      description: Paginated list of invoices
      parameters:
        - description: The organization's id
          name: organizationId
          in: path
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListPagedByOrganizationResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesListPagedByOrganization404Response
  /invoices/organization/{id}/refunds/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve refunds for an organization
      operationId: Invoices_getOrganizationRefunds
      description: Retrieve refunds for a organization
      parameters:
        - description: The User ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Refunds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundViewPageResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetOrganizationRefundsResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetOrganizationRefunds404Response'
  /invoices/organization/{id}/refunds/csv:
    get:
      tags:
        - Invoices
      summary: Retrieve refunds for an organization as a csv
      operationId: Invoices_getOrganizationRefundsCsv
      description: Retrieve refunds for a organization as a csv
      parameters:
        - description: The user id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The refunds
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoicesGetOrganizationRefundsCsvResponse'
        '403':
          description: Forbidden to access this organization
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetOrganizationRefundsCsv403Response
        '404':
          description: Organization not found
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetOrganizationRefundsCsv404Response
  /invoices/organization/{id}/recent-transactions:
    get:
      tags:
        - Invoices
      summary: Retrieve transactions for an organization
      operationId: Invoices_getOrganizationTransactions
      description: Retrieve transactions for an organization
      parameters:
        - description: The organization id
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionViewPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetOrganizationTransactionsResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetOrganizationTransactions403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetOrganizationTransactions404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetOrganizationTransactions404Response1
  /invoices/organization/{id}/recent-transactions/search:
    get:
      tags:
        - Invoices
      summary: Search recent transactions for an organization
      operationId: Invoices_searchRecentTransactions
      description: Search recent transactions for an organization
      parameters:
        - description: The organization id
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The query string
          name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionViewPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesSearchRecentTransactionsResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesSearchRecentTransactions404Response
  /invoices/organization/{id}/recent-transactions/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve transactions for an organization
      operationId: Invoices_getOrganizationTransactions
      description: Retrieve transactions for an organization
      parameters:
        - description: The organization id
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The product ids to filter
          name: productIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - description: The product license ids to filter
          name: productLicenseIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - description: The client email address ids to filter
          name: clientIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - description: The asset ids to filter
          name: assetIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - description: The application ids to filter
          name: applicationIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - description: The charge types to filter
          name: chargeTypes
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - description: The query string
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: Results page you want to retrieve (0..N)
          name: page
          in: query
          content:
            '*/*':
              schema:
                type: integer
                default: '0'
        - description: Number of records per page.
          name: size
          in: query
          content:
            '*/*':
              schema:
                type: integer
                default: '5'
        - description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          name: sort
          in: query
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: The Line Items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionViewPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetOrganizationTransactions403Response1
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetOrganizationTransactions404Response
  /invoices/organization/{id}/line-items/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve line items for an organization
      operationId: Invoices_getLineItemsForOrganization
      description: Retrieve line items for an organization
      parameters:
        - description: The Organization ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Line Items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineItemPageResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetLineItemsForOrganizationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetLineItemsForOrganization404Response
  /invoices/generate:
    get:
      tags:
        - Invoices
      summary: Generate an invoice
      operationId: Invoices_generateInvoice
      description: Generate an invoice
      parameters:
        - description: Settlement period of invoice
          name: settlementPeriod
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGenerateInvoiceResponse'
        '403':
          description: Forbidden to access this api
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGenerateInvoice403Response'
        '404':
          description: Invoice generation disabled not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGenerateInvoice404Response'
  /invoices/charge-calculation-log/{id}:
    get:
      tags:
        - Invoices
      summary: Charge calculation log
      operationId: Invoices_getChargeCalculationLog
      description: Retrieves a charge calculation log
      parameters:
        - description: Id of charge calculation log
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The charge calculation log
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeCalculationLogView'
        '403':
          description: Forbidden to access this charge calculation log
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetChargeCalculationLogResponse'
        '404':
          description: Charge calculation log not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesGetChargeCalculationLog404Response
  /invoices/apis/top:
    get:
      tags:
        - Invoices
      summary: Retrieve most consumed APIs for the current user
      operationId: Invoices_getTopConsumedApis
      description: Retrieve most consumed APIs for the current user
      parameters:
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The top asset rolled up charged
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetRollUpByChargeDTO'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetTopConsumedApisResponse'
  /invoices/apis/top/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve paginated most consumed apis for the current user
      operationId: Invoices_getTopConsumedApis
      description: Retrieve paginated most consumed apis for the current user
      parameters:
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The top asset rolled up charged
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetRollUpByChargeDTO'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetTopConsumedApis404Response'
  /identity-provider/configurations/property-names:
    get:
      tags:
        - Identity Provider Configurations
      summary: Retrieve Identity Provider Configuration Property Names
      operationId: IdentityProviderConfigurations_getPropertyNames
      description: Retrieve Identity Provider Configuration Property Names
      parameters:
        - description: The Identity Provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of Identity Provider Property Names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsGetPropertyNamesResponse
        '404':
          description: Identity Provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsGetPropertyNames404Response
  /identity-provider/configurations/property-descriptions:
    get:
      tags:
        - Identity Provider Configurations
      summary: >-
        Retrieve Identity Provider Management Configuration Property
        Descriptions
      operationId: IdentityProviderConfigurations_getPropertyDescriptions
      description: Retrieve Identity Provider Configuration Property Descriptions
      parameters:
        - description: The Identity Provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of Identity Property Names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsGetPropertyDescriptionsResponse
        '404':
          description: Identity Provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentityProviderConfigurationsGetPropertyDescriptions404Response
  /hubspot/token/{id}:
    get:
      tags:
        - Hubspot
      summary: Get a token
      operationId: Hubspot_getToken
      description: Get a token
      parameters:
        - description: User id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubspotGetTokenResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubspotGetToken404Response'
  /features/paged:
    get:
      tags:
        - Features
      summary: List of features (paginated)
      operationId: Features_listPagedFeatures
      description: List of features (paginated)
      parameters:
        - description: Id of features owner
          name: ownerId
          in: query
          required: true
          schema:
            type: string
        - description: Id of features organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Features
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturePageResponse'
        '403':
          description: Forbidden to access this User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesListPagedFeaturesResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesListPagedFeatures404Response'
  /export/configurations/property-names:
    get:
      tags:
        - Export Configurations
      summary: Retrieve export configuration property names
      operationId: ExportConfigurations_getPropertyNames
      description: Retrieve export configuration property names
      parameters:
        - description: The export provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The export configurations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsGetPropertyNamesResponse
        '404':
          description: Export Provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExportConfigurationsGetPropertyNames404Response
  /environments:
    get:
      tags:
        - Environments
      summary: List environments by organization
      operationId: Environments_listByOrganization
      description: List environments by organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: Filter environments by API managemnet configuration
          name: apimConfigurationId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The environments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsListByOrganizationResponse'
        '403':
          description: Forbidden to access environments for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsListByOrganization403Response'
        '404':
          description: Environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsListByOrganization404Response'
  /consumer-data-provider/configurations/{id}/connectivity-status:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve an data provider configuration's connectivity status
      operationId: ConsumerDataProviderConfigurations_getConnectivityStatus
      description: Retrieve an data provider configuration's connectivity status
      parameters:
        - description: The data provider configuration id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The data provider configuration connectivity status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityValidationResponse'
        '403':
          description: Forbidden to access this data provider configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsGetConnectivityStatusResponse
        '404':
          description: Data provider configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsGetConnectivityStatus404Response
  /consumer-data-provider/configurations/queries:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve data provider queries
      operationId: ConsumerDataProviderConfigurations_getDataProviderQueries
      description: Retrieve data provider queries
      parameters:
        - description: The consumer data provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of consumer data provider queries
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsGetDataProviderQueriesResponse
  /consumer-data-provider/configurations/property-names:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve data provider configuration property names
      operationId: ConsumerDataProviderConfigurations_getPropertyNames
      description: Retrieve data provider configuration property names
      parameters:
        - description: The consumer data provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of consumer data provider property names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsGetPropertyNamesResponse
        '404':
          description: Consumer data provider provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsGetPropertyNames404Response
  /consumer-data-provider/configurations/property-descriptions:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve data provider configuration property descriptions
      operationId: ConsumerDataProviderConfigurations_getPropertyDescriptions
      description: Retrieve data provider configuration property descriptions
      parameters:
        - description: The consumer data provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of ConsumerDataProvider Property Names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsGetPropertyDescriptionsResponse
        '404':
          description: Consumer data provider provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ConsumerDataProviderConfigurationsGetPropertyDescriptions404Response
  /audit-trail/internal/metadata:
    get:
      tags:
        - Internal System Audit Trail
      summary: List internal audit trail event metadata
      operationId: InternalSystemAuditTrail_listEventMetadata
      description: List internal audit trail event metadata
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The event metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalEventMetadata'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InternalSystemAuditTrailListEventMetadataResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InternalSystemAuditTrailListEventMetadata404Response
  /audit-trail/internal/events:
    get:
      tags:
        - Internal System Audit Trail
      summary: List internal audit trail events
      operationId: InternalSystemAuditTrail_listEvents
      description: List internal audit trail events
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The log source
          name: logSource
          in: query
          required: false
          schema:
            type: string
        - description: The operation type
          name: operation
          in: query
          required: false
          schema:
            type: string
        - description: Results
          name: results
          in: query
          required: false
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The internal audit trail events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalSystemAuditTrail'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InternalSystemAuditTrailListEventsResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InternalSystemAuditTrailListEvents404Response
  /audit-trail/external/metadata:
    get:
      tags:
        - External System Audit Trail
      summary: List external audit trail event metadata
      operationId: ExternalSystemAuditTrail_listEventMetadata
      description: List external audit trail event metadata
      parameters:
        - description: The Organization ID
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The event metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalEventMetadata'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExternalSystemAuditTrailListEventMetadataResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExternalSystemAuditTrailListEventMetadata404Response
  /audit-trail/external/events:
    get:
      tags:
        - External System Audit Trail
      summary: List external audit trail events
      operationId: ExternalSystemAuditTrail_listEvents
      description: List external audit trail events
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The log source
          name: logSource
          in: query
          required: false
          schema:
            type: string
        - description: The operation type
          name: operation
          in: query
          required: false
          schema:
            type: string
        - description: Results
          name: results
          in: query
          required: false
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The external audit trail events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSystemAuditTrail'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExternalSystemAuditTrailListEventsResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExternalSystemAuditTrailListEvents404Response
  /assets/summarized:
    get:
      tags:
        - Assets
      summary: List assets (summarized)
      operationId: Assets_listSummarized
      description: List assets (summarized)
      parameters:
        - description: Id of asset's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The environment id
          name: environmentId
          in: query
          required: true
          schema:
            type: string
        - description: Id of asset's owner
          name: ownerId
          in: query
          required: false
          schema:
            type: string
        - description: The query string
          name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListSummarizedResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListSummarized404Response'
  /assets/search:
    get:
      tags:
        - Assets
      summary: Search for assets
      operationId: Assets_searchOperation
      description: Search for assets
      parameters:
        - description: Id of asset's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The query string
          name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsSearchOperationResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsSearchOperation404Response'
  /assets/reports/sla-violations-paged:
    get:
      tags:
        - Asset Reports
      summary: List SLA Violations by SLA and date range (paginated)
      operationId: AssetReports_listSlaViolationsBySlaAndDateRange
      description: List SLA Violations by SLA and date range (paginated)
      parameters:
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The SLA Violations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationReportPageResponse'
        '403':
          description: Forbidden to access this SLA
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsListSlaViolationsBySlaAndDateRangeResponse
        '404':
          description: SLA not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsListSlaViolationsBySlaAndDateRange404Response
  /assets/reports/sla-violations-by-owner:
    get:
      tags:
        - Asset Reports
      summary: Retrieve SLA violations by owner and date range
      operationId: AssetReports_getSlaViolationsByOwnerAndDateRange
      description: Retrieve SLA violations by owner and date range
      parameters:
        - description: The owner id
          name: ownerId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The SLA violations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsGetSlaViolationsByOwnerAndDateRangeResponse
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsGetSlaViolationsByOwnerAndDateRange403Response
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsGetSlaViolationsByOwnerAndDateRange404Response
  /assets/reports/sla-violations-by-organization:
    get:
      tags:
        - Asset Reports
      summary: List SLA violations by organization and date range (paginated)
      operationId: AssetReports_listSlaViolationsByOrganization
      description: List SLA violations by organization and date range (paginated)
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The SLA violations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsListSlaViolationsByOrganizationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsListSlaViolationsByOrganization404Response
  /assets/reports/sla-violations-by-consumer:
    get:
      tags:
        - Asset Reports
      summary: Retrieve SLA violations by consumer and date range
      operationId: AssetReports_getSlaViolationsByConsumerAndDateRange
      description: Retrieve SLA violations by consumer and date range
      parameters:
        - description: The consumer id
          name: consumerId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The SLA violations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsGetSlaViolationsByConsumerAndDateRangeResponse
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsGetSlaViolationsByConsumerAndDateRange403Response
        '404':
          description: Consumer not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsGetSlaViolationsByConsumerAndDateRange404Response
  /assets/reports/sla-violation-count-by-organization:
    get:
      tags:
        - Asset Reports
      summary: Count of  SLA violations by organization and date range (paginated)
      operationId: AssetReports_countSlaViolationsByOrganization
      description: Count of SLA violations by organization and date range (paginated)
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The count of SLA violations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsCountSlaViolationsByOrganizationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetReportsCountSlaViolationsByOrganization404Response
  /assets/paged:
    get:
      tags:
        - Assets
      summary: List of assets (paginated)
      operationId: Assets_listPaged
      description: List of assets (paginated)
      parameters:
        - description: Id of asset's owner
          name: ownerId
          in: query
          required: true
          schema:
            type: string
        - description: Id of assets organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListPagedResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListPaged404Response'
  /assets/metadata/unclassified:
    get:
      tags:
        - Assets
      summary: Get unclassified metadata for an organization
      operationId: Assets_getUnclassifiedMetadata
      description: Get unclassified urls for an organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unclassified asset metadata for an organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsGetUnclassifiedMetadataResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsGetUnclassifiedMetadata403Response'
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsGetUnclassifiedMetadata404Response'
  /assets/changelogs/{id}:
    get:
      tags:
        - Assets
      summary: Get changelogs for an asset
      operationId: Assets_getChangelogsById
      description: Get changelogs for an asset
      parameters:
        - description: The asset id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Changelogs for an asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsGetChangelogsByIdResponse'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsGetChangelogsById403Response'
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsGetChangelogsById404Response'
  /assets/assets-identifiers:
    get:
      tags:
        - Assets
      summary: List of assets owned by a organization
      operationId: Assets_listOwnedByOrganization
      description: List of assets owned by an organization
      parameters:
        - description: Id of asset's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: Id of the API management configuration
          name: apimConfigurationId
          in: query
          required: true
          schema:
            type: string
        - description: Id of the environment
          name: environmentId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The APIs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListOwnedByOrganizationResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListOwnedByOrganization403Response'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListOwnedByOrganization404Response'
  /asset-metrics/transaction-counts:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the total transaction count for the tenant
      operationId: AssetMetrics_getTotalTransactionCount
      description: Retrieve the total transaction count for the tenant
      parameters:
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total transaction count
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetTotalTransactionCountResponse
        '403':
          description: Forbidden to access this tenant
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetTotalTransactionCount403Response
  /asset-metrics/top-applications-by-total-requests:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the top applications by total requests for the organization
      operationId: AssetMetrics_getTopApplicationsByTotalRequests
      description: Retrieve the top applications by total requests for the organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The assets id
          name: assetId
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The top applications by total requests
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetTopApplicationsByTotalRequestsResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetTopApplicationsByTotalRequests403Response
  /asset-metrics/requests-by-response-type:
    get:
      tags:
        - Asset Metrics
      summary: >-
        Retrieve the total request percentage by response type for the
        organization
      operationId: AssetMetrics_getRequestPercentageByResponseType
      description: >-
        Retrieve the total transaction request percentage response type for the
        organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The asset id
          name: assetIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - description: The starting timestamp
          name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total request percentage by response type
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetRequestPercentageByResponseTypeResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetRequestPercentageByResponseType403Response
  /asset-metrics/recent-analytics-transaction:
    get:
      tags:
        - Asset Metrics
      summary: List derived asset metrics
      operationId: AssetMetrics_listRecentAnalyticsTransaction
      description: List derived asset metrics
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: Paged flag
          name: paged
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Filter: the methods use in the operations for the resources to be
            filtered
          name: method
          in: query
          required: false
          schema:
            type: string
        - description: 'Filter: the asset ids for the resources to be filtered'
          name: assetId
          in: query
          required: false
          schema:
            type: string
        - description: 'Filter: the user domains related to the resources to be filtered'
          name: userDomain
          in: query
          required: false
          schema:
            type: string
        - description: 'Filter: the user domains related to the resources to be filtered'
          name: applicationId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter: the consumer email address related to the resources to be
            filtered
          name: consumerEmailAddress
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter: the consumer organization ids related to the resources to be
            filtered
          name: consumingOrganizationId
          in: query
          required: false
          schema:
            type: string
        - description: 'Filter: the response codes returned by the resources to be filtered'
          name: responseCode
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter: the average latency calculated by the resources to be
            filtered
          name: averageLatency
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter: the maximun latency calculated by the resources to be
            filtered
          name: maxLatency
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListRecentAnalyticsTransactionResponse
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListRecentAnalyticsTransaction403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListRecentAnalyticsTransaction404Response
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListRecentAnalyticsTransaction404Response1
  /asset-metrics/derived:
    get:
      tags:
        - Asset Metrics
      summary: List derived asset metrics
      operationId: AssetMetrics_listDerivedAssetMetrics
      description: List derived asset metrics
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The asset id
          name: assetId
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - description: The starting timestamp (milliseconds)
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp (milliseconds)
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: Grouping
          name: group
          in: query
          required: false
          schema:
            type: string
        - description: Paged
          name: paged
          in: query
          required: false
          schema:
            type: boolean
        - description: GroupFilter
          name: groupFilter
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            default: []
      responses:
        '200':
          description: The Applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListDerivedAssetMetricsResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListDerivedAssetMetrics404Response
  /asset-metrics/derived/assets:
    get:
      tags:
        - Asset Metrics
      summary: List assets derived asset metrics
      operationId: AssetMetrics_listDerivedAssetMetrics
      description: List assets with derived asset metrics
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The summarized assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListDerivedAssetMetrics403Response
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListDerivedAssetMetrics404Response
  /asset-metrics/api-latencies-by-period:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the api latencies by period for the organization
      operationId: AssetMetrics_getApiLatenciesByPeriod
      description: Retrieve the api latencies by period for the organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The asset's id
          name: assetId
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The latency calculation
          name: latencyView
          in: query
          required: false
          schema:
            type: string
            default: AVERAGE_LATENCY
      responses:
        '200':
          description: The API latency by period requests
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetApiLatenciesByPeriodResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetApiLatenciesByPeriod403Response
  /asset-metrics/api-latencies-by-organization:
    get:
      tags:
        - Asset Metrics
      summary: >-
        Retrieve the API latencies by consuming organization for the
        organization
      operationId: AssetMetrics_getLatenciesByOrganization
      description: >-
        Retrieve the API latencies by consuming organization for the
        organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The asset's id
          name: assetId
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The latency calculation
          name: latencyView
          in: query
          required: false
          schema:
            type: string
            default: AVERAGE_LATENCY
        - description: The consuming organization ID
          name: consumingOrganizationId
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The api latency by consuming organization requests
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetLatenciesByOrganizationResponse
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetLatenciesByOrganization403Response
  /asset-metrics/api-latencies-by-api:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the API latencies by API for the organization
      operationId: AssetMetrics_getApiLatenciesByApi
      description: Retrieve the API latencies by API for the organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The asset's id
          name: assetId
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The latency calculation
          name: latencyView
          in: query
          required: false
          schema:
            type: string
            default: AVERAGE_LATENCY
      responses:
        '200':
          description: The API latency by period requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetMetricsGetApiLatenciesByApiResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetApiLatenciesByApi403Response
  /asset-metrics/api-experience-over-time:
    get:
      tags:
        - Asset Metrics
      summary: List derived grouped asset metrics
      operationId: AssetMetrics_listDerivedGroupedMetrics
      description: List derived grouped asset metrics
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The asset id
          name: assetId
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - description: The event view selected
          name: eventView
          in: query
          required: false
          schema:
            type: string
            default: TOTAL_REQUESTS
        - description: The group clause
          name: group
          in: query
          required: true
          schema:
            type: string
            default: API_URI
        - name: period
          in: query
          required: false
          schema:
            type: string
            default: LAST_HOUR
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListDerivedGroupedMetricsResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsListDerivedGroupedMetrics404Response
  /asset-metrics/api-errors-by-period:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the api error by period for the organization
      operationId: AssetMetrics_getApiErrorByPeriod
      description: Retrieve the api error by period for the organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The assets id
          name: assetId
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The organization id
          name: isPercentage
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: The API error by API requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetMetricsGetApiErrorByPeriodResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetApiErrorByPeriod403Response
  /asset-metrics/api-errors-by-organization:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the API error by the organization
      operationId: AssetMetrics_getApiErrorByOrganization
      description: Retrieve the API error by the organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The assets id
          name: assetId
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The Organization ID
          name: isPercentage
          in: query
          required: true
          schema:
            type: boolean
        - description: The consuming organization ID
          name: consumingOrganizationId
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The API error by EPI requests
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetApiErrorByOrganizationResponse
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetMetricsGetApiErrorByOrganization403Response
  /asset-metrics/api-errors-by-api:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the API error by API for the organization
      operationId: AssetMetrics_getApiErrorByApi
      description: Retrieve the API error by API for the organization
      parameters:
        - description: The organization id
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The assets id
          name: assetId
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - description: The starting timestamp
          name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The ending timestamp
          name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - description: The Organization ID
          name: isPercentage
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: The api error by API requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetMetricsGetApiErrorByApiResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetMetricsGetApiErrorByApi403Response'
  /applications/{id}:
    get:
      tags:
        - Applications
      summary: Get an Application
      operationId: Applications_getApplicationById
      description: Get an Application
      parameters:
        - description: The asset id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
        '403':
          description: Forbidden to access this Application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsGetApplicationByIdResponse'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsGetApplicationById404Response'
    delete:
      tags:
        - Applications
      summary: Delete an application
      operationId: Applications_deleteApplication
      description: Delete an application
      parameters:
        - description: The application id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsDeleteApplicationResponse'
        '403':
          description: Forbidden to access this application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsDeleteApplication403Response'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsDeleteApplication404Response'
  /applications/summarized:
    get:
      tags:
        - Applications
      summary: List summarized applications
      operationId: Applications_listSummarizedApplications
      description: List summarized applications
      parameters:
        - description: Id of application's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - description: The query string
          name: query
          in: query
          required: false
          schema:
            type: string
        - description: Include deactivated applications?
          name: includeDeactivated
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsListSummarizedApplicationsResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsListSummarizedApplications404Response
  /applications/summarized/{id}:
    get:
      tags:
        - Applications
      summary: Get summarized applications
      operationId: Applications_getSummarizedApplication
      description: Get summarized application
      parameters:
        - description: The application id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsGetSummarizedApplicationResponse
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsGetSummarizedApplication404Response
  /applications/search:
    get:
      tags:
        - Applications
      summary: Search for applications
      operationId: Applications_findApplications
      description: Search for applications
      parameters:
        - description: Id of application's organization
          name: organizationId
          in: query
          required: true
          schema:
            type: string
        - description: The query string
          name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsFindApplicationsResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsFindApplications404Response'
  /apim/configurations/{id}/connectivity-status:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve an API management configuration's connectivity status
      operationId: ApiManagementConfigurations_getConnectivityStatus
      description: Retrieve an API management configuration's connectivity status
      parameters:
        - description: The API management configuration ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The API Management Configuration connectivity status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityValidationResponse'
        '403':
          description: Forbidden to access this API Management Configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetConnectivityStatusResponse
        '404':
          description: API Management Configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetConnectivityStatus404Response
  /apim/configurations/property-names:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve API management configuration property names
      operationId: ApiManagementConfigurations_getPropertyNames
      description: Retrieve API management configuration property names
      parameters:
        - description: The API management provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of API management property names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetPropertyNamesResponse
        '404':
          description: API management provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetPropertyNames404Response
  /apim/configurations/property-descriptions:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve API management configuration property descriptions
      operationId: ApiManagementConfigurations_getPropertyDescriptions
      description: Retrieve API management configuration property descriptions
      parameters:
        - description: The API management provider
          name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of API management property names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetPropertyDescriptionsResponse
        '404':
          description: API management provider not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetPropertyDescriptions404Response
  /apim/configurations/connectivity-status:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve an API management configuration's connectivity status
      operationId: ApiManagementConfigurations_getConnectivityStatus
      description: Retrieve an API management configuration's connectivity status
      parameters:
        - description: The API management client id
          name: clientId
          in: query
          required: true
          schema:
            type: string
        - description: The API management client secret
          name: clientSecret
          in: query
          required: true
          schema:
            type: string
        - description: The API management provider
          name: apimProvider
          in: query
          required: true
          schema:
            type: string
        - description: The authentication mechanism
          name: authenticationMechanism
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The API management configuration connectivity status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityValidationResponse'
        '403':
          description: Forbidden to access this API management configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetConnectivityStatus403Response
        '404':
          description: API management configuration not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApiManagementConfigurationsGetConnectivityStatus404Response
  /account-tier/{id}:
    get:
      tags:
        - Account Tiers
      summary: Get account tier
      operationId: AccountTiers_getTierById
      description: Get account tier
      parameters:
        - description: The account tier id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersGetTierByIdResponse'
  /account-tier/products:
    get:
      tags:
        - Account Tiers
      summary: Get details of all products configured for Account Tiers
      operationId: AccountTiers_listAllProducts
      description: Get details of all products configured for Account Tiers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersListAllProductsResponse'
  /account-tier/current:
    get:
      tags:
        - Account Tiers
      summary: Get the current logged in user's account tier
      operationId: AccountTiers_getCurrentUserTier
      description: Get the current logged in user's account tier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersGetCurrentUserTierResponse'
  /product-keys/{productKeyId}:
    delete:
      tags:
        - Product Keys
      summary: Deactivate a productkey
      operationId: ProductKeys_deactivateKey
      description: Deactivate a productkey
      parameters:
        - description: The product key id
          name: productKeyId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Delete the productkey immediately as opposed to at the end of its
            associated SettlementPeriod
          name: force
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysDeactivateKeyResponse'
        '403':
          description: Forbidden to access this ProductKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysDeactivateKey403Response'
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeysDeactivateKey404Response'
  /payment/customers/{customerId}/method/{methodId}:
    delete:
      tags:
        - Payment Methods
      summary: Delete a payment method from a payment customer
      operationId: PaymentMethods_deleteCustomerMethod
      description: Delete a payment method from a payment customer
      parameters:
        - description: The payment customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
        - description: The payment method id
          name: methodId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaymentMethodsDeleteCustomerMethodResponse
  /api-keys/{id}:
    delete:
      tags:
        - API Keys
      summary: Delete an API Key
      operationId: ApiKeys_deleteOperation
      description: Delete an API key
      parameters:
        - description: The API key id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysDeleteOperationResponse'
        '403':
          description: Forbidden to access this API Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysDeleteOperation403Response'
        '404':
          description: API Key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysDeleteOperation404Response'
  /account-tier/{id}/payment-methods/{paymentMethodId}:
    delete:
      tags:
        - Account Tiers
      summary: Get details of loaded payment methods for account tiers
      operationId: AccountTiers_deletePaymentMethods
      description: Get details of loaded payment methods for account tiers
      parameters:
        - description: The account tier ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The payment method ID
          name: paymentMethodId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTiersDeletePaymentMethodsResponse'
  /meter:
    post:
      tags:
        - Metring
      summary: Insert API metering data
      operationId: Metring_apiMeteringData
      description: Insert API metering data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringRequestDTO'
        required: true
      responses:
        '200':
          description: Metering data successfully recorded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /event:
    post:
      tags:
        - Events
      summary: Save can API event
      operationId: Events_saveApiEvent
      description: Save an API event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiEventDTO'
        required: true
      responses:
        '201':
          description: Metering data successfully recorded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsSaveApiEventResponse'
  /meter/product-key:
    get:
      tags:
        - Metring
      summary: Determine if a ProductKey is valid or not
      operationId: Metring_validateProductKey
      description: Determine if a ProductKey is valid or not
      parameters:
        - description: The product key
          name: productKey
          in: query
          required: false
          schema:
            type: string
        - description: The application ID
          name: application
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetringValidateProductKeyResponse'
components:
  schemas:
    UpdateUserDto:
      description: The user
      required:
        - personas
      type: object
      properties:
        username:
          description: The unique username
          type: string
          example: gabe
        emailAddress:
          description: The user's email address
          type: string
          example: gabe@revenium.io
        isActive:
          description: Is the user active
          type: boolean
          example: true
        organizationIds:
          description: A list of the organizations the user is a member of
          type: array
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            description: A list of the organizations the user is a member of
            type: string
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        administeredOrganizationIds:
          description: A list of the organizations the user is an administrator of
          type: array
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            description: A list of the organizations the user is an administrator of
            type: string
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        administeredTenantIds:
          description: A list of the tenants the user is an administrator of
          type: array
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            description: A list of the tenants the user is an administrator of
            type: string
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        roles:
          description: The roles granted to the user
          type: array
          example:
            - ROLE_ADMIN
            - ROLE_API_CONSUMER
          items:
            description: The roles granted to the user
            type: string
            example: '["ROLE_ADMIN","ROLE_API_CONSUMER"]'
        personas:
          description: The personas associated with the user
          type: array
          example:
            - CIO
            - COO
          items:
            description: The personas associated with the user
            type: string
            example: '["CIO","COO"]'
        firstName:
          type: string
        lastName:
          type: string
        active:
          type: boolean
          writeOnly: true
    APIKeyView:
      description: AssociatedApiKey
      required:
        - id
        - key
        - name
        - organization
        - owner
        - timestamp
      type: object
      properties:
        id:
          description: id of the API Key
          type: string
          example: 3kTMd
        name:
          description: The API key's name
          type: string
          example: Acme Integration Key
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        key:
          description: The API key
          type: string
          example: 78cccd62-26bf-4868-8c7e-0329a52bbdfd
        timestamp:
          description: The timestamp of when the API key was created
          type: integer
          format: int64
          example: 1643853341000
    ContactDetailsView:
      description: A view of an contact details
      required:
        - id
      type: object
      properties:
        id:
          description: The id of the contact details
          type: string
        address1:
          description: Address (Line 1)
          type: string
        address2:
          description: Address (Line 2)
          type: string
        city:
          description: City
          type: string
        state:
          description: State
          type: string
        postalCode:
          description: PostalCode
          type: string
        country:
          description: Country
          type: string
        phoneNumber:
          description: PhoneNumber
          type: string
        emailAddress:
          description: EmailAddress
          type: string
        url:
          description: Url
          type: string
    OrganizationView:
      description: A view of an organization
      required:
        - currency
        - domainAliases
        - id
        - name
        - tenant
      type: object
      properties:
        id:
          description: The id of the organization
          type: string
        name:
          description: The name of the organization
          type: string
        tenant:
          $ref: '#/components/schemas/TenantView'
        parent:
          $ref: '#/components/schemas/OrganizationView'
        account:
          description: The account id of the user
          type: string
        invoiceNotificationTemplate:
          description: Invoice notification template location
          type: string
        invoiceTemplate:
          description: Invoice template location
          type: string
        productKeyCreationNotificationTemplate:
          description: Product Key creation template location
          type: string
        productKeyUpgradeNotificationTemplate:
          description: Product Key upgrade template location
          type: string
        productKeyQuotaNotificationTemplate:
          description: Product Key quota notification template location
          type: string
        productKeyTierQuotaNotificationTemplate:
          description: Product Key tier quota notification template location
          type: string
        emailFromAddress:
          description: >-
            The sender address for notifications generated from this
            Organization (note: requires coordination with the Revenium team to
            setup the appropriate DKIM DNS records
          type: string
        domainAliases:
          description: >-
            Email domains associated with this organization (ie, acmesoft.org,
            acmesoft.io, etc)
          type: array
          example:
            - acmesoft.org
            - acmesoft.io
          items:
            description: >-
              Email domains associated with this organization (ie, acmesoft.org,
              acmesoft.io, etc)
            type: string
            example: '["acmesoft.org","acmesoft.io"]'
        contactDetails:
          $ref: '#/components/schemas/ContactDetailsView'
        defaultRemittanceInstruction:
          $ref: '#/components/schemas/RemittanceInstructionView'
        logoURL:
          description: URL for the organization's logo
          type: string
        externalId:
          description: >-
            An external identifier (e.g. in a API Management system) that is
            associated with the organization
          type: string
          example: 12345abcd
        assetAutoDiscoveryEnabled:
          description: Whether asset auto discovery is enabled or not
          type: boolean
        currency:
          description: The currency of the organization
          type: string
        invoiceReflectsProduct:
          description: If the invoice reflects product or product family
          type: boolean
        assetMetricReceived:
          description: If a derived asset metric has been received by this organization
          type: boolean
        internalErrorFlagOrg:
          type: boolean
        externalErrorFlagOrg:
          type: boolean
      example: 3kTMd
    RemittanceInstructionView:
      description: A view of a remittance instruction
      required:
        - id
      type: object
      properties:
        id:
          description: The Id of the RemittanceInstruction
          type: string
        instructionText:
          description: The instruction
          type: string
        helpText:
          description: The help text
          type: string
        billingEmail:
          description: The billing email address
          type: string
        billingPhoneNumber:
          description: The billing phone number
          type: string
    TenantView:
      description: A view of a tenant
      required:
        - defaultCurrency
        - description
        - id
        - lineItemReceived
        - name
        - profile
      type: object
      properties:
        description:
          description: The description of the tenant
          type: string
        id:
          description: The id of the tenant
          type: string
        name:
          description: The name of the tenant
          type: string
        defaultCurrency:
          description: The default currency of the tenant
          type: string
        profile:
          description: The profile type of tenant (MONETIZATION or CHARGEBACK)
          type: string
        tier:
          description: The account tier of the tenant (FREE,PAID,etc)
          type: string
        status:
          description: The account status of the tenant (ACTIVE,INACTIVE,etc)
          type: string
        lineItemReceived:
          description: Whether a lineItem has been received for this tenant
          type: boolean
        accountTierId:
          description: Account tier id for tenant if present
          type: string
    UserView:
      description: A view of a user
      required:
        - account
        - administeredOrganizations
        - administeredTenants
        - emailAddress
        - id
        - isActive
        - organizations
        - password
        - personas
        - roles
        - tenant
        - username
      type: object
      properties:
        id:
          description: The id of the iser
          type: string
        tenant:
          $ref: '#/components/schemas/TenantView'
        username:
          description: The username of the user
          type: string
        emailAddress:
          description: The emaul address of the user
          type: string
        password:
          type: string
        isActive:
          description: Is the user active?
          type: boolean
        account:
          description: The account of the user
          type: string
        organizations:
          description: The organizations the user belongs to
          type: array
          items:
            $ref: '#/components/schemas/OrganizationView'
        roles:
          description: The roles of the user
          type: array
          items:
            description: The roles of the user
            type: string
        administeredOrganizations:
          description: The administered organizations of the user
          type: array
          items:
            $ref: '#/components/schemas/OrganizationView'
        administeredTenants:
          description: The administered tenants of the user
          type: array
          items:
            $ref: '#/components/schemas/TenantView'
        personas:
          description: The personas of the user
          type: array
          items:
            description: The personas of the user
            type: string
        firstName:
          type: string
        lastName:
          type: string
        apiKey:
          $ref: '#/components/schemas/APIKeyView'
    UpdateTrafficAnomalyRuleRequest:
      description: The update traffic anomaly rule request
      required:
        - anomalyCategory
        - anomalyType
        - organizationId
        - ruleId
        - thresholdCount
        - thresholdValue
        - timeWindow
        - timeWindowUnit
      type: object
      properties:
        ruleId:
          description: The rule id
          type: string
          example: sAd12df
        organizationId:
          description: The organization associated with this rule
          type: string
          example: sAd12df
        anomalyType:
          description: The type of anomaly
          type: string
          example: LATENCY_RATE_GATEWAY
        anomalyCategory:
          description: The category of anomaly
          type: string
          example: ASSET
        thresholdValue:
          description: The threshold value
          type: number
          format: double
          example: 100
        thresholdCount:
          description: The threshold count
          type: integer
          format: int32
          example: 10
        timeWindow:
          description: The time window
          type: integer
          format: int64
          example: 1
        timeWindowUnit:
          description: The time window unit
          type: string
          example: MINUTES
    TrafficAnomalyRuleView:
      required:
        - anomalyCategory
        - anomalyType
        - organizationId
        - thresholdCount
        - thresholdValue
        - timeWindow
        - timeWindowUnit
      type: object
      properties:
        organizationId:
          description: The organization associated with this rule
          type: string
          example: sAd12df
        anomalyType:
          description: The type of anomaly
          type: string
          example: LATENCY_RATE_GATEWAY
        anomalyCategory:
          description: The category of anomaly
          type: string
          example: ASSET
        thresholdValue:
          description: The threshold value
          type: number
          format: double
          example: 100
        thresholdCount:
          description: The threshold count
          type: integer
          format: int32
          example: 10
        timeWindow:
          description: The time window
          type: integer
          format: int64
          example: 1
        timeWindowUnit:
          description: The time window unit
          type: string
          example: MINUTES
    UpdateTierRequest:
      description: The tier
      required:
        - name
      type: object
      properties:
        id:
          description: The id of the tier
          type: string
          example: NsYmyL
        ownerId:
          description: The id of the user that owns the plan
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the plan
          type: string
          example: sBcTTs3
        name:
          description: The name of the feature
          type: string
          example: documentation
        upTo:
          description: Upper unit limit for tier
          type: integer
          example: 1343234
        unitAmount:
          description: Unit amount of the tier
          type: number
          example: 1343234
    TierView:
      description: List of Plan tiers
      required:
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          description: Unique identifier for the tier
          type: string
          example: 3kTMd
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        name:
          description: The name of the tier
          type: string
          example: Free Tier
        upTo:
          description: Upper unit limit for tier
          type: integer
          example: 1343234
        unitAmount:
          description: Unit amount of the Tier
          type: number
          example: 1343234
        flatAmount:
          description: Flat amount of the tier
          type: number
          example: 1343234
        startingFrom:
          description: Lower range of the tier
          type: integer
          example: 1343234
      example: 4
    UpdateTenantDto:
      description: The tenant
      required:
        - description
        - name
        - profile
      type: object
      properties:
        description:
          description: Description of the tenant
          type: string
          example: aviation.aircraft
        name:
          description: The name of the tenant
          type: string
          example: AcmeSoft
        profile:
          description: Profile of the tenant
          type: string
          example: MONETIZATION
    UpdateSubscriberNotificationRequest:
      description: The application request
      required:
        - affectedProductLicenseOwner
        - id
        - organizationId
        - productIds
        - selectedOwners
        - subject
      type: object
      properties:
        id:
          description: The id of the subscriber notification
          type: string
          example: aSm1Fsv
        organizationId:
          description: The organization associated with the subscriber notification
          type: string
          example: 3kTmd
        affectedProductLicenseOwner:
          description: The type of owners affected by this notification
          type: string
          example: ALLPLOWNERS
        subject:
          description: The body for notification
          type: string
          example: This is a test
        selectedOwners:
          description: All users for notification
          type: array
          items:
            description: All users for notification
            type: string
        productIds:
          description: All products for notification
          type: array
          items:
            description: All products for notification
            type: string
    SubscriberNotificationView:
      required:
        - affectedProductLicenseOwners
        - id
        - lastSent
        - organization
        - subject
      type: object
      properties:
        id:
          description: Unique identifier of the subscriber notification
          type: string
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        subject:
          description: The subject associated with the subscriber notification
          type: string
          example: This is the subject
        affectedProductLicenseOwners:
          description: What primary keys clients are selected by the user
          type: string
        lastSent:
          description: When the last notification was sent
          type: integer
          format: int64
    UpdateFilterCategoryRequest:
      required:
        - items
        - operator
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            type: string
        operator:
          type: string
    UpdateStoredFilterRequest:
      description: The stored filter to create
      required:
        - filterName
        - id
        - organizationId
        - rawJsonFilters
        - userEmail
        - userId
      type: object
      properties:
        id:
          type: string
        organizationId:
          type: string
        filterName:
          type: string
        rawJsonFilters:
          type: string
        userId:
          type: string
        userEmail:
          type: string
        methods:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        assets:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        applications:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        userDomains:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        userEmails:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        consumingOrganizations:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        responseCodes:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        maxLatencies:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        avgLatencies:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
    FilterCategoryResponse:
      required:
        - id
        - items
        - operator
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            type: string
        operator:
          type: string
    StoredFilterResponse:
      required:
        - filterName
        - id
        - organizationId
        - rawJsonFilters
        - userEmail
        - userId
      type: object
      properties:
        id:
          type: string
        organizationId:
          type: string
        filterName:
          type: string
        rawJsonFilters:
          type: string
        userId:
          type: string
        userEmail:
          type: string
        methods:
          $ref: '#/components/schemas/FilterCategoryResponse'
        assets:
          $ref: '#/components/schemas/FilterCategoryResponse'
        applications:
          $ref: '#/components/schemas/FilterCategoryResponse'
        userDomains:
          $ref: '#/components/schemas/FilterCategoryResponse'
        userEmails:
          $ref: '#/components/schemas/FilterCategoryResponse'
        consumingOrganizations:
          $ref: '#/components/schemas/FilterCategoryResponse'
        responseCodes:
          $ref: '#/components/schemas/FilterCategoryResponse'
        maxLatencies:
          $ref: '#/components/schemas/FilterCategoryResponse'
        avgLatencies:
          $ref: '#/components/schemas/FilterCategoryResponse'
    SLAViolationRuleDTO:
      description: An SLA Violation Rule
      required:
        - rule
        - targetSuccessRate
        - type
      type: object
      properties:
        type:
          description: SLA violation rule type (either LATENCY or RESPONSE_CODE)
          type: string
          example: LATENCY
        rule:
          description: >-
            In the case of “LATENCY” then the edit forms will accept millisecond
            values with a default of “100.00”.  In the case of “RESPONSE_CODE”
            the form will accept a range of values with the default being
            “200-299” 
          type: string
          example: LATENCY
        targetSuccessRate:
          description: The target, monthly success rate
          type: number
          format: double
          example: 0.99
      example:
        - 5000
    UpdateSLADefinitionRequest:
      description: The sla definition
      required:
        - violationRules
      type: object
      properties:
        name:
          description: The name of an sla definition
          type: string
          example: Production SLA (99.9% Uptime)
        ownerId:
          description: The sla definition's owner
          type: string
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        baseAdjustment:
          description: 'The base adjustment if there is an sla violation '
          type: number
          format: double
          example: 100
        pricingRuleIds:
          description: The sla definition's pricing rules
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: The sla definition's pricing rules
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        violationRules:
          type: array
          items:
            $ref: '#/components/schemas/SLAViolationRuleDTO'
    DynamicPricingPropertyView:
      description: A dynamic pricing property
      required:
        - id
        - name
        - type
        - value
      type: object
      properties:
        id:
          description: The id of the pricing property
          type: string
          example: 3kTMd
        name:
          description: The name of the pricing property
          type: string
          example: datacenter
        value:
          description: The value of the pricing property
          type: string
          example: us-east-1
        type:
          description: The data type of the pricing property
          type: string
          example: String
    PricingRuleView:
      description: A Pricing Rule
      required:
        - defaultExecutionNote
        - id
        - name
        - organization
        - owner
        - pricingProperties
        - script
        - target
      type: object
      properties:
        id:
          description: The id of the pricing rule
          type: string
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          description: The name of the pricing rule
          type: string
          example: compute-cost-pricing-rule
        script:
          description: The rule's pricing script
          type: string
          example: lineItem.product.baseCost * 0.20
        pricingProperties:
          description: Dynamic properties associated with the pricing rule
          type: array
          items:
            $ref: '#/components/schemas/DynamicPricingPropertyView'
        defaultExecutionNote:
          description: The rule's default execution note
          type: string
          example: sample execution note
        target:
          description: >-
            The target of the result of the pricing rule evaluation (can be
            either CHARGE or CALL_COUNT)
          type: string
          example: CHARGE
    SLADefinitionView:
      description: An SLA definition
      required:
        - baseAdjustment
        - id
        - name
        - organization
        - owner
        - pricingRules
        - violationRules
      type: object
      properties:
        id:
          description: Unique identifier of an SLA definition
          type: string
          example: 3kTMd
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          description: The name of an SLA definition
          type: string
          example: Production SLA (99.9% Uptime)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        baseAdjustment:
          description: 'The base adjustment if there is an SLA violation '
          type: number
          format: double
          example: 100
        pricingRules:
          description: The SLA definition's pricing rules
          type: array
          items:
            $ref: '#/components/schemas/PricingRuleView'
        violationRules:
          description: >-
            The rules which triggers the violation (in the case of LATENCY it
            represents the max latency in milliseconds for a backend service to
            response, in the case of RESPONSE_CODE its a comma separated list of
            valid response codes)
          type: array
          example:
            - 5000
          items:
            $ref: '#/components/schemas/SLAViolationRuleDTO'
    UpdateSiteRequest:
      description: The site request
      required:
        - externalId
        - id
        - name
        - organizationId
      type: object
      properties:
        id:
          description: The id of the site
          type: string
          example: aSm1Fsv
        organizationId:
          description: The identifier of the organization associated with the site
          type: string
          example: aSjk123
        name:
          description: The name of the site
          type: string
          example: My Mobile Site
        externalId:
          description: The identifier of the site in an external system
          type: string
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
    SiteView:
      required:
        - id
        - organization
      type: object
      properties:
        id:
          description: Unique identifier of the site
          type: string
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        externalId:
          description: The external site id
          type: string
          example: 78cccd62-26bf-4868-8c7e-0329a52bbdfd
    UpdateSiteConfigurationRequest:
      description: The site provider configuration
      required:
        - configurationProperties
      type: object
      properties:
        name:
          description: The name of the site configuration
          type: string
          example: Mulesoft Sites
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        siteProvider:
          description: The site provider
          type: string
          example: MulesoftACMSiteProvider
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    SiteConfigurationView:
      required:
        - apimProvider
        - configurationProperties
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          description: Unique identifier of the site configuration
          type: string
          example: 3kTMd
        name:
          description: The name of the site configuration
          type: string
          example: MuleSoft (Staging)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        apimProvider:
          description: The site provider
          type: string
          example: MULESOFT
        configurationProperties:
          description: Configuration Properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    CreatePerformanceDefinitionRequest:
      description: >-
        A performance definition defining the expected performance
        characteristics for a product
      required:
        - description
        - maxRequests
        - name
        - timePeriod
        - timeUnit
      type: object
      properties:
        description:
          description: The description of an performance definition
          type: string
          example: Platinum Tier
        name:
          description: The name of an performance definition
          type: string
          example: Platinum Tier
        maxRequests:
          description: The maximum amount of requests allowed for the given interval
          type: integer
          format: int32
          example: 100
        timePeriod:
          description: The time period
          type: integer
          format: int32
          example: 2
        timeUnit:
          description: The time unit
          type: string
          example: MINUTES
    UpdateFeatureRequestViaProduct:
      description: A feature that can be used in a plan
      required:
        - description
        - id
        - name
      type: object
      properties:
        description:
          description: The feature description
          type: string
          example: access to documentation
        id:
          description: The id of the tier
          type: string
          example: NsYmyL
        name:
          description: The name of the feature
          type: string
          example: documentation
    UpdatePlanElementRequestViaProduct:
      description: A plan element that can be used in a plan
      required:
        - distinctValue
        - id
        - name
      type: object
      properties:
        id:
          description: The id of the plan element
          type: string
          example: sBcTTs3
        name:
          description: The name of the plan element
          type: string
          example: Country
        elementDefinitionId:
          description: The id of the element definition of the plan element
          type: string
          example: sBcTTs3
        distinctValue:
          description: The distinct value of the plan element (case insensitive)
          type: string
          example: FRANCE
        flatAmount:
          description: Flat amount of the plan element
          type: number
          example: 34.33
    UpdatePlanRequestViaProduct:
      description: A plan that can be used for a product
      required:
        - currency
        - graduated
        - id
        - name
        - planType
      type: object
      properties:
        id:
          description: The id of the plan
          type: string
          example: sBcTTs3
        name:
          description: The name of the plan
          type: string
          example: a plan
        graduated:
          description: >-
            Boolean that indicates if volume tiers are graduated or not. it
            defaults to true
          type: boolean
        planType:
          description: The plan type, e.g. charge, subscription
          type: string
          example: SUBSCRIPTION
        charge:
          description: The charge for a charge type plan
          type: number
          example: 3243243
        currency:
          description: The plan's currency
          type: string
          example: USD
        period:
          description: The plan period
          type: string
          example: MONTH
        periodCount:
          description: The period count of the plan
          type: integer
          format: int64
          example: 3
        trialPeriod:
          description: The plan trial period
          type: string
          example: MONTH
        trialPeriodCount:
          description: Trial period count of a subscription plan
          uniqueItems: true
          type: array
          example: 4
          items:
            $ref: '#/components/schemas/UpdateTierRequestViaProduct'
        prePaySetups:
          description: >-
            Boolean that indicates if setupFees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
          type: boolean
        features:
          description: Features of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateFeatureRequestViaProduct'
        elements:
          description: Elements of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UpdatePlanElementRequestViaProduct'
        setups:
          description: Setups of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateSetupFeeRequestViaProduct'
    UpdateProductRequest:
      description: The product
      required:
        - assetIds
        - audienceRestriction
        - externalId
        - isStaged
        - namedOrganizations
        - notificationAddressesOnInvoice
        - pricingRuleIds
        - productIds
        - sendDefaultNotificationOnInvoice
        - slaDefinitionIds
        - tags
        - transactionType
      type: object
      properties:
        tags:
          description: A list of tags associated with this product.
          type: array
          example:
            - tag1
            - tag2
            - tag3
          items:
            description: A list of tags associated with this product.
            type: string
            example: '["tag1","tag2","tag3"]'
        description:
          description: The description of the product
          type: string
          example: Truly an awesome product
        version:
          description: The version of the product
          type: string
          example: 1.0.0
        ownerId:
          description: The id of the user that owns the product
          type: string
          example: 3kTMd
        organizationId:
          description: The id of the organization
          type: string
          example: '2'
        name:
          description: The name of the product
          type: string
          example: my-awesome-product
        shortDescription:
          type: string
          example: truly an awesome product
        link:
          description: A link to the product
          type: string
          example: https://portal.acmesoft/com/my-awesome-product
        baseCost:
          description: The base cost to access the product
          type: number
          example: 100
        settlementPeriod:
          description: >-
            The settlement period that determines when product charges are
            calculated for an invoice
          type: string
          example: MONTHLY
        account:
          description: The account id
          type: string
          example: 23bf56cb-2df6-490e-a039-5755866e0c1c
        transactionType:
          description: The transaction type of the product
          type: string
          example: SUBSCRIPTION
        paymentConfigurationId:
          description: The id of the payment configuration
          type: string
          example: cVks1f
        pricingRuleIds:
          description: The product's pricing rules
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: The product's pricing rules
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        assetIds:
          description: A list of asset ids that compose the product
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of asset ids that compose the product
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        productIds:
          description: A list of product ids that compose the product
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of product ids that compose the product
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        slaDefinitionIds:
          description: 'A list of sla definition ids to add to this product. '
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: 'A list of sla definition ids to add to this product. '
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        cpqStaged:
          description: Is the product staged from a CPQ system?
          type: boolean
          example: true
        defaultQuota:
          description: >-
            The default transaction quota for product keys associated with this
            product
          type: integer
          format: int64
        defaultQuotaNotificationThreshold:
          description: >-
            The default percentage of quota consumption to exceed before sending
            a notification
          type: number
          format: double
        sendDefaultNotificationOnInvoice:
          description: >-
            Whether or not to send invoice notifications to the recipient of the
            invoice
          type: boolean
        notificationAddressesOnInvoice:
          description: 'Additional email addresses to end invoice notifications to '
          type: array
          items:
            description: 'Additional email addresses to end invoice notifications to '
            type: string
        overageRatePerTransaction:
          description: >-
            The subscription overage rate per transaction for products defined
            with  'SUBSCRIPTION_WITH_OVERAGE'
          type: number
        subscriptionIncludedTransactions:
          description: >-
            The included transaction count for products defined with 
            'SUBSCRIPTION_WITH_OVERAGE'
          type: integer
          format: int64
        isStaged:
          description: Whether or not the product should be staged or immediately live
          type: boolean
        code:
          description: The product's code (to correlate in an external ERP system)
          type: string
          example: '1234'
        terms:
          description: The terms and conditions
          type: string
        termsDisplayName:
          description: The terms and conditions display name
          type: string
        additionalTerms1:
          description: Additional terms and conditions
          type: string
        additionalTermsDisplayName1:
          description: Additional terms and conditions display name
          type: string
        additionalTerms2:
          description: Additional terms and conditions
          type: string
        additionalTermsDisplayName2:
          description: Additional terms and conditions display name
          type: string
        externalId:
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the Asset
          type: string
          example: 12345abcd
        displayPriority:
          description: The display priority the product
          type: number
          format: double
          example: 1
        notifyClientOnInvoice:
          description: Notify client on invoice
          type: boolean
        notifyClientTrialAboutToExpire:
          description: Notify client that trial is about to expire
          type: boolean
        audienceRestriction:
          description: The audience restriction, if any, on a product
          type: string
          example: USER
        externalLabel:
          description: >-
            An external label for the product that is exposed in developer
            portals
          type: string
          example: 12345abcd
        environmentId:
          description: The environment for the product
          type: string
          example: Production
        apimConfigurationId:
          description: >-
            The id of the APIM Configuration (if synchronizing this product with
            an external APIM)
          type: string
          example: 3kTMd
        namedOrganizations:
          description: The organizations allowed to access the product
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: The organizations allowed to access the product
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        plan:
          $ref: '#/components/schemas/UpdatePlanRequestViaProduct'
        performanceDefinition:
          $ref: '#/components/schemas/CreatePerformanceDefinitionRequest'
        subscriptionAllowMidPeriodCancellation:
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
          type: boolean
        productLockedToV1:
          description: Product v1 lock
          type: boolean
        logo:
          description: The product's logo
          type: string
        staged:
          type: boolean
          writeOnly: true
    UpdateSetupFeeRequestViaProduct:
      description: Setups of a plan
      required:
        - id
        - name
        - type
      type: object
      properties:
        id:
          description: The id of the setup fee
          type: string
          example: sBcTTs3
        name:
          description: The name of the setup fee
          type: string
          example: Country
        type:
          description: The type of the setup fee
          type: string
          example: CUSTOMER
        flatAmount:
          description: Flat amount of the setup fee
          type: number
          example: 34.33
    UpdateTierRequestViaProduct:
      description: A tier that can be used in a plan
      type: object
      properties:
        id:
          description: The id of the tier
          type: string
          example: NsYmyL
        name:
          description: The name of the feature
          type: string
          example: documentation
        upTo:
          description: Upper unit limit for tier
          type: integer
          example: 1343234
        unitAmount:
          description: Unit amount of the tier
          type: number
          example: 1343234
      example: 4
    ApplicationView:
      description: An application
      required:
        - created
        - externalId
        - id
        - name
        - organization
        - productKeyIds
        - tags
        - user
      type: object
      properties:
        tags:
          description: Tags associated with the asset
          type: array
          items:
            $ref: '#/components/schemas/TagView'
        id:
          description: Unique id of the application
          type: string
          example: 3kTMd
        name:
          description: The name of the application
          type: string
          example: My Mobile Application
        organization:
          $ref: '#/components/schemas/OrganizationView'
        consumerOrganizationId:
          $ref: '#/components/schemas/OrganizationView'
        user:
          $ref: '#/components/schemas/UserView'
        externalId:
          description: The identifier of the application in an external system
          type: string
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
        productKeyIds:
          description: The product keys this application is associated with
          type: array
          items:
            $ref: '#/components/schemas/ProductKeyViewWithoutApplications'
        created:
          description: The timestamp when the product key was created
          type: integer
          format: int64
          example: 1654646301000
    AssetClassificationPattern:
      description: >-
        Classification patterns provide strategies to identify assets from
        metered events
      type: object
      properties:
        beginsWith:
          type: string
        endsWith:
          type: string
        contains:
          type: string
        regex:
          type: string
        equalsTo:
          type: string
    AssetPropertyView:
      description: An asset property
      required:
        - id
        - name
        - value
      type: object
      properties:
        id:
          description: Id ID of the property
          type: string
          example: 3kTMd
        name:
          description: The name of the property
          type: string
          example: url
        value:
          description: The value of the property
          type: string
          example: https://api.foo.com/v1
    AssetView:
      description: An asset being metered
      required:
        - accountId
        - assetType
        - classificationPatterns
        - elementDefinitions
        - id
        - name
        - organization
        - owner
        - products
        - properties
        - syncedToGateway
        - tags
        - version
      type: object
      properties:
        tags:
          description: Tags associated with the asset
          type: array
          items:
            $ref: '#/components/schemas/TagView'
        description:
          description: The description of the asset (HTML formatted)
          type: string
          example: <b>Truly an awesome product</b>
        version:
          description: The asset's version
          type: string
          example: 1.0.0
        id:
          description: The id of the asset
          type: string
          example: sVc8ak
        assetType:
          description: The type of the asset
          type: string
          example: API
        accountId:
          description: The account id of the asset
          type: string
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          description: The name of the asset
          type: string
          example: my-awesome-asset
        organization:
          $ref: '#/components/schemas/OrganizationView'
        products:
          description: A list of productIds
          type: array
          items:
            $ref: '#/components/schemas/ProductView'
        properties:
          description: Dynamic properties associated with the asset
          type: array
          items:
            $ref: '#/components/schemas/AssetPropertyView'
        externalId:
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the asset
          type: string
          example: 12345abcd
        code:
          description: The asset code
          type: string
          example: '1234'
        environmentId:
          description: The environment's identifier
          type: string
          example: sFak12
        environment:
          description: The environment
          type: string
          example: Production
        syncedToGateway:
          description: Whether or not the asset is synchronized with an API Gateway
          type: boolean
        resource:
          description: The asset's unique resource / URI
          type: string
          example: /api/products
        method:
          description: The asset's method
          type: string
          example: GET
        applicationAutoDiscoveryEnabled:
          description: Whether application auto discovery is enabled or not
          type: boolean
        classificationPatterns:
          description: The Asset classification patterns
          type: array
          items:
            $ref: '#/components/schemas/AssetClassificationPattern'
        elementDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/ElementDefinitionView'
        logoURL:
          description: S3 Path for the Assets' logo
          type: string
        devPortalLink:
          description: The devPortalLink of the asset
          type: string
    AssetViewWithoutProducts:
      description: An Asset/Service being metered by the platform
      required:
        - accountId
        - assetType
        - classificationPatterns
        - id
        - name
        - organization
        - owner
        - properties
        - syncedToGateway
        - tags
        - version
      type: object
      properties:
        tags:
          description: Tags associated with the asset
          type: array
          items:
            $ref: '#/components/schemas/TagView'
        description:
          description: The description of the asset (HTML formatted)
          type: string
          example: <b>Truly an awesome product</b>
        version:
          description: The asset's version
          type: string
          example: 1.0.0
        id:
          description: The ID of the asset
          type: string
          example: sVc8ak
        assetType:
          description: The type of the asset
          type: string
          example: API
        accountId:
          description: The account id of the asset
          type: string
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          description: The name of the asset
          type: string
          example: my-awesome-asset
        organization:
          $ref: '#/components/schemas/OrganizationView'
        properties:
          description: Dynamic properties associated with the asset
          type: array
          items:
            $ref: '#/components/schemas/AssetPropertyView'
        externalId:
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the asset
          type: string
          example: 12345abcd
        code:
          description: The asset code
          type: string
          example: '1234'
        environment:
          description: The environment
          type: string
          example: Production
        syncedToGateway:
          description: Whether or not the asset is synchronized with an API Gateway
          type: boolean
        resource:
          description: The asset's resource
          type: string
          example: https://api.foo.com/api
        method:
          description: The asset's method
          type: string
          example: GET
        applicationAutoDiscoveryEnabled:
          description: Whether auto discovery is enabled or not
          type: boolean
        classificationPatterns:
          description: The Asset classification patterns
          type: array
          items:
            $ref: '#/components/schemas/AssetClassificationPattern'
    ChargeCalculationLogView:
      description: A charge calculation log
      required:
        - baseCharge
        - charge
        - currency
        - executionLogs
        - id
        - product
        - productKey
      type: object
      properties:
        id:
          description: The id
          type: string
        executionLogs:
          type: array
          items:
            $ref: '#/components/schemas/PricingExecutionLogView'
        baseCharge:
          type: number
        charge:
          description: The total computed charge
          type: number
        product:
          $ref: '#/components/schemas/ProductView'
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        asset:
          $ref: '#/components/schemas/AssetView'
        currency:
          description: The currency
          type: string
    ConsumerDataProviderConfigurationView:
      description: A consumerDataProviderConfiguration associated with the license
      required:
        - configurationProperties
        - consumerDataProviderProvider
        - createSQL
        - id
        - name
        - organization
        - owner
        - querySQL
      type: object
      properties:
        id:
          description: Unique identifier of the consumer data provider configuration
          type: string
          example: 3kTMd
        name:
          description: The name of the consumer data provider Configuration
          type: string
          example: MuleSoft (Staging)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        consumerDataProviderProvider:
          description: The consumer data provider
          type: string
          example: MULESOFT
        configurationProperties:
          description: Configuration Properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
        createSQL:
          description: The billing table schema creation SQL
          type: string
        querySQL:
          description: The billing table schema query SQL
          type: string
    ElementAggregationView:
      description: Aggregation data for an element over a subscription period
      required:
        - count
        - id
      type: object
      properties:
        id:
          description: The id of the element aggregation
          type: string
          example: 3kTMd
        definition:
          $ref: '#/components/schemas/ElementDefinitionView'
        distinctValue:
          description: Distinct value of element aggregation
          type: string
        count:
          description: Count of element aggregation
          type: integer
          example: 3
    ElementDefinitionView:
      description: An ElementDefinition/Service being metered by the platform
      required:
        - description
        - id
        - isActive
        - name
        - type
        - uuid
      type: object
      properties:
        description:
          description: The description of the element definition
          type: string
          example: This is a test element definition
        id:
          description: The id of the element definition
          type: string
          example: sVc8ak
        name:
          description: The name of the element definition
          type: string
          example: definition one
        type:
          description: The type of the element definition
          type: string
          example: NUMBER or STRING
          enum:
            - STRING
            - NUMBER
        uuid:
          description: The uuid of the element definition
          type: string
          example: 29d16094-4043-447b-9781-4d64a2977e79
        isActive:
          type: boolean
          example: true
        active:
          type: boolean
          writeOnly: true
    EnvironmentView:
      description: An environment
      required:
        - apimConfigurationId
        - apimConfigurationName
        - apimConfigurationProvider
        - externalId
        - id
        - name
      type: object
      properties:
        id:
          description: The environment's id
          type: string
          example: 3kTMd
        name:
          description: The environment's name
          type: string
          example: Production
        externalId:
          description: >-
            The environment's external identifier (ie, in an external API
            management platform)
          type: string
          example: 0e99ac0b-d62d-4e88-adfc-54c8f267d3d8
        apimConfigurationId:
          type: string
        apimConfigurationName:
          type: string
        apimConfigurationProvider:
          type: string
      example: Production
    FeatureView:
      description: List of plan features
      required:
        - description
        - id
        - name
      type: object
      properties:
        description:
          description: Feature Description
          type: string
          example: Access to Documentation
        id:
          description: Unique identifier for the Tier
          type: string
          example: 3kTMd
        name:
          description: Feature Name
          type: string
          example: Documentation
    PaymentConfigurationView:
      description: Payment Configuration
      required:
        - configurationProperties
        - id
        - name
        - organization
        - owner
        - paymentProvider
        - tax
      type: object
      properties:
        id:
          description: Unique id of the payment configuration
          type: string
          example: 3kTMd
        name:
          description: The name of the payment configuration
          type: string
          example: Stripe (Production)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        paymentProvider:
          description: The payment provider
          type: string
          example: STRIPE
        tax:
          description: Payment tax setting
          type: string
          example: EXCLUSIVE
          enum:
            - INCLUSIVE
            - EXCLUSIVE
            - NONE
        testModeEnabled:
          description: Is test mode enabled?
          type: boolean
        configurationProperties:
          description: Configuration Properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    PerformanceDefinitionView:
      description: A performance definition for a product
      required:
        - description
        - id
        - maxRequests
        - name
        - timePeriod
        - timeUnit
      type: object
      properties:
        description:
          description: The description of the performance definition
          type: string
          example: Platinum Tier
        id:
          description: Unique id of the performance definition
          type: string
          example: 3kTMd
        name:
          description: The name of the performance definition
          type: string
          example: Platinum Tier
        maxRequests:
          description: 'The maximum amount of requests allowed for the given interval '
          type: integer
          format: int32
          example: 100
        timePeriod:
          description: The time period
          type: integer
          format: int32
          example: 2
        timeUnit:
          description: The time unit
          type: string
          example: MINUTES
    PlanElementForProductView:
      description: List of setup fees
      required:
        - id
        - name
        - type
      type: object
      properties:
        id:
          description: The id of the plan
          type: string
          example: sVc8ak
        name:
          description: The name of the setup fee
          type: string
          example: Country
        type:
          description: The type of the setup fee
          type: string
          example: CUSTOMER
        flatAmount:
          description: Flat amount of the setup fee
          type: number
          example: 34.33
    PlanForProductView:
      description: The plan of the Product
      required:
        - currency
        - elements
        - features
        - graduated
        - id
        - name
        - planType
        - setups
        - template
        - tiers
      type: object
      properties:
        id:
          description: The id of the plan
          type: string
          example: sVc8ak
        name:
          description: Name of the plan
          type: string
          example: enterprise plan
        planType:
          description: The plan type
          type: string
          example: SUBSCRIPTION
        charge:
          description: One time payment charge
          type: number
          example: 23344.77
        currency:
          description: The currency of the plan
          type: string
          example: USD
        period:
          description: The subscription plan period
          type: string
          example: MONTH
        periodCount:
          description: Period count of a subscription plan
          type: integer
          format: int64
          example: 4
        trialPeriod:
          description: The subscription plan trial period
          type: string
          example: MONTH
        trialPeriodCount:
          description: Trial Period count of a subscription plan
          type: integer
          format: int64
          example: 4
        graduated:
          description: >-
            Boolean that indicates if volume tiers are graduated or not. It
            defaults to true
          type: boolean
        template:
          description: >-
            Boolean that indicates if a plan is a template. A template plan
            cannot be attached to a product.
          type: boolean
        prePaySetups:
          description: >-
            Boolean that indicates if setupFees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
          type: boolean
        tiers:
          description: List of Plan tiers
          uniqueItems: true
          type: array
          example: 4
          items:
            $ref: '#/components/schemas/TierForProductView'
        elements:
          description: List of plan elements
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PlanElementForProductView'
        features:
          description: List of plan features
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FeatureView'
        setups:
          description: List of setup fees
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PlanElementForProductView'
      example: 3kTMd
    PlanQuotaForProductKeyView:
      description: A list of Plan Quotas for this Product Key
      required:
        - id
        - planTierId
        - planTierName
      type: object
      properties:
        id:
          description: The ID of the Plan
          type: string
          example: sVc8ak
        planTierId:
          description: The ID of the Plan Quota Tier
          type: string
          example: sVc8ak
        planTierName:
          description: The name of the Plan Quota Tier
          type: string
          example: sVc8ak
        tierQuotaConsumed:
          description: Amount of tier Quota consumed
          type: integer
          format: int64
          example: 4
        lowerTierQuotaLimit:
          description: Lower Tier Quota Limit
          type: integer
          format: int64
          example: 4
        tierQuota:
          description: Tier Quota
          type: integer
          format: int64
          example: 4
        wentOverTierQuota:
          description: True if tier quota has been exceeded
          type: boolean
          example: false
    PricingExecutionLogView:
      description: A pricing rule execution log entry
      required:
        - id
        - note
        - organization
        - product
        - productKey
        - result
        - rule
        - timestamp
        - unmodifiedCharge
      type: object
      properties:
        id:
          description: The id of the pricing rule
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationView'
        rule:
          $ref: '#/components/schemas/PricingRuleView'
        product:
          $ref: '#/components/schemas/ProductView'
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        result:
          description: The result of the execution
          type: number
          format: double
          example: 100
        errorMessage:
          description: The error message of the execution
          type: string
        note:
          description: Any notes on the execution
          type: string
          example: 20% Discount Applied
        unmodifiedCharge:
          description: >-
            The amount charged in the metered period before any Pricing Rules
            have been applied
          type: number
          format: double
          example: 200
        callCount:
          description: >-
            The amount of API calls being charged for before any Pricing Rules
            have been applied
          type: integer
          format: int64
          example: 100
        timestamp:
          description: The time the PricingRule was execution
          type: integer
          format: int64
          example: 1651779724000
    ProductKeyView:
      description: A Product Key to accessing an Product's Asset(s)
      required:
        - applications
        - created
        - deletionPending
        - disableProductKeyOnPaymentFailed
        - id
        - key
        - namedConsumers
        - namedOrganizations
        - notificationAddressesOnCreation
        - notificationAddressesOnQuotaThreshold
        - organization
        - owner
        - planQuotas
        - pricingRules
        - quota
        - quotaConsumed
        - quotaNotificationThreshold
        - sendDefaultNotificationOnCreation
        - sendDefaultNotificationOnQuotaThreshold
      type: object
      properties:
        description:
          description: A description
          type: string
          example: 'product key #1234'
        id:
          description: Unique identifier of the Product Key
          type: string
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        valid:
          description: Is the key valid?
          type: boolean
          example: true
        owner:
          $ref: '#/components/schemas/UserView'
        key:
          description: The key
          type: string
          example: 5c99c760-4d11-4463-a211-937594d913d0
        pricingRules:
          description: A list of Pricing Rule IDs associated with this product key
          type: array
          items:
            $ref: '#/components/schemas/PricingRuleView'
        expiration:
          description: The ProductKey's expiration timestamp (milliseconds)
          type: integer
          format: int64
          example: 1620579969000
        client:
          $ref: '#/components/schemas/UserView'
        externalQuoteId:
          description: >-
            The quote the ProductKey may be associated with in an external CPQ
            system
          type: string
        quota:
          description: The optional transaction quota associated with the product key
          type: integer
          format: int64
        quotaConsumed:
          description: The consumed quota associated with the product key
          type: integer
          format: int64
        quotaNotificationThreshold:
          description: >-
            The percentage of quota consumption to exceed before sending a
            notification
          type: number
          format: double
        applications:
          description: A list of Application associated with this product key
          type: array
          items:
            $ref: '#/components/schemas/ApplicationView'
        sendDefaultNotificationOnCreation:
          description: >-
            Whether or not to send Notifications to the ProductKey creator on
            creation
          type: boolean
        notificationAddressesOnCreation:
          description: Additional email addresses for ProductKey creation notification
          type: array
          items:
            description: Additional email addresses for ProductKey creation notification
            type: string
        sendDefaultNotificationOnQuotaThreshold:
          description: Whether or not to send quota Notifications to the ProductKey's owner
          type: boolean
        notificationAddressesOnQuotaThreshold:
          description: Additional email addresses for ProductKey quota notifications
          type: array
          items:
            description: Additional email addresses for ProductKey quota notifications
            type: string
        subscriptionQuotaCount:
          description: 'The subscriptionQuotaCount '
          type: integer
          format: int64
        subscriptionStartDate:
          description: The subscription start date
          type: integer
          format: int64
        disableProductKeyOnPaymentFailed:
          description: Whether or not to disable the ProductKey on payment failed
          type: boolean
        deletionPending:
          description: >-
            ProductKey will be deleted soon, e.g. at the end of the current
            subscription period
          type: boolean
        created:
          description: The timestamp when the ProductKey was created
          type: integer
          format: int64
          example: 1654646301000
        subscriptionPeriodStartDate:
          description: Start date of current subscription period
          type: integer
          format: int64
        subscriptionPeriodEndDate:
          description: End date of current subscription period
          type: integer
          format: int64
        subscriptionTrialEndDate:
          description: End date of subscription trial period
          type: integer
          format: int64
        subscriptionIncludedTransactions:
          description: 'The subscriptionIncludedTransactions '
          type: integer
          format: int64
        namedConsumers:
          description: List of user email addresses who are allowed to access the Product
          type: array
          items:
            description: List of user email addresses who are allowed to access the Product
            type: string
        namedOrganizations:
          description: The Product's Named Organizations
          type: array
          items:
            $ref: '#/components/schemas/OrganizationView'
        notifyClientTrialAboutToExpire:
          description: Whether or not to notify client when trial is about to expiry
          type: boolean
        subscriptionAllowMidPeriodCancellation:
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
          type: boolean
        consumerDataProviderConfiguration:
          $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
        currentSubscriptionPeriod:
          $ref: '#/components/schemas/SubscriptionPeriodView'
        planQuotas:
          description: A list of Plan Quotas for this Product Key
          type: array
          items:
            $ref: '#/components/schemas/PlanQuotaForProductKeyView'
    ProductKeyViewWithoutApplications:
      description: A product key to accessing an Product's Asset(s)
      required:
        - deletionPending
        - disableProductKeyOnPaymentFailed
        - id
        - key
        - namedConsumers
        - namedOrganizations
        - notificationAddressesOnCreation
        - notificationAddressesOnQuotaThreshold
        - organization
        - owner
        - planQuotas
        - pricingRules
        - products
        - quota
        - quotaConsumed
        - quotaNotificationThreshold
        - sendDefaultNotificationOnCreation
        - sendDefaultNotificationOnQuotaThreshold
      type: object
      properties:
        description:
          description: A description
          type: string
          example: 'product key #1234'
        id:
          description: Unique identifier of the product key
          type: string
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        products:
          description: The id of the Product the ProductKey belongs to
          type: array
          items:
            $ref: '#/components/schemas/ProductView'
        valid:
          description: Is the key valid?
          type: boolean
          example: true
        owner:
          $ref: '#/components/schemas/UserView'
        key:
          description: The key
          type: string
          example: 5c99c760-4d11-4463-a211-937594d913d0
        pricingRules:
          description: A list of Pricing Rule IDs associated with this product key
          type: array
          items:
            $ref: '#/components/schemas/PricingRuleView'
        expiration:
          description: The ProductKey's expiration timestamp (milliseconds)
          type: integer
          format: int64
          example: 1620579969000
        client:
          $ref: '#/components/schemas/UserView'
        externalQuoteId:
          description: >-
            The quote the ProductKey may be associated with in an external CPQ
            system
          type: string
        quota:
          description: The optional transaction quota associated with the product key
          type: integer
          format: int64
        quotaConsumed:
          description: The consumed quota associated with the product key
          type: integer
          format: int64
        quotaNotificationThreshold:
          description: >-
            The percentage of quota consumption to exceed before sending a
            notification
          type: number
          format: double
        sendDefaultNotificationOnCreation:
          description: >-
            Whether or not to send Notifications to the ProductKey creator on
            creation
          type: boolean
        notificationAddressesOnCreation:
          description: Additional email addresses for ProductKey creation notification
          type: array
          items:
            description: Additional email addresses for ProductKey creation notification
            type: string
        sendDefaultNotificationOnQuotaThreshold:
          description: Whether or not to send quota Notifications to the ProductKey's owner
          type: boolean
        notificationAddressesOnQuotaThreshold:
          description: Additional email addresses for ProductKey quota notifications
          type: array
          items:
            description: Additional email addresses for ProductKey quota notifications
            type: string
        subscriptionQuotaCount:
          description: 'The subscriptionQuotaCount '
          type: integer
          format: int64
        subscriptionStartDate:
          description: The subscription start date
          type: integer
          format: int64
        disableProductKeyOnPaymentFailed:
          description: Whether or not to disable the ProductKey on payment failed
          type: boolean
        deletionPending:
          description: >-
            ProductKey will be deleted soon, e.g. at the end of the current
            subscription period
          type: boolean
        subscriptionPeriodStartDate:
          description: Start date of current subscription period
          type: integer
          format: int64
        subscriptionPeriodEndDate:
          description: End date of current subscription period
          type: integer
          format: int64
        namedConsumers:
          description: List of user email addresses who are allowed to access the Product
          type: array
          items:
            description: List of user email addresses who are allowed to access the Product
            type: string
        namedOrganizations:
          description: The Product's Named Organizations
          type: array
          items:
            $ref: '#/components/schemas/OrganizationView'
        subscriptionAllowMidPeriodCancellation:
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
          type: boolean
        notifyClientTrialAboutToExpire:
          description: Whether or not to notify client when trial is about to expiry
          type: boolean
        subscriptionTrialEndDate:
          description: End date of subscription trial
          type: integer
          format: int64
        currentSubscriptionPeriod:
          $ref: '#/components/schemas/SubscriptionPeriodView'
        planQuotas:
          description: A list of Plan Quotas for this Product Key
          type: array
          items:
            $ref: '#/components/schemas/PlanQuotaForProductKeyView'
    ProductMetricsView:
      description: Product Metrics
      required:
        - callCount
      type: object
      properties:
        callCount:
          description: The total count of calls for the API over the requested date range
          type: integer
          format: int64
          example: 4000
        spend:
          description: The total spend for the API over the requested date range
          type: number
          format: double
          example: 1234.56
        consumerCount:
          description: The total count of consumers for the product
          type: integer
          format: int64
          example: 4000
        id:
          description: The Product's name
          type: string
          example: API Product
    ProductSLAView:
      description: An SLA associated with a product
      required:
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          description: The id of the SLA enforced product
          type: string
          example: sVc8ak
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          description: The name of the SLA
          type: string
          example: platinum
        organization:
          $ref: '#/components/schemas/OrganizationView'
    ProductView:
      description: A Product
      required:
        - account
        - assets
        - audienceRestriction
        - baseCost
        - isStaged
        - name
        - notificationAddressesOnInvoice
        - organization
        - owner
        - pricingRules
        - products
        - sendDefaultNotificationOnInvoice
        - settlementPeriod
        - syncedToGateway
        - tags
        - transactionType
        - version
      type: object
      properties:
        tags:
          description: 'A list of tags associated with this product. '
          type: array
          example:
            - tag1
            - tag2
            - tag3
          items:
            $ref: '#/components/schemas/TagView'
        description:
          description: The description of the product (HTML formatted)
          type: string
          example: <b>Truly an awesome product</b>
        version:
          description: The version of the product
          type: string
          example: 1.0.0
        id:
          description: Unique identifier of the product
          type: string
          example: 3kTMd
        name:
          description: The name of the product
          type: string
          example: my-awesome-product
        shortDescription:
          type: string
          example: Truly an awesome product
        link:
          description: A link to the product
          type: string
          example: https://portal.acmesoft/com/my-awesome-product
        baseCost:
          description: The base transaction cost to access the product
          type: number
          example: 100
        settlementPeriod:
          description: >-
            The settlement period that determines when product charges are
            calculated for an invoice
          type: string
          example: MONTHLY
        account:
          description: The account ID
          type: string
          example: 23bf56cb-2df6-490e-a039-5755866e0c1c
        transactionType:
          description: The transaction type of the product
          type: string
          example: SUBSCRIPTION
        pricingRules:
          description: The product's pricing rules
          type: array
          items:
            $ref: '#/components/schemas/PricingRuleView'
        assets:
          description: A list of assets that compose the product
          type: array
          items:
            $ref: '#/components/schemas/AssetViewWithoutProducts'
        products:
          description: A list of products that compose the product
          type: array
          items:
            $ref: '#/components/schemas/ProductView'
        cpqStaged:
          description: Is the product staged from a CPQ system?
          type: boolean
          example: true
        slas:
          description: A list of SLAs associated with the product
          type: array
          items:
            $ref: '#/components/schemas/SLAView'
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        paymentConfiguration:
          $ref: '#/components/schemas/PaymentConfigurationView'
        slaViolations:
          description: A list of SLA violations
          type: array
          items:
            $ref: '#/components/schemas/SLAViolationView'
        productMetrics:
          $ref: '#/components/schemas/ProductMetricsView'
        defaultQuota:
          description: >-
            The default transaction quota for product keys associated with this
            product
          type: integer
          format: int64
        defaultQuotaNotificationThreshold:
          description: >-
            The default percentage of quota consumption to exceed before sending
            a notification
          type: number
          format: double
        sendDefaultNotificationOnInvoice:
          description: >-
            Whether or not to send Invoice notifications to the recipient of the
            Invoice
          type: boolean
        notificationAddressesOnInvoice:
          description: 'Additional email addresses to end Invoice notifications to '
          type: array
          items:
            description: 'Additional email addresses to end Invoice notifications to '
            type: string
        overageRatePerTransaction:
          description: >-
            The subscription overage rate per transaction for Products defined
            with  'SUBSCRIPTION_WITH_OVERAGE'
          type: number
        subscriptionIncludedTransactions:
          description: >-
            The included transaction count for Products defined with 
            'SUBSCRIPTION_WITH_OVERAGE'
          type: integer
          format: int64
        externalPaymentPriceId:
          description: Payment provider price ID
          type: string
        isStaged:
          description: Whether or not the Product should be staged or immediately live
          type: boolean
        code:
          description: The product code
          type: string
          example: '1234'
        terms:
          description: The terms and conditions
          type: string
        termsDisplayName:
          description: The terms and conditions display name
          type: string
        additionalTerms1:
          description: Additional terms and conditions
          type: string
        additionalTermsDisplayName1:
          description: Additional terms and conditions displayed name
          type: string
        additionalTerms2:
          description: Additional terms and conditions
          type: string
        additionalTermsDisplayName2:
          description: Additional terms and conditions displayed name
          type: string
        productKeyCreationNotificationTemplate:
          type: string
        productKeyUpgradeNotificationTemplate:
          type: string
        productKeyQuotaNotificationTemplate:
          type: string
        disableProductKeyOnPaymentFailed:
          type: boolean
        externalId:
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the product
          type: string
          example: 12345abcd
        displayPriority:
          description: The display priority the product
          type: number
          format: double
          example: 1
        notifyClientOnInvoice:
          description: Notify client on invoice
          type: boolean
        notifyClientTrialAboutToExpire:
          description: Notify client that trial is about to expire
          type: boolean
        audienceRestriction:
          description: The audience restriction, if any, on a product
          type: string
          example: USER
        syncedToGateway:
          description: Whether or not the product is synchronized with an API Gateway
          type: boolean
        environment:
          $ref: '#/components/schemas/EnvironmentView'
        externalGroupId:
          description: >-
            An external API group identifier (ie, in a API management system)
            that is associated with the Product
          type: string
          example: 12345abcd
        externalLabel:
          description: >-
            An external label for the Product that is exposed in developer
            portals
          type: string
          example: 12345abcd
        environmentId:
          description: The environment for the product
          type: string
          example: Production
        apimConfigurationId:
          description: >-
            The ID of the APIM Configuration (if synchronizing this product with
            an external APIM)
          type: string
          example: 3kTMd
        plan:
          $ref: '#/components/schemas/PlanForProductView'
        performanceDefinition:
          $ref: '#/components/schemas/PerformanceDefinitionView'
        subscriptionAllowMidPeriodCancellation:
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
          type: boolean
        productLockedToV1:
          description: Product V1 Lock
          type: boolean
        logoURL:
          type: string
        staged:
          type: boolean
          writeOnly: true
    SLAView:
      description: A Service Level Agreement
      required:
        - id
        - product
        - slaDefinition
      type: object
      properties:
        id:
          description: Unique id of the SLA
          type: string
          example: 3kTMd
        product:
          $ref: '#/components/schemas/ProductSLAView'
        slaDefinition:
          $ref: '#/components/schemas/SLADefinitionView'
    SLAViolationView:
      description: A service level Aareement violation
      required:
        - asset
        - consumer
        - currency
        - id
        - product
        - refundAmount
        - reviewer
        - sla
        - slaDefinitionName
        - timestamp
      type: object
      properties:
        description:
          description: A description of the violation
          type: string
          example: 500 response code from upstream service
        id:
          description: Unique identifier of the SLA Vvolation
          type: string
          example: 3kTMd
        consumer:
          $ref: '#/components/schemas/UserView'
        sla:
          $ref: '#/components/schemas/SLAView'
        slaDefinitionName:
          description: The name of the SLA definition the violation is associated with
          type: string
          example: Central IT SLA (99.9% Uptime)
        asset:
          $ref: '#/components/schemas/AssetView'
        product:
          $ref: '#/components/schemas/ProductSLAView'
        isReviewed:
          description: Has the violation been reviewed?
          type: boolean
          example: false
        timestamp:
          description: The violation time
          type: integer
          format: int64
          example: 1585104831000
        refundAmount:
          description: The refund amount
          type: number
          format: double
          example: 100
        chargeCalculationLog:
          $ref: '#/components/schemas/ChargeCalculationLogView'
        reviewer:
          $ref: '#/components/schemas/UserView'
        currency:
          description: The currency
          type: string
        reviewed:
          type: boolean
          writeOnly: true
    SubscriptionPeriodView:
      description: The subscription period for a product key
      required:
        - elementAggregations
        - id
        - periodOpen
      type: object
      properties:
        id:
          description: The ID of the subscription period
          type: string
          example: 3kTMd
        subscriptionPeriodStartDate:
          description: Start date of current subscription period
          type: integer
          format: int64
        subscriptionPeriodEndDate:
          description: End date of current subscription period
          type: integer
          format: int64
        periodOpen:
          type: boolean
          example: true
        elementAggregations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ElementAggregationView'
    TagView:
      description: A tag
      required:
        - id
        - name
        - organization
      type: object
      properties:
        id:
          description: The tag's id
          type: string
          example: 3kTMd
        name:
          description: The tag's name
          type: string
          example: mytag1
        organization:
          $ref: '#/components/schemas/OrganizationView'
      example:
        - tag1
        - tag2
        - tag3
    TierForProductView:
      description: List of Plan tiers
      required:
        - id
        - name
      type: object
      properties:
        id:
          description: Unique id for the tier
          type: string
          example: 3kTMd
        name:
          description: The name of the tier
          type: string
          example: Free Tier
        upTo:
          description: Upper unit limit for tier
          type: integer
          example: 1343234
        unitAmount:
          description: Unit amount of the tier
          type: number
          example: 1343234
        startingFrom:
          description: Lower range of the tier
          type: integer
          example: 1343234
      example: 4
    UpdateProductFamilyRequest:
      description: The product family
      required:
        - name
        - organizationId
        - ownerId
        - productFamilyTiers
      type: object
      properties:
        organizationId:
          description: The id of the organization that owns the product family
          type: string
          example: sBcTTs3
        ownerId:
          description: The id of the owner of the product family
          type: string
          example: sBcTTs3
        name:
          description: The name of the product family
          type: string
          example: a Product Family
        allowProductFamilyDowngrade:
          description: Boolean to allow product family downgrade
          type: boolean
          example: true
        allowProductFamilyUpgrade:
          description: Boolean to allow product family upgrade
          type: boolean
          example: true
        productFamilyTiers:
          type: array
          items:
            $ref: '#/components/schemas/UpdateProductFamilyTierRequest'
    UpdateProductFamilyTierRequest:
      description: A product family tier that can be used for a product
      required:
        - name
        - productId
        - tier
      type: object
      properties:
        id:
          description: The id of the product family tier
          type: string
          example: sBcTTs3
        organizationId:
          description: The id of the organization that owns the product family tier
          type: string
          example: sBcTTs3
        ownerId:
          description: The id of the owner of the product family tier
          type: string
          example: sBcTTs3
        name:
          description: The name of the product family tier
          type: string
          example: a Product Family Tier
        tier:
          description: >-
            Number (decimal) indicating the tier of the product in a product
            family
          type: number
          format: double
          example: 1.3
        productId:
          description: Product that the tier will be assigned to
          type: string
        featuredTier:
          description: Flag to indicate if tier is featured
          type: boolean
          example: true
    ProductFamilyTierView:
      required:
        - The owner of the product family tier
        - The product of the product family tier
        - featuredTier
        - id
        - name
        - organization
        - tierNumber
      type: object
      properties:
        id:
          description: The id of the product family tier
          type: string
          example: sVc8ak
        organization:
          $ref: '#/components/schemas/OrganizationView'
        The owner of the product family tier:
          $ref: '#/components/schemas/UserView'
        name:
          description: Name of the product family tier
          type: string
          example: enterprise tier
        tierNumber:
          description: The product family tier
          type: number
          format: double
          example: 2.3
        The product of the product family tier:
          $ref: '#/components/schemas/ProductView'
        featuredTier:
          description: Flag to indicate if tier is featured
          type: boolean
          example: true
    ProductFamilyView:
      description: A product family that can be used to group products
      required:
        - allowProductFamilyDowngrade
        - allowProductFamilyUpgrade
        - id
        - name
        - organization
        - owner
        - productFamilyTiers
      type: object
      properties:
        id:
          description: The ID of the product family
          type: string
          example: 3kTMd
        name:
          description: The name of the product family
          type: string
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        allowProductFamilyDowngrade:
          description: Boolean to allow product family downgrade
          type: boolean
          example: true
        allowProductFamilyUpgrade:
          description: Boolean to allow product family upgrade
          type: boolean
          example: true
        productFamilyTiers:
          type: array
          items:
            $ref: '#/components/schemas/ProductFamilyTierView'
    UpdateProductKeyRequest:
      description: The Product Key
      required:
        - applications
        - namedConsumers
        - namedOrganizations
        - notificationAddressesOnCreation
        - notificationAddressesOnQuotaThreshold
        - sendDefaultNotificationOnCreation
      type: object
      properties:
        description:
          description: A description
          type: string
          example: 'Product Key #1234'
        productIds:
          description: The id of the products the product key is entitled to
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: The id of the products the product key is entitled to
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        valid:
          description: Is the key valid?
          type: boolean
          example: true
        ownerId:
          description: The product key's owner
          type: string
        slaDefinitionIds:
          description: A list of sla definition ids associated with this product key
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of sla definition ids associated with this product key
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        pricingRuleIds:
          description: A list of pricing rule ids associated with this product key
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of pricing rule ids associated with this product key
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        expiration:
          description: The product key's expiration timestamp (milliseconds)
          type: integer
          format: int64
          example: 1620579969000
        clientId:
          type: string
        externalQuoteId:
          description: >-
            The quote the product key may be associated with in an external cpq
            system
          type: string
        quota:
          description: The optional transaction quota associated with the product key
          type: integer
          format: int64
        subscriptionQuotaCount:
          description: The subscription quota associated with the product key
          type: integer
          format: int64
        quotaConsumed:
          description: The consumed quota associated with the product key
          type: integer
          format: int64
        quotaNotificationThreshold:
          description: >-
            The percentage of quota consumption to exceed before sending a
            notification
          type: number
          format: double
        applications:
          description: A list of application ids associated with this product key
          type: array
          items:
            description: A list of application ids associated with this product key
            type: string
        sendDefaultNotificationOnCreation:
          description: >-
            Whether or not to send quota notifications to the product key's
            owner
          type: boolean
        notificationAddressesOnCreation:
          description: Additional email addresses for product key creation notification
          type: array
          items:
            description: Additional email addresses for product key creation notification
            type: string
        notificationAddressesOnQuotaThreshold:
          description: Additional email addresses for product key quota notifications
          type: array
          items:
            description: Additional email addresses for product key quota notifications
            type: string
        consumerOrganizationId:
          description: Unique identifier of the organization the product key belongs to
          type: string
          example: sa3kaL
        disableProductKeyOnPaymentFailed:
          description: Whether or not to disable the product key on payment failed
          type: boolean
        namedConsumers:
          description: List of user email addresses who are allowed to access the product
          type: array
          items:
            description: List of user email addresses who are allowed to access the product
            type: string
        namedOrganizations:
          description: List of organization id's who are allowed to access the product
          type: array
          items:
            description: List of organization id's who are allowed to access the product
            type: string
        consumerDataProviderId:
          description: The id of the consumer data provider configuration
          type: string
          example: 3kTMd
        subscriptionAllowMidPeriodCancellation:
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
          type: boolean
        notifyClientTrialAboutToExpire:
          description: Whether or not to notify client when trial is about to expiry
          type: boolean
        upgradeViaPaymentFlag:
          description: Flag to identify upgrade via payment/open
          type: boolean
    DynamicPricingPropertyRequest:
      description: A dynamic pricing property
      required:
        - name
        - type
        - value
      type: object
      properties:
        name:
          description: The name of the pricing property
          type: string
          example: datacenter
        value:
          description: The value of the pricing property
          type: string
          example: us-east-1
        type:
          description: The data type of the pricing property
          type: string
          example: String
    UpdatePricingRuleRequest:
      description: The pricing rule to create
      required:
        - pricingProperties
        - target
      type: object
      properties:
        organizationId:
          description: The id of the organization the pricing rule belongs to
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner the pricing rule belongs to
          type: string
          example: 3kTMd
        name:
          description: The name of the pricing rule
          type: string
          example: compute-cost-pricing-rule
        script:
          description: The rule's pricing script
          type: string
          example: lineItem.product.baseCost * 0.20
        pricingProperties:
          description: Dynamic properties associated with the pricing rule
          type: array
          items:
            $ref: '#/components/schemas/DynamicPricingPropertyRequest'
        defaultExecutionNote:
          description: The rule's default execution note
          type: string
          example: sample execution note
        target:
          description: >-
            The target of the result of the PricingRule evaluation (can be
            either CHARGE or CALL_COUNT)
          type: string
          example: CHARGE
    UpdateFeatureRequest:
      description: The feature
      required:
        - description
        - id
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        description:
          description: The feature description
          type: string
          example: access to documentation
        id:
          description: The id of the tier
          type: string
          example: NsYmyL
        ownerId:
          description: The id of the user that owns the plan
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the plan
          type: string
          example: sBcTTs3
        name:
          description: The name of the feature
          type: string
          example: documentation
    UpdatePlanElementRequest:
      description: The plan element
      required:
        - distinctValue
        - id
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        id:
          description: The id of the plan element
          type: string
          example: sBcTTs3
        ownerId:
          description: The id of the user that owns the plan element
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the plan element
          type: string
          example: sBcTTs3
        name:
          description: The name of the plan element
          type: string
          example: Country
        elementDefinitionId:
          description: The id of the element definition of the plan element
          type: string
          example: sBcTTs3
        distinctValue:
          description: The distinct value of the plan element (case insensitive)
          type: string
          example: FRANCE
        flatAmount:
          description: Flat amount of the plan element
          type: number
          example: 34.33
    UpdatePlanRequest:
      description: The plan
      required:
        - currency
        - graduated
        - id
        - name
        - organizationId
        - ownerId
        - planType
        - template
      type: object
      properties:
        id:
          description: The id of the plan
          type: string
          example: sBcTTs3
        ownerId:
          description: The id of the user that owns the plan
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the plan
          type: string
          example: sBcTTs3
        name:
          description: The name of the plan
          type: string
          example: a plan
        graduated:
          description: >-
            Boolean that indicates if volume tiers are graduated or not. it
            defaults to true
          type: boolean
        template:
          description: >-
            Boolean that indicates if a plan is a template. a template plan
            cannot be attached to a product.
          type: boolean
        planType:
          description: The plan type, e.g. CHARGE, SUBSCRIPTION
          type: string
          example: SUBSCRIPTION
        charge:
          description: The charge for a charge type plan
          type: number
          example: 3243243
        currency:
          description: The plans currency
          type: string
          example: USD
        period:
          description: The plan period
          type: string
          example: MONTH
        periodCount:
          description: The period count of the plan
          type: integer
          format: int64
          example: 3
        trialPeriod:
          description: The plan trial period
          type: string
          example: MONTH
        trialPeriodCount:
          description: Trial period count of a subscription plan
          uniqueItems: true
          type: array
          example: 4
          items:
            $ref: '#/components/schemas/UpdateTierRequest'
        prePaySetups:
          description: >-
            Boolean that indicates if setupfees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
          type: boolean
        features:
          description: Features of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateFeatureRequest'
        elements:
          description: Elements of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UpdatePlanElementRequest'
        setups:
          description: Setups of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateSetupFeeRequest'
    UpdateSetupFeeRequest:
      description: A setup fee that can be used in a plan
      required:
        - id
        - name
        - organizationId
        - ownerId
        - type
      type: object
      properties:
        id:
          description: The id of the setup fee
          type: string
          example: sBcTTs3
        ownerId:
          description: The id of the user that owns the setup fee
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the setup fee
          type: string
          example: sBcTTs3
        name:
          description: The name of the setup fee
          type: string
          example: Country
        type:
          description: The type of the setup fee
          type: string
          example: CUSTOMER
        flatAmount:
          description: Flat amount of the setup fee
          type: number
          example: 34.33
    PlanElementView:
      required:
        - distinctValue
        - elementDefinition
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          description: The id of the plan
          type: string
          example: sVc8ak
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        name:
          description: The name of the plan element
          type: string
          example: Country
        elementDefinition:
          $ref: '#/components/schemas/ElementDefinitionView'
        distinctValue:
          description: The distinct value of the plan element (case insensitive)
          type: string
          example: FRANCE
        flatAmount:
          description: Flat amount of the plan element
          type: number
          example: 34.33
    PlanView:
      required:
        - currency
        - elements
        - features
        - graduated
        - id
        - name
        - organization
        - owner
        - planType
        - setups
        - template
        - tiers
      type: object
      properties:
        id:
          description: The id of the plan
          type: string
          example: sVc8ak
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        name:
          description: Name of the plan
          type: string
          example: enterprise plan
        planType:
          description: The plan type
          type: string
          example: SUBSCRIPTION
        charge:
          description: One time payment charge
          type: number
          example: 23344.77
        currency:
          description: The currency of the plan
          type: string
          example: USD
        period:
          description: The subscription plan period
          type: string
          example: MONTH
        periodCount:
          description: Period count of a subscription plan
          type: integer
          format: int64
          example: 4
        trialPeriod:
          description: The subscription plan trial period
          type: string
          example: MONTH
        trialPeriodCount:
          description: Trial Period count of a subscription plan
          type: integer
          format: int64
          example: 4
        spendLimit:
          description: Spend Limit of Plan
          type: number
        graduated:
          description: >-
            Boolean that indicates if volume tiers are graduated or not. It
            defaults to true
          type: boolean
        template:
          description: >-
            Boolean that indicates if a plan is a template. A template plan
            cannot be attached to a product.
          type: boolean
        tiers:
          description: List of Plan tiers
          uniqueItems: true
          type: array
          example: 4
          items:
            $ref: '#/components/schemas/TierView'
        elements:
          description: List of plan elements
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PlanElementView'
        features:
          description: List of plan features
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FeatureView'
        setups:
          description: List of setup fees
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SetupFeeView'
    SetupFeeView:
      description: List of setup fees
      required:
        - id
        - name
        - organization
        - owner
        - type
      type: object
      properties:
        id:
          description: The ID of the setup fee
          type: string
          example: sVc8ak
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        name:
          description: The name of the setup fee
          type: string
          example: Country
        type:
          description: The type of the setup fee
          type: string
          example: CUSTOMER
        flatAmount:
          description: Flat amount of the setup fee
          type: number
          example: 34.33
    BillingAddressView:
      description: Billing Address
      type: object
      properties:
        Line1:
          description: Line 1 of billing address
          type: string
          example: 3343 abc street
        Line2:
          description: Line 2 of billing address
          type: string
          example: 3343 abc street
        City:
          description: Billing address city
          type: string
          example: New York
        State:
          description: Billing address state
          type: string
          example: New York
        PostalCode:
          description: Billing address postal code
          type: string
          example: '23214'
        CountryCode:
          description: Billing address country code
          type: string
          example: US
    ExternalPaymentMethodView:
      description: An external payment method
      required:
        - externalPaymentMethodId
      type: object
      properties:
        externalPaymentMethodId:
          description: External id of the payment method
          type: string
          example: pm_3wsdr35q34234
        last4Digits:
          description: Last 4 digits of the payment card
          type: string
          example: '3343'
        brand:
          description: Brand of the payment card
          type: string
          example: visa
        expirationMonth:
          description: Expiration month of payment card
          type: integer
          format: int64
          example: 3
        expirationYear:
          description: Expiration year of payment card
          type: integer
          format: int64
          example: 2024
        country:
          description: Country of payment card
          type: string
          example: US
    PaymentCustomerView:
      description: A Payment Customer
      required:
        - customerDescription
        - customerName
        - id
        - paymentConfiguration
        - paymentMethods
        - user
      type: object
      properties:
        id:
          description: Unique id of the payment customer
          type: string
          example: 3kTMd
        user:
          $ref: '#/components/schemas/UserView'
        paymentConfiguration:
          $ref: '#/components/schemas/PaymentConfigurationView'
        customerName:
          description: The Customer Name
          type: string
          example: Acme Financial, Inc
        customerDescription:
          description: The Customer Description
          type: string
          example: Acme Financial, Inc
        externalCustomerId:
          description: The customer external id
          type: string
          example: cust_1KLQSrLthVAybHpeGa8QAcce
        externalSetupIntentId:
          description: The customer external setup intent Id
          type: string
          example: seti_1KLQSrLthVAybHpeGa8QAcce
        billingAddress:
          $ref: '#/components/schemas/BillingAddressView'
        paymentMethods:
          description: The customer payment methods
          type: array
          items:
            $ref: '#/components/schemas/ExternalPaymentMethodView'
        defaultPaymentMethodExternalId:
          description: The customers default payment method external Id
          type: string
    UpdatePaymentConfigurationRequest:
      description: The payment configuration
      required:
        - configurationProperties
      type: object
      properties:
        name:
          description: The name of the payment configuration
          type: string
          example: Stripe (Production)
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        paymentProvider:
          description: The payment provider
          type: string
          example: STRIPE
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    PaymentEventView:
      description: A Payment Event
      required:
        - id
        - paymentMethod
        - paymentStatus
        - paymentType
        - timestamp
      type: object
      properties:
        id:
          description: Unique id of the payment event
          type: string
          example: 3kTMd
        paymentType:
          description: Payment yype
          type: string
        paymentStatus:
          description: The payment status
          type: string
        paymentMethod:
          description: The payment method
          type: string
        externalEventId:
          description: The external event id
          type: string
        count:
          description: The event count
          type: integer
          format: int64
        timestamp:
          description: Payment Event timestamp (milliseconds)
          type: integer
          format: int64
          example: 1584585647000
    PaymentLogView:
      description: A Payment Log
      required:
        - paymentDate
        - paymentSucceeded
        - timestamp
      type: object
      properties:
        id:
          description: Unique id of the payment log
          type: string
          example: 3kTMd
        externalInvoiceId:
          description: External invoice id
          type: string
        externalOrderId:
          description: External order id
          type: string
        externalPaymentIntentId:
          description: External payment intent id
          type: string
        externalSetupIntentId:
          description: External payment setup intent id
          type: string
        charge:
          description: The payment charge (minor)
          type: integer
          format: int64
        chargeMajor:
          description: The payment charge (major)
          type: number
          format: double
        startDate:
          description: The payment period start date
          type: integer
          format: int64
          example: 1584585647000
        endDate:
          description: The payment period end date
          type: integer
          format: int64
          example: 1584585647000
        paymentDate:
          description: Payment timestamp (milliseconds)
          type: integer
          format: int64
          example: 1584585647000
        paidCalls:
          description: Paid calls
          type: integer
          format: int64
        freeCalls:
          description: Free calls
          type: integer
          format: int64
        taxAmount:
          description: Tax amount in (minor)
          type: integer
          format: int64
        taxAmountMajor:
          description: Tax amount in (major)
          type: number
          format: double
        taxType:
          description: Tax type
          type: string
          example: exclusive
        timestamp:
          description: Payment log timestamp (milliseconds)
          type: integer
          format: int64
          example: 1584585647000
        paymentSucceeded:
          description: Payment has succeeded
          type: boolean
        testModeEnabled:
          description: Is test mode enabled?
          type: boolean
    PaymentRecordView:
      description: A report on current status of payment
      required:
        - Payment Open?
        - asset
        - externalId
        - id
        - paymentConfiguration
        - paymentEvents
        - paymentLogs
        - paymentProvider
        - product
        - productName
        - recordType
        - status
        - user
      type: object
      properties:
        id:
          description: Unique id of the payment record
          type: string
          example: 3kTMd
        Payment Open?:
          description: >-
            Boolean indicating if payment is open, only one payment can be open
            for product and user at any time
          type: boolean
          example: true
        product:
          description: The product
          type: string
        productName:
          description: The product name
          type: string
        user:
          $ref: '#/components/schemas/UserView'
        asset:
          $ref: '#/components/schemas/AssetView'
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        paymentProvider:
          description: The payment provider
          type: string
          example: stripe
        paymentConfiguration:
          $ref: '#/components/schemas/PaymentConfigurationView'
        externalId:
          description: The external Id of the payment
          type: string
          example: pi_1KLQSrLthVAybHpeGa8QAcce
        externalCustomerId:
          description: The customer external Id of the payment
          type: string
          example: cust_1KLQSrLthVAybHpeGa8QAcce
        applicationExternalId:
          description: The application external Id
          type: string
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        companyName:
          description: Company name
          type: string
          example: Acme
        externalSetupIntentId:
          description: The external setup intent Id
          type: string
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalOrderId:
          description: The external order Id
          type: string
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalPaymentIntentId:
          description: The external payment intent Id
          type: string
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalSubscriptionId:
          description: The external subscription Id
          type: string
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalInvoiceId:
          description: The external Invoice Id
          type: string
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalPaymentMethodId:
          description: The external Payment Method Id
          type: string
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalTestClockId:
          description: The external Test Clock Id
          type: string
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        status:
          description: The status of the payment
          type: string
          example: payment_intent.succeeded
        recordType:
          description: The payment record Type
          type: string
          enum:
            - SUBSCRIPTION
            - ONETIME
            - STANDALONE
        startDate:
          description: The start date of the payment period
          type: integer
          format: int64
        paymentEvents:
          description: A list of payment events
          type: array
          items:
            $ref: '#/components/schemas/PaymentEventView'
        paymentLogs:
          description: A list of payment logs
          type: array
          items:
            $ref: '#/components/schemas/PaymentLogView'
    UpdateOrganizationDto:
      description: The organization
      required:
        - domainAliases
      type: object
      properties:
        name:
          description: The name of the organization
          type: string
          example: Marketing
        tenantId:
          description: The id of the tenant this organization belongs to
          type: string
          example: B0NV05
        parentId:
          description: The id of the parent organization
          type: string
          example: B0NV05
        invoiceNotificationTemplate:
          description: Invoice notification template location
          type: string
        invoiceTemplate:
          description: Invoice template location
          type: string
        productKeyCreationNotificationTemplate:
          description: Product Key creation template location
          type: string
        productKeyUpgradeNotificationTemplate:
          description: Product Key upgrade template location
          type: string
        productKeyQuotaNotificationTemplate:
          description: Product Key quota notification template location
          type: string
        productKeyTierQuotaNotificationTemplate:
          description: Product Key tier quota notification template location
          type: string
        emailFromAddress:
          description: >-
            The sender address for notifications generated from this
            Organization (note: requires coordination with the HyperCurrent team
            to setup the appropriate DKIM DNS records
          type: string
        domainAliases:
          description: >-
            Email domains associated with this organization (ie, acmesoft.org,
            acmesoft.io, etc)
          type: array
          example:
            - acmesoft.org
            - acmesoft.io
          items:
            description: >-
              Email domains associated with this organization (ie, acmesoft.org,
              acmesoft.io, etc)
            type: string
            example: '["acmesoft.org","acmesoft.io"]'
        address1:
          description: Address (Line 1)
          type: string
        address2:
          description: Address (Line 2)
          type: string
        city:
          description: City
          type: string
        state:
          description: State
          type: string
        country:
          description: The country)
          type: string
        postalCode:
          description: PostalCode
          type: string
        phoneNumber:
          description: PhoneNumber
          type: string
        emailAddress:
          description: EmailAddress
          type: string
        instructionText:
          description: The instruction
          type: string
        helpText:
          description: The help text
          type: string
        billingEmail:
          description: The billing email address
          type: string
        billingPhoneNumber:
          description: The billing phone number
          type: string
        url:
          description: The URL
          type: string
        logo:
          description: The Organization's logo
          type: string
        externalId:
          description: >-
            An external identifier (e.g. in a API Management system) that is
            associated with the Organization
          type: string
          example: 12345abcd
        assetAutoDiscoveryEnabled:
          description: Whether asset auto discovery is enabled or not
          type: boolean
        currency:
          description: The currency of the organization
          type: string
        invoiceReflectsProduct:
          description: Flag if the org wants products or product tiers on their invoices
          type: boolean
    UpdateNotificationProviderConfigurationRequest:
      description: The notification provider configuration
      required:
        - configurationProperties
        - name
        - notificationProviderProvider
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          description: The name of the notification provider configuration
          type: string
          example: Slack (Production)
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        notificationProviderProvider:
          description: The notification provider
          type: string
          example: SLACK
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    NotificationProviderConfigurationView:
      required:
        - configurationProperties
        - id
        - name
        - organization
        - provider
      type: object
      properties:
        id:
          description: Unique identifier of the notification configuration
          type: string
          example: 3kTMd
        name:
          description: The name of the notification configuration
          type: string
          example: Slack (Product Management)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        default_owner:
          $ref: '#/components/schemas/UserView'
        provider:
          description: The notification provider
          type: string
          example: SLACK
        configurationProperties:
          description: Configuration Properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    UpdateNotificationTemplateRequest:
      required:
        - organizationId
      type: object
      properties:
        organizationId:
          description: The identifier of the organization associated with the template
          type: string
          example: aSjk123
        productKeyCreationNotificationContent:
          description: Body of product license creation notification
          type: string
          example: This is a body of text
        productKeyDeletionNotificationContent:
          description: Body of product license deletion notification
          type: string
          example: This is a body of text
        productKeyUpgradeNotificationContent:
          description: Body of product license upgrade notification
          type: string
          example: This is a body of text
        productKeyActivationNotificationContent:
          description: Body of product license activation notification
          type: string
          example: This is a body of text
        productKeyInvalidNotificationContent:
          description: Body of product license invalid notification
          type: string
          example: This is a body of text
        productKeyFailedPaymentContent:
          description: Body of product license creation notification
          type: string
          example: This is a body of text
        successfulPaymentNotificationContent:
          description: Body of successful payment notification
          type: string
          example: This is a body of text
        'freeTrialNotificationContent:':
          description: Subject of successful payment notification
          type: string
          example: This is a test
        productKeyCreationNotificationSubject:
          description: Subject of product license creation notification
          type: string
          example: This is a subject of text
        productKeyDeletionNotificationSubject:
          description: Subject of product license deletion notification
          type: string
          example: This is subject of text
        productKeyUpgradeNotificationSubject:
          description: Subject of product license upgrade notification
          type: string
          example: This is a test
        productKeyActivationNotificationSubject:
          description: Subject of product license activation notification
          type: string
          example: This is a test
        productKeyInvalidNotificationSubject:
          description: Subject of product license invalid notification
          type: string
          example: This is a test
        productKeyFailedPaymentSubject:
          description: Subject of product license creation notification
          type: string
          example: This is a body of text
        successfulPaymentNotificationSubject:
          description: Subject of successful payment notification
          type: string
          example: This is a test
        freeTrialNotificationSubject:
          description: Subject of successful payment notification
          type: string
          example: This is a test
        invoiceNotificationContent:
          description: Subject of successful payment notification
          type: string
          example: This is a test
        invoiceNotificationSubject:
          description: Subject of successful payment notification
          type: string
          example: This is a test
        quotaNotificationContent:
          description: Subject of successful payment notification
          type: string
          example: This is a test
        quotaNotificationSubject:
          description: Subject of successful payment notification
          type: string
          example: This is a test
        quotaTierNotificationContent:
          description: Subject of successful payment notification
          type: string
          example: This is a test
        quotaTierNotificationSubject:
          description: Subject of successful payment notification
          type: string
          example: This is a test
        logo:
          description: The organization's logo
          type: string
    NotificationTemplateView:
      required:
        - id
        - name
      type: object
      properties:
        id:
          description: Id of the template
          type: string
        name:
          description: Name of the template
          type: string
        body:
          description: Body of the template
          type: string
        subject:
          description: Subject of the template
          type: string
        image:
          type: string
    UpdateIdentityProviderConfigurationRequest:
      description: The identity provider configuration
      required:
        - configurationProperties
      type: object
      properties:
        name:
          description: The name of the identity provider configuration
          type: string
          example: AUTH0
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        identityProvider:
          description: The identity management provider
          type: string
          example: AUTH0
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    IdentityProviderConfigurationView:
      description: Identity provider configuration
      required:
        - configurationProperties
        - id
        - identityProvider
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          description: Unique identifier of the identity provider configuration
          type: string
          example: 3kTMd
        name:
          description: The name of the IDP Configuration
          type: string
          example: Auth0 (Staging)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        identityProvider:
          description: The identity provider
          type: string
          example: AUTH0
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    UpdateExportConfigurationRequest:
      description: The export configuration
      required:
        - configurationProperties
      type: object
      properties:
        name:
          description: The name of the export configuration
          type: string
          example: Email Export (SAP)
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        exportProvider:
          description: The export provider
          type: string
          example: FILESYSTEM
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    ExportConfigurationView:
      required:
        - Configuration properties
        - The export provider
        - The id of the organization
        - The name of the export configuration
        - The owner
        - Unique identifier of the export configuration
      type: object
      properties:
        Unique identifier of the export configuration:
          type: string
          example: 3kTMd
        The name of the export configuration:
          type: string
          example: Email (SAP)
        The id of the organization:
          $ref: '#/components/schemas/OrganizationView'
        The owner:
          $ref: '#/components/schemas/UserView'
        The export provider:
          type: string
          example: FILESYSTEM
        Configuration properties:
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    ElementDefinitionUpdateRequest:
      description: The element definition update body
      required:
        - organizationId
        - type
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - STRING
            - NUMBER
        organizationId:
          type: string
        elementDescription:
          type: string
    UpdateConsumerDataProviderConfigurationRequest:
      description: The consumer dataa provider configuration
      required:
        - configurationProperties
        - createSQL
        - querySQL
      type: object
      properties:
        name:
          description: The name of the consumer date configuration
          type: string
          example: Subscription (Yearly)
        organizationId:
          description: >-
            The id of the organization associated with this consumer data
            configuration
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        consumerDataProviderProvider:
          description: The consumer data provider
          type: string
          example: SNOWFLAKE
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
        createSQL:
          description: The billing table schema creation sql
          type: string
        querySQL:
          description: The billing table schema query sql
          type: string
    UpdateBillingMetadataRequest:
      description: The billing metadata to create
      type: object
      properties:
        name:
          description: The name of the billing metadata
          type: string
        value:
          description: The value of the billing metadata
          type: string
        target:
          description: The target of the billing metadata (either INVOICE or LINE_ITEM)
          type: string
        type:
          description: The type of the billing metadata (either STRING or NUMBER)
          type: string
    BillingMetadataView:
      required:
        - id
        - name
        - target
        - type
        - value
      type: object
      properties:
        id:
          description: The ID of the element definition
          type: string
          example: sVc8ak
        name:
          description: The name of the billing metadata
          type: string
        value:
          description: The value of the billing metadata
          type: string
        target:
          description: The target of the billing metadata (either INVOICE or LINE_ITEM)
          type: string
        type:
          description: The type of the billing metadata (either STRING or NUMBER)
          type: string
    AssetPropertyRequest:
      description: An asset property
      required:
        - name
        - value
      type: object
      properties:
        name:
          description: The name of the property
          type: string
          example: url
        value:
          description: The value of the property
          type: string
          example: https://api.foo.com/v1
    UpdateAssetRequest:
      description: The asset
      required:
        - applicationAutoDiscoveryEnabled
        - classificationPatterns
        - elementDefinitionIds
        - ownerId
        - productIds
        - properties
        - slaDefinitionIds
        - tags
      type: object
      properties:
        tags:
          description: A list of tags associated with this asset.
          type: array
          example:
            - tag1
            - tag2
            - tag3
          items:
            description: A list of tags associated with this asset.
            type: string
            example: '["tag1","tag2","tag3"]'
        version:
          description: The asset's version
          type: string
          example: 1.0.0
        assetType:
          description: The type of the asset
          type: string
          example: API
        accountId:
          description: The account id of the asset
          type: string
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        ownerId:
          description: The id of the user that owns the asset
          type: string
          example: NsYmyL
        name:
          description: The name of the asset
          type: string
          example: my-awesome-asset
        The description of the asset:
          type: string
          example: truly an awesome product
        organizationId:
          description: The id of the organization that owns the asset
          type: string
          example: sBcTTs3
        productIds:
          description: A list of productids
          type: array
          example:
            - sQYmyQ
            - jQYkyl
            - a92j3
          items:
            description: A list of productids
            type: string
            example: '["sQYmyQ","jQYkyl","a92j3"]'
        slaDefinitionIds:
          description: 'A list of sla definition ids associated with this asset. '
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: 'A list of sla definition ids associated with this asset. '
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        properties:
          description: Properties associated with the asset
          type: array
          items:
            $ref: '#/components/schemas/AssetPropertyRequest'
        externalId:
          description: >-
            An external identifier (ie, in a api management system) that is
            associated with the asset
          type: string
          example: 12345abcd
        code:
          description: The asset code
          type: string
          example: '1234'
        url:
          description: The asset's resource
          type: string
          example: /api/products
        method:
          description: The asset's HTTP method (if applicable)
          type: string
          example: POST
        applicationAutoDiscoveryEnabled:
          description: Whether application auto discovery is enabled or not
          type: boolean
        classificationPatterns:
          description: The asset classification patterns
          type: array
          items:
            $ref: '#/components/schemas/AssetClassificationPattern'
        elementDefinitionIds:
          description: The ids of the element definitions to associate with this asset
          type: array
          items:
            description: The ids of the element definitions to associate with this asset
            type: string
        logo:
          description: The assets' logo
          type: string
        devPortalLink:
          description: The devPortalLink of the asset
          type: string
          example: http://url.com
    UpdateApplicationRequest:
      description: The application request
      required:
        - externalId
        - id
        - name
        - organizationId
        - productKeyIds
        - tags
        - userId
      type: object
      properties:
        tags:
          description: 'A list of tags associated with this asset '
          type: array
          example:
            - tag1
            - tag2
            - tag3
          items:
            description: 'A list of tags associated with this asset '
            type: string
            example: '["tag1","tag2","tag3"]'
        id:
          description: The id of the application
          type: string
          example: aBDk341
        name:
          description: The name of the application
          type: string
          example: My Mobile Application
        organizationId:
          description: The id of the organization associated with the application
          type: string
          example: aSjk123
        userId:
          description: The identifier of the user associated with the application
          type: string
          example: aSjk123
        externalId:
          description: The identifier of the application in an external system
          type: string
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
        productKeyIds:
          description: The product keys this application is associated with
          type: array
          example: '[''aca234'', ''aBsSqs'', ''1sDzsd'']'
          items:
            description: The product keys this application is associated with
            type: string
            example: '[''aca234'', ''aBsSqs'', ''1sDzsd'']'
        consumerOrganizationId:
          description: Unique identifier of the organization the application belongs to
          type: string
          example: sa3kaL
    UpdateAPIMConfigurationRequest:
      description: The API management configuration
      required:
        - authenticationMechanism
        - configurationProperties
      type: object
      properties:
        name:
          description: The name of the api management configuration
          type: string
          example: MULESOFT
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        apimProvider:
          description: The API management provider
          type: string
          example: MULESOFT
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
        authenticationMechanism:
          description: The authentication mechanism
          type: string
          example: CONNECTED_APP
    APIMConfigurationView:
      description: API management configuration
      required:
        - apimProvider
        - authenticationMechanism
        - configurationProperties
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          description: Unique identifier of the API management configuration
          type: string
          example: 3kTMd
        name:
          description: The name of the API management configuration
          type: string
          example: MuleSoft (Staging)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        apimProvider:
          description: The API management provider
          type: string
          example: MULESOFT
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
        authenticationMechanism:
          description: The authentication mechanism
          type: string
          example: CONNECTED_APP
        disabledForPossibleMisconfiguration:
          description: >-
            Boolean indicating that Syncing has been disabled due to possible
            misconfiguration
          type: boolean
          example: false
    UpdateAccountTierRequest:
      description: The account tier request
      required:
        - id
        - selfServiceIncludedEvents
      type: object
      properties:
        id:
          description: Id of Account Tier
          type: string
        name:
          description: Name of Account Tier
          type: string
        selfServiceIncludedEvents:
          description: Number of events included in Self Service
          type: integer
          format: int64
    AccountTierView:
      required:
        - id
      type: object
      properties:
        description:
          description: Description of Account Tier
          type: string
        id:
          description: Id of account tier
          type: string
        accountTierType:
          description: Type of account tier
          type: string
        onDemandPriceIncludedEvents:
          description: Number of events included in Self Service
          type: integer
          format: int64
        basePriceNickname:
          description: Base Price Nickname
          type: string
        pricingType:
          description: Pricing type of Account Tier
          type: string
        basePriceAmount:
          description: Plan price of Account Tier
          type: number
        onDemandPriceUnitAmount:
          description: Cost per event of Account Tier
          type: number
        retentionDays:
          description: Retention days of Account Tier
          type: integer
          format: int32
        onDemandPriceEventsAllowed:
          description: On demand events of Account Tier
          type: boolean
        onDemandPriceNickname:
          description: On demand plan name of Account Tier
          type: string
        basePriceLookupKey:
          description: Base price Lookup key of Account Tier
          type: string
        name:
          description: Name key of Account Tier
          type: string
        basePriceExternalId:
          description: Base price external id
          type: string
        onDemandPriceExternalId:
          description: On demand price external id
          type: string
        onDemandPriceLookupKey:
          description: On demand price lookup key
          type: string
        onDemandPriceAmountPer10KEvents:
          description: On demand price amount per 10K events
          type: number
        externalProductId:
          description: External product id
          type: string
        externalCustomerId:
          description: External customer id
          type: string
        externalSubscriptionId:
          description: External subscription id
          type: string
        periodUsageQuotaCount:
          description: Period Usage Quota Count
          type: integer
          format: int64
        trialDays:
          description: Number of trial days
          type: integer
          format: int64
        trialStartDate:
          description: Trial period start date
          type: integer
          format: int64
        trialEndDate:
          description: Trial period end date
          type: integer
          format: int64
        currentSubscriptionPeriodStartDate:
          description: Current subscription period start date
          type: integer
          format: int64
        currentSubscriptionPeriodEndDate:
          description: Current subscription period end date
          type: integer
          format: int64
        externalReveniumAccountId:
          description: External Revenium Account id
          type: string
        testMode:
          description: Test Mode Enabled
          type: boolean
        level:
          description: Account Tier Product Level
          type: number
          format: double
    UpgradeAccountTierRequest:
      description: The upgrade account tier request
      required:
        - product to upgrade to
      type: object
      properties:
        product to upgrade to:
          description: Product to upgrade to
          type: string
    DowngradeAccountTierRequest:
      description: The downgrade account tier Rrquest
      required:
        - product to downgrade to
      type: object
      properties:
        product to downgrade to:
          description: Product to downgrade to
          type: string
    CreateUserDto:
      description: The User
      required:
        - administeredOrganizationIds
        - administeredTenantIds
        - emailAddress
        - firstName
        - isActive
        - lastName
        - organizationIds
        - password
        - personas
        - roles
        - username
      type: object
      properties:
        username:
          description: The unique username
          type: string
          example: gabe
        emailAddress:
          description: The user's email address
          type: string
          example: gabe@pipedpiper.com
        password:
          description: The user's password
          type: string
          example: changeme
        isActive:
          description: Is the user active
          type: boolean
          example: true
        organizationIds:
          description: A list of the organizations the User is a member of
          type: array
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            description: A list of the organizations the User is a member of
            type: string
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        roles:
          description: The roles granted to the user
          type: array
          example:
            - ROLE_ADMIN
            - ROLE_API_CONSUMER
          items:
            description: The roles granted to the user
            type: string
            example: '["ROLE_ADMIN","ROLE_API_CONSUMER"]'
        administeredOrganizationIds:
          description: A list of the organizations the user is an administrator of
          type: array
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            description: A list of the organizations the user is an administrator of
            type: string
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        administeredTenantIds:
          description: A list of the tenants the user is an administrator of
          type: array
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            description: A list of the tenants the user is an administrator of
            type: string
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        personas:
          description: The personas associated with the user
          type: array
          example:
            - CIO
            - COO
          items:
            description: The personas associated with the user
            type: string
            example: '["CIO","COO"]'
        firstName:
          description: The first name associated with the user
          type: string
          example: John
        lastName:
          description: The last name associated with the user
          type: string
          example: Smith
    CreateTrafficAnomalyRuleRequest:
      description: The create traffic anomaly rule request
      required:
        - anomalyCategory
        - anomalyType
        - name
        - organizationId
        - thresholdCount
        - thresholdValue
        - timeWindow
        - timeWindowUnit
        - userIds
      type: object
      properties:
        name:
          description: Name of this rule
          type: string
          example: test
        organizationId:
          description: The organization associated with this rule
          type: string
          example: sAd12df
        anomalyType:
          description: The type of anomaly
          type: string
          example: LATENCY_RATE_GATEWAY
        anomalyCategory:
          description: The category of anomaly
          type: string
          example: ASSET
        thresholdValue:
          description: The threshold value
          type: number
          format: double
          example: 100
        thresholdCount:
          description: The threshold count
          type: integer
          format: int32
          example: 10
        timeWindow:
          description: The time window
          type: integer
          format: int64
          example: 1
        timeWindowUnit:
          description: The time window unit
          type: string
          example: MINUTES
        userIds:
          description: The users that will be recipients when this rule is activated
          type: array
          example: '[3kTMd,Dk12sc]'
          items:
            description: The users that will be recipients when this rule is activated
            type: string
            example: '[3kTMd,Dk12sc]'
    CreateTierRequest:
      description: The tier to create
      required:
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        ownerId:
          description: The id of the user that owns the tier
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the tier
          type: string
          example: sBcTTs3
        name:
          description: The name of the tier
          type: string
          example: Free Tier
        upTo:
          description: Upper unit limit for tier
          type: integer
          example: 1343234
        unitAmount:
          description: Unit amount of the tier
          type: number
          example: 1343234
    CreateTenantDto:
      description: The tenant
      required:
        - description
        - name
        - profile
      type: object
      properties:
        description:
          description: Description of the tenant
          maxLength: 50
          minLength: 2
          type: string
          example: aviation.aircraft
        name:
          description: The name of the tenant
          maxLength: 50
          minLength: 2
          type: string
          example: AcmeSoft
        profile:
          description: Profile of the tenant
          type: string
          example: MONETIZATION
    CreateTemplateRequest:
      description: The site request
      required:
        - content
        - name
        - organizationId
        - type
      type: object
      properties:
        organizationId:
          description: The identifier of the organization associated with the template
          type: string
          example: aSjk123
        name:
          description: The name of the template
          type: string
          example: Invoice Template
        type:
          description: The type of the template
          type: string
          example: INVOICE_NOTIFICATION
        content:
          description: The content of the template
          type: string
    Unit:
      type: object
    CreateSubscriberNotificationRequest:
      description: The api key request
      required:
        - affectedProductLicenseOwner
        - organizationId
        - productIds
        - selectedOwners
        - subject
      type: object
      properties:
        organizationId:
          description: The organization associated with the subscriber notification
          type: string
          example: 3kTmd
        affectedProductLicenseOwner:
          description: The type of owners affected by this notification
          type: string
          example: ALLPLOWNERS
        subject:
          description: The body for notification
          type: string
          example: This is a test
        productIds:
          description: Products associated with this notification
          type: array
          items:
            description: Products associated with this notification
            type: string
        selectedOwners:
          description: Owners associated with this notification
          type: array
          items:
            description: Owners associated with this notification
            type: string
    CreateStoredFilterRequest:
      description: The stored filter to create
      required:
        - filterName
        - organizationId
        - rawJsonFilters
        - userEmail
        - userId
      type: object
      properties:
        organizationId:
          type: string
        filterName:
          type: string
        rawJsonFilters:
          type: string
        userId:
          type: string
        userEmail:
          type: string
        methods:
          $ref: '#/components/schemas/FilterCategoryRequest'
        assets:
          $ref: '#/components/schemas/FilterCategoryRequest'
        applications:
          $ref: '#/components/schemas/FilterCategoryRequest'
        userDomains:
          $ref: '#/components/schemas/FilterCategoryRequest'
        userEmails:
          $ref: '#/components/schemas/FilterCategoryRequest'
        consumingOrganizations:
          $ref: '#/components/schemas/FilterCategoryRequest'
        responseCodes:
          $ref: '#/components/schemas/FilterCategoryRequest'
        maxLatencies:
          $ref: '#/components/schemas/FilterCategoryRequest'
        avgLatencies:
          $ref: '#/components/schemas/FilterCategoryRequest'
    FilterCategoryRequest:
      required:
        - items
        - operator
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        operator:
          type: string
    ReviewSLAViolationRequest:
      description: The sla violations to review
      required:
        - violationIds
      type: object
      properties:
        violationIds:
          description: The list of sla violations
          type: array
          example: '[3kTMd,d2dMs]'
          items:
            description: The list of sla violations
            type: string
            example: '[3kTMd,d2dMs]'
    CreateSLADefinitionDTO:
      description: The sla definition
      required:
        - baseAdjustment
        - name
        - organizationId
        - ownerId
        - pricingRuleIds
        - violationRules
      type: object
      properties:
        name:
          description: The name of an sla definition
          type: string
          example: Enterprise SLA (99.9% Uptime)
        ownerId:
          description: The sla definition's owner
          type: string
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        baseAdjustment:
          description: 'The base adjustment if there is an sla violation '
          type: number
          format: double
          example: 100
        pricingRuleIds:
          description: The sla definition's pricing rules
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: The sla definition's pricing rules
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        violationRules:
          type: array
          items:
            $ref: '#/components/schemas/SLAViolationRuleDTO'
    CreateSiteRequest:
      description: The Site Request
      required:
        - name
        - organizationId
      type: object
      properties:
        name:
          description: The name of the site
          type: string
          example: My Mobile Site
        organizationId:
          description: The identifier of the organization associated with the site
          type: string
          example: aSjk123
        externalId:
          description: The identifier of the site in an external system
          type: string
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
    CreateSiteConfigurationRequest:
      description: The site provider configuration
      required:
        - configurationProperties
        - name
        - organizationId
        - ownerId
        - siteProvider
      type: object
      properties:
        name:
          description: The name of the site configuration
          type: string
          example: Mulesoft Sites
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        siteProvider:
          description: The ste provider
          type: string
          example: MulesoftACMSiteProvider
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    CreateSelfServiceUserRequest:
      description: A User to create via self-service signup
      required:
        - companyId
        - companyName
        - contactId
        - emailAddress
        - firstName
        - lastName
        - phoneNumber
        - profileType
      type: object
      properties:
        emailAddress:
          description: The user's email address
          type: string
          example: gabe@pipedpiper.com
        firstName:
          description: The user's first name
          type: string
          example: Betram
        lastName:
          description: The user's last name
          type: string
          example: Gilfoyle
        companyName:
          description: The user's company
          type: string
          example: pipedpiper.com
        phoneNumber:
          description: The user's phone number
          type: string
          example: 555-555-5555
        role:
          description: The user's role
          type: string
          example: CTO
        gateway:
          description: The intended gateway to integrate with
          type: string
          example: MuleSoft
        profileType:
          description: The account type (either "MONETIZATION" or "CHARGEBACK")
          type: string
          example: MONETIZATION
        contactId:
          description: The CRM ID of the contact
          type: string
          example: '1234'
        companyId:
          description: The CRM ID of the company
          type: string
          example: '1234'
        testMode:
          description: Is the account tier in test mode
          type: boolean
          example: true
    SelfServiceUserResponse:
      description: The response for self-service signup requests
      required:
        - tenantId
      type: object
      properties:
        tenantId:
          description: The id of the created tenant
          type: string
          example: 1vMg34
    CreateFeatureRequestViaProduct:
      description: Features of a plan
      required:
        - description
        - name
      type: object
      properties:
        description:
          description: A description of the feature
          type: string
          example: Access to Documentation
        name:
          description: The name of the feature
          type: string
          example: Documentation
    CreatePlanElementRequestViaProduct:
      description: Elements of a plan
      required:
        - distinctValue
        - elementDefinitionId
        - name
      type: object
      properties:
        name:
          description: The name of the plan element
          type: string
          example: country
        elementDefinitionId:
          description: The id of the element definition of the plan element
          type: string
          example: sBcTTs3
        distinctValue:
          description: The distinct value of the plan element (case insensitive)
          type: string
          example: FRANCE
        flatAmount:
          description: Flat amount of the plan element
          type: number
          example: 34.33
    CreatePlanRequestViaProduct:
      description: A plan that can be used for a product
      required:
        - currency
        - elements
        - features
        - graduated
        - name
        - planType
        - setups
        - trialPeriodCount
      type: object
      properties:
        name:
          description: The name of the plan
          type: string
          example: a plan
        graduated:
          description: >-
            Boolean that indicates if volume tiers are graduated or not. it
            defaults to true
          type: boolean
        planType:
          description: The plan type, e.g. CHARGE, SUBSCRIPTION
          type: string
          example: SUBSCRIPTION
        charge:
          description: The charge for a charge type plan
          type: number
          example: 3243243
        currency:
          description: The plan's currency
          type: string
          example: USD
        period:
          description: The plan period
          type: string
          example: MONTH
        periodCount:
          description: The period count of the plan
          type: integer
          format: int64
          example: 3
        trialPeriod:
          description: The plan trial period
          type: string
          example: MONTH
        trialPeriodCount:
          description: Trial period count of a subscription plan
          uniqueItems: true
          type: array
          example: 4
          items:
            $ref: '#/components/schemas/CreateTierRequestViaProduct'
        prePaySetups:
          description: >-
            Boolean that indicates if setupfees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
          type: boolean
        features:
          description: Features of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CreateFeatureRequestViaProduct'
        elements:
          description: Elements of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CreatePlanElementRequestViaProduct'
        setups:
          description: Setups of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CreateSetupFeeRequestViaProduct'
      example: true
    CreateProductRequest:
      description: The product to create
      required:
        - account
        - assetIds
        - audienceRestriction
        - baseCost
        - externalId
        - isStaged
        - name
        - namedOrganizations
        - notificationAddressesOnInvoice
        - organizationId
        - ownerId
        - pricingRuleIds
        - productIds
        - sendDefaultNotificationOnInvoice
        - settlementPeriod
        - slaDefinitionIds
        - tags
        - transactionType
        - version
      type: object
      properties:
        tags:
          description: 'A list of tags associated with this product. '
          type: array
          example:
            - tag1
            - tag2
            - tag3
          items:
            description: 'A list of tags associated with this product. '
            type: string
            example: '["tag1","tag2","tag3"]'
        description:
          type: string
          example: truly an awesome product
        version:
          description: The version of the product
          type: string
          example: 1.0.0
        ownerId:
          description: The id of the user that owns the product
          type: string
          example: 3kTMd
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        name:
          description: The name of the product
          type: string
          example: my-awesome-product
        shortDescription:
          type: string
          example: Truly an awesome product
        link:
          description: A link to the product
          type: string
          example: https://portal.acmesoft/com/my-awesome-product
        baseCost:
          description: The base transaction cost to access the product
          type: number
          example: 100
        settlementPeriod:
          description: >-
            The settlement period, in days, that determines when product charges
            are calculated for an invoice
          type: string
          example: '100'
        account:
          description: The account id
          type: string
          example: 23bf56cb-2df6-490e-a039-5755866e0c1c
        transactionType:
          description: The transaction type of the product
          type: string
          example: 'true'
        paymentConfigurationId:
          description: The id of the payment configuration
          type: string
          example: '2'
        pricingRuleIds:
          description: The product's pricing rules
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: The product's pricing rules
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        assetIds:
          description: A list of asset ids that compose the product
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of asset ids that compose the product
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        productIds:
          description: A list of product ids that compose the product
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of product ids that compose the product
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        slaDefinitionIds:
          description: A list of sla definition ids associated with this product.
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of sla definition ids associated with this product.
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        defaultQuota:
          description: >-
            The default transaction quota for product keys associated with this
            product
          type: integer
          format: int64
        defaultQuotaNotificationThreshold:
          description: >-
            The default percentage of quota consumption to exceed before sending
            a notification
          type: number
          format: double
        sendDefaultNotificationOnInvoice:
          description: >-
            Whether or not to send invoice notifications to the recipient of the
            invoice
          type: boolean
        notificationAddressesOnInvoice:
          description: 'Additional email addresses to end invoice notifications to '
          type: array
          items:
            description: 'Additional email addresses to end invoice notifications to '
            type: string
        overageRatePerTransaction:
          description: >-
            The subscription overage rate per transaction for products defined
            with  'SUBSCRIPTION_WITH_OVERAGE'
          type: number
        subscriptionIncludedTransactions:
          description: >-
            The included transaction count for products defined with 
            'SUBSCRIPTION_WITH_OVERAGE'
          type: integer
          format: int64
        isStaged:
          description: Whether or not the product should be staged or immediately live
          type: boolean
        code:
          description: The product code
          type: string
          example: '1234'
        terms:
          description: The terms and conditions
          type: string
        termsDisplayName:
          description: The terms and conditions display name
          type: string
        additionalTerms1:
          description: Additional terms and conditions
          type: string
        additionalTermsDisplayName1:
          description: Additional terms and conditions display name
          type: string
        additionalTerms2:
          description: Additional terms and conditions
          type: string
        additionalTermsDisplayName2:
          description: Additional terms and conditions display name
          type: string
        disable:
          description: Disable a product key when a payment fails
          type: boolean
        externalId:
          description: >-
            An external identifier (ie, in a api management system) that is
            associated with the Product
          type: string
          example: 12345abcd
        displayPriority:
          description: The display priority the product
          type: number
          format: double
          example: 1
        notifyClientOnInvoice:
          description: Notify client on invoice
          type: boolean
        notifyClientTrialAboutToExpire:
          description: Notify client that trial is about to expire
          type: boolean
        environmentId:
          description: The environment for the product
          type: string
          example: Production
        apimConfigurationId:
          description: >-
            The id of the apim configuration (if synchronizing this product with
            an external apim)
          type: string
          example: 3kTMd
        audienceRestriction:
          description: The audience restriction, if any, on a product
          type: string
          example: USER
        externalLabel:
          description: >-
            An external label for the product that is exposed in developer
            portals
          type: string
          example: 12345abcd
        namedOrganizations:
          description: The organizations allowed to access the product
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: The organizations allowed to access the product
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        plan:
          $ref: '#/components/schemas/CreatePlanRequestViaProduct'
        performanceDefinition:
          $ref: '#/components/schemas/CreatePerformanceDefinitionRequest'
        subscriptionAllowMidPeriodCancellation:
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
          type: boolean
        productLockedToV1:
          description: Product V1 Lock
          type: boolean
        logo:
          description: The product's logo
          type: string
        staged:
          type: boolean
          writeOnly: true
    CreateSetupFeeRequestViaProduct:
      description: Setups of a plan
      required:
        - name
        - type
      type: object
      properties:
        name:
          description: The name of the setup fee
          type: string
          example: Country
        type:
          description: The type of the setup fee
          type: string
          example: CUSTOMER
        flatAmount:
          description: Flat amount of the setup fee
          type: number
          example: 34.33
    CreateTierRequestViaProduct:
      description: Trial period count of a subscription plan
      required:
        - name
      type: object
      properties:
        name:
          description: The name of the tier
          type: string
          example: Free Tier
        upTo:
          description: Upper unit limit for the tier
          type: integer
          example: 1343234
        unitAmount:
          description: Unit amount of the tier
          type: number
          example: 1343234
      example: 4
    CreateProductFamilyRequest:
      description: The product family to create
      required:
        - name
        - organizationId
        - ownerId
        - productFamilyTiers
      type: object
      properties:
        ownerId:
          description: The id of the user that owns the product family
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the product family
          type: string
          example: sBcTTs3
        name:
          description: The name of the product family
          type: string
          example: a Product Family
        allowProductFamilyDowngrade:
          description: Boolean to allow product family downgrade
          type: boolean
          example: true
        allowProductFamilyUpgrade:
          description: Boolean to allow product family upgrade
          type: boolean
          example: true
        productFamilyTiers:
          type: array
          items:
            $ref: '#/components/schemas/CreateProductFamilyTierRequest'
    CreateProductFamilyTierRequest:
      description: A product family tier that can be used for a product
      required:
        - name
        - productId
        - tierNumber
      type: object
      properties:
        name:
          description: The name of the product family tier
          type: string
          example: a Product Family Tier
        tierNumber:
          description: >-
            Number (decimal) indicating the tier of the product in a product
            family
          type: number
          format: double
          example: 1.3
        productId:
          description: Product that the tier will be assigned to
          type: string
        featuredTier:
          description: Flag to indicate if tier is featured
          type: boolean
          example: true
    CreateProductKeyRequest:
      description: The Product Key
      required:
        - applications
        - clientEmailAddress
        - description
        - disableProductKeyOnPaymentFailed
        - namedConsumers
        - namedOrganizations
        - notificationAddressesOnCreation
        - notificationAddressesOnQuotaThreshold
        - productIds
        - quotaConsumed
        - sendDefaultNotificationOnCreation
        - sendDefaultNotificationOnQuotaThreshold
      type: object
      properties:
        description:
          description: A description
          type: string
          example: 'Product Key #1234'
        organizationId:
          description: Unique id of the organization that the product key was provided by
          type: string
          example: 3kTMd
        consumerOrganizationId:
          description: Unique identifier of the organization the product key belongs to
          type: string
          example: sa3kaL
        productIds:
          description: The products the product key belongs to
          type: array
          example: '[3kTMd,Dk12sc]'
          items:
            description: The products the product key belongs to
            type: string
            example: '[3kTMd,Dk12sc]'
        valid:
          description: Is the key valid?
          type: boolean
          example: true
        ownerId:
          description: The product key's owner
          type: string
        key:
          description: The key
          type: string
          example: 5c99c760-4d11-4463-a211-937594d913d0
        slaDefinitionIds:
          description: A list of sla definition ids associated with this product key
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of sla definition ids associated with this product key
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        pricingRuleIds:
          description: A list of pricing rule ids associated with this product key
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of pricing rule ids associated with this product key
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        expiration:
          description: The product key's expiration timestamp (milliseconds)
          type: integer
          format: int64
          example: 1620579969000
        clientEmailAddress:
          description: >-
            In the event the owner doesn't have an account an email address can
            be passed to create the account on the fly
          type: string
        externalQuoteId:
          description: >-
            The quote the product key may be associated with in an external cpq
            / financial system
          type: string
        quota:
          description: The optional transaction quota associated with the product key
          type: integer
          format: int64
        quotaConsumed:
          description: The consumed quota associated with the product key
          type: integer
          format: int64
        quotaNotificationThreshold:
          description: >-
            The percentage of quota consumption to exceed before sending a
            notification
          type: number
          format: double
        applications:
          description: A list of application id's associated with this product key
          type: array
          items:
            description: A list of application id's associated with this product key
            type: string
        sendDefaultNotificationOnCreation:
          description: >-
            Whether or not to send notifications to the productkey creator on
            creation
          type: boolean
        notificationAddressesOnCreation:
          description: Additional email addresses for product key creation notification
          type: array
          items:
            description: Additional email addresses for product key creation notification
            type: string
        sendDefaultNotificationOnQuotaThreshold:
          description: >-
            Whether or not to send quota notifications to the product key's
            owner
          type: boolean
        notificationAddressesOnQuotaThreshold:
          description: Additional email addresses for product key quota notifications
          type: array
          items:
            description: Additional email addresses for product key quota notifications
            type: string
        applicationExternalId:
          description: The external id of an application associated with this product key
          type: string
        disableProductKeyOnPaymentFailed:
          description: Whether or not to disable the product key on payment failed
          type: boolean
        companyName:
          description: Company name
          type: string
          example: Acme
        namedConsumers:
          description: List of user email addresses who are allowed to access the product
          type: array
          items:
            description: List of user email addresses who are allowed to access the product
            type: string
        namedOrganizations:
          description: List of organization id's who are allowed to access the product
          type: array
          items:
            description: List of organization id's who are allowed to access the product
            type: string
        consumerDataProviderId:
          description: The id of the consumer data provider configuration
          type: string
          example: 3kTMd
        subscriptionAllowMidPeriodCancellation:
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
          type: boolean
        notifyClientTrialAboutToExpire:
          description: Whether or not to notify client when trial is about to expiry
          type: boolean
    ProductKeyStatusRequestRequest:
      description: The Product Key to validate
      required:
        - assetKey
        - productKey
      type: object
      properties:
        productKey:
          description: The product key
          type: string
          example: 5c99c760-4d11-4463-a211-937594d913d0
        assetKey:
          description: The asset key
          type: string
          example: 5c99c760-4d11-4463-a211-937594d913d0
    ProductKeyStatusResponseView:
      required:
        - valid
      type: object
      properties:
        valid:
          description: Is this product key valid?
          type: boolean
          example: true
    CreatePricingRuleRequest:
      description: The pricing rule to create
      required:
        - name
        - organizationId
        - ownerId
        - pricingProperties
        - script
      type: object
      properties:
        organizationId:
          description: The id of the organization the pricing rule belongs to
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner the pricing rule belongs to
          type: string
          example: 3kTMd
        name:
          description: The name of the pricing rule
          type: string
          example: Free Trial Pricing Rule
        script:
          description: The rule's pricing script
          type: string
          example: baseCost + properties['currentComputeCost']]
        pricingProperties:
          description: Dynamic properties associated with the pricing rule
          type: array
          items:
            $ref: '#/components/schemas/DynamicPricingPropertyRequest'
        defaultExecutionNote:
          description: The rule's default execution note
          type: string
          example: sample execution note
        target:
          description: >-
            The target of the result of the pricingrule evaluation (can be
            either charge or call_count)
          type: string
          example: CHARGE
    CreateFeatureRequest:
      description: The feature to create
      required:
        - description
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        description:
          description: A description of the feature
          type: string
          example: Access to Documentation
        ownerId:
          description: The id of the user that owns the feature
          type: string
          example: NsYmyL
        organizationId:
          description: Id of the organization that owns the feature
          type: string
          example: sBcTTs3
        name:
          description: The name of the feature
          type: string
          example: Documentation
    CreatePlanElementRequest:
      description: The plan element to create
      required:
        - distinctValue
        - elementDefinitionId
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        ownerId:
          description: The id of the user that owns the plan element
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the plan element
          type: string
          example: sBcTTs3
        name:
          description: The name of the plan element
          type: string
          example: Country
        elementDefinitionId:
          description: The id of the element definition of the plan element
          type: string
          example: sBcTTs3
        distinctValue:
          description: The distinct value of the plan element (case insensitive)
          type: string
          example: FRANCE
        flatAmount:
          description: Flat amount of the plan element
          type: number
          example: 34.33
    CreatePlanRequest:
      description: The plan to create
      required:
        - currency
        - elements
        - features
        - graduated
        - name
        - organizationId
        - ownerId
        - planType
        - setups
        - template
        - trialPeriodCount
      type: object
      properties:
        ownerId:
          description: The id of the user that owns the plan
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the plan
          type: string
          example: sBcTTs3
        name:
          description: The name of the plan
          type: string
          example: a plan
        graduated:
          description: >-
            Boolean that indicates if volume tiers are graduated or not. it
            defaults to true
          type: boolean
        template:
          description: >-
            Boolean that indicates if a plan is a template. a template plan
            cannot be attached to a product.
          type: boolean
        planType:
          description: The plan type, e.g. CHARGE, SUBSCRIPTION
          type: string
          example: SUBSCRIPTION
        charge:
          description: The charge for a charge type plan
          type: number
          example: 3243243
        currency:
          description: The plans currency
          type: string
          example: USD
        period:
          description: The plan period
          type: string
          example: MONTH
        periodCount:
          description: The period count of the plan
          type: integer
          format: int64
          example: 3
        trialPeriod:
          description: The plan trial period
          type: string
          example: MONTH
        trialPeriodCount:
          description: Trial period count of a subscription plan
          uniqueItems: true
          type: array
          example: 4
          items:
            $ref: '#/components/schemas/CreateTierRequest'
        prePaySetups:
          description: >-
            Boolean that indicates if setupfees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
          type: boolean
        features:
          description: Features of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CreateFeatureRequest'
        elements:
          description: Elements of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CreatePlanElementRequest'
        setups:
          description: Setup fees of a plan
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CreateSetupFeeRequest'
    CreateSetupFeeRequest:
      description: Setup fees of a plan
      required:
        - name
        - organizationId
        - ownerId
        - type
      type: object
      properties:
        ownerId:
          description: The id of the user that owns the setup fee
          type: string
          example: NsYmyL
        organizationId:
          description: The id of the organization that owns the setup fee
          type: string
          example: sBcTTs3
        name:
          description: The name of the setup fee
          type: string
          example: Country
        type:
          description: The type of the setup fee
          type: string
          example: CUSTOMER
        flatAmount:
          description: Flat amount of the setup fee
          type: number
          example: 34.33
    CreatePaymentRequest:
      description: The payment configuration
      required:
        - productId
      type: object
      properties:
        productId:
          description: The product to create the payment for
          type: string
          example: 3kTMd
        userId:
          description: The user to create the payment for
          type: string
          example: 3kTMd
        assetId:
          description: The asset for the payment
          type: string
          example: 3kTMd
        productKeyId:
          description: The product key for the payment
          type: string
          example: 3kTMd
        productKeyDescription:
          description: The product key description
          type: string
          example: dummy product key
        applicationExternalId:
          description: The external id for application
          type: string
          example: 3kTMd
        externalUserId:
          description: The external id for user
          type: string
          example: 3kTMd
        userEmailAddress:
          description: The email address for user
          type: string
        billingAddressLine1:
          description: Line 1 of billing address
          type: string
          example: 3343 abc street
        billingAddressLine2:
          description: Line 2 of billing address
          type: string
          example: 3343 abc street
        billingAddressCity:
          description: Billing address city
          type: string
          example: New York
        billingAddressState:
          description: Billing address state
          type: string
          example: New York
        billingAddressPostalCode:
          description: Billing address postal code
          type: string
          example: '23214'
        billingAddressCountryCode:
          description: Billing address country code
          type: string
          example: US
        companyName:
          description: Company name
          type: string
          example: Acme
        applicationName:
          description: Application name
          type: string
          example: Acme
    CreateBillingAddressRequest:
      description: Billing address data container
      required:
        - city
        - countryCode
        - line1
        - postalCode
        - state
      type: object
      properties:
        line1:
          description: Line 1 of billing address
          type: string
          example: 3343 abc street
        line2:
          description: Line 2 of billing address
          type: string
          example: 3343 abc street
        city:
          description: Billing address city
          type: string
          example: New York
        state:
          description: Billing address state
          type: string
          example: New York
        postalCode:
          description: Billing address postal code
          type: string
          example: '23214'
        countryCode:
          description: Billing address postal country code
          type: string
          example: US
    CreatePaymentCustomerRequest:
      description: The payment configuration
      required:
        - paymentConfigurationId
        - userId
      type: object
      properties:
        userId:
          description: The user to create the payment customer for
          type: string
          example: 3kTMd
        paymentConfigurationId:
          description: The payment configuration for the payment customer
          type: string
          example: 3kTMd
        billingAddress:
          $ref: '#/components/schemas/CreateBillingAddressRequest'
    CreatePaymentConfigurationRequest:
      description: The payment configuration
      required:
        - configurationProperties
        - name
        - organizationId
        - ownerId
        - paymentProvider
        - tax
      type: object
      properties:
        name:
          description: The name of the payment configuration
          type: string
          example: Stripe Configuration (Production)
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        paymentProvider:
          description: The payment provider
          type: string
          example: STRIPE
        tax:
          description: The tax status for payment configuration
          type: string
          example: INCLUSIVE
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
        testModeEnabled:
          description: Indicator that test mode is enabled, defaults to false
          type: boolean
          example: false
    CreatePaymentRequestRequest:
      description: The create payment request
      required:
        - productId
        - userId
      type: object
      properties:
        productId:
          description: The product to create the payment for
          type: string
          example: 3kTMd
        userId:
          description: The user to create the payment for
          type: string
          example: 3kTMd
        assetId:
          description: The asset for the payment
          type: string
          example: 3kTMd
        productKeyId:
          description: The product key for the payment
          type: string
          example: 3kTMd
        productKeyDescription:
          description: The product key description
          type: string
          example: dummy product key
        applicationExternalId:
          description: The external id for application
          type: string
          example: 3kTMd
        applicationName:
          description: The application name
          type: string
        companyName:
          description: The company name
          type: string
        externalUserId:
          description: The external id for user
          type: string
          example: 3kTMd
        userEmailAddress:
          description: The email address for user
          type: string
        billingAddress:
          $ref: '#/components/schemas/CreateBillingAddressRequest'
    PaymentRecordSummaryView:
      description: A summary report on current status of Payment
      required:
        - asset
        - id
        - paymentConfiguration
        - paymentEvents
        - paymentLogs
        - paymentProvider
        - product
        - productName
        - recordType
        - status
        - user
      type: object
      properties:
        id:
          description: Unique id of the payment record
          type: string
          example: 3kTMd
        product:
          description: The product
          type: string
        productName:
          description: The product's name
          type: string
        user:
          $ref: '#/components/schemas/UserView'
        asset:
          $ref: '#/components/schemas/AssetView'
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        paymentProvider:
          description: The payment provider
          type: string
        paymentConfiguration:
          $ref: '#/components/schemas/PaymentConfigurationView'
        status:
          description: The status of the payment
          type: string
          example: payment_intent.succeeded
        recordType:
          description: The payment record type
          type: string
          enum:
            - SUBSCRIPTION
            - ONETIME
            - STANDALONE
        paymentEvents:
          description: A list of payment events
          type: array
          items:
            $ref: '#/components/schemas/PaymentEventView'
        paymentLogs:
          description: A list of payment logs
          type: array
          items:
            $ref: '#/components/schemas/PaymentLogView'
    PaymentView:
      description: Payment View
      required:
        - paymentCustomer
        - paymentRecordData
      type: object
      properties:
        paymentRecordData:
          $ref: '#/components/schemas/PaymentRecordSummaryView'
        paymentCustomer:
          $ref: '#/components/schemas/PaymentCustomerView'
        clientSecret:
          description: Client secret for a new payment method
          type: string
    CreateOrganizationDto:
      description: The organization
      required:
        - domainAliases
        - name
        - tenantId
      type: object
      properties:
        name:
          description: The name of the organization
          maxLength: 50
          minLength: 2
          type: string
          example: Marketing
        tenantId:
          description: The Id of the Tenant this organization belongs to
          type: string
          example: B0NV05
        parentId:
          description: The id of the parent organization
          type: string
          example: B0NV05
        invoiceNotificationTemplate:
          description: Invoice notification template location
          type: string
        invoiceTemplate:
          description: Invoice template location
          type: string
        productKeyCreationNotificationTemplate:
          description: Product key creation template location
          type: string
        productKeyUpgradeNotificationTemplate:
          description: Product Key upgrade template location
          type: string
        productKeyQuotaNotificationTemplate:
          description: Product Key quota notification template location
          type: string
        productKeyTierQuotaNotificationTemplate:
          description: Product key tier quota notification template location
          type: string
        emailFromAddress:
          description: >-
            The sender address for notifications generated from this
            Organization (note: requires coordination with the Revenium team to
            setup the appropriate DKIM DNS records
          type: string
        domainAliases:
          description: >-
            Email domains associated with this organization (ie, acmesoft.org,
            acmesoft.io, etc)
          type: array
          example:
            - acmesoft.org
            - acmesoft.io
          items:
            description: >-
              Email domains associated with this organization (ie, acmesoft.org,
              acmesoft.io, etc)
            type: string
            example: '["acmesoft.org","acmesoft.io"]'
        address1:
          description: Address (Line 1)
          type: string
        address2:
          description: Address (Line 2)
          type: string
        city:
          description: City
          type: string
        state:
          description: State
          type: string
        country:
          description: The country)
          type: string
        postalCode:
          description: PostalCode
          type: string
        phoneNumber:
          description: PhoneNumber
          type: string
        emailAddress:
          description: EmailAddress
          type: string
        instructionText:
          description: The instruction)
          type: string
        helpText:
          description: The help text
          type: string
        billingEmail:
          description: The billing email address
          type: string
        billingPhoneNumber:
          description: The billing phone number
          type: string
        url:
          description: The URL
          type: string
        logo:
          description: The Organization's logo
          type: string
        externalId:
          description: >-
            An external identifier (e.g. in a API Management system) that is
            associated with the Organization
          type: string
          example: 12345abcd
        assetAutoDiscoveryEnabled:
          description: Whether asset auto discovery is enabled or not
          type: boolean
        currency:
          description: The currency of the organization
          type: string
    CreateNotificationProviderConfigurationRequest:
      description: The notificationprovider configuration
      required:
        - configurationProperties
        - name
        - notificationProviderProvider
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          description: The name of the notification provider configuration
          type: string
          example: Snowflake (Production)
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        notificationProviderProvider:
          description: The notification provider
          type: string
          example: MULESOFT
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    CreateRefundRequest:
      description: Issue a refund
      required:
        - amount
        - productKeyId
      type: object
      properties:
        productKeyId:
          description: The id of the product key to issue the refund to
          type: string
          example: 3kTMd
        amount:
          description: The amount to be refunded
          type: number
          example: 100
        notes:
          description: Notes to give any information to why the credit was refunded
          type: string
          example: Customer requested a refund
    CreatePaymentReceivedRequest:
      description: The received payment  to create
      required:
        - amount
        - currency
        - invoiceId
        - paymentDate
        - payment_method
      type: object
      properties:
        paymentDate:
          description: Date of the payment
          type: integer
          format: int64
        currency:
          description: The currency for the payment
          type: string
          example: USD
        amount:
          description: The amount for the payment
          type: number
          example: 18.25
        invoiceId:
          description: The asset for the payment
          type: string
          example: 3kTMd
        payment_method:
          description: The method used for the payment
          type: string
          example: CARD
    CreateLineItemRequest:
      description: The line item to create
      required:
        - assetId
        - callCount
        - productKey
        - resource
        - timestamp
      type: object
      properties:
        productKey:
          description: The product key used in the transaction
          type: string
          example: bb8f0656-0f9b-4f30-a461-5c0be94055f1
        application:
          description: The application used in the transaction
          type: string
          example: bb8f0656-0f9b-4f30-a461-5c0be94055f1
        assetId:
          description: The id of the asset used in the transaction
          type: string
          example: bb8f0656-0f9b-4f30-a461-5c0be94055f1
        timestamp:
          description: The transaction record time of the line item
          type: integer
          format: int64
          example: 1585104831000
        callCount:
          description: The amount of times the asset was called
          type: integer
          format: int64
          example: 5
        resource:
          description: The resource of the asset being called
          type: string
          example: /api/widgets
        paymentProvider:
          description: The payment provider
          type: string
          example: STRIPE
        elementDTO:
          description: ElementDTOs for the line item
          type: array
          items:
            $ref: '#/components/schemas/ElementDTO'
    ElementDTO:
      description: Dynamic metering elements
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
          example: container-number
        value:
          type: string
          example: '1234'
    CreateIdentityProviderConfigurationRequest:
      description: The Identity Provider Configuration
      required:
        - configurationProperties
        - identityProviderProvider
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          description: The name of the identity provider configuration
          type: string
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        identityProviderProvider:
          description: The identity provider
          type: string
          example: AUTH0
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    CreateExportConfigurationRequest:
      description: The export configuration
      required:
        - configurationProperties
        - exportProvider
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          description: The name of the export configuration
          type: string
          example: SAP Email
        organizationId:
          description: The id of the organization associated with the export configuration
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the user who owns the export configuration
          type: string
          example: 3kTMd
        exportProvider:
          description: The export provider
          type: string
          example: EMAIL
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    ElementDefinitionCreateRequest:
      required:
        - elementDescription
        - name
        - organizationId
        - type
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - STRING
            - NUMBER
        organizationId:
          type: string
        elementDescription:
          type: string
    DemoPricingRulesDSLRequest:
      description: Demo pricing rules dsl
      required:
        - demoLineItemDTO
        - ruleScript
      type: object
      properties:
        demoLineItemDTO:
          description: The demo line item sample data dto
          type: string
        ruleScript:
          description: The rule's pricing script
          type: string
          example: baseCost + properties['currentComputeCost']]
    DemoPricingRuleResultView:
      description: Demo Pricing Rules DSL DTO
      required:
        - executionNote
        - result
        - status
      type: object
      properties:
        status:
          description: Status of pricing rule evaluation against demo data
          type: string
        result:
          description: >-
            Result of evaluating pricing rule against demo data, will be charge
            amount or error message
          type: array
          items:
            description: >-
              Result of evaluating pricing rule against demo data, will be
              charge amount or error message
            type: string
        executionNote:
          description: Execution notes
          type: array
          items:
            description: Execution notes
            type: string
    CreateConsumerDataProviderConfigurationRequest:
      description: The consumer data provider configuration
      required:
        - configurationProperties
        - consumerDataProviderProvider
        - createSQL
        - name
        - organizationId
        - ownerId
        - querySQL
      type: object
      properties:
        name:
          description: The name of the consumer data provider configuration
          type: string
          example: Snowflake (Production)
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        consumerDataProviderProvider:
          description: The consumer data provider
          type: string
          example: SNOWFLAKE
        configurationProperties:
          description: Configuration properties for the consumer data provider
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
        createSQL:
          description: The billing table schema creation sql
          type: string
        querySQL:
          description: The billing table schema query sql
          type: string
    CreateCommunicationRequest:
      description: The communication
      required:
        - content
        - organizationId
        - recipient
        - subject
      type: object
      properties:
        subject:
          description: The subject of the communication
          type: string
          example: Product Access Request
        content:
          description: The content of the communication
          type: string
          example: |2-

                        Hello, 
                        
                        Please provide access to this Product
                    
        recipient:
          description: The recipient of the communication
          type: string
          example: john.wick@hypercurrent.io
        organizationId:
          description: The id of the organization that owns the communication
          type: string
          example: john.wick@hypercurrent.io
    AcceptTermsRequest:
      required:
        - acceptanceTimestamp
        - ipAddress
        - signedDocumentUrl
        - userEmail
      type: object
      properties:
        userEmail:
          type: string
        acceptanceTimestamp:
          type: string
          format: date-time
        signedDocumentUrl:
          type: string
        ipAddress:
          type: string
    CreateBillingMetadataRequest:
      description: The billing metadata to create
      required:
        - name
        - organizationId
        - target
        - type
        - value
      type: object
      properties:
        organizationId:
          description: The id of the organization
          type: string
        name:
          description: The name of the billing metadata
          type: string
        value:
          description: The value of the billing metadata
          type: string
        target:
          description: The target of the billing metadata (either INVOICE or LINE_ITEM)
          type: string
        type:
          description: The type of the billing metadata (either STRING or NUMBER)
          type: string
    CreateAssetRequest:
      description: The asset to create
      required:
        - applicationAutoDiscoveryEnabled
        - assetType
        - classificationPatterns
        - elementDefinitionIds
        - name
        - organizationId
        - ownerId
        - productIds
        - properties
        - slaDefinitionIds
        - tags
        - version
      type: object
      properties:
        tags:
          description: A list of tags associated with this asset.
          type: array
          example:
            - tag1
            - tag2
            - tag3
          items:
            description: A list of tags associated with this asset.
            type: string
            example: '["tag1","tag2","tag3"]'
        version:
          description: The asset's version
          type: string
          example: 1.0.0
        assetType:
          description: The type of the asset
          type: string
          example: API
        accountId:
          description: The account id of the asset
          type: string
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        ownerId:
          description: The id of the user that owns the asset
          type: string
          example: NsYmyL
        name:
          description: The name of the asset
          type: string
          example: my-awesome-asset
        the description of the asset:
          type: string
          example: Truly an awesome asset
        organizationId:
          description: The id of the organization that owns the asset
          type: string
          example: sBcTTs3
        productIds:
          description: A list of product ids associated with this asset.
          type: array
          example:
            - sQYmyQ
            - jQYkyl
            - a92j3
          items:
            description: A list of product ids associated with this asset.
            type: string
            example: '["sQYmyQ","jQYkyl","a92j3"]'
        slaDefinitionIds:
          description: A list of sla definition ids associated with this asset.
          type: array
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            description: A list of sla definition ids associated with this asset.
            type: string
            example: '["3kTMd","K3TMs","mmTFd"]'
        properties:
          description: Properties associated with the asset
          type: array
          items:
            $ref: '#/components/schemas/AssetPropertyRequest'
        externalId:
          description: >-
            An external identifier (ie, in a api management system) that is
            associated with the asset
          type: string
          example: 12345abcd
        code:
          description: The asset code
          type: string
          example: '1234'
        resource:
          description: The asset's resource
          type: string
          example: /api/products
        method:
          description: The asset's http method (if applicable)
          type: string
          example: POST
        applicationAutoDiscoveryEnabled:
          description: Whether application auto discovery is enabled or not
          type: boolean
        classificationPatterns:
          description: The asset classification patterns
          type: array
          items:
            $ref: '#/components/schemas/AssetClassificationPattern'
        elementDefinitionIds:
          description: The element definition ids to associate with this asset
          type: array
          items:
            description: The element definition ids to associate with this asset
            type: string
        logo:
          description: The Assets' logo
          type: string
        devPortalLink:
          description: The devPortalLink of the asset
          type: string
          example: http://url.com
    CreateApplicationRequest:
      description: The API key request
      required:
        - consumerOrganizationName
        - externalId
        - identityProviderName
        - name
        - organizationId
        - organizationName
        - productKeyIds
        - tags
        - userEmailAddress
        - userId
      type: object
      properties:
        tags:
          description: 'A list of tags associated with this application. '
          type: array
          example:
            - tag1
            - tag2
            - tag3
          items:
            description: 'A list of tags associated with this application. '
            type: string
            example: '["tag1","tag2","tag3"]'
        name:
          description: The name of the application
          type: string
          example: My Mobile App
        organizationId:
          description: The identifier of the organization associated with the application
          type: string
          example: aSjk123
        organizationName:
          description: The name of the organization associated with the application
          type: string
          example: Acme Financial, Inc
        userId:
          description: The identifier of the user associated with the application
          type: string
          example: aSjk123
        userEmailAddress:
          description: The email address of the user associated with the application
          type: string
          example: aSjk123
        externalId:
          description: >-
            The identifier of the application in an external system (generally a
            clientid in an idp)
          type: string
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
        productKeyIds:
          description: The product keys this application is associated with
          type: array
          example: '[''aca234'', ''aBsSqs'', ''1sDzsd'']'
          items:
            description: The product keys this application is associated with
            type: string
            example: '[''aca234'', ''aBsSqs'', ''1sDzsd'']'
        consumerOrganizationId:
          description: Unique id of the consuming organization the application belongs to
          type: string
          example: sa3kaL
        consumerOrganizationName:
          description: >-
            The name of the consuming organization associated with the
            application
          type: string
          example: Acme Financial, Inc
        identityProviderName:
          description: The name of the identity provider associated with the application
          type: string
          example: aSjk123
    CreateAPIMConfigurationRequest:
      description: The API management configuration
      required:
        - apimProvider
        - configurationProperties
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          description: The name of the api management configuration
          type: string
          example: Gravitee (Production)
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        apimProvider:
          description: The API management provider
          type: string
          example: GRAVITEE
        configurationProperties:
          description: Configuration properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
        authenticationMechanism:
          description: The authentication mechanism
          type: string
          example: CONNECTED_APP
    CreateAPIRequest:
      description: The API Key request
      required:
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        ownerId:
          description: The id of the owner
          type: string
          example: 3kTMd
        organizationId:
          description: The id of the organization
          type: string
          example: 3kTMd
        name:
          description: The API key name
          type: string
          example: Acme Integration Key
    UnsuspendTenant:
      description: The UnsuspendTenantRequest
      required:
        - tenantId
      type: object
      properties:
        tenantId:
          type: string
    SuspendTenant:
      description: The SuspendTenantRequest
      required:
        - tenantId
      type: object
      properties:
        tenantId:
          type: string
    CreateAccountTierRequest:
      description: The account tier request
      required:
        - accountTierType
        - selfServiceIncludedEvents
      type: object
      properties:
        accountTierType:
          description: Name of the account tier
          type: string
        selfServiceIncludedEvents:
          description: Number of events included in self service
          type: integer
          format: int64
    UserWithInvoiceView:
      description: A user with expanded invoice values
      required:
        - account
        - administeredOrganizations
        - administeredTenants
        - emailAddress
        - firstName
        - id
        - invoiceRollup
        - isActive
        - lastName
        - organizations
        - password
        - personas
        - roles
        - username
      type: object
      properties:
        id:
          description: Unique identifier of the user
          type: string
          example: 3kTMd
        username:
          description: The username
          type: string
          example: gabe
        firstName:
          description: The first name
          type: string
          example: gabe
        lastName:
          description: The last name
          type: string
          example: gabe
        emailAddress:
          description: The email address
          type: string
          example: gabe@pipedpiper.com
        password:
          description: The obfuscated password
          type: string
          example: '***********'
        isActive:
          description: Whether or not the User is active
          type: boolean
          example: true
        organizations:
          description: The Organizations the User belongs to
          type: array
          items:
            $ref: '#/components/schemas/OrganizationView'
        roles:
          description: The roles granted to the user
          type: array
          example:
            - ROLE_ADMIN
            - ROLE_API_CONSUMER
          items:
            description: The roles granted to the user
            type: string
            example: '["ROLE_ADMIN","ROLE_API_CONSUMER"]'
        account:
          description: The unique account identifier associated with the user
          type: string
          example: 8897e662-f1de-4404-944b-6b88434e7511
        invoiceRollup:
          description: The total amount spent across invoices
          type: number
          format: double
          example: 1500000
        administeredOrganizations:
          description: The Organizations the User is an administrator of
          type: array
          items:
            $ref: '#/components/schemas/OrganizationView'
        administeredTenants:
          description: The Tenants the User is an administrator of
          type: array
          items:
            $ref: '#/components/schemas/TenantView'
        personas:
          description: The personas granted to the user
          type: array
          example:
            - CIO
            - Platform Owner
          items:
            description: The personas granted to the user
            type: string
            example: '["CIO","Platform Owner"]'
    NotificationSourceView:
      description: Shows a NotificationSource
      required:
        - source
      type: object
      properties:
        source:
          description: Error Message for API use
          type: string
          example: This is an invalid key
    IsotopeCommand:
      description: The isotope command
      required:
        - command
      type: object
      properties:
        command:
          description: The Isotope command
          type: string
          example: >-
            curl -sSL
            https://raw.githubusercontent.com/hypercurrentio/isotope-files/main/install_and_run.sh
            | sudo bash -s -- 8080 hak_foo
    TrafficAnomalyView:
      required:
        - applicationId
        - applicationName
        - assetId
        - assetName
        - category
        - productId
        - productKeyId
        - productKeyName
        - productName
        - resource
        - timestamp
        - transactionId
        - type
      type: object
      properties:
        timestamp:
          description: The timestamp the traffic anomaly was recorded at
          type: integer
          format: int64
          example: 1682362487000
        transactionId:
          description: The unique identifier of the anomaly
          type: string
          example: 0d3d5351-e9b1-408e-bed0-945e14a85da4
        assetId:
          description: The ID of the Asset associated with the traffic anomaly
          type: string
          example: 0d3d5351-e9b1-408e-bed0-945e14a85da4
        assetName:
          description: The name of the Asset associated with the traffic anomaly
          type: string
          example: My Asset
        productId:
          description: The ID of the Asset associated with the traffic anomaly
          type: string
          example: gh542a
        productName:
          description: The name of the product associated with the traffic anomaly
          type: string
          example: My Product
        productKeyId:
          description: The id of the product key associated with the traffic anomaly
          type: string
          example: sVc8ak
        productKeyName:
          description: The name of the product key associated with the traffic anomaly
          type: string
          example: My Product Key
        applicationId:
          description: The ID of the application associated with the traffic anomaly
          type: string
          example: 7xBjkq1
        applicationName:
          description: The name of the application associated with the traffic anomaly
          type: string
          example: My Asset
        resource:
          description: The resource associated with the traffic anomaly
          type: string
          example: /path
        category:
          description: The category the traffic anomaly
          type: string
          example: ASSET
        type:
          description: The type of anomaly detected
          type: string
          example: ERROR_RATE
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    TierPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/TierView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    NotificationUserView:
      description: The pk owners associated with this product
      required:
        - emailAddress
        - id
        - username
      type: object
      properties:
        id:
          description: The id of the user
          type: string
        username:
          description: The username of the user
          type: string
        emailAddress:
          description: The email address of the user
          type: string
    SpecificSubscriberNotificationView:
      required:
        - body
        - id
        - owners
        - selectedProducts
        - selectedProductsKeys
      type: object
      properties:
        id:
          type: string
        body:
          type: string
        owners:
          description: The pk owners associated with this product
          type: array
          items:
            $ref: '#/components/schemas/NotificationUserView'
        selectedProducts:
          description: The products selected by the user
          type: array
          items:
            description: The products selected by the user
            type: string
        selectedProductsKeys:
          description: The productsKeys selected by the user
          type: array
          items:
            $ref: '#/components/schemas/ProductKeyView'
    SLAViolationSummaryPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SLAViolationSummaryView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    SLAViolationSummaryView:
      description: A service level agreement violation
      required:
        - actual
        - consumer
        - consumerOrganizationId
        - consumerOrganizationName
        - currency
        - description
        - id
        - reviewed
        - rule
        - slaDefinition
        - timestamp
        - type
      type: object
      properties:
        description:
          description: Description of the SLA violation
          type: string
          example: Backend latency of 0.5 greater than 0.242 ms
        id:
          description: Unique identifier of the SLA violation
          type: string
          example: 3kTMd
        slaDefinition:
          description: The SLA definition
          type: string
          example: Gold Tier
        productKeyId:
          description: Unique id of the associated product key
          type: string
          example: 3kTMd
        productKeyName:
          description: Name of the associated product key
          type: string
          example: Weyland-Yutani Product Key
        consumer:
          description: The username of the consumer who was impacted by the SLA violation
          type: string
          example: user
        consumerOrganizationId:
          description: >-
            The ID of the consuming organization who was impacted by the SLA
            violation
          type: string
          example: 3kTMd
        consumerOrganizationName:
          description: >-
            The name of the consuming organization who was impacted by the SLA
            violation
          type: string
          example: Weyland-Yutani
        rule:
          description: The SLA rule that was violated
          type: string
          example: 300ms
        type:
          description: The type SLA rule that was violated
          type: string
          example: LATENCY
        actual:
          description: The actual value of SLA rule that was violated
          type: string
          example: '555'
        reviewed:
          description: Has the violation been reviewed?
          type: boolean
        timestamp:
          description: The violation timestamp
          type: integer
          format: int64
        currency:
          description: The currency of the Line Item
          type: string
    SLAWithSLAEnforcedView:
      description: A Service Level Agreement
      required:
        - id
        - product
        - slaDefinition
      type: object
      properties:
        id:
          description: Unique id of the SLA
          type: string
          example: 3kTMd
        product:
          $ref: '#/components/schemas/ProductView'
        slaDefinition:
          $ref: '#/components/schemas/SLADefinitionView'
    SLADefinitionPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SLADefinitionView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    SitePageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SiteView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductTrialView:
      description: Product Trial End Date For Client
      required:
        - productId
      type: object
      properties:
        subscriptionTrialEndDate:
          description: End date of subscription trial period
          type: integer
          format: int64
        productId:
          description: Unique identifier of the Product
          type: string
          example: 3kTMd
    PlanElementForProductSummaryView:
      description: List of plan elements
      required:
        - distinctValue
        - elementDefinition
        - id
        - name
      type: object
      properties:
        id:
          description: The id of the plan
          type: string
          example: sVc8ak
        name:
          description: The name of the plan element
          type: string
          example: Country
        elementDefinition:
          description: The element definition of the plan element
          type: string
        distinctValue:
          description: The distinct value of the plan element (case insensitive)
          type: string
          example: FRANCE
        flatAmount:
          description: Flat amount of the plan element
          type: number
          example: 34.33
    PlanForProductSummaryView:
      description: Summary view product plan
      required:
        - currency
        - elements
        - features
        - graduated
        - id
        - name
        - planType
        - setups
        - template
        - tiers
      type: object
      properties:
        id:
          description: The id of the plan
          type: string
          example: sVc8ak
        name:
          description: Name of the plan
          type: string
          example: enterprise plan
        planType:
          description: The plan type
          type: string
          example: SUBSCRIPTION
        charge:
          description: One time payment charge
          type: number
          example: 23344.77
        currency:
          description: The currency of the plan
          type: string
          example: USD
        period:
          description: The subscription plan period
          type: string
          example: MONTH
        periodCount:
          description: Period count of a subscription plan
          type: integer
          format: int64
          example: 4
        trialPeriod:
          description: The subscription plan trial period
          type: string
          example: MONTH
        trialPeriodCount:
          description: Trial Period count of a subscription plan
          type: integer
          format: int64
          example: 4
        graduated:
          description: >-
            Boolean that indicates if volume tiers are graduated or not. It
            defaults to true
          type: boolean
        template:
          description: >-
            Boolean that indicates if a plan is a template. A template plan
            cannot be attached to a product.
          type: boolean
        prePaySetups:
          description: >-
            Boolean that indicates if setupFees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
          type: boolean
        tiers:
          description: List of Plan tiers
          uniqueItems: true
          type: array
          example: 4
          items:
            $ref: '#/components/schemas/TierForProductView'
        elements:
          description: List of plan elements
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PlanElementForProductSummaryView'
        features:
          description: List of plan features
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FeatureView'
        setups:
          description: List of setup fees
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SetupFeeForProductSummaryView'
    ProductSummaryView:
      description: A product
      required:
        - account
        - assetIds
        - assetNames
        - audienceRestriction
        - baseCost
        - configurationProperties
        - cpqStaged
        - defaultQuota
        - defaultQuotaNotificationThreshold
        - displayPriority
        - id
        - isStaged
        - name
        - namedConsumers
        - namedOrganizationIds
        - namedOrganizationNames
        - overageRatePerTransaction
        - owner
        - paymentConfiguration
        - paymentConfigurationTax
        - pricingRules
        - productIds
        - productNames
        - settlementPeriod
        - slaIds
        - slaNames
        - syncedToGateway
        - transactionType
        - version
      type: object
      properties:
        description:
          description: The description of the product (HTML formatted)
          type: string
          example: <b>Truly an awesome product</b>
        version:
          description: The version of the product
          type: string
          example: 1.0.0
        id:
          description: Unique id of the product
          type: string
          example: 3kTMd
        name:
          description: The name of the product
          type: string
          example: my-awesome-product
        baseCost:
          description: The base transaction cost to access the product
          type: number
          example: 100
        overageRatePerTransaction:
          description: >-
            The subscription overage rate per transaction for products defined
            with  'SUBSCRIPTION_WITH_OVERAGE'
          type: number
        owner:
          description: The user that owns the product
          type: string
        account:
          description: The account ID
          type: string
          example: 23bf56cb-2df6-490e-a039-5755866e0c1c
        cpqStaged:
          description: Is the Product staged from a CPQ system?
          type: boolean
          example: true
        pricingRules:
          description: The list of pricing rules
          type: array
          items:
            description: The list of pricing rules
            type: string
        assetIds:
          description: The list of asset id's
          type: array
          items:
            description: The list of asset id's
            type: string
        assetNames:
          description: The list of asset names
          type: array
          items:
            description: The list of asset names
            type: string
        slaIds:
          description: The list of SLA IDs
          type: array
          items:
            description: The list of SLA IDs
            type: string
        slaNames:
          description: The list of SLA names
          type: array
          items:
            description: The list of SLA names
            type: string
        transactionType:
          description: The transaction type of the product
          type: string
          example: TRANSACTIONAL
        defaultQuota:
          description: >-
            The default transaction quota for Product Keys associated with this
            product
          type: integer
          format: int64
        defaultQuotaNotificationThreshold:
          description: >-
            The default percentage of quota consumption to exceed before sending
            a notification
          type: number
          format: double
        productIds:
          description: The list of product IDs
          type: array
          items:
            description: The list of product IDs
            type: string
        productNames:
          description: The list of product names
          type: array
          items:
            description: The list of product names
            type: string
        paymentConfiguration:
          description: The payment configuration
          type: string
        configurationProperties:
          description: Configuration Properties
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
        paymentConfigurationTax:
          description: Payment configuration tax
          type: string
          example: INCLUSIVE
        isStaged:
          description: Is Staged?
          type: boolean
          example: true
        terms:
          description: The terms and conditions
          type: string
        termsDisplayName:
          description: The terms and conditions display name
          type: string
        additionalTerms1:
          description: Additional terms and conditions
          type: string
        additionalTermsDisplayName1:
          description: Additional terms and conditions display name
          type: string
        additionalTerms2:
          description: Additional terms and conditions
          type: string
        additionalTermsDisplayName2:
          description: Additional terms and conditions display name
          type: string
        shortDescription:
          type: string
          example: Truly an awesome product
        settlementPeriod:
          description: >-
            The settlement period that determines when product charges are
            calculated for an invoice
          type: string
          example: '100'
        disableProductKeyOnPaymentFailed:
          description: Disable a product key if payment fails
          type: boolean
          example: true
        externalId:
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the product
          type: string
          example: 12345abcd
        displayPriority:
          description: The display priority of the product
          type: number
          format: double
          example: 1
        notifyClientOnInvoice:
          description: Notify client on invoice
          type: boolean
        notifyClientTrialAboutToExpire:
          description: Notify client that trial is about to expire
          type: boolean
        audienceRestriction:
          description: The audience restriction, if any, on a product
          type: string
          example: USER
        syncedToGateway:
          description: Whether or not the product is synchronized with an API Gateway
          type: boolean
        environment:
          description: The environment
          type: string
          example: Production
        externalGroupId:
          description: >-
            An external API group identifier (ie, in a API Management system)
            that is associated with the product
          type: string
          example: 12345abcd
        externalLabel:
          description: >-
            An external label for the product that is exposed in developer
            portal
          type: string
          example: 12345abcd
        environmentId:
          description: The environment for the product
          type: string
          example: Production
        apimConfigurationId:
          description: >-
            The ID of the API management configuration (if synchronizing this
            product with an external APIM)
          type: string
          example: 3kTMd
        namedConsumers:
          description: List of user email addresses who are allowed to access the product
          type: array
          items:
            description: List of user email addresses who are allowed to access the product
            type: string
        namedOrganizationIds:
          description: The product's named organizations
          type: array
          items:
            description: The product's named organizations
            type: string
        namedOrganizationNames:
          description: The product's named organizations
          type: array
          items:
            description: The product's named organizations
            type: string
        plan:
          description: The plan id of the product
          type: string
          example: 3kTMd
        subscriptionIncludedTransactions:
          description: >-
            The included transaction count for products defined with 
            'SUBSCRIPTION_WITH_OVERAGE'
          type: integer
          format: int64
        subscriptionAllowMidPeriodCancellation:
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
          type: boolean
        productLockedToV1:
          description: Product V1 Lock
          type: boolean
        planType:
          description: Type of product plan
          type: string
          enum:
            - SUBSCRIPTION
            - CHARGE
        planSummaryView:
          $ref: '#/components/schemas/PlanForProductSummaryView'
    SetupFeeForProductSummaryView:
      description: List of setup fees
      required:
        - id
        - name
        - type
      type: object
      properties:
        id:
          description: The id of the setup fee
          type: string
          example: sVc8ak
        name:
          description: The name of the setup fee
          type: string
          example: Country
        type:
          description: The type of the setup fee
          type: string
          example: CUSTOMER
        flatAmount:
          description: Flat amout of the setup fee
          type: number
          example: 34.33
    AssetSummaryPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AssetSummaryView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    AssetSummaryView:
      description: A summary of an Asset/Service being metered by the platform
      required:
        - accountId
        - assetType
        - id
        - name
        - organization
        - owner
        - products
        - syncedToGateway
        - tags
        - version
      type: object
      properties:
        tags:
          description: Tags associated with the asset
          type: array
          example:
            - tag1
            - tag2
          items:
            description: Tags associated with the asset
            type: string
            example: '["tag1","tag2"]'
        description:
          description: The description of the asset (HTML formatted)
          type: string
          example: <b>Truly an awesome product</b>
        version:
          description: The asset's version
          type: string
          example: 1.0.0
        id:
          description: The ID of the asset
          type: string
          example: sVc8ak
        name:
          description: The name of the asset
          type: string
          example: my-awesome-asset
        assetType:
          description: The type of the asset
          type: string
          example: API
        owner:
          description: The id of the user that owns the asset
          type: string
          example: aSn3sZ
        organization:
          description: The id of the organization that owns the asset
          type: string
          example: aSn3sZ
        accountId:
          description: The account id of the Asset
          type: string
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        products:
          description: A list of product names
          type: array
          example:
            - Product (Gold)
            - Product (Silver)
          items:
            description: A list of product names
            type: string
            example: '["Product (Gold)","Product (Silver)"]'
        environment:
          description: The environment
          type: string
          example: Production
        syncedToGateway:
          description: Whether or not the asset is synchronized with an API Gateway
          type: boolean
        resource:
          description: The asset's resource
          type: string
          example: /api/products
        method:
          description: The asset's method
          type: string
          example: GET
    ProductPagedResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductCountsView:
      description: Product asset counts
      required:
        - applicationCount
        - assetCount
        - productId
        - productKeyCount
        - productName
      type: object
      properties:
        productId:
          description: Unique id of the product
          type: string
          example: 3kTMd
        productName:
          description: Name of the product
          type: string
          example: An API product
        assetCount:
          description: Count of a products assets
          type: integer
          format: int64
          example: 1234
        productKeyCount:
          description: Count of a products product keys
          type: integer
          format: int64
          example: 1234
        applicationCount:
          description: Count of a products applications
          type: integer
          format: int64
          example: 1234
    ProductFamilySummaryView:
      description: Summary of a product family that can be used to group products
      required:
        - allowProductFamilyDowngrade
        - allowProductFamilyUpgrade
        - id
        - name
        - organization
        - owner
        - productFamilyTiers
      type: object
      properties:
        id:
          description: The ID of the product family
          type: string
          example: 3kTMd
        name:
          description: The name of the product family
          type: string
        owner:
          type: string
        organization:
          type: string
        allowProductFamilyDowngrade:
          description: Boolean to allow product family downgrade
          type: boolean
          example: true
        allowProductFamilyUpgrade:
          description: Boolean to allow product family upgrade
          type: boolean
          example: true
        productFamilyTiers:
          type: array
          items:
            $ref: '#/components/schemas/ProductFamilyTierSummaryView'
    ProductFamilyTierSummaryView:
      required:
        - The product of the product family tier
        - featuredTier
        - id
        - name
        - tierNumber
      type: object
      properties:
        id:
          description: The id of the product family tier
          type: string
          example: sVc8ak
        name:
          description: Name of the product family tier
          type: string
          example: enterprise tier
        tierNumber:
          description: The product family tier
          type: number
          format: double
          example: 2.3
        The product of the product family tier:
          type: string
        featuredTier:
          description: Flag to indicate if tier is featured
          type: boolean
          example: true
    ProductFamilySummaryPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductFamilySummaryView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductFamilyPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductFamilyView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    LineItemView:
      description: A line item charge as part of an invoice
      required:
        - asset
        - callCount
        - charge
        - currency
        - id
        - product
        - productKey
        - timestamp
        - type
      type: object
      properties:
        id:
          description: The ID of the line item
          type: string
          example: 3kTMd
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        product:
          $ref: '#/components/schemas/ProductView'
        type:
          description: The type of line item
          type: string
          example: TRANSACTIONAL
        asset:
          $ref: '#/components/schemas/AssetView'
        callCount:
          description: The amount of times the asset was invoked in the metered period
          type: integer
          format: int64
          example: 200
        charge:
          description: The amount charged in the metered period
          type: number
          format: double
          example: 200
        timestamp:
          description: The timestamp of when the line item was recorded
          type: integer
          format: int64
          example: 1654646301000
        chargeCalculationLog:
          $ref: '#/components/schemas/ChargeCalculationLogView'
        application:
          $ref: '#/components/schemas/ApplicationView'
        resource:
          description: The resource (URI) being associated with the line item
          type: string
        currency:
          description: The currency of the line item
          type: string
        tierName:
          description: The line item tier name'
          type: string
        tierUpTo:
          description: The line item tier up-to value
          type: integer
        tierStartingFrom:
          description: The line item tier from value
          type: integer
        tierUnitAmount:
          description: The line item tier unit amount
          type: number
        elementName:
          description: The line item element name
          type: string
        elementDistinctValue:
          description: The line item element distinct value
          type: number
    ProductKeyProjectedResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductKeyProjectedView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductKeyProjectedView:
      description: A product key to accessing an Product's Assets
      required:
        - assetIds
        - assetNames
        - client
        - created
        - deletionPending
        - description
        - domainAliases
        - id
        - key
        - namedConsumers
        - namedOrganizationsIds
        - organization
        - owner
        - planQuotas
        - productIds
        - productNames
        - productSettlementPeriods
        - quota
        - quotaConsumed
        - subscriptionIncludedTransactions
        - subscriptionQuotaCount
      type: object
      properties:
        description:
          description: A description
          type: string
          example: 'product key #1234'
        id:
          description: Unique identifier of the product key
          type: string
          example: 3kTMd
        valid:
          description: Is the key valid?
          type: boolean
          example: true
        owner:
          description: The owner of the product key
          type: string
        client:
          description: >-
            In the event the owner doesn't have an account an email address can
            be passed to create the account on the fly
          type: string
        organization:
          description: Name of the consuming organization
          type: string
          example: Gfk2aF
        productIds:
          description: The ids of the Products the ProductKey belongs to
          type: array
          items:
            description: The ids of the Products the ProductKey belongs to
            type: string
        productNames:
          description: The name of the Product the ProductKey belongs to
          type: array
          items:
            description: The name of the Product the ProductKey belongs to
            type: string
        productSettlementPeriods:
          description: The name of the settlement periods for the associated Products
          type: array
          items:
            description: The name of the settlement periods for the associated Products
            type: string
        assetIds:
          description: The ids of the Assets the ProductKey belongs to
          type: array
          items:
            description: The ids of the Assets the ProductKey belongs to
            type: string
        assetNames:
          description: The names of the Asset the ProductKey belongs to
          type: array
          items:
            description: The names of the Asset the ProductKey belongs to
            type: string
        quotaConsumed:
          description: The consumed quota associated with the product key
          type: integer
          format: int64
        quota:
          description: The optional transaction quota associated with the product key
          type: integer
          format: int64
        subscriptionQuotaCount:
          description: 'The subscriptionQuotaCount '
          type: integer
          format: int64
        subscriptionIncludedTransactions:
          description: 'The subscriptionIncludedTransactions '
          type: integer
          format: int64
        key:
          description: The key
          type: string
          example: 5c99c760-4d11-4463-a211-937594d913d0
        created:
          description: The creation timestamp
          type: integer
          format: int64
          example: 1651779724000
        deletionPending:
          description: >-
            Product key will be deleted soon, e.g. at the end of the current
            subscription period
          type: boolean
        subscriptionPeriodStartDate:
          description: Start date of current subscription period
          type: integer
          format: int64
        subscriptionPeriodEndDate:
          description: End date of current subscription period
          type: integer
          format: int64
        namedConsumers:
          description: List of user email addresses who are allowed to access the product
          type: array
          items:
            description: List of user email addresses who are allowed to access the product
            type: string
        namedOrganizationsIds:
          description: The product's named organizations
          type: array
          items:
            description: The product's named organizations
            type: string
        domainAliases:
          description: The list of domain aliases associated with the product key
          type: array
          items:
            description: The list of domain aliases associated with the product key
            type: string
        subscriptionAllowMidPeriodCancellation:
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
          type: boolean
        notifyClientTrialAboutToExpire:
          description: Whether or not to notify client when trial is about to expiry
          type: boolean
        subscriptionTrialEndDate:
          description: End date of subscription trial
          type: integer
          format: int64
        currency:
          description: Currency of products in productKey
          type: string
        planQuotas:
          description: A list of Plan Quotas for this Product Key
          type: array
          items:
            $ref: '#/components/schemas/PlanQuotaForProductKeyView'
    ProductKeyPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductKeyView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductKeyEventPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductKeyEventView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductKeyEventView:
      description: A product key event
      required:
        - asset
        - client
        - eventType
        - product
        - productKey
        - timestamp
      type: object
      properties:
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        product:
          $ref: '#/components/schemas/ProductView'
        asset:
          $ref: '#/components/schemas/AssetView'
        client:
          $ref: '#/components/schemas/UserView'
        eventType:
          description: The product key event type
          type: string
        remoteAddress:
          description: The address (if available) of the consumer utilizing the key
          type: string
        remoteUser:
          description: The user (if available) of the consumer utilizing the key
          type: string
        timestamp:
          description: The time the of the event
          type: integer
          format: int64
    PricingRulePageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PricingRuleView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PricingRuleExecutionLogPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PricingExecutionLogView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PlanPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PlanView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PlanElementPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PlanElementView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PaymentRecordPagedResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PaymentRecordView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    OrganizationPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageNotificationProviderConfigurationView:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/NotificationProviderConfigurationView'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    InvoiceView:
      description: A billing invoice for asset usage
      required:
        - currency
        - end
        - id
        - organization
        - start
        - timestamp
        - totalAmount
        - totalCalls
        - user
      type: object
      properties:
        id:
          description: Unique identifier of the invoice
          type: string
          example: 3kTMd
        user:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        totalCalls:
          description: Total amount of calls for the invoiced period
          type: integer
          format: int64
          example: 500
        totalAmount:
          description: Total charge invoiced for the invoiced period
          type: number
          format: double
          example: 1000
        totalRefunded:
          description: Total refunds for the invoiced period
          type: number
          format: double
          example: 1000
        totalAdjusted:
          description: Total adjusted amount for the invoiced period
          type: number
          format: double
          example: 1000
        start:
          description: Beginning timestamp of the invoiced period (milliseconds)
          type: integer
          format: int64
          example: 1584585647000
        end:
          description: Ending timestamp of the invoiced period (milliseconds)
          type: integer
          format: int64
          example: 1584585647000
        timestamp:
          description: Invoice generation timestamp (milliseconds)
          type: integer
          format: int64
          example: 1584585647000
        invoiceJobId:
          description: Invoice generation job identifier
          type: string
          example: '1584585647000'
        paymentProvider:
          description: Invoice payment provider
          type: string
          example: STRIPE
        paymentLog:
          $ref: '#/components/schemas/PaymentLogView'
        products:
          description: Products included in this invoice
          type: array
          items:
            $ref: '#/components/schemas/ProductView'
        paymentReceived:
          $ref: '#/components/schemas/PaymentReceivedView'
        currency:
          description: The currency
          type: string
          example: USD
    PaymentReceivedView:
      description: Payment received for this invoice
      type: object
      properties:
        id:
          description: Id of payment received
          type: string
        paymentDate:
          description: Date the payment was received
          type: integer
          format: int64
        amount:
          description: Amount received in the payment
          type: number
        currency:
          description: Currency type of the payment received
          type: string
        paymentMethod:
          description: Method used in payment received
          type: string
    RefundView:
      description: A refund applied to an invoice
      required:
        - amount
        - asset
        - currency
        - id
        - slaViolation
        - timestamp
      type: object
      properties:
        id:
          description: The id of the refund
          type: string
          example: 3kTMd
        slaViolation:
          $ref: '#/components/schemas/SLAViolationView'
        amount:
          type: number
          format: double
          example: 1000
        asset:
          $ref: '#/components/schemas/AssetView'
        timestamp:
          description: The timestamp of when the refund was issued
          type: integer
          format: int64
          example: 200
        notes:
          description: Notes to give any information to why the credit was refunded
          type: string
          example: Customer requested a refund
        currency:
          description: The currency of the line item
          type: string
    InvoiceViewPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    RefundViewPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/RefundView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ElementSummaryView:
      description: An ElementDefinition/Element being metered by the platform
      required:
        - count
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/ElementDefinitionView'
        distinctValue:
          description: Distinct value of element
          type: string
        count:
          description: Count of element
          type: integer
          example: 3
    TransactionView:
      required:
        - currency
        - id
        - timestamp
        - unmodifiedCharge
      type: object
      properties:
        id:
          description: The id of the line item
          type: string
          example: 3kTMd
        timestamp:
          description: The timestamp of when the line item was recorded
          type: integer
          format: int64
          example: 1635682849429
        productId:
          description: Product id that generated the line item
          type: string
          example: xd45fd
        productName:
          description: Product name that generated the line item
          type: string
          example: Acme Co Product
        productionKeyId:
          description: Product key id used for the line item
          type: string
        productionKeyName:
          description: Product key name used for the line item
          type: string
        ownerId:
          description: Product key owner id for the line Item
          type: string
        ownerEmailAddress:
          description: Product key owner email address for the line item
          type: string
        clientId:
          description: Product key client id for the line item
          type: string
        clientEmailAddress:
          description: Product key client email address for the line item
          type: string
        assetId:
          description: Asset id that was called under the product
          type: string
          example: xd45fd
        assetName:
          description: Asset that was called under the Product
          type: string
          example: Acme Co Hammer API
        assetType:
          description: Asset Type - API, etc
          type: string
          example: API
        applicationId:
          description: Application id that was called under the product
          type: string
          example: xd45fd
        applicationName:
          description: Application that was called under the product
          type: string
          example: Acme Co Application
        transactionType:
          description: Type of Transaction used for product
          type: string
          example: TRANSACTIONAL
        callCount:
          description: >-
            The amount of API calls being charged for before any Pricing Rules
            have been applied
          type: integer
          format: int64
          example: 100
        charge:
          description: Cost of the usage of the asset
          type: number
          example: 27
        chargeCalculationLogId:
          description: The charge calculation log contains all pricing rules execution logs
          type: string
        unmodifiedCharge:
          description: >-
            The amount charged in the metered period before any Pricing Rules
            have been applied
          type: number
          format: double
          example: 200
        resource:
          description: Line item Resource
          type: string
          example: PROFITSTREAM_SUBSCRIPTION_CHARGE
        currency:
          description: The currency of the transaction
          type: string
          example: USD
        tierId:
          description: The tierId of the transaction
          type: string
        tierName:
          description: The tier Name of the transaction
          type: string
        tierUnitAmount:
          description: The tier unit amount of the transaction
          type: number
        planElementId:
          description: The plan element id of the transaction
          type: string
        planElementName:
          description: The plan element name of the transaction
          type: string
        planElementFlatAmount:
          description: The plan element flat amount of the transaction
          type: number
        setupFeeId:
          description: The setup fee id of the transaction
          type: string
        setupFeeName:
          description: The setup fee name of the transaction
          type: string
        setupFeeType:
          description: The setup fee type of the transaction
          type: string
        setupFeeFlatAmount:
          description: The setup fee flat amount of the transaction
          type: number
        elements:
          description: Element aggregated
          type: array
          items:
            $ref: '#/components/schemas/ElementSummaryView'
        settlementPeriod:
          description: settlement period
          type: string
    TransactionViewPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/TransactionView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    LineItemPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/LineItemView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    AssetConsumerRollUpByChargeDTO:
      required:
        - total
        - username
      type: object
      properties:
        username:
          type: string
        total:
          type: number
          format: double
    AssetRollUpByChargeDTO:
      required:
        - total
        - url
      type: object
      properties:
        url:
          type: string
        total:
          type: number
          format: double
    FeaturePageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/FeatureView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ConnectivityValidationResponse:
      required:
        - message
        - result
      type: object
      properties:
        result:
          type: boolean
        message:
          type: string
    ConsumerDataProviderQueryView:
      description: A Data Provider Query
      required:
        - name
        - query
      type: object
      properties:
        name:
          description: The name of the Query
          type: string
          example: Default Query
        query:
          description: The SQL query
          type: string
          example: SELECT * from FOO
    CommunicationPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CommunicationView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    CommunicationView:
      description: A communication from a customer / prospect
      required:
        - content
        - organization
        - recipient
        - subject
      type: object
      properties:
        subject:
          description: The subject of the notification
          type: string
          example: Product Access Request
        content:
          description: The content of the notification
          type: string
          example: |2-

                        Hello, 
                        
                        Please provide access to this Product
                    
        recipient:
          description: The recipient of the notification
          type: string
          example: john.wick@hypercurrent.io
        organization:
          $ref: '#/components/schemas/OrganizationView'
    CommercePortalAcceptanceTermView:
      required:
        - The commerce portal acceptance term acceptance timestamp
        - The commerce portal acceptance term id
        - The commerce portal acceptance term ip where user signed the document
        - The commerce portal acceptance term signed document url
        - The commerce portal acceptance term user email who signed
      type: object
      properties:
        The commerce portal acceptance term id:
          type: string
          example: As3ft4
        The commerce portal acceptance term user email who signed:
          type: string
          example: As3ft4
        The commerce portal acceptance term acceptance timestamp:
          type: integer
          format: int64
          example: 123676433
        The commerce portal acceptance term signed document url:
          type: string
          example: path/url
        The commerce portal acceptance term ip where user signed the document:
          type: string
          example: 123.546.12.32
    InternalEventMetadata:
      description: Internal audit trail event metadata
      required:
        - operations
        - systems
      type: object
      properties:
        systems:
          description: The selectable systems
          type: array
          items:
            description: The selectable systems
            type: string
        operations:
          description: The selectable operations
          type: array
          items:
            description: The selectable operations
            type: string
    InternalSystemAuditTrail:
      required:
        - eventId
        - operation
        - organizationId
        - system
        - timestamp
      type: object
      properties:
        timestamp:
          description: 'The time the audit event occurred '
          type: integer
          format: int64
          example: 1685820793000
        eventId:
          description: The ID of the event
          type: string
          example: 3kTMd
        organizationId:
          description: 'The ID of the Organization the event belongs to '
          type: string
          example: 7akbMd
        system:
          description: The internal system being integrated with
          type: string
          example: GRAVITEE
        operation:
          description: The type of operation on the remote system
          type: string
          example: CREATE_API
        details:
          description: Additional details about the event
          type: string
          example: Created Balances API
    ExternalEventMetadata:
      description: External audit trail event metadata
      required:
        - operations
        - systems
      type: object
      properties:
        systems:
          description: The selectable systems
          type: array
          items:
            description: The selectable systems
            type: string
        operations:
          description: The selectable operations
          type: array
          items:
            description: The selectable operations
            type: string
    ExternalSystemAuditTrail:
      required:
        - eventId
        - operation
        - organizationId
        - system
        - timestamp
      type: object
      properties:
        timestamp:
          description: 'The time the audit event occurred '
          type: integer
          format: int64
          example: 1685820793000
        eventId:
          description: The ID of the event
          type: string
          example: 3kTMd
        organizationId:
          description: 'The id of the organization the event belongs to '
          type: string
          example: 7akbMd
        system:
          description: The external system being integrated with
          type: string
          example: GRAVITEE
        operation:
          description: The type of operation on the remote system
          type: string
          example: CREATE_API
        details:
          description: Additional details about the event
          type: string
          example: Created Balances API
    SLAViolationReportPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SLAViolationView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    AssetPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AssetView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ApplicationSummaryPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSummaryView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ApplicationSummaryView:
      required:
        - created
        - externalId
        - id
        - name
        - organization
        - productKeyIds
        - productKeyNames
        - tags
        - user
        - userId
      type: object
      properties:
        tags:
          description: Tags associated with the Asset
          type: array
          items:
            description: Tags associated with the Asset
            type: string
        id:
          description: Unique identifier of the Application
          type: string
          example: 3kTMd
        name:
          description: The name of the Application
          type: string
          example: My Mobile Application
        organization:
          description: The Organization associated with the Application
          type: string
        consumerOrganization:
          description: The consuming Organization the Application belongs to
          type: string
          example: sa3kaL
        userId:
          description: The ID of the user who owns this Application
          type: string
        user:
          description: The username of the user who owns this Application
          type: string
        externalId:
          description: The identifier of the Application in an external system
          type: string
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
        productKeyIds:
          type: array
          items:
            type: string
        productKeyNames:
          type: array
          items:
            type: string
        created:
          description: The creation timestamp
          type: integer
          format: int64
          example: 1651779724000
    ApplicationPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    APIKeyPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/APIKeyView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    MeteringRequestDTO:
      required:
        - elements
        - method
        - platformAPIKey
        - requestHeaders
        - responseCode
        - responseHeaders
      type: object
      properties:
        api:
          type: string
          example: 3c2c3d64-2f59-4642-9406-17d7fb5e2d5c
        productKey:
          description: The Product Key ID
          type: string
          example: 53546bb0-9014-11eb-a8b3-0242ac130003
        application:
          description: The Application ID
          type: string
          example: 53546bb0-9014-11eb-a8b3-0242ac130003
        method:
          description: The HTTP method being invoked
          type: string
          example: GET
        url:
          description: The HTTP URL being invoked
          type: string
          example: https://api.foo.com/v1/api
        metadata:
          description: >-
            Additional billing metadata (supports numeric values and
            comma-seperated key-value pairs)
          type: string
          example: '5.0'
        backendLatency:
          description: Backend API response time
          type: number
          format: double
          example: 0.05
        gatewayLatency:
          description: Latency introduced by the API GW
          type: number
          format: double
          example: 0.05
        responseCode:
          description: Backend HTTP response code
          type: integer
          format: int32
          example: 200
        timedOut:
          description: Whether or not the backend timed out
          type: boolean
          example: false
        requestMessageSize:
          description: The size of the API request in bytes
          type: integer
          format: int64
          example: 10000
        responseMessageSize:
          description: The size of the API response in bytes
          type: integer
          format: int64
          example: 10000
        requestHeaders:
          description: The comma seperated list of names of the headers in the request
          type: array
          example: 10000
          items:
            description: The comma seperated list of names of the headers in the request
            type: string
            example: '10000'
        responseHeaders:
          description: The comma seperated list of names of the headers in the response
          type: array
          example: 10000
          items:
            description: The comma seperated list of names of the headers in the response
            type: string
            example: '10000'
        userAgent:
          description: The HTTP User Agent
          type: string
          example: '10000'
        remoteUser:
          description: The Remote User
          type: string
          example: apiclient
        remoteHost:
          description: The Remote Host
          type: string
          example: api.acmesoft.com
        httpProtocol:
          description: The HTTP Protocol
          type: string
          example: HTTP/1.0
        contentType:
          description: The Content Type
          type: string
          example: application/json
        correlationId:
          description: The Correlation ID
          type: string
          example: e6e62ba0-94c1-466c-8921-52f9d6b84066
        platformAPIKey:
          description: platformAPIKey
          type: string
          example: hak-1234-20a033c6fbcb453ba9c797971c237080
        elements:
          description: Dynamic metering elements
          type: array
          items:
            $ref: '#/components/schemas/ElementDTO'
    ApiEventDTO:
      required:
        - responseCode
      type: object
      properties:
        requestId:
          type: string
        eventType:
          type: string
          enum:
            - REQUEST
            - RESPONSE
        assetId:
          type: string
        productKey:
          type: string
        application:
          type: string
        method:
          type: string
        currentMillis:
          type: integer
          format: int64
        uri:
          type: string
        elapsedTime:
          type: integer
          format: int64
        metadata:
          type: string
        responseCode:
          type: integer
          format: int32
        requestMessageSize:
          type: integer
          format: int64
        responseMessageSize:
          type: integer
          format: int64
        contentType:
          type: string
        remoteHost:
          type: string
        userAgent:
          type: string
        correlationId:
          type: string
        backendLatency:
          type: number
          format: double
        clientId:
          type: string
    UsersDeleteUserResponse:
      type: object
      properties: {}
      example: {}
    UsersDeleteUser403Response:
      type: object
      properties: {}
      example: {}
    UsersDeleteUser404Response:
      type: object
      properties: {}
      example: {}
    UsersGetUserResponse:
      type: object
      properties: {}
      example: {}
    UsersGetUser404Response:
      type: object
      properties: {}
      example: {}
    UsersUpdateUserOperationResponse:
      type: object
      properties: {}
      example: {}
    UsersDeactivateUserOperationResponse:
      type: object
      properties: {}
      example: {}
    UsersDeactivateUserOperation404Response:
      type: object
      properties: {}
      example: {}
    UsersActivateUserOperationResponse:
      type: object
      properties: {}
      example: {}
    UsersActivateUserOperation404Response:
      type: object
      properties: {}
      example: {}
    TrafficAnomaliesCreateRuleResponse:
      type: object
      properties: {}
      example: {}
    TrafficAnomaliesUpdateRuleResponse:
      type: object
      properties: {}
      example: {}
    TiersDeleteTierOperationResponse:
      type: object
      properties: {}
      example: {}
    TiersDeleteTierOperation403Response:
      type: object
      properties: {}
      example: {}
    TiersDeleteTierOperation404Response:
      type: object
      properties: {}
      example: {}
    TiersGetTierResponse:
      type: object
      properties: {}
      example: {}
    TiersGetTier404Response:
      type: object
      properties: {}
      example: {}
    TiersUpdateTierResponse:
      type: object
      properties: {}
      example: {}
    TiersUpdateTier404Response:
      type: object
      properties: {}
      example: {}
    TenantsDeleteTenantResponse:
      type: object
      properties: {}
      example: {}
    TenantsDeleteTenant404Response:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsCreateSubscriberNotificationResponse:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsUpdateSubscriberNotificationResponse:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsUpdateSubscriberNotification404Response:
      type: object
      properties: {}
      example: {}
    StoredFiltersDeleteFilterByIdResponse:
      type: object
      properties: {}
      example: {}
    StoredFiltersDeleteFilterById403Response:
      type: object
      properties: {}
      example: {}
    StoredFiltersDeleteFilterById404Response:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsDeleteDefinitionResponse:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsDeleteDefinition403Response:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsDeleteDefinition404Response:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsGetDefinitionResponse:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsGetDefinition404Response:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsUpdateSlaDefinitionResponse:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsUpdateSlaDefinition404Response:
      type: object
      properties: {}
      example: {}
    SitesListResponse:
      type: object
      properties: {}
      example: {}
    SitesList404Response:
      type: object
      properties: {}
      example: {}
    SitesCreateSiteResponse:
      type: object
      properties: {}
      example: {}
    SitesCreateSite404Response:
      type: object
      properties: {}
      example: {}
    SitesUpdateSiteResponse:
      type: object
      properties: {}
      example: {}
    SitesUpdateSite404Response:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsDeleteConfigurationResponse:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsDeleteConfiguration403Response:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsDeleteConfiguration404Response:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsGetConfigurationResponse:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsGetConfiguration404Response:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsUpdateConfigurationResponse:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsUpdateConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ProductsRemoveByIdResponse:
      type: object
      properties: {}
      example: {}
    ProductsRemoveById403Response:
      type: object
      properties: {}
      example: {}
    ProductsRemoveById404Response:
      type: object
      properties: {}
      example: {}
    ProductsGetByIdResponse:
      type: object
      properties: {}
      example: {}
    ProductsGetById404Response:
      type: object
      properties: {}
      example: {}
    ProductsUpdateProductByIdResponse:
      type: object
      properties: {}
      example: {}
    ProductsUpdateProductById404Response:
      type: object
      properties: {}
      example: {}
    ProductsRemoveTrialFromProductResponse:
      type: object
      properties: {}
      example: {}
    ProductsRemoveTrialFromProduct404Response:
      type: object
      properties: {}
      example: {}
    ProductFamilyDeleteOperationResponse:
      type: object
      properties: {}
      example: {}
    ProductFamilyDeleteOperation403Response:
      type: object
      properties: {}
      example: {}
    ProductFamilyDeleteOperation404Response:
      type: object
      properties: {}
      example: {}
    ProductFamilyGetByIdResponse:
      type: object
      properties: {}
      example: {}
    ProductFamilyGetById404Response:
      type: object
      properties: {}
      example: {}
    ProductFamilyUpdateFamilyOperationResponse:
      type: object
      properties: {}
      example: {}
    ProductFamilyUpdateFamilyOperation404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysUpgradeProductToResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysUpgradeProductTo403Response:
      type: object
      properties: {}
      example: {}
    ProductKeysUpgradeProductTo404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysDowngradeProductToResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysDowngradeProductTo403Response:
      type: object
      properties: {}
      example: {}
    ProductKeysDowngradeProductTo404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetKeyByIdResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysGetKeyById404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysUpdateKeyOperationResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysUpdateKeyOperation404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysReactivateKeyOperationResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysReactivateKeyOperation403Response:
      type: object
      properties: {}
      example: {}
    ProductKeysReactivateKeyOperation404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysForceResetKeyResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysForceResetKey403Response:
      type: object
      properties: {}
      example: {}
    ProductKeysForceResetKey404Response:
      type: object
      properties: {}
      example: {}
    PricingRulesDeleteRuleResponse:
      type: object
      properties: {}
      example: {}
    PricingRulesDeleteRule403Response:
      type: object
      properties: {}
      example: {}
    PricingRulesDeleteRule404Response:
      type: object
      properties: {}
      example: {}
    PricingRulesGetRuleByIdResponse:
      type: object
      properties: {}
      example: {}
    PricingRulesGetRuleById404Response:
      type: object
      properties: {}
      example: {}
    PricingRulesUpdateRuleByIdResponse:
      type: object
      properties: {}
      example: {}
    PricingRulesUpdateRuleById404Response:
      type: object
      properties: {}
      example: {}
    PlansDeletePlanResponse:
      type: object
      properties: {}
      example: {}
    PlansDeletePlan403Response:
      type: object
      properties: {}
      example: {}
    PlansDeletePlan404Response:
      type: object
      properties: {}
      example: {}
    PlansGetPlanResponse:
      type: object
      properties: {}
      example: {}
    PlansGetPlan404Response:
      type: object
      properties: {}
      example: {}
    PlansUpdatePlanByIdResponse:
      type: object
      properties: {}
      example: {}
    PlansUpdatePlanById404Response:
      type: object
      properties: {}
      example: {}
    PlansRemoveTrialOperationResponse:
      type: object
      properties: {}
      example: {}
    PlansRemoveTrialOperation404Response:
      type: object
      properties: {}
      example: {}
    ElementsDeletePlanElementResponse:
      type: object
      properties: {}
      example: {}
    ElementsDeletePlanElement403Response:
      type: object
      properties: {}
      example: {}
    ElementsDeletePlanElement404Response:
      type: object
      properties: {}
      example: {}
    ElementsGetByIdResponse:
      type: object
      properties: {}
      example: {}
    ElementsGetById404Response:
      type: object
      properties: {}
      example: {}
    ElementsUpdateElementByIdResponse:
      type: object
      properties: {}
      example: {}
    ElementsUpdateElementById404Response:
      type: object
      properties: {}
      example: {}
    PaymentOutstandingInvoicesResponse:
      type: object
      properties: {}
      example: {}
    PaymentOutstandingInvoices404Response:
      type: object
      properties: {}
      example: {}
    PaymentForceResetProductUserResponse:
      type: string
    PaymentMethodsPayOutstandingInvoicesResponse:
      type: object
      properties: {}
      example: {}
    PaymentMethodsSetDefaultMethodResponse:
      type: object
      properties: {}
      example: {}
    PaymentMethodsForceResetCustomerResponse:
      type: string
    PaymentMethodsForceResetCustomerForTestingResponse:
      type: string
    PaymentConfigurationsDeleteConfigurationResponse:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsDeleteConfiguration403Response:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsDeleteConfiguration404Response:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsGetConfigurationResponse:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsGetConfiguration404Response:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsUpdateConfigurationOperationResponse:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsUpdateConfigurationOperation404Response:
      type: object
      properties: {}
      example: {}
    PaymentGetProductKeyResponse:
      type: object
      properties: {}
      example: {}
    PaymentCancelProductPaymentResponse:
      type: object
      properties: {}
      example: {}
    OrganizationsRemoveByIdResponse:
      type: object
      properties: {}
      example: {}
    OrganizationsRemoveById404Response:
      type: object
      properties: {}
      example: {}
    OrganizationsGetOrganizationResponse:
      type: object
      properties: {}
      example: {}
    OrganizationsUpdateOrganizationOperationResponse:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationView'
    OrganizationsUpdateOrganizationOperation404Response:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsRemoveConfigurationResponse:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsRemoveConfiguration403Response:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsRemoveConfiguration404Response:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsGetByIdResponse:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsGetById404Response:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsUpdateConfigurationResponse:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsUpdateConfiguration404Response:
      type: object
      properties: {}
      example: {}
    NotificationCustomContentUpdateTemplateResponse:
      type: array
      items:
        $ref: '#/components/schemas/NotificationTemplateView'
    NotificationCustomContentUpdateTemplate404Response:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsDeleteProviderConfigResponse:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsDeleteProviderConfig403Response:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsDeleteProviderConfig404Response:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsGetConfigurationResponse:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsGetConfiguration404Response:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsUpdateProviderConfigResponse:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsUpdateProviderConfig404Response:
      type: object
      properties: {}
      example: {}
    FeaturesDeleteFeatureByIdResponse:
      type: object
      properties: {}
      example: {}
    FeaturesDeleteFeatureById403Response:
      type: object
      properties: {}
      example: {}
    FeaturesDeleteFeatureById404Response:
      type: object
      properties: {}
      example: {}
    FeaturesGetByIdResponse:
      type: object
      properties: {}
      example: {}
    FeaturesGetById404Response:
      type: object
      properties: {}
      example: {}
    FeaturesUpdateFeatureByIdResponse:
      type: object
      properties: {}
      example: {}
    FeaturesUpdateFeatureById404Response:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsDeleteConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsDeleteConfiguration403Response:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsDeleteConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsGetConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsGetConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsUpdateConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsUpdateConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ElementDefinitionsDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsDeleteConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsDeleteConfiguration403Response:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsDeleteConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsGetConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsGetConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsUpdateConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsUpdateConfiguration404Response:
      type: object
      properties: {}
      example: {}
    BillingMetadataDeleteOperationResponse:
      type: object
      properties: {}
      example: {}
    BillingMetadataDeleteOperation403Response:
      type: object
      properties: {}
      example: {}
    BillingMetadataDeleteOperation404Response:
      type: object
      properties: {}
      example: {}
    BillingMetadataUpdateOperationResponse:
      type: object
      properties: {}
      example: {}
    BillingMetadataUpdateOperation404Response:
      type: object
      properties: {}
      example: {}
    AssetsDeleteAssetResponse:
      type: object
      properties: {}
      example: {}
    AssetsDeleteAsset403Response:
      type: object
      properties: {}
      example: {}
    AssetsDeleteAsset404Response:
      type: object
      properties: {}
      example: {}
    AssetsGetByIdResponse:
      type: object
      properties: {}
      example: {}
    AssetsGetById404Response:
      type: object
      properties: {}
      example: {}
    AssetsUpdateAssetByIdResponse:
      type: object
      properties: {}
      example: {}
    AssetsUpdateAssetById404Response:
      type: object
      properties: {}
      example: {}
    ApplicationsListApplicationsResponse:
      type: object
      properties: {}
      example: {}
    ApplicationsListApplications404Response:
      type: object
      properties: {}
      example: {}
    ApplicationsCreateNewApplicationResponse:
      type: object
      properties: {}
      example: {}
    ApplicationsCreateNewApplication404Response:
      type: object
      properties: {}
      example: {}
    ApplicationsUpdateApplicationOperationResponse:
      type: object
      properties: {}
      example: {}
    ApplicationsUpdateApplicationOperation404Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsDeleteConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsDeleteConfiguration403Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsDeleteConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsGetConfigurationByIdResponse:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsGetConfigurationById404Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsUpdateConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsUpdateConfiguration404Response:
      type: object
      properties: {}
      example: {}
    AccountTiersListAllTiersResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersCreateAccountTierResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersUpdateTierOperationResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersUpgradeTierResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersSyncTierDataResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersSetDefaultPaymentMethodResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersDowngradeTierByIdResponse:
      type: object
      properties: {}
      example: {}
    UsersGetUserListResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserView'
    TiersListOwnedByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    TiersListOwnedByOrganization404Response:
      type: object
      properties: {}
      example: {}
    TiersCreateTierResponse:
      type: object
      properties: {}
      example: {}
    TiersCreateTier404Response:
      type: object
      properties: {}
      example: {}
    TenantsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/TenantView'
    TemplatesCreateTemplateResponse:
      type: object
      properties: {}
      example: {}
    TemplatesCreateTemplate403Response:
      type: object
      properties: {}
      example: {}
    TemplatesCreateTemplate404Response:
      type: object
      properties: {}
      example: {}
    SlaViolationsReviewActionResponse:
      type: object
      properties: {}
      example: {}
    SlaViolationsReviewAction404Response:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsGetByOrganizationResponse:
      type: array
      items:
        $ref: '#/components/schemas/SLADefinitionView'
    SlaDefinitionsGetByOrganization403Response:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsGetByOrganization404Response:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsCreateDefinitionResponse:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsCreateDefinition404Response:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SiteConfigurationView'
    SiteProviderConfigurationsList403Response:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsList404Response:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsCreateConsumerDataProviderConfigurationResponse:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsCreateConsumerDataProviderConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ProductsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductView'
    ProductsList403Response:
      type: object
      properties: {}
      example: {}
    ProductsList404Response:
      type: object
      properties: {}
      example: {}
    ProductsCreateProductResponse:
      type: object
      properties: {}
      example: {}
    ProductsCreateProduct404Response:
      type: object
      properties: {}
      example: {}
    ProductFamilyListOwnedByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    ProductFamilyListOwnedByOrganization404Response:
      type: object
      properties: {}
      example: {}
    ProductFamilyCreateNewFamilyResponse:
      type: object
      properties: {}
      example: {}
    ProductFamilyCreateNewFamily404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysCreateNewKeyResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysCreateNewKey403Response:
      type: object
      properties: {}
      example: {}
    ProductKeysCreateNewKey404Response:
      type: object
      properties: {}
      example: {}
    PricingRulesCreateRuleResponse:
      type: object
      properties: {}
      example: {}
    PricingRulesCreateRule404Response:
      type: object
      properties: {}
      example: {}
    PlansListOwnedByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    PlansListOwnedByOrganization404Response:
      type: object
      properties: {}
      example: {}
    PlansCreatePlanResponse:
      type: object
      properties: {}
      example: {}
    PlansCreatePlan404Response:
      type: object
      properties: {}
      example: {}
    ElementsListOwnedByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    ElementsListOwnedByOrganization404Response:
      type: object
      properties: {}
      example: {}
    ElementsCreatePlanElementResponse:
      type: object
      properties: {}
      example: {}
    ElementsCreatePlanElement404Response:
      type: object
      properties: {}
      example: {}
    PaymentInitiatePaymentOperationResponse:
      type: string
    PaymentInitiatePaymentOperation404Response:
      type: object
      properties: {}
      example: {}
    PaymentMethodsListCustomersResponse:
      type: array
      items:
        $ref: '#/components/schemas/PaymentCustomerView'
    PaymentMethodsListCustomers403Response:
      type: object
      properties: {}
      example: {}
    PaymentMethodsListCustomers404Response:
      type: object
      properties: {}
      example: {}
    PaymentMethodsAddNewMethodResponse:
      type: object
      properties: {}
      example: {}
    PaymentMethodsAddNewMethodOperationResponse:
      type: string
    PaymentMethodsAddNewMethodOperation404Response:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/PaymentConfigurationView'
    PaymentConfigurationsList403Response:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsList404Response:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsCreateConfigurationOperationResponse:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsCreateConfigurationOperation404Response:
      type: object
      properties: {}
      example: {}
    PaymentInitiateCheckoutPaymentResponse:
      type: object
      properties: {}
      example: {}
    OrganizationsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationView'
    OrganizationsGetList404Response:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsGetConfigurationPropertiesResponse:
      type: array
      items:
        $ref: '#/components/schemas/NotificationProviderConfigurationView'
    NotificationProviderConfigurationsCreateConfigurationResponse:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsCreateConfiguration404Response:
      type: object
      properties: {}
      example: {}
    InvoicesIssueRefundOperationResponse:
      type: object
      properties: {}
      example: {}
    InvoicesIssueRefundOperation403Response:
      type: object
      properties: {}
      example: {}
    InvoicesIssueRefundOperation404Response:
      type: object
      properties: {}
      example: {}
    InvoicesAddReceivedPaymentResponse:
      type: object
      properties: {}
      example: {}
    InvoicesAddReceivedPayment404Response:
      type: object
      properties: {}
      example: {}
    InvoicesSubmitLineItemResponse:
      type: object
      properties: {}
      example: {}
    InvoicesSubmitLineItem403Response:
      type: object
      properties: {}
      example: {}
    InvoicesSubmitLineItem404Response:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/IdentityProviderConfigurationView'
    IdentityProviderConfigurationsList403Response:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsList404Response:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsCreateProviderConfigResponse:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsCreateProviderConfig404Response:
      type: object
      properties: {}
      example: {}
    FeaturesListOrganizationFeaturesResponse:
      type: object
      properties: {}
      example: {}
    FeaturesListOrganizationFeatures404Response:
      type: object
      properties: {}
      example: {}
    FeaturesCreateFeatureResponse:
      type: object
      properties: {}
      example: {}
    FeaturesCreateFeature404Response:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsListExportConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ExportConfigurationView'
    ExportConfigurationsListExportConfigurations403Response:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsListExportConfigurations404Response:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsCreateConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsCreateConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ElementDefinitionsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ElementDefinitionView'
    ConsumerDataProviderConfigurationsListDataProviderConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
    ConsumerDataProviderConfigurationsListDataProviderConfigurations403Response:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsListDataProviderConfigurations404Response:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsCreateConfigurationOperationResponse:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsCreateConfigurationOperation404Response:
      type: object
      properties: {}
      example: {}
    CommunicationsListPaginatedCommunicationsResponse:
      type: object
      properties: {}
      example: {}
    CommunicationsListPaginatedCommunications404Response:
      type: object
      properties: {}
      example: {}
    CommunicationsCreateCommunicationResponse:
      type: object
      properties: {}
      example: {}
    CommunicationsCreateCommunication403Response:
      type: object
      properties: {}
      example: {}
    CommercePortalAcceptanceTermsGetTermsResponse:
      type: array
      items:
        $ref: '#/components/schemas/CommercePortalAcceptanceTermView'
    BillingMetadataListByOrganizationResponse:
      type: array
      items:
        $ref: '#/components/schemas/BillingMetadataView'
    BillingMetadataListByOrganization403Response:
      type: object
      properties: {}
      example: {}
    BillingMetadataCreateOperationResponse:
      type: object
      properties: {}
      example: {}
    BillingMetadataCreateOperation404Response:
      type: object
      properties: {}
      example: {}
    AssetsListOwnedByUserResponse:
      type: object
      properties: {}
      example: {}
    AssetsListOwnedByUser404Response:
      type: object
      properties: {}
      example: {}
    AssetsCreateAssetResponse:
      type: object
      properties: {}
      example: {}
    AssetsCreateAsset404Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/APIMConfigurationView'
    ApiManagementConfigurationsList403Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsList404Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsCreateApiConfigurationResponse:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsCreateApiConfiguration404Response:
      type: object
      properties: {}
      example: {}
    ApiKeysListResponse:
      type: object
      properties: {}
      example: {}
    ApiKeysList404Response:
      type: object
      properties: {}
      example: {}
    ApiKeysCreateApiKeyResponse:
      type: object
      properties: {}
      example: {}
    ApiKeysCreateApiKey404Response:
      type: object
      properties: {}
      example: {}
    AdminUnsuspendTenantResponse:
      type: object
      properties: {}
      example: {}
    AdminSuspendTenantResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersGetPaymentMethodsResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersLoadPaymentMethodsResponse:
      type: object
      properties: {}
      example: {}
    UsersGetCurrentAuthenticatedUserResponse:
      type: array
      items:
        $ref: '#/components/schemas/NotificationSourceView'
    TrafficAnomaliesListResponse:
      type: object
      properties: {}
      example: {}
    TrafficAnomaliesList404Response:
      type: object
      properties: {}
      example: {}
    TiersListPagedResponse:
      type: object
      properties: {}
      example: {}
    TiersListPaged404Response:
      type: object
      properties: {}
      example: {}
    TenantsListPaginatedTenantsResponse:
      type: object
      properties: {}
      example: {}
    TagsListByOrganizationResponse:
      type: array
      items:
        $ref: '#/components/schemas/TagView'
    TagsListByOrganization403Response:
      type: object
      properties: {}
      example: {}
    TagsListByOrganization404Response:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsDeleteSubscriberNotificationResponse:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsDeleteSubscriberNotification403Response:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsDeleteSubscriberNotification404Response:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsGetSubscriberNotificationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/SubscriberNotificationView'
    SubscriptionNotificationsGetSubscriberNotifications403Response:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsGetSubscriberNotifications404Response:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsGetRecipientsCountResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserView'
    SubscriptionNotificationsGetRecipientsCount403Response:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsGetRecipientsCount404Response:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsGetByIdResponse:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsGetById403Response:
      type: object
      properties: {}
      example: {}
    SubscriptionNotificationsGetById404Response:
      type: object
      properties: {}
      example: {}
    StoredFiltersGetUserFiltersResponse:
      type: array
      items:
        $ref: '#/components/schemas/StoredFilterResponse'
    StoredFiltersGetUserFilters404Response:
      type: array
      items:
        $ref: '#/components/schemas/StoredFilterResponse'
    SlAsListByOrganizationResponse:
      type: array
      items:
        $ref: '#/components/schemas/SLAViolationView'
    SlAsListByOrganization403Response:
      type: object
      properties: {}
      example: {}
    SlAsListByOrganization403Response1:
      type: object
    SlAsListByOrganization404Response:
      type: object
      properties: {}
      example: {}
    SlAsListByOrganization404Response1:
      type: object
    SlaViolationsListSummarizedResponse:
      type: object
      properties: {}
      example: {}
    SlaViolationsListSummarized404Response:
      type: object
      properties: {}
      example: {}
    SlaViolationsGetTotalRefundedAmountResponse:
      type: object
      properties: {}
      example: {}
    SlaViolationsGetTotalRefundedAmount404Response:
      type: object
      properties: {}
      example: {}
    SlaViolationsListByOrganizationResponse:
      type: array
      items:
        $ref: '#/components/schemas/SLAViolationView'
    SlaViolationsListByOrganization403Response:
      type: object
      properties: {}
      example: {}
    SlaViolationsListByOrganization404Response:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsListPaginatedSlaDefinitionsResponse:
      type: object
      properties: {}
      example: {}
    SlaDefinitionsListPaginatedSlaDefinitions404Response:
      type: object
      properties: {}
      example: {}
    SitesRemoveSiteResponse:
      type: object
      properties: {}
      example: {}
    SitesRemoveSite403Response:
      type: object
      properties: {}
      example: {}
    SitesRemoveSite404Response:
      type: object
      properties: {}
      example: {}
    SitesGetSiteByIdResponse:
      type: object
      properties: {}
      example: {}
    SitesGetSiteById404Response:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsGetPropertyNamesResponse:
      type: array
      items:
        type: string
    SiteProviderConfigurationsGetPropertyNames404Response:
      type: object
      properties: {}
      example: {}
    SiteProviderConfigurationsGetPropertyDescriptionsResponse:
      type: array
      items:
        type: string
    SiteProviderConfigurationsGetPropertyDescriptions404Response:
      type: object
      properties: {}
      example: {}
    ProductsGetTrialDataForOwnerResponse:
      type: object
      properties: {}
      example: {}
    ProductsGetTrialDataForOwner404Response:
      type: object
      properties: {}
      example: {}
    ProductsGetProductKeysResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductView'
    ProductsGetProductKeys403Response:
      type: object
      properties: {}
      example: {}
    ProductsGetProductKeys404Response:
      type: object
      properties: {}
      example: {}
    ProductsGetTrialDataForOwner200Response:
      type: array
      items:
        $ref: '#/components/schemas/ProductTrialView'
    ProductsGetTrialDataForOwner403Response:
      type: object
      properties: {}
      example: {}
    ProductsListSummarizedResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductSummaryView'
    ProductsListSummarized403Response:
      type: object
      properties: {}
      example: {}
    ProductsListSummarized404Response:
      type: object
      properties: {}
      example: {}
    ProductsGetById403Response:
      type: object
      properties: {}
      example: {}
    ProductsListSummarizedProductsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductSummaryView'
    ProductsListSummarizedProducts403Response:
      type: object
      properties: {}
      example: {}
    ProductsListSummarizedProducts404Response:
      type: object
      properties: {}
      example: {}
    ProductsSearchProductsResponse:
      type: object
      properties: {}
      example: {}
    ProductsSearchProducts404Response:
      type: object
      properties: {}
      example: {}
    ProductReportsGetAssetConsumerCountByProductResponse:
      type: integer
      format: int64
    ProductReportsGetAssetConsumerCountByProduct403Response:
      type: object
      properties: {}
      example: {}
    ProductReportsGetAssetConsumerCountByProduct404Response:
      type: object
      properties: {}
      example: {}
    ProductsListPagedProductsResponse:
      type: object
      properties: {}
      example: {}
    ProductsListPagedProducts404Response:
      type: object
      properties: {}
      example: {}
    ProductsGetMetricsForOrganizationResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductMetricsView'
    ProductsGetMetricsForOrganization403Response:
      type: object
      properties: {}
      example: {}
    ProductsGetMetricsForOrganization404Response:
      type: object
      properties: {}
      example: {}
    ProductsGetMetricsForOrganization200Response:
      type: array
      items:
        $ref: '#/components/schemas/ProductMetricsView'
    ProductsGetProductCountsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductCountsView'
    ProductsGetProductCounts403Response:
      type: object
      properties: {}
      example: {}
    ProductsGetProductCounts404Response:
      type: object
      properties: {}
      example: {}
    ProductsGetChangelogsByIdResponse:
      type: object
      properties: {}
      example: {}
    ProductsGetChangelogsById403Response:
      type: object
      properties: {}
      example: {}
    ProductsGetChangelogsById404Response:
      type: object
      properties: {}
      example: {}
    ProductFamilyGetById403Response:
      type: object
      properties: {}
      example: {}
    ProductFamilyListSummarizedPagedResponse:
      type: object
      properties: {}
      example: {}
    ProductFamilyListSummarizedPaged404Response:
      type: object
      properties: {}
      example: {}
    ProductFamilyListPagedResponse:
      type: object
      properties: {}
      example: {}
    ProductFamilyListPaged404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetLineItemsByIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/LineItemView'
    ProductKeysGetLineItemsById403Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetLineItemsById404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetSummarizedByKeyResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysGetSummarizedByKey404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysSearchProductKeysResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysSearchProductKeys404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetOrganizationKeysResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysGetOrganizationKeys404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetSummarizedEventsResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysGetSummarizedEvents403Response:
      type: object
    ProductKeysGetSummarizedEvents404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetSummarizedEvents404Response1:
      type: object
    ProductKeysSearchProductKeyEventsResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysSearchProductKeyEvents404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetEventsPagedResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysGetEventsPaged404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetUserKeysResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductKeyView'
    ProductKeysGetUserKeys403Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetUserKeys404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetUserKeys200Response:
      type: array
      items:
        $ref: '#/components/schemas/ProductKeyView'
    ProductKeysGetForUserPagedResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysGetForUserPaged404Response:
      type: object
      properties: {}
      example: {}
    ProductKeysGetAssociatedUserKeysResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysGetAssociatedUserKeys404Response:
      type: object
      properties: {}
      example: {}
    PricingRulesGetCostByAccountResponse:
      type: number
      format: double
    PricingRulesGetCostByAccount403Response:
      type: number
    PricingRulesGetCostByAccount404Response:
      type: number
    PricingRulesGetAllForOrganizationResponse:
      type: object
      properties: {}
      example: {}
    PricingRulesGetAllForOrganization404Response:
      type: object
      properties: {}
      example: {}
    PricingRulesGetLogsForOrganizationResponse:
      type: object
      properties: {}
      example: {}
    PricingRulesGetLogsForOrganization404Response:
      type: object
      properties: {}
      example: {}
    PlansListPagedResponse:
      type: object
      properties: {}
      example: {}
    PlansListPaged404Response:
      type: object
      properties: {}
      example: {}
    ElementsListPagedResponse:
      type: object
      properties: {}
      example: {}
    ElementsListPaged404Response:
      type: object
      properties: {}
      example: {}
    PaymentRecordGetResponse:
      type: object
      properties: {}
      example: {}
    PaymentListPagedPaymentRecordsResponse:
      type: object
      properties: {}
      example: {}
    PaymentListPagedPaymentRecords404Response:
      type: object
      properties: {}
      example: {}
    PaymentGetPaymentRecordsResponse:
      type: array
      items:
        $ref: '#/components/schemas/PaymentRecordView'
    PaymentGetPaymentRecords404Response:
      type: object
      properties: {}
      example: {}
    PaymentGetPaymentRecordResponse:
      type: array
      items:
        $ref: '#/components/schemas/PaymentRecordView'
    PaymentGetPaymentRecord404Response:
      type: object
      properties: {}
      example: {}
    PaymentMethodsDeleteCustomerResponse:
      type: object
      properties: {}
      example: {}
    PaymentMethodsDeleteCustomer403Response:
      type: object
      properties: {}
      example: {}
    PaymentMethodsDeleteCustomer404Response:
      type: object
      properties: {}
      example: {}
    PaymentMethodsGetCustomerDataResponse:
      type: object
      properties: {}
      example: {}
    PaymentMethodsGetCustomerData404Response:
      type: object
      properties: {}
      example: {}
    PaymentMethodsGetPaymentCustomerResponse:
      type: object
      properties: {}
      example: {}
    PaymentConfigurationsGetPropertyNamesResponse:
      type: array
      items:
        type: string
    PaymentConfigurationsGetPropertyNames404Response:
      type: object
      properties: {}
      example: {}
    OrganizationsGetProductKeysResponse:
      type: object
      properties: {}
      example: {}
    OrganizationsGetProductKeys404Response:
      type: object
      properties: {}
      example: {}
    OrganizationsGetProductKeys403Response:
      type: object
      properties: {}
      example: {}
    OrganizationsGetProductKeys403Response1:
      type: object
    OrganizationsGetProductKeys404Response1:
      type: object
    OrganizationsListPagedResponse:
      type: object
      properties: {}
      example: {}
    NotificationsSendMockUpdateNotificationResponse:
      type: string
    NotificationsSendMockSuccessfulPaymentNotificationResponse:
      type: string
    NotificationsSendMockReactivationNotificationResponse:
      type: string
    NotificationsMockQuotaWarningNotificationResponse:
      type: string
    NotificationsSendMockQuotaTierWarningNotificationResponse:
      type: string
    NotificationsSendMockInvoiceNotificationResponse:
      type: string
    NotificationsSendMockInvalidNotificationResponse:
      type: string
    NotificationsSendMockFreeTrialNotificationResponse:
      type: string
    NotificationsSendMockFailedPaymentNotificationResponse:
      type: string
    NotificationsSendMockUpdateNotification200Response:
      type: string
    NotificationsMockCreationNotificationResponse:
      type: string
    NotificationsSendMockActivationResponse:
      type: string
    NotificationProviderConfigurationsGetConnectivityStatusResponse:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsGetPropertyNamesResponse:
      type: array
      items:
        $ref: '#/components/schemas/NotificationProviderConfigurationView'
    NotificationProviderConfigurationsGetPropertyNames404Response:
      type: object
      properties: {}
      example: {}
    NotificationProviderConfigurationsGetPropertyDescriptionsResponse:
      type: array
      items:
        type: string
    NotificationProviderConfigurationsGetPropertyDescriptions404Response:
      type: object
      properties: {}
      example: {}
    NotificationCustomContentGetTemplatesForOrgResponse:
      type: array
      items:
        $ref: '#/components/schemas/NotificationTemplateView'
    NotificationCustomContentGetTemplatesForOrg404Response:
      type: object
      properties: {}
      example: {}
    InvoicesListForUserResponse:
      type: array
      items:
        $ref: '#/components/schemas/InvoiceView'
    InvoicesListForUser403Response:
      type: object
      properties: {}
      example: {}
    InvoicesListForUser404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetByIdResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetById403Response:
      type: object
    InvoicesGetById404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetById404Response1:
      type: object
    InvoicesGetById404Response2:
      type: object
    InvoicesGetRefundsByInvoiceResponse:
      type: array
      items:
        $ref: '#/components/schemas/RefundView'
    InvoicesGetRefundsByInvoice403Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetRefundsByInvoice404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetLineItemsByInvoiceResponse:
      type: array
      items:
        $ref: '#/components/schemas/LineItemView'
    InvoicesGetLineItemsByInvoice403Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetLineItemsByInvoice404Response:
      type: object
      properties: {}
      example: {}
    InvoicesListSummarizedByUserResponse:
      type: object
      properties: {}
      example: {}
    InvoicesListSummarizedByUser404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetUserInvoicesResponse:
      type: array
      items:
        $ref: '#/components/schemas/InvoiceView'
    InvoicesGetUserInvoices403Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetUserInvoices404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetRefundsForUserResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetRefundsForUser404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetUserRecentTransactionsResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetUserRecentTransactions404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetUserLineItemsResponse:
      type: array
      items:
        $ref: '#/components/schemas/LineItemView'
    InvoicesGetUserLineItems403Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetUserLineItems404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetLineItemsForUserPagedResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetLineItemsForUserPaged404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetSummarizedInvoiceResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetSummarizedInvoice404Response:
      type: object
      properties: {}
      example: {}
    InvoicesResetQuotasForSettlementPeriodResponse:
      type: object
      properties: {}
      example: {}
    InvoicesResetQuotasForSettlementPeriod403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendByAssetResponse:
      type: number
      format: double
    InvoiceReportsGetTotalSpendByAsset403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendByAsset404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalRequestsByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalRequestsByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopRequestsByConsumingOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopRequestsByConsumingOrganization403Response:
      type: object
    InvoiceReportsGetTopRequestsByConsumingOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopRequestsByConsumingOrganization404Response1:
      type: object
    InvoiceReportsGetTopProductsByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopProductsByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopProducerRequestsByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopProducerRequestsByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopRevenueGeneratingElementsResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopRevenueGeneratingElements404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopElementsByConsumingOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopElementsByConsumingOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumersIntervalResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumersInterval404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumerRevenueByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumerRevenueByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumerRequestsByProductKeyCreationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumerRequestsByProductKeyCreation403Response:
      type: object
    InvoiceReportsGetTopConsumerRequestsByProductKeyCreation404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumerRequestsByProductKeyCreation404Response1:
      type: object
    InvoiceReportsGetTopConsumerRequestsByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumerRequestsByOrganization403Response:
      type: object
    InvoiceReportsGetTopConsumerRequestsByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumerRequestsByOrganization404Response1:
      type: object
    InvoiceReportsGetTopConsumerRequestsOverIntervalResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumerRequestsOverInterval403Response:
      type: object
    InvoiceReportsGetTopConsumerRequestsOverInterval404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopConsumerRequestsOverInterval404Response1:
      type: object
    InvoiceReportsGetTopAssetsByProvidingOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopAssetsByProvidingOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopAssetsByProductResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopAssetsByProduct404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopAssetsByConsumingOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTopAssetsByConsumingOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendByUserResponse:
      type: number
      format: double
    InvoiceReportsGetTotalSpendByUser403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendByUser404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendByProductResponse:
      type: number
      format: double
    InvoiceReportsGetTotalSpendByProduct403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendByProduct404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetSpendByOrganizationResponse:
      type: number
      format: double
    InvoiceReportsGetSpendByOrganization403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetSpendByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendByAssetsResponse:
      type: number
      format: double
    InvoiceReportsGetTotalSpendByAssets403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendByAssets404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendByAsset200Response:
      type: number
      format: double
    InvoiceReportsGetChargesByIntervalResponse:
      type: string
    InvoiceReportsGetChargesByInterval403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetChargesByInterval404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsTotalChargeIntervalsResponse:
      type: string
    InvoiceReportsTotalChargeIntervals403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsTotalChargeIntervals404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetChargesByAssetResponse:
      type: string
    InvoiceReportsGetChargesByAsset403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetChargesByAsset404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetProductKeysWithoutActivityResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetProductKeysWithoutActivity403Response:
      type: object
    InvoiceReportsGetProductKeysWithoutActivity404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetProductKeysWithoutActivity404Response1:
      type: object
    InvoiceReportsGetMostEngagedConsumingOrganizationsResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetMostEngagedConsumingOrganizations403Response:
      type: object
    InvoiceReportsGetMostEngagedConsumingOrganizations404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetMostEngagedConsumingOrganizations404Response1:
      type: object
    InvoiceReportsGetMostEngagedConsumersResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetMostEngagedConsumers403Response:
      type: object
    InvoiceReportsGetMostEngagedConsumers404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetMostEngagedConsumers404Response1:
      type: object
    InvoiceReportsGetInactiveConsumersIntervalResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetInactiveConsumersInterval403Response:
      type: object
    InvoiceReportsGetInactiveConsumersInterval404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetInactiveConsumersInterval404Response1:
      type: object
    InvoiceReportsGetActiveProductKeyCountsOverIntervalResponse:
      type: number
      format: double
    InvoiceReportsGetActiveProductKeyCountsOverInterval403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetActiveProductKeyCountsOverInterval403Response1:
      type: object
    InvoiceReportsGetActiveProductKeyCountsOverInterval404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetActiveProductKeyCountsOverInterval404Response1:
      type: object
    InvoiceReportsGetConsumersByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetConsumersByOrganization403Response:
      type: object
    InvoiceReportsGetConsumersByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetConsumersByOrganization404Response1:
      type: object
    InvoiceReportsGetTotalCallCountForUserResponse:
      type: number
      format: double
    InvoiceReportsGetTotalCallCountForUser403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalCallCountForUser403Response1:
      type: object
    InvoiceReportsGetTotalCallCountForUser404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalCallCountForUser404Response1:
      type: object
    InvoiceReportsGetCallsByProductTotalResponse:
      type: number
      format: double
    InvoiceReportsGetCallsByProductTotal403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetCallsByProductTotal404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalCallCountForOrganizationResponse:
      type: number
      format: double
    InvoiceReportsGetTotalCallCountForOrganization403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalCallCountForOrganization403Response1:
      type: object
    InvoiceReportsGetTotalCallCountForOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalCallCountForOrganization404Response1:
      type: object
    InvoiceReportsGetTotalCallCountForProductUsageByClientOverIntervalResponse:
      type: number
      format: double
    InvoiceReportsGetTotalCallCountForProductUsageByClientOverInterval403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalCallCountForProductUsageByClientOverInterval404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetCallCountByClientAndAssetResponse:
      type: number
      format: double
    InvoiceReportsGetCallCountByClientAndAsset403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetCallCountByClientAndAsset403Response1:
      type: object
    InvoiceReportsGetCallCountByClientAndAsset404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetCallCountByClientAndAsset404Response1:
      type: object
    InvoiceReportsGetTotalCallsByAssetResponse:
      type: number
      format: double
    InvoiceReportsGetTotalCallsByAsset403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalCallsByAsset404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalAssetSpendByUserResponse:
      type: number
      format: double
    InvoiceReportsGetTotalAssetSpendByUser403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalAssetSpendByUser404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalAssetSpendForUserResponse:
      type: number
      format: double
    InvoiceReportsGetTotalAssetSpendForUser403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalAssetSpendForUser404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendOverIntervalResponse:
      type: number
      format: double
    InvoiceReportsGetTotalSpendOverInterval403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalSpendOverInterval404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalAssetSpendByOrganizationResponse:
      type: number
      format: double
    InvoiceReportsGetTotalAssetSpendByOrganization403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalAssetSpendByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalAssetCallsByUserResponse:
      type: number
      format: double
    InvoiceReportsGetTotalAssetCallsByUser403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalAssetCallsByUser404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetAssetCallCountByOrganizationResponse:
      type: number
      format: double
    InvoiceReportsGetAssetCallCountByOrganization403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetAssetCallCountByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetApplicationValuesByProductResponse:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetApplicationValuesByProduct404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalActiveProductKeyCountsResponse:
      type: number
      format: double
    InvoiceReportsGetTotalActiveProductKeyCounts403Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalActiveProductKeyCounts403Response1:
      type: object
    InvoiceReportsGetTotalActiveProductKeyCounts404Response:
      type: object
      properties: {}
      example: {}
    InvoiceReportsGetTotalActiveProductKeyCounts404Response1:
      type: object
    InvoicesGetTopConsumingProductKeysResponse:
      type: object
      properties: {}
      example: {}
    InvoicesListPagedResponse:
      type: object
      properties: {}
      example: {}
    InvoicesListPaged404Response:
      type: object
      properties: {}
      example: {}
    InvoicesListPagedRefundsResponse:
      type: object
      properties: {}
      example: {}
    InvoicesListPagedRefunds404Response:
      type: object
      properties: {}
      example: {}
    InvoicesListLineItemsPagedResponse:
      type: object
      properties: {}
      example: {}
    InvoicesListLineItemsPaged404Response:
      type: object
      properties: {}
      example: {}
    InvoicesListSummarizedByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoicesListSummarizedByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoicesListPagedByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoicesListPagedByOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetOrganizationRefundsResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetOrganizationRefunds404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetOrganizationRefundsCsvResponse:
      type: string
    InvoicesGetOrganizationRefundsCsv403Response:
      type: object
    InvoicesGetOrganizationRefundsCsv404Response:
      type: object
    InvoicesGetOrganizationTransactionsResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetOrganizationTransactions403Response:
      type: object
    InvoicesGetOrganizationTransactions404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetOrganizationTransactions404Response1:
      type: object
    InvoicesSearchRecentTransactionsResponse:
      type: object
      properties: {}
      example: {}
    InvoicesSearchRecentTransactions404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetOrganizationTransactions403Response1:
      type: object
      properties: {}
      example: {}
    InvoicesGetLineItemsForOrganizationResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetLineItemsForOrganization404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGenerateInvoiceResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGenerateInvoice403Response:
      type: object
      properties: {}
      example: {}
    InvoicesGenerateInvoice404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetChargeCalculationLogResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetChargeCalculationLog404Response:
      type: object
      properties: {}
      example: {}
    InvoicesGetTopConsumedApisResponse:
      type: object
      properties: {}
      example: {}
    InvoicesGetTopConsumedApis404Response:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsGetPropertyNamesResponse:
      type: array
      items:
        type: string
    IdentityProviderConfigurationsGetPropertyNames404Response:
      type: object
      properties: {}
      example: {}
    IdentityProviderConfigurationsGetPropertyDescriptionsResponse:
      type: array
      items:
        type: string
    IdentityProviderConfigurationsGetPropertyDescriptions404Response:
      type: object
      properties: {}
      example: {}
    HubspotGetTokenResponse:
      type: string
    HubspotGetToken404Response:
      type: object
      properties: {}
      example: {}
    FeaturesListPagedFeaturesResponse:
      type: object
      properties: {}
      example: {}
    FeaturesListPagedFeatures404Response:
      type: object
      properties: {}
      example: {}
    ExportConfigurationsGetPropertyNamesResponse:
      type: array
      items:
        type: string
    ExportConfigurationsGetPropertyNames404Response:
      type: object
      properties: {}
      example: {}
    EnvironmentsListByOrganizationResponse:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentView'
    EnvironmentsListByOrganization403Response:
      type: object
      properties: {}
      example: {}
    EnvironmentsListByOrganization404Response:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsGetConnectivityStatusResponse:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsGetConnectivityStatus404Response:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsGetDataProviderQueriesResponse:
      type: array
      items:
        $ref: '#/components/schemas/ConsumerDataProviderQueryView'
    ConsumerDataProviderConfigurationsGetPropertyNamesResponse:
      type: array
      items:
        $ref: '#/components/schemas/ConsumerDataProviderQueryView'
    ConsumerDataProviderConfigurationsGetPropertyNames404Response:
      type: object
      properties: {}
      example: {}
    ConsumerDataProviderConfigurationsGetPropertyDescriptionsResponse:
      type: array
      items:
        type: string
    ConsumerDataProviderConfigurationsGetPropertyDescriptions404Response:
      type: object
      properties: {}
      example: {}
    InternalSystemAuditTrailListEventMetadataResponse:
      type: object
      properties: {}
      example: {}
    InternalSystemAuditTrailListEventMetadata404Response:
      type: object
      properties: {}
      example: {}
    InternalSystemAuditTrailListEventsResponse:
      type: object
      properties: {}
      example: {}
    InternalSystemAuditTrailListEvents404Response:
      type: object
      properties: {}
      example: {}
    ExternalSystemAuditTrailListEventMetadataResponse:
      type: object
      properties: {}
      example: {}
    ExternalSystemAuditTrailListEventMetadata404Response:
      type: object
      properties: {}
      example: {}
    ExternalSystemAuditTrailListEventsResponse:
      type: object
      properties: {}
      example: {}
    ExternalSystemAuditTrailListEvents404Response:
      type: object
      properties: {}
      example: {}
    AssetsListSummarizedResponse:
      type: object
      properties: {}
      example: {}
    AssetsListSummarized404Response:
      type: object
      properties: {}
      example: {}
    AssetsSearchOperationResponse:
      type: object
      properties: {}
      example: {}
    AssetsSearchOperation404Response:
      type: object
      properties: {}
      example: {}
    AssetReportsListSlaViolationsBySlaAndDateRangeResponse:
      type: object
      properties: {}
      example: {}
    AssetReportsListSlaViolationsBySlaAndDateRange404Response:
      type: object
      properties: {}
      example: {}
    AssetReportsGetSlaViolationsByOwnerAndDateRangeResponse:
      type: array
      items:
        $ref: '#/components/schemas/SLAViolationView'
    AssetReportsGetSlaViolationsByOwnerAndDateRange403Response:
      type: object
      properties: {}
      example: {}
    AssetReportsGetSlaViolationsByOwnerAndDateRange404Response:
      type: object
      properties: {}
      example: {}
    AssetReportsListSlaViolationsByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    AssetReportsListSlaViolationsByOrganization404Response:
      type: object
      properties: {}
      example: {}
    AssetReportsGetSlaViolationsByConsumerAndDateRangeResponse:
      type: array
      items:
        $ref: '#/components/schemas/SLAViolationView'
    AssetReportsGetSlaViolationsByConsumerAndDateRange403Response:
      type: object
      properties: {}
      example: {}
    AssetReportsGetSlaViolationsByConsumerAndDateRange404Response:
      type: object
      properties: {}
      example: {}
    AssetReportsCountSlaViolationsByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    AssetReportsCountSlaViolationsByOrganization404Response:
      type: object
      properties: {}
      example: {}
    AssetsListPagedResponse:
      type: object
      properties: {}
      example: {}
    AssetsListPaged404Response:
      type: object
      properties: {}
      example: {}
    AssetsGetUnclassifiedMetadataResponse:
      type: object
      properties: {}
      example: {}
    AssetsGetUnclassifiedMetadata403Response:
      type: object
      properties: {}
      example: {}
    AssetsGetUnclassifiedMetadata404Response:
      type: object
      properties: {}
      example: {}
    AssetsGetChangelogsByIdResponse:
      type: object
      properties: {}
      example: {}
    AssetsGetChangelogsById403Response:
      type: object
      properties: {}
      example: {}
    AssetsGetChangelogsById404Response:
      type: object
      properties: {}
      example: {}
    AssetsListOwnedByOrganizationResponse:
      type: object
      properties: {}
      example: {}
    AssetsListOwnedByOrganization403Response:
      type: object
      properties: {}
      example: {}
    AssetsListOwnedByOrganization404Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsGetTotalTransactionCountResponse:
      type: number
      format: double
    AssetMetricsGetTotalTransactionCount403Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsGetTopApplicationsByTotalRequestsResponse:
      type: number
      format: double
    AssetMetricsGetTopApplicationsByTotalRequests403Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsGetRequestPercentageByResponseTypeResponse:
      type: number
      format: double
    AssetMetricsGetRequestPercentageByResponseType403Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsListRecentAnalyticsTransactionResponse:
      type: object
      properties: {}
      example: {}
    AssetMetricsListRecentAnalyticsTransaction403Response:
      type: object
    AssetMetricsListRecentAnalyticsTransaction404Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsListRecentAnalyticsTransaction404Response1:
      type: object
    AssetMetricsListDerivedAssetMetricsResponse:
      type: object
      properties: {}
      example: {}
    AssetMetricsListDerivedAssetMetrics404Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsListDerivedAssetMetrics403Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsGetApiLatenciesByPeriodResponse:
      type: number
      format: double
    AssetMetricsGetApiLatenciesByPeriod403Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsGetLatenciesByOrganizationResponse:
      type: number
      format: double
    AssetMetricsGetLatenciesByOrganization403Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsGetApiLatenciesByApiResponse:
      type: number
      format: double
    AssetMetricsGetApiLatenciesByApi403Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsListDerivedGroupedMetricsResponse:
      type: object
      properties: {}
      example: {}
    AssetMetricsListDerivedGroupedMetrics404Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsGetApiErrorByPeriodResponse:
      type: number
      format: double
    AssetMetricsGetApiErrorByPeriod403Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsGetApiErrorByOrganizationResponse:
      type: number
      format: double
    AssetMetricsGetApiErrorByOrganization403Response:
      type: object
      properties: {}
      example: {}
    AssetMetricsGetApiErrorByApiResponse:
      type: number
      format: double
    AssetMetricsGetApiErrorByApi403Response:
      type: object
      properties: {}
      example: {}
    ApplicationsDeleteApplicationResponse:
      type: object
      properties: {}
      example: {}
    ApplicationsDeleteApplication403Response:
      type: object
      properties: {}
      example: {}
    ApplicationsDeleteApplication404Response:
      type: object
      properties: {}
      example: {}
    ApplicationsGetApplicationByIdResponse:
      type: object
      properties: {}
      example: {}
    ApplicationsGetApplicationById404Response:
      type: object
      properties: {}
      example: {}
    ApplicationsListSummarizedApplicationsResponse:
      type: object
      properties: {}
      example: {}
    ApplicationsListSummarizedApplications404Response:
      type: object
      properties: {}
      example: {}
    ApplicationsGetSummarizedApplicationResponse:
      type: object
      properties: {}
      example: {}
    ApplicationsGetSummarizedApplication404Response:
      type: object
      properties: {}
      example: {}
    ApplicationsFindApplicationsResponse:
      type: object
      properties: {}
      example: {}
    ApplicationsFindApplications404Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsGetConnectivityStatusResponse:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsGetConnectivityStatus404Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsGetPropertyNamesResponse:
      type: array
      items:
        type: string
    ApiManagementConfigurationsGetPropertyNames404Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsGetPropertyDescriptionsResponse:
      type: array
      items:
        type: string
    ApiManagementConfigurationsGetPropertyDescriptions404Response:
      type: object
      properties: {}
      example: {}
    ApiManagementConfigurationsGetConnectivityStatus403Response:
      type: object
      properties: {}
      example: {}
    AccountTiersGetTierByIdResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersListAllProductsResponse:
      type: object
      properties: {}
      example: {}
    AccountTiersGetCurrentUserTierResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysDeactivateKeyResponse:
      type: object
      properties: {}
      example: {}
    ProductKeysDeactivateKey403Response:
      type: object
      properties: {}
      example: {}
    ProductKeysDeactivateKey404Response:
      type: object
      properties: {}
      example: {}
    PaymentMethodsDeleteCustomerMethodResponse:
      type: object
      properties: {}
      example: {}
    ApiKeysDeleteOperationResponse:
      type: object
      properties: {}
      example: {}
    ApiKeysDeleteOperation403Response:
      type: object
      properties: {}
      example: {}
    ApiKeysDeleteOperation404Response:
      type: object
      properties: {}
      example: {}
    AccountTiersDeletePaymentMethodsResponse:
      type: object
      properties: {}
      example: {}
    EventsSaveApiEventResponse:
      type: object
      properties: {}
      example: {}
    MetringValidateProductKeyResponse:
      type: object
      properties: {}
      example: {}
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
    x-api-key:
      type: apiKey
      name: x-api-key
      in: header
security:
  - api_key: []
externalDocs:
  description: Revenium Metering API
  url: https://revenium.io
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 65bd671b308e970016d90d9f
